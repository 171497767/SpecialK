; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\steam\remote_storage.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?SteamAPI_ISteamClient_GetISteamRemoteStorage_Original@@3P6APAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@ZA ; SteamAPI_ISteamClient_GetISteamRemoteStorage_Original
_BSS	SEGMENT
?SteamAPI_ISteamClient_GetISteamRemoteStorage_Original@@3P6APAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@ZA DD 01H DUP (?) ; SteamAPI_ISteamClient_GetISteamRemoteStorage_Original
_BSS	ENDS
CONST	SEGMENT
$SG166950 DB	'SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour', 00H
$SG166951 DB	'[', 00H, '!', 00H, ']', 00H, ' ', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, ' ', 00H, '(', 00H, '.', 00H, '.', 00H, '.', 00H, ','
	DB	00H, ' ', 00H, '%', 00H, 'h', 00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG166955 DB	'STEAMREMOTESTORAGE_INTERFACE_VERSION012', 00H
$SG166961 DB	'STEAMREMOTESTORAGE_INTERFACE_VERSION014', 00H
	ORG $+4
$SG166966 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'e', 00H, 'x', 00H
	DB	'p', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r'
	DB	00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'h', 00H, 's', 00H, ')', 00H, '!', 00H, 00H, 00H
	ORG $+2
$SG166994 DB	'SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage', 00H
	ORG $+3
$SG166995 DB	'[', 00H, '!', 00H, ']', 00H, ' ', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, ' ', 00H, '(', 00H, '.', 00H, '.', 00H, '.', 00H, ','
	DB	00H, ' ', 00H, '%', 00H, 'h', 00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG166999 DB	'STEAMREMOTESTORAGE_INTERFACE_VERSION012', 00H
$SG167005 DB	'STEAMREMOTESTORAGE_INTERFACE_VERSION014', 00H
$SG167010 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'e', 00H, 'x', 00H
	DB	'p', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r'
	DB	00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'h', 00H, 's', 00H, ')', 00H, '!', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0ISteamRemoteStorage@@QAE@XZ			; ISteamRemoteStorage::ISteamRemoteStorage
PUBLIC	?_Hash_seq@std@@YAIPBEI@Z			; std::_Hash_seq
PUBLIC	??0exception@std@@QAE@QBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0logic_error@std@@QAE@PBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??0out_of_range@std@@QAE@PBD@Z			; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	?_Reverse_byte@details@Concurrency@@YAEE@Z	; Concurrency::details::_Reverse_byte
PUBLIC	?_Get_msb@details@Concurrency@@YAEI@Z		; Concurrency::details::_Get_msb
PUBLIC	??0?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
PUBLIC	??0?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
PUBLIC	??0?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@QAE@ABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@@Z ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>
PUBLIC	??0?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QAE@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@@Z ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >
PUBLIC	??R?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::operator()
PUBLIC	??R?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QBE_NABQAVISteamRemoteStorage@@0@Z ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::operator()
PUBLIC	??R?$_Bitwise_hash@PAVISteamRemoteStorage@@@std@@QBEIABQAVISteamRemoteStorage@@@Z ; std::_Bitwise_hash<ISteamRemoteStorage *>::operator()
PUBLIC	??R?$equal_to@PAVISteamRemoteStorage@@@std@@QBE_NABQAVISteamRemoteStorage@@0@Z ; std::equal_to<ISteamRemoteStorage *>::operator()
PUBLIC	??0?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
PUBLIC	?deallocate@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@I@Z ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::deallocate
PUBLIC	?allocate@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@I@Z ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::allocate
PUBLIC	??0?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
PUBLIC	??1?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
PUBLIC	?_Buynode@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@I@Z ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Buynode
PUBLIC	?_Nextnode@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAAAPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAU4523@@Z ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Nextnode
PUBLIC	?_Myval@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@@Z ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Myval
PUBLIC	??0?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
PUBLIC	??1?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
PUBLIC	?clear@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXXZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::clear
PUBLIC	?end@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::end
PUBLIC	?end@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::end
PUBLIC	?_Begin@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Begin
PUBLIC	?_End@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_End
PUBLIC	?_End@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_End
PUBLIC	?_Get_key@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAIABV?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_key
PUBLIC	?_Get_iterator@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_iterator
PUBLIC	?_Get_iterator@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@V?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_iterator
PUBLIC	?_Erase@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Erase
PUBLIC	?_Insert@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAU4523@00@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert
PUBLIC	?_Insert@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@5@0PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAJ@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert
PUBLIC	?_Insert_dummy@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@V45@I@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert_dummy
PUBLIC	?_Check_range@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@AAEXXZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Check_range
PUBLIC	??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
PUBLIC	??1?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@XZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::~_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
PUBLIC	?_Segment_index_of@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_index_of
PUBLIC	?_Segment_base@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_base
PUBLIC	?_Segment_size@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_size
PUBLIC	?end@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::end
PUBLIC	?end@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::end
PUBLIC	?find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::find
PUBLIC	?count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::count
PUBLIC	?unsafe_max_bucket_count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIXZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::unsafe_max_bucket_count
PUBLIC	?rehash@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAEXI@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::rehash
PUBLIC	?_Init@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXXZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Init
PUBLIC	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
PUBLIC	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
PUBLIC	?_Initialize_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXI@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Initialize_bucket
PUBLIC	?_Adjust_table_size@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXII@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Adjust_table_size
PUBLIC	?_Get_parent@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Get_parent
PUBLIC	?_Get_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@I@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Get_bucket
PUBLIC	?_Set_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXIV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Set_bucket
PUBLIC	?_Is_initialized@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE_NI@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Is_initialized
PUBLIC	?_Reverse@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Reverse
PUBLIC	?_Split_order_regular_key@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Split_order_regular_key
PUBLIC	?_Split_order_dummy_key@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Split_order_dummy_key
PUBLIC	??0?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
PUBLIC	?deallocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::deallocate
PUBLIC	?allocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocate
PUBLIC	??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
PUBLIC	??A?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAEAAPAVIWrapSteamRemoteStorage@@ABQAVISteamRemoteStorage@@@Z ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::operator[]
PUBLIC	??1?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@XZ ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
PUBLIC	??0IWrapSteamRemoteStorage012@@QAE@PAVISteamRemoteStorage@@@Z ; IWrapSteamRemoteStorage012::IWrapSteamRemoteStorage012
PUBLIC	?FileWrite@IWrapSteamRemoteStorage012@@UAE_NPBDPBXH@Z ; IWrapSteamRemoteStorage012::FileWrite
PUBLIC	?FileRead@IWrapSteamRemoteStorage012@@UAEHPBDPAXH@Z ; IWrapSteamRemoteStorage012::FileRead
PUBLIC	?FileForget@IWrapSteamRemoteStorage012@@UAE_NPBD@Z ; IWrapSteamRemoteStorage012::FileForget
PUBLIC	?FileDelete@IWrapSteamRemoteStorage012@@UAE_NPBD@Z ; IWrapSteamRemoteStorage012::FileDelete
PUBLIC	?FileShare@IWrapSteamRemoteStorage012@@UAE_KPBD@Z ; IWrapSteamRemoteStorage012::FileShare
PUBLIC	?SetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE_NPBDW4ERemoteStoragePlatform@@@Z ; IWrapSteamRemoteStorage012::SetSyncPlatforms
PUBLIC	?FileWriteStreamOpen@IWrapSteamRemoteStorage012@@UAE_KPBD@Z ; IWrapSteamRemoteStorage012::FileWriteStreamOpen
PUBLIC	?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage012@@UAE_N_KPBXH@Z ; IWrapSteamRemoteStorage012::FileWriteStreamWriteChunk
PUBLIC	?FileWriteStreamClose@IWrapSteamRemoteStorage012@@UAE_N_K@Z ; IWrapSteamRemoteStorage012::FileWriteStreamClose
PUBLIC	?FileWriteStreamCancel@IWrapSteamRemoteStorage012@@UAE_N_K@Z ; IWrapSteamRemoteStorage012::FileWriteStreamCancel
PUBLIC	?FileExists@IWrapSteamRemoteStorage012@@UAE_NPBD@Z ; IWrapSteamRemoteStorage012::FileExists
PUBLIC	?FilePersisted@IWrapSteamRemoteStorage012@@UAE_NPBD@Z ; IWrapSteamRemoteStorage012::FilePersisted
PUBLIC	?GetFileSize@IWrapSteamRemoteStorage012@@UAEHPBD@Z ; IWrapSteamRemoteStorage012::GetFileSize
PUBLIC	?GetFileTimestamp@IWrapSteamRemoteStorage012@@UAE_JPBD@Z ; IWrapSteamRemoteStorage012::GetFileTimestamp
PUBLIC	?GetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE?AW4ERemoteStoragePlatform@@PBD@Z ; IWrapSteamRemoteStorage012::GetSyncPlatforms
PUBLIC	?GetFileCount@IWrapSteamRemoteStorage012@@UAEHXZ ; IWrapSteamRemoteStorage012::GetFileCount
PUBLIC	?GetFileNameAndSize@IWrapSteamRemoteStorage012@@UAEPBDHPAH@Z ; IWrapSteamRemoteStorage012::GetFileNameAndSize
PUBLIC	?GetQuota@IWrapSteamRemoteStorage012@@UAE_NPAH0@Z ; IWrapSteamRemoteStorage012::GetQuota
PUBLIC	?IsCloudEnabledForAccount@IWrapSteamRemoteStorage012@@UAE_NXZ ; IWrapSteamRemoteStorage012::IsCloudEnabledForAccount
PUBLIC	?IsCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAE_NXZ ; IWrapSteamRemoteStorage012::IsCloudEnabledForApp
PUBLIC	?SetCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAEX_N@Z ; IWrapSteamRemoteStorage012::SetCloudEnabledForApp
PUBLIC	?UGCDownload@IWrapSteamRemoteStorage012@@UAE_K_KI@Z ; IWrapSteamRemoteStorage012::UGCDownload
PUBLIC	?GetUGCDownloadProgress@IWrapSteamRemoteStorage012@@UAE_N_KPAH1@Z ; IWrapSteamRemoteStorage012::GetUGCDownloadProgress
PUBLIC	?GetUGCDetails@IWrapSteamRemoteStorage012@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z ; IWrapSteamRemoteStorage012::GetUGCDetails
PUBLIC	?UGCRead@IWrapSteamRemoteStorage012@@UAEH_KPAXHIW4EUGCReadAction@@@Z ; IWrapSteamRemoteStorage012::UGCRead
PUBLIC	?GetCachedUGCCount@IWrapSteamRemoteStorage012@@UAEHXZ ; IWrapSteamRemoteStorage012::GetCachedUGCCount
PUBLIC	?GetCachedUGCHandle@IWrapSteamRemoteStorage012@@UAE_KH@Z ; IWrapSteamRemoteStorage012::GetCachedUGCHandle
PUBLIC	?PublishWorkshopFile@IWrapSteamRemoteStorage012@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z ; IWrapSteamRemoteStorage012::PublishWorkshopFile
PUBLIC	?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage012@@UAE_K_K@Z ; IWrapSteamRemoteStorage012::CreatePublishedFileUpdateRequest
PUBLIC	?UpdatePublishedFileFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage012::UpdatePublishedFileFile
PUBLIC	?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage012::UpdatePublishedFilePreviewFile
PUBLIC	?UpdatePublishedFileTitle@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage012::UpdatePublishedFileTitle
PUBLIC	?UpdatePublishedFileDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage012::UpdatePublishedFileDescription
PUBLIC	?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage012@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z ; IWrapSteamRemoteStorage012::UpdatePublishedFileVisibility
PUBLIC	?UpdatePublishedFileTags@IWrapSteamRemoteStorage012@@UAE_N_KPAUSteamParamStringArray_t@@@Z ; IWrapSteamRemoteStorage012::UpdatePublishedFileTags
PUBLIC	?CommitPublishedFileUpdate@IWrapSteamRemoteStorage012@@UAE_K_K@Z ; IWrapSteamRemoteStorage012::CommitPublishedFileUpdate
PUBLIC	?GetPublishedFileDetails@IWrapSteamRemoteStorage012@@UAE_K_KI@Z ; IWrapSteamRemoteStorage012::GetPublishedFileDetails
PUBLIC	?DeletePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z ; IWrapSteamRemoteStorage012::DeletePublishedFile
PUBLIC	?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z ; IWrapSteamRemoteStorage012::EnumerateUserPublishedFiles
PUBLIC	?SubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z ; IWrapSteamRemoteStorage012::SubscribePublishedFile
PUBLIC	?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z ; IWrapSteamRemoteStorage012::EnumerateUserSubscribedFiles
PUBLIC	?UnsubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z ; IWrapSteamRemoteStorage012::UnsubscribePublishedFile
PUBLIC	?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage012::UpdatePublishedFileSetChangeDescription
PUBLIC	?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z ; IWrapSteamRemoteStorage012::GetPublishedItemVoteDetails
PUBLIC	?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage012@@UAE_K_K_N@Z ; IWrapSteamRemoteStorage012::UpdateUserPublishedItemVote
PUBLIC	?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z ; IWrapSteamRemoteStorage012::GetUserPublishedItemVoteDetails
PUBLIC	?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z ; IWrapSteamRemoteStorage012::EnumerateUserSharedWorkshopFiles
PUBLIC	?PublishVideo@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z ; IWrapSteamRemoteStorage012::PublishVideo
PUBLIC	?SetUserPublishedFileAction@IWrapSteamRemoteStorage012@@UAE_K_KW4EWorkshopFileAction@@@Z ; IWrapSteamRemoteStorage012::SetUserPublishedFileAction
PUBLIC	?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopFileAction@@I@Z ; IWrapSteamRemoteStorage012::EnumeratePublishedFilesByUserAction
PUBLIC	?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z ; IWrapSteamRemoteStorage012::EnumeratePublishedWorkshopFiles
PUBLIC	?UGCDownloadToLocation@IWrapSteamRemoteStorage012@@UAE_K_KPBDI@Z ; IWrapSteamRemoteStorage012::UGCDownloadToLocation
PUBLIC	??0ISteamRemoteStorage014@@QAE@XZ		; ISteamRemoteStorage014::ISteamRemoteStorage014
PUBLIC	??0IWrapSteamRemoteStorage014@@QAE@PAVISteamRemoteStorage014@@@Z ; IWrapSteamRemoteStorage014::IWrapSteamRemoteStorage014
PUBLIC	?FileWrite@IWrapSteamRemoteStorage014@@UAE_NPBDPBXH@Z ; IWrapSteamRemoteStorage014::FileWrite
PUBLIC	?FileRead@IWrapSteamRemoteStorage014@@UAEHPBDPAXH@Z ; IWrapSteamRemoteStorage014::FileRead
PUBLIC	?FileWriteAsync@IWrapSteamRemoteStorage014@@UAE_KPBDPBXI@Z ; IWrapSteamRemoteStorage014::FileWriteAsync
PUBLIC	?FileReadAsync@IWrapSteamRemoteStorage014@@UAE_KPBDII@Z ; IWrapSteamRemoteStorage014::FileReadAsync
PUBLIC	?FileReadAsyncComplete@IWrapSteamRemoteStorage014@@UAE_N_KPAXI@Z ; IWrapSteamRemoteStorage014::FileReadAsyncComplete
PUBLIC	?FileForget@IWrapSteamRemoteStorage014@@UAE_NPBD@Z ; IWrapSteamRemoteStorage014::FileForget
PUBLIC	?FileDelete@IWrapSteamRemoteStorage014@@UAE_NPBD@Z ; IWrapSteamRemoteStorage014::FileDelete
PUBLIC	?FileShare@IWrapSteamRemoteStorage014@@UAE_KPBD@Z ; IWrapSteamRemoteStorage014::FileShare
PUBLIC	?SetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE_NPBDW4ERemoteStoragePlatform@@@Z ; IWrapSteamRemoteStorage014::SetSyncPlatforms
PUBLIC	?FileWriteStreamOpen@IWrapSteamRemoteStorage014@@UAE_KPBD@Z ; IWrapSteamRemoteStorage014::FileWriteStreamOpen
PUBLIC	?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage014@@UAE_N_KPBXH@Z ; IWrapSteamRemoteStorage014::FileWriteStreamWriteChunk
PUBLIC	?FileWriteStreamClose@IWrapSteamRemoteStorage014@@UAE_N_K@Z ; IWrapSteamRemoteStorage014::FileWriteStreamClose
PUBLIC	?FileWriteStreamCancel@IWrapSteamRemoteStorage014@@UAE_N_K@Z ; IWrapSteamRemoteStorage014::FileWriteStreamCancel
PUBLIC	?FileExists@IWrapSteamRemoteStorage014@@UAE_NPBD@Z ; IWrapSteamRemoteStorage014::FileExists
PUBLIC	?FilePersisted@IWrapSteamRemoteStorage014@@UAE_NPBD@Z ; IWrapSteamRemoteStorage014::FilePersisted
PUBLIC	?GetFileSize@IWrapSteamRemoteStorage014@@UAEHPBD@Z ; IWrapSteamRemoteStorage014::GetFileSize
PUBLIC	?GetFileTimestamp@IWrapSteamRemoteStorage014@@UAE_JPBD@Z ; IWrapSteamRemoteStorage014::GetFileTimestamp
PUBLIC	?GetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE?AW4ERemoteStoragePlatform@@PBD@Z ; IWrapSteamRemoteStorage014::GetSyncPlatforms
PUBLIC	?GetFileCount@IWrapSteamRemoteStorage014@@UAEHXZ ; IWrapSteamRemoteStorage014::GetFileCount
PUBLIC	?GetFileNameAndSize@IWrapSteamRemoteStorage014@@UAEPBDHPAH@Z ; IWrapSteamRemoteStorage014::GetFileNameAndSize
PUBLIC	?GetQuota@IWrapSteamRemoteStorage014@@UAE_NPA_K0@Z ; IWrapSteamRemoteStorage014::GetQuota
PUBLIC	?IsCloudEnabledForAccount@IWrapSteamRemoteStorage014@@UAE_NXZ ; IWrapSteamRemoteStorage014::IsCloudEnabledForAccount
PUBLIC	?IsCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAE_NXZ ; IWrapSteamRemoteStorage014::IsCloudEnabledForApp
PUBLIC	?SetCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAEX_N@Z ; IWrapSteamRemoteStorage014::SetCloudEnabledForApp
PUBLIC	?UGCDownload@IWrapSteamRemoteStorage014@@UAE_K_KI@Z ; IWrapSteamRemoteStorage014::UGCDownload
PUBLIC	?GetUGCDownloadProgress@IWrapSteamRemoteStorage014@@UAE_N_KPAH1@Z ; IWrapSteamRemoteStorage014::GetUGCDownloadProgress
PUBLIC	?GetUGCDetails@IWrapSteamRemoteStorage014@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z ; IWrapSteamRemoteStorage014::GetUGCDetails
PUBLIC	?UGCRead@IWrapSteamRemoteStorage014@@UAEH_KPAXHIW4EUGCReadAction@@@Z ; IWrapSteamRemoteStorage014::UGCRead
PUBLIC	?GetCachedUGCCount@IWrapSteamRemoteStorage014@@UAEHXZ ; IWrapSteamRemoteStorage014::GetCachedUGCCount
PUBLIC	?GetCachedUGCHandle@IWrapSteamRemoteStorage014@@UAE_KH@Z ; IWrapSteamRemoteStorage014::GetCachedUGCHandle
PUBLIC	?PublishWorkshopFile@IWrapSteamRemoteStorage014@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z ; IWrapSteamRemoteStorage014::PublishWorkshopFile
PUBLIC	?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage014@@UAE_K_K@Z ; IWrapSteamRemoteStorage014::CreatePublishedFileUpdateRequest
PUBLIC	?UpdatePublishedFileFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage014::UpdatePublishedFileFile
PUBLIC	?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage014::UpdatePublishedFilePreviewFile
PUBLIC	?UpdatePublishedFileTitle@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage014::UpdatePublishedFileTitle
PUBLIC	?UpdatePublishedFileDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage014::UpdatePublishedFileDescription
PUBLIC	?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage014@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z ; IWrapSteamRemoteStorage014::UpdatePublishedFileVisibility
PUBLIC	?UpdatePublishedFileTags@IWrapSteamRemoteStorage014@@UAE_N_KPAUSteamParamStringArray_t@@@Z ; IWrapSteamRemoteStorage014::UpdatePublishedFileTags
PUBLIC	?CommitPublishedFileUpdate@IWrapSteamRemoteStorage014@@UAE_K_K@Z ; IWrapSteamRemoteStorage014::CommitPublishedFileUpdate
PUBLIC	?GetPublishedFileDetails@IWrapSteamRemoteStorage014@@UAE_K_KI@Z ; IWrapSteamRemoteStorage014::GetPublishedFileDetails
PUBLIC	?DeletePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z ; IWrapSteamRemoteStorage014::DeletePublishedFile
PUBLIC	?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z ; IWrapSteamRemoteStorage014::EnumerateUserPublishedFiles
PUBLIC	?SubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z ; IWrapSteamRemoteStorage014::SubscribePublishedFile
PUBLIC	?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z ; IWrapSteamRemoteStorage014::EnumerateUserSubscribedFiles
PUBLIC	?UnsubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z ; IWrapSteamRemoteStorage014::UnsubscribePublishedFile
PUBLIC	?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ; IWrapSteamRemoteStorage014::UpdatePublishedFileSetChangeDescription
PUBLIC	?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z ; IWrapSteamRemoteStorage014::GetPublishedItemVoteDetails
PUBLIC	?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage014@@UAE_K_K_N@Z ; IWrapSteamRemoteStorage014::UpdateUserPublishedItemVote
PUBLIC	?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z ; IWrapSteamRemoteStorage014::GetUserPublishedItemVoteDetails
PUBLIC	?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z ; IWrapSteamRemoteStorage014::EnumerateUserSharedWorkshopFiles
PUBLIC	?PublishVideo@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z ; IWrapSteamRemoteStorage014::PublishVideo
PUBLIC	?SetUserPublishedFileAction@IWrapSteamRemoteStorage014@@UAE_K_KW4EWorkshopFileAction@@@Z ; IWrapSteamRemoteStorage014::SetUserPublishedFileAction
PUBLIC	?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopFileAction@@I@Z ; IWrapSteamRemoteStorage014::EnumeratePublishedFilesByUserAction
PUBLIC	?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z ; IWrapSteamRemoteStorage014::EnumeratePublishedWorkshopFiles
PUBLIC	?UGCDownloadToLocation@IWrapSteamRemoteStorage014@@UAE_K_KPBDI@Z ; IWrapSteamRemoteStorage014::UGCDownloadToLocation
PUBLIC	?SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z ; SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour
PUBLIC	?SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z ; SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage
PUBLIC	??0?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QAE@XZ ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>
PUBLIC	??0?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>
PUBLIC	?_Mynode@?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QBEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@XZ ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@XZ ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
PUBLIC	??0?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
PUBLIC	??D?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBEABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@XZ ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*
PUBLIC	??E?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEAAV01@XZ ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
PUBLIC	??E?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE?AV01@H@Z ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
PUBLIC	??8?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBE_NABV01@@Z ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator==
PUBLIC	??9?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBE_NABV01@@Z ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator!=
PUBLIC	??0?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@@Z ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
PUBLIC	??D?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QBEABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@XZ ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*
PUBLIC	??E?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAEAAV012@XZ ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
PUBLIC	??E?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE?AV012@H@Z ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
PUBLIC	??$_Key_function@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@SAABQAVISteamRemoteStorage@@ABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Key_function<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>
PUBLIC	??0?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@XZ ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
PUBLIC	??0?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
PUBLIC	??D?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBEAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@XZ ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*
PUBLIC	??E?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEAAV01@XZ ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
PUBLIC	??E?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE?AV01@H@Z ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
PUBLIC	??$destroy@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::destroy<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
PUBLIC	??0?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@@Z ; Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
PUBLIC	??D?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QBEAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@XZ ; Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*
PUBLIC	??$make_pair@ABQAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@YA?AU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@ABQAVISteamRemoteStorage@@$$QAPAVIWrapSteamRemoteStorage@@@Z ; std::make_pair<ISteamRemoteStorage * const &,IWrapSteamRemoteStorage *>
PUBLIC	??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Insert<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
PUBLIC	?_Init@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXI@Z ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Init
PUBLIC	?_Get_order_key@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBEIXZ ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Get_order_key
PUBLIC	?_Atomic_set_next@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU1234@PAU1234@0@Z ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Atomic_set_next
PUBLIC	?_Is_dummy@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE_NXZ ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Is_dummy
PUBLIC	??$?0U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@1@@Z ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > ><std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
PUBLIC	??$destroy@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@Z ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::destroy<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>
PUBLIC	??$?0AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@QAE@AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > ><std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > &>
PUBLIC	??$_Uninitialized_default_fill_n@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *,unsigned int,std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >
PUBLIC	??$?0U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@1@@Z ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node><std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
PUBLIC	??$forward@ABQAVISteamRemoteStorage@@@std@@YAABQAVISteamRemoteStorage@@ABQAV1@@Z ; std::forward<ISteamRemoteStorage * const &>
PUBLIC	??$forward@PAVIWrapSteamRemoteStorage@@@std@@YA$$QAPAVIWrapSteamRemoteStorage@@AAPAV1@@Z ; std::forward<IWrapSteamRemoteStorage *>
PUBLIC	??$?0ABQAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@X$0A@@?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@QAE@ABQAVISteamRemoteStorage@@$$QAPAVIWrapSteamRemoteStorage@@@Z ; std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *>::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *><ISteamRemoteStorage * const &,IWrapSteamRemoteStorage *,void,0>
PUBLIC	??$_Key_function@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@SAABQAVISteamRemoteStorage@@ABU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Key_function<ISteamRemoteStorage *,IWrapSteamRemoteStorage *>
PUBLIC	??$forward@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@YA$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@AAU10@@Z ; std::forward<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
PUBLIC	??$_Buynode@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@I$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Buynode<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
PUBLIC	??$?0V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_NX$0A@@?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@QAE@$$QAV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@$$QA_N@Z ; std::pair<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool>::pair<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool><Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool,void,0>
PUBLIC	??$forward@AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@YAAAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@0@AAV10@@Z ; std::forward<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > &>
PUBLIC	??$_Unfancy@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@@Z ; std::_Unfancy<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
PUBLIC	??$_Uninitialized_default_fill_n1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninitialized_default_fill_n1<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *,unsigned int,std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >
PUBLIC	??$addressof@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@YAPAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@AAU10@@Z ; std::addressof<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
PUBLIC	??$construct@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@2@@?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAEXPAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@@Z ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::construct<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
PUBLIC	??$forward@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@@std@@YA$$QAV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@AAV123@@Z ; std::forward<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@@std@@YAXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >,std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *>
PUBLIC	??$?0PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@X$0A@@?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@QAE@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@@Z ; std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *><ISteamRemoteStorage *,IWrapSteamRemoteStorage *,void,0>
PUBLIC	??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$allocator_traits@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z ; std::allocator_traits<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
PUBLIC	??$_Destroy_range1@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@@std@@YAXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >,std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *>
PUBLIC	??$forward@PAVISteamRemoteStorage@@@std@@YA$$QAPAVISteamRemoteStorage@@AAPAV1@@Z ; std::forward<ISteamRemoteStorage *>
PUBLIC	??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
PUBLIC	??_7ISteamRemoteStorage@@6B@			; ISteamRemoteStorage::`vftable'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
PUBLIC	??_7IWrapSteamRemoteStorage012@@6B@		; IWrapSteamRemoteStorage012::`vftable'
PUBLIC	??_C@_1GG@FOPFFAFO@?$AAI?$AAS?$AAt?$AAe?$AAa?$AAm?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?5?$AA?$CK?$AA?$CK?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?3?$AA?5?$AA?$CI?$AA?$CF?$AAh@ ; `string'
PUBLIC	??_7ISteamRemoteStorage014@@6B@			; ISteamRemoteStorage014::`vftable'
PUBLIC	??_7IWrapSteamRemoteStorage014@@6B@		; IWrapSteamRemoteStorage014::`vftable'
PUBLIC	??_C@_1GM@NGJPJAAG@?$AAI?$AAS?$AAt?$AAe?$AAa?$AAm?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA0?$AA1?$AA4?$AA?5?$AA?$CK?$AA?$CK?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?3?$AA?5@ ; `string'
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BK@KDCGEAPC@invalid?5number?5of?5buckets?$AA@ ; `string'
PUBLIC	??_R4ISteamRemoteStorage@@6B@			; ISteamRemoteStorage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVISteamRemoteStorage@@@8			; ISteamRemoteStorage `RTTI Type Descriptor'
PUBLIC	??_R3ISteamRemoteStorage@@8			; ISteamRemoteStorage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISteamRemoteStorage@@8			; ISteamRemoteStorage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISteamRemoteStorage@@8		; ISteamRemoteStorage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IWrapSteamRemoteStorage012@@6B@		; IWrapSteamRemoteStorage012::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIWrapSteamRemoteStorage012@@@8		; IWrapSteamRemoteStorage012 `RTTI Type Descriptor'
PUBLIC	??_R3IWrapSteamRemoteStorage012@@8		; IWrapSteamRemoteStorage012::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IWrapSteamRemoteStorage012@@8		; IWrapSteamRemoteStorage012::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IWrapSteamRemoteStorage012@@8	; IWrapSteamRemoteStorage012::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ISteamRemoteStorage014@@6B@		; ISteamRemoteStorage014::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVISteamRemoteStorage014@@@8		; ISteamRemoteStorage014 `RTTI Type Descriptor'
PUBLIC	??_R3ISteamRemoteStorage014@@8			; ISteamRemoteStorage014::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISteamRemoteStorage014@@8			; ISteamRemoteStorage014::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISteamRemoteStorage014@@8		; ISteamRemoteStorage014::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IWrapSteamRemoteStorage014@@6B@		; IWrapSteamRemoteStorage014::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIWrapSteamRemoteStorage014@@@8		; IWrapSteamRemoteStorage014 `RTTI Type Descriptor'
PUBLIC	??_R3IWrapSteamRemoteStorage014@@8		; IWrapSteamRemoteStorage014::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IWrapSteamRemoteStorage014@@8		; IWrapSteamRemoteStorage014::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IWrapSteamRemoteStorage014@@8	; IWrapSteamRemoteStorage014::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__lstrcmpA@8:PROC
EXTRN	__imp____std_exception_copy:PROC
EXTRN	__imp____std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	?Log@iSK_Logger@@UAAXQB_WZZ:PROC		; iSK_Logger::Log
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?steam_log@@3UiSK_Logger@@A:BYTE		; steam_log
EXTRN	__imp_?_Byte_reverse_table@details@Concurrency@@3QBEB:BYTE
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A DB 09cH DUP (?) ; SK_SteamWrapper_remap_remotestorage
_BSS	ENDS
CRT$XCU	SEGMENT
?SK_SteamWrapper_remap_remotestorage$initializer$@@3P6AXXZA DD FLAT:??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ ; SK_SteamWrapper_remap_remotestorage$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@IWrapSteamRemoteStorage014@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IWrapSteamRemoteStorage014@@8 DD FLAT:??_R0?AVIWrapSteamRemoteStorage014@@@8 ; IWrapSteamRemoteStorage014::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IWrapSteamRemoteStorage014@@8
rdata$r	ENDS
;	COMDAT ??_R2IWrapSteamRemoteStorage014@@8
rdata$r	SEGMENT
??_R2IWrapSteamRemoteStorage014@@8 DD FLAT:??_R1A@?0A@EA@IWrapSteamRemoteStorage014@@8 ; IWrapSteamRemoteStorage014::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISteamRemoteStorage014@@8
rdata$r	ENDS
;	COMDAT ??_R3IWrapSteamRemoteStorage014@@8
rdata$r	SEGMENT
??_R3IWrapSteamRemoteStorage014@@8 DD 00H		; IWrapSteamRemoteStorage014::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IWrapSteamRemoteStorage014@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIWrapSteamRemoteStorage014@@@8
data$r	SEGMENT
??_R0?AVIWrapSteamRemoteStorage014@@@8 DD FLAT:??_7type_info@@6B@ ; IWrapSteamRemoteStorage014 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIWrapSteamRemoteStorage014@@', 00H
data$r	ENDS
;	COMDAT ??_R4IWrapSteamRemoteStorage014@@6B@
rdata$r	SEGMENT
??_R4IWrapSteamRemoteStorage014@@6B@ DD 00H		; IWrapSteamRemoteStorage014::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIWrapSteamRemoteStorage014@@@8
	DD	FLAT:??_R3IWrapSteamRemoteStorage014@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISteamRemoteStorage014@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISteamRemoteStorage014@@8 DD FLAT:??_R0?AVISteamRemoteStorage014@@@8 ; ISteamRemoteStorage014::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISteamRemoteStorage014@@8
rdata$r	ENDS
;	COMDAT ??_R2ISteamRemoteStorage014@@8
rdata$r	SEGMENT
??_R2ISteamRemoteStorage014@@8 DD FLAT:??_R1A@?0A@EA@ISteamRemoteStorage014@@8 ; ISteamRemoteStorage014::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ISteamRemoteStorage014@@8
rdata$r	SEGMENT
??_R3ISteamRemoteStorage014@@8 DD 00H			; ISteamRemoteStorage014::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ISteamRemoteStorage014@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVISteamRemoteStorage014@@@8
data$r	SEGMENT
??_R0?AVISteamRemoteStorage014@@@8 DD FLAT:??_7type_info@@6B@ ; ISteamRemoteStorage014 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVISteamRemoteStorage014@@', 00H
data$r	ENDS
;	COMDAT ??_R4ISteamRemoteStorage014@@6B@
rdata$r	SEGMENT
??_R4ISteamRemoteStorage014@@6B@ DD 00H			; ISteamRemoteStorage014::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVISteamRemoteStorage014@@@8
	DD	FLAT:??_R3ISteamRemoteStorage014@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IWrapSteamRemoteStorage012@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IWrapSteamRemoteStorage012@@8 DD FLAT:??_R0?AVIWrapSteamRemoteStorage012@@@8 ; IWrapSteamRemoteStorage012::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IWrapSteamRemoteStorage012@@8
rdata$r	ENDS
;	COMDAT ??_R2IWrapSteamRemoteStorage012@@8
rdata$r	SEGMENT
??_R2IWrapSteamRemoteStorage012@@8 DD FLAT:??_R1A@?0A@EA@IWrapSteamRemoteStorage012@@8 ; IWrapSteamRemoteStorage012::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISteamRemoteStorage@@8
rdata$r	ENDS
;	COMDAT ??_R3IWrapSteamRemoteStorage012@@8
rdata$r	SEGMENT
??_R3IWrapSteamRemoteStorage012@@8 DD 00H		; IWrapSteamRemoteStorage012::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IWrapSteamRemoteStorage012@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIWrapSteamRemoteStorage012@@@8
data$r	SEGMENT
??_R0?AVIWrapSteamRemoteStorage012@@@8 DD FLAT:??_7type_info@@6B@ ; IWrapSteamRemoteStorage012 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIWrapSteamRemoteStorage012@@', 00H
data$r	ENDS
;	COMDAT ??_R4IWrapSteamRemoteStorage012@@6B@
rdata$r	SEGMENT
??_R4IWrapSteamRemoteStorage012@@6B@ DD 00H		; IWrapSteamRemoteStorage012::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIWrapSteamRemoteStorage012@@@8
	DD	FLAT:??_R3IWrapSteamRemoteStorage012@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISteamRemoteStorage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISteamRemoteStorage@@8 DD FLAT:??_R0?AVISteamRemoteStorage@@@8 ; ISteamRemoteStorage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISteamRemoteStorage@@8
rdata$r	ENDS
;	COMDAT ??_R2ISteamRemoteStorage@@8
rdata$r	SEGMENT
??_R2ISteamRemoteStorage@@8 DD FLAT:??_R1A@?0A@EA@ISteamRemoteStorage@@8 ; ISteamRemoteStorage::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ISteamRemoteStorage@@8
rdata$r	SEGMENT
??_R3ISteamRemoteStorage@@8 DD 00H			; ISteamRemoteStorage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ISteamRemoteStorage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVISteamRemoteStorage@@@8
data$r	SEGMENT
??_R0?AVISteamRemoteStorage@@@8 DD FLAT:??_7type_info@@6B@ ; ISteamRemoteStorage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVISteamRemoteStorage@@', 00H
data$r	ENDS
;	COMDAT ??_R4ISteamRemoteStorage@@6B@
rdata$r	SEGMENT
??_R4ISteamRemoteStorage@@6B@ DD 00H			; ISteamRemoteStorage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVISteamRemoteStorage@@@8
	DD	FLAT:??_R3ISteamRemoteStorage@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BK@KDCGEAPC@invalid?5number?5of?5buckets?$AA@
CONST	SEGMENT
??_C@_0BK@KDCGEAPC@invalid?5number?5of?5buckets?$AA@ DB 'invalid number o'
	DB	'f buckets', 00H				; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
data$r	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
data$r	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ?first@?BL@??SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA
_DATA	SEGMENT
?first@?BL@??SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA DB 01H ; `SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage'::`27'::first
_DATA	ENDS
;	COMDAT ?first@?2??SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA
_DATA	SEGMENT
?first@?2??SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA DB 01H ; `SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage'::`3'::first
_DATA	ENDS
;	COMDAT ?first@?BL@??SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA
_DATA	SEGMENT
?first@?BL@??SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA DB 01H ; `SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour'::`27'::first
_DATA	ENDS
;	COMDAT ?first@?2??SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA
_DATA	SEGMENT
?first@?2??SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA DB 01H ; `SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour'::`3'::first
_DATA	ENDS
;	COMDAT ??_C@_1GM@NGJPJAAG@?$AAI?$AAS?$AAt?$AAe?$AAa?$AAm?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA0?$AA1?$AA4?$AA?5?$AA?$CK?$AA?$CK?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?3?$AA?5@
CONST	SEGMENT
??_C@_1GM@NGJPJAAG@?$AAI?$AAS?$AAt?$AAe?$AAa?$AAm?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA0?$AA1?$AA4?$AA?5?$AA?$CK?$AA?$CK?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?3?$AA?5@ DB 'I'
	DB	00H, 'S', 00H, 't', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 't', 00H, 'e', 00H, 'S', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '0', 00H
	DB	'1', 00H, '4', 00H, ' ', 00H, '*', 00H, '*', 00H, ' ', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ':', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'h', 00H, 's', 00H, ':', 00H, '%', 00H, 'l', 00H, 'u'
	DB	00H, ')', 00H, ' ', 00H, '-', 00H, ' ', 00H, '%', 00H, 'l', 00H
	DB	'u', 00H, ' ', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 's'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7IWrapSteamRemoteStorage014@@6B@
CONST	SEGMENT
??_7IWrapSteamRemoteStorage014@@6B@ DD FLAT:??_R4IWrapSteamRemoteStorage014@@6B@ ; IWrapSteamRemoteStorage014::`vftable'
	DD	FLAT:?FileWrite@IWrapSteamRemoteStorage014@@UAE_NPBDPBXH@Z
	DD	FLAT:?FileRead@IWrapSteamRemoteStorage014@@UAEHPBDPAXH@Z
	DD	FLAT:?FileWriteAsync@IWrapSteamRemoteStorage014@@UAE_KPBDPBXI@Z
	DD	FLAT:?FileReadAsync@IWrapSteamRemoteStorage014@@UAE_KPBDII@Z
	DD	FLAT:?FileReadAsyncComplete@IWrapSteamRemoteStorage014@@UAE_N_KPAXI@Z
	DD	FLAT:?FileForget@IWrapSteamRemoteStorage014@@UAE_NPBD@Z
	DD	FLAT:?FileDelete@IWrapSteamRemoteStorage014@@UAE_NPBD@Z
	DD	FLAT:?FileShare@IWrapSteamRemoteStorage014@@UAE_KPBD@Z
	DD	FLAT:?SetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE_NPBDW4ERemoteStoragePlatform@@@Z
	DD	FLAT:?FileWriteStreamOpen@IWrapSteamRemoteStorage014@@UAE_KPBD@Z
	DD	FLAT:?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage014@@UAE_N_KPBXH@Z
	DD	FLAT:?FileWriteStreamClose@IWrapSteamRemoteStorage014@@UAE_N_K@Z
	DD	FLAT:?FileWriteStreamCancel@IWrapSteamRemoteStorage014@@UAE_N_K@Z
	DD	FLAT:?FileExists@IWrapSteamRemoteStorage014@@UAE_NPBD@Z
	DD	FLAT:?FilePersisted@IWrapSteamRemoteStorage014@@UAE_NPBD@Z
	DD	FLAT:?GetFileSize@IWrapSteamRemoteStorage014@@UAEHPBD@Z
	DD	FLAT:?GetFileTimestamp@IWrapSteamRemoteStorage014@@UAE_JPBD@Z
	DD	FLAT:?GetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE?AW4ERemoteStoragePlatform@@PBD@Z
	DD	FLAT:?GetFileCount@IWrapSteamRemoteStorage014@@UAEHXZ
	DD	FLAT:?GetFileNameAndSize@IWrapSteamRemoteStorage014@@UAEPBDHPAH@Z
	DD	FLAT:?GetQuota@IWrapSteamRemoteStorage014@@UAE_NPA_K0@Z
	DD	FLAT:?IsCloudEnabledForAccount@IWrapSteamRemoteStorage014@@UAE_NXZ
	DD	FLAT:?IsCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAE_NXZ
	DD	FLAT:?SetCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAEX_N@Z
	DD	FLAT:?UGCDownload@IWrapSteamRemoteStorage014@@UAE_K_KI@Z
	DD	FLAT:?GetUGCDownloadProgress@IWrapSteamRemoteStorage014@@UAE_N_KPAH1@Z
	DD	FLAT:?GetUGCDetails@IWrapSteamRemoteStorage014@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z
	DD	FLAT:?UGCRead@IWrapSteamRemoteStorage014@@UAEH_KPAXHIW4EUGCReadAction@@@Z
	DD	FLAT:?GetCachedUGCCount@IWrapSteamRemoteStorage014@@UAEHXZ
	DD	FLAT:?GetCachedUGCHandle@IWrapSteamRemoteStorage014@@UAE_KH@Z
	DD	FLAT:?PublishWorkshopFile@IWrapSteamRemoteStorage014@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z
	DD	FLAT:?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage014@@UAE_K_K@Z
	DD	FLAT:?UpdatePublishedFileFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
	DD	FLAT:?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
	DD	FLAT:?UpdatePublishedFileTitle@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
	DD	FLAT:?UpdatePublishedFileDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
	DD	FLAT:?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage014@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z
	DD	FLAT:?UpdatePublishedFileTags@IWrapSteamRemoteStorage014@@UAE_N_KPAUSteamParamStringArray_t@@@Z
	DD	FLAT:?CommitPublishedFileUpdate@IWrapSteamRemoteStorage014@@UAE_K_K@Z
	DD	FLAT:?GetPublishedFileDetails@IWrapSteamRemoteStorage014@@UAE_K_KI@Z
	DD	FLAT:?DeletePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z
	DD	FLAT:?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z
	DD	FLAT:?SubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z
	DD	FLAT:?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z
	DD	FLAT:?UnsubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z
	DD	FLAT:?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
	DD	FLAT:?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z
	DD	FLAT:?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage014@@UAE_K_K_N@Z
	DD	FLAT:?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z
	DD	FLAT:?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z
	DD	FLAT:?PublishVideo@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z
	DD	FLAT:?SetUserPublishedFileAction@IWrapSteamRemoteStorage014@@UAE_K_KW4EWorkshopFileAction@@@Z
	DD	FLAT:?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopFileAction@@I@Z
	DD	FLAT:?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z
	DD	FLAT:?UGCDownloadToLocation@IWrapSteamRemoteStorage014@@UAE_K_KPBDI@Z
CONST	ENDS
;	COMDAT ??_7ISteamRemoteStorage014@@6B@
CONST	SEGMENT
??_7ISteamRemoteStorage014@@6B@ DD FLAT:??_R4ISteamRemoteStorage014@@6B@ ; ISteamRemoteStorage014::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_1GG@FOPFFAFO@?$AAI?$AAS?$AAt?$AAe?$AAa?$AAm?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?5?$AA?$CK?$AA?$CK?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?3?$AA?5?$AA?$CI?$AA?$CF?$AAh@
CONST	SEGMENT
??_C@_1GG@FOPFFAFO@?$AAI?$AAS?$AAt?$AAe?$AAa?$AAm?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?5?$AA?$CK?$AA?$CK?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?3?$AA?5?$AA?$CI?$AA?$CF?$AAh@ DB 'I'
	DB	00H, 'S', 00H, 't', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 't', 00H, 'e', 00H, 'S', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H
	DB	'*', 00H, '*', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, ':', 00H, ' ', 00H, '(', 00H, '%', 00H, 'h', 00H, 's', 00H
	DB	':', 00H, '%', 00H, 'l', 00H, 'u', 00H, ')', 00H, ' ', 00H, '-'
	DB	00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H, ' ', 00H, 'B', 00H
	DB	'y', 00H, 't', 00H, 'e', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7IWrapSteamRemoteStorage012@@6B@
CONST	SEGMENT
??_7IWrapSteamRemoteStorage012@@6B@ DD FLAT:??_R4IWrapSteamRemoteStorage012@@6B@ ; IWrapSteamRemoteStorage012::`vftable'
	DD	FLAT:?FileWrite@IWrapSteamRemoteStorage012@@UAE_NPBDPBXH@Z
	DD	FLAT:?FileRead@IWrapSteamRemoteStorage012@@UAEHPBDPAXH@Z
	DD	FLAT:?FileForget@IWrapSteamRemoteStorage012@@UAE_NPBD@Z
	DD	FLAT:?FileDelete@IWrapSteamRemoteStorage012@@UAE_NPBD@Z
	DD	FLAT:?FileShare@IWrapSteamRemoteStorage012@@UAE_KPBD@Z
	DD	FLAT:?SetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE_NPBDW4ERemoteStoragePlatform@@@Z
	DD	FLAT:?FileWriteStreamOpen@IWrapSteamRemoteStorage012@@UAE_KPBD@Z
	DD	FLAT:?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage012@@UAE_N_KPBXH@Z
	DD	FLAT:?FileWriteStreamClose@IWrapSteamRemoteStorage012@@UAE_N_K@Z
	DD	FLAT:?FileWriteStreamCancel@IWrapSteamRemoteStorage012@@UAE_N_K@Z
	DD	FLAT:?FileExists@IWrapSteamRemoteStorage012@@UAE_NPBD@Z
	DD	FLAT:?FilePersisted@IWrapSteamRemoteStorage012@@UAE_NPBD@Z
	DD	FLAT:?GetFileSize@IWrapSteamRemoteStorage012@@UAEHPBD@Z
	DD	FLAT:?GetFileTimestamp@IWrapSteamRemoteStorage012@@UAE_JPBD@Z
	DD	FLAT:?GetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE?AW4ERemoteStoragePlatform@@PBD@Z
	DD	FLAT:?GetFileCount@IWrapSteamRemoteStorage012@@UAEHXZ
	DD	FLAT:?GetFileNameAndSize@IWrapSteamRemoteStorage012@@UAEPBDHPAH@Z
	DD	FLAT:?GetQuota@IWrapSteamRemoteStorage012@@UAE_NPAH0@Z
	DD	FLAT:?IsCloudEnabledForAccount@IWrapSteamRemoteStorage012@@UAE_NXZ
	DD	FLAT:?IsCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAE_NXZ
	DD	FLAT:?SetCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAEX_N@Z
	DD	FLAT:?UGCDownload@IWrapSteamRemoteStorage012@@UAE_K_KI@Z
	DD	FLAT:?GetUGCDownloadProgress@IWrapSteamRemoteStorage012@@UAE_N_KPAH1@Z
	DD	FLAT:?GetUGCDetails@IWrapSteamRemoteStorage012@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z
	DD	FLAT:?UGCRead@IWrapSteamRemoteStorage012@@UAEH_KPAXHIW4EUGCReadAction@@@Z
	DD	FLAT:?GetCachedUGCCount@IWrapSteamRemoteStorage012@@UAEHXZ
	DD	FLAT:?GetCachedUGCHandle@IWrapSteamRemoteStorage012@@UAE_KH@Z
	DD	FLAT:?PublishWorkshopFile@IWrapSteamRemoteStorage012@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z
	DD	FLAT:?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage012@@UAE_K_K@Z
	DD	FLAT:?UpdatePublishedFileFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
	DD	FLAT:?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
	DD	FLAT:?UpdatePublishedFileTitle@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
	DD	FLAT:?UpdatePublishedFileDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
	DD	FLAT:?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage012@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z
	DD	FLAT:?UpdatePublishedFileTags@IWrapSteamRemoteStorage012@@UAE_N_KPAUSteamParamStringArray_t@@@Z
	DD	FLAT:?CommitPublishedFileUpdate@IWrapSteamRemoteStorage012@@UAE_K_K@Z
	DD	FLAT:?GetPublishedFileDetails@IWrapSteamRemoteStorage012@@UAE_K_KI@Z
	DD	FLAT:?DeletePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z
	DD	FLAT:?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z
	DD	FLAT:?SubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z
	DD	FLAT:?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z
	DD	FLAT:?UnsubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z
	DD	FLAT:?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
	DD	FLAT:?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z
	DD	FLAT:?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage012@@UAE_K_K_N@Z
	DD	FLAT:?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z
	DD	FLAT:?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z
	DD	FLAT:?PublishVideo@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z
	DD	FLAT:?SetUserPublishedFileAction@IWrapSteamRemoteStorage012@@UAE_K_KW4EWorkshopFileAction@@@Z
	DD	FLAT:?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopFileAction@@I@Z
	DD	FLAT:?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z
	DD	FLAT:?UGCDownloadToLocation@IWrapSteamRemoteStorage012@@UAE_K_KPBDI@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7ISteamRemoteStorage@@6B@
CONST	SEGMENT
??_7ISteamRemoteStorage@@6B@ DD FLAT:??_R4ISteamRemoteStorage@@6B@ ; ISteamRemoteStorage::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ$1
__ehfuncinfo$??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z$0
__ehfuncinfo$??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z$0
__ehfuncinfo$??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z PROC ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 38   : 		: _Ptr()

	mov	DWORD PTR [eax], 0
$LN3@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 841  : 		}

	pop	ebp
	ret	4
??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z ENDP ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@PAVISteamRemoteStorage@@@std@@YA$$QAPAVISteamRemoteStorage@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVISteamRemoteStorage@@@std@@YA$$QAPAVISteamRemoteStorage@@AAPAV1@@Z PROC ; std::forward<ISteamRemoteStorage *>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@PAVISteamRemoteStorage@@@std@@YA$$QAPAVISteamRemoteStorage@@AAPAV1@@Z ENDP ; std::forward<ISteamRemoteStorage *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@@std@@YAXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@@std@@YAXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >,std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *>, COMDAT

; 1208 : 		// nothing to do
; 1209 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@@std@@YAXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >,std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$allocator_traits@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$allocator_traits@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN5@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 38   : 		: _Ptr()

	mov	DWORD PTR [eax], 0
$LN5@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 960  : 		}

	pop	ebp
	ret	0
??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$allocator_traits@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@X$0A@@?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@QAE@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@X$0A@@?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@QAE@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@@Z PROC ; std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *><ISteamRemoteStorage *,IWrapSteamRemoteStorage *,void,0>, COMDAT
; _this$ = ecx

; 217  : 		{	// construct from moved compatible pair

	npad	2
	push	ebp
	mov	ebp, esp

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 218  : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@X$0A@@?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@QAE@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@@Z ENDP ; std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *><ISteamRemoteStorage *,IWrapSteamRemoteStorage *,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@@std@@YAXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@@std@@YAXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >,std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *>, COMDAT

; 1215 : 		// note that this is an optimization for debug mode codegen;
; 1216 : 		// in release mode the BE removes all of this
; 1217 : 	typedef typename _Alloc::value_type _Val;
; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1219 : 		is_trivially_destructible<_Val>,
; 1220 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1221 : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@@std@@YAXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >,std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN7@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 38   : 		: _Ptr()

	mov	DWORD PTR [eax], 0
$LN7@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1098 : 		}

	pop	ebp
	ret	4
??$construct@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@$$V@?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::construct<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@@std@@YA$$QAV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@AAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@@std@@YA$$QAV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@AAV123@@Z PROC ; std::forward<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@@std@@YA$$QAV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@AAV123@@Z ENDP ; std::forward<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@2@@?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAEXPAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@2@@?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAEXPAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@@Z PROC ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::construct<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN3@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN3@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 841  : 		}

	pop	ebp
	ret	8
??$construct@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@2@@?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAEXPAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@@Z ENDP ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::construct<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@YAPAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@YAPAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@AAU10@@Z PROC ; std::addressof<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@YAPAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Uninitialized_default_fill_n1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Uninitialized_default_fill_n1<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *,unsigned int,std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >, COMDAT

; 228  : 	{	// value-initialize _Count objects to raw _First, using _Al, no special optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 232  : 	for (; 0 < _Count; --_Count, (void)++_First)

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Uninitiali
	npad	1
$LL4@Uninitiali:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	eax, eax
	je	SHORT $LN19@Uninitiali
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 38   : 		: _Ptr()

	mov	DWORD PTR [eax], 0
$LN19@Uninitiali:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 232  : 	for (; 0 < _Count; --_Count, (void)++_First)

	add	eax, 4
	sub	ecx, 1
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 233  : 		{
; 234  : 		_Al.construct(_Unfancy(_First));
; 235  : 		}
; 236  : 
; 237  : 	_CATCH_ALL
; 238  : 	_Destroy_range(_Next, _First, _Al);
; 239  : 	_RERAISE;
; 240  : 	_CATCH_END
; 241  : 
; 242  : 	return (_First);
; 243  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Uninitialized_default_fill_n1<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *,unsigned int,std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@@Z PROC ; std::_Unfancy<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@@Z ENDP ; std::_Unfancy<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@YAAAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@YAAAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@0@AAV10@@Z PROC ; std::forward<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@YAAAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_NX$0A@@?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@QAE@$$QAV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_NX$0A@@?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@QAE@$$QAV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@$$QA_N@Z PROC ; std::pair<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool>::pair<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool><Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_NX$0A@@?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@QAE@$$QAV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@$$QA_N@Z ENDP ; std::pair<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool>::pair<Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool><Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??$_Buynode@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@I$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z
_TEXT	SEGMENT
__Order_key$ = 8					; size = 4
__Value$ = 12						; size = 4
??$_Buynode@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@I$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z PROC ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Buynode<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >, COMDAT
; _this$ = ecx

; 323  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	mov	edx, eax
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	edx, edx
	jne	SHORT $LN17@Buynode
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN51@Buynode:
$LN17@Buynode:
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 358  :         return ((reference)(*_Pnode)._M_element);

	lea	esi, DWORD PTR [edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	esi, esi
	je	SHORT $LN31@Buynode
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	ecx, DWORD PTR __Value$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+4], eax
$LN31@Buynode:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 215  :             _M_order_key = _Order_key;

	mov	eax, DWORD PTR __Order_key$[ebp]
	mov	DWORD PTR [edx+12], eax

; 324  :         _Nodeptr _Pnode = this->_M_node_allocator.allocate(1);
; 325  : 
; 326  :         try
; 327  :         {
; 328  :             this->_M_value_allocator.construct(std::addressof(_Myval(_Pnode)), std::forward<_ValTy>(_Value));
; 329  :             _Pnode->_Init(_Order_key);
; 330  :         }
; 331  :         catch(...)
; 332  :         {
; 333  :             this->_M_node_allocator.deallocate(_Pnode, 1);
; 334  :             throw;
; 335  :         }
; 336  : 
; 337  :         return (_Pnode);

	mov	eax, edx

; 216  :             _M_next = NULL;

	mov	DWORD PTR [edx], 0
	pop	esi

; 338  :     }

	pop	ebp
	ret	8
$LN50@Buynode:
??$_Buynode@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@I$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z ENDP ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Buynode<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@YA$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@YA$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@AAU10@@Z PROC ; std::forward<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@YA$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@AAU10@@Z ENDP ; std::forward<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
;	COMDAT ??$_Key_function@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@SAABQAVISteamRemoteStorage@@ABU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z
_TEXT	SEGMENT
__Value$ = 8						; size = 4
??$_Key_function@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@SAABQAVISteamRemoteStorage@@ABU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z PROC ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Key_function<ISteamRemoteStorage *,IWrapSteamRemoteStorage *>, COMDAT

; 84   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 85   :         return (_Value.first);

	mov	eax, DWORD PTR __Value$[ebp]

; 86   :     }

	pop	ebp
	ret	0
??$_Key_function@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@SAABQAVISteamRemoteStorage@@ABU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z ENDP ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Key_function<ISteamRemoteStorage *,IWrapSteamRemoteStorage *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0ABQAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@X$0A@@?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@QAE@ABQAVISteamRemoteStorage@@$$QAPAVIWrapSteamRemoteStorage@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0ABQAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@X$0A@@?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@QAE@ABQAVISteamRemoteStorage@@$$QAPAVIWrapSteamRemoteStorage@@@Z PROC ; std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *>::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *><ISteamRemoteStorage * const &,IWrapSteamRemoteStorage *,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0ABQAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@X$0A@@?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@QAE@ABQAVISteamRemoteStorage@@$$QAPAVIWrapSteamRemoteStorage@@@Z ENDP ; std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *>::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *><ISteamRemoteStorage * const &,IWrapSteamRemoteStorage *,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@PAVIWrapSteamRemoteStorage@@@std@@YA$$QAPAVIWrapSteamRemoteStorage@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVIWrapSteamRemoteStorage@@@std@@YA$$QAPAVIWrapSteamRemoteStorage@@AAPAV1@@Z PROC ; std::forward<IWrapSteamRemoteStorage *>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@PAVIWrapSteamRemoteStorage@@@std@@YA$$QAPAVIWrapSteamRemoteStorage@@AAPAV1@@Z ENDP ; std::forward<IWrapSteamRemoteStorage *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABQAVISteamRemoteStorage@@@std@@YAABQAVISteamRemoteStorage@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVISteamRemoteStorage@@@std@@YAABQAVISteamRemoteStorage@@ABQAV1@@Z PROC ; std::forward<ISteamRemoteStorage * const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABQAVISteamRemoteStorage@@@std@@YAABQAVISteamRemoteStorage@@ABQAV1@@Z ENDP ; std::forward<ISteamRemoteStorage * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@1@@Z PROC ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node><std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@1@@Z ENDP ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node><std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *,unsigned int,std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >, COMDAT

; 260  : 	{	// value-initialize _Count objects to raw _First, using _Al

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 261  : 	typedef _Iter_value_t<_FwdIt> _Ty;
; 262  : 	return (_Uninitialized_default_fill_n1(_First, _Count, _Al,

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Al$[ebp]
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_default_fill_n1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninitialized_default_fill_n1<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *,unsigned int,std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >
	add	esp, 16					; 00000010H

; 263  : 		_Conjunction_t<
; 264  : 			is_pointer<_FwdIt>,
; 265  : 			is_scalar<_Ty>,
; 266  : 			negation<is_volatile<_Ty>>,
; 267  : 			negation<is_member_pointer<_Ty>>,
; 268  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First))>>()));
; 269  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *,unsigned int,std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@QAE@AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@QAE@AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > ><std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@std@@QAE@AAV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >::_Wrap_alloc<std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > ><std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@Z PROC ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::destroy<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@Z ENDP ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::destroy<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@1@@Z PROC ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > ><std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@1@@Z ENDP ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > ><std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Is_dummy@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE_NXZ
_TEXT	SEGMENT
?_Is_dummy@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE_NXZ PROC ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Is_dummy, COMDAT
; _this$ = ecx

; 247  :             return (_M_order_key & 0x1) == 0;

	mov	eax, DWORD PTR [ecx+12]
	not	eax
	and	eax, 1

; 248  :         }

	ret	0
?_Is_dummy@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE_NXZ ENDP ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Is_dummy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Atomic_set_next@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU1234@PAU1234@0@Z
_TEXT	SEGMENT
__New_node$ = 8						; size = 4
__Current_node$ = 12					; size = 4
?_Atomic_set_next@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU1234@PAU1234@0@Z PROC ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Atomic_set_next, COMDAT
; _this$ = ecx

; 227  :         {

	npad	2
	push	ebp
	mov	ebp, esp

; 228  :             // Try to change the next pointer on the current element to a new element, only if it still points to the cached next
; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	edx, DWORD PTR __New_node$[ebp]
	mov	eax, DWORD PTR __Current_node$[ebp]
	lock	 cmpxchg DWORD PTR [ecx], edx

; 230  : 
; 231  :             if (_Exchange_node == _Current_node)

	cmp	eax, DWORD PTR __Current_node$[ebp]
	cmove	eax, DWORD PTR __New_node$[ebp]

; 232  :             {
; 233  :                 // Operation succeeded, return the new node
; 234  :                 return _New_node;
; 235  :             }
; 236  :             else
; 237  :             {
; 238  :                 // Operation failed, return the "interfering" node
; 239  :                 return _Exchange_node;
; 240  :             }
; 241  :         }

	pop	ebp
	ret	8
?_Atomic_set_next@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU1234@PAU1234@0@Z ENDP ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Atomic_set_next
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Get_order_key@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBEIXZ
_TEXT	SEGMENT
?_Get_order_key@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBEIXZ PROC ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Get_order_key, COMDAT
; _this$ = ecx

; 222  :             return _M_order_key;

	mov	eax, DWORD PTR [ecx+12]

; 223  :         }

	ret	0
?_Get_order_key@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBEIXZ ENDP ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Get_order_key
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Init@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXI@Z
_TEXT	SEGMENT
__Order_key$ = 8					; size = 4
?_Init@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXI@Z PROC ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Init, COMDAT
; _this$ = ecx

; 214  :         {

	npad	2
	push	ebp
	mov	ebp, esp

; 215  :             _M_order_key = _Order_key;

	mov	eax, DWORD PTR __Order_key$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 216  :             _M_next = NULL;

	mov	DWORD PTR [ecx], 0

; 217  :         }

	pop	ebp
	ret	4
?_Init@_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXI@Z ENDP ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node::_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z
_TEXT	SEGMENT
__Result$1 = -24					; size = 8
tv811 = -20						; size = 4
_this$1$ = -16						; size = 4
__Reversed_order_key$2 = -12				; size = 4
tv813 = -8						; size = 4
__Index$3 = -8						; size = 4
__Index$4 = -8						; size = 4
__Val$5 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Value$ = 12						; size = 4
??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Insert<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >, COMDAT
; _this$ = ecx

; 862  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	esi, DWORD PTR __Value$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 862  :     {

	mov	ebx, ecx

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$4[ebp], 0
	push	edi

; 862  :     {

	mov	DWORD PTR _this$1$[ebp], ebx

; 1267 :         if (_M_buckets[_Segment] == NULL)

	mov	edi, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [esi]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [esi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+2]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+3]
	imul	ecx, edx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 864  :         size_type _Bucket = _Order_key % _M_number_of_buckets;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	xor	ecx, eax

; 347  : 		_Val *= _FNV_prime;

	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 864  :         size_type _Bucket = _Order_key % _M_number_of_buckets;

	lea	ecx, DWORD PTR [ebx+148]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	mov	DWORD PTR __Val$5[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 864  :         size_type _Bucket = _Order_key % _M_number_of_buckets;

	div	DWORD PTR [ecx]
	mov	esi, edx

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	eax, esi
	or	eax, 1
	mov	DWORD PTR tv811[ebp], eax

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$4[ebp], eax

; 1267 :         if (_M_buckets[_Segment] == NULL)

	mov	eax, DWORD PTR [ebx+ecx*4+4]
	test	eax, eax
	je	SHORT $LN232@Insert

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	edx, edi

; 1273 :         return (_Iterator._Mynode() != NULL);

	mov	eax, esi

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	shl	edx, cl

; 1273 :         return (_Iterator._Mynode() != NULL);

	mov	ecx, DWORD PTR [ebx+ecx*4+4]

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	and	edx, -2					; fffffffeH

; 1273 :         return (_Iterator._Mynode() != NULL);

	sub	eax, edx
	cmp	DWORD PTR [ecx+eax*4], 0
	setne	al

; 865  : 
; 866  :         // If bucket is empty, initialize it first
; 867  :         if (!_Is_initialized(_Bucket))

	test	al, al
	jne	SHORT $LN5@Insert
$LN232@Insert:

; 868  :         {
; 869  :             _Initialize_bucket(_Bucket);

	push	esi
	mov	ecx, ebx
	call	?_Initialize_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXI@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Initialize_bucket
$LN5@Insert:

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	mov	ecx, DWORD PTR __imp_?_Byte_reverse_table@details@Concurrency@@3QBEB

; 67   :     return _Byte_reverse_table[_Original_byte];

	mov	edx, DWORD PTR __Val$5[ebp]
	movzx	eax, dl

; 870  :         }
; 871  : 
; 872  :         long _New_count;
; 873  :         _Order_key = _Split_order_regular_key(_Order_key);
; 874  :         _Full_iterator _Iterator = _Get_bucket(_Bucket);
; 875  :         _Full_iterator _Last = _M_split_ordered_list._End();
; 876  :         _Full_iterator _Where = _Iterator;
; 877  :         _Nodeptr _New_node = _M_split_ordered_list._Buynode(_Order_key, std::forward<_ValTy>(_Value));

	push	DWORD PTR __Value$[ebp]

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$3[ebp], 0

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$2[ebp+3], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, dh

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$2[ebp+2], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Val$5[ebp+2]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$2[ebp+1], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Val$5[ebp+3]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$2[ebp], al

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	eax, DWORD PTR tv811[ebp]

; 1296 :         return _Reverse(_Order_key) | 0x1;

	mov	ebx, DWORD PTR __Reversed_order_key$2[ebp]

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax

; 1296 :         return _Reverse(_Order_key) | 0x1;

	or	ebx, edi

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$3[ebp], eax

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	eax, edi
	shl	eax, cl
	and	eax, -2					; fffffffeH

; 1240 :         return _M_buckets[_Segment][_Bucket];

	sub	esi, eax
	mov	eax, DWORD PTR _this$1$[ebp]

; 870  :         }
; 871  : 
; 872  :         long _New_count;
; 873  :         _Order_key = _Split_order_regular_key(_Order_key);
; 874  :         _Full_iterator _Iterator = _Get_bucket(_Bucket);
; 875  :         _Full_iterator _Last = _M_split_ordered_list._End();
; 876  :         _Full_iterator _Where = _Iterator;
; 877  :         _Nodeptr _New_node = _M_split_ordered_list._Buynode(_Order_key, std::forward<_ValTy>(_Value));

	push	ebx

; 1240 :         return _M_buckets[_Segment][_Bucket];

	mov	edi, DWORD PTR [eax+ecx*4+4]

; 870  :         }
; 871  : 
; 872  :         long _New_count;
; 873  :         _Order_key = _Split_order_regular_key(_Order_key);
; 874  :         _Full_iterator _Iterator = _Get_bucket(_Bucket);
; 875  :         _Full_iterator _Last = _M_split_ordered_list._End();
; 876  :         _Full_iterator _Where = _Iterator;
; 877  :         _Nodeptr _New_node = _M_split_ordered_list._Buynode(_Order_key, std::forward<_ValTy>(_Value));

	lea	ecx, DWORD PTR [eax+132]

; 1240 :         return _M_buckets[_Segment][_Bucket];

	mov	edi, DWORD PTR [edi+esi*4]

; 870  :         }
; 871  : 
; 872  :         long _New_count;
; 873  :         _Order_key = _Split_order_regular_key(_Order_key);
; 874  :         _Full_iterator _Iterator = _Get_bucket(_Bucket);
; 875  :         _Full_iterator _Last = _M_split_ordered_list._End();
; 876  :         _Full_iterator _Where = _Iterator;
; 877  :         _Nodeptr _New_node = _M_split_ordered_list._Buynode(_Order_key, std::forward<_ValTy>(_Value));

	call	??$_Buynode@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@I$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Buynode<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
	mov	ecx, eax
$LN236@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	esi, DWORD PTR [edi]
	npad	4
$LL2@Insert:

; 233  : 		return (this->_Ptr == _Right._Ptr);

	test	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 886  :             if (_Where == _Last || _Mylist::_Get_key(_Where) > _Order_key)

	je	SHORT $LN8@Insert
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, ebx
	ja	SHORT $LN8@Insert

; 909  :             else if (!this->_M_allow_multimapping && _Mylist::_Get_key(_Where) == _Order_key &&

	jne	SHORT $LN11@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [ecx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 909  :             else if (!this->_M_allow_multimapping && _Mylist::_Get_key(_Where) == _Order_key &&

	je	SHORT $LN212@Insert
$LN11@Insert:

; 910  :                 this->_M_comparator(this->_Key_function(*_Where), this->_Key_function(_New_node->_M_element)) == 0)
; 911  :             {
; 912  :                 // If the insert failed (element already there), then delete the new one
; 913  :                 _M_split_ordered_list._Erase(_New_node);
; 914  : 
; 915  :                 // Element already in the list, return it
; 916  :                 return std::pair<iterator, bool>(_M_split_ordered_list._Get_iterator(_Where), false);
; 917  :             }
; 918  : 
; 919  :             // Move the iterator forward
; 920  :             _Iterator = _Where;

	mov	edi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 922  :         }

	jmp	SHORT $LL2@Insert
$LN8@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 610  :         _New_node->_M_next = _Current_node;

	mov	DWORD PTR [ecx], esi

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	edx, ecx
	mov	eax, esi
	lock	 cmpxchg DWORD PTR [edi], edx

; 230  : 
; 231  :             if (_Exchange_node == _Current_node)

	cmp	eax, esi
	je	SHORT $LN235@Insert

; 619  :         if (_Inserted_node == _List_node)

	cmp	eax, ecx
	je	SHORT $LN235@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR __Result$1[ebp], 0

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR __Result$1[ebp+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 906  :                     continue;

	jmp	SHORT $LN236@Insert
$LN212@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi
	pop	esi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 923  :     }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN235@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 623  :             *_New_count = _InterlockedIncrement(&_M_element_count);

	mov	edx, DWORD PTR _this$1$[ebp]
	mov	eax, 1
	lock	 xadd	 DWORD PTR [edx+140], eax
	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 894  :                     _Adjust_table_size(_New_count, _M_number_of_buckets);

	mov	esi, DWORD PTR [edx+148]
	lea	edi, DWORD PTR [edx+148]
	movd	xmm0, eax

; 1221 :         if (((float) _Total_elements / (float) _Current_size) > _M_maximum_bucket_size)

	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR __Result$1[ebp+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1221 :         if (((float) _Total_elements / (float) _Current_size) > _M_maximum_bucket_size)

	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	eax, esi
	shr	eax, 31					; 0000001fH
	cvtpd2ps xmm1, xmm0
	movd	xmm0, esi
	cvtdq2pd xmm0, xmm0
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	divss	xmm1, xmm0
	comiss	xmm1, DWORD PTR [edx+152]
	jbe	SHORT $LN138@Insert

; 1222 :         {
; 1223 :              // Double the size of the hash only if size has not changed inbetween loads
; 1224 :             _InterlockedCompareExchangeSizeT(&_M_number_of_buckets, 2 * _Current_size, _Current_size);

	lea	edx, DWORD PTR [esi+esi]
	mov	eax, esi
	lock	 cmpxchg DWORD PTR [edi], edx
$LN138@Insert:

; 895  :                     return _Result;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR __Result$1[ebp+4]
	mov	DWORD PTR [eax+4], ecx

; 923  :     }

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Insert<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$make_pair@ABQAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@YA?AU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@ABQAVISteamRemoteStorage@@$$QAPAVIWrapSteamRemoteStorage@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@ABQAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@YA?AU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@ABQAVISteamRemoteStorage@@$$QAPAVIWrapSteamRemoteStorage@@@Z PROC ; std::make_pair<ISteamRemoteStorage * const &,IWrapSteamRemoteStorage *>, COMDAT

; 341  : 	{	// return pair composed from arguments

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx

; 342  : 	typedef pair<typename _Unrefwrap<_Ty1>::type,
; 343  : 		typename _Unrefwrap<_Ty2>::type> _Mypair;
; 344  : 	return (_Mypair(_STD forward<_Ty1>(_Val1),
; 345  : 		_STD forward<_Ty2>(_Val2)));
; 346  : 	}

	pop	ebp
	ret	0
??$make_pair@ABQAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@YA?AU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@0@ABQAVISteamRemoteStorage@@$$QAPAVIWrapSteamRemoteStorage@@@Z ENDP ; std::make_pair<ISteamRemoteStorage * const &,IWrapSteamRemoteStorage *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??D?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QBEAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@XZ
_TEXT	SEGMENT
??D?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QBEAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@XZ PROC ; Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*, COMDAT
; _this$ = ecx

; 358  :         return ((reference)(*_Pnode)._M_element);

	mov	eax, DWORD PTR [ecx]
	add	eax, 4

; 148  :         return ((reference)**(_Mybase *)this);
; 149  :     }

	ret	0
??D?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QBEAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@XZ ENDP ; Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??0?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@@Z PROC ; Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >, COMDAT
; _this$ = ecx

; 130  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 131  :     }

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@@Z ENDP ; Concurrency::details::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Solist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z PROC ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::destroy<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@1@@Z ENDP ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::destroy<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??E?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE?AV01@H@Z PROC ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++, COMDAT
; _this$ = ecx

; 313  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 314  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 315  : 		++*this;
; 316  : 		return (_Tmp);
; 317  : 		}

	pop	ebp
	ret	8
??E?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE?AV01@H@Z ENDP ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??E?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEAAV01@XZ PROC ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 352  :         return ((_Nodepref)(*_Pnode)._M_next);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 308  : 		++(*(_Mybase *)this);
; 309  : 		return (*this);

	mov	eax, ecx

; 310  : 		}

	ret	0
??E?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEAAV01@XZ ENDP ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??D?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBEAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@XZ
_TEXT	SEGMENT
??D?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBEAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@XZ PROC ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 358  :         return ((reference)(*_Pnode)._M_element);

	mov	eax, DWORD PTR [ecx]
	add	eax, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 299  : 		}

	ret	0
??D?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBEAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@XZ ENDP ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??0?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z PROC ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >, COMDAT
; _this$ = ecx

; 280  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 281  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z ENDP ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??0?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@XZ PROC ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 275  : 		{	// construct with null node
; 276  : 		}

	mov	eax, ecx
	ret	0
??0?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@XZ ENDP ; std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
;	COMDAT ??$_Key_function@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@SAABQAVISteamRemoteStorage@@ABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z
_TEXT	SEGMENT
__Value$ = 8						; size = 4
??$_Key_function@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@SAABQAVISteamRemoteStorage@@ABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z PROC ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Key_function<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>, COMDAT

; 84   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 85   :         return (_Value.first);

	mov	eax, DWORD PTR __Value$[ebp]

; 86   :     }

	pop	ebp
	ret	0
??$_Key_function@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@SAABQAVISteamRemoteStorage@@ABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@Z ENDP ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Key_function<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??E?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE?AV012@H@Z PROC ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++, COMDAT
; _this$ = ecx

; 86   :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 87   :         _Myiter _Tmp = *this;

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, ecx
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi], eax
	npad	1
$LL10@operator:

; 352  :         return ((_Nodepref)(*_Pnode)._M_next);

	mov	ecx, DWORD PTR [edx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 80   :         while (this->_Mynode() != NULL && this->_Mynode()->_Is_dummy());

	test	ecx, ecx
	je	SHORT $LN36@operator
	mov	al, BYTE PTR [ecx+12]
	not	al
	test	al, 1
	jne	SHORT $LL10@operator

; 88   :         do
; 89   :         {
; 90   :             ++*this;
; 91   :         }
; 92   :         while (this->_Mynode() != NULL && this->_Mynode()->_Is_dummy());

	test	ecx, ecx
	je	SHORT $LN36@operator
	mov	cl, BYTE PTR [ecx+12]
	not	cl
	test	cl, 1
	jne	SHORT $LL10@operator
$LN36@operator:

; 93   : 
; 94   :         return (_Tmp);

	mov	eax, esi
	pop	esi

; 95   :     }

	pop	ebp
	ret	8
??E?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE?AV012@H@Z ENDP ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??E?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAEAAV012@XZ PROC ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++, COMDAT
; _this$ = ecx

; 75   :     {

	npad	2
$LL4@operator:

; 352  :         return ((_Nodepref)(*_Pnode)._M_next);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 80   :         while (this->_Mynode() != NULL && this->_Mynode()->_Is_dummy());

	test	eax, eax
	je	SHORT $LN20@operator
	mov	al, BYTE PTR [eax+12]
	not	al
	test	al, 1
	jne	SHORT $LL4@operator
$LN20@operator:

; 81   : 
; 82   :         return (*this);

	mov	eax, ecx

; 83   :     }

	ret	0
??E?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAEAAV012@XZ ENDP ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??D?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QBEABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@XZ
_TEXT	SEGMENT
??D?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QBEABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@XZ PROC ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*, COMDAT
; _this$ = ecx

; 358  :         return ((reference)(*_Pnode)._M_element);

	mov	eax, DWORD PTR [ecx]
	add	eax, 4

; 66   :         return ((reference)**(_Mybase *)this);
; 67   :     }

	ret	0
??D?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QBEABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@XZ ENDP ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??0?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@@Z PROC ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >, COMDAT
; _this$ = ecx

; 48   :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 49   :     }

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@12@@Z ENDP ; Concurrency::details::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Solist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??9?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBE_NABV01@@Z PROC ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator!=, COMDAT
; _this$ = ecx

; 237  : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 238  : 		return (!(*this == _Right));
; 239  : 		}

	pop	ebp
	ret	4
??9?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBE_NABV01@@Z ENDP ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??8?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBE_NABV01@@Z PROC ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator==, COMDAT
; _this$ = ecx

; 222  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 223  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 224  : 		if (this->_Getcont() != _Right._Getcont())
; 225  : 			{	// report error
; 226  : 			_DEBUG_ERROR("forward_list iterators incompatible");
; 227  : 			}
; 228  : 
; 229  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 230  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 231  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 232  : 
; 233  : 		return (this->_Ptr == _Right._Ptr);
; 234  : 		}

	pop	ebp
	ret	4
??8?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBE_NABV01@@Z ENDP ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??E?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE?AV01@H@Z PROC ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++, COMDAT
; _this$ = ecx

; 215  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 216  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 217  : 		++*this;
; 218  : 		return (_Tmp);
; 219  : 		}

	pop	ebp
	ret	8
??E?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE?AV01@H@Z ENDP ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??E?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEAAV01@XZ PROC ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 352  :         return ((_Nodepref)(*_Pnode)._M_next);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 211  : 		return (*this);

	mov	eax, ecx

; 212  : 		}

	ret	0
??E?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEAAV01@XZ ENDP ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??D?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBEABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@XZ
_TEXT	SEGMENT
??D?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBEABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@XZ PROC ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 358  :         return ((reference)(*_Pnode)._M_element);

	mov	eax, DWORD PTR [ecx]
	add	eax, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 195  : 		}

	ret	0
??D?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QBEABU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@1@XZ ENDP ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??0?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z PROC ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >, COMDAT
; _this$ = ecx

; 161  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 162  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z ENDP ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??0?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@XZ PROC ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 157  : 		}

	mov	eax, ecx
	ret	0
??0?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAE@XZ ENDP ; std::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >::_Flist_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ?_Mynode@?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QBEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@XZ
_TEXT	SEGMENT
?_Mynode@?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QBEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@XZ PROC ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 83   : 		return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 84   : 		}

	ret	0
?_Mynode@?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QBEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@XZ ENDP ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??0?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z PROC ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 45   : 		this->_Adopt(_Plist);
; 46   : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QAE@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@PBV?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@45@@Z ENDP ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
;	COMDAT ??0?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QAE@XZ PROC ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 40   : 		}

	mov	eax, ecx
	ret	0
??0?$_Flist_unchecked_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@U_Iterator_base0@std@@@std@@QAE@XZ ENDP ; std::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>::_Flist_unchecked_const_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
$T2 = -16						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
__Where$5 = -4						; size = 4
__Where$6 = -4						; size = 4
$T7 = -4						; size = 4
$T8 = -4						; size = 4
_pRemoteStorage$ = 8					; size = 4
_This$ = 8						; size = 4
_hSteamuser$ = 12					; size = 4
_hSteamPipe$ = 16					; size = 4
_pchVersion$ = 20					; size = 4
?SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z PROC ; SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage

; 718  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 719  :   SK_RunOnce (

	cmp	BYTE PTR ?first@?2??SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA, 0
	push	esi
	mov	esi, DWORD PTR _pchVersion$[ebp]
	push	edi
	je	SHORT $LN2@SK_SteamWr
	push	esi
	push	OFFSET $SG166994
	push	OFFSET $SG166995
	push	OFFSET ?steam_log@@3UiSK_Logger@@A	; steam_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?first@?2??SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA, 0
$LN2@SK_SteamWr:

; 720  :     steam_log.Log ( L"[!] %hs (..., %hs)",
; 721  :                       __FUNCTION__, pchVersion )
; 722  :   );
; 723  : 
; 724  :   ISteamRemoteStorage* pRemoteStorage =
; 725  :     This->GetISteamRemoteStorage ( hSteamuser,

	mov	ecx, DWORD PTR _This$[ebp]
	push	esi
	push	DWORD PTR _hSteamPipe$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _hSteamuser$[ebp]
	call	DWORD PTR [eax+68]
	mov	edi, eax
	mov	DWORD PTR _pRemoteStorage$[ebp], edi

; 726  :                                      hSteamPipe,
; 727  :                                        pchVersion );
; 728  : 
; 729  :   if (pRemoteStorage != nullptr)

	test	edi, edi
	je	$LN9@SK_SteamWr

; 730  :   {
; 731  :     if ((! lstrcmpA (pchVersion, STEAMREMOTESTORAGE_INTERFACE_VERSION_012)))

	push	OFFSET $SG166999
	push	esi
	call	DWORD PTR __imp__lstrcmpA@8
	test	eax, eax
	jne	$LN4@SK_SteamWr

; 732  :     {
; 733  :       if (SK_SteamWrapper_remap_remotestorage.count (pRemoteStorage))

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	call	?count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::count
	test	eax, eax
	jne	SHORT $LN168@SK_SteamWr

; 738  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	push	8
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T8[ebp], esi
	test	esi, esi
	je	SHORT $LN14@SK_SteamWr

; 20   :                                      pRealStorage (pRemoteStorage) {

	mov	DWORD PTR [esi], OFFSET ??_7IWrapSteamRemoteStorage012@@6B@
	mov	DWORD PTR [esi+4], edi

; 738  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	jmp	SHORT $LN15@SK_SteamWr
$LN14@SK_SteamWr:
	xor	esi, esi
$LN15@SK_SteamWr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 476  :         return _Find(_Keyval);

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	lea	eax, DWORD PTR __Where$6[ebp]
	push	eax
	call	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$6[ebp]
	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 716  :         if (_Where == this->end())

	jne	SHORT $LN72@SK_SteamWr
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR $T4[ebp+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	lea	eax, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR $T4[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Insert<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
	mov	eax, DWORD PTR [eax]
$LN72@SK_SteamWr:
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp

; 738  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	mov	DWORD PTR [eax+8], esi
$LN168@SK_SteamWr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 476  :         return _Find(_Keyval);

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	lea	eax, DWORD PTR __Where$5[ebp]
	push	eax
	call	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$5[ebp]
	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 716  :         if (_Where == this->end())

	jne	SHORT $LN21@SK_SteamWr
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR $T3[ebp+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	lea	eax, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR $T3[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Insert<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
	mov	eax, DWORD PTR [eax]
$LN21@SK_SteamWr:
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp

; 743  :         return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);

	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi

; 777  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN4@SK_SteamWr:

; 744  :       }
; 745  :     }
; 746  : 
; 747  :     else if ((! lstrcmpA (pchVersion, STEAMREMOTESTORAGE_INTERFACE_VERSION_014)))

	push	OFFSET $SG167005
	push	esi
	call	DWORD PTR __imp__lstrcmpA@8
	test	eax, eax
	jne	SHORT $LN8@SK_SteamWr

; 748  :     {
; 749  :       if (SK_SteamWrapper_remap_remotestorage.count (pRemoteStorage))

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	call	?count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::count
	test	eax, eax
	jne	SHORT $LN169@SK_SteamWr

; 750  :          return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);
; 751  : 
; 752  :       else
; 753  :       {
; 754  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	push	8
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T7[ebp], esi
	test	esi, esi
	je	SHORT $LN16@SK_SteamWr

; 393  :                                         pRealStorage (pRemoteStorage) {

	mov	DWORD PTR [esi], OFFSET ??_7IWrapSteamRemoteStorage014@@6B@
	mov	DWORD PTR [esi+4], edi

; 750  :          return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);
; 751  : 
; 752  :       else
; 753  :       {
; 754  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	jmp	SHORT $LN17@SK_SteamWr
$LN16@SK_SteamWr:
	xor	esi, esi
$LN17@SK_SteamWr:
	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	call	??A?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAEAAPAVIWrapSteamRemoteStorage@@ABQAVISteamRemoteStorage@@@Z ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::operator[]
	mov	DWORD PTR [eax], esi
$LN169@SK_SteamWr:

; 755  :           reinterpret_cast <IWrapSteamRemoteStorage *> (
; 756  :                 new IWrapSteamRemoteStorage014 (
; 757  :                   reinterpret_cast <ISteamRemoteStorage014 *> (pRemoteStorage)
; 758  :                 )
; 759  :           );
; 760  : 
; 761  :         return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	call	??A?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAEAAPAVIWrapSteamRemoteStorage@@ABQAVISteamRemoteStorage@@@Z ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::operator[]
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax]

; 777  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@SK_SteamWr:

; 762  :       }
; 763  :     }
; 764  : 
; 765  :     else
; 766  :     {
; 767  :       SK_RunOnce (

	cmp	BYTE PTR ?first@?BL@??SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA, 0
	je	SHORT $LN12@SK_SteamWr
	push	esi
	push	OFFSET $SG167010
	push	OFFSET ?steam_log@@3UiSK_Logger@@A	; steam_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	mov	BYTE PTR ?first@?BL@??SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA, 0
$LN12@SK_SteamWr:

; 768  :         steam_log.Log ( L"Game requested unexpected interface version (%hs)!",
; 769  :                           pchVersion )
; 770  :       );
; 771  : 
; 772  :       return pRemoteStorage;

	mov	eax, edi
	pop	edi
	pop	esi

; 777  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@SK_SteamWr:
	pop	edi

; 773  :     }
; 774  :   }
; 775  : 
; 776  :   return nullptr;

	xor	eax, eax
	pop	esi

; 777  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z ENDP ; SK_SteamWrapper_WrappedClient_GetISteamRemoteStorage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 8
$T2 = -24						; size = 8
$T3 = -16						; size = 8
$T4 = -16						; size = 8
$T5 = -16						; size = 8
__Where$6 = -12						; size = 4
__Where$7 = -12						; size = 4
__Where$8 = -12						; size = 4
$T9 = -12						; size = 4
$T10 = -12						; size = 4
$T11 = -8						; size = 8
_pRemoteStorage$ = -4					; size = 4
_This$ = 8						; size = 4
_hSteamuser$ = 12					; size = 4
_hSteamPipe$ = 16					; size = 4
_pchVersion$ = 20					; size = 4
?SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z PROC ; SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour

; 651  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 652  :   SK_RunOnce (

	cmp	BYTE PTR ?first@?2??SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA, 0
	push	esi
	push	edi
	mov	edi, DWORD PTR _pchVersion$[ebp]
	je	SHORT $LN2@SteamAPI_I
	push	edi
	push	OFFSET $SG166950
	push	OFFSET $SG166951
	push	OFFSET ?steam_log@@3UiSK_Logger@@A	; steam_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?first@?2??SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA, 0
$LN2@SteamAPI_I:

; 653  :     steam_log.Log ( L"[!] %hs (..., %hs)",
; 654  :                       __FUNCTION__, pchVersion )
; 655  :   );
; 656  : 
; 657  :   ISteamRemoteStorage* pRemoteStorage =
; 658  :     SteamAPI_ISteamClient_GetISteamRemoteStorage_Original ( This,

	push	edi
	push	DWORD PTR _hSteamPipe$[ebp]
	push	DWORD PTR _hSteamuser$[ebp]
	push	DWORD PTR _This$[ebp]
	call	DWORD PTR ?SteamAPI_ISteamClient_GetISteamRemoteStorage_Original@@3P6APAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@ZA ; SteamAPI_ISteamClient_GetISteamRemoteStorage_Original
	mov	esi, eax
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRemoteStorage$[ebp], esi

; 659  :                                                               hSteamuser,
; 660  :                                                                 hSteamPipe,
; 661  :                                                                   pchVersion );
; 662  : 
; 663  :   if (pRemoteStorage != nullptr)

	test	esi, esi
	je	$LN9@SteamAPI_I

; 664  :   {
; 665  :     if ((! lstrcmpA (pchVersion, STEAMREMOTESTORAGE_INTERFACE_VERSION_012)))

	push	OFFSET $SG166955
	push	edi
	call	DWORD PTR __imp__lstrcmpA@8
	test	eax, eax
	jne	$LN4@SteamAPI_I

; 666  :     {
; 667  :       if (SK_SteamWrapper_remap_remotestorage.count (pRemoteStorage))

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	call	?count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::count
	test	eax, eax
	je	SHORT $LN6@SteamAPI_I
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 476  :         return _Find(_Keyval);

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	lea	eax, DWORD PTR __Where$8[ebp]
	push	eax
	call	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$8[ebp]
	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 716  :         if (_Where == this->end())

	jne	SHORT $LN21@SteamAPI_I

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	eax, DWORD PTR $T11[ebp]
$LN170@SteamAPI_I:
	push	eax
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR $T5[ebp+4], 0
	mov	DWORD PTR $T5[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	call	??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Insert<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
	mov	eax, DWORD PTR [eax]
$LN21@SteamAPI_I:
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp

; 668  :          return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);

	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi

; 711  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@SteamAPI_I:

; 672  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	push	8
	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR $T10[ebp], edi
	test	edi, edi
	je	SHORT $LN14@SteamAPI_I

; 20   :                                      pRealStorage (pRemoteStorage) {

	mov	DWORD PTR [edi], OFFSET ??_7IWrapSteamRemoteStorage012@@6B@
	mov	DWORD PTR [edi+4], esi

; 672  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	jmp	SHORT $LN15@SteamAPI_I
$LN14@SteamAPI_I:
	xor	edi, edi
$LN15@SteamAPI_I:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 476  :         return _Find(_Keyval);

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	lea	eax, DWORD PTR __Where$7[ebp]
	push	eax
	call	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$7[ebp]
	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 716  :         if (_Where == this->end())

	jne	SHORT $LN72@SteamAPI_I
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR $T4[ebp+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	lea	eax, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR $T4[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Insert<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
	mov	eax, DWORD PTR [eax]
$LN72@SteamAPI_I:
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp

; 672  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	mov	DWORD PTR [eax+8], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 476  :         return _Find(_Keyval);

	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	push	eax
	lea	eax, DWORD PTR __Where$6[ebp]
	push	eax
	call	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$6[ebp]
	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 716  :         if (_Where == this->end())

	jne	SHORT $LN21@SteamAPI_I

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp

; 677  :         return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);

	jmp	$LN170@SteamAPI_I
$LN4@SteamAPI_I:

; 678  :       }
; 679  :     }
; 680  : 
; 681  :     else if ((! lstrcmpA (pchVersion, STEAMREMOTESTORAGE_INTERFACE_VERSION_014)))

	push	OFFSET $SG166961
	push	edi
	call	DWORD PTR __imp__lstrcmpA@8
	test	eax, eax
	jne	SHORT $LN8@SteamAPI_I

; 682  :     {
; 683  :       if (SK_SteamWrapper_remap_remotestorage.count (pRemoteStorage))

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	call	?count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::count
	test	eax, eax
	jne	SHORT $LN169@SteamAPI_I

; 684  :          return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);
; 685  : 
; 686  :       else
; 687  :       {
; 688  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	push	8
	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR $T9[ebp], edi
	test	edi, edi
	je	SHORT $LN16@SteamAPI_I

; 393  :                                         pRealStorage (pRemoteStorage) {

	mov	DWORD PTR [edi], OFFSET ??_7IWrapSteamRemoteStorage014@@6B@
	mov	DWORD PTR [edi+4], esi

; 684  :          return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);
; 685  : 
; 686  :       else
; 687  :       {
; 688  :         SK_SteamWrapper_remap_remotestorage [pRemoteStorage] =

	jmp	SHORT $LN17@SteamAPI_I
$LN16@SteamAPI_I:
	xor	edi, edi
$LN17@SteamAPI_I:
	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	call	??A?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAEAAPAVIWrapSteamRemoteStorage@@ABQAVISteamRemoteStorage@@@Z ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::operator[]
	mov	DWORD PTR [eax], edi
$LN169@SteamAPI_I:

; 689  :           reinterpret_cast <IWrapSteamRemoteStorage *> (
; 690  :                 new IWrapSteamRemoteStorage014 (
; 691  :                   reinterpret_cast <ISteamRemoteStorage014 *> (pRemoteStorage)
; 692  :                 )
; 693  :           );
; 694  : 
; 695  :         return reinterpret_cast <ISteamRemoteStorage *> (SK_SteamWrapper_remap_remotestorage [pRemoteStorage]);

	lea	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	push	eax
	call	??A?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAEAAPAVIWrapSteamRemoteStorage@@ABQAVISteamRemoteStorage@@@Z ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::operator[]
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax]

; 711  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@SteamAPI_I:

; 696  :       }
; 697  :     }
; 698  : 
; 699  :     else
; 700  :     {
; 701  :       SK_RunOnce (

	cmp	BYTE PTR ?first@?BL@??SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA, 0
	je	SHORT $LN12@SteamAPI_I
	push	edi
	push	OFFSET $SG166966
	push	OFFSET ?steam_log@@3UiSK_Logger@@A	; steam_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	mov	BYTE PTR ?first@?BL@??SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z@4_NA, 0
$LN12@SteamAPI_I:

; 702  :         steam_log.Log ( L"Game requested unexpected interface version (%hs)!",
; 703  :                           pchVersion )
; 704  :       );
; 705  : 
; 706  :       return pRemoteStorage;

	pop	edi
	mov	eax, esi
	pop	esi

; 711  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@SteamAPI_I:
	pop	edi

; 707  :     }
; 708  :   }
; 709  : 
; 710  :   return nullptr;

	xor	eax, eax
	pop	esi

; 711  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour@@YAPAVISteamRemoteStorage@@PAVISteamClient@@HHPBD@Z ENDP ; SteamAPI_ISteamClient_GetISteamRemoteStorage_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UGCDownloadToLocation@IWrapSteamRemoteStorage014@@UAE_K_KPBDI@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_pchLocation$ = 16					; size = 4
_unPriority$ = 20					; size = 4
?UGCDownloadToLocation@IWrapSteamRemoteStorage014@@UAE_K_KPBDI@Z PROC ; IWrapSteamRemoteStorage014::UGCDownloadToLocation, COMDAT
; _this$ = ecx

; 627  :    { return pRealStorage->UGCDownloadToLocation (hContent, pchLocation, unPriority);                                                                        }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _unPriority$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchLocation$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _hContent$[ebp]
	mov	eax, DWORD PTR [eax+216]
	call	eax
	pop	ebp
	ret	16					; 00000010H
?UGCDownloadToLocation@IWrapSteamRemoteStorage014@@UAE_K_KPBDI@Z ENDP ; IWrapSteamRemoteStorage014::UGCDownloadToLocation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z
_TEXT	SEGMENT
_eEnumerationType$ = 8					; size = 4
_unStartIndex$ = 12					; size = 4
_unCount$ = 16						; size = 4
_unDays$ = 20						; size = 4
_pTags$ = 24						; size = 4
_pUserTags$ = 28					; size = 4
?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z PROC ; IWrapSteamRemoteStorage014::EnumeratePublishedWorkshopFiles, COMDAT
; _this$ = ecx

; 622  :    { return pRealStorage->EnumeratePublishedWorkshopFiles ( eEnumerationType, unStartIndex, unCount, unDays, pTags, pUserTags );                            }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+212]
	pop	ebp
	jmp	eax
?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z ENDP ; IWrapSteamRemoteStorage014::EnumeratePublishedWorkshopFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopFileAction@@I@Z
_TEXT	SEGMENT
_eAction$ = 8						; size = 4
_unStartIndex$ = 12					; size = 4
?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopFileAction@@I@Z PROC ; IWrapSteamRemoteStorage014::EnumeratePublishedFilesByUserAction, COMDAT
; _this$ = ecx

; 613  :    { return pRealStorage->EnumeratePublishedFilesByUserAction (eAction, unStartIndex);                                                                      }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+208]
	pop	ebp
	jmp	eax
?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopFileAction@@I@Z ENDP ; IWrapSteamRemoteStorage014::EnumeratePublishedFilesByUserAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?SetUserPublishedFileAction@IWrapSteamRemoteStorage014@@UAE_K_KW4EWorkshopFileAction@@@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
_eAction$ = 16						; size = 4
?SetUserPublishedFileAction@IWrapSteamRemoteStorage014@@UAE_K_KW4EWorkshopFileAction@@@Z PROC ; IWrapSteamRemoteStorage014::SetUserPublishedFileAction, COMDAT
; _this$ = ecx

; 610  :    { return pRealStorage->SetUserPublishedFileAction (unPublishedFileId, eAction);                                                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _eAction$[ebp]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [eax+204]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?SetUserPublishedFileAction@IWrapSteamRemoteStorage014@@UAE_K_KW4EWorkshopFileAction@@@Z ENDP ; IWrapSteamRemoteStorage014::SetUserPublishedFileAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?PublishVideo@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z
_TEXT	SEGMENT
_eVideoProvider$ = 8					; size = 4
_pchVideoAccount$ = 12					; size = 4
_pchVideoIdentifier$ = 16				; size = 4
_pchPreviewFile$ = 20					; size = 4
_nConsumerAppId$ = 24					; size = 4
_pchTitle$ = 28						; size = 4
_pchDescription$ = 32					; size = 4
_eVisibility$ = 36					; size = 4
_pTags$ = 40						; size = 4
?PublishVideo@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z PROC ; IWrapSteamRemoteStorage014::PublishVideo, COMDAT
; _this$ = ecx

; 605  :    { return pRealStorage->PublishVideo ( eVideoProvider, pchVideoAccount, pchVideoIdentifier,

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+200]

; 606  :                                            pchPreviewFile, nConsumerAppId, pchTitle, pchDescription,
; 607  :                                              eVisibility, pTags );                                                                                          }

	pop	ebp

; 605  :    { return pRealStorage->PublishVideo ( eVideoProvider, pchVideoAccount, pchVideoIdentifier,

	jmp	eax
?PublishVideo@IWrapSteamRemoteStorage014@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z ENDP ; IWrapSteamRemoteStorage014::PublishVideo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z
_TEXT	SEGMENT
_steamId$ = 8						; size = 8
_unStartIndex$ = 16					; size = 4
_pRequiredTags$ = 20					; size = 4
_pExcludedTags$ = 24					; size = 4
?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z PROC ; IWrapSteamRemoteStorage014::EnumerateUserSharedWorkshopFiles, COMDAT
; _this$ = ecx

; 595  :    { return pRealStorage->EnumerateUserSharedWorkshopFiles (steamId, unStartIndex, pRequiredTags, pExcludedTags);                                           }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _pExcludedTags$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pRequiredTags$[ebp]
	push	DWORD PTR _unStartIndex$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _steamId$[ebp+4]
	push	DWORD PTR _steamId$[ebp]
	mov	eax, DWORD PTR [eax+196]
	call	eax
	pop	ebp
	ret	20					; 00000014H
?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage014@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z ENDP ; IWrapSteamRemoteStorage014::EnumerateUserSharedWorkshopFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage014::GetUserPublishedItemVoteDetails, COMDAT
; _this$ = ecx

; 590  :    { return pRealStorage->GetUserPublishedItemVoteDetails (unPublishedFileId);                                                                              }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+192]
	call	eax
	pop	ebp
	ret	8
?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage014::GetUserPublishedItemVoteDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage014@@UAE_K_K_N@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
_bVoteUp$ = 16						; size = 1
?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage014@@UAE_K_K_N@Z PROC ; IWrapSteamRemoteStorage014::UpdateUserPublishedItemVote, COMDAT
; _this$ = ecx

; 588  :    { return pRealStorage->UpdateUserPublishedItemVote (unPublishedFileId, bVoteUp);                                                                         }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _bVoteUp$[ebp]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [eax+188]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage014@@UAE_K_K_N@Z ENDP ; IWrapSteamRemoteStorage014::UpdateUserPublishedItemVote
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage014::GetPublishedItemVoteDetails, COMDAT
; _this$ = ecx

; 585  :    { return pRealStorage->GetPublishedItemVoteDetails (unPublishedFileId);                                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+184]
	call	eax
	pop	ebp
	ret	8
?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage014@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage014::GetPublishedItemVoteDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchChangeDescription$ = 16				; size = 4
?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage014::UpdatePublishedFileSetChangeDescription, COMDAT
; _this$ = ecx

; 583  :    { return pRealStorage->UpdatePublishedFileSetChangeDescription (updateHandle, pchChangeDescription);                                                     }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchChangeDescription$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+180]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage014::UpdatePublishedFileSetChangeDescription
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UnsubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?UnsubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage014::UnsubscribePublishedFile, COMDAT
; _this$ = ecx

; 580  :    { return pRealStorage->UnsubscribePublishedFile     (unPublishedFileId);                                                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+176]
	call	eax
	pop	ebp
	ret	8
?UnsubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage014::UnsubscribePublishedFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z
_TEXT	SEGMENT
_unStartIndex$ = 8					; size = 4
?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z PROC ; IWrapSteamRemoteStorage014::EnumerateUserSubscribedFiles, COMDAT
; _this$ = ecx

; 578  :    { return pRealStorage->EnumerateUserSubscribedFiles (unStartIndex);                                                                                      }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+172]
	pop	ebp
	jmp	eax
?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z ENDP ; IWrapSteamRemoteStorage014::EnumerateUserSubscribedFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?SubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?SubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage014::SubscribePublishedFile, COMDAT
; _this$ = ecx

; 576  :    { return pRealStorage->SubscribePublishedFile       (unPublishedFileId);                                                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+168]
	call	eax
	pop	ebp
	ret	8
?SubscribePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage014::SubscribePublishedFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z
_TEXT	SEGMENT
_unStartIndex$ = 8					; size = 4
?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z PROC ; IWrapSteamRemoteStorage014::EnumerateUserPublishedFiles, COMDAT
; _this$ = ecx

; 574  :    { return pRealStorage->EnumerateUserPublishedFiles  (unStartIndex);                                                                                      }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+164]
	pop	ebp
	jmp	eax
?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage014@@UAE_KI@Z ENDP ; IWrapSteamRemoteStorage014::EnumerateUserPublishedFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?DeletePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?DeletePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage014::DeletePublishedFile, COMDAT
; _this$ = ecx

; 571  :    { return pRealStorage->DeletePublishedFile          (unPublishedFileId);                                                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+160]
	call	eax
	pop	ebp
	ret	8
?DeletePublishedFile@IWrapSteamRemoteStorage014@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage014::DeletePublishedFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetPublishedFileDetails@IWrapSteamRemoteStorage014@@UAE_K_KI@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
_unMaxSecondsOld$ = 16					; size = 4
?GetPublishedFileDetails@IWrapSteamRemoteStorage014@@UAE_K_KI@Z PROC ; IWrapSteamRemoteStorage014::GetPublishedFileDetails, COMDAT
; _this$ = ecx

; 569  :    { return pRealStorage->GetPublishedFileDetails      (unPublishedFileId, unMaxSecondsOld);                                                                }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unMaxSecondsOld$[ebp]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [eax+156]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?GetPublishedFileDetails@IWrapSteamRemoteStorage014@@UAE_K_KI@Z ENDP ; IWrapSteamRemoteStorage014::GetPublishedFileDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?CommitPublishedFileUpdate@IWrapSteamRemoteStorage014@@UAE_K_K@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
?CommitPublishedFileUpdate@IWrapSteamRemoteStorage014@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage014::CommitPublishedFileUpdate, COMDAT
; _this$ = ecx

; 562  :    { return pRealStorage->CommitPublishedFileUpdate      (updateHandle);                                                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _updateHandle$[ebp+4]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+152]
	call	eax
	pop	ebp
	ret	8
?CommitPublishedFileUpdate@IWrapSteamRemoteStorage014@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage014::CommitPublishedFileUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileTags@IWrapSteamRemoteStorage014@@UAE_N_KPAUSteamParamStringArray_t@@@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pTags$ = 16						; size = 4
?UpdatePublishedFileTags@IWrapSteamRemoteStorage014@@UAE_N_KPAUSteamParamStringArray_t@@@Z PROC ; IWrapSteamRemoteStorage014::UpdatePublishedFileTags, COMDAT
; _this$ = ecx

; 560  :    { return pRealStorage->UpdatePublishedFileTags        (updateHandle, pTags);                                                                   }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pTags$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+148]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileTags@IWrapSteamRemoteStorage014@@UAE_N_KPAUSteamParamStringArray_t@@@Z ENDP ; IWrapSteamRemoteStorage014::UpdatePublishedFileTags
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage014@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_eVisibility$ = 16					; size = 4
?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage014@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z PROC ; IWrapSteamRemoteStorage014::UpdatePublishedFileVisibility, COMDAT
; _this$ = ecx

; 557  :    { return pRealStorage->UpdatePublishedFileVisibility  (updateHandle, eVisibility);                                                             }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _eVisibility$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+144]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage014@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z ENDP ; IWrapSteamRemoteStorage014::UpdatePublishedFileVisibility
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchDescription$ = 16					; size = 4
?UpdatePublishedFileDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage014::UpdatePublishedFileDescription, COMDAT
; _this$ = ecx

; 554  :    { return pRealStorage->UpdatePublishedFileDescription (updateHandle, pchDescription);                                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchDescription$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+140]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileDescription@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage014::UpdatePublishedFileDescription
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileTitle@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchTitle$ = 16						; size = 4
?UpdatePublishedFileTitle@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage014::UpdatePublishedFileTitle, COMDAT
; _this$ = ecx

; 551  :    { return pRealStorage->UpdatePublishedFileTitle       (updateHandle, pchTitle);                                                                }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchTitle$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+136]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileTitle@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage014::UpdatePublishedFileTitle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchPreviewFile$ = 16					; size = 4
?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage014::UpdatePublishedFilePreviewFile, COMDAT
; _this$ = ecx

; 548  :    { return pRealStorage->UpdatePublishedFilePreviewFile (updateHandle, pchPreviewFile);                                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchPreviewFile$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+132]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage014::UpdatePublishedFilePreviewFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchFile$ = 16						; size = 4
?UpdatePublishedFileFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage014::UpdatePublishedFileFile, COMDAT
; _this$ = ecx

; 545  :    { return pRealStorage->UpdatePublishedFileFile        (updateHandle, pchFile);                                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchFile$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+128]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileFile@IWrapSteamRemoteStorage014@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage014::UpdatePublishedFileFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage014@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage014@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage014::CreatePublishedFileUpdateRequest, COMDAT
; _this$ = ecx

; 542  :    { return pRealStorage->CreatePublishedFileUpdateRequest (unPublishedFileId);                                                                   }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+124]
	call	eax
	pop	ebp
	ret	8
?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage014@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage014::CreatePublishedFileUpdateRequest
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?PublishWorkshopFile@IWrapSteamRemoteStorage014@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_pchPreviewFile$ = 12					; size = 4
_nConsumerAppId$ = 16					; size = 4
_pchTitle$ = 20						; size = 4
_pchDescription$ = 24					; size = 4
_eVisibility$ = 28					; size = 4
_pTags$ = 32						; size = 4
_eWorkshopFileType$ = 36				; size = 4
?PublishWorkshopFile@IWrapSteamRemoteStorage014@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z PROC ; IWrapSteamRemoteStorage014::PublishWorkshopFile, COMDAT
; _this$ = ecx

; 538  :    { return pRealStorage->PublishWorkshopFile ( pchFile, pchPreviewFile, nConsumerAppId,

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+120]

; 539  :                                                   pchTitle, pchDescription, eVisibility, pTags, eWorkshopFileType );                              }

	pop	ebp

; 538  :    { return pRealStorage->PublishWorkshopFile ( pchFile, pchPreviewFile, nConsumerAppId,

	jmp	eax
?PublishWorkshopFile@IWrapSteamRemoteStorage014@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z ENDP ; IWrapSteamRemoteStorage014::PublishWorkshopFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetCachedUGCHandle@IWrapSteamRemoteStorage014@@UAE_KH@Z
_TEXT	SEGMENT
_iCachedContent$ = 8					; size = 4
?GetCachedUGCHandle@IWrapSteamRemoteStorage014@@UAE_KH@Z PROC ; IWrapSteamRemoteStorage014::GetCachedUGCHandle, COMDAT
; _this$ = ecx

; 527  :    { return pRealStorage->GetCachedUGCHandle (iCachedContent);                                      }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+116]
	pop	ebp
	jmp	eax
?GetCachedUGCHandle@IWrapSteamRemoteStorage014@@UAE_KH@Z ENDP ; IWrapSteamRemoteStorage014::GetCachedUGCHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetCachedUGCCount@IWrapSteamRemoteStorage014@@UAEHXZ
_TEXT	SEGMENT
?GetCachedUGCCount@IWrapSteamRemoteStorage014@@UAEHXZ PROC ; IWrapSteamRemoteStorage014::GetCachedUGCCount, COMDAT
; _this$ = ecx

; 525  :    { return pRealStorage->GetCachedUGCCount  ();                                                    }

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+112]
?GetCachedUGCCount@IWrapSteamRemoteStorage014@@UAEHXZ ENDP ; IWrapSteamRemoteStorage014::GetCachedUGCCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UGCRead@IWrapSteamRemoteStorage014@@UAEH_KPAXHIW4EUGCReadAction@@@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_pvData$ = 16						; size = 4
_cubDataToRead$ = 20					; size = 4
_cOffset$ = 24						; size = 4
_eAction$ = 28						; size = 4
?UGCRead@IWrapSteamRemoteStorage014@@UAEH_KPAXHIW4EUGCReadAction@@@Z PROC ; IWrapSteamRemoteStorage014::UGCRead, COMDAT
; _this$ = ecx

; 521  :    { return pRealStorage->UGCRead (hContent, pvData, cubDataToRead, cOffset, eAction);              }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _eAction$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _cOffset$[ebp]
	push	DWORD PTR _cubDataToRead$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _pvData$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	push	DWORD PTR _hContent$[ebp]
	call	DWORD PTR [eax+108]
	pop	ebp
	ret	24					; 00000018H
?UGCRead@IWrapSteamRemoteStorage014@@UAEH_KPAXHIW4EUGCReadAction@@@Z ENDP ; IWrapSteamRemoteStorage014::UGCRead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetUGCDetails@IWrapSteamRemoteStorage014@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_pnAppID$ = 16						; size = 4
_ppchName$ = 20						; size = 4
_pnFileSizeInBytes$ = 24				; size = 4
_pSteamIDOwner$ = 28					; size = 4
?GetUGCDetails@IWrapSteamRemoteStorage014@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z PROC ; IWrapSteamRemoteStorage014::GetUGCDetails, COMDAT
; _this$ = ecx

; 508  :    { return pRealStorage->GetUGCDetails (hContent, pnAppID, ppchName, pnFileSizeInBytes, pSteamIDOwner); }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _pSteamIDOwner$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pnFileSizeInBytes$[ebp]
	push	DWORD PTR _ppchName$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _pnAppID$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	mov	eax, DWORD PTR [eax+104]
	push	DWORD PTR _hContent$[ebp]
	call	eax
	pop	ebp
	ret	24					; 00000018H
?GetUGCDetails@IWrapSteamRemoteStorage014@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z ENDP ; IWrapSteamRemoteStorage014::GetUGCDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetUGCDownloadProgress@IWrapSteamRemoteStorage014@@UAE_N_KPAH1@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_pnBytesDownloaded$ = 16				; size = 4
_pnBytesExpected$ = 20					; size = 4
?GetUGCDownloadProgress@IWrapSteamRemoteStorage014@@UAE_N_KPAH1@Z PROC ; IWrapSteamRemoteStorage014::GetUGCDownloadProgress, COMDAT
; _this$ = ecx

; 500  :    { return pRealStorage->GetUGCDownloadProgress (hContent, pnBytesDownloaded, pnBytesExpected);         }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _pnBytesExpected$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pnBytesDownloaded$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _hContent$[ebp]
	mov	eax, DWORD PTR [eax+100]
	call	eax
	pop	ebp
	ret	16					; 00000010H
?GetUGCDownloadProgress@IWrapSteamRemoteStorage014@@UAE_N_KPAH1@Z ENDP ; IWrapSteamRemoteStorage014::GetUGCDownloadProgress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UGCDownload@IWrapSteamRemoteStorage014@@UAE_K_KI@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_unPriority$ = 16					; size = 4
?UGCDownload@IWrapSteamRemoteStorage014@@UAE_K_KI@Z PROC ; IWrapSteamRemoteStorage014::UGCDownload, COMDAT
; _this$ = ecx

; 493  :    { return pRealStorage->UGCDownload (hContent, unPriority);                                            }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPriority$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _hContent$[ebp]
	mov	eax, DWORD PTR [eax+96]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UGCDownload@IWrapSteamRemoteStorage014@@UAE_K_KI@Z ENDP ; IWrapSteamRemoteStorage014::UGCDownload
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?SetCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAEX_N@Z
_TEXT	SEGMENT
_bEnabled$ = 8						; size = 1
?SetCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAEX_N@Z PROC ; IWrapSteamRemoteStorage014::SetCloudEnabledForApp, COMDAT
; _this$ = ecx

; 484  :    { return pRealStorage->SetCloudEnabledForApp (bEnabled);                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	pop	ebp
	jmp	DWORD PTR [eax+92]
?SetCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAEX_N@Z ENDP ; IWrapSteamRemoteStorage014::SetCloudEnabledForApp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?IsCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAE_NXZ
_TEXT	SEGMENT
?IsCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAE_NXZ PROC ; IWrapSteamRemoteStorage014::IsCloudEnabledForApp, COMDAT
; _this$ = ecx

; 482  :    { return pRealStorage->IsCloudEnabledForApp ();                                                   }

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+88]
	jmp	eax
?IsCloudEnabledForApp@IWrapSteamRemoteStorage014@@UAE_NXZ ENDP ; IWrapSteamRemoteStorage014::IsCloudEnabledForApp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?IsCloudEnabledForAccount@IWrapSteamRemoteStorage014@@UAE_NXZ
_TEXT	SEGMENT
?IsCloudEnabledForAccount@IWrapSteamRemoteStorage014@@UAE_NXZ PROC ; IWrapSteamRemoteStorage014::IsCloudEnabledForAccount, COMDAT
; _this$ = ecx

; 480  :    { return pRealStorage->IsCloudEnabledForAccount ();                                               }

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+84]
	jmp	eax
?IsCloudEnabledForAccount@IWrapSteamRemoteStorage014@@UAE_NXZ ENDP ; IWrapSteamRemoteStorage014::IsCloudEnabledForAccount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetQuota@IWrapSteamRemoteStorage014@@UAE_NPA_K0@Z
_TEXT	SEGMENT
_pnTotalBytes$ = 8					; size = 4
_puAvailableBytes$ = 12					; size = 4
?GetQuota@IWrapSteamRemoteStorage014@@UAE_NPA_K0@Z PROC	; IWrapSteamRemoteStorage014::GetQuota, COMDAT
; _this$ = ecx

; 478  :    { return pRealStorage->GetQuota (pnTotalBytes, puAvailableBytes);                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+80]
	pop	ebp
	jmp	eax
?GetQuota@IWrapSteamRemoteStorage014@@UAE_NPA_K0@Z ENDP	; IWrapSteamRemoteStorage014::GetQuota
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetFileNameAndSize@IWrapSteamRemoteStorage014@@UAEPBDHPAH@Z
_TEXT	SEGMENT
_iFile$ = 8						; size = 4
_pnFileSizeInBytes$ = 12				; size = 4
?GetFileNameAndSize@IWrapSteamRemoteStorage014@@UAEPBDHPAH@Z PROC ; IWrapSteamRemoteStorage014::GetFileNameAndSize, COMDAT
; _this$ = ecx

; 465  :    {

	npad	2
	push	ebp
	mov	ebp, esp

; 466  :      const char* pszRet =
; 467  :        pRealStorage->GetFileNameAndSize (iFile, pnFileSizeInBytes);

	mov	ecx, DWORD PTR [ecx+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _pnFileSizeInBytes$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	edi
	push	DWORD PTR _iFile$[ebp]
	call	DWORD PTR [eax+76]
	mov	esi, eax

; 468  : 
; 469  :      steam_log.Log ( L"ISteamRemoteStorage014 ** File: (%hs:%lu) - %lu Bytes",

	test	edi, edi
	je	SHORT $LN3@GetFileNam
	mov	ecx, DWORD PTR [edi]
	jmp	SHORT $LN4@GetFileNam
$LN3@GetFileNam:
	xor	ecx, ecx
$LN4@GetFileNam:
	push	ecx
	push	DWORD PTR _iFile$[ebp]
	push	esi
	push	OFFSET ??_C@_1GM@NGJPJAAG@?$AAI?$AAS?$AAt?$AAe?$AAa?$AAm?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA0?$AA1?$AA4?$AA?5?$AA?$CK?$AA?$CK?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?3?$AA?5@
	push	OFFSET ?steam_log@@3UiSK_Logger@@A	; steam_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 470  :                        pszRet, iFile, pnFileSizeInBytes != nullptr ? *pnFileSizeInBytes : 0 );
; 471  : 
; 472  :      return pszRet;

	mov	eax, esi
	pop	edi
	pop	esi

; 473  :    }

	pop	ebp
	ret	8
?GetFileNameAndSize@IWrapSteamRemoteStorage014@@UAEPBDHPAH@Z ENDP ; IWrapSteamRemoteStorage014::GetFileNameAndSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetFileCount@IWrapSteamRemoteStorage014@@UAEHXZ
_TEXT	SEGMENT
?GetFileCount@IWrapSteamRemoteStorage014@@UAEHXZ PROC	; IWrapSteamRemoteStorage014::GetFileCount, COMDAT
; _this$ = ecx

; 462  :    { return pRealStorage->GetFileCount ();                                                           }

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+72]
?GetFileCount@IWrapSteamRemoteStorage014@@UAEHXZ ENDP	; IWrapSteamRemoteStorage014::GetFileCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE?AW4ERemoteStoragePlatform@@PBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?GetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE?AW4ERemoteStoragePlatform@@PBD@Z PROC ; IWrapSteamRemoteStorage014::GetSyncPlatforms, COMDAT
; _this$ = ecx

; 458  :    { return pRealStorage->GetSyncPlatforms (pchFile);                                           }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	pop	ebp
	jmp	DWORD PTR [eax+68]
?GetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE?AW4ERemoteStoragePlatform@@PBD@Z ENDP ; IWrapSteamRemoteStorage014::GetSyncPlatforms
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetFileTimestamp@IWrapSteamRemoteStorage014@@UAE_JPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?GetFileTimestamp@IWrapSteamRemoteStorage014@@UAE_JPBD@Z PROC ; IWrapSteamRemoteStorage014::GetFileTimestamp, COMDAT
; _this$ = ecx

; 456  :    { return pRealStorage->GetFileTimestamp (pchFile);                                           }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+64]
	pop	ebp
	jmp	eax
?GetFileTimestamp@IWrapSteamRemoteStorage014@@UAE_JPBD@Z ENDP ; IWrapSteamRemoteStorage014::GetFileTimestamp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetFileSize@IWrapSteamRemoteStorage014@@UAEHPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?GetFileSize@IWrapSteamRemoteStorage014@@UAEHPBD@Z PROC	; IWrapSteamRemoteStorage014::GetFileSize, COMDAT
; _this$ = ecx

; 454  :    { return pRealStorage->GetFileSize (pchFile);                                                }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	pop	ebp
	jmp	DWORD PTR [eax+60]
?GetFileSize@IWrapSteamRemoteStorage014@@UAEHPBD@Z ENDP	; IWrapSteamRemoteStorage014::GetFileSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FilePersisted@IWrapSteamRemoteStorage014@@UAE_NPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FilePersisted@IWrapSteamRemoteStorage014@@UAE_NPBD@Z PROC ; IWrapSteamRemoteStorage014::FilePersisted, COMDAT
; _this$ = ecx

; 452  :    { return pRealStorage->FilePersisted (pchFile);                                              }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+56]
	pop	ebp
	jmp	eax
?FilePersisted@IWrapSteamRemoteStorage014@@UAE_NPBD@Z ENDP ; IWrapSteamRemoteStorage014::FilePersisted
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileExists@IWrapSteamRemoteStorage014@@UAE_NPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileExists@IWrapSteamRemoteStorage014@@UAE_NPBD@Z PROC	; IWrapSteamRemoteStorage014::FileExists, COMDAT
; _this$ = ecx

; 450  :    { return pRealStorage->FileExists (pchFile);                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+52]
	pop	ebp
	jmp	eax
?FileExists@IWrapSteamRemoteStorage014@@UAE_NPBD@Z ENDP	; IWrapSteamRemoteStorage014::FileExists
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteStreamCancel@IWrapSteamRemoteStorage014@@UAE_N_K@Z
_TEXT	SEGMENT
_writeHandle$ = 8					; size = 8
?FileWriteStreamCancel@IWrapSteamRemoteStorage014@@UAE_N_K@Z PROC ; IWrapSteamRemoteStorage014::FileWriteStreamCancel, COMDAT
; _this$ = ecx

; 446  :    { return pRealStorage->FileWriteStreamCancel (writeHandle);                                                             }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _writeHandle$[ebp+4]
	push	DWORD PTR _writeHandle$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+48]
	call	eax
	pop	ebp
	ret	8
?FileWriteStreamCancel@IWrapSteamRemoteStorage014@@UAE_N_K@Z ENDP ; IWrapSteamRemoteStorage014::FileWriteStreamCancel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteStreamClose@IWrapSteamRemoteStorage014@@UAE_N_K@Z
_TEXT	SEGMENT
_writeHandle$ = 8					; size = 8
?FileWriteStreamClose@IWrapSteamRemoteStorage014@@UAE_N_K@Z PROC ; IWrapSteamRemoteStorage014::FileWriteStreamClose, COMDAT
; _this$ = ecx

; 444  :    { return pRealStorage->FileWriteStreamClose (writeHandle);                                                              }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _writeHandle$[ebp+4]
	push	DWORD PTR _writeHandle$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+44]
	call	eax
	pop	ebp
	ret	8
?FileWriteStreamClose@IWrapSteamRemoteStorage014@@UAE_N_K@Z ENDP ; IWrapSteamRemoteStorage014::FileWriteStreamClose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage014@@UAE_N_KPBXH@Z
_TEXT	SEGMENT
_writeHandle$ = 8					; size = 8
_pvData$ = 16						; size = 4
_cubData$ = 20						; size = 4
?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage014@@UAE_N_KPBXH@Z PROC ; IWrapSteamRemoteStorage014::FileWriteStreamWriteChunk, COMDAT
; _this$ = ecx

; 442  :    { return pRealStorage->FileWriteStreamWriteChunk (writeHandle, pvData, cubData);                                        }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _cubData$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pvData$[ebp]
	push	DWORD PTR _writeHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _writeHandle$[ebp]
	mov	eax, DWORD PTR [eax+40]
	call	eax
	pop	ebp
	ret	16					; 00000010H
?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage014@@UAE_N_KPBXH@Z ENDP ; IWrapSteamRemoteStorage014::FileWriteStreamWriteChunk
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteStreamOpen@IWrapSteamRemoteStorage014@@UAE_KPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileWriteStreamOpen@IWrapSteamRemoteStorage014@@UAE_KPBD@Z PROC ; IWrapSteamRemoteStorage014::FileWriteStreamOpen, COMDAT
; _this$ = ecx

; 438  :    { return pRealStorage->FileWriteStreamOpen (pchFile);                                                                   }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+36]
	pop	ebp
	jmp	eax
?FileWriteStreamOpen@IWrapSteamRemoteStorage014@@UAE_KPBD@Z ENDP ; IWrapSteamRemoteStorage014::FileWriteStreamOpen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?SetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE_NPBDW4ERemoteStoragePlatform@@@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_eRemoteStoragePlatform$ = 12				; size = 4
?SetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE_NPBDW4ERemoteStoragePlatform@@@Z PROC ; IWrapSteamRemoteStorage014::SetSyncPlatforms, COMDAT
; _this$ = ecx

; 434  :    { return pRealStorage->SetSyncPlatforms (pchFile, eRemoteStoragePlatform);                                                    }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+32]
	pop	ebp
	jmp	eax
?SetSyncPlatforms@IWrapSteamRemoteStorage014@@UAE_NPBDW4ERemoteStoragePlatform@@@Z ENDP ; IWrapSteamRemoteStorage014::SetSyncPlatforms
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileShare@IWrapSteamRemoteStorage014@@UAE_KPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileShare@IWrapSteamRemoteStorage014@@UAE_KPBD@Z PROC	; IWrapSteamRemoteStorage014::FileShare, COMDAT
; _this$ = ecx

; 431  :    { return pRealStorage->FileShare  (pchFile);                                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+28]
	pop	ebp
	jmp	eax
?FileShare@IWrapSteamRemoteStorage014@@UAE_KPBD@Z ENDP	; IWrapSteamRemoteStorage014::FileShare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileDelete@IWrapSteamRemoteStorage014@@UAE_NPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileDelete@IWrapSteamRemoteStorage014@@UAE_NPBD@Z PROC	; IWrapSteamRemoteStorage014::FileDelete, COMDAT
; _this$ = ecx

; 429  :    { return pRealStorage->FileDelete (pchFile);                                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	pop	ebp
	jmp	eax
?FileDelete@IWrapSteamRemoteStorage014@@UAE_NPBD@Z ENDP	; IWrapSteamRemoteStorage014::FileDelete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileForget@IWrapSteamRemoteStorage014@@UAE_NPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileForget@IWrapSteamRemoteStorage014@@UAE_NPBD@Z PROC	; IWrapSteamRemoteStorage014::FileForget, COMDAT
; _this$ = ecx

; 427  :    { return pRealStorage->FileForget (pchFile);                                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	pop	ebp
	jmp	eax
?FileForget@IWrapSteamRemoteStorage014@@UAE_NPBD@Z ENDP	; IWrapSteamRemoteStorage014::FileForget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileReadAsyncComplete@IWrapSteamRemoteStorage014@@UAE_N_KPAXI@Z
_TEXT	SEGMENT
_hReadCall$ = 8						; size = 8
_pvBuffer$ = 16						; size = 4
_cubToRead$ = 20					; size = 4
?FileReadAsyncComplete@IWrapSteamRemoteStorage014@@UAE_N_KPAXI@Z PROC ; IWrapSteamRemoteStorage014::FileReadAsyncComplete, COMDAT
; _this$ = ecx

; 424  :    { return pRealStorage->FileReadAsyncComplete (hReadCall, pvBuffer, cubToRead);                                                }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _cubToRead$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pvBuffer$[ebp]
	push	DWORD PTR _hReadCall$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _hReadCall$[ebp]
	mov	eax, DWORD PTR [eax+16]
	call	eax
	pop	ebp
	ret	16					; 00000010H
?FileReadAsyncComplete@IWrapSteamRemoteStorage014@@UAE_N_KPAXI@Z ENDP ; IWrapSteamRemoteStorage014::FileReadAsyncComplete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileReadAsync@IWrapSteamRemoteStorage014@@UAE_KPBDII@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_nOffset$ = 12						; size = 4
_cubToRead$ = 16					; size = 4
?FileReadAsync@IWrapSteamRemoteStorage014@@UAE_KPBDII@Z PROC ; IWrapSteamRemoteStorage014::FileReadAsync, COMDAT
; _this$ = ecx

; 420  :    { return pRealStorage->FileReadAsync (pchFile, nOffset, cubToRead);                                                           }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	pop	ebp
	jmp	eax
?FileReadAsync@IWrapSteamRemoteStorage014@@UAE_KPBDII@Z ENDP ; IWrapSteamRemoteStorage014::FileReadAsync
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteAsync@IWrapSteamRemoteStorage014@@UAE_KPBDPBXI@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_pvData$ = 12						; size = 4
_cubData$ = 16						; size = 4
?FileWriteAsync@IWrapSteamRemoteStorage014@@UAE_KPBDPBXI@Z PROC ; IWrapSteamRemoteStorage014::FileWriteAsync, COMDAT
; _this$ = ecx

; 416  :    { return pRealStorage->FileWriteAsync (pchFile, pvData, cubData);                                                             }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+8]
	pop	ebp
	jmp	eax
?FileWriteAsync@IWrapSteamRemoteStorage014@@UAE_KPBDPBXI@Z ENDP ; IWrapSteamRemoteStorage014::FileWriteAsync
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileRead@IWrapSteamRemoteStorage014@@UAEHPBDPAXH@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_pvData$ = 12						; size = 4
_cubDataToRead$ = 16					; size = 4
?FileRead@IWrapSteamRemoteStorage014@@UAEHPBDPAXH@Z PROC ; IWrapSteamRemoteStorage014::FileRead, COMDAT
; _this$ = ecx

; 411  :    { return pRealStorage->FileRead (pchFile, pvData, cubDataToRead);                                                             }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	pop	ebp
	jmp	DWORD PTR [eax+4]
?FileRead@IWrapSteamRemoteStorage014@@UAEHPBDPAXH@Z ENDP ; IWrapSteamRemoteStorage014::FileRead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWrite@IWrapSteamRemoteStorage014@@UAE_NPBDPBXH@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_pvData$ = 12						; size = 4
_cubData$ = 16						; size = 4
?FileWrite@IWrapSteamRemoteStorage014@@UAE_NPBDPBXH@Z PROC ; IWrapSteamRemoteStorage014::FileWrite, COMDAT
; _this$ = ecx

; 407  :    { return pRealStorage->FileWrite (pchFile, pvData, cubData);                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	pop	ebp
	jmp	eax
?FileWrite@IWrapSteamRemoteStorage014@@UAE_NPBDPBXH@Z ENDP ; IWrapSteamRemoteStorage014::FileWrite
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ??0IWrapSteamRemoteStorage014@@QAE@PAVISteamRemoteStorage014@@@Z
_TEXT	SEGMENT
_pRemoteStorage$ = 8					; size = 4
??0IWrapSteamRemoteStorage014@@QAE@PAVISteamRemoteStorage014@@@Z PROC ; IWrapSteamRemoteStorage014::IWrapSteamRemoteStorage014, COMDAT
; _this$ = ecx

; 393  :                                         pRealStorage (pRemoteStorage) {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 394  :   };

	mov	eax, ecx
	mov	DWORD PTR [ecx], OFFSET ??_7IWrapSteamRemoteStorage014@@6B@
	pop	ebp
	ret	4
??0IWrapSteamRemoteStorage014@@QAE@PAVISteamRemoteStorage014@@@Z ENDP ; IWrapSteamRemoteStorage014::IWrapSteamRemoteStorage014
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0ISteamRemoteStorage014@@QAE@XZ
_TEXT	SEGMENT
??0ISteamRemoteStorage014@@QAE@XZ PROC			; ISteamRemoteStorage014::ISteamRemoteStorage014, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ISteamRemoteStorage014@@6B@
	mov	eax, ecx
	ret	0
??0ISteamRemoteStorage014@@QAE@XZ ENDP			; ISteamRemoteStorage014::ISteamRemoteStorage014
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UGCDownloadToLocation@IWrapSteamRemoteStorage012@@UAE_K_KPBDI@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_pchLocation$ = 16					; size = 4
_unPriority$ = 20					; size = 4
?UGCDownloadToLocation@IWrapSteamRemoteStorage012@@UAE_K_KPBDI@Z PROC ; IWrapSteamRemoteStorage012::UGCDownloadToLocation, COMDAT
; _this$ = ecx

; 240  :    { return pRealStorage->UGCDownloadToLocation (hContent, pchLocation, unPriority);                                                                        }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _unPriority$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchLocation$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _hContent$[ebp]
	mov	eax, DWORD PTR [eax+204]
	call	eax
	pop	ebp
	ret	16					; 00000010H
?UGCDownloadToLocation@IWrapSteamRemoteStorage012@@UAE_K_KPBDI@Z ENDP ; IWrapSteamRemoteStorage012::UGCDownloadToLocation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z
_TEXT	SEGMENT
_eEnumerationType$ = 8					; size = 4
_unStartIndex$ = 12					; size = 4
_unCount$ = 16						; size = 4
_unDays$ = 20						; size = 4
_pTags$ = 24						; size = 4
_pUserTags$ = 28					; size = 4
?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z PROC ; IWrapSteamRemoteStorage012::EnumeratePublishedWorkshopFiles, COMDAT
; _this$ = ecx

; 235  :    { return pRealStorage->EnumeratePublishedWorkshopFiles ( eEnumerationType, unStartIndex, unCount, unDays, pTags, pUserTags );                            }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+200]
	pop	ebp
	jmp	eax
?EnumeratePublishedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopEnumerationType@@IIIPAUSteamParamStringArray_t@@1@Z ENDP ; IWrapSteamRemoteStorage012::EnumeratePublishedWorkshopFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopFileAction@@I@Z
_TEXT	SEGMENT
_eAction$ = 8						; size = 4
_unStartIndex$ = 12					; size = 4
?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopFileAction@@I@Z PROC ; IWrapSteamRemoteStorage012::EnumeratePublishedFilesByUserAction, COMDAT
; _this$ = ecx

; 226  :    { return pRealStorage->EnumeratePublishedFilesByUserAction (eAction, unStartIndex);                                                                      }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+196]
	pop	ebp
	jmp	eax
?EnumeratePublishedFilesByUserAction@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopFileAction@@I@Z ENDP ; IWrapSteamRemoteStorage012::EnumeratePublishedFilesByUserAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?SetUserPublishedFileAction@IWrapSteamRemoteStorage012@@UAE_K_KW4EWorkshopFileAction@@@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
_eAction$ = 16						; size = 4
?SetUserPublishedFileAction@IWrapSteamRemoteStorage012@@UAE_K_KW4EWorkshopFileAction@@@Z PROC ; IWrapSteamRemoteStorage012::SetUserPublishedFileAction, COMDAT
; _this$ = ecx

; 223  :    { return pRealStorage->SetUserPublishedFileAction (unPublishedFileId, eAction);                                                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _eAction$[ebp]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [eax+192]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?SetUserPublishedFileAction@IWrapSteamRemoteStorage012@@UAE_K_KW4EWorkshopFileAction@@@Z ENDP ; IWrapSteamRemoteStorage012::SetUserPublishedFileAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?PublishVideo@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z
_TEXT	SEGMENT
_eVideoProvider$ = 8					; size = 4
_pchVideoAccount$ = 12					; size = 4
_pchVideoIdentifier$ = 16				; size = 4
_pchPreviewFile$ = 20					; size = 4
_nConsumerAppId$ = 24					; size = 4
_pchTitle$ = 28						; size = 4
_pchDescription$ = 32					; size = 4
_eVisibility$ = 36					; size = 4
_pTags$ = 40						; size = 4
?PublishVideo@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z PROC ; IWrapSteamRemoteStorage012::PublishVideo, COMDAT
; _this$ = ecx

; 218  :    { return pRealStorage->PublishVideo ( eVideoProvider, pchVideoAccount, pchVideoIdentifier,

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+188]

; 219  :                                            pchPreviewFile, nConsumerAppId, pchTitle, pchDescription,
; 220  :                                              eVisibility, pTags );                                                                                          }

	pop	ebp

; 218  :    { return pRealStorage->PublishVideo ( eVideoProvider, pchVideoAccount, pchVideoIdentifier,

	jmp	eax
?PublishVideo@IWrapSteamRemoteStorage012@@UAE_KW4EWorkshopVideoProvider@@PBD11I11W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@@Z ENDP ; IWrapSteamRemoteStorage012::PublishVideo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z
_TEXT	SEGMENT
_steamId$ = 8						; size = 8
_unStartIndex$ = 16					; size = 4
_pRequiredTags$ = 20					; size = 4
_pExcludedTags$ = 24					; size = 4
?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z PROC ; IWrapSteamRemoteStorage012::EnumerateUserSharedWorkshopFiles, COMDAT
; _this$ = ecx

; 208  :    { return pRealStorage->EnumerateUserSharedWorkshopFiles (steamId, unStartIndex, pRequiredTags, pExcludedTags);                                           }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _pExcludedTags$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pRequiredTags$[ebp]
	push	DWORD PTR _unStartIndex$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _steamId$[ebp+4]
	push	DWORD PTR _steamId$[ebp]
	mov	eax, DWORD PTR [eax+184]
	call	eax
	pop	ebp
	ret	20					; 00000014H
?EnumerateUserSharedWorkshopFiles@IWrapSteamRemoteStorage012@@UAE_KVCSteamID@@IPAUSteamParamStringArray_t@@1@Z ENDP ; IWrapSteamRemoteStorage012::EnumerateUserSharedWorkshopFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage012::GetUserPublishedItemVoteDetails, COMDAT
; _this$ = ecx

; 203  :    { return pRealStorage->GetUserPublishedItemVoteDetails (unPublishedFileId);                                                                              }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+180]
	call	eax
	pop	ebp
	ret	8
?GetUserPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage012::GetUserPublishedItemVoteDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage012@@UAE_K_K_N@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
_bVoteUp$ = 16						; size = 1
?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage012@@UAE_K_K_N@Z PROC ; IWrapSteamRemoteStorage012::UpdateUserPublishedItemVote, COMDAT
; _this$ = ecx

; 201  :    { return pRealStorage->UpdateUserPublishedItemVote (unPublishedFileId, bVoteUp);                                                                         }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _bVoteUp$[ebp]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [eax+176]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdateUserPublishedItemVote@IWrapSteamRemoteStorage012@@UAE_K_K_N@Z ENDP ; IWrapSteamRemoteStorage012::UpdateUserPublishedItemVote
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage012::GetPublishedItemVoteDetails, COMDAT
; _this$ = ecx

; 198  :    { return pRealStorage->GetPublishedItemVoteDetails (unPublishedFileId);                                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+172]
	call	eax
	pop	ebp
	ret	8
?GetPublishedItemVoteDetails@IWrapSteamRemoteStorage012@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage012::GetPublishedItemVoteDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchChangeDescription$ = 16				; size = 4
?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage012::UpdatePublishedFileSetChangeDescription, COMDAT
; _this$ = ecx

; 196  :    { return pRealStorage->UpdatePublishedFileSetChangeDescription (updateHandle, pchChangeDescription);                                                     }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchChangeDescription$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+168]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileSetChangeDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage012::UpdatePublishedFileSetChangeDescription
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UnsubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?UnsubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage012::UnsubscribePublishedFile, COMDAT
; _this$ = ecx

; 193  :    { return pRealStorage->UnsubscribePublishedFile     (unPublishedFileId);                                                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+164]
	call	eax
	pop	ebp
	ret	8
?UnsubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage012::UnsubscribePublishedFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z
_TEXT	SEGMENT
_unStartIndex$ = 8					; size = 4
?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z PROC ; IWrapSteamRemoteStorage012::EnumerateUserSubscribedFiles, COMDAT
; _this$ = ecx

; 191  :    { return pRealStorage->EnumerateUserSubscribedFiles (unStartIndex);                                                                                      }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+160]
	pop	ebp
	jmp	eax
?EnumerateUserSubscribedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z ENDP ; IWrapSteamRemoteStorage012::EnumerateUserSubscribedFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?SubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?SubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage012::SubscribePublishedFile, COMDAT
; _this$ = ecx

; 189  :    { return pRealStorage->SubscribePublishedFile       (unPublishedFileId);                                                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+156]
	call	eax
	pop	ebp
	ret	8
?SubscribePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage012::SubscribePublishedFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z
_TEXT	SEGMENT
_unStartIndex$ = 8					; size = 4
?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z PROC ; IWrapSteamRemoteStorage012::EnumerateUserPublishedFiles, COMDAT
; _this$ = ecx

; 187  :    { return pRealStorage->EnumerateUserPublishedFiles  (unStartIndex);                                                                                      }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+152]
	pop	ebp
	jmp	eax
?EnumerateUserPublishedFiles@IWrapSteamRemoteStorage012@@UAE_KI@Z ENDP ; IWrapSteamRemoteStorage012::EnumerateUserPublishedFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?DeletePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?DeletePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage012::DeletePublishedFile, COMDAT
; _this$ = ecx

; 184  :    { return pRealStorage->DeletePublishedFile          (unPublishedFileId);                                                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+148]
	call	eax
	pop	ebp
	ret	8
?DeletePublishedFile@IWrapSteamRemoteStorage012@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage012::DeletePublishedFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetPublishedFileDetails@IWrapSteamRemoteStorage012@@UAE_K_KI@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
_unMaxSecondsOld$ = 16					; size = 4
?GetPublishedFileDetails@IWrapSteamRemoteStorage012@@UAE_K_KI@Z PROC ; IWrapSteamRemoteStorage012::GetPublishedFileDetails, COMDAT
; _this$ = ecx

; 182  :    { return pRealStorage->GetPublishedFileDetails      (unPublishedFileId, unMaxSecondsOld);                                                                }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unMaxSecondsOld$[ebp]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [eax+144]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?GetPublishedFileDetails@IWrapSteamRemoteStorage012@@UAE_K_KI@Z ENDP ; IWrapSteamRemoteStorage012::GetPublishedFileDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?CommitPublishedFileUpdate@IWrapSteamRemoteStorage012@@UAE_K_K@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
?CommitPublishedFileUpdate@IWrapSteamRemoteStorage012@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage012::CommitPublishedFileUpdate, COMDAT
; _this$ = ecx

; 175  :    { return pRealStorage->CommitPublishedFileUpdate      (updateHandle);                                                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _updateHandle$[ebp+4]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+140]
	call	eax
	pop	ebp
	ret	8
?CommitPublishedFileUpdate@IWrapSteamRemoteStorage012@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage012::CommitPublishedFileUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileTags@IWrapSteamRemoteStorage012@@UAE_N_KPAUSteamParamStringArray_t@@@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pTags$ = 16						; size = 4
?UpdatePublishedFileTags@IWrapSteamRemoteStorage012@@UAE_N_KPAUSteamParamStringArray_t@@@Z PROC ; IWrapSteamRemoteStorage012::UpdatePublishedFileTags, COMDAT
; _this$ = ecx

; 173  :    { return pRealStorage->UpdatePublishedFileTags        (updateHandle, pTags);                                                                   }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pTags$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+136]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileTags@IWrapSteamRemoteStorage012@@UAE_N_KPAUSteamParamStringArray_t@@@Z ENDP ; IWrapSteamRemoteStorage012::UpdatePublishedFileTags
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage012@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_eVisibility$ = 16					; size = 4
?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage012@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z PROC ; IWrapSteamRemoteStorage012::UpdatePublishedFileVisibility, COMDAT
; _this$ = ecx

; 170  :    { return pRealStorage->UpdatePublishedFileVisibility  (updateHandle, eVisibility);                                                             }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _eVisibility$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+132]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileVisibility@IWrapSteamRemoteStorage012@@UAE_N_KW4ERemoteStoragePublishedFileVisibility@@@Z ENDP ; IWrapSteamRemoteStorage012::UpdatePublishedFileVisibility
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchDescription$ = 16					; size = 4
?UpdatePublishedFileDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage012::UpdatePublishedFileDescription, COMDAT
; _this$ = ecx

; 167  :    { return pRealStorage->UpdatePublishedFileDescription (updateHandle, pchDescription);                                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchDescription$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+128]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileDescription@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage012::UpdatePublishedFileDescription
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileTitle@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchTitle$ = 16						; size = 4
?UpdatePublishedFileTitle@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage012::UpdatePublishedFileTitle, COMDAT
; _this$ = ecx

; 164  :    { return pRealStorage->UpdatePublishedFileTitle       (updateHandle, pchTitle);                                                                }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchTitle$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+124]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileTitle@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage012::UpdatePublishedFileTitle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchPreviewFile$ = 16					; size = 4
?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage012::UpdatePublishedFilePreviewFile, COMDAT
; _this$ = ecx

; 161  :    { return pRealStorage->UpdatePublishedFilePreviewFile (updateHandle, pchPreviewFile);                                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchPreviewFile$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+120]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFilePreviewFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage012::UpdatePublishedFilePreviewFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UpdatePublishedFileFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z
_TEXT	SEGMENT
_updateHandle$ = 8					; size = 8
_pchFile$ = 16						; size = 4
?UpdatePublishedFileFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z PROC ; IWrapSteamRemoteStorage012::UpdatePublishedFileFile, COMDAT
; _this$ = ecx

; 158  :    { return pRealStorage->UpdatePublishedFileFile        (updateHandle, pchFile);                                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pchFile$[ebp]
	push	DWORD PTR _updateHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _updateHandle$[ebp]
	mov	eax, DWORD PTR [eax+116]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UpdatePublishedFileFile@IWrapSteamRemoteStorage012@@UAE_N_KPBD@Z ENDP ; IWrapSteamRemoteStorage012::UpdatePublishedFileFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage012@@UAE_K_K@Z
_TEXT	SEGMENT
_unPublishedFileId$ = 8					; size = 8
?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage012@@UAE_K_K@Z PROC ; IWrapSteamRemoteStorage012::CreatePublishedFileUpdateRequest, COMDAT
; _this$ = ecx

; 155  :    { return pRealStorage->CreatePublishedFileUpdateRequest (unPublishedFileId);                                                                   }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPublishedFileId$[ebp+4]
	push	DWORD PTR _unPublishedFileId$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+112]
	call	eax
	pop	ebp
	ret	8
?CreatePublishedFileUpdateRequest@IWrapSteamRemoteStorage012@@UAE_K_K@Z ENDP ; IWrapSteamRemoteStorage012::CreatePublishedFileUpdateRequest
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?PublishWorkshopFile@IWrapSteamRemoteStorage012@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_pchPreviewFile$ = 12					; size = 4
_nConsumerAppId$ = 16					; size = 4
_pchTitle$ = 20						; size = 4
_pchDescription$ = 24					; size = 4
_eVisibility$ = 28					; size = 4
_pTags$ = 32						; size = 4
_eWorkshopFileType$ = 36				; size = 4
?PublishWorkshopFile@IWrapSteamRemoteStorage012@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z PROC ; IWrapSteamRemoteStorage012::PublishWorkshopFile, COMDAT
; _this$ = ecx

; 151  :    { return pRealStorage->PublishWorkshopFile ( pchFile, pchPreviewFile, nConsumerAppId,

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+108]

; 152  :                                                   pchTitle, pchDescription, eVisibility, pTags, eWorkshopFileType );                              }

	pop	ebp

; 151  :    { return pRealStorage->PublishWorkshopFile ( pchFile, pchPreviewFile, nConsumerAppId,

	jmp	eax
?PublishWorkshopFile@IWrapSteamRemoteStorage012@@UAE_KPBD0I00W4ERemoteStoragePublishedFileVisibility@@PAUSteamParamStringArray_t@@W4EWorkshopFileType@@@Z ENDP ; IWrapSteamRemoteStorage012::PublishWorkshopFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetCachedUGCHandle@IWrapSteamRemoteStorage012@@UAE_KH@Z
_TEXT	SEGMENT
_iCachedContent$ = 8					; size = 4
?GetCachedUGCHandle@IWrapSteamRemoteStorage012@@UAE_KH@Z PROC ; IWrapSteamRemoteStorage012::GetCachedUGCHandle, COMDAT
; _this$ = ecx

; 140  :    { return pRealStorage->GetCachedUGCHandle (iCachedContent);                                      }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+104]
	pop	ebp
	jmp	eax
?GetCachedUGCHandle@IWrapSteamRemoteStorage012@@UAE_KH@Z ENDP ; IWrapSteamRemoteStorage012::GetCachedUGCHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetCachedUGCCount@IWrapSteamRemoteStorage012@@UAEHXZ
_TEXT	SEGMENT
?GetCachedUGCCount@IWrapSteamRemoteStorage012@@UAEHXZ PROC ; IWrapSteamRemoteStorage012::GetCachedUGCCount, COMDAT
; _this$ = ecx

; 138  :    { return pRealStorage->GetCachedUGCCount  ();                                                    }

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+100]
?GetCachedUGCCount@IWrapSteamRemoteStorage012@@UAEHXZ ENDP ; IWrapSteamRemoteStorage012::GetCachedUGCCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UGCRead@IWrapSteamRemoteStorage012@@UAEH_KPAXHIW4EUGCReadAction@@@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_pvData$ = 16						; size = 4
_cubDataToRead$ = 20					; size = 4
_cOffset$ = 24						; size = 4
_eAction$ = 28						; size = 4
?UGCRead@IWrapSteamRemoteStorage012@@UAEH_KPAXHIW4EUGCReadAction@@@Z PROC ; IWrapSteamRemoteStorage012::UGCRead, COMDAT
; _this$ = ecx

; 134  :    { return pRealStorage->UGCRead (hContent, pvData, cubDataToRead, cOffset, eAction);              }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _eAction$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _cOffset$[ebp]
	push	DWORD PTR _cubDataToRead$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _pvData$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	push	DWORD PTR _hContent$[ebp]
	call	DWORD PTR [eax+96]
	pop	ebp
	ret	24					; 00000018H
?UGCRead@IWrapSteamRemoteStorage012@@UAEH_KPAXHIW4EUGCReadAction@@@Z ENDP ; IWrapSteamRemoteStorage012::UGCRead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetUGCDetails@IWrapSteamRemoteStorage012@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_pnAppID$ = 16						; size = 4
_ppchName$ = 20						; size = 4
_pnFileSizeInBytes$ = 24				; size = 4
_pSteamIDOwner$ = 28					; size = 4
?GetUGCDetails@IWrapSteamRemoteStorage012@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z PROC ; IWrapSteamRemoteStorage012::GetUGCDetails, COMDAT
; _this$ = ecx

; 121  :    { return pRealStorage->GetUGCDetails (hContent, pnAppID, ppchName, pnFileSizeInBytes, pSteamIDOwner); }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _pSteamIDOwner$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pnFileSizeInBytes$[ebp]
	push	DWORD PTR _ppchName$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _pnAppID$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	mov	eax, DWORD PTR [eax+92]
	push	DWORD PTR _hContent$[ebp]
	call	eax
	pop	ebp
	ret	24					; 00000018H
?GetUGCDetails@IWrapSteamRemoteStorage012@@UAE_N_KPAIPAPADPAHPAVCSteamID@@@Z ENDP ; IWrapSteamRemoteStorage012::GetUGCDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetUGCDownloadProgress@IWrapSteamRemoteStorage012@@UAE_N_KPAH1@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_pnBytesDownloaded$ = 16				; size = 4
_pnBytesExpected$ = 20					; size = 4
?GetUGCDownloadProgress@IWrapSteamRemoteStorage012@@UAE_N_KPAH1@Z PROC ; IWrapSteamRemoteStorage012::GetUGCDownloadProgress, COMDAT
; _this$ = ecx

; 113  :    { return pRealStorage->GetUGCDownloadProgress (hContent, pnBytesDownloaded, pnBytesExpected);         }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _pnBytesExpected$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pnBytesDownloaded$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _hContent$[ebp]
	mov	eax, DWORD PTR [eax+88]
	call	eax
	pop	ebp
	ret	16					; 00000010H
?GetUGCDownloadProgress@IWrapSteamRemoteStorage012@@UAE_N_KPAH1@Z ENDP ; IWrapSteamRemoteStorage012::GetUGCDownloadProgress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?UGCDownload@IWrapSteamRemoteStorage012@@UAE_K_KI@Z
_TEXT	SEGMENT
_hContent$ = 8						; size = 8
_unPriority$ = 16					; size = 4
?UGCDownload@IWrapSteamRemoteStorage012@@UAE_K_KI@Z PROC ; IWrapSteamRemoteStorage012::UGCDownload, COMDAT
; _this$ = ecx

; 106  :    { return pRealStorage->UGCDownload (hContent, unPriority);                                            }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _unPriority$[ebp]
	push	DWORD PTR _hContent$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _hContent$[ebp]
	mov	eax, DWORD PTR [eax+84]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
?UGCDownload@IWrapSteamRemoteStorage012@@UAE_K_KI@Z ENDP ; IWrapSteamRemoteStorage012::UGCDownload
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?SetCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAEX_N@Z
_TEXT	SEGMENT
_bEnabled$ = 8						; size = 1
?SetCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAEX_N@Z PROC ; IWrapSteamRemoteStorage012::SetCloudEnabledForApp, COMDAT
; _this$ = ecx

; 97   :    { return pRealStorage->SetCloudEnabledForApp (bEnabled);                                          }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	pop	ebp
	jmp	DWORD PTR [eax+80]
?SetCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAEX_N@Z ENDP ; IWrapSteamRemoteStorage012::SetCloudEnabledForApp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?IsCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAE_NXZ
_TEXT	SEGMENT
?IsCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAE_NXZ PROC ; IWrapSteamRemoteStorage012::IsCloudEnabledForApp, COMDAT
; _this$ = ecx

; 95   :    { return pRealStorage->IsCloudEnabledForApp ();                                                   }

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+76]
	jmp	eax
?IsCloudEnabledForApp@IWrapSteamRemoteStorage012@@UAE_NXZ ENDP ; IWrapSteamRemoteStorage012::IsCloudEnabledForApp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?IsCloudEnabledForAccount@IWrapSteamRemoteStorage012@@UAE_NXZ
_TEXT	SEGMENT
?IsCloudEnabledForAccount@IWrapSteamRemoteStorage012@@UAE_NXZ PROC ; IWrapSteamRemoteStorage012::IsCloudEnabledForAccount, COMDAT
; _this$ = ecx

; 93   :    { return pRealStorage->IsCloudEnabledForAccount ();                                               }

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+72]
	jmp	eax
?IsCloudEnabledForAccount@IWrapSteamRemoteStorage012@@UAE_NXZ ENDP ; IWrapSteamRemoteStorage012::IsCloudEnabledForAccount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetQuota@IWrapSteamRemoteStorage012@@UAE_NPAH0@Z
_TEXT	SEGMENT
_pnTotalBytes$ = 8					; size = 4
_puAvailableBytes$ = 12					; size = 4
?GetQuota@IWrapSteamRemoteStorage012@@UAE_NPAH0@Z PROC	; IWrapSteamRemoteStorage012::GetQuota, COMDAT
; _this$ = ecx

; 91   :    { return pRealStorage->GetQuota (pnTotalBytes, puAvailableBytes);                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+68]
	pop	ebp
	jmp	eax
?GetQuota@IWrapSteamRemoteStorage012@@UAE_NPAH0@Z ENDP	; IWrapSteamRemoteStorage012::GetQuota
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetFileNameAndSize@IWrapSteamRemoteStorage012@@UAEPBDHPAH@Z
_TEXT	SEGMENT
_iFile$ = 8						; size = 4
_pnFileSizeInBytes$ = 12				; size = 4
?GetFileNameAndSize@IWrapSteamRemoteStorage012@@UAEPBDHPAH@Z PROC ; IWrapSteamRemoteStorage012::GetFileNameAndSize, COMDAT
; _this$ = ecx

; 78   :    {

	npad	2
	push	ebp
	mov	ebp, esp

; 79   :      const char* pszRet =
; 80   :        pRealStorage->GetFileNameAndSize (iFile, pnFileSizeInBytes);

	mov	ecx, DWORD PTR [ecx+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _pnFileSizeInBytes$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	edi
	push	DWORD PTR _iFile$[ebp]
	call	DWORD PTR [eax+64]
	mov	esi, eax

; 81   : 
; 82   :      steam_log.Log ( L"ISteamRemoteStorage ** File: (%hs:%lu) - %lu Bytes",

	test	edi, edi
	je	SHORT $LN3@GetFileNam
	mov	ecx, DWORD PTR [edi]
	jmp	SHORT $LN4@GetFileNam
$LN3@GetFileNam:
	xor	ecx, ecx
$LN4@GetFileNam:
	push	ecx
	push	DWORD PTR _iFile$[ebp]
	push	esi
	push	OFFSET ??_C@_1GG@FOPFFAFO@?$AAI?$AAS?$AAt?$AAe?$AAa?$AAm?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?5?$AA?$CK?$AA?$CK?$AA?5?$AAF?$AAi?$AAl?$AAe?$AA?3?$AA?5?$AA?$CI?$AA?$CF?$AAh@
	push	OFFSET ?steam_log@@3UiSK_Logger@@A	; steam_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 83   :                        pszRet, iFile, pnFileSizeInBytes != nullptr ? *pnFileSizeInBytes : 0 );
; 84   : 
; 85   :      return pszRet;

	mov	eax, esi
	pop	edi
	pop	esi

; 86   :    }

	pop	ebp
	ret	8
?GetFileNameAndSize@IWrapSteamRemoteStorage012@@UAEPBDHPAH@Z ENDP ; IWrapSteamRemoteStorage012::GetFileNameAndSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetFileCount@IWrapSteamRemoteStorage012@@UAEHXZ
_TEXT	SEGMENT
?GetFileCount@IWrapSteamRemoteStorage012@@UAEHXZ PROC	; IWrapSteamRemoteStorage012::GetFileCount, COMDAT
; _this$ = ecx

; 75   :    { return pRealStorage->GetFileCount ();                                                           }

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+60]
?GetFileCount@IWrapSteamRemoteStorage012@@UAEHXZ ENDP	; IWrapSteamRemoteStorage012::GetFileCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE?AW4ERemoteStoragePlatform@@PBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?GetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE?AW4ERemoteStoragePlatform@@PBD@Z PROC ; IWrapSteamRemoteStorage012::GetSyncPlatforms, COMDAT
; _this$ = ecx

; 71   :    { return pRealStorage->GetSyncPlatforms (pchFile);                                           }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	pop	ebp
	jmp	DWORD PTR [eax+56]
?GetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE?AW4ERemoteStoragePlatform@@PBD@Z ENDP ; IWrapSteamRemoteStorage012::GetSyncPlatforms
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetFileTimestamp@IWrapSteamRemoteStorage012@@UAE_JPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?GetFileTimestamp@IWrapSteamRemoteStorage012@@UAE_JPBD@Z PROC ; IWrapSteamRemoteStorage012::GetFileTimestamp, COMDAT
; _this$ = ecx

; 69   :    { return pRealStorage->GetFileTimestamp (pchFile);                                           }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+52]
	pop	ebp
	jmp	eax
?GetFileTimestamp@IWrapSteamRemoteStorage012@@UAE_JPBD@Z ENDP ; IWrapSteamRemoteStorage012::GetFileTimestamp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?GetFileSize@IWrapSteamRemoteStorage012@@UAEHPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?GetFileSize@IWrapSteamRemoteStorage012@@UAEHPBD@Z PROC	; IWrapSteamRemoteStorage012::GetFileSize, COMDAT
; _this$ = ecx

; 67   :    { return pRealStorage->GetFileSize (pchFile);                                                }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	pop	ebp
	jmp	DWORD PTR [eax+48]
?GetFileSize@IWrapSteamRemoteStorage012@@UAEHPBD@Z ENDP	; IWrapSteamRemoteStorage012::GetFileSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FilePersisted@IWrapSteamRemoteStorage012@@UAE_NPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FilePersisted@IWrapSteamRemoteStorage012@@UAE_NPBD@Z PROC ; IWrapSteamRemoteStorage012::FilePersisted, COMDAT
; _this$ = ecx

; 65   :    { return pRealStorage->FilePersisted (pchFile);                                              }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+44]
	pop	ebp
	jmp	eax
?FilePersisted@IWrapSteamRemoteStorage012@@UAE_NPBD@Z ENDP ; IWrapSteamRemoteStorage012::FilePersisted
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileExists@IWrapSteamRemoteStorage012@@UAE_NPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileExists@IWrapSteamRemoteStorage012@@UAE_NPBD@Z PROC	; IWrapSteamRemoteStorage012::FileExists, COMDAT
; _this$ = ecx

; 63   :    { return pRealStorage->FileExists (pchFile);                                                 }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+40]
	pop	ebp
	jmp	eax
?FileExists@IWrapSteamRemoteStorage012@@UAE_NPBD@Z ENDP	; IWrapSteamRemoteStorage012::FileExists
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteStreamCancel@IWrapSteamRemoteStorage012@@UAE_N_K@Z
_TEXT	SEGMENT
_writeHandle$ = 8					; size = 8
?FileWriteStreamCancel@IWrapSteamRemoteStorage012@@UAE_N_K@Z PROC ; IWrapSteamRemoteStorage012::FileWriteStreamCancel, COMDAT
; _this$ = ecx

; 59   :    { return pRealStorage->FileWriteStreamCancel (writeHandle);                                                             }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _writeHandle$[ebp+4]
	push	DWORD PTR _writeHandle$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+36]
	call	eax
	pop	ebp
	ret	8
?FileWriteStreamCancel@IWrapSteamRemoteStorage012@@UAE_N_K@Z ENDP ; IWrapSteamRemoteStorage012::FileWriteStreamCancel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteStreamClose@IWrapSteamRemoteStorage012@@UAE_N_K@Z
_TEXT	SEGMENT
_writeHandle$ = 8					; size = 8
?FileWriteStreamClose@IWrapSteamRemoteStorage012@@UAE_N_K@Z PROC ; IWrapSteamRemoteStorage012::FileWriteStreamClose, COMDAT
; _this$ = ecx

; 57   :    { return pRealStorage->FileWriteStreamClose (writeHandle);                                                              }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _writeHandle$[ebp+4]
	push	DWORD PTR _writeHandle$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+32]
	call	eax
	pop	ebp
	ret	8
?FileWriteStreamClose@IWrapSteamRemoteStorage012@@UAE_N_K@Z ENDP ; IWrapSteamRemoteStorage012::FileWriteStreamClose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage012@@UAE_N_KPBXH@Z
_TEXT	SEGMENT
_writeHandle$ = 8					; size = 8
_pvData$ = 16						; size = 4
_cubData$ = 20						; size = 4
?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage012@@UAE_N_KPBXH@Z PROC ; IWrapSteamRemoteStorage012::FileWriteStreamWriteChunk, COMDAT
; _this$ = ecx

; 55   :    { return pRealStorage->FileWriteStreamWriteChunk (writeHandle, pvData, cubData);                                        }

	npad	2
	push	ebp
	mov	ebp, esp
	push	DWORD PTR _cubData$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	push	DWORD PTR _pvData$[ebp]
	push	DWORD PTR _writeHandle$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _writeHandle$[ebp]
	mov	eax, DWORD PTR [eax+28]
	call	eax
	pop	ebp
	ret	16					; 00000010H
?FileWriteStreamWriteChunk@IWrapSteamRemoteStorage012@@UAE_N_KPBXH@Z ENDP ; IWrapSteamRemoteStorage012::FileWriteStreamWriteChunk
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWriteStreamOpen@IWrapSteamRemoteStorage012@@UAE_KPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileWriteStreamOpen@IWrapSteamRemoteStorage012@@UAE_KPBD@Z PROC ; IWrapSteamRemoteStorage012::FileWriteStreamOpen, COMDAT
; _this$ = ecx

; 51   :    { return pRealStorage->FileWriteStreamOpen (pchFile);                                                                   }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	pop	ebp
	jmp	eax
?FileWriteStreamOpen@IWrapSteamRemoteStorage012@@UAE_KPBD@Z ENDP ; IWrapSteamRemoteStorage012::FileWriteStreamOpen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?SetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE_NPBDW4ERemoteStoragePlatform@@@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_eRemoteStoragePlatform$ = 12				; size = 4
?SetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE_NPBDW4ERemoteStoragePlatform@@@Z PROC ; IWrapSteamRemoteStorage012::SetSyncPlatforms, COMDAT
; _this$ = ecx

; 47   :    { return pRealStorage->SetSyncPlatforms (pchFile, eRemoteStoragePlatform);                                                    }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	pop	ebp
	jmp	eax
?SetSyncPlatforms@IWrapSteamRemoteStorage012@@UAE_NPBDW4ERemoteStoragePlatform@@@Z ENDP ; IWrapSteamRemoteStorage012::SetSyncPlatforms
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileShare@IWrapSteamRemoteStorage012@@UAE_KPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileShare@IWrapSteamRemoteStorage012@@UAE_KPBD@Z PROC	; IWrapSteamRemoteStorage012::FileShare, COMDAT
; _this$ = ecx

; 44   :    { return pRealStorage->FileShare  (pchFile);                                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	pop	ebp
	jmp	eax
?FileShare@IWrapSteamRemoteStorage012@@UAE_KPBD@Z ENDP	; IWrapSteamRemoteStorage012::FileShare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileDelete@IWrapSteamRemoteStorage012@@UAE_NPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileDelete@IWrapSteamRemoteStorage012@@UAE_NPBD@Z PROC	; IWrapSteamRemoteStorage012::FileDelete, COMDAT
; _this$ = ecx

; 42   :    { return pRealStorage->FileDelete (pchFile);                                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	pop	ebp
	jmp	eax
?FileDelete@IWrapSteamRemoteStorage012@@UAE_NPBD@Z ENDP	; IWrapSteamRemoteStorage012::FileDelete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileForget@IWrapSteamRemoteStorage012@@UAE_NPBD@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
?FileForget@IWrapSteamRemoteStorage012@@UAE_NPBD@Z PROC	; IWrapSteamRemoteStorage012::FileForget, COMDAT
; _this$ = ecx

; 40   :    { return pRealStorage->FileForget (pchFile);                                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+8]
	pop	ebp
	jmp	eax
?FileForget@IWrapSteamRemoteStorage012@@UAE_NPBD@Z ENDP	; IWrapSteamRemoteStorage012::FileForget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileRead@IWrapSteamRemoteStorage012@@UAEHPBDPAXH@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_pvData$ = 12						; size = 4
_cubDataToRead$ = 16					; size = 4
?FileRead@IWrapSteamRemoteStorage012@@UAEHPBDPAXH@Z PROC ; IWrapSteamRemoteStorage012::FileRead, COMDAT
; _this$ = ecx

; 38   :    { return pRealStorage->FileRead (pchFile, pvData, cubDataToRead);                                                             }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	pop	ebp
	jmp	DWORD PTR [eax+4]
?FileRead@IWrapSteamRemoteStorage012@@UAEHPBDPAXH@Z ENDP ; IWrapSteamRemoteStorage012::FileRead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?FileWrite@IWrapSteamRemoteStorage012@@UAE_NPBDPBXH@Z
_TEXT	SEGMENT
_pchFile$ = 8						; size = 4
_pvData$ = 12						; size = 4
_cubData$ = 16						; size = 4
?FileWrite@IWrapSteamRemoteStorage012@@UAE_NPBDPBXH@Z PROC ; IWrapSteamRemoteStorage012::FileWrite, COMDAT
; _this$ = ecx

; 34   :    { return pRealStorage->FileWrite (pchFile, pvData, cubData);                                                                  }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	pop	ebp
	jmp	eax
?FileWrite@IWrapSteamRemoteStorage012@@UAE_NPBDPBXH@Z ENDP ; IWrapSteamRemoteStorage012::FileWrite
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ??0IWrapSteamRemoteStorage012@@QAE@PAVISteamRemoteStorage@@@Z
_TEXT	SEGMENT
_pRemoteStorage$ = 8					; size = 4
??0IWrapSteamRemoteStorage012@@QAE@PAVISteamRemoteStorage@@@Z PROC ; IWrapSteamRemoteStorage012::IWrapSteamRemoteStorage012, COMDAT
; _this$ = ecx

; 20   :                                      pRealStorage (pRemoteStorage) {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pRemoteStorage$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 21   :   };

	mov	eax, ecx
	mov	DWORD PTR [ecx], OFFSET ??_7IWrapSteamRemoteStorage012@@6B@
	pop	ebp
	ret	4
??0IWrapSteamRemoteStorage012@@QAE@PAVISteamRemoteStorage@@@Z ENDP ; IWrapSteamRemoteStorage012::IWrapSteamRemoteStorage012
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FSK_SteamWrapper_remap_remotestorage@@YAXXZ
text$yd	SEGMENT
??__FSK_SteamWrapper_remap_remotestorage@@YAXXZ PROC	; `dynamic atexit destructor for 'SK_SteamWrapper_remap_remotestorage'', COMDAT
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	jmp	??1?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@XZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::~_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
??__FSK_SteamWrapper_remap_remotestorage@@YAXXZ ENDP	; `dynamic atexit destructor for 'SK_SteamWrapper_remap_remotestorage''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ
text$di	SEGMENT
__Index$2 = -20						; size = 4
$T3 = -18						; size = 2
$T4 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ PROC	; `dynamic initializer for 'SK_SteamWrapper_remap_remotestorage'', COMDAT

; 14   : concurrency::concurrent_unordered_map <ISteamRemoteStorage*, IWrapSteamRemoteStorage*>   SK_SteamWrapper_remap_remotestorage;

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 252  :         : _Mybase(_Number_of_buckets, _Key_compare(_Hasher, _Key_equality), _Allocator)

	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp

; 14   : concurrency::concurrent_unordered_map <ISteamRemoteStorage*, IWrapSteamRemoteStorage*>   SK_SteamWrapper_remap_remotestorage;

	push	-1
	push	__ehhandler$??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 252  :         : _Mybase(_Number_of_buckets, _Key_compare(_Hasher, _Key_equality), _Allocator)

	lea	eax, DWORD PTR $T4[ebp]
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp

; 14   : concurrency::concurrent_unordered_map <ISteamRemoteStorage*, IWrapSteamRemoteStorage*>   SK_SteamWrapper_remap_remotestorage;

	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 252  :         : _Mybase(_Number_of_buckets, _Key_compare(_Hasher, _Key_equality), _Allocator)

	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	push	8
	call	??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 846  :         if (_Current_buckets > _Buckets)

	cmp	DWORD PTR ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A+148, 8
	ja	SHORT $LN11@dynamic

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	eax, 15					; 0000000fH
	mov	DWORD PTR __Index$2[ebp], 0
	bsr	eax, eax
	mov	DWORD PTR __Index$2[ebp], eax

; 855  :         _M_number_of_buckets = ((size_type) 1) << _Get_msb(_Buckets*2-1);

	mov	eax, 1
	mov	cl, BYTE PTR __Index$2[ebp]
	shl	eax, cl
	mov	DWORD PTR ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A+148, eax
$LN11@dynamic:
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp

; 14   : concurrency::concurrent_unordered_map <ISteamRemoteStorage*, IWrapSteamRemoteStorage*>   SK_SteamWrapper_remap_remotestorage;

	push	OFFSET ??__FSK_SteamWrapper_remap_remotestorage@@YAXXZ ; `dynamic atexit destructor for 'SK_SteamWrapper_remap_remotestorage''
	call	_atexit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	add	esp, 4
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
text$di	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ$1:
	mov	ecx, OFFSET ?SK_SteamWrapper_remap_remotestorage@@3V?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@A ; SK_SteamWrapper_remap_remotestorage
	jmp	??1?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@XZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::~_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
__ehhandler$??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ:
	mov	eax, OFFSET __ehfuncinfo$??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__ESK_SteamWrapper_remap_remotestorage@@YAXXZ ENDP	; `dynamic initializer for 'SK_SteamWrapper_remap_remotestorage''
; Function compile flags: /Ogtp
;	COMDAT ??1?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@XZ
_TEXT	SEGMENT
??1?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@XZ PROC ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >, COMDAT
; _this$ = ecx
	jmp	??1?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@XZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::~_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
??1?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@XZ ENDP ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
;	COMDAT ??A?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAEAAPAVIWrapSteamRemoteStorage@@ABQAVISteamRemoteStorage@@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 8
$T2 = -8						; size = 8
__Where$ = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAEAAPAVIWrapSteamRemoteStorage@@ABQAVISteamRemoteStorage@@@Z PROC ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::operator[], COMDAT
; _this$ = ecx

; 713  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 476  :         return _Find(_Keyval);

	mov	edi, DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Where$[ebp]
	push	edi
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 713  :     {

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 476  :         return _Find(_Keyval);

	call	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$[ebp]
	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 716  :         if (_Where == this->end())

	jne	SHORT $LN47@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR [edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR $T2[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 718  :             _Where = this->_Insert(std::make_pair(_Keyval, mapped_type())).first;

	push	eax
	call	??$_Insert@U?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@IAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@$$QAU?$pair@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@4@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Insert<std::pair<ISteamRemoteStorage *,IWrapSteamRemoteStorage *> >
	mov	eax, DWORD PTR [eax]
$LN47@operator:

; 719  :         }
; 720  : 
; 721  :         return ((*_Where).second);

	pop	edi
	add	eax, 8
	pop	esi

; 722  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAEAAPAVIWrapSteamRemoteStorage@@ABQAVISteamRemoteStorage@@@Z ENDP ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
;	COMDAT ??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Number_of_buckets$ = 8				; size = 4
__Hasher$ = 12						; size = 4
__Key_equality$ = 16					; size = 4
__Allocator$ = 20					; size = 4
$T2 = 22						; size = 2
??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z PROC ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >, COMDAT
; _this$ = ecx

; 253  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	edi
	mov	edi, ecx
	lea	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _this$[ebp], edi
	push	DWORD PTR __Allocator$[ebp]
	push	eax
	push	DWORD PTR __Number_of_buckets$[ebp]
	call	??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >

; 254  :         this->rehash(_Number_of_buckets);

	push	DWORD PTR __Number_of_buckets$[ebp]
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?rehash@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAEXI@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::rehash

; 255  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@XZ ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::~_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
__ehhandler$??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$concurrent_unordered_map@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@4@@Concurrency@@QAE@IABU?$hash@PAVISteamRemoteStorage@@@std@@ABU?$equal_to@PAVISteamRemoteStorage@@@3@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@3@@Z ENDP ; Concurrency::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::concurrent_unordered_map<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z PROC ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z ENDP ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z PROC ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEXPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z ENDP ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Split_order_dummy_key@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z
_TEXT	SEGMENT
__Reversed_order_key$1 = -8				; size = 4
__Order_key$ = 8					; size = 4
?_Split_order_dummy_key@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Split_order_dummy_key, COMDAT
; _this$ = ecx

; 1301 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	mov	edx, DWORD PTR __imp_?_Byte_reverse_table@details@Concurrency@@3QBEB

; 67   :     return _Byte_reverse_table[_Original_byte];

	mov	ecx, DWORD PTR __Order_key$[ebp]
	movzx	eax, cl

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+3], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, ch

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+2], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Order_key$[ebp+2]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+1], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Order_key$[ebp+3]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp], al

; 1302 :         return _Reverse(_Order_key) & ~(0x1);

	mov	eax, DWORD PTR __Reversed_order_key$1[ebp]
	and	eax, -2					; fffffffeH

; 1303 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Split_order_dummy_key@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Split_order_dummy_key
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Split_order_regular_key@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z
_TEXT	SEGMENT
__Reversed_order_key$1 = -8				; size = 4
__Order_key$ = 8					; size = 4
?_Split_order_regular_key@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Split_order_regular_key, COMDAT
; _this$ = ecx

; 1295 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	mov	edx, DWORD PTR __imp_?_Byte_reverse_table@details@Concurrency@@3QBEB

; 67   :     return _Byte_reverse_table[_Original_byte];

	mov	ecx, DWORD PTR __Order_key$[ebp]
	movzx	eax, cl

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+3], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, ch

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+2], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Order_key$[ebp+2]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+1], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Order_key$[ebp+3]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp], al

; 1296 :         return _Reverse(_Order_key) | 0x1;

	mov	eax, DWORD PTR __Reversed_order_key$1[ebp]
	or	eax, 1

; 1297 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Split_order_regular_key@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Split_order_regular_key
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Reverse@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z
_TEXT	SEGMENT
__Reversed_order_key$ = -8				; size = 4
__Order_key$ = 8					; size = 4
?_Reverse@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Reverse, COMDAT
; _this$ = ecx

; 1278 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1279 :         _Split_order_key _Reversed_order_key;
; 1280 : 
; 1281 :         unsigned char * _Original = (unsigned char *) &_Order_key;
; 1282 :         unsigned char * _Reversed = (unsigned char *) &_Reversed_order_key;
; 1283 : 
; 1284 :         int _Size = sizeof(_Map_key);
; 1285 :         for (int _Index = 0; _Index < _Size; _Index++)
; 1286 :         {
; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	mov	edx, DWORD PTR __imp_?_Byte_reverse_table@details@Concurrency@@3QBEB

; 67   :     return _Byte_reverse_table[_Original_byte];

	mov	ecx, DWORD PTR __Order_key$[ebp]
	movzx	eax, cl

; 1279 :         _Split_order_key _Reversed_order_key;
; 1280 : 
; 1281 :         unsigned char * _Original = (unsigned char *) &_Order_key;
; 1282 :         unsigned char * _Reversed = (unsigned char *) &_Reversed_order_key;
; 1283 : 
; 1284 :         int _Size = sizeof(_Map_key);
; 1285 :         for (int _Index = 0; _Index < _Size; _Index++)
; 1286 :         {
; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$[ebp+3], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, ch

; 1279 :         _Split_order_key _Reversed_order_key;
; 1280 : 
; 1281 :         unsigned char * _Original = (unsigned char *) &_Order_key;
; 1282 :         unsigned char * _Reversed = (unsigned char *) &_Reversed_order_key;
; 1283 : 
; 1284 :         int _Size = sizeof(_Map_key);
; 1285 :         for (int _Index = 0; _Index < _Size; _Index++)
; 1286 :         {
; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$[ebp+2], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Order_key$[ebp+2]

; 1279 :         _Split_order_key _Reversed_order_key;
; 1280 : 
; 1281 :         unsigned char * _Original = (unsigned char *) &_Order_key;
; 1282 :         unsigned char * _Reversed = (unsigned char *) &_Reversed_order_key;
; 1283 : 
; 1284 :         int _Size = sizeof(_Map_key);
; 1285 :         for (int _Index = 0; _Index < _Size; _Index++)
; 1286 :         {
; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$[ebp+1], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Order_key$[ebp+3]

; 1279 :         _Split_order_key _Reversed_order_key;
; 1280 : 
; 1281 :         unsigned char * _Original = (unsigned char *) &_Order_key;
; 1282 :         unsigned char * _Reversed = (unsigned char *) &_Reversed_order_key;
; 1283 : 
; 1284 :         int _Size = sizeof(_Map_key);
; 1285 :         for (int _Index = 0; _Index < _Size; _Index++)
; 1286 :         {
; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+edx]
	mov	BYTE PTR __Reversed_order_key$[ebp], al

; 1288 :         }
; 1289 : 
; 1290 :         return _Reversed_order_key;

	mov	eax, DWORD PTR __Reversed_order_key$[ebp]

; 1291 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Reverse@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Reverse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Is_initialized@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE_NI@Z
_TEXT	SEGMENT
__Index$1 = -4						; size = 4
__Bucket$ = 8						; size = 4
?_Is_initialized@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE_NI@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Is_initialized, COMDAT
; _this$ = ecx

; 1263 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	edx, DWORD PTR __Bucket$[ebp]
	mov	eax, edx
	or	eax, 1

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$1[ebp], 0

; 74   : 
; 75   : #if (defined (_M_IX86) || defined (_M_ARM))
; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax
	push	esi

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	esi, al
	push	edi

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$1[ebp], eax

; 1264 :         size_type _Segment = _Segment_index_of(_Bucket);
; 1265 :         _Bucket -= _Segment_base(_Segment);
; 1266 : 
; 1267 :         if (_M_buckets[_Segment] == NULL)

	mov	edi, DWORD PTR [ecx+esi*4+4]
	test	edi, edi
	jne	SHORT $LN2@Is_initial

; 1268 :         {
; 1269 :             return false;

	pop	edi
	xor	al, al
	pop	esi

; 1274 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@Is_initial:

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	ecx, esi
	mov	eax, 1
	shl	eax, cl
	and	eax, -2					; fffffffeH

; 1270 :         }
; 1271 : 
; 1272 :         _Full_iterator _Iterator = _M_buckets[_Segment][_Bucket];
; 1273 :         return (_Iterator._Mynode() != NULL);

	sub	edx, eax
	cmp	DWORD PTR [edi+edx*4], 0
	pop	edi
	setne	al
	pop	esi

; 1274 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Is_initialized@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE_NI@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Is_initialized
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Set_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXIV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z
_TEXT	SEGMENT
__New_segment$1$ = -8					; size = 4
_this$1$ = -8						; size = 4
__Index$1 = -4						; size = 4
__Bucket$ = 8						; size = 4
__Wrapped_allocator$2 = 11				; size = 1
$T3 = 12						; size = 1
__Dummy_head$ = 12					; size = 4
?_Set_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXIV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Set_bucket, COMDAT
; _this$ = ecx

; 1244 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	push	esi

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	esi, DWORD PTR __Bucket$[ebp]

; 1244 :     {

	mov	ebx, ecx

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	eax, esi

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$1[ebp], 0

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	or	eax, 1

; 1244 :     {

	mov	DWORD PTR _this$1$[ebp], ebx

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	edx, 1

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	shl	edx, cl

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$1[ebp], eax

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	eax, edx
	push	edi
	and	eax, -2					; fffffffeH

; 1245 :         size_type _Segment = _Segment_index_of(_Bucket);
; 1246 :         _Bucket -= _Segment_base(_Segment);
; 1247 : 
; 1248 :         if (_M_buckets[_Segment] == NULL)

	lea	edi, DWORD PTR [ecx+1]
	lea	edi, DWORD PTR [ebx+edi*4]
	sub	esi, eax
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LN20@Set_bucket

; 198  :         return _K ? size_type(1)<<_K : 2;

	test	ecx, ecx
	mov	ebx, 2

; 1251 :             _Full_iterator * _New_segment = _M_allocator.allocate(_Seg_size);

	mov	ecx, DWORD PTR _this$1$[ebp]

; 198  :         return _K ? size_type(1)<<_K : 2;

	cmovne	ebx, edx

; 1251 :             _Full_iterator * _New_segment = _M_allocator.allocate(_Seg_size);

	add	ecx, 144				; 00000090H
	push	ebx
	call	?allocate@?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@QAEPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@2@I@Z ; std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > >::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 262  : 	return (_Uninitialized_default_fill_n1(_First, _Count, _Al,

	push	DWORD PTR $T3[ebp]
	lea	ecx, DWORD PTR __Wrapped_allocator$2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1251 :             _Full_iterator * _New_segment = _M_allocator.allocate(_Seg_size);

	mov	DWORD PTR __New_segment$1$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 262  : 	return (_Uninitialized_default_fill_n1(_First, _Count, _Al,

	push	ecx
	push	ebx
	push	eax
	call	??$_Uninitialized_default_fill_n1@PAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@IV?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@2@@std@@YAPAV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@0@PAV10@IAAU?$_Wrap_alloc@V?$allocator@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninitialized_default_fill_n1<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > *,unsigned int,std::allocator<std::_Flist_iterator<Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > > > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1254 :             if (_InterlockedCompareExchangePointer((void * volatile *) &_M_buckets[_Segment], _New_segment, NULL) != NULL)

	mov	edx, DWORD PTR __New_segment$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 262  : 	return (_Uninitialized_default_fill_n1(_First, _Count, _Al,

	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1254 :             if (_InterlockedCompareExchangePointer((void * volatile *) &_M_buckets[_Segment], _New_segment, NULL) != NULL)

	mov	ecx, edx
	xor	eax, eax
	lock	 cmpxchg DWORD PTR [edi], ecx
	test	eax, eax
	je	SHORT $LN20@Set_bucket
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	ebx
	push	edx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN20@Set_bucket:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1259 :         _M_buckets[_Segment][_Bucket] = _Dummy_head;

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR __Dummy_head$[ebp]
	pop	edi
	mov	DWORD PTR [ecx+esi*4], eax
	pop	esi
	pop	ebx

; 1260 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?_Set_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXIV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Set_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Get_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@I@Z
_TEXT	SEGMENT
__Index$1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Get_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@I@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Get_bucket, COMDAT
; _this$ = ecx

; 1237 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	edx, DWORD PTR __Bucket$[ebp]
	mov	eax, edx
	or	eax, 1

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$1[ebp], 0

; 74   : 
; 75   : #if (defined (_M_IX86) || defined (_M_ARM))
; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax
	push	esi

; 1237 :     {

	mov	esi, ecx

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$1[ebp], eax

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	eax, 1
	shl	eax, cl
	and	eax, -2					; fffffffeH

; 1238 :         size_type _Segment = _Segment_index_of(_Bucket);
; 1239 :         _Bucket -= _Segment_base(_Segment);
; 1240 :         return _M_buckets[_Segment][_Bucket];

	sub	edx, eax
	mov	eax, DWORD PTR [esi+ecx*4+4]
	pop	esi
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1241 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?_Get_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@I@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Get_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Get_parent@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z
_TEXT	SEGMENT
__Index$1 = -4						; size = 4
__Bucket$ = 8						; size = 4
?_Get_parent@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Get_parent, COMDAT
; _this$ = ecx

; 1229 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	eax, DWORD PTR __Bucket$[ebp]
	bsr	ecx, eax
	mov	DWORD PTR __Index$1[ebp], 0
	mov	DWORD PTR __Index$1[ebp], ecx

; 1230 :         // Unsets bucket's most significant turned-on bit
; 1231 :         unsigned char _Msb = _Get_msb(_Bucket);
; 1232 :         return _Bucket & ~(1 << _Msb);

	movzx	ecx, cl
	btr	eax, ecx

; 1233 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Get_parent@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABEII@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Get_parent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Adjust_table_size@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXII@Z
_TEXT	SEGMENT
__Total_elements$ = 8					; size = 4
__Current_size$ = 12					; size = 4
?_Adjust_table_size@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXII@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Adjust_table_size, COMDAT
; _this$ = ecx

; 1219 :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 1220 :         // Grow the table by a factor of 2 if possible and needed
; 1221 :         if (((float) _Total_elements / (float) _Current_size) > _M_maximum_bucket_size)

	mov	eax, DWORD PTR __Total_elements$[ebp]
	push	esi
	mov	esi, DWORD PTR __Current_size$[ebp]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	eax, esi
	shr	eax, 31					; 0000001fH
	cvtpd2ps xmm1, xmm0
	movd	xmm0, esi
	cvtdq2pd xmm0, xmm0
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	divss	xmm1, xmm0
	comiss	xmm1, DWORD PTR [ecx+152]
	jbe	SHORT $LN2@Adjust_tab

; 1222 :         {
; 1223 :              // Double the size of the hash only if size has not changed inbetween loads
; 1224 :             _InterlockedCompareExchangeSizeT(&_M_number_of_buckets, 2 * _Current_size, _Current_size);

	lea	edx, DWORD PTR [esi+esi]
	add	ecx, 148				; 00000094H
	mov	eax, esi
	lock	 cmpxchg DWORD PTR [ecx], edx
$LN2@Adjust_tab:
	pop	esi

; 1225 :         }
; 1226 :     }

	pop	ebp
	ret	8
?_Adjust_table_size@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXII@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Adjust_table_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Initialize_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXI@Z
_TEXT	SEGMENT
__Reversed_order_key$1 = -12				; size = 4
tv569 = -8						; size = 4
tv570 = -4						; size = 4
__Index$2 = -4						; size = 4
__Index$3 = -4						; size = 4
__Index$4 = -4						; size = 4
__Dummy_node$ = 8					; size = 4
__Bucket$ = 8						; size = 4
?_Initialize_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXI@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Initialize_bucket, COMDAT
; _this$ = ecx

; 1195 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx

; 1196 :         // Bucket 0 has no parent. Initialize it and return.
; 1197 :         if (_Bucket == 0)

	mov	ebx, DWORD PTR __Bucket$[ebp]
	push	esi
	mov	esi, ecx
	test	ebx, ebx
	jne	SHORT $LN2@Initialize

; 940  :         memset(_M_buckets, 0, _Pointers_per_table * sizeof(void *));

	push	128					; 00000080H
	lea	eax, DWORD PTR [esi+4]
	push	ebx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 941  : 
; 942  :         // Insert the first element in the split-ordered list
; 943  :         _Full_iterator _Dummy_node = _M_split_ordered_list._Begin();
; 944  :         _Set_bucket(0, _Dummy_node);

	mov	ecx, esi
	push	DWORD PTR [esi+132]
	push	ebx
	call	?_Set_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXIV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Set_bucket
	pop	esi
	pop	ebx

; 1216 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@Initialize:

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, ebx
	mov	DWORD PTR __Index$4[ebp], 0
	mov	DWORD PTR __Index$4[ebp], eax

; 1198 :         {
; 1199 :             _Init();
; 1200 :             return;
; 1201 :         }
; 1202 : 
; 1203 :         size_type _Parent_bucket = _Get_parent(_Bucket);

	movzx	eax, al
	push	edi

; 1232 :         return _Bucket & ~(1 << _Msb);

	mov	edi, ebx

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$3[ebp], 0

; 1232 :         return _Bucket & ~(1 << _Msb);

	btr	edi, eax

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	eax, edi
	or	eax, 1
	mov	DWORD PTR tv569[ebp], eax

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$3[ebp], eax

; 1267 :         if (_M_buckets[_Segment] == NULL)

	mov	eax, DWORD PTR [esi+ecx*4+4]
	test	eax, eax
	je	SHORT $LN57@Initialize

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	edx, 1

; 1273 :         return (_Iterator._Mynode() != NULL);

	mov	eax, edi

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	shl	edx, cl

; 1273 :         return (_Iterator._Mynode() != NULL);

	mov	ecx, DWORD PTR [esi+ecx*4+4]

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	and	edx, -2					; fffffffeH

; 1273 :         return (_Iterator._Mynode() != NULL);

	sub	eax, edx
	cmp	DWORD PTR [ecx+eax*4], 0
	setne	al

; 1204 : 
; 1205 :         // All _Parent_bucket buckets have to be initialized before this bucket is
; 1206 :         if (!_Is_initialized(_Parent_bucket))

	test	al, al
	jne	SHORT $LN3@Initialize
$LN57@Initialize:

; 1207 :         {
; 1208 :             _Initialize_bucket(_Parent_bucket);

	push	edi
	mov	ecx, esi
	call	?_Initialize_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXI@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Initialize_bucket
$LN3@Initialize:

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	eax, DWORD PTR tv569[ebp]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	mov	edx, DWORD PTR __imp_?_Byte_reverse_table@details@Concurrency@@3QBEB

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax
	mov	DWORD PTR __Index$2[ebp], 0

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$2[ebp], eax

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	eax, 1
	shl	eax, cl
	and	eax, -2					; fffffffeH

; 1240 :         return _M_buckets[_Segment][_Bucket];

	sub	edi, eax
	mov	eax, DWORD PTR [esi+ecx*4+4]

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	ecx, bl

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	ecx, BYTE PTR [ecx+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+3], cl

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	ecx, bh

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	ecx, BYTE PTR [ecx+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+2], cl

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	ecx, BYTE PTR __Bucket$[ebp+2]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	ecx, BYTE PTR [ecx+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+1], cl

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	ecx, BYTE PTR __Bucket$[ebp+3]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	ecx, BYTE PTR [ecx+edx]
	mov	BYTE PTR __Reversed_order_key$1[ebp], cl

; 1302 :         return _Reverse(_Order_key) & ~(0x1);

	mov	ecx, DWORD PTR __Reversed_order_key$1[ebp]
	and	ecx, -2					; fffffffeH

; 1209 :         }
; 1210 : 
; 1211 :         _Full_iterator _Parent = _Get_bucket(_Parent_bucket);
; 1212 : 
; 1213 :         // Create a dummy first node in this bucket
; 1214 :         _Full_iterator _Dummy_node = _M_split_ordered_list._Insert_dummy(_Parent, _Split_order_dummy_key(_Bucket));

	push	ecx
	push	DWORD PTR [eax+edi*4]
	lea	eax, DWORD PTR __Dummy_node$[ebp]
	push	eax
	lea	ecx, DWORD PTR [esi+132]
	call	?_Insert_dummy@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@V45@I@Z ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert_dummy

; 1215 :         _Set_bucket(_Bucket, _Dummy_node);

	push	DWORD PTR __Dummy_node$[ebp]
	mov	ecx, esi
	push	ebx
	call	?_Set_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXIV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Set_bucket
	pop	edi
	pop	esi
	pop	ebx

; 1216 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Initialize_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXI@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Initialize_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z
_TEXT	SEGMENT
_this$1$ = -16						; size = 4
__Reversed_order_key$1 = -12				; size = 4
__Index$2 = -8						; size = 4
__Index$3 = -8						; size = 4
__Index$4 = -8						; size = 4
__Val$5 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find, COMDAT
; _this$ = ecx

; 1037 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	ebx, DWORD PTR __Keyval$[ebp]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1037 :     {

	mov	esi, ecx
	mov	DWORD PTR _this$1$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [ebx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [ebx+1]
	push	edi

; 346  : 		_Val ^= (size_t)_First[_Next];

	xor	edx, eax
	movzx	eax, BYTE PTR [ebx+2]

; 347  : 		_Val *= _FNV_prime;

	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [ebx+3]
	imul	ecx, edx, 16777619
	mov	ebx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1039 :         size_type _Bucket = _Order_key % _M_number_of_buckets;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	xor	ecx, eax

; 347  : 		_Val *= _FNV_prime;

	imul	eax, ecx, 16777619
	mov	DWORD PTR __Val$5[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1039 :         size_type _Bucket = _Order_key % _M_number_of_buckets;

	div	DWORD PTR [esi+148]
	npad	11
$LL2@Find:

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	eax, edx

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$4[ebp], 0

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	or	eax, 1

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$4[ebp], eax

; 1267 :         if (_M_buckets[_Segment] == NULL)

	mov	edi, DWORD PTR [esi+ecx*4+4]
	test	edi, edi
	je	SHORT $LN156@Find

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	esi, ebx

; 1273 :         return (_Iterator._Mynode() != NULL);

	mov	eax, edx

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	shl	esi, cl
	and	esi, -2					; fffffffeH

; 1273 :         return (_Iterator._Mynode() != NULL);

	sub	eax, esi
	cmp	DWORD PTR [edi+eax*4], 0
	setne	al

; 1040 : 
; 1041 :         // If _Bucket has not been initialized, keep searching up for a parent bucket
; 1042 :         // that has been initialized.  Worst case is the entire map will be read.
; 1043 :         while (!_Is_initialized(_Bucket))

	test	al, al
	jne	SHORT $LN3@Find
	mov	esi, DWORD PTR _this$1$[ebp]
$LN156@Find:

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, edx
	mov	DWORD PTR __Index$3[ebp], 0
	mov	DWORD PTR __Index$3[ebp], eax

; 1044 :         {
; 1045 :             _Bucket = _Get_parent(_Bucket);

	movzx	eax, al

; 1232 :         return _Bucket & ~(1 << _Msb);

	btr	edx, eax

; 1046 :         }

	jmp	SHORT $LL2@Find
$LN3@Find:

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	mov	ecx, DWORD PTR __imp_?_Byte_reverse_table@details@Concurrency@@3QBEB

; 67   :     return _Byte_reverse_table[_Original_byte];

	mov	ebx, DWORD PTR __Val$5[ebp]
	movzx	eax, bl

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$2[ebp], 0
	pop	edi

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+3], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, bh

; 1051 :         for (_Full_const_iterator _Iterator = _Get_bucket(_Bucket); _Iterator != _Last; _Iterator++)

	mov	ebx, DWORD PTR __Keyval$[ebp]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+2], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Val$5[ebp+2]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+1], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Val$5[ebp+3]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$1[ebp], al

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	eax, edx

; 1296 :         return _Reverse(_Order_key) | 0x1;

	mov	esi, DWORD PTR __Reversed_order_key$1[ebp]

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	or	eax, 1

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax

; 1296 :         return _Reverse(_Order_key) | 0x1;

	or	esi, 1

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$2[ebp], eax

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	eax, 1
	shl	eax, cl
	and	eax, -2					; fffffffeH

; 1051 :         for (_Full_const_iterator _Iterator = _Get_bucket(_Bucket); _Iterator != _Last; _Iterator++)

	sub	edx, eax
	mov	eax, DWORD PTR _this$1$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4+4]
	mov	eax, DWORD PTR [eax+edx*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1051 :         for (_Full_const_iterator _Iterator = _Get_bucket(_Bucket); _Iterator != _Last; _Iterator++)

	je	SHORT $LN5@Find
$LL6@Find:

; 1052 :         {
; 1053 :             if (_Mylist::_Get_key(_Iterator) > _Order_key)

	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, esi
	ja	SHORT $LN5@Find

; 1054 :             {
; 1055 :                 // If the order key is smaller than the current order key, the element
; 1056 :                 // is not in the hash.
; 1057 :                 return end();
; 1058 :             }
; 1059 :             else if (_Mylist::_Get_key(_Iterator) == _Order_key)

	jne	SHORT $LN4@Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR [ebx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1064 :                 if (!this->_M_comparator(this->_Key_function(*_Iterator), _Keyval))

	je	SHORT $LN134@Find
$LN4@Find:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]

; 233  : 		return (this->_Ptr == _Right._Ptr);

	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1051 :         for (_Full_const_iterator _Iterator = _Get_bucket(_Bucket); _Iterator != _Last; _Iterator++)

	jne	SHORT $LL6@Find
$LN5@Find:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1072 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN134@Find:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi
	pop	ebx
	mov	DWORD PTR [ecx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1066 :                     return _M_split_ordered_list._Get_iterator(_Iterator);

	mov	eax, ecx

; 1072 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z
_TEXT	SEGMENT
tv686 = -12						; size = 4
__Reversed_order_key$1 = -8				; size = 4
tv688 = -4						; size = 4
__Index$2 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Index$3 = 12						; size = 4
__Val$4 = 12						; size = 4
__Keyval$ = 12						; size = 4
?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find, COMDAT
; _this$ = ecx

; 999  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	esi, DWORD PTR __Keyval$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 999  :     {

	mov	ebx, ecx
	push	edi

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$2[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [esi]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [esi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+2]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+3]
	imul	ecx, edx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1001 :         size_type _Bucket = _Order_key % _M_number_of_buckets;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	xor	ecx, eax

; 347  : 		_Val *= _FNV_prime;

	imul	eax, ecx, 16777619
	mov	DWORD PTR __Val$4[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1001 :         size_type _Bucket = _Order_key % _M_number_of_buckets;

	div	DWORD PTR [ebx+148]
	mov	edi, edx

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	eax, edi
	or	eax, 1
	mov	DWORD PTR tv686[ebp], eax

; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$2[ebp], eax

; 1267 :         if (_M_buckets[_Segment] == NULL)

	mov	eax, DWORD PTR [ebx+ecx*4+4]
	test	eax, eax
	je	SHORT $LN160@Find

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	edx, 1

; 1273 :         return (_Iterator._Mynode() != NULL);

	mov	eax, edi

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	shl	edx, cl

; 1273 :         return (_Iterator._Mynode() != NULL);

	mov	ecx, DWORD PTR [ebx+ecx*4+4]

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	and	edx, -2					; fffffffeH

; 1273 :         return (_Iterator._Mynode() != NULL);

	sub	eax, edx
	cmp	DWORD PTR [ecx+eax*4], 0
	setne	al

; 1002 : 
; 1003 :         // If _Bucket is empty, initialize it first
; 1004 :         if (!_Is_initialized(_Bucket))

	test	al, al
	jne	SHORT $LN5@Find
$LN160@Find:

; 1005 :         {
; 1006 :             _Initialize_bucket(_Bucket);

	push	edi
	mov	ecx, ebx
	call	?_Initialize_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXI@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Initialize_bucket
$LN5@Find:

; 67   :     return _Byte_reverse_table[_Original_byte];

	mov	edx, DWORD PTR __Val$4[ebp]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	mov	ecx, DWORD PTR __imp_?_Byte_reverse_table@details@Concurrency@@3QBEB

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, dl

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+3], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, dh

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+2], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Val$4[ebp+2]

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$1[ebp+1], al

; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	eax, BYTE PTR __Val$4[ebp+3]

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$3[ebp], 0

; 1287 :             _Reversed[_Size - _Index - 1] = _Reverse_byte(_Original[_Index]);

	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR __Reversed_order_key$1[ebp], al

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	eax, DWORD PTR tv686[ebp]
	bsr	eax, eax

; 1296 :         return _Reverse(_Order_key) | 0x1;

	mov	edx, DWORD PTR __Reversed_order_key$1[ebp]

; 76   :     _BitScanReverse(&_Index, _Mask);

	mov	DWORD PTR __Index$3[ebp], eax

; 1296 :         return _Reverse(_Order_key) | 0x1;

	or	edx, 1

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	ecx, al

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	eax, 1
	shl	eax, cl
	and	eax, -2					; fffffffeH

; 1240 :         return _M_buckets[_Segment][_Bucket];

	sub	edi, eax
	mov	eax, DWORD PTR [ebx+ecx*4+4]
	mov	eax, DWORD PTR [eax+edi*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1012 :         for (_Full_iterator _Iterator = _Get_bucket(_Bucket); _Iterator != _Last; _Iterator++)

	je	SHORT $LN3@Find
$LL4@Find:

; 1013 :         {
; 1014 :             if (_Mylist::_Get_key(_Iterator) > _Order_key)

	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, edx
	ja	SHORT $LN3@Find

; 1015 :             {
; 1016 :                 // If the order key is smaller than the current order key, the element
; 1017 :                 // is not in the hash.
; 1018 :                 return end();
; 1019 :             }
; 1020 :             else if (_Mylist::_Get_key(_Iterator) == _Order_key)

	jne	SHORT $LN2@Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1025 :                 if (!this->_M_comparator(this->_Key_function(*_Iterator), _Keyval))

	je	SHORT $LN140@Find
$LN2@Find:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]

; 233  : 		return (this->_Ptr == _Right._Ptr);

	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1012 :         for (_Full_iterator _Iterator = _Get_bucket(_Bucket); _Iterator != _Last; _Iterator++)

	jne	SHORT $LL4@Find
$LN3@Find:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1033 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN140@Find:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [ecx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 1027 :                     return _M_split_ordered_list._Get_iterator(_Iterator);

	mov	eax, ecx

; 1033 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Init@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXXZ
_TEXT	SEGMENT
?_Init@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXXZ PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 938  :     {

	npad	2
	push	esi
	mov	esi, ecx

; 939  :         // Allocate an array of segment pointers
; 940  :         memset(_M_buckets, 0, _Pointers_per_table * sizeof(void *));

	push	128					; 00000080H
	push	0
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 941  : 
; 942  :         // Insert the first element in the split-ordered list
; 943  :         _Full_iterator _Dummy_node = _M_split_ordered_list._Begin();
; 944  :         _Set_bucket(0, _Dummy_node);

	mov	ecx, esi
	push	DWORD PTR [esi+132]
	push	0
	call	?_Set_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXIV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Set_bucket
	pop	esi

; 945  :     }

	ret	0
?_Init@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXXZ ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?rehash@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
__Index$2 = 8						; size = 4
__Buckets$ = 8						; size = 4
?rehash@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAEXI@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::rehash, COMDAT
; _this$ = ecx

; 843  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 844  :         size_type _Current_buckets = _M_number_of_buckets;
; 845  : 
; 846  :         if (_Current_buckets > _Buckets)

	mov	edx, DWORD PTR __Buckets$[ebp]
	sub	esp, 12					; 0000000cH
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+148], edx
	ja	SHORT $LN1@rehash

; 847  :         {
; 848  :             return;
; 849  :         }
; 850  :         else if (_Buckets <= 0 || _Buckets > unsafe_max_bucket_count())

	lea	eax, DWORD PTR [edx-1]
	cmp	eax, 2147483647				; 7fffffffH
	ja	SHORT $LN16@rehash

; 853  :         }
; 854  :         // Round up the number of buckets to the next largest power of 2
; 855  :         _M_number_of_buckets = ((size_type) 1) << _Get_msb(_Buckets*2-1);

	lea	eax, DWORD PTR [edx*2-1]

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$2[ebp], 0

; 74   : 
; 75   : #if (defined (_M_IX86) || defined (_M_ARM))
; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax
	mov	DWORD PTR __Index$2[ebp], eax

; 853  :         }
; 854  :         // Round up the number of buckets to the next largest power of 2
; 855  :         _M_number_of_buckets = ((size_type) 1) << _Get_msb(_Buckets*2-1);

	mov	eax, 1
	mov	cl, BYTE PTR __Index$2[ebp]
	shl	eax, cl
	mov	DWORD PTR [esi+148], eax
$LN1@rehash:
	pop	esi

; 856  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN16@rehash:

; 851  :         {
; 852  :             throw std::out_of_range("invalid number of buckets");

	push	OFFSET ??_C@_0BK@KDCGEAPC@invalid?5number?5of?5buckets?$AA@
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0out_of_range@std@@QAE@PBD@Z		; std::out_of_range::out_of_range
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN17@rehash:
$LN15@rehash:
	int	3
?rehash@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAEXI@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::rehash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?unsafe_max_bucket_count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIXZ
_TEXT	SEGMENT
?unsafe_max_bucket_count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIXZ PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::unsafe_max_bucket_count, COMDAT
; _this$ = ecx

; 577  :         return _Segment_size(_Pointers_per_table-1);

	mov	eax, -2147483648			; 80000000H

; 578  :     }

	ret	0
?unsafe_max_bucket_count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIXZ ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::unsafe_max_bucket_count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::count, COMDAT
; _this$ = ecx

; 506  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 507  :         size_type _Count = 0;
; 508  :         const_iterator _It = _Find(_Keyval);

	mov	esi, DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __It$[ebp]
	push	edi
	push	esi
	push	eax
	xor	edi, edi
	call	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@ABE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __It$[ebp]
	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 509  :         for (;_It != end() && !this->_M_comparator(this->_Key_function(*_It), _Keyval); _It++)

	je	SHORT $LN72@count
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	edx, DWORD PTR [esi]
	npad	1
$LL8@count:
	cmp	DWORD PTR [eax+4], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 509  :         for (;_It != end() && !this->_M_comparator(this->_Key_function(*_It), _Keyval); _It++)

	jne	SHORT $LN72@count

; 510  :         {
; 511  :             _Count++;

	inc	edi
$LL15@count:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 80   :         while (this->_Mynode() != NULL && this->_Mynode()->_Is_dummy());

	test	eax, eax
	je	SHORT $LN72@count
	mov	cl, BYTE PTR [eax+12]
	not	cl
	test	cl, 1
	jne	SHORT $LL15@count
	mov	cl, BYTE PTR [eax+12]
	not	cl

; 92   :         while (this->_Mynode() != NULL && this->_Mynode()->_Is_dummy());

	test	cl, 1
	jne	SHORT $LL15@count
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 509  :         for (;_It != end() && !this->_M_comparator(this->_Key_function(*_It), _Keyval); _It++)

	jmp	SHORT $LL8@count
$LN72@count:

; 512  :         }
; 513  :         return _Count;

	mov	eax, edi
	pop	edi
	pop	esi

; 514  :     }

	pop	ebp
	ret	4
?count@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::find, COMDAT
; _this$ = ecx

; 475  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 476  :         return _Find(_Keyval);

	push	DWORD PTR __Keyval$[ebp]
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	?_Find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Find
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 477  :     }

	pop	ebp
	ret	8
?find@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@ABQAVISteamRemoteStorage@@@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::find
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?end@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::end, COMDAT
; _this$ = ecx

; 306  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 308  :     }

	pop	ebp
	ret	4
?end@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?end@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::end, COMDAT
; _this$ = ecx

; 293  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 295  :     }

	pop	ebp
	ret	4
?end@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Segment_size@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z
_TEXT	SEGMENT
__K$ = 8						; size = 4
?_Segment_size@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_size, COMDAT

; 197  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 198  :         return _K ? size_type(1)<<_K : 2;

	mov	ecx, DWORD PTR __K$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Segment_si
	mov	eax, 1
	shl	eax, cl

; 199  :     }

	pop	ebp
	ret	0
$LN3@Segment_si:

; 198  :         return _K ? size_type(1)<<_K : 2;

	mov	eax, 2

; 199  :     }

	pop	ebp
	ret	0
?_Segment_size@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Segment_base@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z
_TEXT	SEGMENT
__K$ = 8						; size = 4
?_Segment_base@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_base, COMDAT

; 192  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 193  :         return (size_type(1)<<_K & ~size_type(1));

	mov	ecx, DWORD PTR __K$[ebp]
	mov	eax, 1
	shl	eax, cl
	and	eax, -2					; fffffffeH

; 194  :     }

	pop	ebp
	ret	0
?_Segment_base@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_base
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Segment_index_of@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z
_TEXT	SEGMENT
__Index$1 = -4						; size = 4
__Index$ = 8						; size = 4
?_Segment_index_of@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_index_of, COMDAT

; 187  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	mov	eax, DWORD PTR __Index$[ebp]
	or	eax, 1

; 73   :     unsigned long _Index = 0;

	mov	DWORD PTR __Index$1[ebp], 0

; 74   : 
; 75   : #if (defined (_M_IX86) || defined (_M_ARM))
; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, eax
	mov	DWORD PTR __Index$1[ebp], eax

; 188  :         return size_type( _Get_msb( _Index|1 ) );

	movzx	eax, al

; 189  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Segment_index_of@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@SAII@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Segment_index_of
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ??1?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@XZ
_TEXT	SEGMENT
??1?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@XZ PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::~_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >, COMDAT
; _this$ = ecx

; 170  :     {

	npad	2
	push	esi
	push	edi
	mov	edi, ecx

; 172  :         for (size_type _Index = 0; _Index < _Pointers_per_table; _Index++)

	xor	esi, esi
$LL4@Concurrent:

; 173  :         {
; 174  :             if (_M_buckets[_Index] != NULL)

	mov	eax, DWORD PTR [edi+esi*4+4]
	test	eax, eax
	je	SHORT $LN2@Concurrent

; 198  :         return _K ? size_type(1)<<_K : 2;

	test	esi, esi
	je	SHORT $LN12@Concurrent
	mov	edx, 1
	mov	ecx, esi
	shl	edx, cl
	jmp	SHORT $LN13@Concurrent
$LN12@Concurrent:
	mov	edx, 2
$LN13@Concurrent:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	cmp	edx, 1073741823				; 3fffffffH
	ja	$LN89@Concurrent

; 99   : 	const size_t _User_size = _Count * _Sz;

	lea	ecx, DWORD PTR [edx*4]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN20@Concurrent

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	test	al, 31					; 0000001fH
	jne	SHORT $LN89@Concurrent

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jae	SHORT $LN89@Concurrent

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jb	SHORT $LN89@Concurrent

; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	ja	SHORT $LN89@Concurrent

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	eax, ecx
$LN20@Concurrent:

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@Concurrent:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 172  :         for (size_type _Index = 0; _Index < _Pointers_per_table; _Index++)

	inc	esi
	cmp	esi, 32					; 00000020H
	jb	SHORT $LL4@Concurrent
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 419  :         _Nodeptr _Pnode = this->_Myhead;

	mov	eax, DWORD PTR [edi+132]

; 420  : 
; 421  :         _ASSERT_EXPR(this->_Myhead != NULL, L"Invalid head list node");
; 422  :         _Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]

; 423  :         _Pnode->_M_next = NULL;

	mov	DWORD PTR [eax], 0

; 424  :         _Pnode = _Pnext;

	mov	eax, esi

; 425  : 
; 426  :         while (_Pnode != NULL)

	test	esi, esi
	je	SHORT $LN33@Concurrent
	npad	5
$LL32@Concurrent:

; 427  :         {
; 428  :             _Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 430  :             _Pnode = _Pnext;

	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL32@Concurrent
$LN33@Concurrent:

; 397  :         _Nodeptr _Pnode = this->_Myhead;

	mov	eax, DWORD PTR [edi+132]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 433  :         _M_element_count = 0;

	mov	DWORD PTR [edi+140], 0

; 398  :         this->_Myhead = NULL;

	mov	DWORD PTR [edi+132], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 184  :     }

	ret	0
$LN89@Concurrent:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN107@Concurrent:
$LN106@Concurrent:
	int	3
??1?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@XZ ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::~_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Number_of_buckets$ = 8				; size = 4
__Parg$ = 12						; size = 4
__Allocator$ = 16					; size = 4
??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z PROC ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >, COMDAT
; _this$ = ecx

; 126  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 56   :     _Concurrent_unordered_map_traits(const _Key_compare& _Traits) : _M_comparator(_Traits)

	mov	eax, DWORD PTR __Parg$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 126  :     {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 56   :     _Concurrent_unordered_map_traits(const _Key_compare& _Traits) : _M_comparator(_Traits)

	mov	ax, WORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h

; 56   :     _Concurrent_unordered_map_traits(const _Key_compare& _Traits) : _M_comparator(_Traits)

	mov	WORD PTR [esi], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN38@Concurrent
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN64@Concurrent:
$LN38@Concurrent:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 215  :             _M_order_key = _Order_key;

	mov	DWORD PTR [eax+12], 0

; 216  :             _M_next = NULL;

	mov	DWORD PTR [eax], 0

; 313  :         this->_Myhead = _Buynode(0);

	mov	DWORD PTR [esi+132], eax

; 387  :     _Split_ordered_list(_Allocator_type _Allocator = allocator_type()) : _Mybase(_Allocator), _M_element_count(0)

	mov	DWORD PTR [esi+140], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 125  :         : _Traits(_Parg), _M_number_of_buckets(_Number_of_buckets), _M_split_ordered_list(_Allocator), _M_allocator(_Allocator), _M_maximum_bucket_size((float) _Initial_bucket_load)

	mov	eax, DWORD PTR __Number_of_buckets$[ebp]

; 940  :         memset(_M_buckets, 0, _Pointers_per_table * sizeof(void *));

	push	128					; 00000080H

; 125  :         : _Traits(_Parg), _M_number_of_buckets(_Number_of_buckets), _M_split_ordered_list(_Allocator), _M_allocator(_Allocator), _M_maximum_bucket_size((float) _Initial_bucket_load)

	mov	DWORD PTR [esi+148], eax

; 940  :         memset(_M_buckets, 0, _Pointers_per_table * sizeof(void *));

	lea	eax, DWORD PTR [esi+4]
	push	0
	push	eax

; 125  :         : _Traits(_Parg), _M_number_of_buckets(_Number_of_buckets), _M_split_ordered_list(_Allocator), _M_allocator(_Allocator), _M_maximum_bucket_size((float) _Initial_bucket_load)

	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR [esi+152], 1082130432		; 40800000H

; 940  :         memset(_M_buckets, 0, _Pointers_per_table * sizeof(void *));

	call	_memset
	add	esp, 12					; 0000000cH

; 941  : 
; 942  :         // Insert the first element in the split-ordered list
; 943  :         _Full_iterator _Dummy_node = _M_split_ordered_list._Begin();
; 944  :         _Set_bucket(0, _Dummy_node);

	mov	ecx, esi
	push	DWORD PTR [esi+132]
	push	0
	call	?_Set_bucket@?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@AAEXIV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Set_bucket

; 127  :         _Init();
; 128  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN63@Concurrent:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	jmp	??1?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
__ehhandler$??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Concurrent_hash@V?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@@details@Concurrency@@QAE@IABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@ABV?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ENDP ; Concurrency::details::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >::_Concurrent_hash<Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Check_range@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@AAEXXZ
_TEXT	SEGMENT
?_Check_range@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@AAEXXZ PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Check_range, COMDAT
; _this$ = ecx

; 753  : #if defined (_DEBUG)
; 754  :         for (_Full_iterator _Iterator = _Begin(); _Iterator != _End(); _Iterator++)
; 755  :         {
; 756  :             _Full_iterator _Next_iterator = _Iterator;
; 757  :             _Next_iterator++;
; 758  : 
; 759  :             _ASSERT_EXPR(_Next_iterator == end() || _Next_iterator._Mynode()->_Get_order_key() >= _Iterator._Mynode()->_Get_order_key(), L"!!! List order inconsistency !!!");
; 760  :         }
; 761  : #endif  /* defined (_DEBUG) */
; 762  :     }

	ret	0
?_Check_range@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@AAEXXZ ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Check_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Insert_dummy@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@V45@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Iterator$ = 12					; size = 4
__Order_key$ = 16					; size = 4
?_Insert_dummy@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@V45@I@Z PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert_dummy, COMDAT
; _this$ = ecx

; 634  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	esi, DWORD PTR __Iterator$[ebp]
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	edi, edi
	jne	SHORT $LN41@Insert_dum
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN126@Insert_dum:
$LN41@Insert_dum:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 215  :             _M_order_key = _Order_key;

	mov	ebx, DWORD PTR __Order_key$[ebp]
	mov	DWORD PTR [edi+12], ebx

; 216  :             _M_next = NULL;

	mov	DWORD PTR [edi], 0
	mov	ecx, DWORD PTR __Iterator$[ebp]
$LL2@Insert_dum:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 233  : 		return (this->_Ptr == _Right._Ptr);

	test	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 651  :             if (_Where == _Last || _Get_key(_Where) > _Order_key)

	je	SHORT $LN7@Insert_dum
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, ebx
	ja	SHORT $LN7@Insert_dum

; 674  :                 }
; 675  :             }
; 676  :             else if (_Get_key(_Where) == _Order_key)

	je	SHORT $LN119@Insert_dum

; 681  :             }
; 682  : 
; 683  :             // Move the iterator forward
; 684  :             _Iterator = _Where;

	mov	ecx, esi
	mov	DWORD PTR __Iterator$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 686  :         }

	jmp	SHORT $LL2@Insert_dum
$LN7@Insert_dum:

; 610  :         _New_node->_M_next = _Current_node;

	mov	DWORD PTR [edi], esi

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	edx, edi
	mov	eax, esi
	lock	 cmpxchg DWORD PTR [ecx], edx

; 230  : 
; 231  :             if (_Exchange_node == _Current_node)

	cmp	eax, esi
	je	SHORT $LN120@Insert_dum

; 652  :             {
; 653  :                 _ASSERT_EXPR(_Get_key(_Iterator) < _Order_key, L"Invalid node order in the list");
; 654  : 
; 655  :                 // Try to insert it in the right place
; 656  :                 _Nodeptr _Inserted_node = _Insert(_Iterator._Mynode(), _Dummy_node, _Where._Mynode());
; 657  : 
; 658  :                 if (_Inserted_node == _Dummy_node)

	cmp	eax, edi
	je	SHORT $LN120@Insert_dum
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 210  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR __Iterator$[ebp]
	mov	esi, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 673  :                     continue;

	jmp	SHORT $LL2@Insert_dum
$LN119@Insert_dum:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 680  :                 return _Where;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 680  :                 return _Where;

	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx

; 688  :     }

	pop	ebp
	ret	12					; 0000000cH
$LN120@Insert_dum:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edi
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 688  :     }

	pop	ebp
	ret	12					; 0000000cH
$LN125@Insert_dum:
?_Insert_dummy@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@V45@I@Z ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert_dummy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Insert@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@5@0PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAJ@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Iterator$ = 12					; size = 4
__Next$ = 16						; size = 4
__List_node$ = 20					; size = 4
__New_count$ = 24					; size = 4
?_Insert@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@5@0PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAJ@Z PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert, COMDAT
; _this$ = ecx

; 616  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	edx, DWORD PTR __Iterator$[ebp]
	push	ebx

; 610  :         _New_node->_M_next = _Current_node;

	mov	ebx, DWORD PTR __List_node$[ebp]
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 83   : 		return (_Ptr);

	mov	edi, DWORD PTR __Next$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	esi, ebx

; 616  :     {

	mov	DWORD PTR _this$1$[ebp], ecx

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	eax, edi

; 610  :         _New_node->_M_next = _Current_node;

	mov	DWORD PTR [ebx], edi

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	lock	 cmpxchg DWORD PTR [edx], esi

; 230  : 
; 231  :             if (_Exchange_node == _Current_node)

	cmp	eax, edi
	je	SHORT $LN57@Insert

; 617  :         _Nodeptr _Inserted_node = _Insert(_Iterator._Mynode(), _List_node, _Next._Mynode());
; 618  : 
; 619  :         if (_Inserted_node == _List_node)

	cmp	eax, ebx
	je	SHORT $LN57@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], 0

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 630  :     }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN57@Insert:

; 620  :         {
; 621  :             // If the insert succeeded, check that the order is correct and increment the element count
; 622  :             _Check_range();
; 623  :             *_New_count = _InterlockedIncrement(&_M_element_count);

	mov	eax, DWORD PTR _this$1$[ebp]
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax+8], ecx
	inc	ecx
	mov	eax, DWORD PTR __New_count$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ebx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 630  :     }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?_Insert@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AU?$pair@V?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@details@Concurrency@@_N@std@@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@5@0PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAJ@Z ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Insert@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAU4523@00@Z
_TEXT	SEGMENT
__Previous$ = 8						; size = 4
__New_node$ = 12					; size = 4
__Current_node$ = 16					; size = 4
?_Insert@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAU4523@00@Z PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert, COMDAT
; _this$ = ecx

; 609  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	ecx, DWORD PTR __Previous$[ebp]
	push	esi

; 610  :         _New_node->_M_next = _Current_node;

	mov	esi, DWORD PTR __Current_node$[ebp]

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	eax, esi
	push	edi

; 610  :         _New_node->_M_next = _Current_node;

	mov	edi, DWORD PTR __New_node$[ebp]

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	mov	edx, edi

; 610  :         _New_node->_M_next = _Current_node;

	mov	DWORD PTR [edi], esi

; 229  :             _Nodeptr _Exchange_node = (_Nodeptr) _InterlockedCompareExchangePointer((void * volatile *) &_M_next, _New_node, _Current_node);

	lock	 cmpxchg DWORD PTR [ecx], edx

; 230  : 
; 231  :             if (_Exchange_node == _Current_node)

	cmp	eax, esi
	cmove	eax, edi
	pop	edi
	pop	esi

; 611  :         return _Previous->_Atomic_set_next(_New_node, _Current_node);
; 612  :     }

	pop	ebp
	ret	12					; 0000000cH
?_Insert@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAU4523@00@Z ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Insert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Erase@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@@Z
_TEXT	SEGMENT
__Delete_node$ = 8					; size = 4
?_Erase@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@@Z PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Erase, COMDAT
; _this$ = ecx

; 597  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	DWORD PTR __Delete_node$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 604  :     }

	pop	ebp
	ret	4
?_Erase@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@@Z ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Get_iterator@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@V?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Iterator$ = 12					; size = 4
?_Get_iterator@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@V?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_iterator, COMDAT
; _this$ = ecx

; 552  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Iterator$[ebp]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 555  :     }

	pop	ebp
	ret	8
?_Get_iterator@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@V?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_iterator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Get_iterator@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Iterator$ = 12					; size = 4
?_Get_iterator@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_iterator, COMDAT
; _this$ = ecx

; 544  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Iterator$[ebp]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 547  :     }

	pop	ebp
	ret	8
?_Get_iterator@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@V?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_iterator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Get_key@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAIABV?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z
_TEXT	SEGMENT
__Iterator$ = 8						; size = 4
?_Get_key@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAIABV?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_key, COMDAT

; 537  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 538  :         return _Iterator._Mynode()->_Get_order_key();

	mov	eax, DWORD PTR __Iterator$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+12]

; 539  :     }

	pop	ebp
	ret	0
?_Get_key@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAIABV?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@@Z ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Get_key
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_End@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_End@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_End, COMDAT
; _this$ = ecx

; 532  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 534  :     }

	pop	ebp
	ret	4
?_End@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Flist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_End
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_End@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_End@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_End, COMDAT
; _this$ = ecx

; 527  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 529  :     }

	pop	ebp
	ret	4
?_End@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_End
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Begin@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Begin@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Begin, COMDAT
; _this$ = ecx

; 516  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 518  :     }

	pop	ebp
	ret	4
?_Begin@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Flist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@XZ ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?end@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::end, COMDAT
; _this$ = ecx

; 456  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 458  :     }

	pop	ebp
	ret	4
?end@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QBE?AV?$_Solist_const_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?end@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::end, COMDAT
; _this$ = ecx

; 451  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\forward_list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 453  :     }

	pop	ebp
	ret	4
?end@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE?AV?$_Solist_iterator@V?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@23@XZ ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?clear@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXXZ PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::clear, COMDAT
; _this$ = ecx

; 413  :     {

	npad	2
	push	esi
	push	edi
	mov	edi, ecx

; 414  : #if _ITERATOR_DEBUG_LEVEL == 2
; 415  :         _Orphan_ptr(*this, 0);
; 416  : #endif  /* _ITERATOR_DEBUG_LEVEL == 2 */
; 417  : 
; 418  :         _Nodeptr _Pnext;
; 419  :         _Nodeptr _Pnode = this->_Myhead;

	mov	eax, DWORD PTR [edi]

; 420  : 
; 421  :         _ASSERT_EXPR(this->_Myhead != NULL, L"Invalid head list node");
; 422  :         _Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]

; 423  :         _Pnode->_M_next = NULL;

	mov	DWORD PTR [eax], 0

; 424  :         _Pnode = _Pnext;

	mov	eax, esi

; 425  : 
; 426  :         while (_Pnode != NULL)

	test	esi, esi
	je	SHORT $LN38@clear
$LL2@clear:

; 427  :         {
; 428  :             _Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 430  :             _Pnode = _Pnext;

	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL2@clear
$LN38@clear:

; 431  :         }
; 432  : 
; 433  :         _M_element_count = 0;

	mov	DWORD PTR [edi+8], 0
	pop	edi
	pop	esi

; 434  :     }

	ret	0
?clear@?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEXXZ ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??1?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ
_TEXT	SEGMENT
??1?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >, COMDAT
; _this$ = ecx

; 392  :     {

	npad	2
	push	esi
	push	edi
	mov	edi, ecx

; 419  :         _Nodeptr _Pnode = this->_Myhead;

	mov	eax, DWORD PTR [edi]

; 420  : 
; 421  :         _ASSERT_EXPR(this->_Myhead != NULL, L"Invalid head list node");
; 422  :         _Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]

; 423  :         _Pnode->_M_next = NULL;

	mov	DWORD PTR [eax], 0

; 424  :         _Pnode = _Pnext;

	mov	eax, esi

; 425  : 
; 426  :         while (_Pnode != NULL)

	test	esi, esi
	je	SHORT $LN5@Split_orde
$LL4@Split_orde:

; 427  :         {
; 428  :             _Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 430  :             _Pnode = _Pnext;

	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL4@Split_orde
$LN5@Split_orde:

; 393  :         // Clear the list
; 394  :         clear();
; 395  : 
; 396  :         // Remove the head element which is not cleared by clear()
; 397  :         _Nodeptr _Pnode = this->_Myhead;

	mov	eax, DWORD PTR [edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 433  :         _M_element_count = 0;

	mov	DWORD PTR [edi+8], 0

; 398  :         this->_Myhead = NULL;

	mov	DWORD PTR [edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 403  :     }

	ret	0
??1?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??0?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z
_TEXT	SEGMENT
__Allocator$ = 8					; size = 1
??0?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z PROC ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >, COMDAT
; _this$ = ecx

; 388  :     {

	npad	2
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 388  :     {

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN30@Split_orde
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN40@Split_orde:
$LN30@Split_orde:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 215  :             _M_order_key = _Order_key;

	mov	DWORD PTR [eax+12], 0

; 216  :             _M_next = NULL;

	mov	DWORD PTR [eax], 0

; 313  :         this->_Myhead = _Buynode(0);

	mov	DWORD PTR [esi], eax

; 389  :     }

	mov	eax, esi
	mov	DWORD PTR [esi+8], 0
	pop	esi
	ret	4
$LN39@Split_orde:
??0?$_Split_ordered_list@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ENDP ; Concurrency::details::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_ordered_list<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Myval@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@@Z PROC ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Myval, COMDAT

; 357  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 358  :         return ((reference)(*_Pnode)._M_element);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 359  :     }

	pop	ebp
	ret	0
?_Myval@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAAAU?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@PAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@@Z ENDP ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Nextnode@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAAAPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAU4523@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAAAPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAU4523@@Z PROC ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Nextnode, COMDAT

; 351  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 352  :         return ((_Nodepref)(*_Pnode)._M_next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 353  :     }

	pop	ebp
	ret	0
?_Nextnode@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@SAAAPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@PAU4523@@Z ENDP ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ?_Buynode@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@I@Z
_TEXT	SEGMENT
__Order_key$ = 8					; size = 4
?_Buynode@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@I@Z PROC ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Buynode, COMDAT
; _this$ = ecx

; 342  :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	ecx, ecx
	jne	SHORT $LN12@Buynode
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN20@Buynode:
$LN12@Buynode:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 215  :             _M_order_key = _Order_key;

	mov	eax, DWORD PTR __Order_key$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 343  :         _Nodeptr _Pnode = this->_M_node_allocator.allocate(1);
; 344  :         _Pnode->_Init(_Order_key);
; 345  : 
; 346  :         return (_Pnode);

	mov	eax, ecx

; 216  :             _M_next = NULL;

	mov	DWORD PTR [ecx], 0

; 347  :     }

	pop	ebp
	ret	4
$LN19@Buynode:
?_Buynode@?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@23@I@Z ENDP ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Buynode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??1?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ
_TEXT	SEGMENT
??1?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ PROC ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >, COMDAT
; _this$ = ecx

; 318  :     }

	ret	0
??1?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@XZ ENDP ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::~_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??0?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z
_TEXT	SEGMENT
__Allocator$ = 8					; size = 1
??0?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z PROC ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >, COMDAT
; _this$ = ecx

; 310  :     {

	npad	2
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 310  :     {

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN25@Split_orde
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN34@Split_orde:
$LN25@Split_orde:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h

; 215  :             _M_order_key = _Order_key;

	mov	DWORD PTR [eax+12], 0

; 216  :             _M_next = NULL;

	mov	DWORD PTR [eax], 0

; 311  :         // Immediately allocate a dummy node with order key of 0. This node
; 312  :         // will always be the head of the list.
; 313  :         this->_Myhead = _Buynode(0);

	mov	DWORD PTR [esi], eax

; 314  :     }

	mov	eax, esi
	pop	esi
	ret	4
$LN33@Split_orde:
??0?$_Split_order_list_value@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ENDP ; Concurrency::details::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_order_list_value<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@I@Z PROC ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 268435455				; 0fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 4

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@I@Z ENDP ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@I@Z PROC ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@@std@@QAEXPAU_Node@?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@I@Z ENDP ; std::allocator<Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Node>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_split_ordered_list.h
;	COMDAT ??0?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z
_TEXT	SEGMENT
__Allocator$ = 8					; size = 1
??0?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z PROC ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >, COMDAT
; _this$ = ecx

; 261  :     }

	mov	eax, ecx
	ret	4
??0?$_Split_order_list_node@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@2@@details@Concurrency@@QAE@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@@Z ENDP ; Concurrency::details::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >::_Split_order_list_node<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *>,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$equal_to@PAVISteamRemoteStorage@@@std@@QBE_NABQAVISteamRemoteStorage@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$equal_to@PAVISteamRemoteStorage@@@std@@QBE_NABQAVISteamRemoteStorage@@0@Z PROC ; std::equal_to<ISteamRemoteStorage *>::operator(), COMDAT
; _this$ = ecx

; 219  : 		{	// apply operator== to operands

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 220  : 		return (_Left == _Right);
; 221  : 		}

	pop	ebp
	ret	8
??R?$equal_to@PAVISteamRemoteStorage@@@std@@QBE_NABQAVISteamRemoteStorage@@0@Z ENDP ; std::equal_to<ISteamRemoteStorage *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$_Bitwise_hash@PAVISteamRemoteStorage@@@std@@QBEIABQAVISteamRemoteStorage@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??R?$_Bitwise_hash@PAVISteamRemoteStorage@@@std@@QBEIABQAVISteamRemoteStorage@@@Z PROC ; std::_Bitwise_hash<ISteamRemoteStorage *>::operator(), COMDAT
; _this$ = ecx

; 360  : 		{	// hash _Keyval to size_t value by pseudorandomizing transform

	npad	2
	push	ebp
	mov	ebp, esp

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edx, DWORD PTR __Keyval$[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, eax, 16777619
	movzx	eax, BYTE PTR [edx+1]
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619

; 361  : 		return (_Hash_seq((const unsigned char *)&_Keyval, sizeof (_Kty)));
; 362  : 		}

	pop	ebp
	ret	4
??R?$_Bitwise_hash@PAVISteamRemoteStorage@@@std@@QBEIABQAVISteamRemoteStorage@@@Z ENDP ; std::_Bitwise_hash<ISteamRemoteStorage *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ??R?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QBE_NABQAVISteamRemoteStorage@@0@Z
_TEXT	SEGMENT
__Keyval1$ = 8						; size = 4
__Keyval2$ = 12						; size = 4
??R?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QBE_NABQAVISteamRemoteStorage@@0@Z PROC ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::operator(), COMDAT
; _this$ = ecx

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Keyval1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Keyval2$[ebp]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 51   :         return (!_M_key_compare_object(_Keyval1, _Keyval2));
; 52   :     }

	pop	ebp
	ret	8
??R?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QBE_NABQAVISteamRemoteStorage@@0@Z ENDP ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ??R?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??R?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z PROC ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::operator(), COMDAT
; _this$ = ecx

; 45   :     {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edx, DWORD PTR __Keyval$[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, eax, 16777619
	movzx	eax, BYTE PTR [edx+1]
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h

; 47   :     }

	pop	ebp
	ret	4
??R?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QBEIABQAVISteamRemoteStorage@@@Z ENDP ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ??0?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QAE@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@@Z
_TEXT	SEGMENT
__Hasharg$ = 8						; size = 1
__Keyeqarg$ = 12					; size = 1
??0?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QAE@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@@Z PROC ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >, COMDAT
; _this$ = ecx

; 42   :     }

	mov	eax, ecx
	ret	8
??0?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@QAE@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@4@@Z ENDP ; Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\concurrent_unordered_map.h
;	COMDAT ??0?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@QAE@ABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@@Z
_TEXT	SEGMENT
__Traits$ = 8						; size = 4
??0?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@QAE@ABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@@Z PROC ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>, COMDAT
; _this$ = ecx

; 57   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 56   :     _Concurrent_unordered_map_traits(const _Key_compare& _Traits) : _M_comparator(_Traits)

	mov	eax, DWORD PTR __Traits$[ebp]
	mov	ax, WORD PTR [eax]
	mov	WORD PTR [ecx], ax

; 58   :     }

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$_Concurrent_unordered_map_traits@PAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@V?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@details@Concurrency@@V?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@$0A@@details@Concurrency@@QAE@ABV?$_Hash_compare@PAVISteamRemoteStorage@@U?$hash@PAVISteamRemoteStorage@@@std@@U?$equal_to@PAVISteamRemoteStorage@@@3@@12@@Z ENDP ; Concurrency::details::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>::_Concurrent_unordered_map_traits<ISteamRemoteStorage *,IWrapSteamRemoteStorage *,Concurrency::details::_Hash_compare<ISteamRemoteStorage *,std::hash<ISteamRemoteStorage *>,std::equal_to<ISteamRemoteStorage *> >,std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@U?$pair@QAVISteamRemoteStorage@@PAVIWrapSteamRemoteStorage@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >::allocator<std::pair<ISteamRemoteStorage * const,IWrapSteamRemoteStorage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Get_msb@details@Concurrency@@YAEI@Z
_TEXT	SEGMENT
__Index$ = -4						; size = 4
__Mask$ = 8						; size = 4
?_Get_msb@details@Concurrency@@YAEI@Z PROC		; Concurrency::details::_Get_msb, COMDAT

; 72   : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 73   :     unsigned long _Index = 0;
; 74   : 
; 75   : #if (defined (_M_IX86) || defined (_M_ARM))
; 76   :     _BitScanReverse(&_Index, _Mask);

	bsr	eax, DWORD PTR __Mask$[ebp]
	mov	DWORD PTR __Index$[ebp], 0
	mov	DWORD PTR __Index$[ebp], eax

; 77   : #else  /* (defined (_M_IX86) || defined (_M_ARM)) */
; 78   :     _BitScanReverse64(&_Index, _Mask);
; 79   : #endif  /* (defined (_M_IX86) || defined (_M_ARM)) */
; 80   : 
; 81   :     return (unsigned char) _Index;
; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_msb@details@Concurrency@@YAEI@Z ENDP		; Concurrency::details::_Get_msb
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\internal_concurrent_hash.h
;	COMDAT ?_Reverse_byte@details@Concurrency@@YAEE@Z
_TEXT	SEGMENT
__Original_byte$ = 8					; size = 1
?_Reverse_byte@details@Concurrency@@YAEE@Z PROC		; Concurrency::details::_Reverse_byte, COMDAT

; 65   : {

	npad	2
	push	ebp
	mov	ebp, esp

; 66   :     // return ((_Original_byte * 0x80200802ULL) & 0x0884422110ULL) * 0x0101010101ULL >> 32;
; 67   :     return _Byte_reverse_table[_Original_byte];

	movzx	ecx, BYTE PTR __Original_byte$[ebp]
	mov	eax, DWORD PTR __imp_?_Byte_reverse_table@details@Concurrency@@3QBEB
	mov	al, BYTE PTR [ecx+eax]

; 68   : }

	pop	ebp
	ret	0
?_Reverse_byte@details@Concurrency@@YAEE@Z ENDP		; Concurrency::details::_Reverse_byte
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN12@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN12@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0

; 65   :         : _Data()

	lea	eax, DWORD PTR [esi+4]

; 66   :     {
; 67   :         __std_exception_copy(&_Other._Data, &_Data);

	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
	mov	DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	pop	ecx
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept
;	COMDAT ??0out_of_range@std@@QAE@PBD@Z
_TEXT	SEGMENT
__InitData$1 = -8					; size = 8
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@PBD@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 141  : 		{	// construct from message string

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	eax, DWORD PTR __Message$[ebp]
	xorps	xmm0, xmm0
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept

; 141  : 		{	// construct from message string

	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h

; 52   :         : _Data()

	lea	edx, DWORD PTR [esi+4]

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	DWORD PTR __InitData$1[ebp], eax

; 55   :         __std_exception_copy(&_InitData, &_Data);

	lea	eax, DWORD PTR __InitData$1[ebp]
	push	edx
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	movq	QWORD PTR [edx], xmm0
	mov	BYTE PTR __InitData$1[ebp+4], 1
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept

; 141  : 		{	// construct from message string

	mov	DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@

; 142  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@PBD@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN9@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN9@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0

; 65   :         : _Data()

	lea	eax, DWORD PTR [esi+4]

; 66   :     {
; 67   :         __std_exception_copy(&_Other._Data, &_Data);

	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	pop	ecx
	ret	0
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept
;	COMDAT ??0logic_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
__InitData$1 = -8					; size = 8
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@PBD@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 29   : 		{	// construct from message string

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	eax, DWORD PTR __Message$[ebp]
	xorps	xmm0, xmm0
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept

; 29   : 		{	// construct from message string

	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h

; 52   :         : _Data()

	lea	edx, DWORD PTR [esi+4]

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	DWORD PTR __InitData$1[ebp], eax

; 55   :         __std_exception_copy(&_InitData, &_Data);

	lea	eax, DWORD PTR __InitData$1[ebp]
	push	edx
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	movq	QWORD PTR [edx], xmm0
	mov	BYTE PTR __InitData$1[ebp+4], 1
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\stdexcept

; 29   : 		{	// construct from message string

	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@

; 30   : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@PBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 96   : 	{	// deallocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 97   :  #if defined(_M_IX86) || defined(_M_X64)
; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	mov	ecx, DWORD PTR __Count$[ebp]
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	ecx, eax
	jbe	SHORT $LN2@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 99   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	al, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jb	SHORT $LN5@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jae	SHORT $LN6@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN9@Deallocate:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN3@Deallocate:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 	}

	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 50   : 	{	// allocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 51   : 	void *_Ptr = 0;
; 52   : 
; 53   : 	if (_Count == 0)

	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate

; 54   : 		return (_Ptr);

	xor	eax, eax
$LN1@Allocate:

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN2@Allocate:

; 55   : 
; 56   : 	// check overflow of multiply
; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN3@Allocate

; 58   : 		_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	BYTE PTR __Try_aligned_allocation$[ebp], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	eax, DWORD PTR [ecx+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	eax, ecx
	ja	SHORT $LN6@Allocate

; 69   : 			_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN7@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN4@Allocate:

; 76   : 
; 77   :  #ifdef _DEBUG
; 78   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 79   :  #endif /* _DEBUG */
; 80   : 		}
; 81   : 	else
; 82   :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 83   : 	static_cast<void>(_Try_aligned_allocation);
; 84   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 85   : 
; 86   : 		{	// allocate normal block
; 87   : 		_Ptr = ::operator new(_User_size);

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN1@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 75   : 		}

	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 98   :         return;
; 99   :     }

	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 91   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 94   :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
	test	ecx, ecx
	cmovne	eax, ecx

; 90   :     }

	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	pop	ecx

; 85   :     }

	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
	lea	eax, DWORD PTR [esi+4]

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR __Other$[ebp]
	add	eax, 4
	push	eax
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8

; 68   :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBD@Z
_TEXT	SEGMENT
__InitData$ = -8					; size = 8
__Message$ = 8						; size = 4
??0exception@std@@QAE@QBD@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 53   :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	eax, DWORD PTR __Message$[ebp]
	xorps	xmm0, xmm0
	push	esi
	mov	esi, ecx
	mov	DWORD PTR __InitData$[ebp], eax
	lea	edx, DWORD PTR [esi+4]
	mov	BYTE PTR __InitData$[ebp+4], 1

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	edx
	lea	eax, DWORD PTR __InitData$[ebp]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	movq	QWORD PTR [edx], xmm0
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8

; 56   :     }

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@QBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ?_Hash_seq@std@@YAIPBEI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
?_Hash_seq@std@@YAIPBEI@Z PROC				; std::_Hash_seq, COMDAT

; 331  : 	{	// FNV-1a hash function for bytes in [_First, _First + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 332  :  #if defined(_WIN64)
; 333  : 	static_assert(sizeof(size_t) == 8, "This code is for 64-bit size_t.");
; 334  : 	const size_t _FNV_offset_basis = 14695981039346656037ULL;
; 335  : 	const size_t _FNV_prime = 1099511628211ULL;
; 336  : 
; 337  :  #else /* defined(_WIN64) */
; 338  : 	static_assert(sizeof(size_t) == 4, "This code is for 32-bit size_t.");
; 339  : 	const size_t _FNV_offset_basis = 2166136261U;
; 340  : 	const size_t _FNV_prime = 16777619U;
; 341  :  #endif /* defined(_WIN64) */
; 342  : 
; 343  : 	size_t _Val = _FNV_offset_basis;
; 344  : 	for (size_t _Next = 0; _Next < _Count; ++_Next)

	mov	esi, DWORD PTR __Count$[ebp]
	xor	ecx, ecx
	mov	edx, -2128831035			; 811c9dc5H
	test	esi, esi
	je	SHORT $LN12@Hash_seq
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
$LL8@Hash_seq:

; 345  : 		{	// fold in another byte
; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [ecx+edi]
	inc	ecx
	xor	eax, edx

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	cmp	ecx, esi
	jb	SHORT $LL8@Hash_seq
	pop	edi
$LN12@Hash_seq:

; 348  : 		}
; 349  : 	return (_Val);

	mov	eax, edx
	pop	esi

; 350  : 	}

	pop	ebp
	ret	0
?_Hash_seq@std@@YAIPBEI@Z ENDP				; std::_Hash_seq
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0ISteamRemoteStorage@@QAE@XZ
_TEXT	SEGMENT
??0ISteamRemoteStorage@@QAE@XZ PROC			; ISteamRemoteStorage::ISteamRemoteStorage, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ISteamRemoteStorage@@6B@
	mov	eax, ecx
	ret	0
??0ISteamRemoteStorage@@QAE@XZ ENDP			; ISteamRemoteStorage::ISteamRemoteStorage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 778  : }

	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\steam\remote_storage.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 778  : }

	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
