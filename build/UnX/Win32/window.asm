; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\window.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	?SetWindowPlacement_Original@@3P6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@ZA ; SetWindowPlacement_Original
PUBLIC	?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original
PUBLIC	?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?RegisterClassA_Original@@3P6GGPBUtagWNDCLASSA@@@ZA ; RegisterClassA_Original
PUBLIC	?RegisterClassW_Original@@3P6GGPBUtagWNDCLASSW@@@ZA ; RegisterClassW_Original
PUBLIC	?RegisterClassExA_Original@@3P6GGPBUtagWNDCLASSEXA@@@ZA ; RegisterClassExA_Original
PUBLIC	?RegisterClassExW_Original@@3P6GGPBUtagWNDCLASSEXW@@@ZA ; RegisterClassExW_Original
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	?CreateWindowExA_Original@@3P6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExA_Original
PUBLIC	?CreateWindowExW_Original@@3P6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExW_Original
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	?TranslateMessage_Original@@3P6GHPBUtagMSG@@@ZA	; TranslateMessage_Original
PUBLIC	?PeekMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageW_Original
PUBLIC	?PeekMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageA_Original
PUBLIC	?GetMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA ; GetMessageA_Original
PUBLIC	?GetMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA ; GetMessageW_Original
PUBLIC	?DispatchMessageW_Original@@3P6GJPBUtagMSG@@@ZA	; DispatchMessageW_Original
PUBLIC	?DispatchMessageA_Original@@3P6GJPBUtagMSG@@@ZA	; DispatchMessageA_Original
PUBLIC	?last_message@@3PAUtagMSG@@A			; last_message
PUBLIC	?caught_register@@3_NA				; caught_register
PUBLIC	_LIBID_ATLLib
PUBLIC	?g_hkCallWndProc@@3PAUHHOOK__@@A		; g_hkCallWndProc
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?game_mouselook@@3KA				; game_mouselook
PUBLIC	?game_x@@3HA					; game_x
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?game_y@@3HA					; game_y
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	_IID_IInternalConnection
PUBLIC	?override_window_rects@@3_NA			; override_window_rects
PUBLIC	?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA	; ClipCursor_Original
PUBLIC	?SetWindowPos_Original@@3P6GHPAUHWND__@@0HHHHI@ZA ; SetWindowPos_Original
PUBLIC	?MoveWindow_Original@@3P6GHPAUHWND__@@HHHHH@ZA	; MoveWindow_Original
PUBLIC	?SetWindowLongW_Original@@3P6GJPAUHWND__@@HJ@ZA	; SetWindowLongW_Original
PUBLIC	?SetWindowLongA_Original@@3P6GJPAUHWND__@@HJ@ZA	; SetWindowLongA_Original
PUBLIC	?GetWindowLongW_Original@@3P6GJPAUHWND__@@H@ZA	; GetWindowLongW_Original
PUBLIC	?GetWindowLongA_Original@@3P6GJPAUHWND__@@H@ZA	; GetWindowLongA_Original
PUBLIC	?SetWindowLongPtrW_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongPtrW_Original
PUBLIC	?SetWindowLongPtrA_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongPtrA_Original
PUBLIC	?GetWindowLongPtrW_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongPtrW_Original
PUBLIC	?GetWindowLongPtrA_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongPtrA_Original
PUBLIC	?AdjustWindowRect_Original@@3P6GHPAUtagRECT@@KH@ZA ; AdjustWindowRect_Original
PUBLIC	?AdjustWindowRectEx_Original@@3P6GHPAUtagRECT@@KHK@ZA ; AdjustWindowRectEx_Original
PUBLIC	?GetSystemMetrics_Original@@3P6GHH@ZA		; GetSystemMetrics_Original
PUBLIC	?GetCursorPos_Original@@3P6GHPAUtagPOINT@@@ZA	; GetCursorPos_Original
PUBLIC	?SetCursorPos_Original@@3P6GHHH@ZA		; SetCursorPos_Original
PUBLIC	?GetCursorInfo_Original@@3P6GHPAUtagCURSORINFO@@@ZA ; GetCursorInfo_Original
PUBLIC	?SendInput_Original@@3P6GIIPAUtagINPUT@@H@ZA	; SendInput_Original
PUBLIC	?mouse_event_Original@@3P6GXKKKKK@ZA		; mouse_event_Original
PUBLIC	?pWindowManager@SK_WindowManager@@0PAV1@A	; SK_WindowManager::pWindowManager
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QB_WB			; ATL::szStringVal
PUBLIC	?multiszStringVal@ATL@@3QB_WB			; ATL::multiszStringVal
PUBLIC	?szDwordVal@ATL@@3QB_WB				; ATL::szDwordVal
PUBLIC	?szBinaryVal@ATL@@3QB_WB			; ATL::szBinaryVal
PUBLIC	?szValToken@ATL@@3QB_WB				; ATL::szValToken
PUBLIC	?szForceRemove@ATL@@3QB_WB			; ATL::szForceRemove
PUBLIC	?szNoRemove@ATL@@3QB_WB				; ATL::szNoRemove
PUBLIC	?szDelete@ATL@@3QB_WB				; ATL::szDelete
_BSS	SEGMENT
?SetWindowPlacement_Original@@3P6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@ZA DD 01H DUP (?) ; SetWindowPlacement_Original
?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA DD 01H DUP (?) ; GetWindowRect_Original
?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA DD 01H DUP (?) ; GetClientRect_Original
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
_BSS	SEGMENT
?RegisterClassA_Original@@3P6GGPBUtagWNDCLASSA@@@ZA DD 01H DUP (?) ; RegisterClassA_Original
?RegisterClassW_Original@@3P6GGPBUtagWNDCLASSW@@@ZA DD 01H DUP (?) ; RegisterClassW_Original
?RegisterClassExA_Original@@3P6GGPBUtagWNDCLASSEXA@@@ZA DD 01H DUP (?) ; RegisterClassExA_Original
?RegisterClassExW_Original@@3P6GGPBUtagWNDCLASSEXW@@@ZA DD 01H DUP (?) ; RegisterClassExW_Original
?CreateWindowExA_Original@@3P6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA DD 01H DUP (?) ; CreateWindowExA_Original
?CreateWindowExW_Original@@3P6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA DD 01H DUP (?) ; CreateWindowExW_Original
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
_BSS	SEGMENT
?TranslateMessage_Original@@3P6GHPBUtagMSG@@@ZA DD 01H DUP (?) ; TranslateMessage_Original
?PeekMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA DD 01H DUP (?) ; PeekMessageW_Original
?PeekMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA DD 01H DUP (?) ; PeekMessageA_Original
?GetMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA DD 01H DUP (?) ; GetMessageA_Original
?GetMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA DD 01H DUP (?) ; GetMessageW_Original
?DispatchMessageW_Original@@3P6GJPBUtagMSG@@@ZA DD 01H DUP (?) ; DispatchMessageW_Original
?DispatchMessageA_Original@@3P6GJPBUtagMSG@@@ZA DD 01H DUP (?) ; DispatchMessageA_Original
?last_message@@3PAUtagMSG@@A DD 01H DUP (?)		; last_message
?hModSteamOverlay@@3PAUHINSTANCE__@@A DD 01H DUP (?)	; hModSteamOverlay
?caught_register@@3_NA DB 01H DUP (?)			; caught_register
	ALIGN	4

?g_hkCallWndProc@@3PAUHHOOK__@@A DD 01H DUP (?)		; g_hkCallWndProc
?game_mouselook@@3KA DD 01H DUP (?)			; game_mouselook
?game_x@@3HA DD	01H DUP (?)				; game_x
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
_BSS	SEGMENT
?game_y@@3HA DD	01H DUP (?)				; game_y
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
_BSS	SEGMENT
?override_window_rects@@3_NA DB 01H DUP (?)		; override_window_rects
	ALIGN	4

?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA DD 01H DUP (?) ; ClipCursor_Original
?SetWindowPos_Original@@3P6GHPAUHWND__@@0HHHHI@ZA DD 01H DUP (?) ; SetWindowPos_Original
?MoveWindow_Original@@3P6GHPAUHWND__@@HHHHH@ZA DD 01H DUP (?) ; MoveWindow_Original
?SetWindowLongW_Original@@3P6GJPAUHWND__@@HJ@ZA DD 01H DUP (?) ; SetWindowLongW_Original
?SetWindowLongA_Original@@3P6GJPAUHWND__@@HJ@ZA DD 01H DUP (?) ; SetWindowLongA_Original
?GetWindowLongW_Original@@3P6GJPAUHWND__@@H@ZA DD 01H DUP (?) ; GetWindowLongW_Original
?GetWindowLongA_Original@@3P6GJPAUHWND__@@H@ZA DD 01H DUP (?) ; GetWindowLongA_Original
?SetWindowLongPtrW_Original@@3P6GJPAUHWND__@@HJ@ZA DD 01H DUP (?) ; SetWindowLongPtrW_Original
?SetWindowLongPtrA_Original@@3P6GJPAUHWND__@@HJ@ZA DD 01H DUP (?) ; SetWindowLongPtrA_Original
?GetWindowLongPtrW_Original@@3P6GJPAUHWND__@@H@ZA DD 01H DUP (?) ; GetWindowLongPtrW_Original
?GetWindowLongPtrA_Original@@3P6GJPAUHWND__@@H@ZA DD 01H DUP (?) ; GetWindowLongPtrA_Original
?AdjustWindowRect_Original@@3P6GHPAUtagRECT@@KH@ZA DD 01H DUP (?) ; AdjustWindowRect_Original
?AdjustWindowRectEx_Original@@3P6GHPAUtagRECT@@KHK@ZA DD 01H DUP (?) ; AdjustWindowRectEx_Original
?GetSystemMetrics_Original@@3P6GHH@ZA DD 01H DUP (?)	; GetSystemMetrics_Original
?GetCursorPos_Original@@3P6GHPAUtagPOINT@@@ZA DD 01H DUP (?) ; GetCursorPos_Original
?SetCursorPos_Original@@3P6GHHH@ZA DD 01H DUP (?)	; SetCursorPos_Original
?GetCursorInfo_Original@@3P6GHPAUtagCURSORINFO@@@ZA DD 01H DUP (?) ; GetCursorInfo_Original
?SendInput_Original@@3P6GIIPAUtagINPUT@@H@ZA DD 01H DUP (?) ; SendInput_Original
?mouse_event_Original@@3P6GXKKKKK@ZA DD 01H DUP (?)	; mouse_event_Original
?pWindowManager@SK_WindowManager@@0PAV1@A DD 01H DUP (?) ; SK_WindowManager::pWindowManager
_BSS	ENDS
;	COMDAT ?szDelete@ATL@@3QB_WB
CONST	SEGMENT
?szDelete@ATL@@3QB_WB DD FLAT:$SG181226			; ATL::szDelete
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QB_WB
CONST	SEGMENT
?szNoRemove@ATL@@3QB_WB DD FLAT:$SG181224		; ATL::szNoRemove
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QB_WB
CONST	SEGMENT
?szForceRemove@ATL@@3QB_WB DD FLAT:$SG181222		; ATL::szForceRemove
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QB_WB
CONST	SEGMENT
?szValToken@ATL@@3QB_WB DD FLAT:$SG181220		; ATL::szValToken
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QB_WB
CONST	SEGMENT
?szBinaryVal@ATL@@3QB_WB DD FLAT:$SG181218		; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QB_WB
CONST	SEGMENT
?szDwordVal@ATL@@3QB_WB DD FLAT:$SG181216		; ATL::szDwordVal
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QB_WB
CONST	SEGMENT
?multiszStringVal@ATL@@3QB_WB DD FLAT:$SG181214		; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QB_WB
CONST	SEGMENT
?szStringVal@ATL@@3QB_WB DD FLAT:$SG181212		; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
CONST	SEGMENT
$SG211985 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, '(', 00H, ' ', 00H
	DB	'{', 00H, '%', 00H, '4', 00H, 'l', 00H, 'i', 00H, ',', 00H, '%'
	DB	00H, '4', 00H, 'l', 00H, 'i', 00H, ' ', 00H, '/', 00H, ' ', 00H
	DB	'%', 00H, '4', 00H, 'l', 00H, 'i', 00H, ',', 00H, '%', 00H, '4'
	DB	00H, 'l', 00H, 'i', 00H, '}', 00H, ',', 00H, ' ', 00H, '0', 00H
	DB	'x', 00H, '%', 00H, '0', 00H, '4', 00H, 'X', 00H, ',', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 'i', 00H, ' ', 00H, ')', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG212004 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H, 'x', 00H, ' ', 00H
	DB	'(', 00H, ' ', 00H, '{', 00H, '%', 00H, '4', 00H, 'l', 00H, 'i'
	DB	00H, ',', 00H, '%', 00H, '4', 00H, 'l', 00H, 'i', 00H, ' ', 00H
	DB	'/', 00H, ' ', 00H, '%', 00H, '4', 00H, 'l', 00H, 'i', 00H, ','
	DB	00H, '%', 00H, '4', 00H, 'l', 00H, 'i', 00H, '}', 00H, ',', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, '0', 00H, '4', 00H, 'X'
	DB	00H, ',', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'i', 00H, ',', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, '%', 00H, '0', 00H, '4', 00H, 'X'
	DB	00H, ' ', 00H, ')', 00H, ' ', 00H, '-', 00H, ' ', 00H, '%', 00H
	DB	's', 00H, 00H, 00H
$SG170027 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm'
	DB	00H, 'p', 00H, 'l', 00H, 00H, 00H
$SG212043 DB	'SetWindowLongA_Detour', 00H
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
	ORG $+5
$SG212044 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212054 DB	'SetWindowLongW_Detour', 00H
	ORG $+2
$SG170121 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG212055 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG170074 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG212076 DB	'GetWindowLongA_Detour', 00H
	ORG $+2
$SG212118 DB	'SetWindowLongPtrA_Detour', 00H
	ORG $+3
$SG212077 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212086 DB	'GetWindowLongW_Detour', 00H
	ORG $+2
$SG212129 DB	'SetWindowLongPtrW_Detour', 00H
	ORG $+3
$SG212087 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212149 DB	'GetWindowLongPtrA_Detour', 00H
	ORG $+3
$SG212119 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG170168 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG212130 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212159 DB	'GetWindowLongPtrW_Detour', 00H
	ORG $+3
$SG281765 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'N', 00H, 'e', 00H, 'w', 00H, ' ', 00H, 'H', 00H, 'W', 00H
	DB	'N', 00H, 'D', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'p', 00H, 'r', 00H, 'o', 00H, 'c', 00H, '.', 00H, ' ', 00H, 'u'
	DB	00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, '.', 00H
	DB	'.', 00H, ' ', 00H, '(', 00H, 'O', 00H, 'l', 00H, 'd', 00H, '='
	DB	00H, '%', 00H, 'p', 00H, ',', 00H, ' ', 00H, 'N', 00H, 'e', 00H
	DB	'w', 00H, '=', 00H, '%', 00H, 'p', 00H, ')', 00H, 00H, 00H
$SG281803 DB	'U', 00H, 'N', 00H, 'K', 00H, 'K', 00H, 'N', 00H, 'O', 00H
	DB	'W', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG212150 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG281805 DB	'(', 00H, 'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'C', 00H
	DB	'T', 00H, 'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E', 00H, ' '
	DB	00H, '[', 00H, ' ', 00H, 'W', 00H, 'A', 00H, '_', 00H, 'A', 00H
	DB	'C', 00H, 'T', 00H, 'I', 00H, 'V', 00H, 'E', 00H, ' ', 00H, ']'
	DB	00H, ')', 00H, 00H, 00H
$SG281808 DB	'(', 00H, 'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'C', 00H
	DB	'T', 00H, 'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E', 00H, ' '
	DB	00H, '[', 00H, ' ', 00H, 'W', 00H, 'A', 00H, '_', 00H, 'I', 00H
	DB	'N', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V', 00H, 'E'
	DB	00H, ' ', 00H, ']', 00H, ')', 00H, 00H, 00H
$SG281785 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	'>', 00H, ' ', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 'E', 00H, 'a', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG281788 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, ' ', 00H, '(', 00H, 'O', 00H
	DB	't', 00H, 'h', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ')', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, '>', 00H, ' ', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
$SG170215 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e'
	DB	00H, 00H, 00H
$SG212160 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212227 DB	'SK_AdjustBorder', 00H
$SG212228 DB	'Window Mgr', 00H
	ORG $+1
$SG281797 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'A'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, '(', 00H, 'N', 00H, 'o', 00H, 'n'
	DB	00H, '-', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ')', 00H, 00H, 00H
$SG281800 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'D'
	DB	00H, 'e', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '(', 00H, 'N'
	DB	00H, 'o', 00H, 'n', 00H, '-', 00H, 'C', 00H, 'l', 00H, 'i', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ')', 00H, 00H, 00H
$SG281976 DB	'TranslateMessage', 00H
	ORG $+3
$SG281806 DB	'(', 00H, 'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'C', 00H
	DB	'T', 00H, 'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E', 00H, ' '
	DB	00H, '[', 00H, ' ', 00H, 'W', 00H, 'A', 00H, '_', 00H, 'C', 00H
	DB	'L', 00H, 'I', 00H, 'C', 00H, 'K', 00H, 'A', 00H, 'C', 00H, 'T'
	DB	00H, 'I', 00H, 'V', 00H, 'E', 00H, ' ', 00H, ']', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG212229 DB	'[', 00H, '%', 00H, 'h', 00H, 's', 00H, ']', 00H, '[', 00H
	DB	'!', 00H, ']', 00H, ' ', 00H, '%', 00H, '3', 00H, '2', 00H, 'h'
	DB	00H, 's', 00H, ' ', 00H, '-', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
$SG170361 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG281812 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'D'
	DB	00H, 'e', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '%', 00H, 's'
	DB	00H, 00H, 00H
$SG281816 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'A'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG281863 DB	'e', 00H, 'q', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'.', 00H, 'e', 00H, 'x', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG170262 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG170309 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG281967 DB	'DefWindowProcW', 00H
	ORG $+1
$SG281968 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281969 DB	'CallWindowProcW', 00H
$SG281970 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281972 DB	'DefWindowProcA', 00H
	ORG $+1
$SG170356 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H
$SG281973 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281974 DB	'CallWindowProcA', 00H
$SG281975 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281977 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281978 DB	'PeekMessageW', 00H
	ORG $+3
$SG281979 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281980 DB	'PeekMessageA', 00H
	ORG $+3
$SG281981 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281982 DB	'GetMessageW', 00H
$SG281983 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281984 DB	'DispatchMessageW', 00H
	ORG $+3
$SG281985 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281986 DB	'GetMessageA', 00H
$SG281987 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281988 DB	'DispatchMessageA', 00H
	ORG $+3
$SG281989 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG281991 DB	'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 00H, 00H
$SG281992 DB	'A', 00H, 'N', 00H, 'S', 00H, 'I', 00H, 00H, 00H
	ORG $+2
$SG281993 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, 'e', 00H, 'd', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '%', 00H, 's', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'C', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, ' ', 00H, '(', 00H, '''', 00H, '%'
	DB	00H, 's', 00H, '''', 00H, ')', 00H, ' ', 00H, ':', 00H, ':', 00H
	DB	' ', 00H, '(', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, ':', 00H, ' ', 00H
	DB	'%', 00H, 'p', 00H, ',', 00H, ' ', 00H, 'W', 00H, 'n', 00H, 'd'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, ':', 00H, ' ', 00H
	DB	'%', 00H, 'p', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG282010 DB	'Cursor.Timeout', 00H
	ORG $+1
$SG282011 DB	'Cursor.KeysActivate', 00H
$SG281998 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '>', 00H, '>', 00H, ' ', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'C', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'c', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG282000 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '>', 00H, '>', 00H, ' ', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'W', 00H, 'n'
	DB	00H, 'd', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, '.', 00H
	DB	00H, 00H
	ORG $+2
$SG282009 DB	'Cursor.Manage', 00H
	ORG $+2
$SG282012 DB	'Window.BackgroundRender', 00H
$SG282013 DB	'ImGui.Visible', 00H
	ORG $+2
$SG170408 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG212406 DB	'SK_AdjustWindow', 00H
$SG212407 DB	'Window Mgr', 00H
	ORG $+1
$SG212408 DB	'[', 00H, '%', 00H, 'h', 00H, 's', 00H, ']', 00H, '[', 00H
	DB	'!', 00H, ']', 00H, ' ', 00H, '%', 00H, '3', 00H, '2', 00H, 'h'
	DB	00H, 's', 00H, ' ', 00H, '-', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
$SG282042 DB	'RegisterClassA_Detour', 00H
	ORG $+2
$SG282066 DB	'RegisterClassExA_Detour', 00H
$SG170455 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H
	DB	00H
	ORG $+2
$SG282043 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG282078 DB	'RegisterClassExW_Detour', 00H
$SG212458 DB	'N', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG212414 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, 'S', 00H, 'K', 00H, '_', 00H
	DB	'A', 00H, 'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'(', 00H, 'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 's', 00H, 'c'
	DB	00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG212464 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG212416 DB	'[', 00H, 'B', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 'S', 00H, 'C', 00H
	DB	'R', 00H, 'E', 00H, 'E', 00H, 'N', 00H, ' ', 00H, '=', 00H, '>'
	DB	00H, ' ', 00H, '{', 00H, 'L', 00H, 'e', 00H, 'f', 00H, 't', 00H
	DB	':', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'i', 00H, ',', 00H, ' '
	DB	00H, 'T', 00H, 'o', 00H, 'p', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'l', 00H, 'i', 00H, '}', 00H, ' ', 00H, '-', 00H, ' ', 00H, '('
	DB	00H, 'W', 00H, 'x', 00H, 'H', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'l', 00H, 'i', 00H, 'x', 00H, '%', 00H, 'l', 00H, 'i', 00H, ')'
	DB	00H, 00H, 00H
$SG212465 DB	' ', 00H, 'I', 00H, 'N', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG212418 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, 'S', 00H, 'K', 00H, '_', 00H
	DB	'A', 00H, 'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'(', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'e', 00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG282054 DB	'RegisterClassW_Detour', 00H
	ORG $+2
$SG282055 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212470 DB	'O', 00H, 'U', 00H, 'T', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG282067 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212482 DB	'GetSystemMetrics_Detour', 00H
$SG170502 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, 00H, 00H
$SG212438 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'C', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, '-', 00H, '-', 00H, '>', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'l', 00H, 'i', 00H, ',', 00H, '%', 00H, 'l', 00H, 'i', 00H
	DB	')', 00H, 00H, 00H
$SG212493 DB	'SK_GetSystemMetrics', 00H
$SG282079 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG169486 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG211483 DB	'U', 00H, 'N', 00H, 'K', 00H, 'K', 00H, 'N', 00H, 'O', 00H
	DB	'W', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG211423 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	'>', 00H, ' ', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 'E', 00H, 'a', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG211427 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, ' ', 00H, '(', 00H, 'O', 00H
	DB	't', 00H, 'h', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ')', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, '>', 00H, ' ', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
$SG211488 DB	'(', 00H, 'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'C', 00H
	DB	'T', 00H, 'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E', 00H, ' '
	DB	00H, '[', 00H, ' ', 00H, 'W', 00H, 'A', 00H, '_', 00H, 'I', 00H
	DB	'N', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V', 00H, 'E'
	DB	00H, ' ', 00H, ']', 00H, ')', 00H, 00H, 00H
$SG212456 DB	'(', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'i', 00H, 'p'
	DB	00H, 'x', 00H, ' ', 00H, 'x', 00H, ' ', 00H, '%', 00H, 'l', 00H
	DB	'i', 00H, 'p', 00H, 'x', 00H, ',', 00H, ' ', 00H, 'T', 00H, 'i'
	DB	00H, 't', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'%', 00H, 'l', 00H, 'i', 00H, 'p', 00H, 'x', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG212459 DB	'[', 00H, 'B', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'W', 00H, 'I', 00H, 'N', 00H, 'D', 00H, 'O', 00H, 'W', 00H
	DB	' ', 00H, '=', 00H, '>', 00H, ' ', 00H, '{', 00H, 'L', 00H, 'e'
	DB	00H, 'f', 00H, 't', 00H, ':', 00H, ' ', 00H, '%', 00H, 'l', 00H
	DB	'i', 00H, ',', 00H, ' ', 00H, 'T', 00H, 'o', 00H, 'p', 00H, ':'
	DB	00H, ' ', 00H, '%', 00H, 'l', 00H, 'i', 00H, '}', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '(', 00H, 'W', 00H, 'x', 00H, 'H', 00H, ':'
	DB	00H, ' ', 00H, '%', 00H, 'l', 00H, 'i', 00H, 'x', 00H, '%', 00H
	DB	'l', 00H, 'i', 00H, ')', 00H, ' ', 00H, '-', 00H, ' ', 00H, '{'
	DB	00H, ' ', 00H, 'B', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H, ' ', 00H, '}'
	DB	00H, 00H, 00H
	ORG $+2
$SG211441 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'A'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, '(', 00H, 'N', 00H, 'o', 00H, 'n'
	DB	00H, '-', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ')', 00H, 00H, 00H
$SG211444 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'D'
	DB	00H, 'e', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '(', 00H, 'N'
	DB	00H, 'o', 00H, 'n', 00H, '-', 00H, 'C', 00H, 'l', 00H, 'i', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ')', 00H, 00H, 00H
$SG211547 DB	'S', 00H, 'K', 00H, 'I', 00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG212469 DB	'[', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'N', 00H, 'e', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 't', 00H
	DB	'o', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's'
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, ' ', 00H, 'o', 00H
	DB	'r', 00H, 'i', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'c', 00H, 'l', 00H, 'i', 00H, 'p', 00H, ' ', 00H
	DB	'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, 00H, 00H
	ORG $+2
$SG211485 DB	'(', 00H, 'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'C', 00H
	DB	'T', 00H, 'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E', 00H, ' '
	DB	00H, '[', 00H, ' ', 00H, 'W', 00H, 'A', 00H, '_', 00H, 'A', 00H
	DB	'C', 00H, 'T', 00H, 'I', 00H, 'V', 00H, 'E', 00H, ' ', 00H, ']'
	DB	00H, ')', 00H, 00H, 00H
$SG212574 DB	'PeekMessageW_Detour', 00H
$SG211458 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'A'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, '(', 00H, 'N', 00H, 'o', 00H, 'n'
	DB	00H, '-', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ')', 00H, 00H, 00H
$SG212483 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG169557 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H
$SG212597 DB	'PeekMessageA_Detour', 00H
$SG282117 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '>', 00H, '>', 00H, ' ', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'C', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'c', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG212485 DB	'[', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ']', 00H, ' '
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'S', 00H, 'y', 00H, 's', 00H
	DB	't', 00H, 'e', 00H, 'm', 00H, 'M', 00H, 'e', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'c', 00H, 's', 00H, ' ', 00H, '(', 00H, '%', 00H
	DB	'4', 00H, 'l', 00H, 'i', 00H, ')', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, '-', 00H, '5', 00H, 'l', 00H, 'i', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG282230 DB	'SetWindowPlacement', 00H
	ORG $+1
$SG211461 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'D'
	DB	00H, 'e', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '(', 00H, 'N'
	DB	00H, 'o', 00H, 'n', 00H, '-', 00H, 'C', 00H, 'l', 00H, 'i', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ')', 00H, 00H, 00H
$SG282232 DB	'MoveWindow', 00H
	ORG $+1
$SG282119 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '>', 00H, '>', 00H, ' ', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'W', 00H, 'n'
	DB	00H, 'd', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, '.', 00H
	DB	00H, 00H
	ORG $+2
$SG212570 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG282234 DB	'ClipCursor', 00H
	ORG $+1
$SG212494 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212593 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG212618 DB	'GetMessageA_Detour', 00H
	ORG $+1
$SG211486 DB	'(', 00H, 'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'C', 00H
	DB	'T', 00H, 'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E', 00H, ' '
	DB	00H, '[', 00H, ' ', 00H, 'W', 00H, 'A', 00H, '_', 00H, 'C', 00H
	DB	'L', 00H, 'I', 00H, 'C', 00H, 'K', 00H, 'A', 00H, 'C', 00H, 'T'
	DB	00H, 'I', 00H, 'V', 00H, 'E', 00H, ' ', 00H, ']', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG282236 DB	'CreateWindowExW', 00H
$SG282252 DB	'AdjustWindowRect', 00H
	ORG $+3
$SG211492 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'D'
	DB	00H, 'e', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '%', 00H, 's'
	DB	00H, 00H, 00H
$SG211496 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'A'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG282254 DB	'AdjustWindowRectEx', 00H
	ORG $+1
$SG212575 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG282228 DB	'SetWindowPos', 00H
	ORG $+3
$SG282229 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282238 DB	'CreateWindowExA', 00H
$SG181902 DB	'A', 00H, 'p', 00H, 'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG212598 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG282231 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282233 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282235 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282237 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282239 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282240 DB	'SetWindowLongA', 00H
	ORG $+1
$SG282241 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282242 DB	'SetWindowLongW', 00H
	ORG $+1
$SG282243 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282244 DB	'GetWindowLongA', 00H
	ORG $+1
$SG169604 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H
	ORG $+2
$SG282245 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282246 DB	'GetWindowLongW', 00H
	ORG $+1
$SG212614 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG282247 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282248 DB	'GetWindowRect', 00H
	ORG $+2
$SG282249 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282250 DB	'GetClientRect', 00H
	ORG $+2
$SG282251 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG181903 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG212619 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG282253 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282255 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG282256 DB	'GetSystemMetrics', 00H
	ORG $+3
$SG181904 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG282257 DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '3', 00H, '2', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG181905 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG181906 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG181907 DB	'H', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG181908 DB	'M', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG181909 DB	'S', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG181910 DB	'S', 00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H
	DB	'T', 00H, 'Y', 00H, 00H, 00H
	ORG $+2
$SG212631 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG181911 DB	'S', 00H, 'Y', 00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H
	DB	00H, 00H
	ORG $+2
$SG181912 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG181913 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 00H, 00H
$SG212635 DB	'GetMessageW_Detour', 00H
	ORG $+1
$SG212636 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212646 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG212650 DB	'DispatchMessageW_Detour', 00H
$SG169651 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H
$SG212651 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG212661 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG212665 DB	'DispatchMessageA_Detour', 00H
$SG169698 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG212666 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG169745 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG211730 DB	'ClipCursor_Detour', 00H
	ORG $+2
$SG169792 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG211731 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG169839 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG169886 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG211886 DB	'MoveWindow_Detour', 00H
	ORG $+2
$SG211896 DB	'SetWindowPlacement_Detour', 00H
	ORG $+2
$SG211887 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG211897 DB	'Window Mgr', 00H
	ORG $+1
$SG211898 DB	'[', 00H, '%', 00H, 'h', 00H, 's', 00H, ']', 00H, '[', 00H
	DB	'!', 00H, ']', 00H, ' ', 00H, '%', 00H, '3', 00H, '2', 00H, 'h'
	DB	00H, 's', 00H, ' ', 00H, '-', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
$SG169933 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG211919 DB	'SetWindowPos_Detour', 00H
$SG211923 DB	'SetWindowPos_Detour', 00H
$SG211920 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG211924 DB	'Window Mgr', 00H
	ORG $+1
$SG211925 DB	'[', 00H, '%', 00H, 'h', 00H, 's', 00H, ']', 00H, '[', 00H
	DB	'!', 00H, ']', 00H, ' ', 00H, '%', 00H, '3', 00H, '2', 00H, 'h'
	DB	00H, 's', 00H, ' ', 00H, '-', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
$SG181212 DB	'S', 00H, 00H, 00H
$SG181214 DB	'M', 00H, 00H, 00H
$SG181216 DB	'D', 00H, 00H, 00H
$SG181218 DB	'B', 00H, 00H, 00H
$SG211939 DB	'GetClientRect_Detour', 00H
	ORG $+3
$SG211940 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG181220 DB	'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG181222 DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG181224 DB	'N', 00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG181226 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG211953 DB	'GetWindowRect_Detour', 00H
	ORG $+3
$SG211954 DB	'[', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '[', 00H, '!', 00H, ']', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'3', 00H, '4', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG169980 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	_ReadAcquire
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	?SK_HookWinAPI@@YAXXZ				; SK_HookWinAPI
PUBLIC	?SK_InstallWindowHook@@YAXPAUHWND__@@@Z		; SK_InstallWindowHook
PUBLIC	?SK_InitWindow@@YAXPAUHWND__@@_N@Z		; SK_InitWindow
PUBLIC	?SK_AdjustWindow@@YAXXZ				; SK_AdjustWindow
PUBLIC	?SK_AdjustBorder@@YAXXZ				; SK_AdjustBorder
PUBLIC	?SK_CenterWindowAtMouse@@YAXH@Z			; SK_CenterWindowAtMouse
PUBLIC	?SK_SetWindowResX@@YAXJ@Z			; SK_SetWindowResX
PUBLIC	?SK_SetWindowResY@@YAXJ@Z			; SK_SetWindowResY
PUBLIC	?SK_GetSystemMetrics@@YGHH@Z			; SK_GetSystemMetrics
PUBLIC	?SK_GetGameRect@@YAPAUtagRECT@@XZ		; SK_GetGameRect
PUBLIC	?SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z	; SK_RealizeForegroundWindow
PUBLIC	?SK_GetGameWindow@@YGPAUHWND__@@XZ		; SK_GetGameWindow
PUBLIC	??0<unnamed-type-border>@sk_window_s@@QAE@XZ	; sk_window_s::<unnamed-type-border>::<unnamed-type-border>
PUBLIC	??0<unnamed-type-framebuffer>@<unnamed-type-game>@sk_window_s@@QAE@XZ ; sk_window_s::<unnamed-type-game>::<unnamed-type-framebuffer>::<unnamed-type-framebuffer>
PUBLIC	??0<unnamed-type-game>@sk_window_s@@QAE@XZ	; sk_window_s::<unnamed-type-game>::<unnamed-type-game>
PUBLIC	??0<unnamed-type-scale>@<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ ; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-scale>::<unnamed-type-scale>
PUBLIC	??0<unnamed-type-offset>@<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ ; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-offset>::<unnamed-type-offset>
PUBLIC	??0<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ ; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-coord_remap>
PUBLIC	?needsCoordTransform@sk_window_s@@QAE_NXZ	; sk_window_s::needsCoordTransform
PUBLIC	?updateDims@sk_window_s@@QAEXXZ			; sk_window_s::updateDims
PUBLIC	?DefProc@sk_window_s@@QAEJIIJ@Z			; sk_window_s::DefProc
PUBLIC	?CallProc@sk_window_s@@QAEJPAUHWND__@@IIJ@Z	; sk_window_s::CallProc
PUBLIC	??0sk_window_s@@QAE@XZ				; sk_window_s::sk_window_s
PUBLIC	?SK_FindRootWindow@@YA?AUwindow_t@@K@Z		; SK_FindRootWindow
PUBLIC	?_Hash_seq@std@@YAIPBEI@Z			; std::_Hash_seq
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ ; std::_Iterator_base0::_Getcont
PUBLIC	?min@?$numeric_limits@J@std@@SAJXZ		; std::numeric_limits<long>::min
PUBLIC	?max@?$numeric_limits@J@std@@SAJXZ		; std::numeric_limits<long>::max
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?isVisible@SK_Console@@QAE_NXZ			; SK_Console::isVisible
PUBLIC	??0?$tuple@$$V@std@@QAE@XZ			; std::tuple<>::tuple<>
PUBLIC	??0?$tuple@$$V@std@@QAE@ABV01@@Z		; std::tuple<>::tuple<>
PUBLIC	??1SK_ICommandResult@@QAE@XZ			; SK_ICommandResult::~SK_ICommandResult
PUBLIC	??0SK_IVariableListener@@QAE@XZ			; SK_IVariableListener::SK_IVariableListener
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Init@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QAEXXZ			; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QAEXXZ			; ATL::CAtlWinModule::Term
PUBLIC	?isZero@<unnamed-type-offset>@<unnamed-type-window>@sk_config_t@@QAE_NXZ ; sk_config_t::<unnamed-type-window>::<unnamed-type-offset>::isZero
PUBLIC	?isZero@<unnamed-type-override>@<unnamed-type-res>@<unnamed-type-window>@sk_config_t@@QAE_NXZ ; sk_config_t::<unnamed-type-window>::<unnamed-type-res>::<unnamed-type-override>::isZero
PUBLIC	??0<unnamed-type-last_mouse>@@QAE@XZ		; <unnamed-type-last_mouse>::<unnamed-type-last_mouse>
PUBLIC	?SetWindowPlacement_Detour@@YGHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z ; SetWindowPlacement_Detour
PUBLIC	?SetWindowPos_Detour@@YGHPAUHWND__@@0HHHHI@Z	; SetWindowPos_Detour
PUBLIC	?ProcessMessage@window_message_dispatch_s@@QAE_NPAUHWND__@@IAAIAAJPAJ@Z ; window_message_dispatch_s::ProcessMessage
PUBLIC	??0?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QAE@U?$hash@PAUHWND__@@@1@U?$equal_to@PAUHWND__@@@1@@Z ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >
PUBLIC	??R?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEIABQAUHWND__@@@Z ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::operator()
PUBLIC	??R?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBE_NABQAUHWND__@@0@Z ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::operator()
PUBLIC	?_Gethash@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABU?$hash@PAUHWND__@@@2@XZ ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Gethash
PUBLIC	?_Getkeyeq@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABU?$equal_to@PAUHWND__@@@2@XZ ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Getkeyeq
PUBLIC	?_Get_max_bucket_size@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QAEAAMXZ ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Get_max_bucket_size
PUBLIC	?_Get_max_bucket_size@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABMXZ ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Get_max_bucket_size
PUBLIC	??R?$equal_to@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::equal_to<HWND__ *>::operator()
PUBLIC	??R?$_Bitwise_hash@PAUHWND__@@@std@@QBEIABQAUHWND__@@@Z ; std::_Bitwise_hash<HWND__ *>::operator()
PUBLIC	?_Get_first@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QBEABU?$equal_to@PAUHWND__@@@2@XZ ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QAEAAMXZ ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QBEABMXZ ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_second
PUBLIC	?_Get_first@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QBEABU?$hash@PAUHWND__@@@2@XZ ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@XZ ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@XZ ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_second
PUBLIC	??0?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@@Z ; std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>
PUBLIC	??0?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@QAE@XZ ; std::allocator<std::pair<HWND__ * const,bool> >::allocator<std::pair<HWND__ * const,bool> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::max_size
PUBLIC	?_Nextnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Prevnode
PUBLIC	?_Myval@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAU?$pair@QAUHWND__@@_N@2@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Myval
PUBLIC	??1?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::~_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >
PUBLIC	?_Buyheadnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Getal
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Getal
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Get_data
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Get_data
PUBLIC	?_Myhead@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Myhead
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Mysize
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABIXZ ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Mysize
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAU?$pair@QAUHWND__@@_N@2@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Myval
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_second
PUBLIC	?_Freenode@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Freenode
PUBLIC	??1?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::~_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >
PUBLIC	??0?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >
PUBLIC	??1?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::~list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >
PUBLIC	?begin@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::begin
PUBLIC	?end@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::end
PUBLIC	?_Unchecked_begin@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Make_iter
PUBLIC	?_Make_iter@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Make_iter
PUBLIC	?size@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBEIXZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::size
PUBLIC	?max_size@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBEIXZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::max_size
PUBLIC	?front@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEAAU?$pair@QAUHWND__@@_N@2@XZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::front
PUBLIC	?_Unlinknode@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unlinknode
PUBLIC	?erase@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::erase
PUBLIC	?clear@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXXZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::clear
PUBLIC	?_Unchecked_splice@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_splice
PUBLIC	?_Tidy@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXXZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Tidy
PUBLIC	?_Incsize@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXI@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Incsize
PUBLIC	??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
PUBLIC	??1?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::~_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
PUBLIC	?end@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::end
PUBLIC	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Unchecked_end
PUBLIC	?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Make_iter
PUBLIC	?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Make_iter
PUBLIC	?size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::size
PUBLIC	?bucket_count@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::bucket_count
PUBLIC	?load_factor@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::load_factor
PUBLIC	?max_load_factor@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::max_load_factor
PUBLIC	?erase@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::erase
PUBLIC	?find@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::find
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
PUBLIC	?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Destroy_if_not_nil
PUBLIC	?_Vec_lo@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Vec_lo
PUBLIC	?_Vec_hi@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Vec_hi
PUBLIC	?_Begin@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Begin
PUBLIC	?_End@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_End
PUBLIC	?_Erase_bucket@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Erase_bucket
PUBLIC	?_Insert_bucket@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@0I@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert_bucket
PUBLIC	?_Hashval@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IBEIABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hashval
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Init
PUBLIC	?_Check_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Check_size
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Reinsert
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Max_bucket_size
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IBEABMXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Max_bucket_size
PUBLIC	??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::deallocate
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocate
PUBLIC	?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU01@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::max_size
PUBLIC	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_second
PUBLIC	??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
PUBLIC	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
PUBLIC	?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::assign
PUBLIC	?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Reallocate_exactly
PUBLIC	?reserve@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::reserve
PUBLIC	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::size
PUBLIC	?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size
PUBLIC	?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::capacity
PUBLIC	??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@I@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::operator[]
PUBLIC	?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@PAV32@IABV32@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Ufill
PUBLIC	?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@ABEII@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Calculate_growth
PUBLIC	?_Buy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAE_NI@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Buy
PUBLIC	?_Change_array@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@II@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Change_array
PUBLIC	?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Xlength
PUBLIC	??0?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >
PUBLIC	??A?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAEAA_NABQAUHWND__@@@Z ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::operator[]
PUBLIC	??1?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::~unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >
PUBLIC	??0?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@@Z ; std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>
PUBLIC	?_Kfn@?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@SAABQAUHWND__@@ABQAU3@@Z ; std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>::_Kfn
PUBLIC	??0?$allocator@PAUHWND__@@@std@@QAE@XZ		; std::allocator<HWND__ *>::allocator<HWND__ *>
PUBLIC	?deallocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ; std::allocator<std::_List_node<HWND__ *,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ; std::allocator<std::_List_node<HWND__ *,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<HWND__ *,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::max_size
PUBLIC	?_Nextnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Prevnode
PUBLIC	?_Myval@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAUHWND__@@PAU?$_List_node@PAUHWND__@@PAX@2@@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myval
PUBLIC	??1?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >
PUBLIC	?_Buyheadnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@XZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Get_data
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Get_data
PUBLIC	?_Myhead@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAPAU?$_List_node@PAUHWND__@@PAX@2@XZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myhead
PUBLIC	?_Myhead@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABQAU?$_List_node@PAUHWND__@@PAX@2@XZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myhead
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Mysize
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABIXZ ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Mysize
PUBLIC	??0?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<HWND__ *> >::_List_val<std::_List_simple_types<HWND__ *> >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAUHWND__@@PAU?$_List_node@PAUHWND__@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Myval
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_second
PUBLIC	?_Freenode@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@@Z ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Freenode
PUBLIC	??1?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::~_List_buy<HWND__ *,std::allocator<HWND__ *> >
PUBLIC	??0?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::list<HWND__ *,std::allocator<HWND__ *> >
PUBLIC	??1?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::~list<HWND__ *,std::allocator<HWND__ *> >
PUBLIC	?begin@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::begin
PUBLIC	?end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::end
PUBLIC	?end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::end
PUBLIC	?_Unchecked_begin@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_end
PUBLIC	?_Unchecked_end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Make_iter
PUBLIC	?_Make_iter@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Make_iter
PUBLIC	?size@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::size
PUBLIC	?max_size@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::max_size
PUBLIC	?front@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::front
PUBLIC	?_Unlinknode@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unlinknode
PUBLIC	?erase@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::erase
PUBLIC	?clear@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXXZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::clear
PUBLIC	?_Unchecked_splice@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_splice
PUBLIC	?_Tidy@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXXZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Tidy
PUBLIC	?_Incsize@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXI@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Incsize
PUBLIC	??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
PUBLIC	??1?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::~_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
PUBLIC	?begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::begin
PUBLIC	?end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::end
PUBLIC	?end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::end
PUBLIC	?_Unchecked_begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_end
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_end
PUBLIC	?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Make_iter
PUBLIC	?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Make_iter
PUBLIC	?size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::size
PUBLIC	?bucket_count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::bucket_count
PUBLIC	?load_factor@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::load_factor
PUBLIC	?max_load_factor@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::max_load_factor
PUBLIC	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
PUBLIC	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
PUBLIC	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEIABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
PUBLIC	?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::clear
PUBLIC	?count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::count
PUBLIC	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
PUBLIC	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Destroy_if_not_nil
PUBLIC	?_Vec_lo@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_lo
PUBLIC	?_Vec_lo@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_lo
PUBLIC	?_Vec_hi@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_hi
PUBLIC	?_Vec_hi@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_hi
PUBLIC	?_Begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Begin
PUBLIC	?_Begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Begin
PUBLIC	?_End@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_End
PUBLIC	?_End@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_End
PUBLIC	?_Erase_bucket@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Erase_bucket
PUBLIC	?_Insert_bucket@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@0I@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert_bucket
PUBLIC	?_Hashval@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEIABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hashval
PUBLIC	?_Init@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Init
PUBLIC	?_Check_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Check_size
PUBLIC	?_Reinsert@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Reinsert
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Max_bucket_size
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABMXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Max_bucket_size
PUBLIC	??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::deallocate
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocate
PUBLIC	?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABU01@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::max_size
PUBLIC	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_second
PUBLIC	??0?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
PUBLIC	??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::~vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
PUBLIC	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::assign
PUBLIC	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
PUBLIC	?reserve@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::reserve
PUBLIC	?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::size
PUBLIC	?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::capacity
PUBLIC	??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@I@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::operator[]
PUBLIC	??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@I@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::operator[]
PUBLIC	?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@PAV32@IABV32@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Ufill
PUBLIC	?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@ABEII@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Calculate_growth
PUBLIC	?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Buy
PUBLIC	?_Change_array@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@II@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Change_array
PUBLIC	?_Tidy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Xlength
PUBLIC	??0?$unordered_set@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ ; std::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >
PUBLIC	??1?$unordered_set@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ ; std::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >::~unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >
PUBLIC	?On_WINDOWPOSCHANGING@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_WINDOWPOSCHANGING
PUBLIC	?On_WINDOWPOSCHANGED@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_WINDOWPOSCHANGED
PUBLIC	?On_MOUSEACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_MOUSEACTIVATE
PUBLIC	?On_ACTIVATEAPP@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_ACTIVATEAPP
PUBLIC	?On_ACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_ACTIVATE
PUBLIC	?On_NCACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_NCACTIVATE
PUBLIC	?On_MOUSEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_MOUSEMOVE
PUBLIC	?On_ENTERSIZEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_ENTERSIZEMOVE
PUBLIC	?On_EXITSIZEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_EXITSIZEMOVE
PUBLIC	??0window_message_dispatch_s@@QAE@XZ		; window_message_dispatch_s::window_message_dispatch_s
PUBLIC	??1window_message_dispatch_s@@QAE@XZ		; window_message_dispatch_s::~window_message_dispatch_s
PUBLIC	?StyleHasBorder@SK_WindowManager@@SA_NK@Z	; SK_WindowManager::StyleHasBorder
PUBLIC	?OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z ; SK_WindowManager::OnVarChange
PUBLIC	??0SK_WindowManager@@QAE@XZ			; SK_WindowManager::SK_WindowManager
PUBLIC	?getInstance@SK_WindowManager@@SAPAV1@XZ	; SK_WindowManager::getInstance
PUBLIC	?muteGame@SK_WindowManager@@QAEX_N@Z		; SK_WindowManager::muteGame
PUBLIC	??0value_s@state_s@SK_WindowManager@@QAE@XZ	; SK_WindowManager::state_s::value_s::value_s
PUBLIC	??0state_s@SK_WindowManager@@QAE@XZ		; SK_WindowManager::state_s::state_s
PUBLIC	??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()
PUBLIC	??$emplace@AAPAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::emplace<HWND__ * &>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABQAUHWND__@@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator--
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator!=
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAUHWND__@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >
PUBLIC	?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_Unchecked
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEABQAUHWND__@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator!=
PUBLIC	?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z	; SK_DetourWindowProc
PUBLIC	?SK_COMPAT_SafeCallProc@@YAJPAUsk_window_s@@PAUHWND__@@IIJ@Z ; SK_COMPAT_SafeCallProc
PUBLIC	?SK_EnumWindows@@YGHPAUHWND__@@J@Z		; SK_EnumWindows
PUBLIC	?SK_CalcCursorPos@@YAXPAUtagPOINT@@@Z		; SK_CalcCursorPos
PUBLIC	?SK_ReverseCursorPos@@YAXPAUtagPOINT@@@Z	; SK_ReverseCursorPos
PUBLIC	?ClipCursor_Detour@@YGHPBUtagRECT@@@Z		; ClipCursor_Detour
PUBLIC	?MoveWindow_Detour@@YGHPAUHWND__@@HHHHH@Z	; MoveWindow_Detour
PUBLIC	?SK_GetWindowRect@@YGHPAUHWND__@@PAUtagRECT@@@Z	; SK_GetWindowRect
PUBLIC	?SK_IsRectZero@@YGHPAUtagRECT@@@Z		; SK_IsRectZero
PUBLIC	?SK_IsRectInfinite@@YGHPAUtagRECT@@@Z		; SK_IsRectInfinite
PUBLIC	?SK_IsRectFullscreen@@YGHPAUtagRECT@@@Z		; SK_IsRectFullscreen
PUBLIC	?SK_IsClipRectFinite@@YGHPAUtagRECT@@@Z		; SK_IsClipRectFinite
PUBLIC	?AdjustWindowRect_Detour@@YGHPAUtagRECT@@KH@Z	; AdjustWindowRect_Detour
PUBLIC	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z	; SK_SetWindowStyle
PUBLIC	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z	; SK_SetWindowStyleEx
PUBLIC	?AdjustWindowRectEx_Detour@@YGHPAUtagRECT@@KHK@Z ; AdjustWindowRectEx_Detour
PUBLIC	?SetWindowLong_Marshall@@YGJP6GJPAUHWND__@@HJ@Z0HJ@Z ; SetWindowLong_Marshall
PUBLIC	?SetWindowLongA_Detour@@YGJPAUHWND__@@HJ@Z	; SetWindowLongA_Detour
PUBLIC	?SetWindowLongW_Detour@@YGJPAUHWND__@@HJ@Z	; SetWindowLongW_Detour
PUBLIC	?GetWindowLong_Marshall@@YGJP6GJPAUHWND__@@H@Z0H@Z ; GetWindowLong_Marshall
PUBLIC	?GetWindowLongA_Detour@@YGJPAUHWND__@@H@Z	; GetWindowLongA_Detour
PUBLIC	?GetWindowLongW_Detour@@YGJPAUHWND__@@H@Z	; GetWindowLongW_Detour
PUBLIC	?SetWindowLongPtr_Marshall@@YGJP6GJPAUHWND__@@HJ@Z0HJ@Z ; SetWindowLongPtr_Marshall
PUBLIC	?SetWindowLongPtrA_Detour@@YGJPAUHWND__@@HJ@Z	; SetWindowLongPtrA_Detour
PUBLIC	?SetWindowLongPtrW_Detour@@YGJPAUHWND__@@HJ@Z	; SetWindowLongPtrW_Detour
PUBLIC	?GetWindowLongPtr_Marshall@@YGJP6GJPAUHWND__@@H@Z0H@Z ; GetWindowLongPtr_Marshall
PUBLIC	?GetWindowLongPtrA_Detour@@YGJPAUHWND__@@H@Z	; GetWindowLongPtrA_Detour
PUBLIC	?GetWindowLongPtrW_Detour@@YGJPAUHWND__@@H@Z	; GetWindowLongPtrW_Detour
PUBLIC	?SK_ComputeClientSize@@YA?AUtagRECT@@XZ		; SK_ComputeClientSize
PUBLIC	?SK_ComputeClientOrigin@@YA?AUtagPOINT@@XZ	; SK_ComputeClientOrigin
PUBLIC	?SK_IsRectTooBigForDesktop@@YA_NUtagRECT@@@Z	; SK_IsRectTooBigForDesktop
PUBLIC	?SK_ResetWindow@@YAXXZ				; SK_ResetWindow
PUBLIC	??$min@J@std@@YAABJABJ0@Z			; std::min<long>
PUBLIC	??$max@J@std@@YAABJABJ0@Z			; std::max<long>
PUBLIC	?TranslateMessage_Detour@@YGHPBUtagMSG@@@Z	; TranslateMessage_Detour
PUBLIC	?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z	; SK_EarlyDispatchMessage
PUBLIC	?PeekMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z ; PeekMessageW_Detour
PUBLIC	?PeekMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z ; PeekMessageA_Detour
PUBLIC	?GetMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z ; GetMessageA_Detour
PUBLIC	?GetMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z ; GetMessageW_Detour
PUBLIC	?DispatchMessageW_Detour@@YGJPBUtagMSG@@@Z	; DispatchMessageW_Detour
PUBLIC	?DispatchMessageA_Detour@@YGJPBUtagMSG@@@Z	; DispatchMessageA_Detour
PUBLIC	?SK_DetourWindowProc2@@YGJPAUHWND__@@IIJ@Z	; SK_DetourWindowProc2
PUBLIC	?CallWndProc@@YGJHIJ@Z				; CallWndProc
PUBLIC	??$static_cast_p2p@X$$A6GHPBUtagMSG@@@Z@@YAPAPAXPAP6GHPBUtagMSG@@@Z@Z ; static_cast_p2p<void,int __stdcall(tagMSG const *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUtagMSG@@PAUHWND__@@III@Z@@YAPAPAXPAP6GHPAUtagMSG@@PAUHWND__@@III@Z@Z ; static_cast_p2p<void,int __stdcall(tagMSG *,HWND__ *,unsigned int,unsigned int,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUtagMSG@@PAUHWND__@@II@Z@@YAPAPAXPAP6GHPAUtagMSG@@PAUHWND__@@II@Z@Z ; static_cast_p2p<void,int __stdcall(tagMSG *,HWND__ *,unsigned int,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GJPBUtagMSG@@@Z@@YAPAPAXPAP6GJPBUtagMSG@@@Z@Z ; static_cast_p2p<void,long __stdcall(tagMSG const *)>
PUBLIC	??$static_cast_p2p@X$$A6GJPAUHWND__@@IIJ@Z@@YAPAPAXPAP6GJPAUHWND__@@IIJ@Z@Z ; static_cast_p2p<void,long __stdcall(HWND__ *,unsigned int,unsigned int,long)>
PUBLIC	?RegisterClassA_Detour@@YGGPBUtagWNDCLASSA@@@Z	; RegisterClassA_Detour
PUBLIC	?RegisterClassW_Detour@@YGGPBUtagWNDCLASSW@@@Z	; RegisterClassW_Detour
PUBLIC	?RegisterClassExA_Detour@@YGGPBUtagWNDCLASSEXA@@@Z ; RegisterClassExA_Detour
PUBLIC	?RegisterClassExW_Detour@@YGGPBUtagWNDCLASSEXW@@@Z ; RegisterClassExW_Detour
PUBLIC	?SK_MakeWindowHook@@YAXPAX0@Z			; SK_MakeWindowHook
PUBLIC	?CreateWindowExA_Detour@@YGPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z ; CreateWindowExA_Detour
PUBLIC	?CreateWindowExW_Detour@@YGPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z ; CreateWindowExW_Detour
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHWND__@@0HHHHI@Z@@YAPAPAXPAP6GHPAUHWND__@@0HHHHI@Z@Z ; static_cast_p2p<void,int __stdcall(HWND__ *,HWND__ *,int,int,int,int,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z@@YAPAPAXPAP6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z@Z ; static_cast_p2p<void,int __stdcall(HWND__ *,tagWINDOWPLACEMENT const *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHWND__@@HHHHH@Z@@YAPAPAXPAP6GHPAUHWND__@@HHHHH@Z@Z ; static_cast_p2p<void,int __stdcall(HWND__ *,int,int,int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GHPBUtagRECT@@@Z@@YAPAPAXPAP6GHPBUtagRECT@@@Z@Z ; static_cast_p2p<void,int __stdcall(tagRECT const *)>
PUBLIC	??$static_cast_p2p@X$$A6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@@YAPAPAXPAP6GPAUHWND__@@KPB_W0KHHHHPAU0@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@Z ; static_cast_p2p<void,HWND__ * __stdcall(unsigned long,wchar_t const *,wchar_t const *,unsigned long,int,int,int,int,HWND__ *,HMENU__ *,HINSTANCE__ *,void *)>
PUBLIC	??$static_cast_p2p@X$$A6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@@YAPAPAXPAP6GPAUHWND__@@KPBD0KHHHHPAU0@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@Z ; static_cast_p2p<void,HWND__ * __stdcall(unsigned long,char const *,char const *,unsigned long,int,int,int,int,HWND__ *,HMENU__ *,HINSTANCE__ *,void *)>
PUBLIC	??$static_cast_p2p@X$$A6GJPAUHWND__@@HJ@Z@@YAPAPAXPAP6GJPAUHWND__@@HJ@Z@Z ; static_cast_p2p<void,long __stdcall(HWND__ *,int,long)>
PUBLIC	??$static_cast_p2p@X$$A6GJPAUHWND__@@H@Z@@YAPAPAXPAP6GJPAUHWND__@@H@Z@Z ; static_cast_p2p<void,long __stdcall(HWND__ *,int)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUtagRECT@@KH@Z@@YAPAPAXPAP6GHPAUtagRECT@@KH@Z@Z ; static_cast_p2p<void,int __stdcall(tagRECT *,unsigned long,int)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUtagRECT@@KHK@Z@@YAPAPAXPAP6GHPAUtagRECT@@KHK@Z@Z ; static_cast_p2p<void,int __stdcall(tagRECT *,unsigned long,int,unsigned long)>
PUBLIC	??$static_cast_p2p@X$$A6GHH@Z@@YAPAPAXPAP6GHH@Z@Z ; static_cast_p2p<void,int __stdcall(int)>
PUBLIC	??$distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@0@Z ; std::distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >
PUBLIC	??$try_emplace@$$V@?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@@Z ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::try_emplace<>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@QAUHWND__@@_N@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator--
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator!=
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@QAUHWND__@@_N@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator==
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
PUBLIC	?_Unchecked@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_Unchecked
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@QAUHWND__@@_N@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@QAUHWND__@@_N@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator->
PUBLIC	??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V01@X$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@1@0@Z ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,void,0>
PUBLIC	??$?0ABV?$allocator@PAUHWND__@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > ><std::allocator<HWND__ *> const &>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@QAUHWND__@@_N@std@@@std@@SAPAU?$pair@QAUHWND__@@_N@2@AAU32@@Z ; std::pointer_traits<std::pair<HWND__ * const,bool> *>::pointer_to
PUBLIC	??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > ><std::allocator<std::pair<HWND__ * const,bool> > const &>
PUBLIC	??$?0AAU?$hash@PAUHWND__@@@std@@U_One_then_variadic_args_t@1@AAU?$equal_to@PAUHWND__@@@1@M@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$hash@PAUHWND__@@@1@$$QAU21@AAU?$equal_to@PAUHWND__@@@1@$$QAM@Z ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1><std::hash<HWND__ *> &,std::_One_then_variadic_args_t,std::equal_to<HWND__ *> &,float>
PUBLIC	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z		; std::addressof<wchar_t *>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@U?$pair@QAUHWND__@@_N@std@@@std@@YAPAU?$pair@QAUHWND__@@_N@0@AAU10@@Z ; std::addressof<std::pair<HWND__ * const,bool> >
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &,void>
PUBLIC	??$?0ABV?$allocator@PAUHWND__@@@std@@X@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_List_buy<HWND__ *,std::allocator<HWND__ *> ><std::allocator<HWND__ *> const &,void>
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEAAPAUHWND__@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator*
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
PUBLIC	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@QAUHWND__@@_N@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*
PUBLIC	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++
PUBLIC	??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator--
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &,void>
PUBLIC	??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@X@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > ><std::allocator<std::pair<HWND__ * const,bool> > const &,void>
PUBLIC	??$_Unfancy@_W@std@@YAPA_WPA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>
PUBLIC	??$_Fill_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ; std::_Fill_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$addressof@PAU?$_List_node@PAUHWND__@@PAX@std@@@std@@YAPAPAU?$_List_node@PAUHWND__@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<HWND__ *,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<std::_List_node<HWND__ *,void *> *>
PUBLIC	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<HWND__ *> > const >
PUBLIC	??$addressof@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<HWND__ *> > >
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>
PUBLIC	??$_Fill_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@@Z ; std::_Fill_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$addressof@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>
PUBLIC	??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
PUBLIC	??$addressof@PAUHWND__@@@std@@YAPAPAUHWND__@@AAPAU1@@Z ; std::addressof<HWND__ *>
PUBLIC	??$destroy@PAUHWND__@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<HWND__ *>
PUBLIC	??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
PUBLIC	??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::pair<HWND__ * const,bool> >
PUBLIC	??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
PUBLIC	??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
PUBLIC	??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
PUBLIC	??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ; std::forward<HWND__ * &>
PUBLIC	??$emplace_front@AAPAUHWND__@@@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXAAPAUHWND__@@@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::emplace_front<HWND__ * &>
PUBLIC	??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$_Distance1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >
PUBLIC	??$_Try_emplace@ABQAUHWND__@@$$V@?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@@Z ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::_Try_emplace<HWND__ * const &>
PUBLIC	??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_One_then_variadic_args_t>
PUBLIC	??$forward@M@std@@YA$$QAMAAM@Z			; std::forward<float>
PUBLIC	??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >
PUBLIC	??$forward@ABV?$allocator@PAUHWND__@@@std@@@std@@YAABV?$allocator@PAUHWND__@@@0@ABV10@@Z ; std::forward<std::allocator<HWND__ *> const &>
PUBLIC	??$?0PAUHWND__@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> ><HWND__ *>
PUBLIC	??$forward@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@YAABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<HWND__ * const,bool> > const &>
PUBLIC	??$?0U?$pair@QAUHWND__@@_N@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > ><std::pair<HWND__ * const,bool> >
PUBLIC	??$forward@AAU?$hash@PAUHWND__@@@std@@@std@@YAAAU?$hash@PAUHWND__@@@0@AAU10@@Z ; std::forward<std::hash<HWND__ *> &>
PUBLIC	??$forward@AAU?$equal_to@PAUHWND__@@@std@@@std@@YAAAU?$equal_to@PAUHWND__@@@0@AAU10@@Z ; std::forward<std::equal_to<HWND__ *> &>
PUBLIC	??$?0AAU?$equal_to@PAUHWND__@@@std@@M@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$equal_to@PAUHWND__@@@1@$$QAM@Z ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Compressed_pair<std::equal_to<HWND__ *>,float,1><std::equal_to<HWND__ *> &,float>
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@0@ABU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>
PUBLIC	??$?0ABV?$allocator@PAUHWND__@@@std@@X@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > ><std::allocator<HWND__ *> const &,void>
PUBLIC	??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@0@ABU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>
PUBLIC	??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@X@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > ><std::allocator<std::pair<HWND__ * const,bool> > const &,void>
PUBLIC	??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>
PUBLIC	??$_Fill_memset_is_safe@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@ABV20@@Z ; std::_Fill_memset_is_safe<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_List_node@PAUHWND__@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<std::_List_node<HWND__ *,void *> *>
PUBLIC	??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>
PUBLIC	??$_Fill_memset_is_safe@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@ABV20@@Z ; std::_Fill_memset_is_safe<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$_Fill_unchecked1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>
PUBLIC	??$_Unfancy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unfancy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
PUBLIC	??$destroy@PAUHWND__@@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@@Z ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<HWND__ *>
PUBLIC	??$_Unfancy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unfancy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
PUBLIC	??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAU?$pair@QAUHWND__@@_N@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::pair<HWND__ * const,bool> >
PUBLIC	??$?0U?$integral_constant@_N$0A@@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$0A@@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,0> >
PUBLIC	??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>
PUBLIC	??$_Ptr_move_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Ptr_move_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$move@AAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> &>
PUBLIC	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
PUBLIC	??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>
PUBLIC	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>
PUBLIC	??$_Ptr_move_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0@Z ; std::_Ptr_move_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$move@AAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &>
PUBLIC	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
PUBLIC	??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>
PUBLIC	??$_Insert@AAPAUHWND__@@@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@AAPAUHWND__@@@Z ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Insert<HWND__ * &>
PUBLIC	??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool>::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool><std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool,void,0>
PUBLIC	??$_Buynode_if_nil@AAPAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@AAPAUHWND__@@V21@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * &>
PUBLIC	??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ; std::forward_as_tuple<>
PUBLIC	??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z ; std::forward<HWND__ * const &>
PUBLIC	??$forward_as_tuple@ABQAUHWND__@@@std@@YA?AV?$tuple@ABQAUHWND__@@@0@ABQAUHWND__@@@Z ; std::forward_as_tuple<HWND__ * const &>
PUBLIC	??0?$tuple@ABQAUHWND__@@@std@@QAE@$$QAV01@@Z	; std::tuple<HWND__ * const &>::tuple<HWND__ * const &>
PUBLIC	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
PUBLIC	??$?0AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &,bool,void,0>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>
PUBLIC	??$?0ABV?$allocator@PAUHWND__@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1><std::allocator<HWND__ *> const &>
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>
PUBLIC	??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1><std::allocator<std::pair<HWND__ * const,bool> > const &>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@@Z ; std::allocator<std::_List_node<HWND__ *,void *> >::destroy<std::_List_node<HWND__ *,void *> *>
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>
PUBLIC	??$destroy@PAUHWND__@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@@Z ; std::allocator<std::_List_node<HWND__ *,void *> >::destroy<HWND__ *>
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>
PUBLIC	??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@@Z ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::destroy<std::pair<HWND__ * const,bool> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>
PUBLIC	??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>
PUBLIC	??$_Kfn@QAUHWND__@@_N@?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@SAABQAUHWND__@@ABU?$pair@QAUHWND__@@_N@1@@Z ; std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>::_Kfn<HWND__ * const,bool>
PUBLIC	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > const >
PUBLIC	??$_Buynode@AAPAUHWND__@@@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@1@PAU21@0AAPAUHWND__@@@Z ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Buynode<HWND__ * &>
PUBLIC	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
PUBLIC	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
PUBLIC	??$?0ABQAUHWND__@@$0A@@?$tuple@ABQAUHWND__@@@std@@QAE@ABQAUHWND__@@@Z ; std::tuple<HWND__ * const &>::tuple<HWND__ * const &><HWND__ * const &,0>
PUBLIC	??$forward@V?$tuple@ABQAUHWND__@@@std@@@std@@YA$$QAV?$tuple@ABQAUHWND__@@@0@AAV10@@Z ; std::forward<std::tuple<HWND__ * const &> >
PUBLIC	??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::emplace_front<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
PUBLIC	??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert<std::pair<HWND__ * const,bool> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &>
PUBLIC	??$?0ABV?$allocator@PAUHWND__@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > ><std::allocator<HWND__ *> const &>
PUBLIC	??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > ><std::allocator<std::pair<HWND__ * const,bool> > const &>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>
PUBLIC	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>
PUBLIC	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$forward@AAPAU?$_List_node@PAUHWND__@@PAX@std@@@std@@YAAAPAU?$_List_node@PAUHWND__@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<HWND__ *,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>
PUBLIC	??$_Buynode_if_nil@ABQAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABQAUHWND__@@V21@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * const &>
PUBLIC	??$forward@AAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>
PUBLIC	??$?0U_Exact_args_t@std@@ABQAUHWND__@@$$V$0A@@?$tuple@ABQAUHWND__@@@std@@QAE@U_Exact_args_t@1@ABQAUHWND__@@@Z ; std::tuple<HWND__ * const &>::tuple<HWND__ * const &><std::_Exact_args_t,HWND__ * const &,0>
PUBLIC	??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Insert<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
PUBLIC	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool,void,0>
PUBLIC	??$forward@AAU?$pair@QAUHWND__@@_N@std@@@std@@YAAAU?$pair@QAUHWND__@@_N@0@AAU10@@Z ; std::forward<std::pair<HWND__ * const,bool> &>
PUBLIC	??$_Buynode_if_nil@AAU?$pair@QAUHWND__@@_N@std@@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@AAU?$pair@QAUHWND__@@_N@1@V21@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Buynode_if_nil<std::pair<HWND__ * const,bool> &>
PUBLIC	??$?0PAUHWND__@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::allocator<std::_List_node<HWND__ *,void *> >::allocator<std::_List_node<HWND__ *,void *> ><HWND__ *>
PUBLIC	??$?0U?$pair@QAUHWND__@@_N@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> ><std::pair<HWND__ * const,bool> >
PUBLIC	??$_Destroy1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@U?$integral_constant@_N$00@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Destroy1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$_Destroy1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@U?$integral_constant@_N$00@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Destroy1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV41@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>
PUBLIC	??$_Construct1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV41@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Construct1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>
PUBLIC	??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV41@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
PUBLIC	??$_Construct1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV41@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Construct1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<HWND__ *,void *> >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@AAPAU3@@Z ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0ABQAUHWND__@@@?$_Tuple_val@ABQAUHWND__@@@std@@QAE@ABQAUHWND__@@@Z ; std::_Tuple_val<HWND__ * const &>::_Tuple_val<HWND__ * const &><HWND__ * const &>
PUBLIC	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
PUBLIC	??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ; std::allocator<std::_List_node<HWND__ *,void *> >::construct<HWND__ *,HWND__ * &>
PUBLIC	??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
PUBLIC	??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
PUBLIC	??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
PUBLIC	??$?0ABQAUHWND__@@$$Z$$V@?$pair@QAUHWND__@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAUHWND__@@@1@V?$tuple@$$V@1@@Z ; std::pair<HWND__ * const,bool>::pair<HWND__ * const,bool><HWND__ * const &>
PUBLIC	??$?0V?$tuple@ABQAUHWND__@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAUHWND__@@_N@std@@QAE@AAV?$tuple@ABQAUHWND__@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<HWND__ * const,bool>::pair<HWND__ * const,bool><std::tuple<HWND__ * const &>,std::tuple<>,0>
PUBLIC	??$move@AAV?$tuple@ABQAUHWND__@@@std@@@std@@YA$$QAV?$tuple@ABQAUHWND__@@@0@AAV10@@Z ; std::move<std::tuple<HWND__ * const &> &>
PUBLIC	??$get@$0A@ABQAUHWND__@@@std@@YAABQAUHWND__@@$$QAV?$tuple@ABQAUHWND__@@@0@@Z ; std::get<0,HWND__ * const &>
PUBLIC	?game_window@@3Usk_window_s@@A			; game_window
PUBLIC	??_7SK_IVariableListener@@6B@			; SK_IVariableListener::`vftable'
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	?last_mouse@@3U<unnamed-type-last_mouse>@@A	; last_mouse
PUBLIC	?wm_dispatch@@3Uwindow_message_dispatch_s@@A	; wm_dispatch
PUBLIC	??_7SK_WindowManager@@6B@			; SK_WindowManager::`vftable'
PUBLIC	?x@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; `SK_WindowManager::OnVarChange'::`76'::x
PUBLIC	?$TSS0@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; TSS0<`template-parameter-76',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
PUBLIC	?y@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; `SK_WindowManager::OnVarChange'::`76'::y
PUBLIC	?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A ; `SK_WindowManager::OnVarChange'::`79'::last_known_client
PUBLIC	?last_known_window@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A ; `SK_WindowManager::OnVarChange'::`79'::last_known_window
PUBLIC	?persist_x@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA ; `SK_WindowManager::OnVarChange'::`79'::persist_x
PUBLIC	?$TSS2@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; TSS2<`template-parameter-79',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
PUBLIC	?persist_y@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA ; `SK_WindowManager::OnVarChange'::`79'::persist_y
PUBLIC	??_C@_07HBHJLNLC@?$CFlux?$CFlu?$AA@		; `string'
PUBLIC	??_C@_0BE@EKKNCBFG@Window?4Fullscreen?50?$AA@	; `string'
PUBLIC	??_C@_05OKCLCEKN@?$CFux?$CFu?$AA@		; `string'
PUBLIC	??_C@_07DNODLGKM@INVALID?$AA@			; `string'
PUBLIC	??_C@_0BH@LLAHAFKD@Window?4UnconfineCursor?$AA@	; `string'
PUBLIC	??_C@_0BF@JIGKFJCF@Window?4ConfineCursor?$AA@	; `string'
PUBLIC	??_C@_0BC@HLDPMDDM@Window?4Borderless?$AA@	; `string'
PUBLIC	??_C@_0BG@NEPDLABM@Window?4BackgroundMute?$AA@	; `string'
PUBLIC	??_C@_0O@CAMIPBKP@Window?4Center?$AA@		; `string'
PUBLIC	??_C@_0BC@LIBOMBDO@Window?4Fullscreen?$AA@	; `string'
PUBLIC	??_C@_0BB@HKCOBNCG@Window?4OverrideX?$AA@	; `string'
PUBLIC	??_C@_0BB@GDDFCMGH@Window?4OverrideY?$AA@	; `string'
PUBLIC	??_C@_0BD@IFGLFGEJ@Window?4OverrideRes?$AA@	; `string'
PUBLIC	??_C@_0BF@HANFDLDO@Window?4OverrideMouse?$AA@	; `string'
PUBLIC	??_C@_0P@NNGOHKOM@Window?4XOffset?$AA@		; `string'
PUBLIC	??_C@_0P@BBMEHKHC@Window?4YOffset?$AA@		; `string'
PUBLIC	??_C@_0BF@OJMMDOKI@Window?4ScaledXOffset?$AA@	; `string'
PUBLIC	??_C@_0BF@CFGGDODG@Window?4ScaledYOffset?$AA@	; `string'
PUBLIC	??_C@_0BD@KMBFFGAF@Window?4StaticRects?$AA@	; `string'
PUBLIC	?ActivateWindow@@3V<lambda>@@A			; ActivateWindow
PUBLIC	??_C@_1EI@CGANLFJM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC?$AAu?$AAr@ ; `string'
PUBLIC	??_C@_1EM@LBJEIGPM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAU?$AAn?$AAc?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC@ ; `string'
PUBLIC	?DeferCommand@@3V<lambda>@@A			; DeferCommand
PUBLIC	??_C@_0BE@FDLGBABH@Window?4Fullscreen?51?$AA@	; `string'
PUBLIC	??_C@_1FI@MJPBCAPJ@?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AA?$HL?$AAL?$AAe?$AAf?$AAt?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?0?$AA?5?$AAT?$AAo?$AAp?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?$HN?$AA?5?$AA?9?$AA?5?$AA?$HL?$AAW?$AAx?$AAH@ ; `string'
PUBLIC	??_C@_1DI@IICFDCMK@?$AA?$FL?$AAC?$AAu?$AAr?$AAs?$AAo?$AAr?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAl?$AAi?$AAp?$AA?5?$AAR?$AAe?$AAc?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R4SK_IVariableListener@@6B@			; SK_IVariableListener::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSK_IVariableListener@@@8		; SK_IVariableListener `RTTI Type Descriptor'
PUBLIC	??_R3SK_IVariableListener@@8			; SK_IVariableListener::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SK_IVariableListener@@8			; SK_IVariableListener::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SK_IVariableListener@@8		; SK_IVariableListener::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SK_WindowManager@@6B@			; SK_WindowManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSK_WindowManager@@@8			; SK_WindowManager `RTTI Type Descriptor'
PUBLIC	??_R3SK_WindowManager@@8			; SK_WindowManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SK_WindowManager@@8			; SK_WindowManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SK_WindowManager@@8		; SK_WindowManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@358637bd
PUBLIC	__real@3727c5ac
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@b58637bd
PUBLIC	__real@b727c5ac
PUBLIC	__real@bf800000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__wcsstr:PROC
EXTRN	__imp__strncat:PROC
EXTRN	__imp__DecodePointer@4:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__InitializeCriticalSectionEx@12:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__SleepEx@8:PROC
EXTRN	__imp__WaitForMultipleObjectsEx@20:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	__imp__GetCurrentThread@0:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__BringWindowToTop@4:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__MsgWaitForMultipleObjectsEx@20:PROC
EXTRN	__imp__SetTimer@16:PROC
EXTRN	__imp__IsWindowUnicode@4:PROC
EXTRN	__imp__SetActiveWindow@4:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__ClipCursor@4:PROC
EXTRN	__imp__GetClipCursor@4:PROC
EXTRN	__imp__ClientToScreen@8:PROC
EXTRN	__imp__GetWindowLongA@8:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__GetClassLongA@8:PROC
EXTRN	__imp__GetClassLongW@8:PROC
EXTRN	__imp__EnumWindows@8:PROC
EXTRN	__imp__GetClassNameW@12:PROC
EXTRN	__imp__GetWindowThreadProcessId@8:PROC
EXTRN	__imp__IsGUIThread@4:PROC
EXTRN	__imp__CallNextHookEx@16:PROC
EXTRN	__imp__MonitorFromWindow@8:PROC
EXTRN	__imp__GetMonitorInfoW@8:PROC
EXTRN	__imp__RealGetWindowClassW@12:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	__imp__free:PROC
EXTRN	?SK_ImGui_WantGamepadCapture@@YA_NXZ:PROC	; SK_ImGui_WantGamepadCapture
EXTRN	?SK_ImGui_WantMouseCapture@@YA_NXZ:PROC		; SK_ImGui_WantMouseCapture
EXTRN	?SK_ImGui_WantKeyboardCapture@@YA_NXZ:PROC	; SK_ImGui_WantKeyboardCapture
EXTRN	?SK_ImGui_WantTextCapture@@YA_NXZ:PROC		; SK_ImGui_WantTextCapture
EXTRN	?activateWindow@sk_imgui_cursor_s@@QAEX_N@Z:PROC ; sk_imgui_cursor_s::activateWindow
EXTRN	?SK_ImGui_HandlesMessage@@YA_NPAUtagMSG@@_N1@Z:PROC ; SK_ImGui_HandlesMessage
EXTRN	_MH_CreateHook@12:PROC
EXTRN	_MH_QueueEnableHook@4:PROC
EXTRN	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z:PROC ; SK_CreateDLLHook2
EXTRN	?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ:PROC	; SK_ApplyQueuedHooks
EXTRN	__swprintf:PROC
EXTRN	_snprintf:PROC
EXTRN	_sscanf:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ:PROC		; SK_GetDLL
EXTRN	?getInstance@SK_Console@@SAPAV1@XZ:PROC		; SK_Console::getInstance
EXTRN	?KeyUp@SK_Console@@QAEHEJ@Z:PROC		; SK_Console::KeyUp
EXTRN	?KeyDown@SK_Console@@QAEHEJ@Z:PROC		; SK_Console::KeyDown
EXTRN	?reset@SK_Console@@QAEXXZ:PROC			; SK_Console::reset
EXTRN	?SK_SetGameMute@@YGX_N@Z:PROC			; SK_SetGameMute
EXTRN	?LogEx@iSK_Logger@@UAAX_NQB_WZZ:PROC		; iSK_Logger::LogEx
EXTRN	?Log@iSK_Logger@@UAAXQB_WZZ:PROC		; iSK_Logger::Log
EXTRN	?SK_GetSymbolNameFromModuleAddr@@YAKPAUHINSTANCE__@@IPADK@Z:PROC ; SK_GetSymbolNameFromModuleAddr
EXTRN	?SK_SummarizeCaller@@YG?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAX@Z:PROC ; SK_SummarizeCaller
EXTRN	?SK_IsSteamOverlayActive@@YG_NXZ:PROC		; SK_IsSteamOverlayActive
EXTRN	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ:PROC ; SK_GetCommandProcessor
EXTRN	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z:PROC ; SK_CreateVar
EXTRN	__imp__StrStrIW@8:PROC
EXTRN	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ:PROC ; SK_GetCurrentRenderBackend
EXTRN	?SK_GetCurrentGameID@@YG?AW4SK_GAME_ID@@XZ:PROC	; SK_GetCurrentGameID
EXTRN	?SK_GetHostApp@@YAPB_WXZ:PROC			; SK_GetHostApp
EXTRN	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z:PROC	; SK_GetCallingDLL
EXTRN	?SK_D3D9_TriggerReset@@YAX_N@Z:PROC		; SK_D3D9_TriggerReset
EXTRN	?ImGui_WndProcHandler@@YGJPAUHWND__@@IIJ@Z:PROC	; ImGui_WndProcHandler
EXTRN	?ImGui_ImplDX11_InvalidateDeviceObjects@@YAXXZ:PROC ; ImGui_ImplDX11_InvalidateDeviceObjects
EXTRN	?SK_D3D9_TriggerReset@@YAX_N@Z:PROC		; SK_D3D9_TriggerReset
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__except_handler3:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?RegisterRawInputDevices_Original@@3P6GHPBUtagRAWINPUTDEVICE@@II@ZA:DWORD ; RegisterRawInputDevices_Original
EXTRN	?SK_ImGui_Cursor@@3Usk_imgui_cursor_s@@A:BYTE	; SK_ImGui_Cursor
EXTRN	?GetRegisteredRawInputDevices_Original@@3P6GIPAUtagRAWINPUTDEVICE@@PAII@ZA:DWORD ; GetRegisteredRawInputDevices_Original
EXTRN	?__SK_DLL_Ending@@3JC:DWORD			; __SK_DLL_Ending
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?dll_log@@3UiSK_Logger@@A:BYTE			; dll_log
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	___ImageBase:BYTE
EXTRN	?config@@3Usk_config_t@@A:BYTE			; config
EXTRN	?SK_ImGui_Visible@@3_NA:BYTE			; SK_ImGui_Visible
EXTRN	?SK_bypass_dialog_active@@3JC:DWORD		; SK_bypass_dialog_active
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
?game_window@@3Usk_window_s@@A DB 0e0H DUP (?)		; game_window
_BSS	ENDS
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
_BSS	SEGMENT
?wm_dispatch@@3Uwindow_message_dispatch_s@@A DB 040H DUP (?) ; wm_dispatch
_BSS	ENDS
;	COMDAT ?x@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA
_BSS	SEGMENT
?x@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA DD 01H DUP (?) ; `SK_WindowManager::OnVarChange'::`76'::x
_BSS	ENDS
;	COMDAT ?$TSS0@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA
_BSS	SEGMENT
?$TSS0@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-76',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
_BSS	ENDS
;	COMDAT ?y@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA
_BSS	SEGMENT
?y@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA DD 01H DUP (?) ; `SK_WindowManager::OnVarChange'::`76'::y
_BSS	ENDS
;	COMDAT ?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A
_BSS	SEGMENT
?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A DB 010H DUP (?) ; `SK_WindowManager::OnVarChange'::`79'::last_known_client
_BSS	ENDS
;	COMDAT ?last_known_window@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A
_BSS	SEGMENT
?last_known_window@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A DB 010H DUP (?) ; `SK_WindowManager::OnVarChange'::`79'::last_known_window
_BSS	ENDS
;	COMDAT ?persist_x@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA
_BSS	SEGMENT
?persist_x@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA DD 01H DUP (?) ; `SK_WindowManager::OnVarChange'::`79'::persist_x
_BSS	ENDS
;	COMDAT ?$TSS2@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA
_BSS	SEGMENT
?$TSS2@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA DD 01H DUP (?) ; TSS2<`template-parameter-79',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
_BSS	ENDS
;	COMDAT ?persist_y@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA
_BSS	SEGMENT
?persist_y@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA DD 01H DUP (?) ; `SK_WindowManager::OnVarChange'::`79'::persist_y
_BSS	ENDS
_BSS	SEGMENT
?ActivateWindow@@3V<lambda>@@A DB 01H DUP (?)		; ActivateWindow
	ALIGN	4

?DeferCommand@@3V<lambda>@@A DB 01H DUP (?)		; DeferCommand
_BSS	ENDS
;	COMDAT ?called@?2??ClipCursor_Detour@@YGHPBUtagRECT@@@Z@4_NA
_BSS	SEGMENT
?called@?2??ClipCursor_Detour@@YGHPBUtagRECT@@@Z@4_NA DB 01H DUP (?) ; `ClipCursor_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?cs_center@?1??SK_CenterWindowAtMouse@@YAXH@Z@4U_RTL_CRITICAL_SECTION@@A
_BSS	SEGMENT
?cs_center@?1??SK_CenterWindowAtMouse@@YAXH@Z@4U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?) ; `SK_CenterWindowAtMouse'::`2'::cs_center
_BSS	ENDS
;	COMDAT ?init@?1??SK_CenterWindowAtMouse@@YAXH@Z@4_NA
_BSS	SEGMENT
?init@?1??SK_CenterWindowAtMouse@@YAXH@Z@4_NA DB 01H DUP (?) ; `SK_CenterWindowAtMouse'::`2'::init
_BSS	ENDS
;	COMDAT ?called@?2??MoveWindow_Detour@@YGHPAUHWND__@@HHHHH@Z@4_NA
_BSS	SEGMENT
?called@?2??MoveWindow_Detour@@YGHPAUHWND__@@HHHHH@Z@4_NA DB 01H DUP (?) ; `MoveWindow_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??SetWindowPos_Detour@@YGHPAUHWND__@@0HHHHI@Z@4_NA
_BSS	SEGMENT
?called@?2??SetWindowPos_Detour@@YGHPAUHWND__@@0HHHHI@Z@4_NA DB 01H DUP (?) ; `SetWindowPos_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??SetWindowLongA_Detour@@YGJPAUHWND__@@HJ@Z@4_NA
_BSS	SEGMENT
?called@?2??SetWindowLongA_Detour@@YGJPAUHWND__@@HJ@Z@4_NA DB 01H DUP (?) ; `SetWindowLongA_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??SetWindowLongW_Detour@@YGJPAUHWND__@@HJ@Z@4_NA
_BSS	SEGMENT
?called@?2??SetWindowLongW_Detour@@YGJPAUHWND__@@HJ@Z@4_NA DB 01H DUP (?) ; `SetWindowLongW_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??GetWindowLongA_Detour@@YGJPAUHWND__@@H@Z@4_NA
_BSS	SEGMENT
?called@?2??GetWindowLongA_Detour@@YGJPAUHWND__@@H@Z@4_NA DB 01H DUP (?) ; `GetWindowLongA_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??GetWindowLongW_Detour@@YGJPAUHWND__@@H@Z@4_NA
_BSS	SEGMENT
?called@?2??GetWindowLongW_Detour@@YGJPAUHWND__@@H@Z@4_NA DB 01H DUP (?) ; `GetWindowLongW_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??SetWindowLongPtrA_Detour@@YGJPAUHWND__@@HJ@Z@4_NA
_BSS	SEGMENT
?called@?2??SetWindowLongPtrA_Detour@@YGJPAUHWND__@@HJ@Z@4_NA DB 01H DUP (?) ; `SetWindowLongPtrA_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??SetWindowLongPtrW_Detour@@YGJPAUHWND__@@HJ@Z@4_NA
_BSS	SEGMENT
?called@?2??SetWindowLongPtrW_Detour@@YGJPAUHWND__@@HJ@Z@4_NA DB 01H DUP (?) ; `SetWindowLongPtrW_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??GetWindowLongPtrA_Detour@@YGJPAUHWND__@@H@Z@4_NA
_BSS	SEGMENT
?called@?2??GetWindowLongPtrA_Detour@@YGJPAUHWND__@@H@Z@4_NA DB 01H DUP (?) ; `GetWindowLongPtrA_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??GetWindowLongPtrW_Detour@@YGJPAUHWND__@@H@Z@4_NA
_BSS	SEGMENT
?called@?2??GetWindowLongPtrW_Detour@@YGJPAUHWND__@@H@Z@4_NA DB 01H DUP (?) ; `GetWindowLongPtrW_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?cs_reset@?1??SK_ResetWindow@@YAXXZ@4U_RTL_CRITICAL_SECTION@@A
_BSS	SEGMENT
?cs_reset@?1??SK_ResetWindow@@YAXXZ@4U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?) ; `SK_ResetWindow'::`2'::cs_reset
_BSS	ENDS
;	COMDAT ?init@?1??SK_ResetWindow@@YAXXZ@4JC
_BSS	SEGMENT
?init@?1??SK_ResetWindow@@YAXXZ@4JC DD 01H DUP (?)	; `SK_ResetWindow'::`2'::init
_BSS	ENDS
;	COMDAT ?called@?2??GetSystemMetrics_Detour@@YGHH@Z@4_NA
_BSS	SEGMENT
?called@?2??GetSystemMetrics_Detour@@YGHH@Z@4_NA DB 01H DUP (?) ; `GetSystemMetrics_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??SK_GetSystemMetrics@@YGHH@Z@4_NA
_BSS	SEGMENT
?called@?2??SK_GetSystemMetrics@@YGHH@Z@4_NA DB 01H DUP (?) ; `SK_GetSystemMetrics'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?8??PeekMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z@4_NA
_BSS	SEGMENT
?called@?8??PeekMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z@4_NA DB 01H DUP (?) ; `PeekMessageW_Detour'::`9'::called
_BSS	ENDS
;	COMDAT ?called@?8??PeekMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z@4_NA
_BSS	SEGMENT
?called@?8??PeekMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z@4_NA DB 01H DUP (?) ; `PeekMessageA_Detour'::`9'::called
_BSS	ENDS
;	COMDAT ?called@?8??GetMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z@4_NA
_BSS	SEGMENT
?called@?8??GetMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z@4_NA DB 01H DUP (?) ; `GetMessageA_Detour'::`9'::called
_BSS	ENDS
;	COMDAT ?called@?8??GetMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z@4_NA
_BSS	SEGMENT
?called@?8??GetMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z@4_NA DB 01H DUP (?) ; `GetMessageW_Detour'::`9'::called
_BSS	ENDS
;	COMDAT ?called@?8??DispatchMessageW_Detour@@YGJPBUtagMSG@@@Z@4_NA
_BSS	SEGMENT
?called@?8??DispatchMessageW_Detour@@YGJPBUtagMSG@@@Z@4_NA DB 01H DUP (?) ; `DispatchMessageW_Detour'::`9'::called
_BSS	ENDS
;	COMDAT ?called@?8??DispatchMessageA_Detour@@YGJPBUtagMSG@@@Z@4_NA
_BSS	SEGMENT
?called@?8??DispatchMessageA_Detour@@YGJPBUtagMSG@@@Z@4_NA DB 01H DUP (?) ; `DispatchMessageA_Detour'::`9'::called
_BSS	ENDS
;	COMDAT ?nest_lvl@?1??SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z@4JC
_BSS	SEGMENT
?nest_lvl@?1??SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z@4JC DD 01H DUP (?) ; `SK_RealizeForegroundWindow'::`2'::nest_lvl
_BSS	ENDS
;	COMDAT ?recursive_wheel@?L@??CallWndProc@@YGJHIJ@Z@4_NA
_BSS	SEGMENT
?recursive_wheel@?L@??CallWndProc@@YGJHIJ@Z@4_NA DB 01H DUP (?) ; `CallWndProc'::`11'::recursive_wheel
_BSS	ENDS
;	COMDAT ?last_active@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA
_BSS	SEGMENT
?last_active@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA DB 01H DUP (?) ; `SK_DetourWindowProc'::`2'::last_active
_BSS	ENDS
;	COMDAT ?$TSS0@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',__int8 volatile * const volatile,tourWindowProc,GJPAUHWND__,unsigned int,unsigned int,long>
_BSS	ENDS
;	COMDAT ?eqgame@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA
_BSS	SEGMENT
?eqgame@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA DB 01H DUP (?) ; `SK_DetourWindowProc'::`2'::eqgame
_BSS	ENDS
;	COMDAT ?$TSS1@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
_BSS	SEGMENT
?$TSS1@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA DD 01H DUP (?) ; TSS1<`template-parameter-2',__int8 volatile * const volatile,tourWindowProc,GJPAUHWND__,unsigned int,unsigned int,long>
_BSS	ENDS
;	COMDAT ?recursive_wheel@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA
_BSS	SEGMENT
?recursive_wheel@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA DB 01H DUP (?) ; `SK_DetourWindowProc'::`2'::recursive_wheel
_BSS	ENDS
;	COMDAT ?installed@?1??SK_InstallWindowHook@@YAXPAUHWND__@@@Z@4JC
_BSS	SEGMENT
?installed@?1??SK_InstallWindowHook@@YAXPAUHWND__@@@Z@4JC DD 01H DUP (?) ; `SK_InstallWindowHook'::`2'::installed
_BSS	ENDS
;	COMDAT ?called@?2??RegisterClassA_Detour@@YGGPBUtagWNDCLASSA@@@Z@4_NA
_BSS	SEGMENT
?called@?2??RegisterClassA_Detour@@YGGPBUtagWNDCLASSA@@@Z@4_NA DB 01H DUP (?) ; `RegisterClassA_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??RegisterClassW_Detour@@YGGPBUtagWNDCLASSW@@@Z@4_NA
_BSS	SEGMENT
?called@?2??RegisterClassW_Detour@@YGGPBUtagWNDCLASSW@@@Z@4_NA DB 01H DUP (?) ; `RegisterClassW_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??RegisterClassExA_Detour@@YGGPBUtagWNDCLASSEXA@@@Z@4_NA
_BSS	SEGMENT
?called@?2??RegisterClassExA_Detour@@YGGPBUtagWNDCLASSEXA@@@Z@4_NA DB 01H DUP (?) ; `RegisterClassExA_Detour'::`3'::called
_BSS	ENDS
;	COMDAT ?called@?2??RegisterClassExW_Detour@@YGGPBUtagWNDCLASSEXW@@@Z@4_NA
_BSS	SEGMENT
?called@?2??RegisterClassExW_Detour@@YGGPBUtagWNDCLASSEXW@@@Z@4_NA DB 01H DUP (?) ; `RegisterClassExW_Detour'::`3'::called
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@b727c5ac
CONST	SEGMENT
__real@b727c5ac DD 0b727c5acr			; -1e-05
CONST	ENDS
;	COMDAT __real@b58637bd
CONST	SEGMENT
__real@b58637bd DD 0b58637bdr			; -1e-06
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-05
CONST	ENDS
;	COMDAT __real@358637bd
CONST	SEGMENT
__real@358637bd DD 0358637bdr			; 1e-06
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@SK_WindowManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SK_WindowManager@@8 DD FLAT:??_R0?AVSK_WindowManager@@@8 ; SK_WindowManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SK_WindowManager@@8
rdata$r	ENDS
;	COMDAT ??_R2SK_WindowManager@@8
rdata$r	SEGMENT
??_R2SK_WindowManager@@8 DD FLAT:??_R1A@?0A@EA@SK_WindowManager@@8 ; SK_WindowManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SK_IVariableListener@@8
rdata$r	ENDS
;	COMDAT ??_R3SK_WindowManager@@8
rdata$r	SEGMENT
??_R3SK_WindowManager@@8 DD 00H				; SK_WindowManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SK_WindowManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSK_WindowManager@@@8
data$r	SEGMENT
??_R0?AVSK_WindowManager@@@8 DD FLAT:??_7type_info@@6B@	; SK_WindowManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSK_WindowManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4SK_WindowManager@@6B@
rdata$r	SEGMENT
??_R4SK_WindowManager@@6B@ DD 00H			; SK_WindowManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSK_WindowManager@@@8
	DD	FLAT:??_R3SK_WindowManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SK_IVariableListener@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SK_IVariableListener@@8 DD FLAT:??_R0?AUSK_IVariableListener@@@8 ; SK_IVariableListener::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SK_IVariableListener@@8
rdata$r	ENDS
;	COMDAT ??_R2SK_IVariableListener@@8
rdata$r	SEGMENT
??_R2SK_IVariableListener@@8 DD FLAT:??_R1A@?0A@EA@SK_IVariableListener@@8 ; SK_IVariableListener::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SK_IVariableListener@@8
rdata$r	SEGMENT
??_R3SK_IVariableListener@@8 DD 00H			; SK_IVariableListener::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SK_IVariableListener@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSK_IVariableListener@@@8
data$r	SEGMENT
??_R0?AUSK_IVariableListener@@@8 DD FLAT:??_7type_info@@6B@ ; SK_IVariableListener `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSK_IVariableListener@@', 00H
data$r	ENDS
;	COMDAT ??_R4SK_IVariableListener@@6B@
rdata$r	SEGMENT
??_R4SK_IVariableListener@@6B@ DD 00H			; SK_IVariableListener::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSK_IVariableListener@@@8
	DD	FLAT:??_R3SK_IVariableListener@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?first_run@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA
_DATA	SEGMENT
?first_run@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA DB 01H ; `SK_DetourWindowProc'::`2'::first_run
_DATA	ENDS
;	COMDAT ?first@?4??CallWndProc@@YGJHIJ@Z@4_NA
_DATA	SEGMENT
?first@?4??CallWndProc@@YGJHIJ@Z@4_NA DB 01H		; `CallWndProc'::`5'::first
_DATA	ENDS
;	COMDAT ??_C@_1DI@IICFDCMK@?$AA?$FL?$AAC?$AAu?$AAr?$AAs?$AAo?$AAr?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAl?$AAi?$AAp?$AA?5?$AAR?$AAe?$AAc?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@IICFDCMK@?$AA?$FL?$AAC?$AAu?$AAr?$AAs?$AAo?$AAr?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAl?$AAi?$AAp?$AA?5?$AAR?$AAe?$AAc?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AA@ DB '['
	DB	00H, 'C', 00H, 'u', 00H, 'r', 00H, 's', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' ', 00H, 'C'
	DB	00H, 'l', 00H, 'i', 00H, 'p', 00H, ' ', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@MJPBCAPJ@?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AA?$HL?$AAL?$AAe?$AAf?$AAt?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?0?$AA?5?$AAT?$AAo?$AAp?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?$HN?$AA?5?$AA?9?$AA?5?$AA?$HL?$AAW?$AAx?$AAH@
CONST	SEGMENT
??_C@_1FI@MJPBCAPJ@?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AA?$HL?$AAL?$AAe?$AAf?$AAt?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?0?$AA?5?$AAT?$AAo?$AAp?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?$HN?$AA?5?$AA?9?$AA?5?$AA?$HL?$AAW?$AAx?$AAH@ DB ' '
	DB	00H, '=', 00H, '>', 00H, ' ', 00H, '{', 00H, 'L', 00H, 'e', 00H
	DB	'f', 00H, 't', 00H, ':', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'i'
	DB	00H, ',', 00H, ' ', 00H, 'T', 00H, 'o', 00H, 'p', 00H, ':', 00H
	DB	' ', 00H, '%', 00H, 'l', 00H, 'i', 00H, '}', 00H, ' ', 00H, '-'
	DB	00H, ' ', 00H, '{', 00H, 'W', 00H, 'x', 00H, 'H', 00H, ':', 00H
	DB	' ', 00H, '%', 00H, 'l', 00H, 'i', 00H, 'x', 00H, '%', 00H, 'l'
	DB	00H, 'i', 00H, ')', 00H, 0aH, 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FDLGBABH@Window?4Fullscreen?51?$AA@
CONST	SEGMENT
??_C@_0BE@FDLGBABH@Window?4Fullscreen?51?$AA@ DB 'Window.Fullscreen 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@LBJEIGPM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAU?$AAn?$AAc?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC@
CONST	SEGMENT
??_C@_1EM@LBJEIGPM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAU?$AAn?$AAc?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC@ DB '['
	DB	00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' ', 00H, 'U'
	DB	00H, 'n', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'M', 00H, 'o'
	DB	00H, 'u', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'C', 00H, 'u', 00H
	DB	'r', 00H, 's', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@CGANLFJM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC?$AAu?$AAr@
CONST	SEGMENT
??_C@_1EI@CGANLFJM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC?$AAu?$AAr@ DB '['
	DB	00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	' ', 00H, 'M', 00H, 'g', 00H, 'r', 00H, ']', 00H, ' ', 00H, 'C'
	DB	00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'n', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'u', 00H, 's'
	DB	00H, 'e', 00H, ' ', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 's', 00H
	DB	'o', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KMBFFGAF@Window?4StaticRects?$AA@
CONST	SEGMENT
??_C@_0BD@KMBFFGAF@Window?4StaticRects?$AA@ DB 'Window.StaticRects', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CFGGDODG@Window?4ScaledYOffset?$AA@
CONST	SEGMENT
??_C@_0BF@CFGGDODG@Window?4ScaledYOffset?$AA@ DB 'Window.ScaledYOffset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OJMMDOKI@Window?4ScaledXOffset?$AA@
CONST	SEGMENT
??_C@_0BF@OJMMDOKI@Window?4ScaledXOffset?$AA@ DB 'Window.ScaledXOffset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BBMEHKHC@Window?4YOffset?$AA@
CONST	SEGMENT
??_C@_0P@BBMEHKHC@Window?4YOffset?$AA@ DB 'Window.YOffset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NNGOHKOM@Window?4XOffset?$AA@
CONST	SEGMENT
??_C@_0P@NNGOHKOM@Window?4XOffset?$AA@ DB 'Window.XOffset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HANFDLDO@Window?4OverrideMouse?$AA@
CONST	SEGMENT
??_C@_0BF@HANFDLDO@Window?4OverrideMouse?$AA@ DB 'Window.OverrideMouse', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IFGLFGEJ@Window?4OverrideRes?$AA@
CONST	SEGMENT
??_C@_0BD@IFGLFGEJ@Window?4OverrideRes?$AA@ DB 'Window.OverrideRes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GDDFCMGH@Window?4OverrideY?$AA@
CONST	SEGMENT
??_C@_0BB@GDDFCMGH@Window?4OverrideY?$AA@ DB 'Window.OverrideY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HKCOBNCG@Window?4OverrideX?$AA@
CONST	SEGMENT
??_C@_0BB@HKCOBNCG@Window?4OverrideX?$AA@ DB 'Window.OverrideX', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LIBOMBDO@Window?4Fullscreen?$AA@
CONST	SEGMENT
??_C@_0BC@LIBOMBDO@Window?4Fullscreen?$AA@ DB 'Window.Fullscreen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CAMIPBKP@Window?4Center?$AA@
CONST	SEGMENT
??_C@_0O@CAMIPBKP@Window?4Center?$AA@ DB 'Window.Center', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NEPDLABM@Window?4BackgroundMute?$AA@
CONST	SEGMENT
??_C@_0BG@NEPDLABM@Window?4BackgroundMute?$AA@ DB 'Window.BackgroundMute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HLDPMDDM@Window?4Borderless?$AA@
CONST	SEGMENT
??_C@_0BC@HLDPMDDM@Window?4Borderless?$AA@ DB 'Window.Borderless', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JIGKFJCF@Window?4ConfineCursor?$AA@
CONST	SEGMENT
??_C@_0BF@JIGKFJCF@Window?4ConfineCursor?$AA@ DB 'Window.ConfineCursor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LLAHAFKD@Window?4UnconfineCursor?$AA@
CONST	SEGMENT
??_C@_0BH@LLAHAFKD@Window?4UnconfineCursor?$AA@ DB 'Window.UnconfineCurso'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07DNODLGKM@INVALID?$AA@
CONST	SEGMENT
??_C@_07DNODLGKM@INVALID?$AA@ DB 'INVALID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OKCLCEKN@?$CFux?$CFu?$AA@
CONST	SEGMENT
??_C@_05OKCLCEKN@?$CFux?$CFu?$AA@ DB '%ux%u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EKKNCBFG@Window?4Fullscreen?50?$AA@
CONST	SEGMENT
??_C@_0BE@EKKNCBFG@Window?4Fullscreen?50?$AA@ DB 'Window.Fullscreen 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HBHJLNLC@?$CFlux?$CFlu?$AA@
CONST	SEGMENT
??_C@_07HBHJLNLC@?$CFlux?$CFlu?$AA@ DB '%lux%lu', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7SK_WindowManager@@6B@
CONST	SEGMENT
??_7SK_WindowManager@@6B@ DD FLAT:??_R4SK_WindowManager@@6B@ ; SK_WindowManager::`vftable'
	DD	FLAT:?OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z
CONST	ENDS
_DATA	SEGMENT
?last_mouse@@3U<unnamed-type-last_mouse>@@A DB 08H DUP (?)
	DB	01H					; last_mouse
	DB	3 DUP(00H)
	DD	00H
	DD	068993H
_DATA	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_DATA	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 04H DUP (?)
	DD	FLAT:___ImageBase			; ATL::_AtlComModule
	DD	FLAT:___pobjMapEntryFirst+4
	DD	FLAT:___pobjMapEntryLast
_DATA	ENDS
;	COMDAT ??_7SK_IVariableListener@@6B@
CONST	SEGMENT
??_7SK_IVariableListener@@6B@ DD FLAT:??_R4SK_IVariableListener@@6B@ ; SK_IVariableListener::`vftable'
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z$91 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z$2
__tryblocktable$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z$91
__unwindtable$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z$91 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z$2
__tryblocktable$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z$91
__unwindtable$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z$91 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z$2
__tryblocktable$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z$91
__unwindtable$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getInstance@SK_WindowManager@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getInstance@SK_WindowManager@@SAPAV1@XZ$0
__ehfuncinfo$?getInstance@SK_WindowManager@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getInstance@SK_WindowManager@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__Ewm_dispatch@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__Ewm_dispatch@@YAXXZ$0
__ehfuncinfo$??__Ewm_dispatch@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__Ewm_dispatch@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0window_message_dispatch_s@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0window_message_dispatch_s@@QAE@XZ$0
__ehfuncinfo$??0window_message_dispatch_s@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0window_message_dispatch_s@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z$49 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z$0
__unwindtable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z$49
__ehfuncinfo$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z$49 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z$0
__unwindtable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z$49
__ehfuncinfo$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__F_AtlComModule@ATL@@YAXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__F_AtlComModule@ATL@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z$0
__unwindtable$?SK_HookWinAPI@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_HookWinAPI@@YAXXZ$0
__sehtable$?SK_COMPAT_SafeCallProc@@YAJPAUsk_window_s@@PAUHWND__@@IIJ@Z DD 0ffffffffH
	DD	FLAT:$LN10@SK_COMPAT_
	DD	FLAT:$LN6@SK_COMPAT_
__ehfuncinfo$?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SK_HookWinAPI@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SK_HookWinAPI@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?wm_dispatch$initializer$@@3P6AXXZA DD FLAT:??__Ewm_dispatch@@YAXXZ ; wm_dispatch$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?game_window$initializer$@@3P6AXXZA DD FLAT:??__Egame_window@@YAXXZ ; game_window$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$get@$0A@ABQAUHWND__@@@std@@YAABQAUHWND__@@$$QAV?$tuple@ABQAUHWND__@@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@ABQAUHWND__@@@std@@YAABQAUHWND__@@$$QAV?$tuple@ABQAUHWND__@@@0@@Z PROC ; std::get<0,HWND__ * const &>, COMDAT

; 810  : 	{	// get rvalue reference to _Index element of tuple

	npad	2
	push	ebp
	mov	ebp, esp

; 811  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 812  : 		_Ttype;
; 813  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::type&&
; 814  : 		_RRtype;
; 815  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));

	mov	eax, DWORD PTR __Tuple$[ebp]
	mov	eax, DWORD PTR [eax]

; 816  : 	}

	pop	ebp
	ret	0
??$get@$0A@ABQAUHWND__@@@std@@YAABQAUHWND__@@$$QAV?$tuple@ABQAUHWND__@@@0@@Z ENDP ; std::get<0,HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$tuple@ABQAUHWND__@@@std@@@std@@YA$$QAV?$tuple@ABQAUHWND__@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$tuple@ABQAUHWND__@@@std@@@std@@YA$$QAV?$tuple@ABQAUHWND__@@@0@AAV10@@Z PROC ; std::move<std::tuple<HWND__ * const &> &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$tuple@ABQAUHWND__@@@std@@@std@@YA$$QAV?$tuple@ABQAUHWND__@@@0@AAV10@@Z ENDP ; std::move<std::tuple<HWND__ * const &> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0V?$tuple@ABQAUHWND__@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAUHWND__@@_N@std@@QAE@AAV?$tuple@ABQAUHWND__@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABQAUHWND__@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAUHWND__@@_N@std@@QAE@AAV?$tuple@ABQAUHWND__@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<HWND__ * const,bool>::pair<HWND__ * const,bool><std::tuple<HWND__ * const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 1140 : 		{	// construct from pair of tuples

	npad	2
	push	ebp
	mov	ebp, esp

; 815  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]

; 816  : 	}
; 817  : 
; 818  : template<size_t _Index,
; 819  : 	class... _Types> inline
; 820  : 	constexpr const typename tuple_element<_Index, tuple<_Types...> >::type&&
; 821  : 		get(const tuple<_Types...>&& _Tuple) _NOEXCEPT
; 822  : 	{	// get const rvalue reference to _Index element of tuple
; 823  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 824  : 		_Ttype;
; 825  : 	typedef const typename tuple_element<_Index, tuple<_Types...> >::type&&
; 826  : 		_RRtype;
; 827  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));
; 828  : 	}
; 829  : 
; 830  : 	// TEMPLATE FUNCTION get (by type)
; 831  : template<class _Ty,
; 832  : 	class... _Types> inline
; 833  : 	constexpr _Ty& get(tuple<_Types...>& _Tuple) _NOEXCEPT
; 834  : 	{	// get reference to _Ty element of tuple
; 835  : 	typedef typename _Tuple_element<_Ty, tuple<_Types...> >::_Ttype _Ttype;
; 836  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);
; 837  : 	}
; 838  : 
; 839  : template<class _Ty,
; 840  : 	class... _Types> inline
; 841  : 	constexpr const _Ty& get(const tuple<_Types...>& _Tuple) _NOEXCEPT
; 842  : 	{	// get const reference to _Ty element of tuple
; 843  : 	typedef typename _Tuple_element<_Ty, tuple<_Types...> >::_Ttype _Ttype;
; 844  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);
; 845  : 	}
; 846  : 
; 847  : template<class _Ty,
; 848  : 	class... _Types> inline
; 849  : 	constexpr _Ty&& get(tuple<_Types...>&& _Tuple) _NOEXCEPT
; 850  : 	{	// get rvalue reference to _Ty element of tuple
; 851  : 	typedef typename _Tuple_element<_Ty, tuple<_Types...> >::_Ttype _Ttype;
; 852  : 	return (_STD forward<_Ty&&>(((_Ttype&)_Tuple)._Myfirst._Val));
; 853  : 	}
; 854  : 
; 855  : template<class _Ty,
; 856  : 	class... _Types> inline
; 857  : 	constexpr const _Ty&& get(const tuple<_Types...>&& _Tuple) _NOEXCEPT
; 858  : 	{	// get const rvalue reference to _Ty element of tuple
; 859  : 	typedef typename _Tuple_element<_Ty, tuple<_Types...> >::_Ttype _Ttype;
; 860  : 	return (_STD forward<const _Ty&&>(((_Ttype&)_Tuple)._Myfirst._Val));
; 861  : 	}
; 862  : 
; 863  : 	// CONSTRUCTOR TEMPLATES FOR tuple
; 864  : template<class _This,
; 865  : 	class... _Rest>
; 866  : 	template<class _Tag,
; 867  : 		class _Tpl,
; 868  : 		size_t... _Indices,
; 869  : 		enable_if_t<is_same<_Tag, _Unpack_tuple_t>::value, int>> inline
; 870  : 		constexpr tuple<_This, _Rest...>::tuple(_Tag, _Tpl&& _Right, index_sequence<_Indices...>)
; 871  : 		: tuple(_Exact_args_t{}, _STD get<_Indices>(_STD forward<_Tpl>(_Right))...)
; 872  : 		{	// construct from unpacking a tuple/pair, using get<I>()
; 873  : 		}
; 874  : 
; 875  : template<class _This,
; 876  : 	class... _Rest>
; 877  : 	template<class _Tag,
; 878  : 		class _Alloc,
; 879  : 		class _Tpl,
; 880  : 		size_t... _Indices,
; 881  : 		enable_if_t<is_same<_Tag, _Alloc_unpack_tuple_t>::value, int>> inline
; 882  : 		tuple<_This, _Rest...>::tuple(_Tag, const _Alloc& _Al, _Tpl&& _Right, index_sequence<_Indices...>)
; 883  : 		: tuple(_Alloc_exact_args_t{}, _Al, _STD get<_Indices>(_STD forward<_Tpl>(_Right))...)
; 884  : 		{	// construct from an allocator and unpacking a tuple/pair, using get<I>()
; 885  : 		}
; 886  : 
; 887  : 	// TEMPLATE FUNCTION make_tuple
; 888  : template<class... _Types> inline
; 889  : 	constexpr tuple<typename _Unrefwrap<_Types>::type...>
; 890  : 		make_tuple(_Types&&... _Args)
; 891  : 	{	// make tuple from elements
; 892  : 	typedef tuple<typename _Unrefwrap<_Types>::type...> _Ttype;
; 893  : 	return (_Ttype(_STD forward<_Types>(_Args)...));
; 894  : 	}
; 895  : 
; 896  : 	// TEMPLATE FUNCTION tie
; 897  : template<class... _Types> inline
; 898  : 	constexpr tuple<_Types&...>
; 899  : 		tie(_Types&... _Args) _NOEXCEPT
; 900  : 	{	// make tuple from elements
; 901  : 	typedef tuple<_Types&...> _Ttype;
; 902  : 	return (_Ttype(_Args...));
; 903  : 	}
; 904  : 
; 905  : 
; 906  : 	// TEMPLATE FUNCTION forward_as_tuple
; 907  : 
; 908  : template<class... _Types> inline
; 909  : 	constexpr tuple<_Types&&...>
; 910  : 		forward_as_tuple(_Types&&... _Args) _NOEXCEPT
; 911  : 	{	// forward arguments in a tuple
; 912  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));
; 913  : 	}
; 914  : 
; 915  : 
; 916  : 	// TEMPLATE STRUCT _Cat_sequences
; 917  : template<class _Seq_type1,
; 918  : 	class _Seq_type2>
; 919  : 	struct _Cat_sequences;
; 920  : 
; 921  : template<size_t... _Indexes1,
; 922  : 	size_t... _Indexes2>
; 923  : 	struct _Cat_sequences<index_sequence<_Indexes1...>,
; 924  : 		index_sequence<_Indexes2...> >
; 925  : 	{	// concatenates two index_sequence types
; 926  : 	typedef index_sequence<_Indexes1..., _Indexes2...> type;
; 927  : 	};
; 928  : 
; 929  : 	// FORWARD DECLARATIONS
; 930  : template<class _Ty,
; 931  : 	size_t _Size>
; 932  : 	class array;
; 933  : 
; 934  : template<size_t _Idx,
; 935  : 	class _Ty,
; 936  : 	size_t _Size>
; 937  : 	constexpr _Ty& get(array<_Ty, _Size>& _Arr) _NOEXCEPT;
; 938  : 
; 939  : template<size_t _Idx,
; 940  : 	class _Ty,
; 941  : 	size_t _Size>
; 942  : 	constexpr const _Ty& get(const array<_Ty, _Size>& _Arr) _NOEXCEPT;
; 943  : 
; 944  : template<size_t _Idx,
; 945  : 	class _Ty,
; 946  : 	size_t _Size>
; 947  : 	constexpr _Ty&& get(array<_Ty, _Size>&& _Arr) _NOEXCEPT;
; 948  : 
; 949  : 	// TEMPLATE STRUCT _View_as_tuple
; 950  : template<class _Ty,
; 951  : 	class... _For_array>
; 952  : 	struct _View_as_tuple
; 953  : 	{	// tuple_cat() supports only tuples, pairs, and arrays
; 954  : 	static_assert(_Always_false<_Ty>::value,
; 955  : 		"Unsupported tuple_cat arguments.");
; 956  : 	};
; 957  : 
; 958  : template<class... _Types>
; 959  : 	struct _View_as_tuple<tuple<_Types...> >
; 960  : 	{	// view a tuple as a tuple
; 961  : 	typedef tuple<_Types...> type;
; 962  : 	};
; 963  : 
; 964  : template<class _Ty1,
; 965  : 	class _Ty2>
; 966  : 	struct _View_as_tuple<pair<_Ty1, _Ty2> >
; 967  : 	{	// view a pair as a tuple
; 968  : 	typedef tuple<_Ty1, _Ty2> type;
; 969  : 	};
; 970  : 
; 971  : template<class _Ty,
; 972  : 	class... _Types>
; 973  : 	struct _View_as_tuple<array<_Ty, 0>, _Types...>
; 974  : 	{	// view an array as a tuple; ends recursion at 0
; 975  : 	typedef tuple<_Types...> type;
; 976  : 	};
; 977  : 
; 978  : template<class _Ty,
; 979  : 	size_t _Size,
; 980  : 	class... _Types>
; 981  : 	struct _View_as_tuple<array<_Ty, _Size>, _Types...>
; 982  : 		: _View_as_tuple<array<_Ty, _Size - 1>, _Ty, _Types...>
; 983  : 	{	// view an array as a tuple; counts down to 0
; 984  : 	};
; 985  : 
; 986  : 	// TEMPLATE STRUCT _Repeat_for
; 987  : template<size_t _Nx,
; 988  : 	class _Ty>
; 989  : 	struct _Repeat_for
; 990  : 		: integral_constant<size_t, _Nx>
; 991  : 	{	// repeats _Nx for each _Ty in a parameter pack
; 992  : 	};
; 993  : 
; 994  : 	// TEMPLATE FUNCTION tuple_cat
; 995  : template<class _Ret,
; 996  : 	class _Kx_arg,
; 997  : 	class _Ix_arg,
; 998  : 	size_t _Ix_next,
; 999  : 	class... _Tuples>
; 1000 : 	struct _Tuple_cat2
; 1001 : 	{	// determine tuple_cat's return type and _Kx/_Ix indices
; 1002 : 	static_assert(sizeof...(_Tuples) == 0,
; 1003 : 		"Unsupported tuple_cat arguments.");
; 1004 : 	typedef _Ret type;
; 1005 : 	typedef _Kx_arg _Kx_arg_seq;
; 1006 : 	typedef _Ix_arg _Ix_arg_seq;
; 1007 : 	};
; 1008 : 
; 1009 : template<class... _Types1,
; 1010 : 	class _Kx_arg,
; 1011 : 	size_t... _Ix,
; 1012 : 	size_t _Ix_next,
; 1013 : 	class... _Types2,
; 1014 : 	class... _Rest>
; 1015 : 	struct _Tuple_cat2<tuple<_Types1...>, _Kx_arg,
; 1016 : 		index_sequence<_Ix...>, _Ix_next,
; 1017 : 		tuple<_Types2...>, _Rest...>
; 1018 : 		: _Tuple_cat2<
; 1019 : 			tuple<_Types1..., _Types2...>,
; 1020 : 			typename _Cat_sequences<_Kx_arg, index_sequence_for<_Types2...>>::type,
; 1021 : 			index_sequence<_Ix..., _Repeat_for<_Ix_next, _Types2>::value...>,
; 1022 : 			_Ix_next + 1,
; 1023 : 			_Rest...>
; 1024 : 	{	// determine tuple_cat's return type and _Kx/_Ix indices
; 1025 : 	};
; 1026 : 
; 1027 : template<class... _Tuples>
; 1028 : 	struct _Tuple_cat1
; 1029 : 		: _Tuple_cat2<tuple<>, index_sequence<>,
; 1030 : 				index_sequence<>, 0,
; 1031 : 			typename _View_as_tuple<typename decay<_Tuples>::type>::type...>
; 1032 : 	{	// prepare to determine tuple_cat's return type and _Kx/_Ix indices
; 1033 : 	};
; 1034 : 
; 1035 : #pragma warning(push)
; 1036 : #pragma warning(disable: 4100)	// TRANSITION, VSO#181496, unreferenced formal parameter
; 1037 : template<class _Ret,
; 1038 : 	size_t... _Kx,
; 1039 : 	size_t... _Ix,
; 1040 : 	class _Ty> inline
; 1041 : 	constexpr _Ret _Tuple_cat(index_sequence<_Kx...>,
; 1042 : 		index_sequence<_Ix...>, _Ty&& _Arg)
; 1043 : 	{	// concatenate tuples
; 1044 : 	return (_Ret(_STD get<_Kx>(_STD get<_Ix>(_STD forward<_Ty>(_Arg)))...));
; 1045 : 	}
; 1046 : #pragma warning(pop)
; 1047 : 
; 1048 : template<class... _Tuples> inline
; 1049 : 	constexpr typename _Tuple_cat1<_Tuples...>::type
; 1050 : 		tuple_cat(_Tuples&&... _Tpls)
; 1051 : 	{	// concatenate tuples
; 1052 : 	typedef _Tuple_cat1<_Tuples...> _Cat1;
; 1053 : 	return (_Tuple_cat<typename _Cat1::type>(
; 1054 : 		typename _Cat1::_Kx_arg_seq(), typename _Cat1::_Ix_arg_seq(),
; 1055 : 		_STD forward_as_tuple(_STD forward<_Tuples>(_Tpls)...)));
; 1056 : 	}
; 1057 : 
; 1058 : #if _HAS_CXX17
; 1059 : 	// FUNCTION TEMPLATE apply
; 1060 : #pragma warning(push)
; 1061 : #pragma warning(disable: 4100)	// TRANSITION, VSO#181496, unreferenced formal parameter
; 1062 : template<class _Callable,
; 1063 : 	class _Tuple,
; 1064 : 	size_t... _Indices>
; 1065 : 	constexpr decltype(auto) _Apply_impl(_Callable&& _Obj, _Tuple&& _Tpl, index_sequence<_Indices...>)
; 1066 : 	{	// invoke _Obj with the elements of _Tpl
; 1067 : 	return (_C_invoke(_STD forward<_Callable>(_Obj), _STD get<_Indices>(_STD forward<_Tuple>(_Tpl))...));
; 1068 : 	}
; 1069 : #pragma warning(pop)
; 1070 : 
; 1071 : template<class _Callable,
; 1072 : 	class _Tuple>
; 1073 : 	constexpr decltype(auto) apply(_Callable&& _Obj, _Tuple&& _Tpl)
; 1074 : 	{	// invoke _Obj with the elements of _Tpl
; 1075 : 	return (_Apply_impl(_STD forward<_Callable>(_Obj), _STD forward<_Tuple>(_Tpl),
; 1076 : 		make_index_sequence<tuple_size_v<decay_t<_Tuple>>>{}));
; 1077 : 	}
; 1078 : 
; 1079 : 	// FUNCTION TEMPLATE make_from_tuple
; 1080 : #pragma warning(push)
; 1081 : #pragma warning(disable: 4100)	// TRANSITION, VSO#181496, unreferenced formal parameter
; 1082 : template<class _Ty,
; 1083 : 	class _Tuple,
; 1084 : 	size_t... _Indices>
; 1085 : 	constexpr _Ty _Make_from_tuple_impl(_Tuple&& _Tpl, index_sequence<_Indices...>)
; 1086 : 	{	// construct _Ty from the elements of _Tpl
; 1087 : 	return (_Ty(_STD get<_Indices>(_STD forward<_Tuple>(_Tpl))...));
; 1088 : 	}
; 1089 : #pragma warning(pop)
; 1090 : 
; 1091 : template<class _Ty,
; 1092 : 	class _Tuple>
; 1093 : 	constexpr _Ty make_from_tuple(_Tuple&& _Tpl)
; 1094 : 	{	// construct _Ty from the elements of _Tpl
; 1095 : 	return (_Make_from_tuple_impl<_Ty>(_STD forward<_Tuple>(_Tpl),
; 1096 : 		make_index_sequence<tuple_size_v<decay_t<_Tuple>>>{}));
; 1097 : 	}
; 1098 : #endif /* _HAS_CXX17 */
; 1099 : 
; 1100 : 	// FUNCTION TEMPLATE _For_each_tuple_element
; 1101 : template<class _Tpl,
; 1102 : 	class _Fx,
; 1103 : 	size_t... _Indices> inline
; 1104 : 	void _For_each_tuple_element_impl(_Tpl&& _Tuple,
; 1105 : 		_Fx _Func, index_sequence<_Indices...>)
; 1106 : 	{	// call _Func() on the _Indices elements of _Tuple
; 1107 : 	int _Ignored[] = { (static_cast<void>(_Func(
; 1108 : 		_STD get<_Indices>(_STD forward<_Tpl>(_Tuple))
; 1109 : 		)), 0)... };
; 1110 : 	(void)_Ignored;
; 1111 : 	}
; 1112 : 
; 1113 : template<class _Tpl,
; 1114 : 	class _Fx> inline
; 1115 : 	void _For_each_tuple_element(_Tpl&& _Tuple, _Fx _Func)
; 1116 : 	{	// call _Func() on each element in _Tuple
; 1117 : 	_For_each_tuple_element_impl(
; 1118 : 		_STD forward<_Tpl>(_Tuple),
; 1119 : 		_Func,
; 1120 : 		make_index_sequence<tuple_size<remove_reference_t<_Tpl>>::value>()
; 1121 : 		);
; 1122 : 	}
; 1123 : 
; 1124 : 
; 1125 : #pragma warning(push)
; 1126 : #pragma warning(disable: 4100)	// TRANSITION, VSO#181496, unreferenced formal parameter
; 1127 : 	// TEMPLATE CONSTRUCTOR pair::pair(tuple, tuple, sequence, sequence)
; 1128 : template<class _Ty1,
; 1129 : 	class _Ty2>
; 1130 : 	template<class _Tuple1,
; 1131 : 		class _Tuple2,
; 1132 : 		size_t... _Indexes1,
; 1133 : 		size_t... _Indexes2> inline
; 1134 : 		pair<_Ty1, _Ty2>::pair(_Tuple1& _Val1,
; 1135 : 			_Tuple2& _Val2,
; 1136 : 			index_sequence<_Indexes1...>,
; 1137 : 			index_sequence<_Indexes2...>)
; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1141 : 		}

	mov	eax, ecx
	mov	BYTE PTR [ecx+4], 0
	pop	ebp
	ret	16					; 00000010H
??$?0V?$tuple@ABQAUHWND__@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAUHWND__@@_N@std@@QAE@AAV?$tuple@ABQAUHWND__@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<HWND__ * const,bool>::pair<HWND__ * const,bool><std::tuple<HWND__ * const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0ABQAUHWND__@@$$Z$$V@?$pair@QAUHWND__@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAUHWND__@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABQAUHWND__@@$$Z$$V@?$pair@QAUHWND__@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAUHWND__@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<HWND__ * const,bool>::pair<HWND__ * const,bool><HWND__ * const &>, COMDAT
; _this$ = ecx

; 1155 : 		{	// construct from pair of tuples

	npad	2
	push	ebp
	mov	ebp, esp

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1156 : 		}

	mov	eax, ecx

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	BYTE PTR [ecx+4], 0

; 1156 : 		}

	pop	ebp
	ret	12					; 0000000cH
??$?0ABQAUHWND__@@$$Z$$V@?$pair@QAUHWND__@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAUHWND__@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<HWND__ * const,bool>::pair<HWND__ * const,bool><HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 6100 : #endif

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	BYTE PTR [ecx+4], 0
$LN3@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 841  : 		}

	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN14@construct
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 6100 : #endif

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	BYTE PTR [ecx+4], 0
$LN14@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 960  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN25@construct
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 6100 : #endif

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	BYTE PTR [ecx+4], 0
$LN25@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1098 : 		}

	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@QAUHWND__@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::pair<HWND__ * const,bool>,std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z PROC ; std::allocator<std::_List_node<HWND__ *,void *> >::construct<HWND__ *,HWND__ * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAUHWND__@@AAPAU1@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ENDP ; std::allocator<std::_List_node<HWND__ *,void *> >::construct<HWND__ *,HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
_<_Val_1>$ = 20						; size = 4
_<_Val_2>$ = 24						; size = 4
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 847  : 		{	// allocate a node and set links and value

	npad	2
	push	ebp
	mov	ebp, esp

; 848  : 		_Nodeptr _Pnode = this->_Buynode0(_Next, _Prev);

	push	DWORD PTR __Prev$[ebp]
	push	DWORD PTR __Next$[ebp]
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	edx, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	edx, edx
	je	SHORT $LN54@Buynode
; File c:\users\andon\source\repos\specialk\src\window.cpp

	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	mov	ecx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], ecx

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	BYTE PTR [edx+4], 0
$LN54@Buynode:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 860  : 		}

	pop	ebp
	ret	20					; 00000014H
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0ABQAUHWND__@@@?$_Tuple_val@ABQAUHWND__@@@std@@QAE@ABQAUHWND__@@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$?0ABQAUHWND__@@@?$_Tuple_val@ABQAUHWND__@@@std@@QAE@ABQAUHWND__@@@Z PROC ; std::_Tuple_val<HWND__ * const &>::_Tuple_val<HWND__ * const &><HWND__ * const &>, COMDAT
; _this$ = ecx

; 165  : 		{	// construct with argument

	npad	2
	push	ebp
	mov	ebp, esp

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __Arg$[ebp]
	mov	DWORD PTR [ecx], eax

; 166  : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0ABQAUHWND__@@@?$_Tuple_val@ABQAUHWND__@@@std@@QAE@ABQAUHWND__@@@Z ENDP ; std::_Tuple_val<HWND__ * const &>::_Tuple_val<HWND__ * const &><HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT
; _this$ = ecx

; 250  : 		}

	mov	eax, ecx
	ret	4
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<HWND__ *,void *> >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<HWND__ *,void *> >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Construct1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV41@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Construct1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV41@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Construct1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 709  : 		{	// construct _Ty(_Types...) at _Ptr, default version

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Construct1
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@Construct1:

; 711  : 			_Ty(_STD forward<_Types>(_Args)...);
; 712  : 		}

	pop	ebp
	ret	0
??$_Construct1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV41@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Construct1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV41@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV41@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 709  : 		{	// construct _Ty(_Types...) at _Ptr, default version

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Construct1
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@Construct1:

; 711  : 			_Ty(_STD forward<_Types>(_Args)...);
; 712  : 		}

	pop	ebp
	ret	0
??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV41@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Construct1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV41@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Construct1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV41@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Construct1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>, COMDAT

; 709  : 		{	// construct _Ty(_Types...) at _Ptr, default version

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Construct1
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@Construct1:

; 711  : 			_Ty(_STD forward<_Types>(_Args)...);
; 712  : 		}

	pop	ebp
	ret	0
??$_Construct1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV41@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Construct1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV41@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV41@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>, COMDAT

; 709  : 		{	// construct _Ty(_Types...) at _Ptr, default version

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Construct1
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@Construct1:

; 711  : 			_Ty(_STD forward<_Types>(_Args)...);
; 712  : 		}

	pop	ebp
	ret	0
??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV41@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@U?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Destroy1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@U?$integral_constant@_N$00@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Destroy1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 734  : 		_Ptr->~_Ty();
; 735  : 		}

	ret	0
??$_Destroy1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@U?$integral_constant@_N$00@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Destroy1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@U?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Destroy1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@U?$integral_constant@_N$00@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Destroy1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 734  : 		_Ptr->~_Ty();
; 735  : 		}

	ret	0
??$_Destroy1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@U?$integral_constant@_N$00@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Destroy1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0U?$pair@QAUHWND__@@_N@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@QAUHWND__@@_N@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> ><std::pair<HWND__ * const,bool> >, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0U?$pair@QAUHWND__@@_N@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> ><std::pair<HWND__ * const,bool> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0PAUHWND__@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAUHWND__@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::allocator<std::_List_node<HWND__ *,void *> >::allocator<std::_List_node<HWND__ *,void *> ><HWND__ *>, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0PAUHWND__@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::allocator<std::_List_node<HWND__ *,void *> >::allocator<std::_List_node<HWND__ *,void *> ><HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@QAUHWND__@@_N@std@@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@AAU?$pair@QAUHWND__@@_N@1@V21@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
__Plist$ = 16						; size = 4
??$_Buynode_if_nil@AAU?$pair@QAUHWND__@@_N@std@@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@AAU?$pair@QAUHWND__@@_N@1@V21@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Buynode_if_nil<std::pair<HWND__ * const,bool> &>, COMDAT
; _this$ = ecx

; 738  : 		{	// node exists, just return it

	npad	2
	push	ebp
	mov	ebp, esp

; 739  : 		return (_Plist);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx

; 740  : 		}

	pop	ebp
	ret	12					; 0000000cH
??$_Buynode_if_nil@AAU?$pair@QAUHWND__@@_N@std@@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@AAU?$pair@QAUHWND__@@_N@1@V21@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Buynode_if_nil<std::pair<HWND__ * const,bool> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$pair@QAUHWND__@@_N@std@@@std@@YAAAU?$pair@QAUHWND__@@_N@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@QAUHWND__@@_N@std@@@std@@YAAAU?$pair@QAUHWND__@@_N@0@AAU10@@Z PROC ; std::forward<std::pair<HWND__ * const,bool> &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$pair@QAUHWND__@@_N@std@@@std@@YAAAU?$pair@QAUHWND__@@_N@0@AAU10@@Z ENDP ; std::forward<std::pair<HWND__ * const,bool> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
_<_Val_1>$ = 16						; size = 4
_<_Val_2>$ = 20						; size = 4
??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Insert<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1082 : 		{	// insert element at _Where

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	esi, DWORD PTR __Where$[ebp]
	push	edi

; 1083 : 		_Nodeptr _Pnode = _Where._Mynode();
; 1084 : 		_Nodeptr _Newnode =
; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_2>$[ebp]
	mov	edi, ecx
	push	DWORD PTR _<_Val_1>$[ebp]
	push	DWORD PTR _<_Val_0>$[ebp]
	push	DWORD PTR [esi+4]
	push	esi
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 268435454				; 0ffffffeH
	mov	eax, DWORD PTR [edi+4]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN19@Insert

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN72@Insert:
$LN19@Insert:

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [edi+4], eax

; 1086 : 				_STD forward<_Valty>(_Val)...);
; 1087 : 		_Incsize(1);
; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [esi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]
	pop	edi
	pop	esi

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 1090 : 		}

	pop	ebp
	ret	16					; 00000010H
$LN71@Insert:
??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Insert<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@ABQAUHWND__@@$$V$0A@@?$tuple@ABQAUHWND__@@@std@@QAE@U_Exact_args_t@1@ABQAUHWND__@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
??$?0U_Exact_args_t@std@@ABQAUHWND__@@$$V$0A@@?$tuple@ABQAUHWND__@@@std@@QAE@U_Exact_args_t@1@ABQAUHWND__@@@Z PROC ; std::tuple<HWND__ * const &>::tuple<HWND__ * const &><std::_Exact_args_t,HWND__ * const &,0>, COMDAT
; _this$ = ecx

; 292  : 		{	// construct from one arg per element

	npad	2
	push	ebp
	mov	ebp, esp

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __This_arg$[ebp]
	mov	DWORD PTR [ecx], eax

; 293  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0U_Exact_args_t@std@@ABQAUHWND__@@$$V$0A@@?$tuple@ABQAUHWND__@@@std@@QAE@U_Exact_args_t@1@ABQAUHWND__@@@Z ENDP ; std::tuple<HWND__ * const &>::tuple<HWND__ * const &><std::_Exact_args_t,HWND__ * const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Buynode_if_nil@ABQAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABQAUHWND__@@V21@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
__Plist$ = 16						; size = 4
??$_Buynode_if_nil@ABQAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABQAUHWND__@@V21@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * const &>, COMDAT
; _this$ = ecx

; 738  : 		{	// node exists, just return it

	npad	2
	push	ebp
	mov	ebp, esp

; 739  : 		return (_Plist);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx

; 740  : 		}

	pop	ebp
	ret	12					; 0000000cH
??$_Buynode_if_nil@ABQAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABQAUHWND__@@V21@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@PAUHWND__@@PAX@std@@@std@@YAAAPAU?$_List_node@PAUHWND__@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@PAUHWND__@@PAX@std@@@std@@YAAAPAU?$_List_node@PAUHWND__@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<HWND__ *,void *> * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@PAUHWND__@@PAX@std@@@std@@YAAAPAU?$_List_node@PAUHWND__@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<HWND__ *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 726  : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 727  : 		_Construct1(_Uses_default_construct_t<_Unwrap_alloc_t<_Alloc>, _Ty *, _Types...>(),
; 728  : 			_Al, _Ptr, _STD forward<_Types>(_Args)...);
; 729  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 726  : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 727  : 		_Construct1(_Uses_default_construct_t<_Unwrap_alloc_t<_Alloc>, _Ty *, _Types...>(),
; 728  : 			_Al, _Ptr, _STD forward<_Types>(_Args)...);
; 729  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z PROC ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ENDP ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>, COMDAT

; 726  : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 727  : 		_Construct1(_Uses_default_construct_t<_Unwrap_alloc_t<_Alloc>, _Ty *, _Types...>(),
; 728  : 			_Al, _Ptr, _STD forward<_Types>(_Args)...);
; 729  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>, COMDAT

; 726  : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 727  : 		_Construct1(_Uses_default_construct_t<_Unwrap_alloc_t<_Alloc>, _Ty *, _Types...>(),
; 728  : 			_Al, _Ptr, _STD forward<_Types>(_Args)...);
; 729  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 746  : 		_Destroy1(_Al, _Ptr, _Uses_default_destroy_t<_Unwrap_alloc_t<_Alloc>, _Ty *>());
; 747  : 		}

	ret	0
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 746  : 		_Destroy1(_Al, _Ptr, _Uses_default_destroy_t<_Unwrap_alloc_t<_Alloc>, _Ty *>());
; 747  : 		}

	ret	0
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > ><std::allocator<std::pair<HWND__ * const,bool> > const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > ><std::allocator<std::pair<HWND__ * const,bool> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABV?$allocator@PAUHWND__@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABV?$allocator@PAUHWND__@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > ><std::allocator<HWND__ *> const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABV?$allocator@PAUHWND__@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > ><std::allocator<HWND__ *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Plist$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T2 = 8							; size = 4
___$ReturnUdt$ = 8					; size = 4
tv1596 = 12						; size = 4
$T3 = 12						; size = 4
__Val$ = 12						; size = 4
__Pnode$ = 16						; size = 4
??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert<std::pair<HWND__ * const,bool> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT
; _this$ = ecx

; 761  : 		{	// try to insert existing node with value _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edi, DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 761  : 		{	// try to insert existing node with value _Val

	mov	ebx, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ebx

; 762  : 		size_type _Bucket;
; 763  : 		_Unchecked_iterator _Where;
; 764  : 
; 765  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi]
	xor	eax, -2128831035			; 811c9dc5H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	esi, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+2]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edi+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [ebx+24]
	and	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [esi+ecx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	edx, DWORD PTR [ecx*8]
	mov	DWORD PTR tv1596[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN45@Insert

; 847  : 			return (_Unchecked_end());

	mov	esi, DWORD PTR [ebx+4]
	jmp	SHORT $LN46@Insert
$LN45@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [esi+edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	esi, DWORD PTR [esi]
$LN46@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	je	SHORT $LN3@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [edi]
	npad	1
$LL2@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	esi, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	cmp	ecx, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 772  : 			if (_Traitsobj(_Traits::_Kfn(_Val),

	je	SHORT $LN6@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	jne	SHORT $LL2@Insert
$LN3@Insert:

; 739  : 		return (_Plist);

	mov	edi, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Plist$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [edi]

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 799  : 		if (_Where != ++_Next)	// move element into place

	je	SHORT $LN10@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edi+4]

; 1910 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =

	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [eax+4]

; 1912 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =

	mov	DWORD PTR [ecx], esi

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [esi+4]

; 1914 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =

	mov	DWORD PTR [ecx], edi

; 1915 : 			_First._Mynode();
; 1916 : 
; 1917 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	mov	edx, DWORD PTR [esi+4]

; 1918 : 		this->_Prevnode(_Where._Mynode()) =

	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], ecx

; 1919 : 			this->_Prevnode(_Last._Mynode());
; 1920 : 		this->_Prevnode(_Last._Mynode()) =

	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx

; 1921 : 			this->_Prevnode(_First._Mynode());
; 1922 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	mov	DWORD PTR [edi+4], edx
	mov	edx, DWORD PTR tv1596[ebp]
$LN10@Insert:

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR [ebx+12]
	add	ecx, edx
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 883  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN465@Insert

; 884  : 			{	// make bucket non-empty
; 885  : 			_Vec_lo(_Bucket) = _Plist;

	mov	DWORD PTR [ecx], edi

; 886  : 			_Vec_hi(_Bucket) = _Plist;

	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [eax+edx+4], edi

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jmp	SHORT $LN469@Insert
$LN6@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 96   : 		return (_Ptr);

	mov	edx, DWORD PTR __Pnode$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edx+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN465@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jne	SHORT $LN467@Insert

; 889  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	DWORD PTR [ecx], edi

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	jmp	SHORT $LN469@Insert
$LN467@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	je	SHORT $LN469@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx+edx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+edx+4], eax
$LN469@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 805  : 		_Check_size();

	mov	ecx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Check_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Check_size
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z$2:

; 806  : 		_CATCH_ALL
; 807  : 		erase(_Make_iter(_Plist));

	push	DWORD PTR __Plist$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Make_iter
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?erase@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::erase

; 808  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN655@Insert:
$LN654@Insert:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert<std::pair<HWND__ * const,bool> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
_<_Val_2>$ = 16						; size = 4
??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::emplace_front<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1055 : 		{	// insert element at beginning

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_2>$[ebp]

; 1055 : 		{	// insert element at beginning

	mov	esi, ecx

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_1>$[ebp]
	push	DWORD PTR _<_Val_0>$[ebp]

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [esi]

; 96   : 		return (_Ptr);

	mov	edi, DWORD PTR [eax]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 268435454				; 0ffffffeH
	mov	eax, DWORD PTR [esi+4]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN60@emplace_fr

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN114@emplace_fr:
$LN60@emplace_fr:

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [esi+4], eax

; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]
	pop	edi
	pop	esi

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 1056 : 		_Insert(_Unchecked_begin(), _STD forward<_Valty>(_Val)...);
; 1057 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN113@emplace_fr:
??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::emplace_front<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$tuple@ABQAUHWND__@@@std@@@std@@YA$$QAV?$tuple@ABQAUHWND__@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@ABQAUHWND__@@@std@@@std@@YA$$QAV?$tuple@ABQAUHWND__@@@0@AAV10@@Z PROC ; std::forward<std::tuple<HWND__ * const &> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$tuple@ABQAUHWND__@@@std@@@std@@YA$$QAV?$tuple@ABQAUHWND__@@@0@AAV10@@Z ENDP ; std::forward<std::tuple<HWND__ * const &> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0ABQAUHWND__@@$0A@@?$tuple@ABQAUHWND__@@@std@@QAE@ABQAUHWND__@@@Z
_TEXT	SEGMENT
__This_arg$ = 8						; size = 4
??$?0ABQAUHWND__@@$0A@@?$tuple@ABQAUHWND__@@@std@@QAE@ABQAUHWND__@@@Z PROC ; std::tuple<HWND__ * const &>::tuple<HWND__ * const &><HWND__ * const &,0>, COMDAT
; _this$ = ecx

; 386  : 		{	// construct from one or more copied elements

	npad	2
	push	ebp
	mov	ebp, esp

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __This_arg$[ebp]
	mov	DWORD PTR [ecx], eax

; 387  : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0ABQAUHWND__@@$0A@@?$tuple@ABQAUHWND__@@@std@@QAE@ABQAUHWND__@@@Z ENDP ; std::tuple<HWND__ * const &>::tuple<HWND__ * const &><HWND__ * const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z PROC ; std::forward<std::tuple<> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ENDP ; std::forward<std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z PROC ; std::forward<std::piecewise_construct_t const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ENDP ; std::forward<std::piecewise_construct_t const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$_Buynode@AAPAUHWND__@@@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@1@PAU21@0AAPAUHWND__@@@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
??$_Buynode@AAPAUHWND__@@@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@1@PAU21@0AAPAUHWND__@@@Z PROC ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Buynode<HWND__ * &>, COMDAT
; _this$ = ecx

; 847  : 		{	// allocate a node and set links and value

	npad	2
	push	ebp
	mov	ebp, esp

; 848  : 		_Nodeptr _Pnode = this->_Buynode0(_Next, _Prev);

	push	DWORD PTR __Prev$[ebp]
	push	DWORD PTR __Next$[ebp]
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	edx, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	edx, edx
	je	SHORT $LN36@Buynode
	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], ecx
$LN36@Buynode:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 860  : 		}

	pop	ebp
	ret	12					; 0000000cH
??$_Buynode@AAPAUHWND__@@@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@1@PAU21@0AAPAUHWND__@@@Z ENDP ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Buynode<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
;	COMDAT ??$_Kfn@QAUHWND__@@_N@?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@SAABQAUHWND__@@ABU?$pair@QAUHWND__@@_N@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@QAUHWND__@@_N@?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@SAABQAUHWND__@@ABU?$pair@QAUHWND__@@_N@1@@Z PROC ; std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>::_Kfn<HWND__ * const,bool>, COMDAT

; 66   : 		{	// extract key from element value

	npad	2
	push	ebp
	mov	ebp, esp

; 67   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 68   : 		}

	pop	ebp
	ret	0
??$_Kfn@QAUHWND__@@_N@?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@SAABQAUHWND__@@ABU?$pair@QAUHWND__@@_N@1@@Z ENDP ; std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>::_Kfn<HWND__ * const,bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::construct<std::_List_node<std::pair<HWND__ * const,bool>,void *> *,std::_List_node<std::pair<HWND__ * const,bool>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Plist$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T2 = 8							; size = 4
___$ReturnUdt$ = 8					; size = 4
tv1489 = 12						; size = 4
$T3 = 12						; size = 4
__Val$ = 12						; size = 4
__Pnode$ = 16						; size = 4
??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 761  : 		{	// try to insert existing node with value _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edi, DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 761  : 		{	// try to insert existing node with value _Val

	mov	ebx, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ebx

; 762  : 		size_type _Bucket;
; 763  : 		_Unchecked_iterator _Where;
; 764  : 
; 765  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi]
	xor	eax, -2128831035			; 811c9dc5H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	esi, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+2]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edi+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [ebx+24]
	and	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [esi+ecx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	edx, DWORD PTR [ecx*8]
	mov	DWORD PTR tv1489[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN43@Insert

; 847  : 			return (_Unchecked_end());

	mov	esi, DWORD PTR [ebx+4]
	jmp	SHORT $LN44@Insert
$LN43@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [esi+edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	esi, DWORD PTR [esi]
$LN44@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	je	SHORT $LN3@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [edi]
	npad	1
$LL2@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	esi, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	cmp	ecx, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 772  : 			if (_Traitsobj(_Traits::_Kfn(_Val),

	je	SHORT $LN6@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	jne	SHORT $LL2@Insert
$LN3@Insert:

; 739  : 		return (_Plist);

	mov	edi, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Plist$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [edi]

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 799  : 		if (_Where != ++_Next)	// move element into place

	je	SHORT $LN10@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edi+4]

; 1910 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =

	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [eax+4]

; 1912 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =

	mov	DWORD PTR [ecx], esi

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [esi+4]

; 1914 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =

	mov	DWORD PTR [ecx], edi

; 1915 : 			_First._Mynode();
; 1916 : 
; 1917 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	mov	edx, DWORD PTR [esi+4]

; 1918 : 		this->_Prevnode(_Where._Mynode()) =

	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], ecx

; 1919 : 			this->_Prevnode(_Last._Mynode());
; 1920 : 		this->_Prevnode(_Last._Mynode()) =

	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx

; 1921 : 			this->_Prevnode(_First._Mynode());
; 1922 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	mov	DWORD PTR [edi+4], edx
	mov	edx, DWORD PTR tv1489[ebp]
$LN10@Insert:

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR [ebx+12]
	add	ecx, edx
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 883  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN453@Insert

; 884  : 			{	// make bucket non-empty
; 885  : 			_Vec_lo(_Bucket) = _Plist;

	mov	DWORD PTR [ecx], edi

; 886  : 			_Vec_hi(_Bucket) = _Plist;

	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [eax+edx+4], edi

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jmp	SHORT $LN457@Insert
$LN6@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 96   : 		return (_Ptr);

	mov	edx, DWORD PTR __Pnode$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edx+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN453@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jne	SHORT $LN455@Insert

; 889  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	DWORD PTR [ecx], edi

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	jmp	SHORT $LN457@Insert
$LN455@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	je	SHORT $LN457@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx+edx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+edx+4], eax
$LN457@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 805  : 		_Check_size();

	mov	ecx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Check_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Check_size
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z$2:

; 806  : 		_CATCH_ALL
; 807  : 		erase(_Make_iter(_Plist));

	push	DWORD PTR __Plist$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Make_iter
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase

; 808  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN639@Insert:
$LN638@Insert:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_List_node@PAUHWND__@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::construct<std::_List_node<HWND__ *,void *> *,std::_List_node<HWND__ *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@@Z PROC ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::destroy<std::pair<HWND__ * const,bool> >, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::destroy<std::pair<HWND__ * const,bool> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAUHWND__@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAUHWND__@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@@Z PROC ; std::allocator<std::_List_node<HWND__ *,void *> >::destroy<HWND__ *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAUHWND__@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@@Z ENDP ; std::allocator<std::_List_node<HWND__ *,void *> >::destroy<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z PROC ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@@Z PROC ; std::allocator<std::_List_node<HWND__ *,void *> >::destroy<std::_List_node<HWND__ *,void *> *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<HWND__ *,void *> >::destroy<std::_List_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1><std::allocator<std::pair<HWND__ * const,bool> > const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 524  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1><std::allocator<std::pair<HWND__ * const,bool> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABV?$allocator@PAUHWND__@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@PAUHWND__@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1><std::allocator<HWND__ *> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 524  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0ABV?$allocator@PAUHWND__@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1><std::allocator<HWND__ *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Val_0>$ = 12						; size = 4
_<_Val_1>$ = 16						; size = 4
_<_Val_2>$ = 20						; size = 4
??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 294  : 		{	// try to insert value_type(_Val...)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_2>$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 294  : 		{	// try to insert value_type(_Val...)

	mov	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_1>$[ebp]
	push	DWORD PTR _<_Val_0>$[ebp]

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ebx+4]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	lea	ecx, DWORD PTR [ebx+4]

; 96   : 		return (_Ptr);

	mov	edi, DWORD PTR [eax]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 268435454				; 0ffffffeH
	mov	eax, DWORD PTR [ebx+8]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN71@emplace

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN199@emplace:
$LN71@emplace:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [ebx+8], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	mov	ecx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ebx+4]

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	add	eax, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	push	eax
	push	esi
	call	??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert<std::pair<HWND__ * const,bool> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 297  : 		}

	pop	ebp
	ret	16					; 00000010H
$LN198@emplace:
??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??0?$tuple@ABQAUHWND__@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$tuple@ABQAUHWND__@@@std@@QAE@$$QAV01@@Z PROC	; std::tuple<HWND__ * const &>::tuple<HWND__ * const &>, COMDAT
; _this$ = ecx

; 6100 : #endif

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??0?$tuple@ABQAUHWND__@@@std@@QAE@$$QAV01@@Z ENDP	; std::tuple<HWND__ * const &>::tuple<HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$forward_as_tuple@ABQAUHWND__@@@std@@YA?AV?$tuple@ABQAUHWND__@@@0@ABQAUHWND__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$forward_as_tuple@ABQAUHWND__@@@std@@YA?AV?$tuple@ABQAUHWND__@@@0@ABQAUHWND__@@@Z PROC ; std::forward_as_tuple<HWND__ * const &>, COMDAT

; 911  : 	{	// forward arguments in a tuple

	npad	2
	push	ebp
	mov	ebp, esp

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	DWORD PTR [eax], ecx

; 912  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));
; 913  : 	}

	pop	ebp
	ret	0
??$forward_as_tuple@ABQAUHWND__@@@std@@YA?AV?$tuple@ABQAUHWND__@@@0@ABQAUHWND__@@@Z ENDP ; std::forward_as_tuple<HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z PROC ; std::forward<HWND__ * const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z ENDP ; std::forward<HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ PROC	; std::forward_as_tuple<>, COMDAT

; 911  : 	{	// forward arguments in a tuple

	npad	2
	push	ebp
	mov	ebp, esp

; 912  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 913  : 	}

	pop	ebp
	ret	0
??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ENDP	; std::forward_as_tuple<>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Buynode_if_nil@AAPAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@AAPAUHWND__@@V21@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
__Plist$ = 16						; size = 4
??$_Buynode_if_nil@AAPAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@AAPAUHWND__@@V21@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * &>, COMDAT
; _this$ = ecx

; 738  : 		{	// node exists, just return it

	npad	2
	push	ebp
	mov	ebp, esp

; 739  : 		return (_Plist);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx

; 740  : 		}

	pop	ebp
	ret	12					; 0000000cH
??$_Buynode_if_nil@AAPAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@AAPAUHWND__@@V21@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool>::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool><std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool>::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool><std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$_Insert@AAPAUHWND__@@@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@AAPAUHWND__@@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Insert@AAPAUHWND__@@@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@AAPAUHWND__@@@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Insert<HWND__ * &>, COMDAT
; _this$ = ecx

; 1082 : 		{	// insert element at _Where

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	esi, DWORD PTR __Where$[ebp]
	push	edi

; 1083 : 		_Nodeptr _Pnode = _Where._Mynode();
; 1084 : 		_Nodeptr _Newnode =
; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_0>$[ebp]
	mov	edi, ecx
	push	DWORD PTR [esi+4]
	push	esi
	call	??$_Buynode@AAPAUHWND__@@@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@1@PAU21@0AAPAUHWND__@@@Z ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Buynode<HWND__ * &>
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [edi+4]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN13@Insert

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN66@Insert:
$LN13@Insert:

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [edi+4], eax

; 1086 : 				_STD forward<_Valty>(_Val)...);
; 1087 : 		_Incsize(1);
; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [esi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]
	pop	edi
	pop	esi

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 1090 : 		}

	pop	ebp
	ret	8
$LN65@Insert:
??$_Insert@AAPAUHWND__@@@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@AAPAUHWND__@@@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Insert<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>, COMDAT

; 480  : 	{	// reset checked from unchecked, generic

	npad	2
	push	ebp
	mov	ebp, esp

; 481  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 482  : 	return (_Dest);
; 483  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >, COMDAT

; 135  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 139  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	mov	eax, DWORD PTR __Dest$[ebp]
	xor	ecx, ecx
	push	esi
	mov	esi, DWORD PTR __Last$[ebp]
	xor	edx, edx
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
	sub	esi, edi
	add	esi, 3
	shr	esi, 2
	cmp	edi, DWORD PTR __Last$[ebp]
	cmova	esi, ecx
	test	esi, esi
	je	SHORT $LN3@Uninitiali
	sub	edi, eax
$LL4@Uninitiali:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 710  : 		::new (static_cast<void *>(_Ptr))

	test	eax, eax
	je	SHORT $LN2@Uninitiali
	mov	ecx, DWORD PTR [edi+eax]
	mov	DWORD PTR [eax], ecx
$LN2@Uninitiali:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 139  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	inc	edx
	add	eax, 4
	cmp	edx, esi
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:
	pop	edi
	pop	esi

; 140  : 		{
; 141  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));
; 142  : 		}
; 143  : 
; 144  : 	_CATCH_ALL
; 145  : 	_Destroy_range(_Next, _Dest, _Al);
; 146  : 	_RERAISE;
; 147  : 	_CATCH_END
; 148  : 
; 149  : 	return (_Dest);
; 150  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Ptr_move_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_move_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0@Z PROC ; std::_Ptr_move_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 892  : 	{	// return pointer move optimization category for pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 893  : 	return {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 894  : 	}

	pop	ebp
	ret	0
??$_Ptr_move_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0@Z ENDP ; std::_Ptr_move_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@@Z PROC ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>, COMDAT

; 450  : 	{	// construct unchecked from checked, generic

	npad	2
	push	ebp
	mov	ebp, esp

; 451  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 452  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@@Z ENDP ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>, COMDAT

; 480  : 	{	// reset checked from unchecked, generic

	npad	2
	push	ebp
	mov	ebp, esp

; 481  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 482  : 	return (_Dest);
; 483  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >, COMDAT

; 135  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 139  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	mov	eax, DWORD PTR __Dest$[ebp]
	xor	ecx, ecx
	push	esi
	mov	esi, DWORD PTR __Last$[ebp]
	xor	edx, edx
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
	sub	esi, edi
	add	esi, 3
	shr	esi, 2
	cmp	edi, DWORD PTR __Last$[ebp]
	cmova	esi, ecx
	test	esi, esi
	je	SHORT $LN3@Uninitiali
	sub	edi, eax
$LL4@Uninitiali:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 710  : 		::new (static_cast<void *>(_Ptr))

	test	eax, eax
	je	SHORT $LN2@Uninitiali
	mov	ecx, DWORD PTR [edi+eax]
	mov	DWORD PTR [eax], ecx
$LN2@Uninitiali:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 139  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	inc	edx
	add	eax, 4
	cmp	edx, esi
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:
	pop	edi
	pop	esi

; 140  : 		{
; 141  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));
; 142  : 		}
; 143  : 
; 144  : 	_CATCH_ALL
; 145  : 	_Destroy_range(_Next, _Dest, _Al);
; 146  : 	_RERAISE;
; 147  : 	_CATCH_END
; 148  : 
; 149  : 	return (_Dest);
; 150  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z PROC ; std::move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ENDP ; std::move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Ptr_move_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_move_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0@Z PROC ; std::_Ptr_move_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 892  : 	{	// return pointer move optimization category for pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 893  : 	return {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 894  : 	}

	pop	ebp
	ret	0
??$_Ptr_move_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0@Z ENDP ; std::_Ptr_move_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z PROC ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>, COMDAT

; 450  : 	{	// construct unchecked from checked, generic

	npad	2
	push	ebp
	mov	ebp, esp

; 451  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 452  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ENDP ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$0A@@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$0A@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$integral_constant@_N$0A@@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$0A@@1@@Z PROC ; std::_Any_tag::_Any_tag<std::integral_constant<bool,0> >, COMDAT
; _this$ = ecx

; 556  : 		constexpr _Any_tag(_Ty&&) _NOEXCEPT {}

	mov	eax, ecx
	ret	4
??$?0U?$integral_constant@_N$0A@@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$0A@@1@@Z ENDP ; std::_Any_tag::_Any_tag<std::integral_constant<bool,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAU?$pair@QAUHWND__@@_N@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAU?$pair@QAUHWND__@@_N@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::pair<HWND__ * const,bool> >, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAU?$pair@QAUHWND__@@_N@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::pair<HWND__ * const,bool> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >, COMDAT

; 184  : 	{	// copy _Count copies of _Val to raw _First, using _Al, no special optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 188  : 	for (; 0 < _Count; --_Count, (void)++_First)

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	test	edx, edx
	je	SHORT $LN3@Uninit_all
	push	esi
	mov	esi, DWORD PTR __Val$[ebp]
$LL4@Uninit_all:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 710  : 		::new (static_cast<void *>(_Ptr))

	test	eax, eax
	je	SHORT $LN2@Uninit_all
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
$LN2@Uninit_all:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 188  : 	for (; 0 < _Count; --_Count, (void)++_First)

	add	eax, 4
	sub	edx, 1
	jne	SHORT $LL4@Uninit_all
	pop	esi
$LN3@Uninit_all:

; 189  : 		{
; 190  : 		_Al.construct(_Unfancy(_First), _Val);
; 191  : 		}
; 192  : 
; 193  : 	_CATCH_ALL
; 194  : 	_Destroy_range(_Next, _First, _Al);
; 195  : 	_RERAISE;
; 196  : 	_CATCH_END
; 197  : 
; 198  : 	return (_First);
; 199  : 	}

	pop	ebp
	ret	0
??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@@Z PROC ; std::_Unfancy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@@Z ENDP ; std::_Unfancy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAUHWND__@@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAUHWND__@@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<HWND__ *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAUHWND__@@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >, COMDAT

; 184  : 	{	// copy _Count copies of _Val to raw _First, using _Al, no special optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 188  : 	for (; 0 < _Count; --_Count, (void)++_First)

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	test	edx, edx
	je	SHORT $LN3@Uninit_all
	push	esi
	mov	esi, DWORD PTR __Val$[ebp]
$LL4@Uninit_all:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 710  : 		::new (static_cast<void *>(_Ptr))

	test	eax, eax
	je	SHORT $LN2@Uninit_all
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
$LN2@Uninit_all:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 188  : 	for (; 0 < _Count; --_Count, (void)++_First)

	add	eax, 4
	sub	edx, 1
	jne	SHORT $LL4@Uninit_all
	pop	esi
$LN3@Uninit_all:

; 189  : 		{
; 190  : 		_Al.construct(_Unfancy(_First), _Val);
; 191  : 		}
; 192  : 
; 193  : 	_CATCH_ALL
; 194  : 	_Destroy_range(_Next, _First, _Al);
; 195  : 	_RERAISE;
; 196  : 	_CATCH_END
; 197  : 
; 198  : 	return (_First);
; 199  : 	}

	pop	ebp
	ret	0
??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z PROC ; std::_Unfancy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ENDP ; std::_Unfancy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_unchecked1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
tv278 = 12						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Fill_unchecked1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Fill_unchecked1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 2688 : 	{	// copy _Val through [_First, _Last), no special optimization

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR __Last$[ebp]
	xor	edx, edx
	push	ebx
	mov	ebx, DWORD PTR __First$[ebp]
	sub	ecx, ebx
	add	ecx, 3
	shr	ecx, 2
	push	esi
	xor	esi, esi
	cmp	ebx, DWORD PTR __Last$[ebp]
	cmova	ecx, esi
	mov	DWORD PTR tv278[ebp], ecx

; 2689 : 	for (; _First != _Last; ++_First)

	test	ecx, ecx
	je	SHORT $LN3@Fill_unche

; 2690 : 		*_First = _Val;

	mov	esi, DWORD PTR __Val$[ebp]
	push	edi
	cmp	ecx, 4
	jb	SHORT $LN9@Fill_unche
	mov	edi, DWORD PTR [esi]
	cmp	ebx, esi
	ja	SHORT $LN10@Fill_unche
	lea	eax, DWORD PTR [ebx-4]
	lea	eax, DWORD PTR [eax+ecx*4]
	cmp	eax, esi
	jae	SHORT $LN9@Fill_unche
$LN10@Fill_unche:
	and	ecx, -4					; fffffffcH
$LL4@Fill_unche:

; 2689 : 	for (; _First != _Last; ++_First)

	add	edx, 4
	cmp	edx, ecx
	jne	SHORT $LL4@Fill_unche

; 2690 : 		*_First = _Val;

	lea	esi, DWORD PTR [ecx+3]
	mov	eax, edi
	and	esi, -4					; fffffffcH
	mov	edi, ebx
	shl	esi, 2
	mov	ecx, esi
	shr	ecx, 2
	add	ebx, esi
	mov	esi, DWORD PTR __Val$[ebp]
	rep stosd
	mov	ecx, DWORD PTR tv278[ebp]
$LN9@Fill_unche:

; 2689 : 	for (; _First != _Last; ++_First)

	pop	edi
	cmp	edx, ecx
	je	SHORT $LN3@Fill_unche
	npad	6
$LL8@Fill_unche:

; 2690 : 		*_First = _Val;

	mov	eax, DWORD PTR [esi]
	lea	ebx, DWORD PTR [ebx+4]
	inc	edx
	mov	DWORD PTR [ebx-4], eax
	cmp	edx, ecx
	jne	SHORT $LL8@Fill_unche
$LN3@Fill_unche:
	pop	esi
	pop	ebx

; 2691 : 	}

	pop	ebp
	ret	0
??$_Fill_unchecked1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Fill_unchecked1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_memset_is_safe@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@ABV20@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Fill_memset_is_safe@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@ABV20@@Z PROC ; std::_Fill_memset_is_safe<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 2682 : 	return {};

	xor	al, al

; 2683 : 	}

	ret	0
??$_Fill_memset_is_safe@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@ABV20@@Z ENDP ; std::_Fill_memset_is_safe<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>, COMDAT

; 1200 : 	for (; _First != _Last; ++_First)
; 1201 : 		_Al.destroy(_Unfancy(_First));
; 1202 : 	}

	ret	0
??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_List_node@PAUHWND__@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_List_node@PAUHWND__@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<std::_List_node<HWND__ *,void *> *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_List_node@PAUHWND__@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<std::_List_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
tv278 = 12						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 2688 : 	{	// copy _Val through [_First, _Last), no special optimization

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR __Last$[ebp]
	xor	edx, edx
	push	ebx
	mov	ebx, DWORD PTR __First$[ebp]
	sub	ecx, ebx
	add	ecx, 3
	shr	ecx, 2
	push	esi
	xor	esi, esi
	cmp	ebx, DWORD PTR __Last$[ebp]
	cmova	ecx, esi
	mov	DWORD PTR tv278[ebp], ecx

; 2689 : 	for (; _First != _Last; ++_First)

	test	ecx, ecx
	je	SHORT $LN3@Fill_unche

; 2690 : 		*_First = _Val;

	mov	esi, DWORD PTR __Val$[ebp]
	push	edi
	cmp	ecx, 4
	jb	SHORT $LN9@Fill_unche
	mov	edi, DWORD PTR [esi]
	cmp	ebx, esi
	ja	SHORT $LN10@Fill_unche
	lea	eax, DWORD PTR [ebx-4]
	lea	eax, DWORD PTR [eax+ecx*4]
	cmp	eax, esi
	jae	SHORT $LN9@Fill_unche
$LN10@Fill_unche:
	and	ecx, -4					; fffffffcH
$LL4@Fill_unche:

; 2689 : 	for (; _First != _Last; ++_First)

	add	edx, 4
	cmp	edx, ecx
	jne	SHORT $LL4@Fill_unche

; 2690 : 		*_First = _Val;

	lea	esi, DWORD PTR [ecx+3]
	mov	eax, edi
	and	esi, -4					; fffffffcH
	mov	edi, ebx
	shl	esi, 2
	mov	ecx, esi
	shr	ecx, 2
	add	ebx, esi
	mov	esi, DWORD PTR __Val$[ebp]
	rep stosd
	mov	ecx, DWORD PTR tv278[ebp]
$LN9@Fill_unche:

; 2689 : 	for (; _First != _Last; ++_First)

	pop	edi
	cmp	edx, ecx
	je	SHORT $LN3@Fill_unche
	npad	6
$LL8@Fill_unche:

; 2690 : 		*_First = _Val;

	mov	eax, DWORD PTR [esi]
	lea	ebx, DWORD PTR [ebx+4]
	inc	edx
	mov	DWORD PTR [ebx-4], eax
	cmp	edx, ecx
	jne	SHORT $LL8@Fill_unche
$LN3@Fill_unche:
	pop	esi
	pop	ebx

; 2691 : 	}

	pop	ebp
	ret	0
??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_memset_is_safe@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@ABV20@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Fill_memset_is_safe@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@ABV20@@Z PROC ; std::_Fill_memset_is_safe<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 2682 : 	return {};

	xor	al, al

; 2683 : 	}

	ret	0
??$_Fill_memset_is_safe@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@ABV20@@Z ENDP ; std::_Fill_memset_is_safe<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>, COMDAT

; 1200 : 	for (; _First != _Last; ++_First)
; 1201 : 		_Al.destroy(_Unfancy(_First));
; 1202 : 	}

	ret	0
??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@X@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@X@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > ><std::allocator<std::pair<HWND__ * const,bool> > const &,void>, COMDAT
; _this$ = ecx

; 605  : 		{	// construct head node, allocator from _Al

	npad	2
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 607  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@X@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > ><std::allocator<std::pair<HWND__ * const,bool> > const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@0@ABU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@0@ABU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$?0ABV?$allocator@PAUHWND__@@@std@@X@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0ABV?$allocator@PAUHWND__@@@std@@X@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > ><std::allocator<HWND__ *> const &,void>, COMDAT
; _this$ = ecx

; 605  : 		{	// construct head node, allocator from _Al

	npad	2
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 607  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??$?0ABV?$allocator@PAUHWND__@@@std@@X@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > ><std::allocator<HWND__ *> const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@0@ABU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@0@ABU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0AAU?$equal_to@PAUHWND__@@@std@@M@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$equal_to@PAUHWND__@@@1@$$QAM@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0AAU?$equal_to@PAUHWND__@@@std@@M@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$equal_to@PAUHWND__@@@1@$$QAM@Z PROC ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Compressed_pair<std::equal_to<HWND__ *>,float,1><std::equal_to<HWND__ *> &,float>, COMDAT
; _this$ = ecx

; 312  : 		{	// construct from forwarded values

	npad	2
	push	ebp
	mov	ebp, esp

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 313  : 		}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??$?0AAU?$equal_to@PAUHWND__@@@std@@M@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$equal_to@PAUHWND__@@@1@$$QAM@Z ENDP ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Compressed_pair<std::equal_to<HWND__ *>,float,1><std::equal_to<HWND__ *> &,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$equal_to@PAUHWND__@@@std@@@std@@YAAAU?$equal_to@PAUHWND__@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$equal_to@PAUHWND__@@@std@@@std@@YAAAU?$equal_to@PAUHWND__@@@0@AAU10@@Z PROC ; std::forward<std::equal_to<HWND__ *> &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$equal_to@PAUHWND__@@@std@@@std@@YAAAU?$equal_to@PAUHWND__@@@0@AAU10@@Z ENDP ; std::forward<std::equal_to<HWND__ *> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$hash@PAUHWND__@@@std@@@std@@YAAAU?$hash@PAUHWND__@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$hash@PAUHWND__@@@std@@@std@@YAAAU?$hash@PAUHWND__@@@0@AAU10@@Z PROC ; std::forward<std::hash<HWND__ *> &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$hash@PAUHWND__@@@std@@@std@@YAAAU?$hash@PAUHWND__@@@0@AAU10@@Z ENDP ; std::forward<std::hash<HWND__ *> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0U?$pair@QAUHWND__@@_N@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@QAUHWND__@@_N@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > ><std::pair<HWND__ * const,bool> >, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0U?$pair@QAUHWND__@@_N@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > ><std::pair<HWND__ * const,bool> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@YAABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@YAABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@0@ABV10@@Z PROC ; std::forward<std::allocator<std::pair<HWND__ * const,bool> > const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@YAABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<std::pair<HWND__ * const,bool> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0PAUHWND__@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAUHWND__@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> ><HWND__ *>, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0PAUHWND__@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> ><HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@PAUHWND__@@@std@@@std@@YAABV?$allocator@PAUHWND__@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@PAUHWND__@@@std@@@std@@YAABV?$allocator@PAUHWND__@@@0@ABV10@@Z PROC ; std::forward<std::allocator<HWND__ *> const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$allocator@PAUHWND__@@@std@@@std@@YAABV?$allocator@PAUHWND__@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<HWND__ *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@M@std@@YA$$QAMAAM@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@M@std@@YA$$QAMAAM@Z PROC			; std::forward<float>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@M@std@@YA$$QAMAAM@Z ENDP			; std::forward<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_One_then_variadic_args_t>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_One_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
;	COMDAT ??$_Try_emplace@ABQAUHWND__@@$$V@?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
$T2 = 15						; size = 1
??$_Try_emplace@ABQAUHWND__@@$$V@?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@@Z PROC ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::_Try_emplace<HWND__ * const &>, COMDAT
; _this$ = ecx

; 306  : 		{	// fail if _Keyval present, else emplace

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	mov	esi, DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Where$[ebp]
	push	edi
	push	esi
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 306  : 		{	// fail if _Keyval present, else emplace

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	call	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$[ebp]
	cmp	eax, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN2@Try_emplac

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T1[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, edi
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	push	esi
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	pop	edi
	mov	eax, esi
	pop	esi

; 315  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@Try_emplac:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 314  : 			return (_Pairib(_Where, false));

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 315  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Try_emplace@ABQAUHWND__@@$$V@?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@@Z ENDP ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::_Try_emplace<HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Distance1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Distance1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >, COMDAT

; 1094 : 	{	// return distance between iterators; input

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __First$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR __Last$[ebp]
	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN3@Distance1
$LL4@Distance1:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	DWORD PTR __First$[ebp], ecx

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL4@Distance1
$LN3@Distance1:

; 1098 : 
; 1099 : 	return (_Off);
; 1100 : 	}

	pop	ebp
	ret	0
??$_Distance1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Plist$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T2 = 8							; size = 4
___$ReturnUdt$ = 8					; size = 4
tv1489 = 12						; size = 4
$T3 = 12						; size = 4
__Val$ = 12						; size = 4
__Pnode$ = 16						; size = 4
??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 761  : 		{	// try to insert existing node with value _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edi, DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 761  : 		{	// try to insert existing node with value _Val

	mov	ebx, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ebx

; 762  : 		size_type _Bucket;
; 763  : 		_Unchecked_iterator _Where;
; 764  : 
; 765  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi]
	xor	eax, -2128831035			; 811c9dc5H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	esi, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+2]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edi+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [ebx+24]
	and	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [esi+ecx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	edx, DWORD PTR [ecx*8]
	mov	DWORD PTR tv1489[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN43@Insert

; 847  : 			return (_Unchecked_end());

	mov	esi, DWORD PTR [ebx+4]
	jmp	SHORT $LN44@Insert
$LN43@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [esi+edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	esi, DWORD PTR [esi]
$LN44@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	je	SHORT $LN3@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [edi]
	npad	1
$LL2@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	esi, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	cmp	ecx, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 772  : 			if (_Traitsobj(_Traits::_Kfn(_Val),

	je	SHORT $LN6@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	jne	SHORT $LL2@Insert
$LN3@Insert:

; 739  : 		return (_Plist);

	mov	edi, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Plist$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [edi]

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 799  : 		if (_Where != ++_Next)	// move element into place

	je	SHORT $LN10@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edi+4]

; 1910 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =

	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [eax+4]

; 1912 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =

	mov	DWORD PTR [ecx], esi

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [esi+4]

; 1914 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =

	mov	DWORD PTR [ecx], edi

; 1915 : 			_First._Mynode();
; 1916 : 
; 1917 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	mov	edx, DWORD PTR [esi+4]

; 1918 : 		this->_Prevnode(_Where._Mynode()) =

	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], ecx

; 1919 : 			this->_Prevnode(_Last._Mynode());
; 1920 : 		this->_Prevnode(_Last._Mynode()) =

	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx

; 1921 : 			this->_Prevnode(_First._Mynode());
; 1922 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	mov	DWORD PTR [edi+4], edx
	mov	edx, DWORD PTR tv1489[ebp]
$LN10@Insert:

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR [ebx+12]
	add	ecx, edx
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 883  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN453@Insert

; 884  : 			{	// make bucket non-empty
; 885  : 			_Vec_lo(_Bucket) = _Plist;

	mov	DWORD PTR [ecx], edi

; 886  : 			_Vec_hi(_Bucket) = _Plist;

	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [eax+edx+4], edi

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jmp	SHORT $LN457@Insert
$LN6@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 96   : 		return (_Ptr);

	mov	edx, DWORD PTR __Pnode$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edx+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN453@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jne	SHORT $LN455@Insert

; 889  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	DWORD PTR [ecx], edi

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	jmp	SHORT $LN457@Insert
$LN455@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	je	SHORT $LN457@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx+edx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+edx+4], eax
$LN457@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 805  : 		_Check_size();

	mov	ecx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Check_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Check_size
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z$2:

; 806  : 		_CATCH_ALL
; 807  : 		erase(_Make_iter(_Plist));

	push	DWORD PTR __Plist$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Make_iter
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase

; 808  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN639@Insert:
$LN638@Insert:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$emplace_front@AAPAUHWND__@@@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXAAPAUHWND__@@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$emplace_front@AAPAUHWND__@@@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXAAPAUHWND__@@@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::emplace_front<HWND__ * &>, COMDAT
; _this$ = ecx

; 1055 : 		{	// insert element at beginning

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_0>$[ebp]

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [esi]

; 96   : 		return (_Ptr);

	mov	edi, DWORD PTR [eax]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@AAPAUHWND__@@@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@1@PAU21@0AAPAUHWND__@@@Z ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Buynode<HWND__ * &>
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [esi+4]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN48@emplace_fr

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN102@emplace_fr:
$LN48@emplace_fr:

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [esi+4], eax

; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]
	pop	edi
	pop	esi

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 1056 : 		_Insert(_Unchecked_begin(), _STD forward<_Valty>(_Val)...);
; 1057 : 		}

	pop	ebp
	ret	4
$LN101@emplace_fr:
??$emplace_front@AAPAUHWND__@@@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXAAPAUHWND__@@@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::emplace_front<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z PROC ; std::forward<HWND__ * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ENDP ; std::forward<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >, COMDAT

; 166  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 167  : 		// note: only called internally from elsewhere in the STL, debug checks
; 168  : 		// and deprecation warnings omitted
; 169  : 	const auto _UFirst = _Unchecked(_First);
; 170  : 	const auto _ULast = _Unchecked(_Last);
; 171  : 	const auto _UDest = _Unchecked(_Dest);
; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Al$[ebp]
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
	add	esp, 24					; 00000018H

; 173  : 		_Uninitialized_move_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 174  : 			_Ptr_move_cat(_UFirst, _UDest),
; 175  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(_STD move(*_UFirst))>())));
; 176  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >, COMDAT

; 622  : 		return (_Al.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 623  : 		}

	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >, COMDAT

; 166  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 167  : 		// note: only called internally from elsewhere in the STL, debug checks
; 168  : 		// and deprecation warnings omitted
; 169  : 	const auto _UFirst = _Unchecked(_First);
; 170  : 	const auto _ULast = _Unchecked(_Last);
; 171  : 	const auto _UDest = _Unchecked(_Dest);
; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Al$[ebp]
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
	add	esp, 24					; 00000018H

; 173  : 		_Uninitialized_move_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 174  : 			_Ptr_move_cat(_UFirst, _UDest),
; 175  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(_STD move(*_UFirst))>())));
; 176  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >, COMDAT

; 622  : 		return (_Al.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 623  : 		}

	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::pair<HWND__ * const,bool> >, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@U?$pair@QAUHWND__@@_N@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAUHWND__@@_N@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::pair<HWND__ * const,bool> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >, COMDAT

; 216  : 	{	// copy _Count copies of _Val to raw _First, using _Al

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Al$[ebp]
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
	add	esp, 20					; 00000014H

; 218  : 		_Conjunction_t<decltype(_Fill_memset_is_safe(_First, _Val)),
; 219  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First)), decltype(_Val)>>()));
; 220  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAUHWND__@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAUHWND__@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<HWND__ *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAUHWND__@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAUHWND__@@@std@@YAPAPAUHWND__@@AAPAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAUHWND__@@@std@@YAPAPAUHWND__@@AAPAU1@@Z PROC ; std::addressof<HWND__ *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAUHWND__@@@std@@YAPAPAUHWND__@@AAPAU1@@Z ENDP ; std::addressof<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >, COMDAT

; 216  : 	{	// copy _Count copies of _Val to raw _First, using _Al

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Al$[ebp]
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
	add	esp, 20					; 00000014H

; 218  : 		_Conjunction_t<decltype(_Fill_memset_is_safe(_First, _Val)),
; 219  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First)), decltype(_Val)>>()));
; 220  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::destroy<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::pair<HWND__ * const,bool>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::_Fill_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT

; 2703 : 	{	// copy _Val through [_First, _Last), choose optimization

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 2682 : 	return {};

	mov	BYTE PTR $T1[ebp], 0

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
	add	esp, 16					; 00000010H

; 2705 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fill_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::_Fill_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>, COMDAT

; 1215 : 		// note that this is an optimization for debug mode codegen;
; 1216 : 		// in release mode the BE removes all of this
; 1217 : 	typedef typename _Alloc::value_type _Val;
; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1219 : 		is_trivially_destructible<_Val>,
; 1220 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1221 : 	}

	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 125  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<HWND__ *> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<HWND__ *> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<HWND__ *> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<std::_List_node<HWND__ *,void *> *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAU?$_List_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAUHWND__@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::destroy<std::_List_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@PAUHWND__@@PAX@std@@@std@@YAPAPAU?$_List_node@PAUHWND__@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@PAUHWND__@@PAX@std@@@std@@YAPAPAU?$_List_node@PAUHWND__@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<HWND__ *,void *> *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@PAUHWND__@@PAX@std@@@std@@YAPAPAU?$_List_node@PAUHWND__@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z PROC ; std::_Fill_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT

; 2703 : 	{	// copy _Val through [_First, _Last), choose optimization

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 2682 : 	return {};

	mov	BYTE PTR $T1[ebp], 0

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
	add	esp, 16					; 00000010H

; 2705 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fill_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ENDP ; std::_Fill_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>, COMDAT

; 1215 : 		// note that this is an optimization for debug mode codegen;
; 1216 : 		// in release mode the BE removes all of this
; 1217 : 	typedef typename _Alloc::value_type _Val;
; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1219 : 		is_trivially_destructible<_Val>,
; 1220 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1221 : 	}

	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@_W@std@@YAPA_WPA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@_W@std@@YAPA_WPA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@X@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@X@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > ><std::allocator<std::pair<HWND__ * const,bool> > const &,void>, COMDAT
; _this$ = ecx

; 841  : 		{	// construct from allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 841  : 		{	// construct from allocator

	mov	DWORD PTR _this$[ebp], esi

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 842  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@X@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > ><std::allocator<std::pair<HWND__ * const,bool> > const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &,void>, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 517  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 517  : 		}

	ret	4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator--, COMDAT
; _this$ = ecx

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], eax

; 152  : 		--(*(_Mybase *)this);
; 153  : 		return (*this);

	mov	eax, ecx

; 154  : 		}

	ret	0
??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 139  : 		++(*(_Mybase *)this);
; 140  : 		return (*this);

	mov	eax, ecx

; 141  : 		}

	ret	0
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@QAUHWND__@@_N@1@XZ
_TEXT	SEGMENT
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@QAUHWND__@@_N@1@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 129  : 		return ((reference)**(_Mybase *)this);
; 130  : 		}

	ret	0
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@QAUHWND__@@_N@1@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 125  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 119  : 		{	// construct with null node
; 120  : 		}

	mov	eax, ecx
	ret	0
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEAAPAUHWND__@@XZ
_TEXT	SEGMENT
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEAAPAUHWND__@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 362  : 		return ((reference)**(_Mybase *)this);
; 363  : 		}

	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEAAPAUHWND__@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >, COMDAT
; _this$ = ecx

; 344  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 345  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$?0ABV?$allocator@PAUHWND__@@@std@@X@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$?0ABV?$allocator@PAUHWND__@@@std@@X@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_List_buy<HWND__ *,std::allocator<HWND__ *> ><std::allocator<HWND__ *> const &,void>, COMDAT
; _this$ = ecx

; 841  : 		{	// construct from allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 841  : 		{	// construct from allocator

	mov	DWORD PTR _this$[ebp], esi

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 842  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABV?$allocator@PAUHWND__@@@std@@X@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_List_buy<HWND__ *,std::allocator<HWND__ *> ><std::allocator<HWND__ *> const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &,void>, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 517  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 517  : 		}

	ret	4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@U?$pair@QAUHWND__@@_N@std@@@std@@YAPAU?$pair@QAUHWND__@@_N@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAUHWND__@@_N@std@@@std@@YAPAU?$pair@QAUHWND__@@_N@0@AAU10@@Z PROC ; std::addressof<std::pair<HWND__ * const,bool> >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@QAUHWND__@@_N@std@@@std@@YAPAU?$pair@QAUHWND__@@_N@0@AAU10@@Z ENDP ; std::addressof<std::pair<HWND__ * const,bool> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z PROC		; std::addressof<wchar_t *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z ENDP		; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0AAU?$hash@PAUHWND__@@@std@@U_One_then_variadic_args_t@1@AAU?$equal_to@PAUHWND__@@@1@M@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$hash@PAUHWND__@@@1@$$QAU21@AAU?$equal_to@PAUHWND__@@@1@$$QAM@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
_<_Val2_1>$ = 20					; size = 4
_<_Val2_2>$ = 24					; size = 4
??$?0AAU?$hash@PAUHWND__@@@std@@U_One_then_variadic_args_t@1@AAU?$equal_to@PAUHWND__@@@1@M@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$hash@PAUHWND__@@@1@$$QAU21@AAU?$equal_to@PAUHWND__@@@1@$$QAM@Z PROC ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1><std::hash<HWND__ *> &,std::_One_then_variadic_args_t,std::equal_to<HWND__ *> &,float>, COMDAT
; _this$ = ecx

; 312  : 		{	// construct from forwarded values

	npad	2
	push	ebp
	mov	ebp, esp

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_2>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 313  : 		}

	mov	eax, ecx
	pop	ebp
	ret	20					; 00000014H
??$?0AAU?$hash@PAUHWND__@@@std@@U_One_then_variadic_args_t@1@AAU?$equal_to@PAUHWND__@@@1@M@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$hash@PAUHWND__@@@1@$$QAU21@AAU?$equal_to@PAUHWND__@@@1@$$QAM@Z ENDP ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1><std::hash<HWND__ *> &,std::_One_then_variadic_args_t,std::equal_to<HWND__ *> &,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > ><std::allocator<std::pair<HWND__ * const,bool> > const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > ><std::allocator<std::pair<HWND__ * const,bool> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@QAUHWND__@@_N@std@@@std@@SAPAU?$pair@QAUHWND__@@_N@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@QAUHWND__@@_N@std@@@std@@SAPAU?$pair@QAUHWND__@@_N@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<HWND__ * const,bool> *>::pointer_to, COMDAT

; 289  : 		{	// convert raw reference to pointer

	npad	2
	push	ebp
	mov	ebp, esp

; 290  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 291  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@QAUHWND__@@_N@std@@@std@@SAPAU?$pair@QAUHWND__@@_N@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<HWND__ * const,bool> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABV?$allocator@PAUHWND__@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABV?$allocator@PAUHWND__@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > ><std::allocator<HWND__ *> const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABV?$allocator@PAUHWND__@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > ><std::allocator<HWND__ *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V01@X$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V01@X$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V01@X$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@QAUHWND__@@_N@1@XZ
_TEXT	SEGMENT
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@QAUHWND__@@_N@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator->, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 367  : 		return (pointer_traits<pointer>::pointer_to(**this));
; 368  : 		}

	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@QAUHWND__@@_N@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@QAUHWND__@@_N@1@XZ
_TEXT	SEGMENT
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@QAUHWND__@@_N@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 362  : 		return ((reference)**(_Mybase *)this);
; 363  : 		}

	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@QAUHWND__@@_N@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_Unchecked, COMDAT
; _this$ = ecx

; 356  : 		{	// make an unchecked iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 357  : 		return (_Unchecked_type(this->_Ptr, (_Mylist *)this->_Getcont()));
; 358  : 		}

	pop	ebp
	ret	4
?_Unchecked@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >, COMDAT
; _this$ = ecx

; 344  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 345  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator==, COMDAT
; _this$ = ecx

; 286  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 287  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 288  : 		if (this->_Getcont() != _Right._Getcont())
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("list iterators incompatible");
; 291  : 			}
; 292  : 
; 293  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 294  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 295  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 296  : 
; 297  : 		return (this->_Ptr == _Right._Ptr);
; 298  : 		}

	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++, COMDAT
; _this$ = ecx

; 247  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 248  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 249  : 		++*this;
; 250  : 		return (_Tmp);
; 251  : 		}

	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 226  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 227  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 228  : 		if (_Mycont == 0
; 229  : 			|| this->_Ptr == nullptr_t{}
; 230  : 			|| this->_Ptr == _Mycont->_Myhead)
; 231  : 			{	// report error
; 232  : 			_DEBUG_ERROR("list iterator not incrementable");
; 233  : 			}
; 234  : 
; 235  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 236  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 237  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 238  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 239  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 240  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 241  : 
; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 243  : 		return (*this);

	mov	eax, ecx

; 244  : 		}

	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@QAUHWND__@@_N@1@XZ
_TEXT	SEGMENT
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@QAUHWND__@@_N@1@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 207  : 		if (_Mycont == 0
; 208  : 			|| this->_Ptr == nullptr_t{}
; 209  : 			|| this->_Ptr == _Mycont->_Myhead)
; 210  : 			{	// report error
; 211  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 216  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 217  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 218  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 219  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 220  : 
; 221  : 		return (_Mylist::_Myval(this->_Ptr));
; 222  : 		}

	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@QAUHWND__@@_N@1@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >, COMDAT
; _this$ = ecx

; 187  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 188  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 97   : 		}

	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator!=, COMDAT
; _this$ = ecx

; 90   : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 91   : 		return (!(*this == _Right));
; 92   : 		}

	pop	ebp
	ret	4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator==, COMDAT
; _this$ = ecx

; 85   : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 86   : 		return (_Ptr == _Right._Ptr);
; 87   : 		}

	pop	ebp
	ret	4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], eax

; 74   : 		return (*this);

	mov	eax, ecx

; 75   : 		}

	ret	0
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 61   : 		return (*this);

	mov	eax, ecx

; 62   : 		}

	ret	0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@QAUHWND__@@_N@1@XZ
_TEXT	SEGMENT
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@QAUHWND__@@_N@1@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 50   : 		return (_Mylist::_Myval(_Ptr));
; 51   : 		}

	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@QAUHWND__@@_N@1@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 45   : 		this->_Adopt(_Plist);
; 46   : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 40   : 		}

	mov	eax, ecx
	ret	0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
;	COMDAT ??$try_emplace@$$V@?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$2 = 12						; size = 4
__Keyval$ = 12						; size = 4
$T3 = 15						; size = 1
??$try_emplace@$$V@?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@@Z PROC ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::try_emplace<>, COMDAT
; _this$ = ecx

; 320  : 		{	// fail if _Keyval present, else emplace

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	mov	esi, DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Where$2[ebp]
	push	edi
	push	esi
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 320  : 		{	// fail if _Keyval present, else emplace

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	call	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$2[ebp]
	cmp	eax, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN4@try_emplac

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T1[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, edi
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	push	esi
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	pop	edi

; 321  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	mov	eax, esi
	pop	esi

; 322  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN4@try_emplac:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 321  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 322  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$try_emplace@$$V@?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@@Z ENDP ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::try_emplace<>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >, COMDAT

; 1112 : 	{	// return distance between iterators

	npad	2
	push	ebp
	mov	ebp, esp

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	ecx, DWORD PTR __First$[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR __Last$[ebp]
	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN5@distance
$LL6@distance:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL6@distance
$LN5@distance:

; 1114 : 	}

	pop	ebp
	ret	0
??$distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHH@Z@@YAPAPAXPAP6GHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHH@Z@@YAPAPAXPAP6GHH@Z@Z PROC	; static_cast_p2p<void,int __stdcall(int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHH@Z@@YAPAPAXPAP6GHH@Z@Z ENDP	; static_cast_p2p<void,int __stdcall(int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUtagRECT@@KHK@Z@@YAPAPAXPAP6GHPAUtagRECT@@KHK@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUtagRECT@@KHK@Z@@YAPAPAXPAP6GHPAUtagRECT@@KHK@Z@Z PROC ; static_cast_p2p<void,int __stdcall(tagRECT *,unsigned long,int,unsigned long)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUtagRECT@@KHK@Z@@YAPAPAXPAP6GHPAUtagRECT@@KHK@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(tagRECT *,unsigned long,int,unsigned long)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUtagRECT@@KH@Z@@YAPAPAXPAP6GHPAUtagRECT@@KH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUtagRECT@@KH@Z@@YAPAPAXPAP6GHPAUtagRECT@@KH@Z@Z PROC ; static_cast_p2p<void,int __stdcall(tagRECT *,unsigned long,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUtagRECT@@KH@Z@@YAPAPAXPAP6GHPAUtagRECT@@KH@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(tagRECT *,unsigned long,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GJPAUHWND__@@H@Z@@YAPAPAXPAP6GJPAUHWND__@@H@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GJPAUHWND__@@H@Z@@YAPAPAXPAP6GJPAUHWND__@@H@Z@Z PROC ; static_cast_p2p<void,long __stdcall(HWND__ *,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GJPAUHWND__@@H@Z@@YAPAPAXPAP6GJPAUHWND__@@H@Z@Z ENDP ; static_cast_p2p<void,long __stdcall(HWND__ *,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GJPAUHWND__@@HJ@Z@@YAPAPAXPAP6GJPAUHWND__@@HJ@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GJPAUHWND__@@HJ@Z@@YAPAPAXPAP6GJPAUHWND__@@HJ@Z@Z PROC ; static_cast_p2p<void,long __stdcall(HWND__ *,int,long)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GJPAUHWND__@@HJ@Z@@YAPAPAXPAP6GJPAUHWND__@@HJ@Z@Z ENDP ; static_cast_p2p<void,long __stdcall(HWND__ *,int,long)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@@YAPAPAXPAP6GPAUHWND__@@KPBD0KHHHHPAU0@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@@YAPAPAXPAP6GPAUHWND__@@KPBD0KHHHHPAU0@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@Z PROC ; static_cast_p2p<void,HWND__ * __stdcall(unsigned long,char const *,char const *,unsigned long,int,int,int,int,HWND__ *,HMENU__ *,HINSTANCE__ *,void *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@@YAPAPAXPAP6GPAUHWND__@@KPBD0KHHHHPAU0@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@Z ENDP ; static_cast_p2p<void,HWND__ * __stdcall(unsigned long,char const *,char const *,unsigned long,int,int,int,int,HWND__ *,HMENU__ *,HINSTANCE__ *,void *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@@YAPAPAXPAP6GPAUHWND__@@KPB_W0KHHHHPAU0@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@@YAPAPAXPAP6GPAUHWND__@@KPB_W0KHHHHPAU0@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@Z PROC ; static_cast_p2p<void,HWND__ * __stdcall(unsigned long,wchar_t const *,wchar_t const *,unsigned long,int,int,int,int,HWND__ *,HMENU__ *,HINSTANCE__ *,void *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@@YAPAPAXPAP6GPAUHWND__@@KPB_W0KHHHHPAU0@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z@Z ENDP ; static_cast_p2p<void,HWND__ * __stdcall(unsigned long,wchar_t const *,wchar_t const *,unsigned long,int,int,int,int,HWND__ *,HMENU__ *,HINSTANCE__ *,void *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPBUtagRECT@@@Z@@YAPAPAXPAP6GHPBUtagRECT@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPBUtagRECT@@@Z@@YAPAPAXPAP6GHPBUtagRECT@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(tagRECT const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPBUtagRECT@@@Z@@YAPAPAXPAP6GHPBUtagRECT@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(tagRECT const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHWND__@@HHHHH@Z@@YAPAPAXPAP6GHPAUHWND__@@HHHHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHWND__@@HHHHH@Z@@YAPAPAXPAP6GHPAUHWND__@@HHHHH@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HWND__ *,int,int,int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHWND__@@HHHHH@Z@@YAPAPAXPAP6GHPAUHWND__@@HHHHH@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HWND__ *,int,int,int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z@@YAPAPAXPAP6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z@@YAPAPAXPAP6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HWND__ *,tagWINDOWPLACEMENT const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z@@YAPAPAXPAP6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HWND__ *,tagWINDOWPLACEMENT const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHWND__@@0HHHHI@Z@@YAPAPAXPAP6GHPAUHWND__@@0HHHHI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHWND__@@0HHHHI@Z@@YAPAPAXPAP6GHPAUHWND__@@0HHHHI@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HWND__ *,HWND__ *,int,int,int,int,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHWND__@@0HHHHI@Z@@YAPAPAXPAP6GHPAUHWND__@@0HHHHI@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HWND__ *,HWND__ *,int,int,int,int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__$ReturnAddr$ = 4					; size = 4
_dwExStyle$ = 8						; size = 4
_lpClassName$ = 12					; size = 4
_lpWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_X$ = 24						; size = 4
_Y$ = 28						; size = 4
_nWidth$ = 32						; size = 4
_nHeight$ = 36						; size = 4
_hWndParent$ = 40					; size = 4
_hMenu$ = 44						; size = 4
_hInstance$ = 48					; size = 4
_lpParam$ = 52						; size = 4
?CreateWindowExW_Detour@@YGPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z PROC ; CreateWindowExW_Detour

; 5600 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 5601 :   if (SK_GetCallingDLL () == SK_GetDLL ())

	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	esi
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	mov	esi, eax
	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	cmp	esi, eax
	jne	SHORT $LN6@CreateWind
	pop	esi

; 5628 :                               X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
; 5629 : 
; 5630 :   //// Early render window detection. Every little bit helps when the possibility of installing this hook first exists.
; 5631 :   //if (hWndRet != 0 && (hInstance == nullptr || hInstance == GetModuleHandle (nullptr)) && (! caught_register))
; 5632 :   //{
; 5633 :   //  if (dwStyle & (WS_OVERLAPPEDWINDOW))
; 5634 :   //  {
; 5635 :   //    caught_register = true;
; 5636 :   //
; 5637 :   //    SK_LOG0 ( (L"[!] > ApplicationWindow: [Class: %16ws, Title: %34ws]", lpClassName, lpWindowName), L"WindowFind" );
; 5638 :   //
; 5639 :   //    game_window.hWnd    = hWndRet;
; 5640 :   //    game_window.unicode = true;
; 5641 :   //    game_window.active  = true;
; 5642 :   //
; 5643 :   //    game_window.GetWindowLongPtr = GetWindowLongPtrW_Original;
; 5644 :   //    game_window.SetWindowLongPtr = SetWindowLongPtrW_Original;
; 5645 :   //  //game_window.SetClassLongPtr  = SetClassLongPtrW_Original;
; 5646 :   //    game_window.DefWindowProc    = (DefWindowProc_pfn)
; 5647 :   //      GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5648 :   //                         "DefWindowProcW" );
; 5649 :   //    game_window.CallWindowProc   = (CallWindowProc_pfn)
; 5650 :   //      GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5651 :   //                         "CallWindowProcW" );
; 5652 :   //
; 5653 :   //    SK_MakeWindowHook ((LPVOID)GetClassLongPtrW (hWndRet, GCLP_WNDPROC), (LPVOID)GetWindowLongPtrW (hWndRet, GWLP_WNDPROC));
; 5654 :   //
; 5655 :   //    //game_window.WndProc_Original = (WNDPROC)GetClassLongPtrW (hWndRet, GCLP_WNDPROC);
; 5656 :   //    //                                        SetClassLongPtrW (hWndRet, GCLP_WNDPROC, (LONG_PTR)(WNDPROC)SK_DetourWindowProc);
; 5657 :   //  }
; 5658 :   //}
; 5659 : 
; 5660 :   return hWndRet;
; 5661 : }

	pop	ebp

; 5602 :   {
; 5603 :     return

	jmp	DWORD PTR ?CreateWindowExW_Original@@3P6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExW_Original
$LN6@CreateWind:
	cmp	DWORD PTR _dwStyle$[ebp], 0

; 5604 :       CreateWindowExW_Original (dwExStyle, lpClassName, lpWindowName, dwStyle,
; 5605 :                                 X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
; 5606 :   }
; 5607 : 
; 5608 :   if ((dwStyle & WS_POPUP))

	jge	SHORT $LN5@CreateWind
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 5610 :     if (ReadAcquire (&SK_bypass_dialog_active))

	test	eax, eax
	je	SHORT $LN5@CreateWind

; 5612 :       if (IsGUIThread (FALSE))

	push	0
	call	DWORD PTR __imp__IsGUIThread@4
	test	eax, eax
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 5612 :       if (IsGUIThread (FALSE))

	je	SHORT $LN19@CreateWind

; 5614 :         while (ReadAcquire ((&SK_bypass_dialog_active)))

	test	eax, eax
	je	SHORT $LN5@CreateWind
	mov	esi, DWORD PTR __imp__MsgWaitForMultipleObjectsEx@20
	npad	1
$LL2@CreateWind:

; 5615 :           MsgWaitForMultipleObjectsEx (0, nullptr, 1, QS_ALLINPUT, MWMO_ALERTABLE);

	push	2
	push	1279					; 000004ffH
	push	1
	push	0
	push	0
	call	esi
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 5614 :         while (ReadAcquire ((&SK_bypass_dialog_active)))

	test	eax, eax
	jne	SHORT $LL2@CreateWind

; 5616 :       }
; 5617 : 
; 5618 :       else

	jmp	SHORT $LN5@CreateWind
$LN19@CreateWind:

; 5620 :         while (ReadAcquire ((&SK_bypass_dialog_active)))

	test	eax, eax
	je	SHORT $LN5@CreateWind
	mov	esi, DWORD PTR __imp__WaitForMultipleObjectsEx@20
$LL4@CreateWind:

; 5621 :           WaitForMultipleObjectsEx (0, nullptr, 1, QS_ALLINPUT, MWMO_ALERTABLE);

	push	2
	push	1279					; 000004ffH
	push	1
	push	0
	push	0
	call	esi
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 5620 :         while (ReadAcquire ((&SK_bypass_dialog_active)))

	test	eax, eax
	jne	SHORT $LL4@CreateWind
$LN5@CreateWind:
	pop	esi

; 5628 :                               X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
; 5629 : 
; 5630 :   //// Early render window detection. Every little bit helps when the possibility of installing this hook first exists.
; 5631 :   //if (hWndRet != 0 && (hInstance == nullptr || hInstance == GetModuleHandle (nullptr)) && (! caught_register))
; 5632 :   //{
; 5633 :   //  if (dwStyle & (WS_OVERLAPPEDWINDOW))
; 5634 :   //  {
; 5635 :   //    caught_register = true;
; 5636 :   //
; 5637 :   //    SK_LOG0 ( (L"[!] > ApplicationWindow: [Class: %16ws, Title: %34ws]", lpClassName, lpWindowName), L"WindowFind" );
; 5638 :   //
; 5639 :   //    game_window.hWnd    = hWndRet;
; 5640 :   //    game_window.unicode = true;
; 5641 :   //    game_window.active  = true;
; 5642 :   //
; 5643 :   //    game_window.GetWindowLongPtr = GetWindowLongPtrW_Original;
; 5644 :   //    game_window.SetWindowLongPtr = SetWindowLongPtrW_Original;
; 5645 :   //  //game_window.SetClassLongPtr  = SetClassLongPtrW_Original;
; 5646 :   //    game_window.DefWindowProc    = (DefWindowProc_pfn)
; 5647 :   //      GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5648 :   //                         "DefWindowProcW" );
; 5649 :   //    game_window.CallWindowProc   = (CallWindowProc_pfn)
; 5650 :   //      GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5651 :   //                         "CallWindowProcW" );
; 5652 :   //
; 5653 :   //    SK_MakeWindowHook ((LPVOID)GetClassLongPtrW (hWndRet, GCLP_WNDPROC), (LPVOID)GetWindowLongPtrW (hWndRet, GWLP_WNDPROC));
; 5654 :   //
; 5655 :   //    //game_window.WndProc_Original = (WNDPROC)GetClassLongPtrW (hWndRet, GCLP_WNDPROC);
; 5656 :   //    //                                        SetClassLongPtrW (hWndRet, GCLP_WNDPROC, (LONG_PTR)(WNDPROC)SK_DetourWindowProc);
; 5657 :   //  }
; 5658 :   //}
; 5659 : 
; 5660 :   return hWndRet;
; 5661 : }

	pop	ebp

; 5622 :       }
; 5623 :     }
; 5624 :   }
; 5625 : 
; 5626 :   HWND hWndRet =
; 5627 :     CreateWindowExW_Original (dwExStyle, lpClassName, lpWindowName, dwStyle,

	jmp	DWORD PTR ?CreateWindowExW_Original@@3P6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExW_Original
?CreateWindowExW_Detour@@YGPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z ENDP ; CreateWindowExW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__$ReturnAddr$ = 4					; size = 4
_dwExStyle$ = 8						; size = 4
_lpClassName$ = 12					; size = 4
_lpWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_X$ = 24						; size = 4
_Y$ = 28						; size = 4
_nWidth$ = 32						; size = 4
_nHeight$ = 36						; size = 4
_hWndParent$ = 40					; size = 4
_hMenu$ = 44						; size = 4
_hInstance$ = 48					; size = 4
_lpParam$ = 52						; size = 4
?CreateWindowExA_Detour@@YGPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z PROC ; CreateWindowExA_Detour

; 5521 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 5522 :   if (SK_GetCallingDLL () == SK_GetDLL ())

	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	esi
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	mov	esi, eax
	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	cmp	esi, eax
	jne	SHORT $LN6@CreateWind
	pop	esi

; 5549 :                               X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
; 5550 : 
; 5551 : 
; 5552 :   //// Early render window detection. Every little bit helps when the possibility of installing this hook first exists.
; 5553 :   //if (hWndRet != 0 && (hInstance == nullptr || hInstance == GetModuleHandle (nullptr)) && (! caught_register))
; 5554 :   //{
; 5555 :   //  if (dwStyle & (WS_OVERLAPPEDWINDOW))
; 5556 :   //  {
; 5557 :   //    caught_register = true;
; 5558 :   //      
; 5559 :   //    SK_LOG0 ( (L"[!] > ApplicationWindow: [Class: %16hs, Title: %34hs]", lpClassName, lpWindowName), L"WindowFind" );
; 5560 :   //
; 5561 :   //    game_window.hWnd    = hWndRet;
; 5562 :   //    game_window.unicode = false;
; 5563 :   //    game_window.active  = true;
; 5564 :   //
; 5565 :   //    game_window.GetWindowLongPtr = GetWindowLongPtrA_Original;
; 5566 :   //    game_window.SetWindowLongPtr = SetWindowLongPtrA_Original;
; 5567 :   //  //game_window.SetClassLongPtr  = SetClassLongPtrW_Original;
; 5568 :   //    game_window.DefWindowProc    = (DefWindowProc_pfn)
; 5569 :   //      GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5570 :   //                         "DefWindowProcA" );
; 5571 :   //    game_window.CallWindowProc   = (CallWindowProc_pfn)
; 5572 :   //      GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5573 :   //                         "CallWindowProcA" );
; 5574 :   //
; 5575 :   //    SK_MakeWindowHook ((LPVOID)GetClassLongPtrA (hWndRet, GCLP_WNDPROC), (LPVOID)GetWindowLongPtrA (hWndRet, GWLP_WNDPROC));
; 5576 :   //
; 5577 :   //    //game_window.WndProc_Original = (WNDPROC)GetClassLongPtrA (hWndRet, GCLP_WNDPROC);
; 5578 :   //    //                                        SetClassLongPtrA (hWndRet, GCLP_WNDPROC, (LONG_PTR)(WNDPROC)SK_DetourWindowProc);
; 5579 :   //  }
; 5580 :   //}
; 5581 : 
; 5582 :   return hWndRet;
; 5583 : }

	pop	ebp

; 5523 :   {
; 5524 :     return

	jmp	DWORD PTR ?CreateWindowExA_Original@@3P6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExA_Original
$LN6@CreateWind:
	cmp	DWORD PTR _dwStyle$[ebp], 0

; 5525 :       CreateWindowExA_Original (dwExStyle, lpClassName, lpWindowName, dwStyle,
; 5526 :                                 X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
; 5527 :   }
; 5528 : 
; 5529 :   if ((dwStyle & WS_POPUP))

	jge	SHORT $LN5@CreateWind
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 5531 :     if (ReadAcquire (&SK_bypass_dialog_active))

	test	eax, eax
	je	SHORT $LN5@CreateWind

; 5533 :       if (IsGUIThread (FALSE))

	push	0
	call	DWORD PTR __imp__IsGUIThread@4
	test	eax, eax
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 5533 :       if (IsGUIThread (FALSE))

	je	SHORT $LN19@CreateWind

; 5535 :         while (ReadAcquire ((&SK_bypass_dialog_active)))

	test	eax, eax
	je	SHORT $LN5@CreateWind
	mov	esi, DWORD PTR __imp__MsgWaitForMultipleObjectsEx@20
	npad	1
$LL2@CreateWind:

; 5536 :           MsgWaitForMultipleObjectsEx (0, nullptr, 1, QS_ALLINPUT, MWMO_ALERTABLE);

	push	2
	push	1279					; 000004ffH
	push	1
	push	0
	push	0
	call	esi
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 5535 :         while (ReadAcquire ((&SK_bypass_dialog_active)))

	test	eax, eax
	jne	SHORT $LL2@CreateWind

; 5537 :       }
; 5538 : 
; 5539 :       else

	jmp	SHORT $LN5@CreateWind
$LN19@CreateWind:

; 5541 :         while (ReadAcquire ((&SK_bypass_dialog_active)))

	test	eax, eax
	je	SHORT $LN5@CreateWind
	mov	esi, DWORD PTR __imp__WaitForMultipleObjectsEx@20
$LL4@CreateWind:

; 5542 :           WaitForMultipleObjectsEx (0, nullptr, 1, QS_ALLINPUT, MWMO_ALERTABLE);

	push	2
	push	1279					; 000004ffH
	push	1
	push	0
	push	0
	call	esi
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 5541 :         while (ReadAcquire ((&SK_bypass_dialog_active)))

	test	eax, eax
	jne	SHORT $LL4@CreateWind
$LN5@CreateWind:
	pop	esi

; 5549 :                               X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
; 5550 : 
; 5551 : 
; 5552 :   //// Early render window detection. Every little bit helps when the possibility of installing this hook first exists.
; 5553 :   //if (hWndRet != 0 && (hInstance == nullptr || hInstance == GetModuleHandle (nullptr)) && (! caught_register))
; 5554 :   //{
; 5555 :   //  if (dwStyle & (WS_OVERLAPPEDWINDOW))
; 5556 :   //  {
; 5557 :   //    caught_register = true;
; 5558 :   //      
; 5559 :   //    SK_LOG0 ( (L"[!] > ApplicationWindow: [Class: %16hs, Title: %34hs]", lpClassName, lpWindowName), L"WindowFind" );
; 5560 :   //
; 5561 :   //    game_window.hWnd    = hWndRet;
; 5562 :   //    game_window.unicode = false;
; 5563 :   //    game_window.active  = true;
; 5564 :   //
; 5565 :   //    game_window.GetWindowLongPtr = GetWindowLongPtrA_Original;
; 5566 :   //    game_window.SetWindowLongPtr = SetWindowLongPtrA_Original;
; 5567 :   //  //game_window.SetClassLongPtr  = SetClassLongPtrW_Original;
; 5568 :   //    game_window.DefWindowProc    = (DefWindowProc_pfn)
; 5569 :   //      GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5570 :   //                         "DefWindowProcA" );
; 5571 :   //    game_window.CallWindowProc   = (CallWindowProc_pfn)
; 5572 :   //      GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5573 :   //                         "CallWindowProcA" );
; 5574 :   //
; 5575 :   //    SK_MakeWindowHook ((LPVOID)GetClassLongPtrA (hWndRet, GCLP_WNDPROC), (LPVOID)GetWindowLongPtrA (hWndRet, GWLP_WNDPROC));
; 5576 :   //
; 5577 :   //    //game_window.WndProc_Original = (WNDPROC)GetClassLongPtrA (hWndRet, GCLP_WNDPROC);
; 5578 :   //    //                                        SetClassLongPtrA (hWndRet, GCLP_WNDPROC, (LONG_PTR)(WNDPROC)SK_DetourWindowProc);
; 5579 :   //  }
; 5580 :   //}
; 5581 : 
; 5582 :   return hWndRet;
; 5583 : }

	pop	ebp

; 5543 :       }
; 5544 :     }
; 5545 :   }
; 5546 : 
; 5547 :   HWND hWndRet =
; 5548 :     CreateWindowExA_Original (dwExStyle, lpClassName, lpWindowName, dwStyle,

	jmp	DWORD PTR ?CreateWindowExA_Original@@3P6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExA_Original
?CreateWindowExA_Detour@@YGPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z ENDP ; CreateWindowExA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_class_proc$ = 8					; size = 4
_wnd_proc$ = 12						; size = 4
?SK_MakeWindowHook@@YAXPAX0@Z PROC			; SK_MakeWindowHook

; 5471 : {  

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 5472 :   if ( MH_OK ==

	mov	esi, DWORD PTR _class_proc$[ebp]
	push	OFFSET ?game_window@@3Usk_window_s@@A+8
	push	OFFSET ?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc
	push	esi
	call	_MH_CreateHook@12
	test	eax, eax
	jne	SHORT $LN2@SK_MakeWin

; 5473 :          MH_CreateHook (
; 5474 :                                                  class_proc,
; 5475 :                                         SK_DetourWindowProc,
; 5476 :                static_cast_p2p <void> (&game_window.WndProc_Original)
; 5477 :          )
; 5478 :     )
; 5479 :   {
; 5480 :     MH_QueueEnableHook (class_proc);

	push	esi
	call	_MH_QueueEnableHook@4

; 5481 :   
; 5482 :     dll_log.Log (L"[Window Mgr]  >> Hooked ClassProc.");

	push	OFFSET $SG282117

; 5483 :   
; 5484 :     game_window.hooked = false;
; 5485 :   }
; 5486 : 
; 5487 :   else

	jmp	SHORT $LN12@SK_MakeWin
$LN2@SK_MakeWin:

; 5488 :   if ( MH_OK ==

	mov	esi, DWORD PTR _wnd_proc$[ebp]
	push	OFFSET ?game_window@@3Usk_window_s@@A+8
	push	OFFSET ?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc
	push	esi
	call	_MH_CreateHook@12
	test	eax, eax
	jne	SHORT $LN4@SK_MakeWin

; 5489 :               MH_CreateHook (
; 5490 :                                                     wnd_proc,
; 5491 :                                          SK_DetourWindowProc,
; 5492 :                 static_cast_p2p <void> (&game_window.WndProc_Original)
; 5493 :               )
; 5494 :           )
; 5495 :   {
; 5496 :     MH_QueueEnableHook (wnd_proc);

	push	esi
	call	_MH_QueueEnableHook@4

; 5497 :   
; 5498 :     dll_log.Log (L"[Window Mgr]  >> Hooked WndProc.");

	push	OFFSET $SG282119
$LN12@SK_MakeWin:
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 5499 :   
; 5500 :     game_window.hooked = false;

	mov	BYTE PTR ?game_window@@3Usk_window_s@@A+220, 0
	add	esp, 8
$LN4@SK_MakeWin:
	pop	esi

; 5504 : }

	pop	ebp

; 5501 :   }
; 5502 : 
; 5503 :   SK_ApplyQueuedHooks ();

	jmp	?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ ; SK_ApplyQueuedHooks
?SK_MakeWindowHook@@YAXPAX0@Z ENDP			; SK_MakeWindowHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_wnd_class_ex$ = -48					; size = 48
_lpWndClassEx$ = 8					; size = 4
?RegisterClassExW_Detour@@YGGPBUtagWNDCLASSEXW@@@Z PROC	; RegisterClassExW_Detour

; 5423 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 5424 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??RegisterClassExW_Detour@@YGGPBUtagWNDCLASSEXW@@@Z@4_NA, 0
	jne	SHORT $LN2@RegisterCl
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@RegisterCl
	push	OFFSET $SG282078
	push	OFFSET $SG282079
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@RegisterCl:
	mov	BYTE PTR ?called@?2??RegisterClassExW_Detour@@YGGPBUtagWNDCLASSEXW@@@Z@4_NA, 1
$LN2@RegisterCl:
	push	esi

; 5425 : 
; 5426 :   auto wnd_class_ex = *lpWndClassEx;

	mov	esi, DWORD PTR _lpWndClassEx$[ebp]

; 5427 : 
; 5428 :   if (lpWndClassEx->hInstance == GetModuleHandle (nullptr))

	push	0
	movups	xmm0, XMMWORD PTR [esi]
	movups	XMMWORD PTR _wnd_class_ex$[ebp], xmm0
	movups	xmm0, XMMWORD PTR [esi+16]
	movups	XMMWORD PTR _wnd_class_ex$[ebp+16], xmm0
	movups	xmm0, XMMWORD PTR [esi+32]
	movups	XMMWORD PTR _wnd_class_ex$[ebp+32], xmm0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	DWORD PTR [esi+20], eax
	pop	esi
	jne	SHORT $LN4@RegisterCl

; 5429 :   {
; 5430 :     game_window.WndProc_Original = wnd_class_ex.lpfnWndProc;

	mov	eax, DWORD PTR _wnd_class_ex$[ebp+8]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+8, eax

; 5431 :     wnd_class_ex.lpfnWndProc     = (WNDPROC)SK_DetourWindowProc;

	mov	DWORD PTR _wnd_class_ex$[ebp+8], OFFSET ?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc

; 5432 :     caught_register              = true;

	mov	BYTE PTR ?caught_register@@3_NA, 1	; caught_register
$LN4@RegisterCl:

; 5433 :   }
; 5434 : 
; 5435 :   return RegisterClassExW_Original (&wnd_class_ex);

	lea	eax, DWORD PTR _wnd_class_ex$[ebp]
	push	eax
	call	DWORD PTR ?RegisterClassExW_Original@@3P6GGPBUtagWNDCLASSEXW@@@ZA ; RegisterClassExW_Original

; 5436 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterClassExW_Detour@@YGGPBUtagWNDCLASSEXW@@@Z ENDP	; RegisterClassExW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_wnd_class_ex$ = -48					; size = 48
_lpWndClassEx$ = 8					; size = 4
?RegisterClassExA_Detour@@YGGPBUtagWNDCLASSEXA@@@Z PROC	; RegisterClassExA_Detour

; 5405 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 5406 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??RegisterClassExA_Detour@@YGGPBUtagWNDCLASSEXA@@@Z@4_NA, 0
	jne	SHORT $LN2@RegisterCl
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@RegisterCl
	push	OFFSET $SG282066
	push	OFFSET $SG282067
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@RegisterCl:
	mov	BYTE PTR ?called@?2??RegisterClassExA_Detour@@YGGPBUtagWNDCLASSEXA@@@Z@4_NA, 1
$LN2@RegisterCl:
	push	esi

; 5407 : 
; 5408 :   auto wnd_class_ex = *lpWndClassEx;

	mov	esi, DWORD PTR _lpWndClassEx$[ebp]

; 5409 : 
; 5410 :   if (lpWndClassEx->hInstance == GetModuleHandle (nullptr))

	push	0
	movups	xmm0, XMMWORD PTR [esi]
	movups	XMMWORD PTR _wnd_class_ex$[ebp], xmm0
	movups	xmm0, XMMWORD PTR [esi+16]
	movups	XMMWORD PTR _wnd_class_ex$[ebp+16], xmm0
	movups	xmm0, XMMWORD PTR [esi+32]
	movups	XMMWORD PTR _wnd_class_ex$[ebp+32], xmm0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	DWORD PTR [esi+20], eax
	pop	esi
	jne	SHORT $LN4@RegisterCl

; 5411 :   {
; 5412 :     game_window.WndProc_Original = wnd_class_ex.lpfnWndProc;

	mov	eax, DWORD PTR _wnd_class_ex$[ebp+8]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+8, eax

; 5413 :     wnd_class_ex.lpfnWndProc     = (WNDPROC)SK_DetourWindowProc;

	mov	DWORD PTR _wnd_class_ex$[ebp+8], OFFSET ?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc

; 5414 :     caught_register              = true;

	mov	BYTE PTR ?caught_register@@3_NA, 1	; caught_register
$LN4@RegisterCl:

; 5415 :   }
; 5416 : 
; 5417 :   return RegisterClassExA_Original (&wnd_class_ex);

	lea	eax, DWORD PTR _wnd_class_ex$[ebp]
	push	eax
	call	DWORD PTR ?RegisterClassExA_Original@@3P6GGPBUtagWNDCLASSEXA@@@ZA ; RegisterClassExA_Original

; 5418 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterClassExA_Detour@@YGGPBUtagWNDCLASSEXA@@@Z ENDP	; RegisterClassExA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_wnd_class$ = -40					; size = 40
_lpWndClass$ = 8					; size = 4
?RegisterClassW_Detour@@YGGPBUtagWNDCLASSW@@@Z PROC	; RegisterClassW_Detour

; 5387 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 5388 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??RegisterClassW_Detour@@YGGPBUtagWNDCLASSW@@@Z@4_NA, 0
	jne	SHORT $LN2@RegisterCl
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@RegisterCl
	push	OFFSET $SG282054
	push	OFFSET $SG282055
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@RegisterCl:
	mov	BYTE PTR ?called@?2??RegisterClassW_Detour@@YGGPBUtagWNDCLASSW@@@Z@4_NA, 1
$LN2@RegisterCl:
	push	esi

; 5389 : 
; 5390 :   auto wnd_class = *lpWndClass;

	mov	esi, DWORD PTR _lpWndClass$[ebp]

; 5391 : 
; 5392 :   if (lpWndClass->hInstance == GetModuleHandle (nullptr))

	push	0
	movups	xmm0, XMMWORD PTR [esi]
	movups	XMMWORD PTR _wnd_class$[ebp], xmm0
	movups	xmm0, XMMWORD PTR [esi+16]
	movups	XMMWORD PTR _wnd_class$[ebp+16], xmm0
	movq	xmm0, QWORD PTR [esi+32]
	movq	QWORD PTR _wnd_class$[ebp+32], xmm0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	DWORD PTR [esi+16], eax
	pop	esi
	jne	SHORT $LN4@RegisterCl

; 5393 :   {
; 5394 :     game_window.WndProc_Original = wnd_class.lpfnWndProc;

	mov	eax, DWORD PTR _wnd_class$[ebp+4]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+8, eax

; 5395 :     wnd_class.lpfnWndProc        = (WNDPROC)SK_DetourWindowProc;

	mov	DWORD PTR _wnd_class$[ebp+4], OFFSET ?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc

; 5396 :     caught_register              = true;

	mov	BYTE PTR ?caught_register@@3_NA, 1	; caught_register
$LN4@RegisterCl:

; 5397 :   }
; 5398 : 
; 5399 :   return RegisterClassW_Original (&wnd_class);

	lea	eax, DWORD PTR _wnd_class$[ebp]
	push	eax
	call	DWORD PTR ?RegisterClassW_Original@@3P6GGPBUtagWNDCLASSW@@@ZA ; RegisterClassW_Original

; 5400 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterClassW_Detour@@YGGPBUtagWNDCLASSW@@@Z ENDP	; RegisterClassW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_wnd_class$ = -40					; size = 40
_lpWndClass$ = 8					; size = 4
?RegisterClassA_Detour@@YGGPBUtagWNDCLASSA@@@Z PROC	; RegisterClassA_Detour

; 5369 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 5370 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??RegisterClassA_Detour@@YGGPBUtagWNDCLASSA@@@Z@4_NA, 0
	jne	SHORT $LN2@RegisterCl
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@RegisterCl
	push	OFFSET $SG282042
	push	OFFSET $SG282043
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@RegisterCl:
	mov	BYTE PTR ?called@?2??RegisterClassA_Detour@@YGGPBUtagWNDCLASSA@@@Z@4_NA, 1
$LN2@RegisterCl:
	push	esi

; 5371 : 
; 5372 :   auto wnd_class = *lpWndClass;

	mov	esi, DWORD PTR _lpWndClass$[ebp]

; 5373 : 
; 5374 :   if (lpWndClass->hInstance == GetModuleHandle (nullptr))

	push	0
	movups	xmm0, XMMWORD PTR [esi]
	movups	XMMWORD PTR _wnd_class$[ebp], xmm0
	movups	xmm0, XMMWORD PTR [esi+16]
	movups	XMMWORD PTR _wnd_class$[ebp+16], xmm0
	movq	xmm0, QWORD PTR [esi+32]
	movq	QWORD PTR _wnd_class$[ebp+32], xmm0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	DWORD PTR [esi+16], eax
	pop	esi
	jne	SHORT $LN4@RegisterCl

; 5375 :   {
; 5376 :     game_window.WndProc_Original = wnd_class.lpfnWndProc;

	mov	eax, DWORD PTR _wnd_class$[ebp+4]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+8, eax

; 5377 :     wnd_class.lpfnWndProc        = (WNDPROC)SK_DetourWindowProc;

	mov	DWORD PTR _wnd_class$[ebp+4], OFFSET ?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc

; 5378 :     caught_register              = true;

	mov	BYTE PTR ?caught_register@@3_NA, 1	; caught_register
$LN4@RegisterCl:

; 5379 :   }
; 5380 : 
; 5381 :   return RegisterClassA_Original (&wnd_class);

	lea	eax, DWORD PTR _wnd_class$[ebp]
	push	eax
	call	DWORD PTR ?RegisterClassA_Original@@3P6GGPBUtagWNDCLASSA@@@ZA ; RegisterClassA_Original

; 5382 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RegisterClassA_Detour@@YGGPBUtagWNDCLASSA@@@Z ENDP	; RegisterClassA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GJPAUHWND__@@IIJ@Z@@YAPAPAXPAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GJPAUHWND__@@IIJ@Z@@YAPAPAXPAP6GJPAUHWND__@@IIJ@Z@Z PROC ; static_cast_p2p<void,long __stdcall(HWND__ *,unsigned int,unsigned int,long)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GJPAUHWND__@@IIJ@Z@@YAPAPAXPAP6GJPAUHWND__@@IIJ@Z@Z ENDP ; static_cast_p2p<void,long __stdcall(HWND__ *,unsigned int,unsigned int,long)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GJPBUtagMSG@@@Z@@YAPAPAXPAP6GJPBUtagMSG@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GJPBUtagMSG@@@Z@@YAPAPAXPAP6GJPBUtagMSG@@@Z@Z PROC ; static_cast_p2p<void,long __stdcall(tagMSG const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GJPBUtagMSG@@@Z@@YAPAPAXPAP6GJPBUtagMSG@@@Z@Z ENDP ; static_cast_p2p<void,long __stdcall(tagMSG const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUtagMSG@@PAUHWND__@@II@Z@@YAPAPAXPAP6GHPAUtagMSG@@PAUHWND__@@II@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUtagMSG@@PAUHWND__@@II@Z@@YAPAPAXPAP6GHPAUtagMSG@@PAUHWND__@@II@Z@Z PROC ; static_cast_p2p<void,int __stdcall(tagMSG *,HWND__ *,unsigned int,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUtagMSG@@PAUHWND__@@II@Z@@YAPAPAXPAP6GHPAUtagMSG@@PAUHWND__@@II@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(tagMSG *,HWND__ *,unsigned int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUtagMSG@@PAUHWND__@@III@Z@@YAPAPAXPAP6GHPAUtagMSG@@PAUHWND__@@III@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUtagMSG@@PAUHWND__@@III@Z@@YAPAPAXPAP6GHPAUtagMSG@@PAUHWND__@@III@Z@Z PROC ; static_cast_p2p<void,int __stdcall(tagMSG *,HWND__ *,unsigned int,unsigned int,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUtagMSG@@PAUHWND__@@III@Z@@YAPAPAXPAP6GHPAUtagMSG@@PAUHWND__@@III@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(tagMSG *,HWND__ *,unsigned int,unsigned int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPBUtagMSG@@@Z@@YAPAPAXPAP6GHPBUtagMSG@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPBUtagMSG@@@Z@@YAPAPAXPAP6GHPBUtagMSG@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(tagMSG const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPBUtagMSG@@@Z@@YAPAPAXPAP6GHPBUtagMSG@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(tagMSG const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_ef5a5d55df29ca77b1ac13434a2f0c31>@@QBEX_N@Z
_TEXT	SEGMENT
_active$ = 8						; size = 1
_state_changed$1$ = 11					; size = 1
??R<lambda_ef5a5d55df29ca77b1ac13434a2f0c31>@@QBEX_N@Z PROC ; <lambda_ef5a5d55df29ca77b1ac13434a2f0c31>::operator(), COMDAT
; _this$ = ecx

; 4472 :   {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 4473 :     bool state_changed =
; 4474 :       (game_window.active != active);

	mov	ebx, DWORD PTR _active$[ebp]
	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, bl
	push	esi
	setne	al

; 4475 : 
; 4476 :     game_window.active = active;

	mov	BYTE PTR ?game_window@@3Usk_window_s@@A+17, bl
	mov	BYTE PTR _state_changed$1$[ebp], al

; 4477 : 
; 4478 :     if (state_changed)

	test	al, al
	je	SHORT $LN8@operator

; 4479 :     {
; 4480 :       SK_Console::getInstance ()->reset ();

	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance
	mov	ecx, eax
	call	?reset@SK_Console@@QAEXXZ		; SK_Console::reset

; 4481 : 
; 4482 :       if (config.window.background_mute)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+765, 0
	je	SHORT $LN7@operator

; 4483 :         SK_WindowManager::getInstance ()->muteGame ((! active));

	call	?getInstance@SK_WindowManager@@SAPAV1@XZ ; SK_WindowManager::getInstance
	mov	al, bl
	xor	al, 1

; 707  :     SK_SetGameMute (bMute);

	movzx	eax, al
	push	eax
	call	?SK_SetGameMute@@YGX_N@Z		; SK_SetGameMute
$LN7@operator:

; 4484 : 
; 4485 :       // Keep Unity games from crashing at startup when forced into FULLSCREEN
; 4486 :       //
; 4487 :       //  ... also prevents a game from staying topmost when you Alt+Tab
; 4488 :       //
; 4489 : 
; 4490 :       if ( active && config.display.force_fullscreen &&

	test	bl, bl
	je	$LN37@operator
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+516, 0
	je	SHORT $LN39@operator
	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	test	BYTE PTR [eax], 8
	je	SHORT $LN39@operator

; 4491 :            ( static_cast <int> (SK_GetCurrentRenderBackend ().api)  &
; 4492 :              static_cast <int> (SK_RenderAPI::D3D9               )
; 4493 :            )
; 4494 :          )
; 4495 :       {
; 4496 :         SetWindowLongPtrW    (game_window.hWnd, GWL_EXSTYLE,

	push	-20					; ffffffecH
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__GetWindowLongW@8
	and	eax, -134217737				; f7fffff7H
	or	eax, 262144				; 00040000H
	push	eax
	push	-20					; ffffffecH
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__SetWindowLongW@12

; 4497 :          ( GetWindowLongPtrW (game_window.hWnd, GWL_EXSTYLE) & ~(WS_EX_TOPMOST | WS_EX_NOACTIVATE)
; 4498 :          ) | WS_EX_APPWINDOW );
; 4499 :         //SetWindowPos      (game_window.hWnd, HWND_NOTOPMOST, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4500 :         //                                                                 SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4501 :         //                                                                 SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE );
; 4502 :         //SetWindowPos      (game_window.hWnd, HWND_TOP, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4503 :         //                                                           SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4504 :         //                                                           SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE | SWP_NOZORDER );
; 4505 : 
; 4506 :         extern void
; 4507 :         SK_D3D9_TriggerReset (bool);
; 4508 :       
; 4509 :         SK_D3D9_TriggerReset (false);

	push	0
	call	?SK_D3D9_TriggerReset@@YAX_N@Z		; SK_D3D9_TriggerReset
	add	esp, 4
$LN39@operator:
	mov	al, BYTE PTR _state_changed$1$[ebp]
$LN8@operator:

; 4510 :       }
; 4511 :     }
; 4512 : 
; 4513 : 
; 4514 :     if (active && state_changed)

	test	bl, bl
	je	SHORT $LN32@operator
	test	al, al
	je	SHORT $LN14@operator

; 4515 :     {
; 4516 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN36@operator
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN36@operator

; 4517 :       {
; 4518 :         if (! game_window.cursor_visible)

	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+192, 0
	jne	SHORT $LN3@operator
	mov	esi, DWORD PTR __imp__ShowCursor@4
$LL2@operator:

; 4519 :         {
; 4520 :           while (ShowCursor (FALSE) >= 0)

	push	0
	call	esi
	test	eax, eax
	jns	SHORT $LL2@operator
$LN3@operator:

; 4521 :             ;
; 4522 :         }
; 4523 : 
; 4524 :         ClipCursor_Original (&game_window.cursor_clip);

	push	OFFSET ?game_window@@3Usk_window_s@@A+168

; 4525 :       }
; 4526 :     }

	jmp	SHORT $LN41@operator
$LN37@operator:
	mov	al, BYTE PTR _state_changed$1$[ebp]
$LN32@operator:

; 4527 : 
; 4528 :     else if ((! active) && state_changed)

	test	al, al
	je	SHORT $LN14@operator

; 4529 :     {
; 4530 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN36@operator
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN36@operator

; 4531 :       {
; 4532 :         game_window.cursor_visible =

	mov	esi, DWORD PTR __imp__ShowCursor@4
	push	1
	call	esi
	cmp	eax, 1
	setge	BYTE PTR ?game_window@@3Usk_window_s@@A+192
	npad	1
$LL4@operator:

; 4533 :           ShowCursor (TRUE) >= 1;
; 4534 : 
; 4535 :         while (ShowCursor (TRUE) < 0)

	push	1
	call	esi
	test	eax, eax
	js	SHORT $LL4@operator

; 4536 :           ;
; 4537 : 
; 4538 :         ClipCursor_Original (nullptr);

	push	0
$LN41@operator:
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN36@operator:
	mov	al, BYTE PTR _state_changed$1$[ebp]
$LN14@operator:

; 4539 :       }
; 4540 :     }
; 4541 : 
; 4542 : 
; 4543 :     if (config.window.confine_cursor && state_changed)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+766, 0
	je	SHORT $LN17@operator
	test	al, al
	je	SHORT $LN17@operator

; 4544 :     {
; 4545 :       if (active)

	test	bl, bl
	je	SHORT $LN16@operator

; 4546 :       {
; 4547 :         SK_LOG4 ( ( L"Confining Mouse Cursor" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN18@operator
	push	OFFSET ??_C@_1EI@CGANLFJM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC?$AAu?$AAr@
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN18@operator:

; 4548 :                     L"Window Mgr" );
; 4549 : 
; 4550 :         ////// XXX: Is this really necessary? State should be consistent unless we missed
; 4551 :         //////        an event --- Write unit test?
; 4552 :         GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 4553 :         ClipCursor_Original    (&game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100

; 4554 :       }
; 4555 : 
; 4556 :       else

	jmp	SHORT $LN40@operator
$LN16@operator:

; 4557 :       {
; 4558 :         SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN19@operator
	push	OFFSET ??_C@_1EM@LBJEIGPM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAU?$AAn?$AAc?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC@
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN19@operator:

; 4559 :                     L"Window Mgr" );
; 4560 : 
; 4561 :         ClipCursor_Original (nullptr);

	push	0
$LN40@operator:
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN17@operator:

; 4562 :       }
; 4563 :     }
; 4564 : 
; 4565 :     if (config.window.unconfine_cursor && state_changed)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	je	SHORT $LN20@operator
	cmp	BYTE PTR _state_changed$1$[ebp], 0
	je	SHORT $LN22@operator

; 4566 :     {
; 4567 :       SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN21@operator
	push	OFFSET ??_C@_1EM@LBJEIGPM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAU?$AAn?$AAc?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC@
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN21@operator:

; 4568 :                   L"Window Mgr" );
; 4569 :       
; 4570 :       ClipCursor_Original (nullptr);

	push	0
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN20@operator:

; 4571 :     }
; 4572 : 
; 4573 :     if (state_changed)

	cmp	BYTE PTR _state_changed$1$[ebp], 0
	je	SHORT $LN22@operator

; 4574 :       SK_ImGui_Cursor.activateWindow (active);

	push	ebx
	mov	ecx, OFFSET ?SK_ImGui_Cursor@@3Usk_imgui_cursor_s@@A ; SK_ImGui_Cursor
	call	?activateWindow@sk_imgui_cursor_s@@QAEX_N@Z ; sk_imgui_cursor_s::activateWindow
$LN22@operator:
	pop	esi
	pop	ebx

; 4575 :   };

	pop	ebp
	ret	4
??R<lambda_ef5a5d55df29ca77b1ac13434a2f0c31>@@QBEX_N@Z ENDP ; <lambda_ef5a5d55df29ca77b1ac13434a2f0c31>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_dad5f25fac12a4e0d93ddcd601f383ab>@@QBE_NXZ
_TEXT	SEGMENT
??R<lambda_dad5f25fac12a4e0d93ddcd601f383ab>@@QBE_NXZ PROC ; <lambda_dad5f25fac12a4e0d93ddcd601f383ab>::operator(), COMDAT
; _this$ = ecx

; 4392 :    []{

	npad	2
	push	ebx

; 4393 :        if (! last_mouse.cursor)

	mov	bl, BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8
	test	bl, bl
	jne	SHORT $LN4@operator

; 4394 :          return false;

	xor	al, al
	pop	ebx

; 4410 :      };

	ret	0
$LN4@operator:

; 4395 : 
; 4396 :        bool was_active = last_mouse.cursor;
; 4397 : 
; 4398 :        if (last_mouse.sampled <= timeGetTime () - config.input.cursor.timeout)

	call	DWORD PTR __imp__timeGetTime@0
	sub	eax, DWORD PTR ?config@@3Usk_config_t@@A+668
	cmp	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+4, eax
	ja	SHORT $LN6@operator

; 4399 :        {
; 4400 :          if ((! SK_IsSteamOverlayActive ()) && game_window.active)

	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	SHORT $LN6@operator
	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, al
	je	SHORT $LN6@operator
	push	esi
	mov	esi, DWORD PTR __imp__ShowCursor@4
	npad	3
$LL2@operator:

; 4401 :          {
; 4402 :            while (ShowCursor (FALSE) >= -1) ;

	push	0
	call	esi
	cmp	eax, -1
	jge	SHORT $LL2@operator

; 4403 :            last_mouse.cursor = false;

	mov	BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8, 0

; 4404 : 
; 4405 :            last_mouse.sampled = timeGetTime ();

	call	DWORD PTR __imp__timeGetTime@0
	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+4, eax
	pop	esi
$LN6@operator:

; 4406 :          }
; 4407 :        }
; 4408 : 
; 4409 :        return (last_mouse.cursor != was_active);

	xor	eax, eax
	cmp	BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8, bl
	pop	ebx
	setne	al

; 4410 :      };

	ret	0
??R<lambda_dad5f25fac12a4e0d93ddcd601f383ab>@@QBE_NXZ ENDP ; <lambda_dad5f25fac12a4e0d93ddcd601f383ab>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_2572320820a0ac4674a028f271eecacf>@@QBE_N_N@Z
_TEXT	SEGMENT
_changed$ = 8						; size = 1
??R<lambda_2572320820a0ac4674a028f271eecacf>@@QBE_N_N@Z PROC ; <lambda_2572320820a0ac4674a028f271eecacf>::operator(), COMDAT
; _this$ = ecx

; 4373 :      {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 4374 :        bool was_active = last_mouse.cursor;

	mov	bl, BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8

; 4375 : 
; 4376 :        if (! last_mouse.cursor)

	test	bl, bl
	jne	SHORT $LN11@operator

; 4377 :        {
; 4378 :          if ((! SK_IsSteamOverlayActive ()) && game_window.active)

	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	SHORT $LN11@operator
	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, al
	je	SHORT $LN11@operator
	push	esi
	mov	esi, DWORD PTR __imp__ShowCursor@4
$LL2@operator:

; 4379 :          {
; 4380 :            while (ShowCursor (TRUE) < 0) ;

	push	1
	call	esi
	test	eax, eax
	js	SHORT $LL2@operator

; 4381 :            last_mouse.cursor = true;

	mov	BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8, 1
	pop	esi
$LN11@operator:

; 4382 :          }
; 4383 :        }
; 4384 : 
; 4385 :        if (changed && (! SK_IsSteamOverlayActive ()))

	cmp	BYTE PTR _changed$[ebp], 0
	je	SHORT $LN12@operator
	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	SHORT $LN12@operator

; 4386 :          last_mouse.sampled = timeGetTime ();

	call	DWORD PTR __imp__timeGetTime@0
	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+4, eax
$LN12@operator:

; 4387 : 
; 4388 :        return (last_mouse.cursor != was_active);

	xor	eax, eax
	cmp	BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8, bl
	pop	ebx
	setne	al

; 4389 :      };

	pop	ebp
	ret	4
??R<lambda_2572320820a0ac4674a028f271eecacf>@@QBE_N_N@Z ENDP ; <lambda_2572320820a0ac4674a028f271eecacf>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_b96439b331919f344b20b5d1514ebddc>@@QBE_NXZ
_TEXT	SEGMENT
??R<lambda_b96439b331919f344b20b5d1514ebddc>@@QBE_NXZ PROC ; <lambda_b96439b331919f344b20b5d1514ebddc>::operator(), COMDAT
; _this$ = ecx

; 3633 :      []{

	npad	2
	push	ebx

; 3634 :          if (! last_mouse.cursor)

	mov	bl, BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8
	test	bl, bl
	jne	SHORT $LN4@operator

; 3635 :            return false;

	xor	al, al
	pop	ebx

; 3651 :        };

	ret	0
$LN4@operator:

; 3636 : 
; 3637 :          bool was_active = last_mouse.cursor;
; 3638 : 
; 3639 :          if (last_mouse.sampled <= timeGetTime () - config.input.cursor.timeout)

	call	DWORD PTR __imp__timeGetTime@0
	sub	eax, DWORD PTR ?config@@3Usk_config_t@@A+668
	cmp	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+4, eax
	ja	SHORT $LN6@operator

; 3640 :          {
; 3641 :            if ((! SK_IsSteamOverlayActive ()) && game_window.active)

	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	SHORT $LN6@operator
	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, al
	je	SHORT $LN6@operator
	push	esi
	mov	esi, DWORD PTR __imp__ShowCursor@4
	npad	3
$LL2@operator:

; 3642 :            {
; 3643 :              while (ShowCursor (FALSE) >= -1) ;

	push	0
	call	esi
	cmp	eax, -1
	jge	SHORT $LL2@operator

; 3644 :              last_mouse.cursor = false;

	mov	BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8, 0

; 3645 : 
; 3646 :              last_mouse.sampled = timeGetTime ();

	call	DWORD PTR __imp__timeGetTime@0
	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+4, eax
	pop	esi
$LN6@operator:

; 3647 :            }
; 3648 :          }
; 3649 : 
; 3650 :          return (last_mouse.cursor != was_active);

	xor	eax, eax
	cmp	BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8, bl
	pop	ebx
	setne	al

; 3651 :        };

	ret	0
??R<lambda_b96439b331919f344b20b5d1514ebddc>@@QBE_NXZ ENDP ; <lambda_b96439b331919f344b20b5d1514ebddc>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_813a99a73084f12031f7ff0d640b0dd1>@@QBE_N_N@Z
_TEXT	SEGMENT
_changed$ = 8						; size = 1
??R<lambda_813a99a73084f12031f7ff0d640b0dd1>@@QBE_N_N@Z PROC ; <lambda_813a99a73084f12031f7ff0d640b0dd1>::operator(), COMDAT
; _this$ = ecx

; 3614 :        {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 3615 :          bool was_active = last_mouse.cursor;

	mov	bl, BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8

; 3616 : 
; 3617 :          if (! last_mouse.cursor)

	test	bl, bl
	jne	SHORT $LN11@operator

; 3618 :          {
; 3619 :            if ((! SK_IsSteamOverlayActive ()) && game_window.active)

	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	SHORT $LN11@operator
	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, al
	je	SHORT $LN11@operator
	push	esi
	mov	esi, DWORD PTR __imp__ShowCursor@4
$LL2@operator:

; 3620 :            {
; 3621 :              while (ShowCursor (TRUE) < 0) ;

	push	1
	call	esi
	test	eax, eax
	js	SHORT $LL2@operator

; 3622 :              last_mouse.cursor = true;

	mov	BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8, 1
	pop	esi
$LN11@operator:

; 3623 :            }
; 3624 :          }
; 3625 : 
; 3626 :          if (changed && (! SK_IsSteamOverlayActive ()))

	cmp	BYTE PTR _changed$[ebp], 0
	je	SHORT $LN12@operator
	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	SHORT $LN12@operator

; 3627 :            last_mouse.sampled = timeGetTime ();

	call	DWORD PTR __imp__timeGetTime@0
	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+4, eax
$LN12@operator:

; 3628 : 
; 3629 :          return (last_mouse.cursor != was_active);

	xor	eax, eax
	cmp	BYTE PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+8, bl
	pop	ebx
	setne	al

; 3630 :        };

	pop	ebp
	ret	4
??R<lambda_813a99a73084f12031f7ff0d640b0dd1>@@QBE_N_N@Z ENDP ; <lambda_813a99a73084f12031f7ff0d640b0dd1>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_input$1 = -40						; size = 28
_lRet$2 = -12						; size = 4
_lRet$3 = -8						; size = 4
_DeactivateCursor$4 = -1				; size = 1
_nCode$ = 8						; size = 4
_ActivateCursor$5 = 11					; size = 1
_wParam_HOOK$ = 12					; size = 4
_lParam_HOOK$ = 16					; size = 4
?CallWndProc@@YGJHIJ@Z PROC				; CallWndProc

; 3551 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi

; 3552 :   if (nCode < 0 || __SK_DLL_Ending)

	mov	edi, DWORD PTR _nCode$[ebp]
	test	edi, edi
	js	$LN5@CallWndPro
	cmp	DWORD PTR ?__SK_DLL_Ending@@3JC, 0	; __SK_DLL_Ending
	jne	$LN5@CallWndPro

; 3554 : 
; 3555 :   {
; 3556 :     HWND&   hWnd   = ((CWPSTRUCT *)lParam_HOOK)->hwnd;
; 3557 :     UINT&   uMsg   = ((CWPSTRUCT *)lParam_HOOK)->message;
; 3558 :     WPARAM& wParam = ((CWPSTRUCT *)lParam_HOOK)->wParam;
; 3559 :     LPARAM& lParam = ((CWPSTRUCT *)lParam_HOOK)->lParam;
; 3560 : 
; 3561 :     static bool first = true;
; 3562 : 
; 3563 :     if (first && (hWnd == game_window.hWnd))

	cmp	BYTE PTR ?first@?4??CallWndProc@@YGJHIJ@Z@4_NA, 0
	push	esi
	mov	esi, DWORD PTR _lParam_HOOK$[ebp]
	je	$LN6@CallWndPro
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN7@CallWndPro

; 3564 :     {
; 3565 :       first = false;
; 3566 : 
; 3567 :       //if (game_window.hWnd != nullptr)
; 3568 :       //{
; 3569 :       //  dll_log.Log ( L"[Window Mgr] New HWND detected in the window proc. used"
; 3570 :       //                L" for rendering... (Old=%p, New=%p)",
; 3571 :       //                  game_window.hWnd, hWnd );
; 3572 :       //}
; 3573 : 
; 3574 :       game_window.hWnd = hWnd;
; 3575 : 
; 3576 :       game_window.active       = true;
; 3577 :       game_window.game.style   = game_window.GetWindowLongPtr (game_window.hWnd, GWL_STYLE);

	push	-16					; fffffff0H
	push	eax
	mov	BYTE PTR ?first@?4??CallWndProc@@YGJHIJ@Z@4_NA, 0
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+4, eax
	mov	BYTE PTR ?game_window@@3Usk_window_s@@A+17, 1
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+200

; 3578 :       game_window.actual.style = game_window.GetWindowLongPtr (game_window.hWnd, GWL_STYLE);

	push	-16					; fffffff0H
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, eax
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+200

; 3579 :       game_window.unicode      =              IsWindowUnicode (game_window.hWnd)   != FALSE;

	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, eax
	call	DWORD PTR __imp__IsWindowUnicode@4

; 3580 : 
; 3581 :       GetWindowRect_Original (game_window.hWnd, &game_window.game.window  );

	push	OFFSET ?game_window@@3Usk_window_s@@A+52
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	test	eax, eax
	setne	BYTE PTR ?game_window@@3Usk_window_s@@A
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 3582 :       GetClientRect_Original (game_window.hWnd, &game_window.game.client  );

	push	OFFSET ?game_window@@3Usk_window_s@@A+36
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 3583 :       GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 3584 :       GetClientRect_Original (game_window.hWnd, &game_window.actual.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+84
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 3585 : 
; 3586 :       SK_InitWindow (hWnd, false);

	push	0
	push	DWORD PTR [esi+12]
	call	?SK_InitWindow@@YAXPAUHWND__@@_N@Z	; SK_InitWindow
	add	esp, 8
$LN6@CallWndPro:

; 3587 :     }
; 3588 : 
; 3589 :     if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR [esi+12]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN7@CallWndPro

; 3590 :     {
; 3591 : #if 0
; 3592 :   if ((uMsg >= WM_MOUSEFIRST && uMsg <= WM_MOUSELAST) && game_window.needsCoordTransform ())
; 3593 :   {
; 3594 :     POINT pt;
; 3595 : 
; 3596 :     pt.x = GET_X_LPARAM (lParam);
; 3597 :     pt.y = GET_Y_LPARAM (lParam);
; 3598 : 
; 3599 :     SK_CalcCursorPos (&pt);
; 3600 : 
; 3601 :     lParam = MAKELPARAM ((SHORT)pt.x, (SHORT)pt.y);
; 3602 :   }
; 3603 : #endif
; 3604 : 
; 3605 : 
; 3606 : 
; 3607 : 
; 3608 :     if (config.input.cursor.manage)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+672, 0
	push	ebx
	je	$LN70@CallWndPro

; 3609 :     {
; 3610 :       //extern bool IsControllerPluggedIn (INT iJoyID);
; 3611 : 
; 3612 :      auto ActivateCursor = [](bool changed = false)->
; 3613 :       bool
; 3614 :        {
; 3615 :          bool was_active = last_mouse.cursor;
; 3616 : 
; 3617 :          if (! last_mouse.cursor)
; 3618 :          {
; 3619 :            if ((! SK_IsSteamOverlayActive ()) && game_window.active)
; 3620 :            {
; 3621 :              while (ShowCursor (TRUE) < 0) ;
; 3622 :              last_mouse.cursor = true;
; 3623 :            }
; 3624 :          }
; 3625 : 
; 3626 :          if (changed && (! SK_IsSteamOverlayActive ()))
; 3627 :            last_mouse.sampled = timeGetTime ();
; 3628 : 
; 3629 :          return (last_mouse.cursor != was_active);
; 3630 :        };
; 3631 : 
; 3632 :      auto DeactivateCursor = 
; 3633 :      []{
; 3634 :          if (! last_mouse.cursor)
; 3635 :            return false;
; 3636 : 
; 3637 :          bool was_active = last_mouse.cursor;
; 3638 : 
; 3639 :          if (last_mouse.sampled <= timeGetTime () - config.input.cursor.timeout)
; 3640 :          {
; 3641 :            if ((! SK_IsSteamOverlayActive ()) && game_window.active)
; 3642 :            {
; 3643 :              while (ShowCursor (FALSE) >= -1) ;
; 3644 :              last_mouse.cursor = false;
; 3645 : 
; 3646 :              last_mouse.sampled = timeGetTime ();
; 3647 :            }
; 3648 :          }
; 3649 : 
; 3650 :          return (last_mouse.cursor != was_active);
; 3651 :        };
; 3652 : 
; 3653 :       if (! last_mouse.init)

	cmp	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+12, 0
	jne	SHORT $LN9@CallWndPro

; 3654 :       {
; 3655 :         if (config.input.cursor.timeout != 0)

	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+668

; 3656 :         {
; 3657 :           SetTimer ( hWnd,

	push	0
	test	eax, eax
	je	SHORT $LN10@CallWndPro
	shr	eax, 1
	push	eax

; 3658 :                        static_cast <UINT_PTR> (        last_mouse.timer_id),
; 3659 :                        static_cast <UINT>     (config.input.cursor.timeout) / 2,
; 3660 :                          nullptr );
; 3661 :         }
; 3662 :         else

	jmp	SHORT $LN73@CallWndPro
$LN10@CallWndPro:

; 3663 :         {
; 3664 :           SetTimer ( hWnd,

	push	250					; 000000faH
$LN73@CallWndPro:
	push	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+16
	push	ecx
	call	DWORD PTR __imp__SetTimer@16

; 3665 :                        static_cast <UINT_PTR> (last_mouse.timer_id),
; 3666 :                          250UL/*USER_TIMER_MINIMUM*/,
; 3667 :                            nullptr );
; 3668 :         }
; 3669 : 
; 3670 :         last_mouse.init = true;

	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+12, 1
$LN9@CallWndPro:

; 3671 :       }
; 3672 : 
; 3673 :       bool activation_event =
; 3674 :         (! SK_IsSteamOverlayActive ());

	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	sete	bl

; 3675 : 
; 3676 :       // Don't blindly accept that WM_MOUSEMOVE actually means the mouse moved...
; 3677 :       if (activation_event)

	test	bl, bl
	je	SHORT $LN12@CallWndPro

; 3678 :       {
; 3679 :         const short threshold = 2;
; 3680 : 
; 3681 :         // Filter out small movements
; 3682 :         if ( abs (last_mouse.pos.x - GET_X_LPARAM (lParam)) < threshold &&

	movsx	ecx, WORD PTR [esi]
	movsx	eax, WORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A
	sub	eax, ecx
	cdq
	xor	eax, edx
	sub	eax, edx
	cmp	eax, 2
	jge	SHORT $LN13@CallWndPro
	movsx	ecx, WORD PTR [esi+2]
	movsx	eax, WORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+2
	sub	eax, ecx
	movzx	ebx, bl
	cdq
	xor	ecx, ecx
	xor	eax, edx
	sub	eax, edx
	cmp	eax, 2
	cmovl	ebx, ecx
$LN13@CallWndPro:

; 3683 :              abs (last_mouse.pos.y - GET_Y_LPARAM (lParam)) < threshold )
; 3684 :           activation_event = false;
; 3685 : 
; 3686 :         last_mouse.pos = MAKEPOINTS (lParam);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A, eax
$LN12@CallWndPro:

; 3687 :       }
; 3688 : 
; 3689 :       if (config.input.cursor.keys_activate)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+673, 0
	je	SHORT $LN14@CallWndPro

; 3690 :         activation_event |= ( uMsg == WM_CHAR       ||

	mov	eax, DWORD PTR [esi+8]
	cmp	eax, 258				; 00000102H
	je	SHORT $LN60@CallWndPro
	cmp	eax, 260				; 00000104H
	je	SHORT $LN60@CallWndPro
	cmp	eax, 261				; 00000105H
	je	SHORT $LN60@CallWndPro
	xor	eax, eax
	jmp	SHORT $LN61@CallWndPro
$LN60@CallWndPro:
	mov	eax, 1
$LN61@CallWndPro:
	or	bl, al
$LN14@CallWndPro:

; 3691 :                               uMsg == WM_SYSKEYDOWN ||
; 3692 :                               uMsg == WM_SYSKEYUP );
; 3693 : 
; 3694 :       // If timeout is 0, just hide the thing indefinitely
; 3695 :       if (activation_event && config.input.cursor.timeout != 0)

	test	bl, bl
	je	SHORT $LN15@CallWndPro
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+668, 0
	je	SHORT $LN15@CallWndPro

; 3696 :         ActivateCursor (true);

	push	1
	lea	ecx, DWORD PTR _ActivateCursor$5[ebp]
	call	??R<lambda_813a99a73084f12031f7ff0d640b0dd1>@@QBE_N_N@Z ; <lambda_813a99a73084f12031f7ff0d640b0dd1>::operator()

; 3697 : 
; 3698 :       else if ( uMsg   == WM_TIMER            &&

	jmp	SHORT $LN70@CallWndPro
$LN15@CallWndPro:

; 3699 :                 wParam == last_mouse.timer_id &&
; 3700 :                (! SK_IsSteamOverlayActive ()) &&

	cmp	DWORD PTR [esi+8], 275			; 00000113H
	jne	SHORT $LN70@CallWndPro
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+16
	jne	SHORT $LN70@CallWndPro
	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	SHORT $LN70@CallWndPro
	mov	cl, BYTE PTR ?game_window@@3Usk_window_s@@A+17
	test	cl, cl
	je	SHORT $LN19@CallWndPro

; 3701 :                 game_window.active )
; 3702 :       {
; 3703 :         if (true)//IsControllerPluggedIn (config.input.gamepad_slot))
; 3704 :           DeactivateCursor ();

	lea	ecx, DWORD PTR _DeactivateCursor$4[ebp]
	call	??R<lambda_b96439b331919f344b20b5d1514ebddc>@@QBE_NXZ ; <lambda_b96439b331919f344b20b5d1514ebddc>::operator()
$LN70@CallWndPro:
	mov	cl, BYTE PTR ?game_window@@3Usk_window_s@@A+17
$LN19@CallWndPro:

; 3705 : 
; 3706 :         else
; 3707 :           ActivateCursor ();
; 3708 :       }
; 3709 :     }
; 3710 : 
; 3711 : 
; 3712 : 
; 3713 : 
; 3714 :   switch (uMsg)

	mov	eax, DWORD PTR [esi+8]
	mov	ebx, DWORD PTR _wParam_HOOK$[ebp]
	cmp	eax, 28					; 0000001cH
	ja	SHORT $LN62@CallWndPro
	je	SHORT $LN22@CallWndPro
	cmp	eax, 6
	jne	$LN44@CallWndPro
$LN22@CallWndPro:

; 3719 :       break;
; 3720 : 
; 3721 :     case WM_MOUSEACTIVATE: 
; 3722 :     case WM_ACTIVATEAPP:
; 3723 :     case WM_ACTIVATE:
; 3724 :     case WM_NCACTIVATE:
; 3725 :     {
; 3726 :       LRESULT lRet = 0;
; 3727 :       if (wm_dispatch.ProcessMessage (hWnd, uMsg, wParam, lParam, &lRet))

	lea	eax, DWORD PTR _lRet$3[ebp]
	mov	DWORD PTR _lRet$3[ebp], 0
	push	eax
	push	esi
	lea	eax, DWORD PTR [esi+4]
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A ; wm_dispatch
	push	eax
	mov	eax, DWORD PTR [esi+8]
	push	eax
	push	DWORD PTR [esi+12]
	call	?ProcessMessage@window_message_dispatch_s@@QAE_NPAUHWND__@@IAAIAAJPAJ@Z ; window_message_dispatch_s::ProcessMessage
	test	al, al
	je	$LN44@CallWndPro

; 3728 :       {
; 3729 :         if (lRet != 0) return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	cmp	DWORD PTR _lRet$3[ebp], 0
	jne	SHORT $LN74@CallWndPro
$LN52@CallWndPro:
	pop	ebx
	pop	esi

; 3889 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3890 :     }
; 3891 :   }
; 3892 :   
; 3893 :   else {
; 3894 :     return 0;

	xor	eax, eax
	pop	edi

; 3921 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN62@CallWndPro:

; 3705 : 
; 3706 :         else
; 3707 :           ActivateCursor ();
; 3708 :       }
; 3709 :     }
; 3710 : 
; 3711 : 
; 3712 : 
; 3713 : 
; 3714 :   switch (uMsg)

	cmp	eax, 255				; 000000ffH
	ja	SHORT $LN63@CallWndPro
	je	SHORT $LN43@CallWndPro
	sub	eax, 33					; 00000021H
	cmp	eax, 101				; 00000065H
	ja	$LN44@CallWndPro
	movzx	eax, BYTE PTR $LN68@CallWndPro[eax]
	jmp	DWORD PTR $LN78@CallWndPro[eax*4]
$LN27@CallWndPro:

; 3730 :         else           return lRet;
; 3731 :       }
; 3732 :     } break;
; 3733 : 
; 3734 :     case WM_NCCALCSIZE:
; 3735 :       break;
; 3736 : 
; 3737 :     case WM_WINDOWPOSCHANGING:
; 3738 :     case WM_WINDOWPOSCHANGED:
; 3739 :     {
; 3740 :       LRESULT lRet = 1;
; 3741 :       if (wm_dispatch.ProcessMessage (hWnd, uMsg, wParam, lParam, &lRet))

	lea	eax, DWORD PTR _lRet$2[ebp]
	mov	DWORD PTR _lRet$2[ebp], 1
	push	eax
	push	esi
	lea	eax, DWORD PTR [esi+4]
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A ; wm_dispatch
	push	eax
	mov	eax, DWORD PTR [esi+8]
	push	eax
	push	DWORD PTR [esi+12]
	call	?ProcessMessage@window_message_dispatch_s@@QAE_NPAUHWND__@@IAAIAAJPAJ@Z ; window_message_dispatch_s::ProcessMessage
	test	al, al
	je	$LN44@CallWndPro

; 3742 :       {
; 3743 :         if (lRet != 0) CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	cmp	DWORD PTR _lRet$2[ebp], 0
	je	SHORT $LN52@CallWndPro
	push	esi
	push	ebx
	push	edi
	push	DWORD PTR ?g_hkCallWndProc@@3PAUHHOOK__@@A ; g_hkCallWndProc
	call	DWORD PTR __imp__CallNextHookEx@16
	jmp	$LN44@CallWndPro
$LN43@CallWndPro:

; 3793 :       break;
; 3794 : 
; 3795 :     case WM_INPUT:
; 3796 :       if (! game_window.active)

	test	cl, cl
$LN76@CallWndPro:

; 3715 :   {
; 3716 :     case WM_SYSCOMMAND:
; 3717 :       if ((wParam & 0xfff0) == SC_KEYMENU && lParam == 0) // Disable ALT application menu

	jne	$LN44@CallWndPro
$LN74@CallWndPro:

; 3718 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	push	esi
	push	ebx
	push	edi
	push	DWORD PTR ?g_hkCallWndProc@@3PAUHHOOK__@@A ; g_hkCallWndProc
	call	DWORD PTR __imp__CallNextHookEx@16
$LN72@CallWndPro:
	pop	ebx
	pop	esi
	pop	edi

; 3921 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN63@CallWndPro:

; 3705 : 
; 3706 :         else
; 3707 :           ActivateCursor ();
; 3708 :       }
; 3709 :     }
; 3710 : 
; 3711 : 
; 3712 : 
; 3713 : 
; 3714 :   switch (uMsg)

	cmp	eax, 274				; 00000112H
	ja	SHORT $LN64@CallWndPro
	je	SHORT $LN20@CallWndPro
	sub	eax, 256				; 00000100H
	cmp	eax, 5
	ja	$LN44@CallWndPro
	jmp	DWORD PTR $LN79@CallWndPro[eax*4]
$LN34@CallWndPro:

; 3761 :       break;
; 3762 : 
; 3763 : 
; 3764 :     case WM_KEYDOWN:
; 3765 :     case WM_SYSKEYDOWN:
; 3766 :       if (game_window.active)

	test	cl, cl
	je	SHORT $LN74@CallWndPro

; 3767 :       {
; 3768 :         if (SK_Console::getInstance ()->KeyDown (wParam & 0xFF, lParam) && (uMsg != WM_SYSKEYDOWN))

	push	DWORD PTR [esi]
	movzx	eax, BYTE PTR [esi+4]
	push	eax
	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance
	mov	ecx, eax
	call	?KeyDown@SK_Console@@QAEHEJ@Z		; SK_Console::KeyDown
	test	eax, eax
	je	$LN44@CallWndPro
	cmp	DWORD PTR [esi+8], 260			; 00000104H

; 3769 :         {
; 3770 :           return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	jmp	SHORT $LN75@CallWndPro
$LN38@CallWndPro:

; 3771 :           //return SK_COMPAT_SafeCallProc (&game_window, hWnd, uMsg, wParam, lParam);
; 3772 :         }
; 3773 :       }
; 3774 :       else
; 3775 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3776 :       break;
; 3777 : 
; 3778 :     case WM_KEYUP:
; 3779 :     case WM_SYSKEYUP:
; 3780 :       if (game_window.active)

	test	cl, cl
	je	SHORT $LN74@CallWndPro

; 3781 :       {
; 3782 :         if (SK_Console::getInstance ()->KeyUp (wParam & 0xFF, lParam) && (uMsg != WM_SYSKEYUP))

	push	DWORD PTR [esi]
	movzx	eax, BYTE PTR [esi+4]
	push	eax
	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance
	mov	ecx, eax
	call	?KeyUp@SK_Console@@QAEHEJ@Z		; SK_Console::KeyUp
	test	eax, eax
	je	SHORT $LN44@CallWndPro
	cmp	DWORD PTR [esi+8], 261			; 00000105H

; 3783 :         {
; 3784 :           return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	jmp	SHORT $LN75@CallWndPro
$LN20@CallWndPro:

; 3715 :   {
; 3716 :     case WM_SYSCOMMAND:
; 3717 :       if ((wParam & 0xfff0) == SC_KEYMENU && lParam == 0) // Disable ALT application menu

	mov	eax, DWORD PTR [esi+4]
	and	eax, 65520				; 0000fff0H
	cmp	eax, 61696				; 0000f100H
	jne	SHORT $LN44@CallWndPro
	cmp	DWORD PTR [esi], 0

; 3718 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	jmp	$LN76@CallWndPro
$LN64@CallWndPro:

; 3705 : 
; 3706 :         else
; 3707 :           ActivateCursor ();
; 3708 :       }
; 3709 :     }
; 3710 : 
; 3711 : 
; 3712 : 
; 3713 : 
; 3714 :   switch (uMsg)

	sub	eax, 512				; 00000200H
	cmp	eax, 50					; 00000032H
	ja	SHORT $LN44@CallWndPro
	movzx	eax, BYTE PTR $LN69@CallWndPro[eax]
	jmp	DWORD PTR $LN80@CallWndPro[eax*4]
$LN32@CallWndPro:

; 3744 :         else           return          lRet;
; 3745 :       }
; 3746 :     } break;
; 3747 : 
; 3748 :     case WM_ENTERSIZEMOVE:
; 3749 :     case WM_EXITSIZEMOVE:
; 3750 :     {
; 3751 :       wm_dispatch.ProcessMessage (hWnd, uMsg, wParam, lParam);
; 3752 :     } break;
; 3753 : 
; 3754 :     case WM_SIZING:
; 3755 :     case WM_MOVING:
; 3756 :       ClipCursor (nullptr);

	push	0
	call	DWORD PTR __imp__ClipCursor@4

; 3757 : 
; 3758 :       // Filter this message
; 3759 :       if (config.window.borderless && config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	SHORT $LN44@CallWndPro
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
$LN75@CallWndPro:
	je	SHORT $LN44@CallWndPro

; 3760 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	jmp	$LN74@CallWndPro
$LN42@CallWndPro:

; 3785 :         }
; 3786 :       }
; 3787 :       else
; 3788 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3789 :       break;
; 3790 : 
; 3791 :     case WM_MOUSEMOVE:
; 3792 :       wm_dispatch.ProcessMessage (hWnd, uMsg, wParam, lParam);

	push	0
	push	esi
	lea	eax, DWORD PTR [esi+4]
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A ; wm_dispatch
	push	eax
	mov	eax, DWORD PTR [esi+8]
	push	eax
	push	DWORD PTR [esi+12]
	call	?ProcessMessage@window_message_dispatch_s@@QAE_NPAUHWND__@@IAAIAAJPAJ@Z ; window_message_dispatch_s::ProcessMessage
$LN44@CallWndPro:

; 3797 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3798 :       break;
; 3799 :   }
; 3800 : 
; 3801 : 
; 3802 :   bool handled = 
; 3803 :     ImGui_WndProcHandler (hWnd, uMsg, wParam, lParam);

	push	DWORD PTR [esi]
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+12]
	call	?ImGui_WndProcHandler@@YGJPAUHWND__@@IIJ@Z ; ImGui_WndProcHandler
	test	eax, eax

; 3804 : 
; 3805 : 
; 3806 : 
; 3807 :   // Synaptics Touchpad Compat Hack:
; 3808 :   // -------------------------------
; 3809 :   //
; 3810 :   //  PROBLEM:    Driver only generates window messages for mousewheel, it does
; 3811 :   //                not activate RawInput, DirectInput or HID like a real mouse
; 3812 :   //
; 3813 :   //  WORKAROUND: Generate a full-blown input event using SendInput (...); be
; 3814 :   //                aware that this event will generate ANOTHER WM_MOUSEWHEEL.
; 3815 :   //
; 3816 :   //    ** MUST handle recursive behavior caused by this fix-up **
; 3817 :   //
; 3818 :   static bool recursive_wheel = false;
; 3819 : 
; 3820 :   // Dual purpose: This also catches any WM_MOUSEWHEEL messages that Synaptics
; 3821 :   //                 issued through CallWindowProc (...) rather than
; 3822 :   //                   SendMessage (...) / PostMessage (...) -- UGH.
; 3823 :   //
; 3824 :   //      >> We need to process those for ImGui <<
; 3825 :   //
; 3826 :   if ((! handled) && uMsg == WM_MOUSEWHEEL && (! recursive_wheel))

	jne	SHORT $LN45@CallWndPro
	cmp	DWORD PTR [esi+8], 522			; 0000020aH
	jne	SHORT $LN45@CallWndPro
	mov	al, BYTE PTR ?recursive_wheel@?L@??CallWndProc@@YGJHIJ@Z@4_NA
	test	al, al
	jne	SHORT $LN67@CallWndPro

; 3827 :   {
; 3828 :     if ((! handled) && config.input.mouse.fix_synaptics)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+728, al
	je	SHORT $LN48@CallWndPro

; 3829 :     {
; 3830 :       INPUT input        = { };
; 3831 : 
; 3832 :       input.type         = INPUT_MOUSE;
; 3833 :       input.mi.dwFlags   = MOUSEEVENTF_WHEEL;
; 3834 :       input.mi.mouseData = GET_WHEEL_DELTA_WPARAM (wParam);

	movsx	eax, WORD PTR [esi+6]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR _input$1[ebp], xmm0
	mov	DWORD PTR _input$1[ebp+12], eax

; 3835 : 
; 3836 :       recursive_wheel    = true;
; 3837 : 
; 3838 :       SendInput_Original (1, &input, sizeof INPUT);

	lea	eax, DWORD PTR _input$1[ebp]
	push	28					; 0000001cH
	push	eax
	movq	QWORD PTR _input$1[ebp+16], xmm0
	push	1
	mov	DWORD PTR _input$1[ebp+24], 0
	mov	DWORD PTR _input$1[ebp], 0
	mov	DWORD PTR _input$1[ebp+16], 2048	; 00000800H
	mov	BYTE PTR ?recursive_wheel@?L@??CallWndProc@@YGJHIJ@Z@4_NA, 1
	call	DWORD PTR ?SendInput_Original@@3P6GIIPAUtagINPUT@@H@ZA ; SendInput_Original

; 3839 :     }
; 3840 :   }

	jmp	SHORT $LN48@CallWndPro
$LN45@CallWndPro:

; 3841 : 
; 3842 :   // In-lieu of a proper fence, this solves the recursion problem.
; 3843 :   //
; 3844 :   //   There's no guarantee the message we are ignoring is the one we
; 3845 :   //     generated, but one misplaced message won't kill anything.
; 3846 :   //
; 3847 :   else if (recursive_wheel && uMsg == WM_MOUSEWHEEL)

	mov	al, BYTE PTR ?recursive_wheel@?L@??CallWndProc@@YGJHIJ@Z@4_NA
	test	al, al
	je	SHORT $LN48@CallWndPro
$LN67@CallWndPro:
	xor	ecx, ecx
	movzx	eax, al
	cmp	DWORD PTR [esi+8], 522			; 0000020aH
	cmove	eax, ecx
	mov	BYTE PTR ?recursive_wheel@?L@??CallWndProc@@YGJHIJ@Z@4_NA, al
$LN48@CallWndPro:

; 3848 :     recursive_wheel = false;
; 3849 : 
; 3850 : 
; 3851 : 
; 3852 :   //
; 3853 :   // Squelch input messages that managed to get into the loop without triggering
; 3854 :   //   filtering logic in the GetMessage (...), PeekMessage (...) and
; 3855 :   //     DispatchMessage (...) hooks.
; 3856 :   //
; 3857 :   //   [ Mostly for EverQuest ]
; 3858 :   //
; 3859 :   if (uMsg >= WM_MOUSEFIRST && uMsg <= WM_MOUSELAST && SK_ImGui_WantMouseCapture    ())

	mov	eax, DWORD PTR [esi+8]
	cmp	eax, 512				; 00000200H
	jb	SHORT $LN49@CallWndPro
	cmp	eax, 526				; 0000020eH
	ja	SHORT $LN49@CallWndPro
	call	?SK_ImGui_WantMouseCapture@@YA_NXZ	; SK_ImGui_WantMouseCapture
	test	al, al
	jne	$LN74@CallWndPro
$LN49@CallWndPro:

; 3860 :     return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3861 :   
; 3862 :   if (uMsg >= WM_KEYFIRST   && uMsg <= WM_KEYLAST   && SK_ImGui_WantKeyboardCapture ())

	mov	eax, DWORD PTR [esi+8]
	cmp	eax, 256				; 00000100H
	jb	SHORT $LN50@CallWndPro
	cmp	eax, 265				; 00000109H
	ja	SHORT $LN50@CallWndPro
	call	?SK_ImGui_WantKeyboardCapture@@YA_NXZ	; SK_ImGui_WantKeyboardCapture
	test	al, al
	jne	$LN74@CallWndPro
$LN50@CallWndPro:

; 3863 :     return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3864 :   
; 3865 :   if (uMsg == WM_INPUT      && SK_ImGui_WantGamepadCapture ())

	cmp	DWORD PTR [esi+8], 255			; 000000ffH
	jne	SHORT $LN51@CallWndPro
	call	?SK_ImGui_WantGamepadCapture@@YA_NXZ	; SK_ImGui_WantGamepadCapture
	test	al, al
	jne	$LN74@CallWndPro
$LN51@CallWndPro:

; 3866 :     return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3867 : 
; 3868 : 
; 3869 : 
; 3870 :   //
; 3871 :   // DO NOT HOOK THIS FUNCTION outside of SpecialK plug-ins, the ABI is not guaranteed
; 3872 :   //
; 3873 :   if (SK_DetourWindowProc2 (hWnd, uMsg, wParam, lParam))

	push	DWORD PTR [esi]
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+12]
	call	?SK_DetourWindowProc2@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc2
	test	eax, eax
	je	$LN52@CallWndPro

; 3874 :   {
; 3875 :     bool console_visible =
; 3876 :       SK_Console::getInstance ()->isVisible ();

	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance

; 3877 : 
; 3878 :     // Block keyboard input to the game while the console is visible
; 3879 :     if (console_visible)

	cmp	BYTE PTR [eax+4356], 0
	je	SHORT $LN57@CallWndPro

; 3880 :     {
; 3881 :       if (uMsg >= WM_MOUSEFIRST && uMsg <= WM_MOUSELAST)

	mov	eax, DWORD PTR [esi+8]
	cmp	eax, 512				; 00000200H
	jb	SHORT $LN55@CallWndPro
	cmp	eax, 526				; 0000020eH
	jbe	$LN74@CallWndPro
$LN55@CallWndPro:

; 3882 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3883 : 
; 3884 :       if (uMsg >= WM_KEYFIRST   && uMsg <= WM_KEYLAST)

	cmp	eax, 256				; 00000100H
	jb	SHORT $LN56@CallWndPro
	cmp	eax, 265				; 00000109H
	jbe	$LN74@CallWndPro
$LN56@CallWndPro:

; 3885 :         return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);
; 3886 : 
; 3887 :       // Block RAW Input
; 3888 :       if (uMsg == WM_INPUT)

	cmp	eax, 255				; 000000ffH
	je	$LN74@CallWndPro
$LN57@CallWndPro:

; 3895 :   }
; 3896 : 
; 3897 : 
; 3898 :   // Filter this out for fullscreen override safety
; 3899 :   ////if (uMsg == WM_DISPLAYCHANGE)    return 1;//game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);
; 3900 :   ////if (uMsg == WM_WINDOWPOSCHANGED) return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);
; 3901 : 
; 3902 : 
; 3903 :   LRESULT lRet =
; 3904 :     CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	push	esi
	push	ebx
	push	edi
	push	DWORD PTR ?g_hkCallWndProc@@3PAUHHOOK__@@A ; g_hkCallWndProc
	call	DWORD PTR __imp__CallNextHookEx@16

; 3905 : 
; 3906 : 
; 3907 :   // Post-Process the game's result to fix any non-compliant behaviors
; 3908 :   //
; 3909 : 
; 3910 : 
; 3911 :   // Fix for Skyrim SE beeping when Alt is pressed.
; 3912 :   if (uMsg == WM_MENUCHAR && (! HIWORD (lRet)))

	cmp	DWORD PTR [esi+8], 288			; 00000120H
	jne	$LN72@CallWndPro
	mov	ecx, eax
	shr	ecx, 16					; 00000010H
	test	ecx, ecx
	jne	$LN72@CallWndPro

; 3913 :     return MAKEWPARAM (0, MNC_CLOSE);

	pop	ebx
	pop	esi
	mov	eax, 65536				; 00010000H
	pop	edi

; 3921 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN7@CallWndPro:

; 3914 : 
; 3915 : 
; 3916 :   return lRet;
; 3917 :     }
; 3918 :   }
; 3919 : 
; 3920 :   return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	push	esi
	push	DWORD PTR _wParam_HOOK$[ebp]
	push	edi
	push	DWORD PTR ?g_hkCallWndProc@@3PAUHHOOK__@@A ; g_hkCallWndProc
	call	DWORD PTR __imp__CallNextHookEx@16
	pop	esi
	pop	edi

; 3921 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN5@CallWndPro:

; 3553 :     return CallNextHookEx (g_hkCallWndProc, nCode, wParam_HOOK, lParam_HOOK);

	push	DWORD PTR _lParam_HOOK$[ebp]
	push	DWORD PTR _wParam_HOOK$[ebp]
	push	edi
	push	DWORD PTR ?g_hkCallWndProc@@3PAUHHOOK__@@A ; g_hkCallWndProc
	call	DWORD PTR __imp__CallNextHookEx@16
	pop	edi

; 3921 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN78@CallWndPro:
	DD	$LN22@CallWndPro
	DD	$LN27@CallWndPro
	DD	$LN44@CallWndPro
$LN68@CallWndPro:
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	npad	2
$LN79@CallWndPro:
	DD	$LN34@CallWndPro
	DD	$LN38@CallWndPro
	DD	$LN44@CallWndPro
	DD	$LN44@CallWndPro
	DD	$LN34@CallWndPro
	DD	$LN38@CallWndPro
$LN80@CallWndPro:
	DD	$LN42@CallWndPro
	DD	$LN32@CallWndPro
	DD	$LN44@CallWndPro
$LN69@CallWndPro:
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
	DB	2
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	0
?CallWndProc@@YGJHIJ@Z ENDP				; CallWndProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?SK_DetourWindowProc2@@YGJPAUHWND__@@IIJ@Z PROC		; SK_DetourWindowProc2

; 3362 :   UNREFERENCED_PARAMETER (hWnd);
; 3363 :   UNREFERENCED_PARAMETER (uMsg);
; 3364 :   UNREFERENCED_PARAMETER (wParam);
; 3365 :   UNREFERENCED_PARAMETER (lParam);
; 3366 : 
; 3367 :   return 1;

	mov	eax, 1

; 3368 : }

	ret	16					; 00000010H
?SK_DetourWindowProc2@@YGJPAUHWND__@@IIJ@Z ENDP		; SK_DetourWindowProc2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??B<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@QBEP6GKPAX@ZXZ
_TEXT	SEGMENT
??B<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@QBEP6GKPAX@ZXZ PROC ; <lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>::operator unsigned long (__stdcall*)(void *), COMDAT
; _this$ = ecx

; 3342 :         },

	mov	eax, OFFSET ?<lambda_invoker_stdcall>@<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@CGKPAX@Z ; <lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>::<lambda_invoker_stdcall>
	ret	0
??B<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@QBEP6GKPAX@ZXZ ENDP ; <lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>::operator unsigned long (__stdcall*)(void *)
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?<lambda_invoker_stdcall>@<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@CGKPAX@Z
_TEXT	SEGMENT
_user$ = 8						; size = 4
?<lambda_invoker_stdcall>@<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@CGKPAX@Z PROC ; <lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>::<lambda_invoker_stdcall>, COMDAT

; 3342 :         },

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 3334 :           BringWindowToTop    (static_cast <HWND> (user));

	mov	esi, DWORD PTR _user$[ebp]
	push	esi
	call	DWORD PTR __imp__BringWindowToTop@4

; 3335 :           SetForegroundWindow (static_cast <HWND> (user));

	push	esi
	call	DWORD PTR __imp__SetForegroundWindow@4

; 3336 :           SetActiveWindow     (static_cast <HWND> (user));

	push	esi
	call	DWORD PTR __imp__SetActiveWindow@4

; 3337 :           SetFocus            (static_cast <HWND> (user));

	push	esi
	call	DWORD PTR __imp__SetFocus@4

; 3338 : 
; 3339 :           CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4

; 3342 :         },

	xor	eax, eax
	pop	esi
	pop	ebp
	ret	4
?<lambda_invoker_stdcall>@<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@CGKPAX@Z ENDP ; <lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>::<lambda_invoker_stdcall>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@QBEKPAX@Z
_TEXT	SEGMENT
_user$ = 8						; size = 4
??R<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@QBEKPAX@Z PROC ; <lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>::operator(), COMDAT
; _this$ = ecx

; 3333 :         {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 3334 :           BringWindowToTop    (static_cast <HWND> (user));

	mov	esi, DWORD PTR _user$[ebp]
	push	esi
	call	DWORD PTR __imp__BringWindowToTop@4

; 3335 :           SetForegroundWindow (static_cast <HWND> (user));

	push	esi
	call	DWORD PTR __imp__SetForegroundWindow@4

; 3336 :           SetActiveWindow     (static_cast <HWND> (user));

	push	esi
	call	DWORD PTR __imp__SetActiveWindow@4

; 3337 :           SetFocus            (static_cast <HWND> (user));

	push	esi
	call	DWORD PTR __imp__SetFocus@4

; 3338 : 
; 3339 :           CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4

; 3340 : 
; 3341 :           return 0;

	xor	eax, eax
	pop	esi

; 3342 :         },

	pop	ebp
	ret	4
??R<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@QBEKPAX@Z ENDP ; <lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__$ReturnAddr$ = 4					; size = 4
_lpMsg$ = 8						; size = 4
?DispatchMessageA_Detour@@YGJPBUtagMSG@@@Z PROC		; DispatchMessageA_Detour

; 3279 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 3280 :   if (hModSteamOverlay == nullptr)

	cmp	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, 0
	jne	SHORT $LN2@DispatchMe

; 3281 :   {
; 3282 :     hModSteamOverlay = GetModuleHandle

	push	OFFSET $SG212661
	call	DWORD PTR __imp__GetModuleHandleW@4
	mov	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, eax
$LN2@DispatchMe:

; 3283 : #ifdef _WIN64
; 3284 :     (L"GameOverlayRenderer64.dll");
; 3285 : #else
; 3286 :     (L"GameOverlayRenderer.dll");
; 3287 : #endif
; 3288 :   }
; 3289 : 
; 3290 :   if (SK_GetCallingDLL () == hModSteamOverlay)

	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	cmp	eax, DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A
	jne	SHORT $LN3@DispatchMe

; 3308 : }

	pop	ebp

; 3291 :   {
; 3292 :     return DispatchMessageA_Original ( lpMsg );

	jmp	DWORD PTR ?DispatchMessageA_Original@@3P6GJPBUtagMSG@@@ZA ; DispatchMessageA_Original
$LN3@DispatchMe:

; 3293 :   }
; 3294 : 
; 3295 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?8??DispatchMessageA_Detour@@YGJPBUtagMSG@@@Z@4_NA, 0
	jne	SHORT $LN4@DispatchMe
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN5@DispatchMe
	push	OFFSET $SG212665
	push	OFFSET $SG212666
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN5@DispatchMe:
	mov	BYTE PTR ?called@?8??DispatchMessageA_Detour@@YGJPBUtagMSG@@@Z@4_NA, 1
$LN4@DispatchMe:
	push	esi

; 3296 : 
; 3297 :   if (lpMsg->hwnd == game_window.hWnd)

	mov	esi, DWORD PTR _lpMsg$[ebp]
	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN7@DispatchMe

; 3298 :   {
; 3299 :     if ( SK_EarlyDispatchMessage ( const_cast <MSG *> (lpMsg),

	push	0
	push	0
	push	esi
	call	?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z ; SK_EarlyDispatchMessage
	add	esp, 12					; 0000000cH
	test	al, al
	je	SHORT $LN7@DispatchMe

; 3300 :                                      false )
; 3301 :        )
; 3302 :     {
; 3303 :       return DefWindowProcA (lpMsg->hwnd, lpMsg->message, lpMsg->wParam, lpMsg->lParam);

	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	call	DWORD PTR __imp__DefWindowProcA@16
	pop	esi

; 3308 : }

	pop	ebp
	ret	4
$LN7@DispatchMe:

; 3304 :     }
; 3305 :   }
; 3306 : 
; 3307 :   return DispatchMessageA_Original (lpMsg);

	push	esi
	call	DWORD PTR ?DispatchMessageA_Original@@3P6GJPBUtagMSG@@@ZA ; DispatchMessageA_Original
	pop	esi

; 3308 : }

	pop	ebp
	ret	4
?DispatchMessageA_Detour@@YGJPBUtagMSG@@@Z ENDP		; DispatchMessageA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__$ReturnAddr$ = 4					; size = 4
_lpMsg$ = 8						; size = 4
?DispatchMessageW_Detour@@YGJPBUtagMSG@@@Z PROC		; DispatchMessageW_Detour

; 3245 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 3246 :   if (hModSteamOverlay == nullptr)

	cmp	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, 0
	jne	SHORT $LN2@DispatchMe

; 3247 :   {
; 3248 :     hModSteamOverlay = GetModuleHandle

	push	OFFSET $SG212646
	call	DWORD PTR __imp__GetModuleHandleW@4
	mov	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, eax
$LN2@DispatchMe:

; 3249 : #ifdef _WIN64
; 3250 :     (L"GameOverlayRenderer64.dll");
; 3251 : #else
; 3252 :     (L"GameOverlayRenderer.dll");
; 3253 : #endif
; 3254 :   }
; 3255 : 
; 3256 :   if (SK_GetCallingDLL () == hModSteamOverlay)

	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	cmp	eax, DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A
	jne	SHORT $LN3@DispatchMe

; 3274 : }

	pop	ebp

; 3257 :   {
; 3258 :     return DispatchMessageW_Original ( lpMsg );

	jmp	DWORD PTR ?DispatchMessageW_Original@@3P6GJPBUtagMSG@@@ZA ; DispatchMessageW_Original
$LN3@DispatchMe:

; 3259 :   }
; 3260 : 
; 3261 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?8??DispatchMessageW_Detour@@YGJPBUtagMSG@@@Z@4_NA, 0
	jne	SHORT $LN4@DispatchMe
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN5@DispatchMe
	push	OFFSET $SG212650
	push	OFFSET $SG212651
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN5@DispatchMe:
	mov	BYTE PTR ?called@?8??DispatchMessageW_Detour@@YGJPBUtagMSG@@@Z@4_NA, 1
$LN4@DispatchMe:
	push	esi

; 3262 : 
; 3263 :   if (lpMsg->hwnd == game_window.hWnd)

	mov	esi, DWORD PTR _lpMsg$[ebp]
	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN7@DispatchMe

; 3264 :   {
; 3265 :     if ( SK_EarlyDispatchMessage ( const_cast <MSG *> (lpMsg),

	push	0
	push	0
	push	esi
	call	?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z ; SK_EarlyDispatchMessage
	add	esp, 12					; 0000000cH
	test	al, al
	je	SHORT $LN7@DispatchMe

; 3266 :                                      false )
; 3267 :        )
; 3268 :     {
; 3269 :       return DefWindowProcW (lpMsg->hwnd, lpMsg->message, lpMsg->wParam, lpMsg->lParam);

	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	call	DWORD PTR __imp__DefWindowProcW@16
	pop	esi

; 3274 : }

	pop	ebp
	ret	4
$LN7@DispatchMe:

; 3270 :     }
; 3271 :   }
; 3272 : 
; 3273 :   return DispatchMessageW_Original (lpMsg);

	push	esi
	call	DWORD PTR ?DispatchMessageW_Original@@3P6GJPBUtagMSG@@@ZA ; DispatchMessageW_Original
	pop	esi

; 3274 : }

	pop	ebp
	ret	4
?DispatchMessageW_Detour@@YGJPBUtagMSG@@@Z ENDP		; DispatchMessageW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__$ReturnAddr$ = 4					; size = 4
_lpMsg$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_wMsgFilterMin$ = 16					; size = 4
_wMsgFilterMax$ = 20					; size = 4
?GetMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z PROC	; GetMessageW_Detour

; 3215 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 3216 :   if (hModSteamOverlay == nullptr)

	cmp	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, 0
	jne	SHORT $LN2@GetMessage

; 3217 :   {
; 3218 :     hModSteamOverlay = GetModuleHandle

	push	OFFSET $SG212631
	call	DWORD PTR __imp__GetModuleHandleW@4
	mov	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, eax
$LN2@GetMessage:

; 3219 : #ifdef _WIN64
; 3220 :     (L"GameOverlayRenderer64.dll");
; 3221 : #else
; 3222 :     (L"GameOverlayRenderer.dll");
; 3223 : #endif
; 3224 :   }
; 3225 : 
; 3226 :   if (SK_GetCallingDLL () == hModSteamOverlay)

	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	cmp	eax, DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A
	jne	SHORT $LN3@GetMessage

; 3240 : }

	pop	ebp

; 3227 :   {
; 3228 :     return GetMessageW_Original ( lpMsg, hWnd,                                       wMsgFilterMin,                                   wMsgFilterMax );

	jmp	DWORD PTR ?GetMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA ; GetMessageW_Original
$LN3@GetMessage:

; 3229 :   }
; 3230 : 
; 3231 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?8??GetMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z@4_NA, 0
	jne	SHORT $LN4@GetMessage
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN5@GetMessage
	push	OFFSET $SG212635
	push	OFFSET $SG212636
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN5@GetMessage:
	mov	BYTE PTR ?called@?8??GetMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z@4_NA, 1
$LN4@GetMessage:
	push	esi

; 3232 : 
; 3233 :   if (! GetMessageW_Original (lpMsg, hWnd, wMsgFilterMin, wMsgFilterMax))

	push	DWORD PTR _wMsgFilterMax$[ebp]
	mov	esi, DWORD PTR _lpMsg$[ebp]
	push	DWORD PTR _wMsgFilterMin$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	push	esi
	call	DWORD PTR ?GetMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA ; GetMessageW_Original
	test	eax, eax
	jne	SHORT $LN6@GetMessage
	pop	esi

; 3240 : }

	pop	ebp
	ret	16					; 00000010H
$LN6@GetMessage:

; 3234 :     return FALSE;
; 3235 : 
; 3236 :   if (lpMsg->hwnd == game_window.hWnd)

	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN7@GetMessage

; 3237 :     SK_EarlyDispatchMessage (lpMsg, true);

	push	0
	push	1
	push	esi
	call	?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z ; SK_EarlyDispatchMessage
	add	esp, 12					; 0000000cH
$LN7@GetMessage:

; 3238 : 
; 3239 :   return TRUE;

	mov	eax, 1
	pop	esi

; 3240 : }

	pop	ebp
	ret	16					; 00000010H
?GetMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z ENDP	; GetMessageW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__$ReturnAddr$ = 4					; size = 4
_lpMsg$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_wMsgFilterMin$ = 16					; size = 4
_wMsgFilterMax$ = 20					; size = 4
?GetMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z PROC	; GetMessageA_Detour

; 3185 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 3186 :   if (hModSteamOverlay == nullptr)

	cmp	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, 0
	jne	SHORT $LN2@GetMessage

; 3187 :   {
; 3188 :     hModSteamOverlay = GetModuleHandle

	push	OFFSET $SG212614
	call	DWORD PTR __imp__GetModuleHandleW@4
	mov	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, eax
$LN2@GetMessage:

; 3189 : #ifdef _WIN64
; 3190 :     (L"GameOverlayRenderer64.dll");
; 3191 : #else
; 3192 :     (L"GameOverlayRenderer.dll");
; 3193 : #endif
; 3194 :   }
; 3195 : 
; 3196 :   if (SK_GetCallingDLL () == hModSteamOverlay)

	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	cmp	eax, DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A
	jne	SHORT $LN3@GetMessage

; 3210 : }

	pop	ebp

; 3197 :   {
; 3198 :     return GetMessageA_Original ( lpMsg, hWnd,                                       wMsgFilterMin,                                   wMsgFilterMax );

	jmp	DWORD PTR ?GetMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA ; GetMessageA_Original
$LN3@GetMessage:

; 3199 :   }
; 3200 : 
; 3201 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?8??GetMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z@4_NA, 0
	jne	SHORT $LN4@GetMessage
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN5@GetMessage
	push	OFFSET $SG212618
	push	OFFSET $SG212619
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN5@GetMessage:
	mov	BYTE PTR ?called@?8??GetMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z@4_NA, 1
$LN4@GetMessage:
	push	esi

; 3202 : 
; 3203 :   if (! GetMessageA_Original (lpMsg, hWnd, wMsgFilterMin, wMsgFilterMax))

	push	DWORD PTR _wMsgFilterMax$[ebp]
	mov	esi, DWORD PTR _lpMsg$[ebp]
	push	DWORD PTR _wMsgFilterMin$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	push	esi
	call	DWORD PTR ?GetMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA ; GetMessageA_Original
	test	eax, eax
	jne	SHORT $LN6@GetMessage
	pop	esi

; 3210 : }

	pop	ebp
	ret	16					; 00000010H
$LN6@GetMessage:

; 3204 :     return FALSE;
; 3205 : 
; 3206 :   if (lpMsg->hwnd == game_window.hWnd)

	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN7@GetMessage

; 3207 :     SK_EarlyDispatchMessage (lpMsg, true);

	push	0
	push	1
	push	esi
	call	?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z ; SK_EarlyDispatchMessage
	add	esp, 12					; 0000000cH
$LN7@GetMessage:

; 3208 : 
; 3209 :   return TRUE;

	mov	eax, 1
	pop	esi

; 3210 : }

	pop	ebp
	ret	16					; 00000010H
?GetMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z ENDP	; GetMessageA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_msg$ = -28						; size = 28
__$ReturnAddr$ = 4					; size = 4
_lpMsg$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_wMsgFilterMin$ = 16					; size = 4
_wMsgFilterMax$ = 20					; size = 4
_wRemoveMsg$ = 24					; size = 4
?PeekMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z PROC ; PeekMessageA_Detour

; 3126 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 3127 :   if (hModSteamOverlay == nullptr)

	cmp	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, 0
	jne	SHORT $LN2@PeekMessag

; 3128 :   {
; 3129 :     hModSteamOverlay = GetModuleHandle

	push	OFFSET $SG212593
	call	DWORD PTR __imp__GetModuleHandleW@4
	mov	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, eax
$LN2@PeekMessag:

; 3130 : #ifdef _WIN64
; 3131 :     (L"GameOverlayRenderer64.dll");
; 3132 : #else
; 3133 :     (L"GameOverlayRenderer.dll");
; 3134 : #endif
; 3135 :   }
; 3136 : 
; 3137 :   if (SK_GetCallingDLL () == hModSteamOverlay)

	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	cmp	eax, DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A
	jne	SHORT $LN3@PeekMessag

; 3138 :   {
; 3139 :     return PeekMessageA_Original ( lpMsg, hWnd,

	push	DWORD PTR _wRemoveMsg$[ebp]
	push	DWORD PTR _wMsgFilterMax$[ebp]
	push	DWORD PTR _wMsgFilterMin$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	push	DWORD PTR _lpMsg$[ebp]
	call	DWORD PTR ?PeekMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageA_Original

; 3180 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN3@PeekMessag:

; 3140 :                                    wMsgFilterMin,                           wMsgFilterMax,                          wRemoveMsg );
; 3141 :   }
; 3142 : 
; 3143 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?8??PeekMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z@4_NA, 0
	jne	SHORT $LN4@PeekMessag
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN5@PeekMessag
	push	OFFSET $SG212597
	push	OFFSET $SG212598
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN5@PeekMessag:
	mov	BYTE PTR ?called@?8??PeekMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z@4_NA, 1
$LN4@PeekMessag:

; 3144 : 
; 3145 :   if (config.render.dxgi.safe_fullscreen && (! IsWindowUnicode (GetActiveWindow ())))

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+504, 0
	push	ebx
	je	SHORT $LN13@PeekMessag
	call	DWORD PTR __imp__GetActiveWindow@0
	push	eax
	call	DWORD PTR __imp__IsWindowUnicode@4
	test	eax, eax
	jne	SHORT $LN13@PeekMessag

; 3146 :     wRemoveMsg |= PM_REMOVE;

	mov	ebx, DWORD PTR _wRemoveMsg$[ebp]
	or	ebx, 1
	jmp	SHORT $LN6@PeekMessag
$LN13@PeekMessag:
	mov	ebx, DWORD PTR _wRemoveMsg$[ebp]
$LN6@PeekMessag:

; 3147 : 
; 3148 :   MSG msg = { };
; 3149 : 
; 3150 :   if (PeekMessageA_Original (&msg, hWnd, wMsgFilterMin, wMsgFilterMax, wRemoveMsg))

	push	ebx
	push	DWORD PTR _wMsgFilterMax$[ebp]
	xorps	xmm0, xmm0
	mov	DWORD PTR _msg$[ebp+24], 0
	push	DWORD PTR _wMsgFilterMin$[ebp]
	lea	eax, DWORD PTR _msg$[ebp]
	movq	QWORD PTR _msg$[ebp+16], xmm0
	push	DWORD PTR _hWnd$[ebp]
	movups	XMMWORD PTR _msg$[ebp], xmm0
	push	eax
	call	DWORD PTR ?PeekMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageA_Original
	test	eax, eax
	je	$LN7@PeekMessag

; 3151 :   {
; 3152 :     *lpMsg = msg;

	movups	xmm0, XMMWORD PTR _msg$[ebp]
	mov	eax, DWORD PTR _msg$[ebp+24]
	push	esi
	mov	esi, DWORD PTR _lpMsg$[ebp]
	movups	XMMWORD PTR [esi], xmm0
	movq	xmm0, QWORD PTR _msg$[ebp+16]
	movq	QWORD PTR [esi+16], xmm0
	mov	DWORD PTR [esi+24], eax

; 3153 : 
; 3154 :     // Avoid processing the message twice if it's marshalled because
; 3155 :     //   stupid software called the wrong version of this function ;)
; 3156 :     if (! IsWindowUnicode (lpMsg->hwnd))

	push	DWORD PTR [esi]
	call	DWORD PTR __imp__IsWindowUnicode@4
	test	eax, eax
	jne	SHORT $LN9@PeekMessag

; 3157 :     {
; 3158 :       if (SK_EarlyDispatchMessage (&msg, true, true))

	push	1
	lea	eax, DWORD PTR _msg$[ebp]
	push	1
	push	eax
	call	?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z ; SK_EarlyDispatchMessage
	add	esp, 12					; 0000000cH
	test	al, al
	je	SHORT $LN9@PeekMessag

; 3159 :       {
; 3160 :         if (! (wRemoveMsg & PM_REMOVE))

	test	bl, 1
	jne	SHORT $LN10@PeekMessag

; 3161 :         {
; 3162 :           PeekMessageA_Original ( &msg, lpMsg->hwnd, lpMsg->message,

	mov	eax, DWORD PTR [esi+4]
	push	3
	push	eax
	push	eax
	push	DWORD PTR [esi]
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR ?PeekMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageA_Original
$LN10@PeekMessag:

; 3163 :                                                      lpMsg->message, PM_REMOVE | PM_NOYIELD );
; 3164 :         }
; 3165 : 
; 3166 :         if (lpMsg->message == WM_INPUT)

	cmp	DWORD PTR [esi+4], 255			; 000000ffH
	jne	SHORT $LN11@PeekMessag

; 3167 :           DefWindowProcA (lpMsg->hwnd, lpMsg->message, lpMsg->wParam, lpMsg->lParam);

	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+8]
	push	255					; 000000ffH
	push	DWORD PTR [esi]
	call	DWORD PTR __imp__DefWindowProcA@16
$LN11@PeekMessag:

; 3168 : 
; 3169 :         lpMsg->message = WM_NULL;

	mov	DWORD PTR [esi+4], 0

; 3170 :         lpMsg->pt.x    = 0; lpMsg->pt.y = 0;
; 3171 : 
; 3172 :         return FALSE;

	xor	eax, eax
	mov	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi+24], 0
	pop	esi
	pop	ebx

; 3180 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN9@PeekMessag:
	pop	esi

; 3173 :       }
; 3174 :     }
; 3175 : 
; 3176 :     return TRUE;

	mov	eax, 1
	pop	ebx

; 3180 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN7@PeekMessag:

; 3177 :   }
; 3178 : 
; 3179 :   return FALSE;

	xor	eax, eax
	pop	ebx

; 3180 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?PeekMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z ENDP ; PeekMessageA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_msg$ = -28						; size = 28
__$ReturnAddr$ = 4					; size = 4
_lpMsg$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_wMsgFilterMin$ = 16					; size = 4
_wMsgFilterMax$ = 20					; size = 4
_wRemoveMsg$ = 24					; size = 4
?PeekMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z PROC ; PeekMessageW_Detour

; 3062 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 3063 :   if (hModSteamOverlay == nullptr)

	cmp	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, 0
	jne	SHORT $LN2@PeekMessag

; 3064 :   {
; 3065 :     hModSteamOverlay = GetModuleHandle

	push	OFFSET $SG212570
	call	DWORD PTR __imp__GetModuleHandleW@4
	mov	DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A, eax
$LN2@PeekMessag:

; 3066 : #ifdef _WIN64
; 3067 :     (L"GameOverlayRenderer64.dll");
; 3068 : #else
; 3069 :     (L"GameOverlayRenderer.dll");
; 3070 : #endif
; 3071 :   }
; 3072 : 
; 3073 :   if (SK_GetCallingDLL () == hModSteamOverlay)

	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	cmp	eax, DWORD PTR ?hModSteamOverlay@@3PAUHINSTANCE__@@A
	jne	SHORT $LN3@PeekMessag

; 3074 :   {
; 3075 :     return PeekMessageW_Original ( lpMsg, hWnd,

	push	DWORD PTR _wRemoveMsg$[ebp]
	push	DWORD PTR _wMsgFilterMax$[ebp]
	push	DWORD PTR _wMsgFilterMin$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	push	DWORD PTR _lpMsg$[ebp]
	call	DWORD PTR ?PeekMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageW_Original

; 3116 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN3@PeekMessag:

; 3076 :                                    wMsgFilterMin,                           wMsgFilterMax,                          wRemoveMsg );
; 3077 :   }
; 3078 : 
; 3079 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?8??PeekMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z@4_NA, 0
	jne	SHORT $LN4@PeekMessag
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN5@PeekMessag
	push	OFFSET $SG212574
	push	OFFSET $SG212575
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN5@PeekMessag:
	mov	BYTE PTR ?called@?8??PeekMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z@4_NA, 1
$LN4@PeekMessag:

; 3080 : 
; 3081 :   if (config.render.dxgi.safe_fullscreen && (IsWindowUnicode (GetActiveWindow ())))

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+504, 0
	push	ebx
	je	SHORT $LN13@PeekMessag
	call	DWORD PTR __imp__GetActiveWindow@0
	push	eax
	call	DWORD PTR __imp__IsWindowUnicode@4
	test	eax, eax
	je	SHORT $LN13@PeekMessag

; 3082 :     wRemoveMsg |= PM_REMOVE;

	mov	ebx, DWORD PTR _wRemoveMsg$[ebp]
	or	ebx, 1
	jmp	SHORT $LN6@PeekMessag
$LN13@PeekMessag:
	mov	ebx, DWORD PTR _wRemoveMsg$[ebp]
$LN6@PeekMessag:

; 3083 : 
; 3084 :   MSG msg = { };
; 3085 : 
; 3086 :   if (PeekMessageW_Original (&msg, hWnd, wMsgFilterMin, wMsgFilterMax, wRemoveMsg))

	push	ebx
	push	DWORD PTR _wMsgFilterMax$[ebp]
	xorps	xmm0, xmm0
	mov	DWORD PTR _msg$[ebp+24], 0
	push	DWORD PTR _wMsgFilterMin$[ebp]
	lea	eax, DWORD PTR _msg$[ebp]
	movq	QWORD PTR _msg$[ebp+16], xmm0
	push	DWORD PTR _hWnd$[ebp]
	movups	XMMWORD PTR _msg$[ebp], xmm0
	push	eax
	call	DWORD PTR ?PeekMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageW_Original
	test	eax, eax
	je	$LN7@PeekMessag

; 3087 :   {
; 3088 :     *lpMsg = msg;

	movups	xmm1, XMMWORD PTR _msg$[ebp]
	mov	eax, DWORD PTR _msg$[ebp+24]
	movq	xmm0, QWORD PTR _msg$[ebp+16]
	push	esi
	mov	esi, DWORD PTR _lpMsg$[ebp]
	movups	XMMWORD PTR [esi], xmm1
	movq	QWORD PTR [esi+16], xmm0
	mov	DWORD PTR [esi+24], eax

; 3089 : 
; 3090 :     // Avoid processing the message twice if it's marshalled because
; 3091 :     //   stupid software called the wrong version of this function ;)
; 3092 :     if (IsWindowUnicode (msg.hwnd))

	movd	eax, xmm1
	push	eax
	call	DWORD PTR __imp__IsWindowUnicode@4
	test	eax, eax
	je	SHORT $LN9@PeekMessag

; 3093 :     {
; 3094 :       if (SK_EarlyDispatchMessage (&msg, true, true))

	push	1
	lea	eax, DWORD PTR _msg$[ebp]
	push	1
	push	eax
	call	?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z ; SK_EarlyDispatchMessage
	add	esp, 12					; 0000000cH
	test	al, al
	je	SHORT $LN9@PeekMessag

; 3095 :       {
; 3096 :         if (! (wRemoveMsg & PM_REMOVE))

	test	bl, 1
	jne	SHORT $LN10@PeekMessag

; 3097 :         {
; 3098 :           PeekMessageW_Original ( &msg, lpMsg->hwnd, lpMsg->message,

	mov	eax, DWORD PTR [esi+4]
	push	3
	push	eax
	push	eax
	push	DWORD PTR [esi]
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR ?PeekMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageW_Original
$LN10@PeekMessag:

; 3099 :                                                      lpMsg->message, PM_REMOVE | PM_NOYIELD );
; 3100 :         }
; 3101 : 
; 3102 :         if (lpMsg->message == WM_INPUT)

	cmp	DWORD PTR [esi+4], 255			; 000000ffH
	jne	SHORT $LN11@PeekMessag

; 3103 :           DefWindowProcW (lpMsg->hwnd, lpMsg->message, lpMsg->wParam, lpMsg->lParam);

	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+8]
	push	255					; 000000ffH
	push	DWORD PTR [esi]
	call	DWORD PTR __imp__DefWindowProcW@16
$LN11@PeekMessag:

; 3104 : 
; 3105 :         lpMsg->message = WM_NULL;

	mov	DWORD PTR [esi+4], 0

; 3106 :         lpMsg->pt.x    = 0; lpMsg->pt.y = 0;
; 3107 : 
; 3108 :         return FALSE;

	xor	eax, eax
	mov	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi+24], 0
	pop	esi
	pop	ebx

; 3116 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN9@PeekMessag:
	pop	esi

; 3109 :       }
; 3110 :     }
; 3111 : 
; 3112 :     return TRUE;

	mov	eax, 1
	pop	ebx

; 3116 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN7@PeekMessag:

; 3113 :   }
; 3114 : 
; 3115 :   return FALSE;

	xor	eax, eax
	pop	ebx

; 3116 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?PeekMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z ENDP ; PeekMessageW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_remove$ = 12						; size = 1
_peek$ = 16						; size = 1
?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z PROC	; SK_EarlyDispatchMessage

; 3022 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 3023 :   LRESULT lRet = 0;
; 3024 :   if ( SK_ImGui_HandlesMessage (lpMsg, remove, peek) )

	push	DWORD PTR _peek$[ebp]
	mov	esi, DWORD PTR _lpMsg$[ebp]
	push	DWORD PTR _remove$[ebp]
	push	esi
	call	?SK_ImGui_HandlesMessage@@YA_NPAUtagMSG@@_N1@Z ; SK_ImGui_HandlesMessage
	add	esp, 12					; 0000000cH
	test	al, al
	je	SHORT $LN2@SK_EarlyDi

; 3025 :   {
; 3026 :     if (remove)

	cmp	BYTE PTR _remove$[ebp], 0
	je	SHORT $LN3@SK_EarlyDi

; 3027 :       lpMsg->message = WM_NULL;

	mov	DWORD PTR [esi+4], 0
$LN3@SK_EarlyDi:

; 3028 : 
; 3029 :     return true;

	mov	al, 1
	pop	esi

; 3052 : }

	pop	ebp
	ret	0
$LN2@SK_EarlyDi:

; 3030 :   }
; 3031 : 
; 3032 :   //if (lpMsg->message == WM_INPUT)
; 3033 :   //{
; 3034 :   //  if (ImGui_WndProcHandler (lpMsg->hwnd, lpMsg->message, lpMsg->wParam, lpMsg->lParam))
; 3035 :   //  {
; 3036 :   //    if (remove)
; 3037 :   //      lpMsg->message = WM_NULL;
; 3038 :   //
; 3039 :   //    return true;
; 3040 :   //  }
; 3041 :   //}
; 3042 : 
; 3043 :   //if (wm_dispatch.ProcessMessage (lpMsg->hwnd, lpMsg->message, lpMsg->wParam, lpMsg->lParam, &lRet))
; 3044 :   //{
; 3045 :   //  if (remove)
; 3046 :   //    lpMsg->message = WM_NULL;
; 3047 :   //
; 3048 :   //  return true;
; 3049 :   //}
; 3050 : 
; 3051 :   return false;

	xor	al, al
	pop	esi

; 3052 : }

	pop	ebp
	ret	0
?SK_EarlyDispatchMessage@@YA_NPAUtagMSG@@_N1@Z ENDP	; SK_EarlyDispatchMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?TranslateMessage_Detour@@YGHPBUtagMSG@@@Z PROC		; TranslateMessage_Detour

; 2988 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2989 :   if (SK_ImGui_WantTextCapture ())

	call	?SK_ImGui_WantTextCapture@@YA_NXZ	; SK_ImGui_WantTextCapture
	mov	ecx, DWORD PTR _lpMsg$[ebp]
	test	al, al
	je	SHORT $LN2@TranslateM

; 2990 :   {
; 2991 :     switch (lpMsg->message)

	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, 260				; 00000104H
	ja	SHORT $LN7@TranslateM
	je	SHORT $LN5@TranslateM
	sub	eax, 256				; 00000100H
	je	SHORT $LN5@TranslateM
	sub	eax, 2
	je	SHORT $LN5@TranslateM
$LN2@TranslateM:

; 3003 :       } break;
; 3004 :     }
; 3005 :   }
; 3006 : 
; 3007 :   return TranslateMessage_Original (lpMsg);

	mov	DWORD PTR _lpMsg$[ebp], ecx

; 3008 : }

	pop	ebp

; 3003 :       } break;
; 3004 :     }
; 3005 :   }
; 3006 : 
; 3007 :   return TranslateMessage_Original (lpMsg);

	jmp	DWORD PTR ?TranslateMessage_Original@@3P6GHPBUtagMSG@@@ZA ; TranslateMessage_Original
$LN7@TranslateM:

; 2990 :   {
; 2991 :     switch (lpMsg->message)

	cmp	eax, 288				; 00000120H
	je	SHORT $LN5@TranslateM
	cmp	eax, 656				; 00000290H
	jne	SHORT $LN2@TranslateM
$LN5@TranslateM:

; 2992 :     {
; 2993 :       case WM_KEYDOWN:
; 2994 :       case WM_SYSKEYDOWN:
; 2995 :       case WM_IME_KEYDOWN:
; 2996 : 
; 2997 :       // This shouldn't happen considering this function is supposed
; 2998 :       //   to generate this message, but better to be on the safe side.
; 2999 :       case WM_CHAR:
; 3000 :       case WM_MENUCHAR:
; 3001 :       {
; 3002 :         return TRUE;

	mov	eax, 1

; 3008 : }

	pop	ebp
	ret	4
?TranslateMessage_Detour@@YGHPBUtagMSG@@@Z ENDP		; TranslateMessage_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 24
__$ReturnAddr$ = 4					; size = 4
_nIndex$ = 8						; size = 4
?GetSystemMetrics_Detour@@YGHH@Z PROC			; GetSystemMetrics_Detour

; 2889 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2890 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??GetSystemMetrics_Detour@@YGHH@Z@4_NA, 0
	jne	SHORT $LN2@GetSystemM
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@GetSystemM
	push	OFFSET $SG212482
	push	OFFSET $SG212483
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@GetSystemM:
	mov	BYTE PTR ?called@?2??GetSystemMetrics_Detour@@YGHH@Z@4_NA, 1
$LN2@GetSystemM:
	push	esi

; 2891 : 
; 2892 :   int nRet = GetSystemMetrics_Original (nIndex);

	push	DWORD PTR _nIndex$[ebp]
	call	DWORD PTR ?GetSystemMetrics_Original@@3P6GHH@ZA ; GetSystemMetrics_Original

; 2894 :   SK_LOG4 ( ( L"GetSystemMetrics (%4li) : %-5li - %s",

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	mov	esi, eax
	jl	SHORT $LN57@GetSystemM
	mov	ecx, DWORD PTR __$ReturnAddr$[ebp]
	lea	eax, DWORD PTR $T1[ebp]
	push	ecx
	push	eax
	call	?SK_SummarizeCaller@@YG?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAX@Z ; SK_SummarizeCaller
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN20@GetSystemM
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN20@GetSystemM:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2894 :   SK_LOG4 ( ( L"GetSystemMetrics (%4li) : %-5li - %s",

	push	eax
	push	esi
	push	DWORD PTR _nIndex$[ebp]
	push	OFFSET $SG212485
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T1[ebp+20]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2894 :   SK_LOG4 ( ( L"GetSystemMetrics (%4li) : %-5li - %s",

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN57@GetSystemM
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T1[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN57@GetSystemM:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2926 :   return nRet;

	mov	eax, esi
	pop	esi

; 2927 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetSystemMetrics_Detour@@YGHH@Z ENDP			; GetSystemMetrics_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??0<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QAE@AAV<lambda_d6c454cbb29743383e6e3138edb3cf2a>@@@Z
_TEXT	SEGMENT
_<DescribeRect>$ = 8					; size = 4
??0<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QAE@AAV<lambda_d6c454cbb29743383e6e3138edb3cf2a>@@@Z PROC ; <lambda_77fcd7573a79bd26205f7e2e096cdf28>::<lambda_77fcd7573a79bd26205f7e2e096cdf28>, COMDAT
; _this$ = ecx

; 2844 :     };

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _<DescribeRect>$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??0<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QAE@AAV<lambda_d6c454cbb29743383e6e3138edb3cf2a>@@@Z ENDP ; <lambda_77fcd7573a79bd26205f7e2e096cdf28>::<lambda_77fcd7573a79bd26205f7e2e096cdf28>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QBEXPB_WPAUtagRECT@@@Z
_TEXT	SEGMENT
_wszName$ = 8						; size = 4
_lpRect$ = 12						; size = 4
??R<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QBEXPB_WPAUtagRECT@@@Z PROC ; <lambda_77fcd7573a79bd26205f7e2e096cdf28>::operator(), COMDAT
; _this$ = ecx

; 2841 :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 2842 :       SK_LOG2_EX ( true, ( L"[Cursor Mgr] Clip Rect (%s)", wszName ) );

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN5@operator
	push	DWORD PTR _wszName$[ebp]
	push	OFFSET ??_C@_1DI@IICFDCMK@?$AA?$FL?$AAC?$AAu?$AAr?$AAs?$AAo?$AAr?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAl?$AAi?$AAp?$AA?5?$AAR?$AAe?$AAc?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AA@
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 2818 :     SK_LOG2_EX ( false, ( L" => {Left: %li, Top: %li} - {WxH: %lix%li)\n",

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN5@operator
	mov	ecx, DWORD PTR _lpRect$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	push	eax
	push	edx
	push	DWORD PTR [ecx]
	push	OFFSET ??_C@_1FI@MJPBCAPJ@?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AA?$HL?$AAL?$AAe?$AAf?$AAt?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?0?$AA?5?$AAT?$AAo?$AAp?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?$HN?$AA?5?$AA?9?$AA?5?$AA?$HL?$AAW?$AAx?$AAH@
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 28					; 0000001cH
$LN5@operator:

; 2843 :       DescribeRect (lpRect);
; 2844 :     };

	pop	ebp
	ret	8
??R<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QBEXPB_WPAUtagRECT@@@Z ENDP ; <lambda_77fcd7573a79bd26205f7e2e096cdf28>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_d6c454cbb29743383e6e3138edb3cf2a>@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8						; size = 4
??R<lambda_d6c454cbb29743383e6e3138edb3cf2a>@@QBEXPAUtagRECT@@@Z PROC ; <lambda_d6c454cbb29743383e6e3138edb3cf2a>::operator(), COMDAT
; _this$ = ecx

; 2817 :   {

	npad	2
	push	ebp
	mov	ebp, esp

; 2818 :     SK_LOG2_EX ( false, ( L" => {Left: %li, Top: %li} - {WxH: %lix%li)\n",

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN2@operator
	mov	ecx, DWORD PTR _lpRect$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	push	eax
	push	edx
	push	DWORD PTR [ecx]
	push	OFFSET ??_C@_1FI@MJPBCAPJ@?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AA?$HL?$AAL?$AAe?$AAf?$AAt?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?0?$AA?5?$AAT?$AAo?$AAp?$AA?3?$AA?5?$AA?$CF?$AAl?$AAi?$AA?$HN?$AA?5?$AA?9?$AA?5?$AA?$HL?$AAW?$AAx?$AAH@
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 28					; 0000001cH
$LN2@operator:

; 2819 :                             lpRect->left, lpRect->top,
; 2820 :                               lpRect->right - lpRect->left,
; 2821 :                                 lpRect->bottom - lpRect->top ) );
; 2822 :   };

	pop	ebp
	ret	4
??R<lambda_d6c454cbb29743383e6e3138edb3cf2a>@@QBEXPAUtagRECT@@@Z ENDP ; <lambda_d6c454cbb29743383e6e3138edb3cf2a>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
;	COMDAT ??$max@J@std@@YAABJABJ0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@J@std@@YAABJABJ0@Z PROC				; std::max<long>, COMDAT

; 3742 : 	{	// return larger of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	cmovl	eax, ecx

; 3744 : 	}

	pop	ebp
	ret	0
??$max@J@std@@YAABJABJ0@Z ENDP				; std::max<long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
;	COMDAT ??$min@J@std@@YAABJABJ0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@J@std@@YAABJABJ0@Z PROC				; std::min<long>, COMDAT

; 3778 : 	{	// return smaller of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	cmovl	eax, edx

; 3780 : 	}

	pop	ebp
	ret	0
??$min@J@std@@YAABJABJ0@Z ENDP				; std::min<long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??B<lambda_057715e64ffa789e51a07719c162c406>@@QBEP6GKPAX@ZXZ
_TEXT	SEGMENT
??B<lambda_057715e64ffa789e51a07719c162c406>@@QBEP6GKPAX@ZXZ PROC ; <lambda_057715e64ffa789e51a07719c162c406>::operator unsigned long (__stdcall*)(void *), COMDAT
; _this$ = ecx

; 2490 :     }, nullptr, 0x00, nullptr);

	mov	eax, OFFSET ?<lambda_invoker_stdcall>@<lambda_057715e64ffa789e51a07719c162c406>@@CGKPAX@Z ; <lambda_057715e64ffa789e51a07719c162c406>::<lambda_invoker_stdcall>
	ret	0
??B<lambda_057715e64ffa789e51a07719c162c406>@@QBEP6GKPAX@ZXZ ENDP ; <lambda_057715e64ffa789e51a07719c162c406>::operator unsigned long (__stdcall*)(void *)
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?<lambda_invoker_stdcall>@<lambda_057715e64ffa789e51a07719c162c406>@@CGKPAX@Z
_TEXT	SEGMENT
_user$ = 8						; size = 4
?<lambda_invoker_stdcall>@<lambda_057715e64ffa789e51a07719c162c406>@@CGKPAX@Z PROC ; <lambda_057715e64ffa789e51a07719c162c406>::<lambda_invoker_stdcall>, COMDAT

; 2490 :     }, nullptr, 0x00, nullptr);

	npad	2
	push	ebp
	mov	ebp, esp
	xor	ecx, ecx
	pop	ebp
	jmp	??R<lambda_057715e64ffa789e51a07719c162c406>@@QBEKPAX@Z ; <lambda_057715e64ffa789e51a07719c162c406>::operator()
?<lambda_invoker_stdcall>@<lambda_057715e64ffa789e51a07719c162c406>@@CGKPAX@Z ENDP ; <lambda_057715e64ffa789e51a07719c162c406>::<lambda_invoker_stdcall>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_057715e64ffa789e51a07719c162c406>@@QBEKPAX@Z
_TEXT	SEGMENT
$T1 = -84						; size = 84
_user$ = 8						; size = 4
??R<lambda_057715e64ffa789e51a07719c162c406>@@QBEKPAX@Z PROC ; <lambda_057715e64ffa789e51a07719c162c406>::operator(), COMDAT
; _this$ = ecx

; 2458 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H

; 2459 :       UNREFERENCED_PARAMETER (user);
; 2460 : 
; 2461 :       SleepEx (33, FALSE);

	push	0
	push	33					; 00000021H
	call	DWORD PTR __imp__SleepEx@8

; 2462 : 
; 2463 :       GetWindowRect (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__GetWindowRect@8

; 2464 :       GetClientRect (game_window.hWnd, &game_window.actual.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+84
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__GetClientRect@8

; 2465 : 
; 2466 :       ////
; 2467 :       ////// Force a sane set of window styles initially
; 2468 :       SK_SetWindowStyle   ( GetWindowLongPtrW (game_window.hWnd, GWL_STYLE)   );

	push	0
	push	-16					; fffffff0H
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__GetWindowLongW@8
	push	eax
	call	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyle
	add	esp, 8

; 2469 :       SK_SetWindowStyleEx ( GetWindowLongPtrW (game_window.hWnd, GWL_EXSTYLE) );

	push	0
	push	-20					; ffffffecH
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__GetWindowLongW@8
	push	eax
	call	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyleEx
	add	esp, 8

; 2470 :       
; 2471 :       EnterCriticalSection (&cs_reset);

	push	OFFSET ?cs_reset@?1??SK_ResetWindow@@YAXXZ@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__EnterCriticalSection@4

; 2472 : 
; 2473 :       if (config.window.borderless)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	SHORT $LN2@operator

; 2474 :       {
; 2475 :         SK_AdjustBorder ();

	call	?SK_AdjustBorder@@YAXXZ			; SK_AdjustBorder

; 2476 : 
; 2477 :         // XXX: Why can't the call to SK_AdjustWindow (...) suffice?
; 2478 :         if (config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN5@operator

; 2479 :           SK_GetCommandProcessor ()->ProcessCommandLine ("Window.Fullscreen 1");

	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	push	OFFSET ??_C@_0BE@FDLGBABH@Window?4Fullscreen?51?$AA@
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	call	DWORD PTR [edx+28]
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1SK_ICommandResult@@QAE@XZ

; 2480 :       }

	jmp	SHORT $LN5@operator
$LN2@operator:

; 2481 : 
; 2482 :       else if (config.window.center)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+746, 0
	je	SHORT $LN5@operator

; 2483 :         SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow
$LN5@operator:

; 2484 : 
; 2485 :       LeaveCriticalSection (&cs_reset);

	push	OFFSET ?cs_reset@?1??SK_ResetWindow@@YAXXZ@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 2486 : 
; 2487 :       CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4

; 2488 : 
; 2489 :       return 0;

	xor	eax, eax

; 2490 :     }, nullptr, 0x00, nullptr);

	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_057715e64ffa789e51a07719c162c406>@@QBEKPAX@Z ENDP ; <lambda_057715e64ffa789e51a07719c162c406>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
?SK_ResetWindow@@YAXXZ PROC				; SK_ResetWindow

; 2437 :   SK_RenderBackend& rb = SK_GetCurrentRenderBackend ();

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend

; 2438 : 
; 2439 :   if (! (config.window.borderless || config.window.center))

	mov	cl, BYTE PTR ?config@@3Usk_config_t@@A+744
	test	cl, cl
	jne	SHORT $LN2@SK_ResetWi
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+746, cl
	je	SHORT $LN1@SK_ResetWi

; 2440 :     return;
; 2441 : 
; 2442 :   if (config.window.center && (! ( (config.window.fullscreen  &&

	jmp	SHORT $LN10@SK_ResetWi
$LN2@SK_ResetWi:
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+746, 0
	je	SHORT $LN3@SK_ResetWi
$LN10@SK_ResetWi:
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN4@SK_ResetWi
	test	cl, cl
	jne	SHORT $LN3@SK_ResetWi
$LN4@SK_ResetWi:
	cmp	BYTE PTR [eax+48], 0
	je	SHORT $LN1@SK_ResetWi
$LN3@SK_ResetWi:

; 2443 :                                     config.window.borderless) ||
; 2444 :                                     rb.fullscreen_exclusive) ) )
; 2445 :     return;
; 2446 : 
; 2447 :   static CRITICAL_SECTION cs_reset;
; 2448 :   static volatile LONG    init = FALSE;
; 2449 : 
; 2450 :   if (! InterlockedCompareExchange (&init, 1, 0))

	mov	ecx, 1
	mov	edx, OFFSET ?init@?1??SK_ResetWindow@@YAXXZ@4JC
	xor	eax, eax
	lock	 cmpxchg DWORD PTR [edx], ecx
	test	eax, eax
	jne	SHORT $LN5@SK_ResetWi

; 2451 :   {
; 2452 :     InitializeCriticalSection (&cs_reset);

	push	OFFSET ?cs_reset@?1??SK_ResetWindow@@YAXXZ@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__InitializeCriticalSection@4
$LN5@SK_ResetWi:

; 2453 :   }
; 2454 : 
; 2455 :   CreateThread (nullptr, 0,

	push	0
	push	0
	push	0
	push	OFFSET ?<lambda_invoker_stdcall>@<lambda_057715e64ffa789e51a07719c162c406>@@CGKPAX@Z ; <lambda_057715e64ffa789e51a07719c162c406>::<lambda_invoker_stdcall>
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
$LN1@SK_ResetWi:

; 2456 :     [](LPVOID user) ->
; 2457 :     DWORD
; 2458 :     {
; 2459 :       UNREFERENCED_PARAMETER (user);
; 2460 : 
; 2461 :       SleepEx (33, FALSE);
; 2462 : 
; 2463 :       GetWindowRect (game_window.hWnd, &game_window.actual.window);
; 2464 :       GetClientRect (game_window.hWnd, &game_window.actual.client);
; 2465 : 
; 2466 :       ////
; 2467 :       ////// Force a sane set of window styles initially
; 2468 :       SK_SetWindowStyle   ( GetWindowLongPtrW (game_window.hWnd, GWL_STYLE)   );
; 2469 :       SK_SetWindowStyleEx ( GetWindowLongPtrW (game_window.hWnd, GWL_EXSTYLE) );
; 2470 :       
; 2471 :       EnterCriticalSection (&cs_reset);
; 2472 : 
; 2473 :       if (config.window.borderless)
; 2474 :       {
; 2475 :         SK_AdjustBorder ();
; 2476 : 
; 2477 :         // XXX: Why can't the call to SK_AdjustWindow (...) suffice?
; 2478 :         if (config.window.fullscreen)
; 2479 :           SK_GetCommandProcessor ()->ProcessCommandLine ("Window.Fullscreen 1");
; 2480 :       }
; 2481 : 
; 2482 :       else if (config.window.center)
; 2483 :         SK_AdjustWindow ();
; 2484 : 
; 2485 :       LeaveCriticalSection (&cs_reset);
; 2486 : 
; 2487 :       CloseHandle (GetCurrentThread ());
; 2488 : 
; 2489 :       return 0;
; 2490 :     }, nullptr, 0x00, nullptr);
; 2491 : 
; 2492 : }

	ret	0
?SK_ResetWindow@@YAXXZ ENDP				; SK_ResetWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_mi$ = -40						; size = 40
_wndRect$ = 8						; size = 16
?SK_IsRectTooBigForDesktop@@YA_NUtagRECT@@@Z PROC	; SK_IsRectTooBigForDesktop

; 2326 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi

; 2327 :   HMONITOR hMonitor =
; 2328 :     MonitorFromWindow ( game_window.hWnd,

	push	2
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__MonitorFromWindow@8
	xorps	xmm0, xmm0

; 2329 :                           MONITOR_DEFAULTTONEAREST );
; 2330 : 
; 2331 :   MONITORINFO mi   = {         };
; 2332 :   mi.cbSize        = sizeof (mi);
; 2333 :   GetMonitorInfo (hMonitor, &mi);

	lea	ecx, DWORD PTR _mi$[ebp]
	push	ecx
	movups	XMMWORD PTR _mi$[ebp], xmm0
	push	eax
	movups	XMMWORD PTR _mi$[ebp+16], xmm0
	mov	DWORD PTR _mi$[ebp], 40			; 00000028H
	movq	QWORD PTR _mi$[ebp+32], xmm0
	call	DWORD PTR __imp__GetMonitorInfoW@8

; 2334 : 
; 2335 :   int win_width      = wndRect.right       - wndRect.left;

	mov	edx, DWORD PTR _wndRect$[ebp+8]

; 2336 :   int win_height     = wndRect.bottom      - wndRect.top;

	mov	ecx, DWORD PTR _wndRect$[ebp+12]
	sub	edx, DWORD PTR _wndRect$[ebp]
	sub	ecx, DWORD PTR _wndRect$[ebp+4]
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	mov	esi, DWORD PTR ?config@@3Usk_config_t@@A+772
	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+776
	test	esi, esi
	jne	SHORT $LN8@SK_IsRectT
	test	eax, eax
	je	SHORT $LN2@SK_IsRectT
$LN8@SK_IsRectT:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2340 :     win_width  = config.window.res.override.x;

	mov	edx, esi

; 2341 :     win_height = config.window.res.override.y;

	mov	ecx, eax
$LN2@SK_IsRectT:

; 2342 :   }
; 2343 : 
; 2344 :   int desktop_width  = mi.rcWork.right     - mi.rcWork.left;
; 2345 :   int desktop_height = mi.rcWork.bottom    - mi.rcWork.top;
; 2346 : 
; 2347 :   int mon_width      = mi.rcMonitor.right  - mi.rcMonitor.left;

	mov	eax, DWORD PTR _mi$[ebp+12]
	mov	edi, DWORD PTR _mi$[ebp+28]
	mov	esi, DWORD PTR _mi$[ebp+32]
	sub	eax, DWORD PTR _mi$[ebp+4]
	sub	edi, DWORD PTR _mi$[ebp+20]
	sub	esi, DWORD PTR _mi$[ebp+24]

; 2349 : 
; 2350 :   if (win_width == mon_width && win_height == mon_height)

	cmp	edx, eax
	jne	SHORT $LN3@SK_IsRectT

; 2348 :   int mon_height     = mi.rcMonitor.bottom - mi.rcMonitor.top;

	mov	eax, DWORD PTR _mi$[ebp+16]
	sub	eax, DWORD PTR _mi$[ebp+8]

; 2349 : 
; 2350 :   if (win_width == mon_width && win_height == mon_height)

	cmp	ecx, eax
	jne	SHORT $LN3@SK_IsRectT
$LN11@SK_IsRectT:
	pop	edi

; 2351 :     return true;

	mov	al, 1
	pop	esi

; 2357 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@SK_IsRectT:

; 2352 : 
; 2353 :   if (win_width > desktop_width && win_height > desktop_height)

	cmp	edx, edi
	jle	SHORT $LN4@SK_IsRectT
	cmp	ecx, esi
	jg	SHORT $LN11@SK_IsRectT
$LN4@SK_IsRectT:
	pop	edi

; 2354 :     return true;
; 2355 : 
; 2356 :   return false;

	xor	al, al
	pop	esi

; 2357 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_IsRectTooBigForDesktop@@YA_NUtagRECT@@@Z ENDP	; SK_IsRectTooBigForDesktop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_client$ = -32						; size = 16
_window$ = -16						; size = 16
?SK_ComputeClientOrigin@@YA?AUtagPOINT@@XZ PROC		; SK_ComputeClientOrigin

; 2313 : {

	npad	2
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 2314 :   RECT window = { },
; 2315 :        client = { };
; 2316 : 
; 2317 :   GetWindowRect_Original ( game_window.hWnd, &window );

	lea	eax, DWORD PTR _window$[ebp]
	xorps	xmm0, xmm0
	push	eax
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	movaps	XMMWORD PTR _window$[ebp], xmm0
	movaps	XMMWORD PTR _client$[ebp], xmm0
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 2318 :   GetClientRect_Original ( game_window.hWnd, &client );

	lea	eax, DWORD PTR _client$[ebp]
	push	eax
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 2319 : 
; 2320 :   return POINT { window.left  + client.left,

	mov	eax, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR _window$[ebp+4]
	add	eax, DWORD PTR _window$[ebp]
	add	edx, DWORD PTR _client$[ebp+4]

; 2321 :                    window.top + client.top };
; 2322 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?SK_ComputeClientOrigin@@YA?AUtagPOINT@@XZ ENDP		; SK_ComputeClientOrigin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 16
$T2 = -32						; size = 16
_ret$ = -16						; size = 16
$T3 = 8							; size = 4
?SK_ComputeClientSize@@YA?AUtagRECT@@XZ PROC		; SK_ComputeClientSize

; 2288 : {

	npad	2
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	mov	ecx, DWORD PTR ?config@@3Usk_config_t@@A+772
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2288 : {

	sub	esp, 32					; 00000020H
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+776
	test	ecx, ecx
	jne	SHORT $LN6@SK_Compute
	test	eax, eax
	jne	SHORT $LN6@SK_Compute
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2302 :   GetClientRect_Original ( game_window.hWnd, &ret );

	movups	xmm0, XMMWORD PTR ?game_window@@3Usk_window_s@@A+84
	lea	eax, DWORD PTR _ret$[ebp]
	push	eax
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	movups	XMMWORD PTR _ret$[ebp], xmm0
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 2303 : 
; 2304 :   ret = { 0, 0,

	mov	eax, DWORD PTR _ret$[ebp+8]
	sub	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR $T1[ebp+8], eax
	mov	eax, DWORD PTR _ret$[ebp+12]
	sub	eax, DWORD PTR _ret$[ebp+4]

; 2305 :             ret.right    - ret.left,
; 2306 :               ret.bottom - ret.top };
; 2307 : 
; 2308 :   return ret;

	jmp	SHORT $LN9@SK_Compute
$LN6@SK_Compute:

; 2289 :   bool use_override = (! config.window.res.override.isZero ());
; 2290 : 
; 2291 :   if (use_override)
; 2292 :   {
; 2293 :     return RECT { 0L, 0L,

	mov	DWORD PTR $T2[ebp+8], ecx
$LN9@SK_Compute:
	mov	DWORD PTR $T2[ebp+12], eax
	mov	eax, DWORD PTR $T3[ebx]
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR $T2[ebp+4], 0
	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 2309 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?SK_ComputeClientSize@@YA?AUtagRECT@@XZ ENDP		; SK_ComputeClientSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
?GetWindowLongPtrW_Detour@@YGJPAUHWND__@@H@Z PROC	; GetWindowLongPtrW_Detour

; 2225 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2226 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??GetWindowLongPtrW_Detour@@YGJPAUHWND__@@H@Z@4_NA, 0
	jne	SHORT $LN2@GetWindowL
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@GetWindowL
	push	OFFSET $SG212159
	push	OFFSET $SG212160
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@GetWindowL:
	mov	BYTE PTR ?called@?2??GetWindowLongPtrW_Detour@@YGJPAUHWND__@@H@Z@4_NA, 1
$LN2@GetWindowL:

; 2187 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]

; 2227 : 
; 2228 :   return GetWindowLongPtr_Marshall (

	mov	edx, DWORD PTR ?GetWindowLongPtrW_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongPtrW_Original

; 2187 :   if (hWnd == game_window.hWnd)

	mov	eax, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN6@GetWindowL

; 2188 :   {
; 2189 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN10@GetWindowL
	cmp	eax, -16				; fffffff0H
	jne	SHORT $LN6@GetWindowL

; 2227 : 
; 2228 :   return GetWindowLongPtr_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68

; 2229 :     GetWindowLongPtrW_Original,
; 2230 :       hWnd,
; 2231 :         nIndex
; 2232 :   );
; 2233 : }

	pop	ebp
	ret	8
$LN10@GetWindowL:

; 2227 : 
; 2228 :   return GetWindowLongPtr_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+72

; 2229 :     GetWindowLongPtrW_Original,
; 2230 :       hWnd,
; 2231 :         nIndex
; 2232 :   );
; 2233 : }

	pop	ebp
	ret	8
$LN6@GetWindowL:

; 2198 :   return pOrigFunc (hWnd, nIndex);

	mov	DWORD PTR _nIndex$[ebp], eax
	mov	DWORD PTR _hWnd$[ebp], ecx

; 2229 :     GetWindowLongPtrW_Original,
; 2230 :       hWnd,
; 2231 :         nIndex
; 2232 :   );
; 2233 : }

	pop	ebp

; 2198 :   return pOrigFunc (hWnd, nIndex);

	jmp	edx
?GetWindowLongPtrW_Detour@@YGJPAUHWND__@@H@Z ENDP	; GetWindowLongPtrW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
?GetWindowLongPtrA_Detour@@YGJPAUHWND__@@H@Z PROC	; GetWindowLongPtrA_Detour

; 2208 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2209 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??GetWindowLongPtrA_Detour@@YGJPAUHWND__@@H@Z@4_NA, 0
	jne	SHORT $LN2@GetWindowL
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@GetWindowL
	push	OFFSET $SG212149
	push	OFFSET $SG212150
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@GetWindowL:
	mov	BYTE PTR ?called@?2??GetWindowLongPtrA_Detour@@YGJPAUHWND__@@H@Z@4_NA, 1
$LN2@GetWindowL:

; 2187 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]

; 2210 : 
; 2211 :   return GetWindowLongPtr_Marshall (

	mov	edx, DWORD PTR ?GetWindowLongPtrA_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongPtrA_Original

; 2187 :   if (hWnd == game_window.hWnd)

	mov	eax, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN6@GetWindowL

; 2188 :   {
; 2189 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN10@GetWindowL
	cmp	eax, -16				; fffffff0H
	jne	SHORT $LN6@GetWindowL

; 2210 : 
; 2211 :   return GetWindowLongPtr_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68

; 2212 :     GetWindowLongPtrA_Original,
; 2213 :       hWnd,
; 2214 :         nIndex
; 2215 :   );
; 2216 : }

	pop	ebp
	ret	8
$LN10@GetWindowL:

; 2210 : 
; 2211 :   return GetWindowLongPtr_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+72

; 2212 :     GetWindowLongPtrA_Original,
; 2213 :       hWnd,
; 2214 :         nIndex
; 2215 :   );
; 2216 : }

	pop	ebp
	ret	8
$LN6@GetWindowL:

; 2198 :   return pOrigFunc (hWnd, nIndex);

	mov	DWORD PTR _nIndex$[ebp], eax
	mov	DWORD PTR _hWnd$[ebp], ecx

; 2212 :     GetWindowLongPtrA_Original,
; 2213 :       hWnd,
; 2214 :         nIndex
; 2215 :   );
; 2216 : }

	pop	ebp

; 2198 :   return pOrigFunc (hWnd, nIndex);

	jmp	edx
?GetWindowLongPtrA_Detour@@YGJPAUHWND__@@H@Z ENDP	; GetWindowLongPtrA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?GetWindowLongPtr_Marshall@@YGJP6GJPAUHWND__@@H@Z0H@Z
_TEXT	SEGMENT
_pOrigFunc$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_nIndex$ = 16						; size = 4
?GetWindowLongPtr_Marshall@@YGJP6GJPAUHWND__@@H@Z0H@Z PROC ; GetWindowLongPtr_Marshall, COMDAT

; 2186 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2187 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]
	mov	eax, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN2@GetWindowL

; 2188 :   {
; 2189 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN6@GetWindowL
	cmp	eax, -16				; fffffff0H
	jne	SHORT $LN2@GetWindowL

; 2190 :     {
; 2191 :       case GWL_STYLE:
; 2192 :         return game_window.game.style;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68

; 2199 : }

	pop	ebp
	ret	12					; 0000000cH
$LN6@GetWindowL:

; 2193 :       case GWL_EXSTYLE:
; 2194 :         return game_window.game.style_ex;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+72

; 2199 : }

	pop	ebp
	ret	12					; 0000000cH
$LN2@GetWindowL:

; 2195 :     }
; 2196 :   }
; 2197 : 
; 2198 :   return pOrigFunc (hWnd, nIndex);

	push	eax
	push	ecx
	call	DWORD PTR _pOrigFunc$[ebp]

; 2199 : }

	pop	ebp
	ret	12					; 0000000cH
?GetWindowLongPtr_Marshall@@YGJP6GJPAUHWND__@@H@Z0H@Z ENDP ; GetWindowLongPtr_Marshall
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
_dwNewLong$ = 16					; size = 4
?SetWindowLongPtrW_Detour@@YGJPAUHWND__@@HJ@Z PROC	; SetWindowLongPtrW_Detour

; 2165 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2166 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??SetWindowLongPtrW_Detour@@YGJPAUHWND__@@HJ@Z@4_NA, 0
	jne	SHORT $LN2@SetWindowL
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@SetWindowL
	push	OFFSET $SG212129
	push	OFFSET $SG212130
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@SetWindowL:
	mov	BYTE PTR ?called@?2??SetWindowLongPtrW_Detour@@YGJPAUHWND__@@HJ@Z@4_NA, 1
$LN2@SetWindowL:

; 2058 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]

; 2167 : 
; 2168 :   return SetWindowLongPtr_Marshall (

	mov	edx, DWORD PTR ?SetWindowLongPtrW_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongPtrW_Original

; 2058 :   if (hWnd == game_window.hWnd)

	mov	eax, DWORD PTR _nIndex$[ebp]
	push	esi
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN18@SetWindowL

; 2059 :   {
; 2060 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN13@SetWindowL
	cmp	eax, -16				; fffffff0H
	jne	$LN18@SetWindowL

; 2061 :     {
; 2062 :       case GWL_STYLE:
; 2063 :       {
; 2064 :         game_window.game.style =

	mov	eax, DWORD PTR _dwNewLong$[ebp]

; 2065 :           dwNewLong;
; 2066 : 
; 2067 :         if (config.window.borderless)

	mov	esi, -1878392832			; 900a0000H
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	ecx, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, eax
	cmovne	ecx, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, ecx

; 204  :     return (  ( style == 0x0            ) ||

	test	eax, eax
	je	SHORT $LN22@SetWindowL
	test	eax, 12845056				; 00c40000H
	je	SHORT $LN12@SetWindowL
$LN22@SetWindowL:

; 2084 :           game_window.border_style =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+124, eax
$LN12@SetWindowL:

; 2085 :             game_window.game.style;
; 2086 :         }
; 2087 : 
; 2088 :         SK_SetWindowStyle (static_cast <LONG> (game_window.actual.style), pOrigFunc);

	push	edx
	push	ecx
	call	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyle

; 2167 : 
; 2168 :   return SetWindowLongPtr_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 2088 :         SK_SetWindowStyle (static_cast <LONG> (game_window.actual.style), pOrigFunc);

	add	esp, 8
	pop	esi

; 2169 :     SetWindowLongPtrW_Original,
; 2170 :       hWnd,
; 2171 :         nIndex,
; 2172 :           dwNewLong
; 2173 :   );
; 2174 : }

	pop	ebp
	ret	12					; 0000000cH
$LN13@SetWindowL:

; 2098 :         if (config.window.borderless)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	esi, 262144				; 00040000H
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68
	mov	ecx, DWORD PTR _dwNewLong$[ebp]
	cmovne	eax, esi

; 204  :     return (  ( style == 0x0            ) ||

	mov	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 2095 :         game_window.game.style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+72, ecx

; 2096 :           dwNewLong;
; 2097 : 
; 2098 :         if (config.window.borderless)

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 204  :     return (  ( style == 0x0            ) ||

	test	esi, esi
	je	SHORT $LN26@SetWindowL
	test	esi, 12845056				; 00c40000H
	je	SHORT $LN16@SetWindowL
$LN26@SetWindowL:

; 2115 :           game_window.border_style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+128, ecx
$LN16@SetWindowL:

; 2116 :             game_window.game.style_ex;
; 2117 :         }
; 2118 : 
; 2119 :         SK_SetWindowStyleEx (static_cast <LONG> (game_window.actual.style_ex), pOrigFunc);

	push	edx
	push	eax
	call	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyleEx

; 2167 : 
; 2168 :   return SetWindowLongPtr_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+120

; 2119 :         SK_SetWindowStyleEx (static_cast <LONG> (game_window.actual.style_ex), pOrigFunc);

	add	esp, 8
	pop	esi

; 2169 :     SetWindowLongPtrW_Original,
; 2170 :       hWnd,
; 2171 :         nIndex,
; 2172 :           dwNewLong
; 2173 :   );
; 2174 : }

	pop	ebp
	ret	12					; 0000000cH
$LN18@SetWindowL:
	pop	esi

; 2135 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	mov	DWORD PTR _nIndex$[ebp], eax
	mov	DWORD PTR _hWnd$[ebp], ecx

; 2169 :     SetWindowLongPtrW_Original,
; 2170 :       hWnd,
; 2171 :         nIndex,
; 2172 :           dwNewLong
; 2173 :   );
; 2174 : }

	pop	ebp

; 2135 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	jmp	edx
?SetWindowLongPtrW_Detour@@YGJPAUHWND__@@HJ@Z ENDP	; SetWindowLongPtrW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
_dwNewLong$ = 16					; size = 4
?SetWindowLongPtrA_Detour@@YGJPAUHWND__@@HJ@Z PROC	; SetWindowLongPtrA_Detour

; 2146 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2147 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??SetWindowLongPtrA_Detour@@YGJPAUHWND__@@HJ@Z@4_NA, 0
	jne	SHORT $LN2@SetWindowL
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@SetWindowL
	push	OFFSET $SG212118
	push	OFFSET $SG212119
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@SetWindowL:
	mov	BYTE PTR ?called@?2??SetWindowLongPtrA_Detour@@YGJPAUHWND__@@HJ@Z@4_NA, 1
$LN2@SetWindowL:

; 2058 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]

; 2148 : 
; 2149 :   return SetWindowLongPtr_Marshall (

	mov	edx, DWORD PTR ?SetWindowLongPtrA_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongPtrA_Original

; 2058 :   if (hWnd == game_window.hWnd)

	mov	eax, DWORD PTR _nIndex$[ebp]
	push	esi
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN18@SetWindowL

; 2059 :   {
; 2060 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN13@SetWindowL
	cmp	eax, -16				; fffffff0H
	jne	$LN18@SetWindowL

; 2061 :     {
; 2062 :       case GWL_STYLE:
; 2063 :       {
; 2064 :         game_window.game.style =

	mov	eax, DWORD PTR _dwNewLong$[ebp]

; 2065 :           dwNewLong;
; 2066 : 
; 2067 :         if (config.window.borderless)

	mov	esi, -1878392832			; 900a0000H
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	ecx, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, eax
	cmovne	ecx, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, ecx

; 204  :     return (  ( style == 0x0            ) ||

	test	eax, eax
	je	SHORT $LN22@SetWindowL
	test	eax, 12845056				; 00c40000H
	je	SHORT $LN12@SetWindowL
$LN22@SetWindowL:

; 2084 :           game_window.border_style =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+124, eax
$LN12@SetWindowL:

; 2085 :             game_window.game.style;
; 2086 :         }
; 2087 : 
; 2088 :         SK_SetWindowStyle (static_cast <LONG> (game_window.actual.style), pOrigFunc);

	push	edx
	push	ecx
	call	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyle

; 2148 : 
; 2149 :   return SetWindowLongPtr_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 2088 :         SK_SetWindowStyle (static_cast <LONG> (game_window.actual.style), pOrigFunc);

	add	esp, 8
	pop	esi

; 2150 :     SetWindowLongPtrA_Original,
; 2151 :       hWnd,
; 2152 :         nIndex,
; 2153 :           dwNewLong
; 2154 :   );
; 2155 : }

	pop	ebp
	ret	12					; 0000000cH
$LN13@SetWindowL:

; 2098 :         if (config.window.borderless)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	esi, 262144				; 00040000H
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68
	mov	ecx, DWORD PTR _dwNewLong$[ebp]
	cmovne	eax, esi

; 204  :     return (  ( style == 0x0            ) ||

	mov	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 2095 :         game_window.game.style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+72, ecx

; 2096 :           dwNewLong;
; 2097 : 
; 2098 :         if (config.window.borderless)

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 204  :     return (  ( style == 0x0            ) ||

	test	esi, esi
	je	SHORT $LN26@SetWindowL
	test	esi, 12845056				; 00c40000H
	je	SHORT $LN16@SetWindowL
$LN26@SetWindowL:

; 2115 :           game_window.border_style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+128, ecx
$LN16@SetWindowL:

; 2116 :             game_window.game.style_ex;
; 2117 :         }
; 2118 : 
; 2119 :         SK_SetWindowStyleEx (static_cast <LONG> (game_window.actual.style_ex), pOrigFunc);

	push	edx
	push	eax
	call	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyleEx

; 2148 : 
; 2149 :   return SetWindowLongPtr_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+120

; 2119 :         SK_SetWindowStyleEx (static_cast <LONG> (game_window.actual.style_ex), pOrigFunc);

	add	esp, 8
	pop	esi

; 2150 :     SetWindowLongPtrA_Original,
; 2151 :       hWnd,
; 2152 :         nIndex,
; 2153 :           dwNewLong
; 2154 :   );
; 2155 : }

	pop	ebp
	ret	12					; 0000000cH
$LN18@SetWindowL:
	pop	esi

; 2135 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	mov	DWORD PTR _nIndex$[ebp], eax
	mov	DWORD PTR _hWnd$[ebp], ecx

; 2150 :     SetWindowLongPtrA_Original,
; 2151 :       hWnd,
; 2152 :         nIndex,
; 2153 :           dwNewLong
; 2154 :   );
; 2155 : }

	pop	ebp

; 2135 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	jmp	edx
?SetWindowLongPtrA_Detour@@YGJPAUHWND__@@HJ@Z ENDP	; SetWindowLongPtrA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?SetWindowLongPtr_Marshall@@YGJP6GJPAUHWND__@@HJ@Z0HJ@Z
_TEXT	SEGMENT
_pOrigFunc$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_nIndex$ = 16						; size = 4
_dwNewLong$ = 20					; size = 4
?SetWindowLongPtr_Marshall@@YGJP6GJPAUHWND__@@HJ@Z0HJ@Z PROC ; SetWindowLongPtr_Marshall, COMDAT

; 2054 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2055 :   //dll_log.Log (L"SetWindowLongPtr: Idx=%li, Val=%X -- Caller: %s", nIndex, dwNewLong, SK_GetCallerName ().c_str ());
; 2056 : 
; 2057 :   // Override window styles
; 2058 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]
	mov	eax, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN14@SetWindowL

; 2059 :   {
; 2060 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN9@SetWindowL
	cmp	eax, -16				; fffffff0H
	jne	$LN14@SetWindowL

; 2061 :     {
; 2062 :       case GWL_STYLE:
; 2063 :       {
; 2064 :         game_window.game.style =

	mov	eax, DWORD PTR _dwNewLong$[ebp]

; 2065 :           dwNewLong;
; 2066 : 
; 2067 :         if (config.window.borderless)

	mov	edx, -1878392832			; 900a0000H
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	ecx, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, eax
	cmovne	ecx, edx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, ecx

; 204  :     return (  ( style == 0x0            ) ||

	test	eax, eax
	je	SHORT $LN18@SetWindowL
	test	eax, 12845056				; 00c40000H
	je	SHORT $LN8@SetWindowL
$LN18@SetWindowL:

; 2068 :         {
; 2069 :           game_window.actual.style =
; 2070 :             SK_BORDERLESS;
; 2071 :         }
; 2072 : 
; 2073 :         else
; 2074 :         {
; 2075 :           game_window.actual.style =
; 2076 :             game_window.game.style;
; 2077 :         }
; 2078 : 
; 2079 :         if ( SK_WindowManager::StyleHasBorder (
; 2080 :                game_window.game.style
; 2081 :              )
; 2082 :            )
; 2083 :         {
; 2084 :           game_window.border_style =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+124, eax
$LN8@SetWindowL:

; 2085 :             game_window.game.style;
; 2086 :         }
; 2087 : 
; 2088 :         SK_SetWindowStyle (static_cast <LONG> (game_window.actual.style), pOrigFunc);

	push	DWORD PTR _pOrigFunc$[ebp]
	push	ecx
	call	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyle

; 2089 : 
; 2090 :         return game_window.actual.style;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+116
	add	esp, 8

; 2136 : }

	pop	ebp
	ret	16					; 00000010H
$LN9@SetWindowL:

; 2096 :           dwNewLong;
; 2097 : 
; 2098 :         if (config.window.borderless)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	edx, 262144				; 00040000H
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68
	mov	ecx, DWORD PTR _dwNewLong$[ebp]
	cmovne	eax, edx

; 204  :     return (  ( style == 0x0            ) ||

	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 2091 :       }
; 2092 : 
; 2093 :       case GWL_EXSTYLE:
; 2094 :       {
; 2095 :         game_window.game.style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+72, ecx

; 2096 :           dwNewLong;
; 2097 : 
; 2098 :         if (config.window.borderless)

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 204  :     return (  ( style == 0x0            ) ||

	test	edx, edx
	je	SHORT $LN22@SetWindowL
	test	edx, 12845056				; 00c40000H
	je	SHORT $LN12@SetWindowL
$LN22@SetWindowL:

; 2099 :         {
; 2100 :           game_window.actual.style_ex =
; 2101 :             SK_BORDERLESS_EX;
; 2102 :         }
; 2103 : 
; 2104 :         else
; 2105 :         {
; 2106 :           game_window.actual.style_ex =
; 2107 :             game_window.game.style;
; 2108 :         }
; 2109 : 
; 2110 :         if ( SK_WindowManager::StyleHasBorder (
; 2111 :                game_window.actual.style
; 2112 :              )
; 2113 :            )
; 2114 :         {
; 2115 :           game_window.border_style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+128, ecx
$LN12@SetWindowL:

; 2116 :             game_window.game.style_ex;
; 2117 :         }
; 2118 : 
; 2119 :         SK_SetWindowStyleEx (static_cast <LONG> (game_window.actual.style_ex), pOrigFunc);

	push	DWORD PTR _pOrigFunc$[ebp]
	push	eax
	call	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyleEx

; 2120 : 
; 2121 :         return game_window.actual.style_ex;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+120
	add	esp, 8

; 2136 : }

	pop	ebp
	ret	16					; 00000010H
$LN14@SetWindowL:

; 2122 :       }
; 2123 : 
; 2124 :       case GWLP_WNDPROC:
; 2125 :       {
; 2126 :         if (game_window.hooked)
; 2127 :         {
; 2128 :           //game_window.WndProc_Original = reinterpret_cast <WNDPROC> (dwNewLong);
; 2129 :           //return dwNewLong;
; 2130 :         }
; 2131 :       } break;
; 2132 :     }
; 2133 :   }
; 2134 : 
; 2135 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	push	DWORD PTR _dwNewLong$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR _pOrigFunc$[ebp]

; 2136 : }

	pop	ebp
	ret	16					; 00000010H
?SetWindowLongPtr_Marshall@@YGJP6GJPAUHWND__@@HJ@Z0HJ@Z ENDP ; SetWindowLongPtr_Marshall
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
?GetWindowLongW_Detour@@YGJPAUHWND__@@H@Z PROC		; GetWindowLongW_Detour

; 2033 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2034 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??GetWindowLongW_Detour@@YGJPAUHWND__@@H@Z@4_NA, 0
	jne	SHORT $LN2@GetWindowL
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@GetWindowL
	push	OFFSET $SG212086
	push	OFFSET $SG212087
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@GetWindowL:
	mov	BYTE PTR ?called@?2??GetWindowLongW_Detour@@YGJPAUHWND__@@H@Z@4_NA, 1
$LN2@GetWindowL:

; 1995 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]

; 2035 : 
; 2036 :   return GetWindowLong_Marshall (

	mov	edx, DWORD PTR ?GetWindowLongW_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongW_Original

; 1995 :   if (hWnd == game_window.hWnd)

	mov	eax, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN6@GetWindowL

; 1996 :   {
; 1997 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN10@GetWindowL
	cmp	eax, -16				; fffffff0H
	jne	SHORT $LN6@GetWindowL

; 2035 : 
; 2036 :   return GetWindowLong_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68

; 2037 :     GetWindowLongW_Original,
; 2038 :       hWnd,
; 2039 :         nIndex
; 2040 :   );
; 2041 : }

	pop	ebp
	ret	8
$LN10@GetWindowL:

; 2035 : 
; 2036 :   return GetWindowLong_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+72

; 2037 :     GetWindowLongW_Original,
; 2038 :       hWnd,
; 2039 :         nIndex
; 2040 :   );
; 2041 : }

	pop	ebp
	ret	8
$LN6@GetWindowL:

; 2006 :   return pOrigFunc (hWnd, nIndex);

	mov	DWORD PTR _nIndex$[ebp], eax
	mov	DWORD PTR _hWnd$[ebp], ecx

; 2037 :     GetWindowLongW_Original,
; 2038 :       hWnd,
; 2039 :         nIndex
; 2040 :   );
; 2041 : }

	pop	ebp

; 2006 :   return pOrigFunc (hWnd, nIndex);

	jmp	edx
?GetWindowLongW_Detour@@YGJPAUHWND__@@H@Z ENDP		; GetWindowLongW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
?GetWindowLongA_Detour@@YGJPAUHWND__@@H@Z PROC		; GetWindowLongA_Detour

; 2016 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2017 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??GetWindowLongA_Detour@@YGJPAUHWND__@@H@Z@4_NA, 0
	jne	SHORT $LN2@GetWindowL
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@GetWindowL
	push	OFFSET $SG212076
	push	OFFSET $SG212077
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@GetWindowL:
	mov	BYTE PTR ?called@?2??GetWindowLongA_Detour@@YGJPAUHWND__@@H@Z@4_NA, 1
$LN2@GetWindowL:

; 1995 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]

; 2018 : 
; 2019 :   return GetWindowLong_Marshall (

	mov	edx, DWORD PTR ?GetWindowLongA_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongA_Original

; 1995 :   if (hWnd == game_window.hWnd)

	mov	eax, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN6@GetWindowL

; 1996 :   {
; 1997 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN10@GetWindowL
	cmp	eax, -16				; fffffff0H
	jne	SHORT $LN6@GetWindowL

; 2018 : 
; 2019 :   return GetWindowLong_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68

; 2020 :     GetWindowLongA_Original,
; 2021 :       hWnd,
; 2022 :         nIndex
; 2023 :   );
; 2024 : }

	pop	ebp
	ret	8
$LN10@GetWindowL:

; 2018 : 
; 2019 :   return GetWindowLong_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+72

; 2020 :     GetWindowLongA_Original,
; 2021 :       hWnd,
; 2022 :         nIndex
; 2023 :   );
; 2024 : }

	pop	ebp
	ret	8
$LN6@GetWindowL:

; 2006 :   return pOrigFunc (hWnd, nIndex);

	mov	DWORD PTR _nIndex$[ebp], eax
	mov	DWORD PTR _hWnd$[ebp], ecx

; 2020 :     GetWindowLongA_Original,
; 2021 :       hWnd,
; 2022 :         nIndex
; 2023 :   );
; 2024 : }

	pop	ebp

; 2006 :   return pOrigFunc (hWnd, nIndex);

	jmp	edx
?GetWindowLongA_Detour@@YGJPAUHWND__@@H@Z ENDP		; GetWindowLongA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?GetWindowLong_Marshall@@YGJP6GJPAUHWND__@@H@Z0H@Z
_TEXT	SEGMENT
_pOrigFunc$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_nIndex$ = 16						; size = 4
?GetWindowLong_Marshall@@YGJP6GJPAUHWND__@@H@Z0H@Z PROC	; GetWindowLong_Marshall, COMDAT

; 1994 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1995 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]
	mov	eax, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN2@GetWindowL

; 1996 :   {
; 1997 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN6@GetWindowL
	cmp	eax, -16				; fffffff0H
	jne	SHORT $LN2@GetWindowL

; 1998 :     {
; 1999 :       case GWL_STYLE:
; 2000 :         return static_cast <LONG> (game_window.game.style);

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68

; 2007 : }

	pop	ebp
	ret	12					; 0000000cH
$LN6@GetWindowL:

; 2001 :       case GWL_EXSTYLE:
; 2002 :         return static_cast <LONG> (game_window.game.style_ex);

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+72

; 2007 : }

	pop	ebp
	ret	12					; 0000000cH
$LN2@GetWindowL:

; 2003 :     }
; 2004 :   }
; 2005 : 
; 2006 :   return pOrigFunc (hWnd, nIndex);

	push	eax
	push	ecx
	call	DWORD PTR _pOrigFunc$[ebp]

; 2007 : }

	pop	ebp
	ret	12					; 0000000cH
?GetWindowLong_Marshall@@YGJP6GJPAUHWND__@@H@Z0H@Z ENDP	; GetWindowLong_Marshall
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
_dwNewLong$ = 16					; size = 4
?SetWindowLongW_Detour@@YGJPAUHWND__@@HJ@Z PROC		; SetWindowLongW_Detour

; 1900 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1901 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??SetWindowLongW_Detour@@YGJPAUHWND__@@HJ@Z@4_NA, 0
	jne	SHORT $LN2@SetWindowL
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@SetWindowL
	push	OFFSET $SG212054
	push	OFFSET $SG212055
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@SetWindowL:
	mov	BYTE PTR ?called@?2??SetWindowLongW_Detour@@YGJPAUHWND__@@HJ@Z@4_NA, 1
$LN2@SetWindowL:

; 1791 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]

; 1902 : 
; 1903 :   return SetWindowLong_Marshall (

	mov	edx, DWORD PTR ?SetWindowLongW_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongW_Original

; 1791 :   if (hWnd == game_window.hWnd)

	mov	eax, DWORD PTR _nIndex$[ebp]
	push	esi
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN18@SetWindowL

; 1792 :   {
; 1793 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN13@SetWindowL
	cmp	eax, -16				; fffffff0H
	jne	$LN18@SetWindowL

; 1794 :     {
; 1795 :       case GWL_STYLE:
; 1796 :       {
; 1797 :         game_window.game.style =

	mov	eax, DWORD PTR _dwNewLong$[ebp]

; 1798 :           static_cast <LONG_PTR> (dwNewLong);
; 1799 : 
; 1800 :         if (config.window.borderless)

	mov	esi, -1878392832			; 900a0000H
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	ecx, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, eax
	cmovne	ecx, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, ecx

; 204  :     return (  ( style == 0x0            ) ||

	test	eax, eax
	je	SHORT $LN22@SetWindowL
	test	eax, 12845056				; 00c40000H
	je	SHORT $LN12@SetWindowL
$LN22@SetWindowL:

; 1817 :           game_window.border_style =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+124, eax
$LN12@SetWindowL:

; 1818 :             game_window.game.style;
; 1819 :         }
; 1820 : 
; 1821 :         SK_SetWindowStyle ( static_cast      <DWORD_PTR>            (game_window.actual.style),

	push	edx
	push	ecx
	call	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyle

; 1902 : 
; 1903 :   return SetWindowLong_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 1821 :         SK_SetWindowStyle ( static_cast      <DWORD_PTR>            (game_window.actual.style),

	add	esp, 8
	pop	esi

; 1904 :     SetWindowLongW_Original,
; 1905 :       hWnd,
; 1906 :         nIndex,
; 1907 :           dwNewLong
; 1908 :   );
; 1909 : }

	pop	ebp
	ret	12					; 0000000cH
$LN13@SetWindowL:

; 1832 :         if (config.window.borderless)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	esi, 262144				; 00040000H
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68
	mov	ecx, DWORD PTR _dwNewLong$[ebp]
	cmovne	eax, esi

; 204  :     return (  ( style == 0x0            ) ||

	mov	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 1829 :         game_window.game.style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+72, ecx

; 1830 :           static_cast <LONG_PTR> (dwNewLong);
; 1831 : 
; 1832 :         if (config.window.borderless)

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 204  :     return (  ( style == 0x0            ) ||

	test	esi, esi
	je	SHORT $LN26@SetWindowL
	test	esi, 12845056				; 00c40000H
	je	SHORT $LN16@SetWindowL
$LN26@SetWindowL:

; 1849 :           game_window.border_style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+128, ecx
$LN16@SetWindowL:

; 1850 :             game_window.game.style_ex;
; 1851 :         }
; 1852 : 
; 1853 :         SK_SetWindowStyleEx ( static_cast      <DWORD_PTR>            (game_window.actual.style_ex),

	push	edx
	push	eax
	call	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyleEx

; 1902 : 
; 1903 :   return SetWindowLong_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+120

; 1853 :         SK_SetWindowStyleEx ( static_cast      <DWORD_PTR>            (game_window.actual.style_ex),

	add	esp, 8
	pop	esi

; 1904 :     SetWindowLongW_Original,
; 1905 :       hWnd,
; 1906 :         nIndex,
; 1907 :           dwNewLong
; 1908 :   );
; 1909 : }

	pop	ebp
	ret	12					; 0000000cH
$LN18@SetWindowL:
	pop	esi

; 1870 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	mov	DWORD PTR _nIndex$[ebp], eax
	mov	DWORD PTR _hWnd$[ebp], ecx

; 1904 :     SetWindowLongW_Original,
; 1905 :       hWnd,
; 1906 :         nIndex,
; 1907 :           dwNewLong
; 1908 :   );
; 1909 : }

	pop	ebp

; 1870 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	jmp	edx
?SetWindowLongW_Detour@@YGJPAUHWND__@@HJ@Z ENDP		; SetWindowLongW_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
_dwNewLong$ = 16					; size = 4
?SetWindowLongA_Detour@@YGJPAUHWND__@@HJ@Z PROC		; SetWindowLongA_Detour

; 1881 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1882 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??SetWindowLongA_Detour@@YGJPAUHWND__@@HJ@Z@4_NA, 0
	jne	SHORT $LN2@SetWindowL
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@SetWindowL
	push	OFFSET $SG212043
	push	OFFSET $SG212044
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@SetWindowL:
	mov	BYTE PTR ?called@?2??SetWindowLongA_Detour@@YGJPAUHWND__@@HJ@Z@4_NA, 1
$LN2@SetWindowL:

; 1791 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]

; 1883 : 
; 1884 :   return SetWindowLong_Marshall (

	mov	edx, DWORD PTR ?SetWindowLongA_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongA_Original

; 1791 :   if (hWnd == game_window.hWnd)

	mov	eax, DWORD PTR _nIndex$[ebp]
	push	esi
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN18@SetWindowL

; 1792 :   {
; 1793 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN13@SetWindowL
	cmp	eax, -16				; fffffff0H
	jne	$LN18@SetWindowL

; 1794 :     {
; 1795 :       case GWL_STYLE:
; 1796 :       {
; 1797 :         game_window.game.style =

	mov	eax, DWORD PTR _dwNewLong$[ebp]

; 1798 :           static_cast <LONG_PTR> (dwNewLong);
; 1799 : 
; 1800 :         if (config.window.borderless)

	mov	esi, -1878392832			; 900a0000H
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	ecx, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, eax
	cmovne	ecx, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, ecx

; 204  :     return (  ( style == 0x0            ) ||

	test	eax, eax
	je	SHORT $LN22@SetWindowL
	test	eax, 12845056				; 00c40000H
	je	SHORT $LN12@SetWindowL
$LN22@SetWindowL:

; 1817 :           game_window.border_style =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+124, eax
$LN12@SetWindowL:

; 1818 :             game_window.game.style;
; 1819 :         }
; 1820 : 
; 1821 :         SK_SetWindowStyle ( static_cast      <DWORD_PTR>            (game_window.actual.style),

	push	edx
	push	ecx
	call	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyle

; 1883 : 
; 1884 :   return SetWindowLong_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 1821 :         SK_SetWindowStyle ( static_cast      <DWORD_PTR>            (game_window.actual.style),

	add	esp, 8
	pop	esi

; 1885 :     SetWindowLongA_Original,
; 1886 :       hWnd,
; 1887 :         nIndex,
; 1888 :           dwNewLong
; 1889 :   );
; 1890 : }

	pop	ebp
	ret	12					; 0000000cH
$LN13@SetWindowL:

; 1832 :         if (config.window.borderless)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	esi, 262144				; 00040000H
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68
	mov	ecx, DWORD PTR _dwNewLong$[ebp]
	cmovne	eax, esi

; 204  :     return (  ( style == 0x0            ) ||

	mov	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 1829 :         game_window.game.style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+72, ecx

; 1830 :           static_cast <LONG_PTR> (dwNewLong);
; 1831 : 
; 1832 :         if (config.window.borderless)

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 204  :     return (  ( style == 0x0            ) ||

	test	esi, esi
	je	SHORT $LN26@SetWindowL
	test	esi, 12845056				; 00c40000H
	je	SHORT $LN16@SetWindowL
$LN26@SetWindowL:

; 1849 :           game_window.border_style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+128, ecx
$LN16@SetWindowL:

; 1850 :             game_window.game.style_ex;
; 1851 :         }
; 1852 : 
; 1853 :         SK_SetWindowStyleEx ( static_cast      <DWORD_PTR>            (game_window.actual.style_ex),

	push	edx
	push	eax
	call	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyleEx

; 1883 : 
; 1884 :   return SetWindowLong_Marshall (

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+120

; 1853 :         SK_SetWindowStyleEx ( static_cast      <DWORD_PTR>            (game_window.actual.style_ex),

	add	esp, 8
	pop	esi

; 1885 :     SetWindowLongA_Original,
; 1886 :       hWnd,
; 1887 :         nIndex,
; 1888 :           dwNewLong
; 1889 :   );
; 1890 : }

	pop	ebp
	ret	12					; 0000000cH
$LN18@SetWindowL:
	pop	esi

; 1870 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	mov	DWORD PTR _nIndex$[ebp], eax
	mov	DWORD PTR _hWnd$[ebp], ecx

; 1885 :     SetWindowLongA_Original,
; 1886 :       hWnd,
; 1887 :         nIndex,
; 1888 :           dwNewLong
; 1889 :   );
; 1890 : }

	pop	ebp

; 1870 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	jmp	edx
?SetWindowLongA_Detour@@YGJPAUHWND__@@HJ@Z ENDP		; SetWindowLongA_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?SetWindowLong_Marshall@@YGJP6GJPAUHWND__@@HJ@Z0HJ@Z
_TEXT	SEGMENT
_pOrigFunc$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_nIndex$ = 16						; size = 4
_dwNewLong$ = 20					; size = 4
?SetWindowLong_Marshall@@YGJP6GJPAUHWND__@@HJ@Z0HJ@Z PROC ; SetWindowLong_Marshall, COMDAT

; 1789 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1790 :   // Override window styles
; 1791 :   if (hWnd == game_window.hWnd)

	mov	ecx, DWORD PTR _hWnd$[ebp]
	mov	eax, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN14@SetWindowL

; 1792 :   {
; 1793 :     switch (nIndex)

	cmp	eax, -20				; ffffffecH
	je	SHORT $LN9@SetWindowL
	cmp	eax, -16				; fffffff0H
	jne	$LN14@SetWindowL

; 1794 :     {
; 1795 :       case GWL_STYLE:
; 1796 :       {
; 1797 :         game_window.game.style =

	mov	eax, DWORD PTR _dwNewLong$[ebp]

; 1798 :           static_cast <LONG_PTR> (dwNewLong);
; 1799 : 
; 1800 :         if (config.window.borderless)

	mov	edx, -1878392832			; 900a0000H
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	ecx, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, eax
	cmovne	ecx, edx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, ecx

; 204  :     return (  ( style == 0x0            ) ||

	test	eax, eax
	je	SHORT $LN18@SetWindowL
	test	eax, 12845056				; 00c40000H
	je	SHORT $LN8@SetWindowL
$LN18@SetWindowL:

; 1801 :         {
; 1802 :           game_window.actual.style =
; 1803 :             SK_BORDERLESS;
; 1804 :         }
; 1805 : 
; 1806 :         else
; 1807 :         {
; 1808 :           game_window.actual.style =
; 1809 :             game_window.game.style;
; 1810 :         }
; 1811 : 
; 1812 :         if ( SK_WindowManager::StyleHasBorder (
; 1813 :                game_window.game.style
; 1814 :              )
; 1815 :            )
; 1816 :         {
; 1817 :           game_window.border_style =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+124, eax
$LN8@SetWindowL:

; 1818 :             game_window.game.style;
; 1819 :         }
; 1820 : 
; 1821 :         SK_SetWindowStyle ( static_cast      <DWORD_PTR>            (game_window.actual.style),

	push	DWORD PTR _pOrigFunc$[ebp]
	push	ecx
	call	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyle

; 1822 :                             reinterpret_cast <SetWindowLongPtr_pfn> (pOrigFunc) );
; 1823 : 
; 1824 :         return static_cast <LONG> (game_window.actual.style);

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+116
	add	esp, 8

; 1871 : }

	pop	ebp
	ret	16					; 00000010H
$LN9@SetWindowL:

; 1830 :           static_cast <LONG_PTR> (dwNewLong);
; 1831 : 
; 1832 :         if (config.window.borderless)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	mov	edx, 262144				; 00040000H
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+68
	mov	ecx, DWORD PTR _dwNewLong$[ebp]
	cmovne	eax, edx

; 204  :     return (  ( style == 0x0            ) ||

	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 1825 :       }
; 1826 : 
; 1827 :       case GWL_EXSTYLE:
; 1828 :       {
; 1829 :         game_window.game.style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+72, ecx

; 1830 :           static_cast <LONG_PTR> (dwNewLong);
; 1831 : 
; 1832 :         if (config.window.borderless)

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 204  :     return (  ( style == 0x0            ) ||

	test	edx, edx
	je	SHORT $LN22@SetWindowL
	test	edx, 12845056				; 00c40000H
	je	SHORT $LN12@SetWindowL
$LN22@SetWindowL:

; 1833 :         {
; 1834 :           game_window.actual.style_ex =
; 1835 :             SK_BORDERLESS_EX;
; 1836 :         }
; 1837 : 
; 1838 :         else
; 1839 :         {
; 1840 :           game_window.actual.style_ex =
; 1841 :             game_window.game.style;
; 1842 :         }
; 1843 : 
; 1844 :         if ( SK_WindowManager::StyleHasBorder (
; 1845 :                game_window.actual.style
; 1846 :              )
; 1847 :            )
; 1848 :         {
; 1849 :           game_window.border_style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+128, ecx
$LN12@SetWindowL:

; 1850 :             game_window.game.style_ex;
; 1851 :         }
; 1852 : 
; 1853 :         SK_SetWindowStyleEx ( static_cast      <DWORD_PTR>            (game_window.actual.style_ex),

	push	DWORD PTR _pOrigFunc$[ebp]
	push	eax
	call	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyleEx

; 1854 :                               reinterpret_cast <SetWindowLongPtr_pfn> (pOrigFunc) );
; 1855 : 
; 1856 :         return static_cast <LONG> (game_window.actual.style_ex);

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+120
	add	esp, 8

; 1871 : }

	pop	ebp
	ret	16					; 00000010H
$LN14@SetWindowL:

; 1857 :       }
; 1858 : 
; 1859 :       case GWLP_WNDPROC:
; 1860 :       {
; 1861 :         if (game_window.hooked)
; 1862 :         {
; 1863 :           //game_window.WndProc_Original = reinterpret_cast <WNDPROC> (dwNewLong);
; 1864 :           //return dwNewLong;
; 1865 :         }
; 1866 :       } break;
; 1867 :     }
; 1868 :   }
; 1869 : 
; 1870 :   return pOrigFunc (hWnd, nIndex, dwNewLong);

	push	DWORD PTR _dwNewLong$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR _pOrigFunc$[ebp]

; 1871 : }

	pop	ebp
	ret	16					; 00000010H
?SetWindowLong_Marshall@@YGJP6GJPAUHWND__@@HJ@Z0HJ@Z ENDP ; SetWindowLong_Marshall
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_mi$1 = -64						; size = 40
$T2 = -24						; size = 24
__$ReturnAddr$ = 4					; size = 4
_lpRect$ = 8						; size = 4
_dwStyle$ = 12						; size = 4
_bMenu$ = 16						; size = 4
_dwExStyle$ = 20					; size = 4
?AdjustWindowRectEx_Detour@@YGHPAUtagRECT@@KHK@Z PROC	; AdjustWindowRectEx_Detour

; 1742 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H

; 1743 :   SK_LOG1 ( ( L"AdjustWindowRectEx ( "

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 1
	push	esi
	mov	esi, DWORD PTR _lpRect$[ebp]
	push	edi
	mov	edi, DWORD PTR _bMenu$[ebp]
	jl	SHORT $LN30@AdjustWind
	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?SK_SummarizeCaller@@YG?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAX@Z ; SK_SummarizeCaller
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN20@AdjustWind
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN20@AdjustWind:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1743 :   SK_LOG1 ( ( L"AdjustWindowRectEx ( "

	push	eax
	push	DWORD PTR _dwExStyle$[ebp]
	push	edi
	push	DWORD PTR _dwStyle$[ebp]
	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	push	OFFSET $SG212004
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1743 :   SK_LOG1 ( ( L"AdjustWindowRectEx ( "

	add	esp, 40					; 00000028H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN30@AdjustWind
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN30@AdjustWind:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1752 :   if (SK_GetCurrentGameID () == SK_GAME_ID::ZeroEscape)

	call	?SK_GetCurrentGameID@@YG?AW4SK_GAME_ID@@XZ ; SK_GetCurrentGameID
	cmp	eax, 32					; 00000020H
	je	SHORT $LN56@AdjustWind

; 1753 :     return TRUE;
; 1754 : 
; 1755 :   // Override if forcing Fullscreen Borderless
; 1756 :   //
; 1757 :   if (config.window.fullscreen && config.window.borderless && (! bMenu))

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN4@AdjustWind
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	SHORT $LN4@AdjustWind
	test	edi, edi
	jne	SHORT $LN4@AdjustWind

; 1758 :   {
; 1759 :     HMONITOR hMonitor =
; 1760 :       MonitorFromWindow ( game_window.hWnd,

	push	2
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__MonitorFromWindow@8
	xorps	xmm0, xmm0

; 1761 :                             MONITOR_DEFAULTTONEAREST );
; 1762 : 
; 1763 :     MONITORINFO mi   = {         };
; 1764 :     mi.cbSize        = sizeof (mi);
; 1765 :     GetMonitorInfo (hMonitor, &mi);

	lea	ecx, DWORD PTR _mi$1[ebp]
	push	ecx
	movups	XMMWORD PTR _mi$1[ebp], xmm0
	push	eax
	movups	XMMWORD PTR _mi$1[ebp+16], xmm0
	mov	DWORD PTR _mi$1[ebp], 40		; 00000028H
	movq	QWORD PTR _mi$1[ebp+32], xmm0
	call	DWORD PTR __imp__GetMonitorInfoW@8

; 1766 : 
; 1767 :     lpRect->left  = mi.rcMonitor.left;

	mov	eax, DWORD PTR _mi$1[ebp+4]
	mov	DWORD PTR [esi], eax

; 1768 :     lpRect->right = mi.rcMonitor.right;

	mov	eax, DWORD PTR _mi$1[ebp+12]
	mov	DWORD PTR [esi+8], eax

; 1769 : 
; 1770 :     lpRect->top    = mi.rcMonitor.top;

	mov	eax, DWORD PTR _mi$1[ebp+8]
	mov	DWORD PTR [esi+4], eax

; 1771 :     lpRect->bottom = mi.rcMonitor.bottom;

	mov	eax, DWORD PTR _mi$1[ebp+16]
	mov	DWORD PTR [esi+12], eax
$LN56@AdjustWind:

; 1772 : 
; 1773 :     return TRUE;

	pop	edi
	mov	eax, 1
	pop	esi

; 1777 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN4@AdjustWind:

; 1774 :   }
; 1775 : 
; 1776 :   return AdjustWindowRectEx_Original (lpRect, dwStyle, bMenu, dwExStyle);

	push	DWORD PTR _dwExStyle$[ebp]
	push	edi
	push	DWORD PTR _dwStyle$[ebp]
	push	esi
	call	DWORD PTR ?AdjustWindowRectEx_Original@@3P6GHPAUtagRECT@@KHK@ZA ; AdjustWindowRectEx_Original
	pop	edi
	pop	esi

; 1777 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AdjustWindowRectEx_Detour@@YGHPAUtagRECT@@KHK@Z ENDP	; AdjustWindowRectEx_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_dwStyleEx_ptr$ = 8					; size = 4
_pDispatchFunc$ = 12					; size = 4
?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z PROC	; SK_SetWindowStyleEx

; 2266 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _dwStyleEx_ptr$[ebp]

; 2267 :   // Clear the high-bits
; 2268 :   DWORD dwStyleEx = (dwStyleEx_ptr & 0xFFFFFFFF);
; 2269 : 
; 2270 :   // Minimal sane set of extended window styles for sane rendering
; 2271 :   dwStyleEx |=   WS_EX_APPWINDOW;
; 2272 :   dwStyleEx &= ~(WS_EX_NOACTIVATE | WS_EX_TRANSPARENT | WS_EX_LAYOUTRTL |
; 2273 :                  WS_EX_RIGHT      | WS_EX_RTLREADING);
; 2274 : 
; 2275 :   game_window.actual.style_ex = dwStyleEx;
; 2276 : 
; 2277 :   if (pDispatchFunc == nullptr)

	mov	eax, DWORD PTR _pDispatchFunc$[ebp]
	and	ecx, -138424353				; f7bfcfdfH
	or	ecx, 262144				; 00040000H
	test	eax, eax

; 2278 :     pDispatchFunc = game_window.SetWindowLongPtr;
; 2279 : 
; 2280 : 
; 2281 :   pDispatchFunc ( game_window.hWnd,

	push	ecx
	cmove	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+196
	push	-20					; ffffffecH
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, ecx
	call	eax

; 2282 :                     GWL_EXSTYLE,
; 2283 :                       game_window.actual.style_ex );
; 2284 : }

	pop	ebp
	ret	0
?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ENDP	; SK_SetWindowStyleEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_dwStyle_ptr$ = 8					; size = 4
_pDispatchFunc$ = 12					; size = 4
?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z PROC	; SK_SetWindowStyle

; 2237 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2238 :   // Ensure that the border style is sane
; 2239 :   if (dwStyle_ptr == game_window.border_style)

	mov	ecx, DWORD PTR _dwStyle_ptr$[ebp]
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+124
	cmp	ecx, eax
	jne	SHORT $LN2@SK_SetWind

; 2240 :   {
; 2241 :     game_window.border_style |= WS_CAPTION     | WS_SYSMENU | WS_POPUP |

	or	eax, -1865809920			; 90ca0000H
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+124, eax

; 2242 :                                 WS_MINIMIZEBOX | WS_VISIBLE;
; 2243 :     dwStyle_ptr               = game_window.border_style;

	mov	ecx, eax
$LN2@SK_SetWind:

; 2244 :   }
; 2245 : 
; 2246 :   // Clear the high-bits
; 2247 :   DWORD dwStyle = (dwStyle_ptr & 0xFFFFFFFF);
; 2248 : 
; 2249 :   // Minimal sane set of extended window styles for sane rendering
; 2250 :   dwStyle |= (WS_VISIBLE | WS_SYSMENU) | WS_POPUP | WS_MINIMIZEBOX;
; 2251 :   dwStyle &= (~WS_DISABLED);
; 2252 : 
; 2253 :   game_window.actual.style = dwStyle;
; 2254 : 
; 2255 :   if (pDispatchFunc == nullptr)

	mov	eax, DWORD PTR _pDispatchFunc$[ebp]
	and	ecx, -134217729				; f7ffffffH
	or	ecx, -1878392832			; 900a0000H
	test	eax, eax

; 2256 :     pDispatchFunc = game_window.SetWindowLongPtr;
; 2257 : 
; 2258 : 
; 2259 :   pDispatchFunc ( game_window.hWnd,

	push	ecx
	cmove	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+196
	push	-16					; fffffff0H
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, ecx
	call	eax

; 2260 :                     GWL_STYLE,
; 2261 :                       game_window.actual.style );
; 2262 : }

	pop	ebp
	ret	0
?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ENDP	; SK_SetWindowStyle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_mi$1 = -64						; size = 40
$T2 = -24						; size = 24
__$ReturnAddr$ = 4					; size = 4
_lpRect$ = 8						; size = 4
_dwStyle$ = 12						; size = 4
_bMenu$ = 16						; size = 4
?AdjustWindowRect_Detour@@YGHPAUtagRECT@@KH@Z PROC	; AdjustWindowRect_Detour

; 1696 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H

; 1697 :   SK_LOG1 ( ( L"AdjustWindowRect ( "

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 1
	push	esi
	mov	esi, DWORD PTR _lpRect$[ebp]
	push	edi
	mov	edi, DWORD PTR _bMenu$[ebp]
	jl	SHORT $LN30@AdjustWind
	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?SK_SummarizeCaller@@YG?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAX@Z ; SK_SummarizeCaller
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN20@AdjustWind
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN20@AdjustWind:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1697 :   SK_LOG1 ( ( L"AdjustWindowRect ( "

	push	eax
	push	edi
	push	DWORD PTR _dwStyle$[ebp]
	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+8]
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	push	OFFSET $SG211985
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1697 :   SK_LOG1 ( ( L"AdjustWindowRect ( "

	add	esp, 36					; 00000024H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN30@AdjustWind
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN30@AdjustWind:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1705 :   if (SK_GetCurrentGameID () == SK_GAME_ID::ZeroEscape)

	call	?SK_GetCurrentGameID@@YG?AW4SK_GAME_ID@@XZ ; SK_GetCurrentGameID
	cmp	eax, 32					; 00000020H
	je	SHORT $LN56@AdjustWind

; 1706 :     return TRUE;
; 1707 : 
; 1708 :   // Override if forcing Fullscreen Borderless
; 1709 :   //
; 1710 :   if (config.window.fullscreen && config.window.borderless && (! bMenu))

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN4@AdjustWind
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	SHORT $LN4@AdjustWind
	test	edi, edi
	jne	SHORT $LN4@AdjustWind

; 1711 :   {
; 1712 :     HMONITOR hMonitor =
; 1713 :       MonitorFromWindow ( game_window.hWnd,

	push	2
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__MonitorFromWindow@8
	xorps	xmm0, xmm0

; 1714 :                             MONITOR_DEFAULTTONEAREST );
; 1715 : 
; 1716 :     MONITORINFO mi   = {         };
; 1717 :     mi.cbSize        = sizeof (mi);
; 1718 :     GetMonitorInfo (hMonitor, &mi);

	lea	ecx, DWORD PTR _mi$1[ebp]
	push	ecx
	movups	XMMWORD PTR _mi$1[ebp], xmm0
	push	eax
	movups	XMMWORD PTR _mi$1[ebp+16], xmm0
	mov	DWORD PTR _mi$1[ebp], 40		; 00000028H
	movq	QWORD PTR _mi$1[ebp+32], xmm0
	call	DWORD PTR __imp__GetMonitorInfoW@8

; 1719 : 
; 1720 :     lpRect->left  = mi.rcMonitor.left;

	mov	eax, DWORD PTR _mi$1[ebp+4]
	mov	DWORD PTR [esi], eax

; 1721 :     lpRect->right = mi.rcMonitor.right;

	mov	eax, DWORD PTR _mi$1[ebp+12]
	mov	DWORD PTR [esi+8], eax

; 1722 : 
; 1723 :     lpRect->top    = mi.rcMonitor.top;

	mov	eax, DWORD PTR _mi$1[ebp+8]
	mov	DWORD PTR [esi+4], eax

; 1724 :     lpRect->bottom = mi.rcMonitor.bottom;

	mov	eax, DWORD PTR _mi$1[ebp+16]
	mov	DWORD PTR [esi+12], eax
$LN56@AdjustWind:

; 1725 : 
; 1726 :     return TRUE;

	pop	edi
	mov	eax, 1
	pop	esi

; 1730 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN4@AdjustWind:

; 1727 :   }
; 1728 : 
; 1729 :   return AdjustWindowRect_Original (lpRect, dwStyle, bMenu);

	push	edi
	push	DWORD PTR _dwStyle$[ebp]
	push	esi
	call	DWORD PTR ?AdjustWindowRect_Original@@3P6GHPAUtagRECT@@KH@ZA ; AdjustWindowRect_Original
	pop	edi
	pop	esi

; 1730 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AdjustWindowRect_Detour@@YGHPAUtagRECT@@KH@Z ENDP	; AdjustWindowRect_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_lpRect$ = 8						; size = 4
?SK_IsClipRectFinite@@YGHPAUtagRECT@@@Z PROC		; SK_IsClipRectFinite

; 1684 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 1685 :   return (! ( SK_IsRectZero       (lpRect) ||

	mov	esi, DWORD PTR _lpRect$[ebp]
	push	esi
	call	?SK_IsRectZero@@YGHPAUtagRECT@@@Z	; SK_IsRectZero
	test	eax, eax
	jne	SHORT $LN3@SK_IsClipR
	push	esi
	call	?SK_IsRectInfinite@@YGHPAUtagRECT@@@Z	; SK_IsRectInfinite
	test	eax, eax
	jne	SHORT $LN3@SK_IsClipR
	push	esi
	call	?SK_IsRectFullscreen@@YGHPAUtagRECT@@@Z	; SK_IsRectFullscreen
	test	eax, eax
	jne	SHORT $LN3@SK_IsClipR
	mov	eax, 1
	pop	esi

; 1686 :               SK_IsRectInfinite   (lpRect) ||
; 1687 :               SK_IsRectFullscreen (lpRect) ) );
; 1688 : }

	pop	ebp
	ret	4
$LN3@SK_IsClipR:

; 1685 :   return (! ( SK_IsRectZero       (lpRect) ||

	xor	eax, eax
	pop	esi

; 1686 :               SK_IsRectInfinite   (lpRect) ||
; 1687 :               SK_IsRectFullscreen (lpRect) ) );
; 1688 : }

	pop	ebp
	ret	4
?SK_IsClipRectFinite@@YGHPAUtagRECT@@@Z ENDP		; SK_IsClipRectFinite
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_lpRect$ = 8						; size = 4
?SK_IsRectFullscreen@@YGHPAUtagRECT@@@Z PROC		; SK_IsRectFullscreen

; 1673 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 1674 :   int virtual_x = GetSystemMetrics_Original (SM_CXVIRTUALSCREEN);

	push	78					; 0000004eH
	call	DWORD PTR ?GetSystemMetrics_Original@@3P6GHH@ZA ; GetSystemMetrics_Original

; 1675 :   int virtual_y = GetSystemMetrics_Original (SM_CYVIRTUALSCREEN);

	push	79					; 0000004fH
	mov	esi, eax
	call	DWORD PTR ?GetSystemMetrics_Original@@3P6GHH@ZA ; GetSystemMetrics_Original

; 1676 : 
; 1677 :   return ( lpRect->left  == 0         && lpRect->top    == 0 &&

	mov	ecx, DWORD PTR _lpRect$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN3@SK_IsRectF
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN3@SK_IsRectF
	cmp	DWORD PTR [ecx+8], esi
	jne	SHORT $LN3@SK_IsRectF
	cmp	DWORD PTR [ecx+12], eax
	jne	SHORT $LN3@SK_IsRectF
	mov	eax, 1
	pop	esi

; 1678 :            lpRect->right == virtual_x && lpRect->bottom == virtual_y );
; 1679 : }

	pop	ebp
	ret	4
$LN3@SK_IsRectF:

; 1676 : 
; 1677 :   return ( lpRect->left  == 0         && lpRect->top    == 0 &&

	xor	eax, eax
	pop	esi

; 1678 :            lpRect->right == virtual_x && lpRect->bottom == virtual_y );
; 1679 : }

	pop	ebp
	ret	4
?SK_IsRectFullscreen@@YGHPAUtagRECT@@@Z ENDP		; SK_IsRectFullscreen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_lpRect$ = 8						; size = 4
?SK_IsRectInfinite@@YGHPAUtagRECT@@@Z PROC		; SK_IsRectInfinite

; 1665 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1666 :   return ( lpRect->left   == LONG_MIN && lpRect->top   == LONG_MIN &&

	mov	eax, DWORD PTR _lpRect$[ebp]
	cmp	DWORD PTR [eax], -2147483648		; 80000000H
	jne	SHORT $LN3@SK_IsRectI
	cmp	DWORD PTR [eax+4], -2147483648		; 80000000H
	jne	SHORT $LN3@SK_IsRectI
	cmp	DWORD PTR [eax+12], 2147483647		; 7fffffffH
	jne	SHORT $LN3@SK_IsRectI
	cmp	DWORD PTR [eax+8], 2147483647		; 7fffffffH
	jne	SHORT $LN3@SK_IsRectI
	mov	eax, 1

; 1667 :            lpRect->bottom == LONG_MAX && lpRect->right == LONG_MAX );
; 1668 : }

	pop	ebp
	ret	4
$LN3@SK_IsRectI:

; 1666 :   return ( lpRect->left   == LONG_MIN && lpRect->top   == LONG_MIN &&

	xor	eax, eax

; 1667 :            lpRect->bottom == LONG_MAX && lpRect->right == LONG_MAX );
; 1668 : }

	pop	ebp
	ret	4
?SK_IsRectInfinite@@YGHPAUtagRECT@@@Z ENDP		; SK_IsRectInfinite
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_lpRect$ = 8						; size = 4
?SK_IsRectZero@@YGHPAUtagRECT@@@Z PROC			; SK_IsRectZero

; 1657 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1658 :   return ( lpRect->left   == lpRect->right &&

	mov	ecx, DWORD PTR _lpRect$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ecx+8]
	jne	SHORT $LN3@SK_IsRectZ
	mov	eax, DWORD PTR [ecx+12]
	cmp	eax, DWORD PTR [ecx+4]
	jne	SHORT $LN3@SK_IsRectZ
	mov	eax, 1

; 1659 :            lpRect->bottom == lpRect->top );
; 1660 : }

	pop	ebp
	ret	4
$LN3@SK_IsRectZ:

; 1658 :   return ( lpRect->left   == lpRect->right &&

	xor	eax, eax

; 1659 :            lpRect->bottom == lpRect->top );
; 1660 : }

	pop	ebp
	ret	4
?SK_IsRectZero@@YGHPAUtagRECT@@@Z ENDP			; SK_IsRectZero
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_rect$ = 12						; size = 4
?SK_GetWindowRect@@YGHPAUHWND__@@PAUtagRECT@@@Z PROC	; SK_GetWindowRect

; 1647 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1648 :   if (GetWindowRect_Original != nullptr)

	mov	eax, DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original
	test	eax, eax
	je	SHORT $LN2@SK_GetWind

; 1652 : }

	pop	ebp

; 1649 :     return GetWindowRect_Original (hWnd, rect);

	jmp	eax
$LN2@SK_GetWind:

; 1652 : }

	pop	ebp

; 1650 : 
; 1651 :   return GetWindowRect (hWnd, rect);

	jmp	DWORD PTR __imp__GetWindowRect@8
?SK_GetWindowRect@@YGHPAUHWND__@@PAUtagRECT@@@Z ENDP	; SK_GetWindowRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_X$ = 12						; size = 4
_Y$ = 16						; size = 4
_nWidth$ = 20						; size = 4
_nHeight$ = 24						; size = 4
_bRedraw$ = 28						; size = 4
?MoveWindow_Detour@@YGHPAUHWND__@@HHHHH@Z PROC		; MoveWindow_Detour

; 1510 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1511 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??MoveWindow_Detour@@YGHPAUHWND__@@HHHHH@Z@4_NA, 0
	jne	SHORT $LN2@MoveWindow
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@MoveWindow
	push	OFFSET $SG211886
	push	OFFSET $SG211887
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@MoveWindow:
	mov	BYTE PTR ?called@?2??MoveWindow_Detour@@YGHPAUHWND__@@HHHHH@Z@4_NA, 1
$LN2@MoveWindow:

; 1514 :                                  X, Y,
; 1515 :                                    nWidth, nHeight,
; 1516 :                                      bRedraw );
; 1517 : }

	pop	ebp

; 1512 : 
; 1513 :   return MoveWindow_Original ( hWnd,

	jmp	DWORD PTR ?MoveWindow_Original@@3P6GHPAUHWND__@@HHHHH@ZA ; MoveWindow_Original
?MoveWindow_Detour@@YGHPAUHWND__@@HHHHH@Z ENDP		; MoveWindow_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-offsets>@?1???R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-offsets>@?1???R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z@QAE@XZ PROC ; `<lambda_6ddf3f278265021f7f193928a74e47d8>::operator()'::`2'::<unnamed-type-offsets>::<unnamed-type-offsets>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
	ret	0
??0<unnamed-type-offsets>@?1???R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z@QAE@XZ ENDP ; `<lambda_6ddf3f278265021f7f193928a74e47d8>::operator()'::`2'::<unnamed-type-offsets>::<unnamed-type-offsets>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-x>@<unnamed-type-offsets>@?1???R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-x>@<unnamed-type-offsets>@?1???R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z@QAE@XZ PROC ; `<lambda_6ddf3f278265021f7f193928a74e47d8>::operator()'::`2'::<unnamed-type-offsets>::<unnamed-type-x>::<unnamed-type-x>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0<unnamed-type-x>@<unnamed-type-offsets>@?1???R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z@QAE@XZ ENDP ; `<lambda_6ddf3f278265021f7f193928a74e47d8>::operator()'::`2'::<unnamed-type-offsets>::<unnamed-type-x>::<unnamed-type-x>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??B<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEP6GKPAX@ZXZ
_TEXT	SEGMENT
??B<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEP6GKPAX@ZXZ PROC ; <lambda_6ddf3f278265021f7f193928a74e47d8>::operator unsigned long (__stdcall*)(void *), COMDAT
; _this$ = ecx

; 1498 :     }, reinterpret_cast <LPVOID> (static_cast <uintptr_t> (remember_pos)), 0x0, nullptr );

	mov	eax, OFFSET ?<lambda_invoker_stdcall>@<lambda_6ddf3f278265021f7f193928a74e47d8>@@CGKPAX@Z ; <lambda_6ddf3f278265021f7f193928a74e47d8>::<lambda_invoker_stdcall>
	ret	0
??B<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEP6GKPAX@ZXZ ENDP ; <lambda_6ddf3f278265021f7f193928a74e47d8>::operator unsigned long (__stdcall*)(void *)
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?<lambda_invoker_stdcall>@<lambda_6ddf3f278265021f7f193928a74e47d8>@@CGKPAX@Z
_TEXT	SEGMENT
_user$ = 8						; size = 4
?<lambda_invoker_stdcall>@<lambda_6ddf3f278265021f7f193928a74e47d8>@@CGKPAX@Z PROC ; <lambda_6ddf3f278265021f7f193928a74e47d8>::<lambda_invoker_stdcall>, COMDAT

; 1498 :     }, reinterpret_cast <LPVOID> (static_cast <uintptr_t> (remember_pos)), 0x0, nullptr );

	npad	2
	push	ebp
	mov	ebp, esp
	xor	ecx, ecx
	pop	ebp
	jmp	??R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z ; <lambda_6ddf3f278265021f7f193928a74e47d8>::operator()
?<lambda_invoker_stdcall>@<lambda_6ddf3f278265021f7f193928a74e47d8>@@CGKPAX@Z ENDP ; <lambda_6ddf3f278265021f7f193928a74e47d8>::<lambda_invoker_stdcall>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z
_TEXT	SEGMENT
_mouse$ = -16						; size = 8
_offsets$$sroa$72$1$ = -8				; size = 4
_offsets$$sroa$74$1$ = -4				; size = 4
_user$ = 8						; size = 4
??R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z PROC ; <lambda_6ddf3f278265021f7f193928a74e47d8>::operator(), COMDAT
; _this$ = ecx

; 1441 :       DWORD {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi

; 1442 :   EnterCriticalSection (&cs_center);

	push	OFFSET ?cs_center@?1??SK_CenterWindowAtMouse@@YAXH@Z@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__EnterCriticalSection@4

; 1443 : 
; 1444 :   BOOL  remember_pos = (user != nullptr);
; 1445 :   POINT mouse        = { 0, 0 };
; 1446 : 
; 1447 :   if (GetCursorPos_Original != nullptr)

	mov	eax, DWORD PTR ?GetCursorPos_Original@@3P6GHPAUtagPOINT@@@ZA ; GetCursorPos_Original
	xor	ecx, ecx
	xor	esi, esi
	mov	DWORD PTR _mouse$[ebp], ecx
	mov	DWORD PTR _mouse$[ebp+4], esi
	test	eax, eax
	je	SHORT $LN2@operator

; 1448 :     GetCursorPos_Original (&mouse);

	lea	ecx, DWORD PTR _mouse$[ebp]
	push	ecx
	call	eax
	mov	esi, DWORD PTR _mouse$[ebp+4]
	mov	ecx, DWORD PTR _mouse$[ebp]
$LN2@operator:

; 1449 : 
; 1450 :   struct {
; 1451 :     struct {
; 1452 :       float percent  = 0.0f;
; 1453 :       int   absolute =   0L;
; 1454 :     } x,y;
; 1455 :   } offsets;
; 1456 : 
; 1457 :   if (! remember_pos)

	xorps	xmm0, xmm0
	xor	ebx, ebx
	xor	edi, edi
	movss	DWORD PTR _offsets$$sroa$74$1$[ebp], xmm0
	movss	DWORD PTR _offsets$$sroa$72$1$[ebp], xmm0
	cmp	DWORD PTR _user$[ebp], ebx
	jne	SHORT $LN3@operator

; 1458 :   {
; 1459 :     offsets.x.absolute = config.window.offset.x.absolute;
; 1460 :     offsets.y.absolute = config.window.offset.y.absolute;
; 1461 : 
; 1462 :     offsets.x.percent = config.window.offset.x.percent;

	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+752
	mov	edi, DWORD PTR ?config@@3Usk_config_t@@A+748
	mov	ebx, DWORD PTR ?config@@3Usk_config_t@@A+756
	movss	DWORD PTR _offsets$$sroa$74$1$[ebp], xmm0

; 1463 :     offsets.y.percent = config.window.offset.y.percent;

	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+760
	movss	DWORD PTR _offsets$$sroa$72$1$[ebp], xmm0
$LN3@operator:

; 1464 :   }
; 1465 : 
; 1466 :   config.window.offset.x.absolute = mouse.x;
; 1467 :   config.window.offset.y.absolute = mouse.y;
; 1468 : 
; 1469 :   config.window.offset.x.absolute -= (game_window.actual.window.right  - game_window.actual.window.left) / 2;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+108
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	cdq
	sub	eax, edx

; 1470 :   config.window.offset.y.absolute -= (game_window.actual.window.bottom - game_window.actual.window.top)  / 2;
; 1471 : 
; 1472 :   if (config.window.offset.x.absolute <= 0)
; 1473 :     config.window.offset.x.absolute = 1;  // 1 = Flush with Left
; 1474 : 
; 1475 :   if (config.window.offset.y.absolute <= 0)
; 1476 :     config.window.offset.y.absolute = 1;  // 1 = Flush with Top
; 1477 : 
; 1478 :   config.window.offset.x.percent = 0.0f;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+752, 0
	sar	eax, 1
	sub	ecx, eax

; 1479 :   config.window.offset.y.percent = 0.0f;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+760, 0
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	esi, eax
	test	ecx, ecx
	mov	eax, 1
	cmovle	ecx, eax
	test	esi, esi
	mov	DWORD PTR ?config@@3Usk_config_t@@A+748, ecx
	cmovle	esi, eax
	mov	DWORD PTR ?config@@3Usk_config_t@@A+756, esi

; 1480 : 
; 1481 :   SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow
	cmp	DWORD PTR _user$[ebp], 0

; 1482 : 
; 1483 :   if (! remember_pos)

	jne	SHORT $LN6@operator

; 1484 :   {
; 1485 :     config.window.offset.x.absolute = offsets.x.absolute;
; 1486 :     config.window.offset.y.absolute = offsets.y.absolute;
; 1487 : 
; 1488 :     config.window.offset.x.percent  = offsets.x.percent;

	movss	xmm0, DWORD PTR _offsets$$sroa$74$1$[ebp]
	movss	DWORD PTR ?config@@3Usk_config_t@@A+752, xmm0

; 1489 :     config.window.offset.y.percent  = offsets.y.percent;

	movss	xmm0, DWORD PTR _offsets$$sroa$72$1$[ebp]
	mov	DWORD PTR ?config@@3Usk_config_t@@A+748, edi
	mov	DWORD PTR ?config@@3Usk_config_t@@A+756, ebx
	movss	DWORD PTR ?config@@3Usk_config_t@@A+760, xmm0
$LN6@operator:

; 1490 :   }
; 1491 : 
; 1492 :   LeaveCriticalSection (&cs_center);

	push	OFFSET ?cs_center@?1??SK_CenterWindowAtMouse@@YAXH@Z@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 1493 : 
; 1494 :   CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	pop	edi
	pop	esi

; 1495 : 
; 1496 :   return 0;

	xor	eax, eax
	pop	ebx

; 1497 :        // Don't dereference this, it's actually a boolean
; 1498 :     }, reinterpret_cast <LPVOID> (static_cast <uintptr_t> (remember_pos)), 0x0, nullptr );

	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_6ddf3f278265021f7f193928a74e47d8>@@QBEKPAX@Z ENDP ; <lambda_6ddf3f278265021f7f193928a74e47d8>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__Ans$1 = -16						; size = 8
_bottom_right$2 = -16					; size = 8
_top_left$3 = -8					; size = 8
_lpRect$ = 8						; size = 4
?ClipCursor_Detour@@YGHPBUtagRECT@@@Z PROC		; ClipCursor_Detour

; 1367 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1368 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??ClipCursor_Detour@@YGHPBUtagRECT@@@Z@4_NA, 0
	jne	SHORT $LN2@ClipCursor
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@ClipCursor
	push	OFFSET $SG211730
	push	OFFSET $SG211731
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@ClipCursor:
	mov	BYTE PTR ?called@?2??ClipCursor_Detour@@YGHPBUtagRECT@@@Z@4_NA, 1
$LN2@ClipCursor:

; 1369 : 
; 1370 :   if (lpRect != nullptr)

	mov	eax, DWORD PTR _lpRect$[ebp]
	test	eax, eax
	je	$LN4@ClipCursor

; 1374 : 
; 1375 :   // Don't let the game unclip the cursor, but DO remember the
; 1376 :   //   coordinates that it wants.
; 1377 :   if (config.window.confine_cursor && lpRect != &game_window.cursor_clip)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+766, 0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+168, xmm0
	je	SHORT $LN6@ClipCursor
	cmp	eax, OFFSET ?game_window@@3Usk_window_s@@A+168
	je	SHORT $LN6@ClipCursor

; 1378 :     return TRUE;

	mov	eax, 1

; 1415 :   }
; 1416 : 
; 1417 :   else
; 1418 :   {
; 1419 :     return ClipCursor_Original (nullptr);
; 1420 :   }
; 1421 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@ClipCursor:

; 1379 : 
; 1380 :   //
; 1381 :   // If the game uses mouse clipping and we are running in borderless,
; 1382 :   //   we need to re-adjust the window coordinates.
; 1383 :   //
; 1384 :   if ( lpRect != nullptr &&

	mov	ecx, OFFSET ?game_window@@3Usk_window_s@@A ; game_window
	call	?needsCoordTransform@sk_window_s@@QAE_NXZ ; sk_window_s::needsCoordTransform
	test	al, al
	je	SHORT $LN7@ClipCursor

; 1385 :        game_window.needsCoordTransform () )
; 1386 :   {
; 1387 :     POINT top_left     = { std::numeric_limits <LONG>::max (), std::numeric_limits <LONG>::max () };
; 1388 :     POINT bottom_right = { std::numeric_limits <LONG>::min (), std::numeric_limits <LONG>::min () };
; 1389 : 
; 1390 :     top_left.y = game_window.actual.window.top;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	mov	DWORD PTR _top_left$3[ebp+4], eax

; 1391 :     top_left.x = game_window.actual.window.left;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	mov	DWORD PTR _top_left$3[ebp], eax

; 1392 : 
; 1393 :     bottom_right.y = game_window.actual.window.bottom;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	mov	DWORD PTR _bottom_right$2[ebp+4], eax

; 1394 :     bottom_right.x = game_window.actual.window.right;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+108
	mov	DWORD PTR _bottom_right$2[ebp], eax

; 1395 : 
; 1396 :     SK_ReverseCursorPos (&top_left);

	lea	eax, DWORD PTR _top_left$3[ebp]
	push	eax
	call	?SK_ReverseCursorPos@@YAXPAUtagPOINT@@@Z ; SK_ReverseCursorPos

; 1397 :     SK_ReverseCursorPos (&bottom_right);

	lea	eax, DWORD PTR _bottom_right$2[ebp]
	push	eax
	call	?SK_ReverseCursorPos@@YAXPAUtagPOINT@@@Z ; SK_ReverseCursorPos

; 1398 : 
; 1399 :     game_window.cursor_clip.bottom = bottom_right.y;

	mov	eax, DWORD PTR _bottom_right$2[ebp+4]
	add	esp, 8
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+180, eax

; 1400 :     game_window.cursor_clip.top    = top_left.y;

	mov	eax, DWORD PTR _top_left$3[ebp+4]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+172, eax

; 1401 : 
; 1402 :     game_window.cursor_clip.left   = top_left.x;

	mov	eax, DWORD PTR _top_left$3[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+168, eax

; 1403 :     game_window.cursor_clip.right  = bottom_right.x;

	mov	eax, DWORD PTR _bottom_right$2[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+176, eax
$LN7@ClipCursor:

; 1404 :   }
; 1405 : 
; 1406 : 
; 1407 :   // Prevent the game from clipping the cursor
; 1408 :   if (config.window.unconfine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	jne	SHORT $LN4@ClipCursor

; 1412 :   if (game_window.active && (! wm_dispatch.moving_windows.count (game_window.hWnd)) && lpRect != nullptr)

	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, 0
	je	SHORT $LN4@ClipCursor
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	push	OFFSET ?game_window@@3Usk_window_s@@A+4
	lea	eax, DWORD PTR __Ans$1[ebp]
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A+32
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, DWORD PTR __Ans$1[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Ans$1[ebp+4]
	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN45@ClipCursor
	npad	4
$LL31@ClipCursor:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL31@ClipCursor
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1412 :   if (game_window.active && (! wm_dispatch.moving_windows.count (game_window.hWnd)) && lpRect != nullptr)

	test	edx, edx
	jne	SHORT $LN4@ClipCursor
$LN45@ClipCursor:

; 1413 :   {
; 1414 :     return ClipCursor_Original (&game_window.cursor_clip);

	push	OFFSET ?game_window@@3Usk_window_s@@A+168

; 1371 :     game_window.cursor_clip = *lpRect;
; 1372 :   else
; 1373 :     return ClipCursor_Original (nullptr);

	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original

; 1415 :   }
; 1416 : 
; 1417 :   else
; 1418 :   {
; 1419 :     return ClipCursor_Original (nullptr);
; 1420 :   }
; 1421 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN4@ClipCursor:

; 1371 :     game_window.cursor_clip = *lpRect;
; 1372 :   else
; 1373 :     return ClipCursor_Original (nullptr);

	push	0
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original

; 1415 :   }
; 1416 : 
; 1417 :   else
; 1418 :   {
; 1419 :     return ClipCursor_Original (nullptr);
; 1420 :   }
; 1421 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ClipCursor_Detour@@YGHPBUtagRECT@@@Z ENDP		; ClipCursor_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-in>@?1??SK_ReverseCursorPos@@YAXPAUtagPOINT@@@Z@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-in>@?1??SK_ReverseCursorPos@@YAXPAUtagPOINT@@@Z@QAE@XZ PROC ; `SK_ReverseCursorPos'::`2'::<unnamed-type-in>::<unnamed-type-in>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 1115684864		; 42800000H
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 1115684864		; 42800000H
	ret	0
??0<unnamed-type-in>@?1??SK_ReverseCursorPos@@YAXPAUtagPOINT@@@Z@QAE@XZ ENDP ; `SK_ReverseCursorPos'::`2'::<unnamed-type-in>::<unnamed-type-in>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_lpPoint$ = 8						; size = 4
?SK_ReverseCursorPos@@YAXPAUtagPOINT@@@Z PROC		; SK_ReverseCursorPos

; 1284 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1285 :   if (! game_window.needsCoordTransform ())

	mov	ecx, OFFSET ?game_window@@3Usk_window_s@@A ; game_window
	call	?needsCoordTransform@sk_window_s@@QAE_NXZ ; sk_window_s::needsCoordTransform
	test	al, al
	je	$LN1@SK_Reverse

; 1286 :     return;
; 1287 : 
; 1288 :   struct {
; 1289 :     float width  = 64.0f,
; 1290 :           height = 64.0f;
; 1291 :   } in, out;
; 1292 : 
; 1293 :   lpPoint->x -= ( static_cast <LONG> ( game_window.coord_remap.offset.x +

	movd	xmm1, DWORD PTR ?game_window@@3Usk_window_s@@A+52
	movd	xmm0, DWORD PTR ?game_window@@3Usk_window_s@@A+36
	cvtdq2ps xmm0, xmm0
	mov	ecx, DWORD PTR _lpPoint$[ebp]
	cvtdq2ps xmm1, xmm1
	addss	xmm1, DWORD PTR ?game_window@@3Usk_window_s@@A+144
	addss	xmm1, xmm0
	cvttss2si eax, xmm1
	sub	DWORD PTR [ecx], eax
	movd	xmm1, DWORD PTR ?game_window@@3Usk_window_s@@A+56
	movd	xmm0, DWORD PTR ?game_window@@3Usk_window_s@@A+40

; 1294 :                                        game_window.game.window.left     +
; 1295 :                                        game_window.game.client.left ) );
; 1296 :   lpPoint->y -= ( static_cast <LONG> ( game_window.coord_remap.offset.y +

	cvtdq2ps xmm0, xmm0
	cvtdq2ps xmm1, xmm1
	addss	xmm1, DWORD PTR ?game_window@@3Usk_window_s@@A+148
	addss	xmm1, xmm0
	movd	xmm0, DWORD PTR [ecx]

; 1297 :                                        game_window.game.window.top      +
; 1298 :                                        game_window.game.client.top ) );
; 1299 : 
; 1300 :   in.width   = static_cast <float> ( game_window.game.client.right  -
; 1301 :                                      game_window.game.client.left   );
; 1302 :   in.height  = static_cast <float> ( game_window.game.client.bottom -
; 1303 :                                      game_window.game.client.top    );
; 1304 : 
; 1305 :   out.width  = static_cast <float> ( game_window.actual.client.right -
; 1306 :                                      game_window.actual.client.left  );
; 1307 :   out.height = static_cast <float> ( game_window.actual.client.bottom -
; 1308 :                                      game_window.actual.client.top    );
; 1309 : 
; 1310 :   float x    = 2.0f * (static_cast <float> (lpPoint->x) / in.width ) - 1.0f;

	cvtdq2ps xmm0, xmm0
	cvttss2si eax, xmm1
	sub	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+44
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+36
	movd	xmm2, eax
	cvtdq2ps xmm2, xmm2
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+48
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+40
	divss	xmm0, xmm2
	movss	xmm2, DWORD PTR __real@3f800000
	addss	xmm0, xmm0
	movd	xmm4, eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+92
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+84
	cvtdq2ps xmm4, xmm4
	subss	xmm0, xmm2
	movd	xmm1, eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+96
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+88
	cvtdq2ps xmm1, xmm1

; 1311 :   float y    = 2.0f * (static_cast <float> (lpPoint->y) / in.height) - 1.0f;
; 1312 : 
; 1313 :   lpPoint->x = static_cast <LONG> ( (x * out.width  + out.width) / 2.0f + 

	addss	xmm0, xmm2
	movd	xmm3, eax
	cvtdq2ps xmm3, xmm3
	mulss	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR ?game_window@@3Usk_window_s@@A+144
	cvttss2si eax, xmm0
	movd	xmm0, DWORD PTR [ecx+4]
	cvtdq2ps xmm0, xmm0
	mov	DWORD PTR [ecx], eax
	divss	xmm0, xmm4
	addss	xmm0, xmm0
	subss	xmm0, xmm2

; 1314 :                                      game_window.coord_remap.offset.x );
; 1315 : 
; 1316 :   lpPoint->y = static_cast <LONG> ( (y * out.height + out.height) / 2.0f +

	addss	xmm0, xmm2
	mulss	xmm0, xmm3
	mulss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR ?game_window@@3Usk_window_s@@A+148
	cvttss2si eax, xmm0
	mov	DWORD PTR [ecx+4], eax
$LN1@SK_Reverse:

; 1317 :                                      game_window.coord_remap.offset.y );
; 1318 : }

	pop	ebp
	ret	0
?SK_ReverseCursorPos@@YAXPAUtagPOINT@@@Z ENDP		; SK_ReverseCursorPos
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-in>@?1??SK_CalcCursorPos@@YAXPAUtagPOINT@@@Z@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-in>@?1??SK_CalcCursorPos@@YAXPAUtagPOINT@@@Z@QAE@XZ PROC ; `SK_CalcCursorPos'::`2'::<unnamed-type-in>::<unnamed-type-in>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 1115684864		; 42800000H
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 1115684864		; 42800000H
	ret	0
??0<unnamed-type-in>@?1??SK_CalcCursorPos@@YAXPAUtagPOINT@@@Z@QAE@XZ ENDP ; `SK_CalcCursorPos'::`2'::<unnamed-type-in>::<unnamed-type-in>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_lpPoint$ = 8						; size = 4
?SK_CalcCursorPos@@YAXPAUtagPOINT@@@Z PROC		; SK_CalcCursorPos

; 1246 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1247 :   if (! game_window.needsCoordTransform ())

	mov	ecx, OFFSET ?game_window@@3Usk_window_s@@A ; game_window
	call	?needsCoordTransform@sk_window_s@@QAE_NXZ ; sk_window_s::needsCoordTransform
	test	al, al
	je	$LN1@SK_CalcCur

; 1248 :     return;
; 1249 : 
; 1250 :   struct {
; 1251 :     float width  = 64.0f,
; 1252 :           height = 64.0f;
; 1253 :   } in, out;
; 1254 : 
; 1255 :   lpPoint->x -= ( static_cast <LONG> ( game_window.actual.window.left ) );

	mov	ecx, DWORD PTR _lpPoint$[ebp]
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	sub	DWORD PTR [ecx], eax

; 1256 :   lpPoint->y -= ( static_cast <LONG> ( game_window.actual.window.top  ) );

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	sub	DWORD PTR [ecx+4], eax

; 1257 : 
; 1258 :   in.width    = static_cast <float> ( game_window.actual.client.right  -

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+92
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+84
	movd	xmm0, DWORD PTR [ecx]

; 1259 :                                       game_window.actual.client.left   );
; 1260 :   in.height   = static_cast <float> ( game_window.actual.client.bottom -
; 1261 :                                       game_window.actual.client.top    );
; 1262 : 
; 1263 :   out.width   = static_cast <float> ( game_window.game.client.right    -
; 1264 :                                       game_window.game.client.left     );
; 1265 :   out.height  = static_cast <float> ( game_window.game.client.bottom   -
; 1266 :                                       game_window.game.client.top      );
; 1267 : 
; 1268 :   float x     = 2.0f * (static_cast <float> (lpPoint->x) / in.width ) - 1.0f;

	cvtdq2ps xmm0, xmm0
	movd	xmm2, eax
	cvtdq2ps xmm2, xmm2
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+96
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+88
	divss	xmm0, xmm2
	movss	xmm2, DWORD PTR __real@3f800000
	addss	xmm0, xmm0
	movd	xmm4, eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+44
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+36
	cvtdq2ps xmm4, xmm4
	subss	xmm0, xmm2
	movd	xmm1, eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+48
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+40
	cvtdq2ps xmm1, xmm1

; 1269 :   float y     = 2.0f * (static_cast <float> (lpPoint->y) / in.height) - 1.0f;
; 1270 : 
; 1271 :   lpPoint->x  = static_cast <LONG> ( (x * out.width  + out.width) / 2.0f +

	addss	xmm0, xmm2
	movd	xmm3, eax
	cvtdq2ps xmm3, xmm3
	mulss	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR ?game_window@@3Usk_window_s@@A+144
	cvttss2si eax, xmm0
	movd	xmm0, DWORD PTR [ecx+4]
	cvtdq2ps xmm0, xmm0
	mov	DWORD PTR [ecx], eax
	divss	xmm0, xmm4
	addss	xmm0, xmm0
	subss	xmm0, xmm2

; 1272 :                                       game_window.coord_remap.offset.x );
; 1273 : 
; 1274 :   lpPoint->y  = static_cast <LONG> ( (y * out.height + out.height) / 2.0f +

	addss	xmm0, xmm2
	mulss	xmm0, xmm3
	mulss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR ?game_window@@3Usk_window_s@@A+148
	cvttss2si eax, xmm0
	mov	DWORD PTR [ecx+4], eax
$LN1@SK_CalcCur:

; 1275 :                                       game_window.coord_remap.offset.y );
; 1276 : }

	pop	ebp
	ret	0
?SK_CalcCursorPos@@YAXPAUtagPOINT@@@Z ENDP		; SK_CalcCursorPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_wszName$1 = -528					; size = 524
_proc_id$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_lParam$ = 12						; size = 4
?SK_EnumWindows@@YGHPAUHWND__@@J@Z PROC			; SK_EnumWindows

; 1130 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 528				; 00000210H
	push	ebx
	push	esi

; 1131 :   window_t& win =
; 1132 :     *reinterpret_cast <window_t *> (lParam);
; 1133 : 
; 1134 :   DWORD proc_id = 0;
; 1135 : 
; 1136 :   GetWindowThreadProcessId (hWnd, &proc_id);

	mov	esi, DWORD PTR _hWnd$[ebp]
	lea	eax, DWORD PTR _proc_id$[ebp]
	push	eax
	push	esi
	mov	DWORD PTR _proc_id$[ebp], 0
	call	DWORD PTR __imp__GetWindowThreadProcessId@8

; 1137 : 
; 1138 :   if (win.proc_id == proc_id)

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _proc_id$[ebp]
	jne	$LN12@SK_EnumWin

; 1139 :   {
; 1140 :     //if ( GetWindow (hWnd, GW_OWNER) == (HWND)nullptr )
; 1141 :     {
; 1142 :       DWORD dwStyle, dwStyleEx;
; 1143 : 
; 1144 :       switch (IsWindowUnicode (hWnd))

	push	edi
	push	esi
	call	DWORD PTR __imp__IsWindowUnicode@4

; 1149 :           break;
; 1150 : 
; 1151 :         default:
; 1152 :         case FALSE:
; 1153 :           dwStyle   = GetWindowLongA_Original (hWnd, GWL_STYLE);

	push	-16					; fffffff0H
	push	esi
	sub	eax, 1
	je	SHORT $LN5@SK_EnumWin
	call	DWORD PTR ?GetWindowLongA_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongA_Original

; 1154 :           dwStyleEx = GetWindowLongA_Original (hWnd, GWL_EXSTYLE);

	push	-20					; ffffffecH
	push	esi
	mov	edi, eax
	call	DWORD PTR ?GetWindowLongA_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongA_Original
	jmp	SHORT $LN2@SK_EnumWin
$LN5@SK_EnumWin:

; 1145 :       {
; 1146 :         case TRUE:
; 1147 :           dwStyle   = GetWindowLongW_Original (hWnd, GWL_STYLE);

	call	DWORD PTR ?GetWindowLongW_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongW_Original

; 1148 :           dwStyleEx = GetWindowLongW_Original (hWnd, GWL_EXSTYLE);

	push	-20					; ffffffecH
	push	esi
	mov	edi, eax
	call	DWORD PTR ?GetWindowLongW_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongW_Original
$LN2@SK_EnumWin:

; 1155 :           break;
; 1156 :       }
; 1157 : 
; 1158 :       bool    SKIM                   = false;
; 1159 :       wchar_t wszName [MAX_PATH + 2] = { };

	push	524					; 0000020cH
	lea	eax, DWORD PTR _wszName$1[ebp]
	xor	bl, bl
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1160 : 
; 1161 :       if (RealGetWindowClassW (hWnd, wszName, MAX_PATH))

	lea	eax, DWORD PTR _wszName$1[ebp]
	push	260					; 00000104H
	push	eax
	push	esi
	call	DWORD PTR __imp__RealGetWindowClassW@12
	test	eax, eax
	je	SHORT $LN13@SK_EnumWin

; 1162 :       {
; 1163 :         if (StrStrIW (wszName, L"SKIM"))

	push	OFFSET $SG211547
	lea	eax, DWORD PTR _wszName$1[ebp]
	push	eax
	call	DWORD PTR __imp__StrStrIW@8
	test	eax, eax
	movzx	ebx, bl
	mov	eax, 1
	cmovne	ebx, eax
	jmp	SHORT $LN8@SK_EnumWin
$LN13@SK_EnumWin:
	mov	eax, 1
$LN8@SK_EnumWin:

; 1164 :           SKIM = true;
; 1165 :       }
; 1166 : 
; 1167 :       if ( (dwStyle & (WS_VISIBLE | WS_MINIMIZEBOX)) || SKIM )

	test	edi, 268566528				; 10020000H
	pop	edi
	jne	SHORT $LN10@SK_EnumWin
	test	bl, bl
	je	SHORT $LN1@SK_EnumWin
$LN10@SK_EnumWin:

; 1168 :       {
; 1169 :         win.root = hWnd;

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR [eax+4], esi

; 1170 :         return FALSE;

	xor	eax, eax
	pop	esi
	pop	ebx

; 1171 :       }
; 1172 :     }
; 1173 :   }
; 1174 : 
; 1175 :   return TRUE;
; 1176 : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN12@SK_EnumWin:
	mov	eax, 1
$LN1@SK_EnumWin:
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SK_EnumWindows@@YGHPAUHWND__@@J@Z ENDP			; SK_EnumWindows
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??__Egame_window@@YAXXZ
text$di	SEGMENT
??__Egame_window@@YAXXZ PROC				; `dynamic initializer for 'game_window'', COMDAT

; 1122 : sk_window_s       game_window;

	mov	ecx, OFFSET ?game_window@@3Usk_window_s@@A ; game_window
	jmp	??0sk_window_s@@QAE@XZ
??__Egame_window@@YAXXZ ENDP				; `dynamic initializer for 'game_window''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__$SEHRec$ = -24					; size = 24
_pWin$ = 8						; size = 4
_hWnd_$ = 12						; size = 4
_Msg$ = 16						; size = 4
_wParam$ = 20						; size = 4
_lParam$ = 24						; size = 4
?SK_COMPAT_SafeCallProc@@YAJPAUsk_window_s@@PAUHWND__@@IIJ@Z PROC ; SK_COMPAT_SafeCallProc

; 5972 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	OFFSET __sehtable$?SK_COMPAT_SafeCallProc@@YAJPAUsk_window_s@@PAUHWND__@@IIJ@Z
	push	OFFSET __except_handler3
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 5973 :   __try {

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 5974 :     return pWin->CallProc (hWnd_, Msg, wParam, lParam);

	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _Msg$[ebp]
	push	DWORD PTR _hWnd_$[ebp]
	mov	ecx, DWORD PTR _pWin$[ebp]
	call	?CallProc@sk_window_s@@QAEJPAUHWND__@@IIJ@Z ; sk_window_s::CallProc
	mov	DWORD PTR __$SEHRec$[ebp+20], -1

; 5979 :   }
; 5980 : }

	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@SK_COMPAT_:
$LN10@SK_COMPAT_:

; 5975 :   }
; 5976 :   __except (EXCEPTION_EXECUTE_HANDLER)

	mov	eax, 1
$LN9@SK_COMPAT_:
$LN7@SK_COMPAT_:
	ret	0
$LN6@SK_COMPAT_:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 5977 :   {
; 5978 :     return 1;

	mov	DWORD PTR __$SEHRec$[ebp+20], -1
	mov	eax, 1

; 5979 :   }
; 5980 : }

	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SK_COMPAT_SafeCallProc@@YAJPAUsk_window_s@@PAUHWND__@@IIJ@Z ENDP ; SK_COMPAT_SafeCallProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\console.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_input$2 = -64						; size = 28
_client$3 = -36						; size = 16
tv1297 = -20						; size = 4
_DeactivateCursor$4 = -16				; size = 1
_ActivateCursor$5 = -15					; size = 1
_console_visible$1$ = -14				; size = 1
_ActivateWindow$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
_hWnd$ = 8						; size = 4
?game_window@@3Usk_window_s@@A$4 = 12			; size = 4
_source$1$ = 12						; size = 4
_uMsg$ = 12						; size = 4
_offset$1$ = 15						; size = 1
_wParam$ = 16						; size = 4
?game_window@@3Usk_window_s@@A$3 = 20			; size = 4
tv1245 = 20						; size = 4
_activate$6 = 20					; size = 1
_lParam$ = 20						; size = 4
_temp_override$1$ = 23					; size = 1
?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z PROC		; SK_DetourWindowProc

; 4300 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 52					; 00000034H
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?__SK_DLL_Ending@@3JC	; __SK_DLL_Ending
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 4303 :   if (ReadAcquire (&__SK_DLL_Ending))

	test	eax, eax
	je	SHORT $LN10@SK_DetourW

; 4304 :     return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);

	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _uMsg$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+212

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN10@SK_DetourW:

; 4305 : 
; 4306 : 
; 4307 :   static bool first_run = true;
; 4308 : 
; 4309 :   if (first_run)

	cmp	BYTE PTR ?first_run@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, 0
	je	SHORT $LN11@SK_DetourW

; 4310 :   {
; 4311 :     // Start unmuted (in case the game crashed in the background)
; 4312 :     if (config.window.background_mute)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+765, 0
	je	SHORT $LN12@SK_DetourW

; 4313 :       SK_SetGameMute (FALSE);

	push	0
	call	?SK_SetGameMute@@YGX_N@Z		; SK_SetGameMute
$LN12@SK_DetourW:

; 4314 : 
; 4315 :     first_run = false;

	mov	BYTE PTR ?first_run@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, 0
$LN11@SK_DetourW:

; 4316 :   }
; 4317 : 
; 4318 : 
; 4319 : 
; 4320 :   if (hWnd != game_window.hWnd)

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	push	esi
	mov	esi, DWORD PTR _hWnd$[ebp]
	cmp	esi, eax
	je	$LN13@SK_DetourW

; 4321 :   {
; 4322 :     if (game_window.hWnd != nullptr)

	test	eax, eax
	je	SHORT $LN14@SK_DetourW

; 4323 :     {
; 4324 :       dll_log.Log ( L"[Window Mgr] New HWND detected in the window proc. used"

	push	esi
	push	eax
	push	OFFSET $SG281765
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H
$LN14@SK_DetourW:

; 4325 :                     L" for rendering... (Old=%p, New=%p)",
; 4326 :                       game_window.hWnd, hWnd );
; 4327 :     }
; 4328 : 
; 4329 :     game_window.hWnd = hWnd;
; 4330 : 
; 4331 :     game_window.active       = true;
; 4332 :     game_window.game.style   = game_window.GetWindowLongPtr (game_window.hWnd, GWL_STYLE);

	push	-16					; fffffff0H
	push	esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+4, esi
	mov	BYTE PTR ?game_window@@3Usk_window_s@@A+17, 1
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+200

; 4333 :     game_window.actual.style = game_window.GetWindowLongPtr (game_window.hWnd, GWL_STYLE);

	push	-16					; fffffff0H
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, eax
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+200

; 4334 :     game_window.unicode      =              IsWindowUnicode (game_window.hWnd)   != FALSE;

	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, eax
	call	DWORD PTR __imp__IsWindowUnicode@4

; 4335 : 
; 4336 :     GetWindowRect_Original (game_window.hWnd, &game_window.game.window  );

	push	OFFSET ?game_window@@3Usk_window_s@@A+52
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	test	eax, eax
	setne	BYTE PTR ?game_window@@3Usk_window_s@@A
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 4337 :     GetClientRect_Original (game_window.hWnd, &game_window.game.client  );

	push	OFFSET ?game_window@@3Usk_window_s@@A+36
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 4338 :     GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 4339 :     GetClientRect_Original (game_window.hWnd, &game_window.actual.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+84
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 4340 : 
; 4341 :     SK_InitWindow (hWnd, false);

	push	0
	push	esi
	call	?SK_InitWindow@@YAXPAUHWND__@@_N@Z	; SK_InitWindow
	add	esp, 8
$LN13@SK_DetourW:

; 4342 :   }
; 4343 : 
; 4344 : 
; 4345 : 
; 4346 :   static bool last_active = game_window.active;

	mov	eax, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR __tls_index
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
	mov	DWORD PTR tv1297[ebp], ecx
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jle	SHORT $LN2@SK_DetourW
	push	OFFSET ?$TSS0@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA, -1
	jne	SHORT $LN2@SK_DetourW
	mov	al, BYTE PTR ?game_window@@3Usk_window_s@@A+17
	push	OFFSET ?$TSS0@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
	mov	BYTE PTR ?last_active@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, al
	call	__Init_thread_footer
	add	esp, 4
$LN2@SK_DetourW:

; 4347 : 
; 4348 :   bool console_visible =
; 4349 :     SK_Console::getInstance ()->isVisible ();

	push	edi
	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance

; 4367 :   if (config.input.cursor.manage)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+672, 0
	mov	edi, DWORD PTR _lParam$[ebp]
	mov	esi, DWORD PTR _uMsg$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\console.h

; 69   :   bool isVisible (void) { return visible; }

	mov	al, BYTE PTR [eax+4356]
	mov	BYTE PTR _console_visible$1$[ebp], al
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 4367 :   if (config.input.cursor.manage)

	je	$LN26@SK_DetourW

; 4368 :   {
; 4369 :     //extern bool IsControllerPluggedIn (INT iJoyID);
; 4370 : 
; 4371 :    auto ActivateCursor = [](bool changed = false)->
; 4372 :     bool
; 4373 :      {
; 4374 :        bool was_active = last_mouse.cursor;
; 4375 : 
; 4376 :        if (! last_mouse.cursor)
; 4377 :        {
; 4378 :          if ((! SK_IsSteamOverlayActive ()) && game_window.active)
; 4379 :          {
; 4380 :            while (ShowCursor (TRUE) < 0) ;
; 4381 :            last_mouse.cursor = true;
; 4382 :          }
; 4383 :        }
; 4384 : 
; 4385 :        if (changed && (! SK_IsSteamOverlayActive ()))
; 4386 :          last_mouse.sampled = timeGetTime ();
; 4387 : 
; 4388 :        return (last_mouse.cursor != was_active);
; 4389 :      };
; 4390 : 
; 4391 :    auto DeactivateCursor = 
; 4392 :    []{
; 4393 :        if (! last_mouse.cursor)
; 4394 :          return false;
; 4395 : 
; 4396 :        bool was_active = last_mouse.cursor;
; 4397 : 
; 4398 :        if (last_mouse.sampled <= timeGetTime () - config.input.cursor.timeout)
; 4399 :        {
; 4400 :          if ((! SK_IsSteamOverlayActive ()) && game_window.active)
; 4401 :          {
; 4402 :            while (ShowCursor (FALSE) >= -1) ;
; 4403 :            last_mouse.cursor = false;
; 4404 : 
; 4405 :            last_mouse.sampled = timeGetTime ();
; 4406 :          }
; 4407 :        }
; 4408 : 
; 4409 :        return (last_mouse.cursor != was_active);
; 4410 :      };
; 4411 : 
; 4412 :     if (! last_mouse.init)

	cmp	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+12, 0
	jne	SHORT $LN16@SK_DetourW

; 4413 :     {
; 4414 :       if (config.input.cursor.timeout != 0)

	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+668

; 4415 :       {
; 4416 :         SetTimer ( hWnd,

	push	0
	test	eax, eax
	je	SHORT $LN17@SK_DetourW
	shr	eax, 1
	push	eax

; 4417 :                      static_cast <UINT_PTR> (        last_mouse.timer_id),
; 4418 :                      static_cast <UINT>     (config.input.cursor.timeout) / 2,
; 4419 :                        nullptr );
; 4420 :       }
; 4421 :       else

	jmp	SHORT $LN162@SK_DetourW
$LN17@SK_DetourW:

; 4422 :       {
; 4423 :         SetTimer ( hWnd,

	push	250					; 000000faH
$LN162@SK_DetourW:
	push	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+16
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR __imp__SetTimer@16

; 4424 :                      static_cast <UINT_PTR> (last_mouse.timer_id),
; 4425 :                        250UL/*USER_TIMER_MINIMUM*/,
; 4426 :                          nullptr );
; 4427 :       }
; 4428 : 
; 4429 :       last_mouse.init = true;

	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+12, 1
$LN16@SK_DetourW:

; 4430 :     }
; 4431 : 
; 4432 :     bool activation_event =
; 4433 :       (uMsg == WM_MOUSEMOVE) && (! SK_IsSteamOverlayActive ());

	cmp	esi, 512				; 00000200H
	jne	SHORT $LN121@SK_DetourW
	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	SHORT $LN121@SK_DetourW

; 4434 : 
; 4435 :     // Don't blindly accept that WM_MOUSEMOVE actually means the mouse moved...
; 4436 :     if (activation_event)
; 4437 :     {
; 4438 :       const short threshold = 2;
; 4439 : 
; 4440 :       // Filter out small movements
; 4441 :       if ( abs (last_mouse.pos.x - GET_X_LPARAM (lParam)) < threshold &&

	movsx	eax, WORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A
	movsx	ecx, di
	sub	eax, ecx
	mov	BYTE PTR tv1245[ebp], 1
	cdq
	xor	eax, edx
	sub	eax, edx
	cmp	eax, 2
	jge	SHORT $LN158@SK_DetourW
	mov	eax, edi
	shr	eax, 16					; 00000010H
	movsx	ecx, ax
	movsx	eax, WORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+2
	sub	eax, ecx

; 4442 :            abs (last_mouse.pos.y - GET_Y_LPARAM (lParam)) < threshold )
; 4443 :         activation_event = false;
; 4444 : 
; 4445 :       last_mouse.pos = MAKEPOINTS (lParam);

	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A, edi
	mov	ecx, DWORD PTR tv1245[ebp]
	cdq
	xor	eax, edx
	movzx	ecx, cl
	sub	eax, edx
	xor	edx, edx
	cmp	eax, 2
	cmovl	ecx, edx
	jmp	SHORT $LN19@SK_DetourW
$LN158@SK_DetourW:
	mov	ecx, DWORD PTR tv1245[ebp]
	mov	DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A, edi
	jmp	SHORT $LN19@SK_DetourW
$LN121@SK_DetourW:

; 4430 :     }
; 4431 : 
; 4432 :     bool activation_event =
; 4433 :       (uMsg == WM_MOUSEMOVE) && (! SK_IsSteamOverlayActive ());

	xor	cl, cl
$LN19@SK_DetourW:

; 4446 :     }
; 4447 : 
; 4448 :     if (config.input.cursor.keys_activate)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+673, 0
	je	SHORT $LN21@SK_DetourW

; 4449 :       activation_event |= ( uMsg == WM_CHAR       ||

	cmp	esi, 258				; 00000102H
	je	SHORT $LN123@SK_DetourW
	cmp	esi, 260				; 00000104H
	je	SHORT $LN123@SK_DetourW
	cmp	esi, 261				; 00000105H
	je	SHORT $LN123@SK_DetourW
	xor	eax, eax
	jmp	SHORT $LN124@SK_DetourW
$LN123@SK_DetourW:
	mov	eax, 1
$LN124@SK_DetourW:
	or	cl, al
$LN21@SK_DetourW:

; 4450 :                             uMsg == WM_SYSKEYDOWN ||
; 4451 :                             uMsg == WM_SYSKEYUP );
; 4452 : 
; 4453 :     // If timeout is 0, just hide the thing indefinitely
; 4454 :     if (activation_event && config.input.cursor.timeout != 0)

	test	cl, cl
	je	$LN22@SK_DetourW
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+668, 0
	je	SHORT $LN22@SK_DetourW

; 4455 :       ActivateCursor (true);

	push	1
	lea	ecx, DWORD PTR _ActivateCursor$5[ebp]
	call	??R<lambda_2572320820a0ac4674a028f271eecacf>@@QBE_N_N@Z ; <lambda_2572320820a0ac4674a028f271eecacf>::operator()
$LN26@SK_DetourW:

; 4464 : 
; 4465 :       else
; 4466 :         ActivateCursor ();
; 4467 :     }
; 4468 :   }
; 4469 : 
; 4470 : 
; 4471 :   auto ActivateWindow =[&](bool active = false)
; 4472 :   {
; 4473 :     bool state_changed =
; 4474 :       (game_window.active != active);
; 4475 : 
; 4476 :     game_window.active = active;
; 4477 : 
; 4478 :     if (state_changed)
; 4479 :     {
; 4480 :       SK_Console::getInstance ()->reset ();
; 4481 : 
; 4482 :       if (config.window.background_mute)
; 4483 :         SK_WindowManager::getInstance ()->muteGame ((! active));
; 4484 : 
; 4485 :       // Keep Unity games from crashing at startup when forced into FULLSCREEN
; 4486 :       //
; 4487 :       //  ... also prevents a game from staying topmost when you Alt+Tab
; 4488 :       //
; 4489 : 
; 4490 :       if ( active && config.display.force_fullscreen &&
; 4491 :            ( static_cast <int> (SK_GetCurrentRenderBackend ().api)  &
; 4492 :              static_cast <int> (SK_RenderAPI::D3D9               )
; 4493 :            )
; 4494 :          )
; 4495 :       {
; 4496 :         SetWindowLongPtrW    (game_window.hWnd, GWL_EXSTYLE,
; 4497 :          ( GetWindowLongPtrW (game_window.hWnd, GWL_EXSTYLE) & ~(WS_EX_TOPMOST | WS_EX_NOACTIVATE)
; 4498 :          ) | WS_EX_APPWINDOW );
; 4499 :         //SetWindowPos      (game_window.hWnd, HWND_NOTOPMOST, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4500 :         //                                                                 SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4501 :         //                                                                 SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE );
; 4502 :         //SetWindowPos      (game_window.hWnd, HWND_TOP, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4503 :         //                                                           SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4504 :         //                                                           SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE | SWP_NOZORDER );
; 4505 : 
; 4506 :         extern void
; 4507 :         SK_D3D9_TriggerReset (bool);
; 4508 :       
; 4509 :         SK_D3D9_TriggerReset (false);
; 4510 :       }
; 4511 :     }
; 4512 : 
; 4513 : 
; 4514 :     if (active && state_changed)
; 4515 :     {
; 4516 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)
; 4517 :       {
; 4518 :         if (! game_window.cursor_visible)
; 4519 :         {
; 4520 :           while (ShowCursor (FALSE) >= 0)
; 4521 :             ;
; 4522 :         }
; 4523 : 
; 4524 :         ClipCursor_Original (&game_window.cursor_clip);
; 4525 :       }
; 4526 :     }
; 4527 : 
; 4528 :     else if ((! active) && state_changed)
; 4529 :     {
; 4530 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)
; 4531 :       {
; 4532 :         game_window.cursor_visible =
; 4533 :           ShowCursor (TRUE) >= 1;
; 4534 : 
; 4535 :         while (ShowCursor (TRUE) < 0)
; 4536 :           ;
; 4537 : 
; 4538 :         ClipCursor_Original (nullptr);
; 4539 :       }
; 4540 :     }
; 4541 : 
; 4542 : 
; 4543 :     if (config.window.confine_cursor && state_changed)
; 4544 :     {
; 4545 :       if (active)
; 4546 :       {
; 4547 :         SK_LOG4 ( ( L"Confining Mouse Cursor" ),
; 4548 :                     L"Window Mgr" );
; 4549 : 
; 4550 :         ////// XXX: Is this really necessary? State should be consistent unless we missed
; 4551 :         //////        an event --- Write unit test?
; 4552 :         GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);
; 4553 :         ClipCursor_Original    (&game_window.actual.window);
; 4554 :       }
; 4555 : 
; 4556 :       else
; 4557 :       {
; 4558 :         SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),
; 4559 :                     L"Window Mgr" );
; 4560 : 
; 4561 :         ClipCursor_Original (nullptr);
; 4562 :       }
; 4563 :     }
; 4564 : 
; 4565 :     if (config.window.unconfine_cursor && state_changed)
; 4566 :     {
; 4567 :       SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),
; 4568 :                   L"Window Mgr" );
; 4569 :       
; 4570 :       ClipCursor_Original (nullptr);
; 4571 :     }
; 4572 : 
; 4573 :     if (state_changed)
; 4574 :       SK_ImGui_Cursor.activateWindow (active);
; 4575 :   };
; 4576 : 
; 4577 : 
; 4578 :   switch (uMsg)

	cmp	esi, 28					; 0000001cH
	ja	$LN127@SK_DetourW
	je	SHORT $LN36@SK_DetourW
	mov	eax, esi
	sub	eax, 3
	je	$LN82@SK_DetourW
	sub	eax, 2
	je	$LN81@SK_DetourW
	sub	eax, 1
	jne	$LN89@SK_DetourW
$LN36@SK_DetourW:

; 4611 :         }
; 4612 : 
; 4613 :         SK_GetCurrentRenderBackend ().fullscreen_exclusive = false;
; 4614 :       }
; 4615 :     } break;
; 4616 : 
; 4617 :     // Allow the game to run in the background
; 4618 :     case WM_ACTIVATEAPP:
; 4619 :     case WM_ACTIVATE:
; 4620 :     case WM_NCACTIVATE:
; 4621 :     {
; 4622 :       if (uMsg == WM_NCACTIVATE || uMsg == WM_ACTIVATEAPP)

	cmp	esi, 134				; 00000086H
	je	$LN39@SK_DetourW
	cmp	esi, 28					; 0000001cH
	je	$LN39@SK_DetourW

; 4655 :           }
; 4656 : 
; 4657 :           SK_GetCurrentRenderBackend ().fullscreen_exclusive = false;
; 4658 :         }
; 4659 :       }
; 4660 : 
; 4661 :       else if (uMsg == WM_ACTIVATE)

	cmp	esi, 6
	jne	$LN89@SK_DetourW

; 4662 :       {
; 4663 :         const wchar_t* source   = L"UNKKNOWN";
; 4664 :         bool           activate = false;
; 4665 : 
; 4666 :         switch (LOWORD (wParam))

	mov	eax, DWORD PTR _wParam$[ebp]
	test	ax, ax
	je	$LN49@SK_DetourW

; 4667 :         {
; 4668 :           case WA_ACTIVE:
; 4669 :           case WA_CLICKACTIVE:
; 4670 :           default: // Unknown
; 4671 :           {
; 4672 :             activate = reinterpret_cast <HWND> (lParam) != game_window.hWnd;

	cmp	edi, DWORD PTR ?game_window@@3Usk_window_s@@A+4

; 4673 :             source   = LOWORD (wParam) == 1 ? L"(WM_ACTIVATE [ WA_ACTIVE ])" :

	mov	ecx, OFFSET $SG281805
	mov	edx, OFFSET $SG281806
	setne	BYTE PTR _activate$6[ebp]
	cmp	ax, 1
	cmovne	ecx, edx
	mov	DWORD PTR _source$1$[ebp], ecx

; 4674 :                                               L"(WM_ACTIVATE [ WA_CLICKACTIVE ])";
; 4675 :             ActivateWindow (activate);
; 4676 :           } break;

	jmp	$LN164@SK_DetourW
$LN22@SK_DetourW:

; 4456 : 
; 4457 :     else if ( uMsg   == WM_TIMER            &&
; 4458 :               wParam == last_mouse.timer_id &&
; 4459 :              (! SK_IsSteamOverlayActive ()) &&

	cmp	esi, 275				; 00000113H
	jne	SHORT $LN26@SK_DetourW
	mov	eax, DWORD PTR _wParam$[ebp]
	cmp	eax, DWORD PTR ?last_mouse@@3U<unnamed-type-last_mouse>@@A+16
	jne	$LN155@SK_DetourW
	call	?SK_IsSteamOverlayActive@@YG_NXZ	; SK_IsSteamOverlayActive
	test	al, al
	jne	$LN155@SK_DetourW
	mov	cl, BYTE PTR ?game_window@@3Usk_window_s@@A+17
	test	cl, cl
	je	$LN153@SK_DetourW

; 4460 :               game_window.active )
; 4461 :     {
; 4462 :       if (true)//IsControllerPluggedIn (config.input.gamepad_slot))
; 4463 :         DeactivateCursor ();

	lea	ecx, DWORD PTR _DeactivateCursor$4[ebp]
	call	??R<lambda_dad5f25fac12a4e0d93ddcd601f383ab>@@QBE_NXZ ; <lambda_dad5f25fac12a4e0d93ddcd601f383ab>::operator()

; 4464 : 
; 4465 :       else
; 4466 :         ActivateCursor ();
; 4467 :     }
; 4468 :   }
; 4469 : 
; 4470 : 
; 4471 :   auto ActivateWindow =[&](bool active = false)
; 4472 :   {
; 4473 :     bool state_changed =
; 4474 :       (game_window.active != active);
; 4475 : 
; 4476 :     game_window.active = active;
; 4477 : 
; 4478 :     if (state_changed)
; 4479 :     {
; 4480 :       SK_Console::getInstance ()->reset ();
; 4481 : 
; 4482 :       if (config.window.background_mute)
; 4483 :         SK_WindowManager::getInstance ()->muteGame ((! active));
; 4484 : 
; 4485 :       // Keep Unity games from crashing at startup when forced into FULLSCREEN
; 4486 :       //
; 4487 :       //  ... also prevents a game from staying topmost when you Alt+Tab
; 4488 :       //
; 4489 : 
; 4490 :       if ( active && config.display.force_fullscreen &&
; 4491 :            ( static_cast <int> (SK_GetCurrentRenderBackend ().api)  &
; 4492 :              static_cast <int> (SK_RenderAPI::D3D9               )
; 4493 :            )
; 4494 :          )
; 4495 :       {
; 4496 :         SetWindowLongPtrW    (game_window.hWnd, GWL_EXSTYLE,
; 4497 :          ( GetWindowLongPtrW (game_window.hWnd, GWL_EXSTYLE) & ~(WS_EX_TOPMOST | WS_EX_NOACTIVATE)
; 4498 :          ) | WS_EX_APPWINDOW );
; 4499 :         //SetWindowPos      (game_window.hWnd, HWND_NOTOPMOST, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4500 :         //                                                                 SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4501 :         //                                                                 SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE );
; 4502 :         //SetWindowPos      (game_window.hWnd, HWND_TOP, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4503 :         //                                                           SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4504 :         //                                                           SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE | SWP_NOZORDER );
; 4505 : 
; 4506 :         extern void
; 4507 :         SK_D3D9_TriggerReset (bool);
; 4508 :       
; 4509 :         SK_D3D9_TriggerReset (false);
; 4510 :       }
; 4511 :     }
; 4512 : 
; 4513 : 
; 4514 :     if (active && state_changed)
; 4515 :     {
; 4516 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)
; 4517 :       {
; 4518 :         if (! game_window.cursor_visible)
; 4519 :         {
; 4520 :           while (ShowCursor (FALSE) >= 0)
; 4521 :             ;
; 4522 :         }
; 4523 : 
; 4524 :         ClipCursor_Original (&game_window.cursor_clip);
; 4525 :       }
; 4526 :     }
; 4527 : 
; 4528 :     else if ((! active) && state_changed)
; 4529 :     {
; 4530 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)
; 4531 :       {
; 4532 :         game_window.cursor_visible =
; 4533 :           ShowCursor (TRUE) >= 1;
; 4534 : 
; 4535 :         while (ShowCursor (TRUE) < 0)
; 4536 :           ;
; 4537 : 
; 4538 :         ClipCursor_Original (nullptr);
; 4539 :       }
; 4540 :     }
; 4541 : 
; 4542 : 
; 4543 :     if (config.window.confine_cursor && state_changed)
; 4544 :     {
; 4545 :       if (active)
; 4546 :       {
; 4547 :         SK_LOG4 ( ( L"Confining Mouse Cursor" ),
; 4548 :                     L"Window Mgr" );
; 4549 : 
; 4550 :         ////// XXX: Is this really necessary? State should be consistent unless we missed
; 4551 :         //////        an event --- Write unit test?
; 4552 :         GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);
; 4553 :         ClipCursor_Original    (&game_window.actual.window);
; 4554 :       }
; 4555 : 
; 4556 :       else
; 4557 :       {
; 4558 :         SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),
; 4559 :                     L"Window Mgr" );
; 4560 : 
; 4561 :         ClipCursor_Original (nullptr);
; 4562 :       }
; 4563 :     }
; 4564 : 
; 4565 :     if (config.window.unconfine_cursor && state_changed)
; 4566 :     {
; 4567 :       SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),
; 4568 :                   L"Window Mgr" );
; 4569 :       
; 4570 :       ClipCursor_Original (nullptr);
; 4571 :     }
; 4572 : 
; 4573 :     if (state_changed)
; 4574 :       SK_ImGui_Cursor.activateWindow (active);
; 4575 :   };
; 4576 : 
; 4577 : 
; 4578 :   switch (uMsg)

	jmp	$LN155@SK_DetourW
$LN81@SK_DetourW:

; 4820 :     } break;
; 4821 : 
; 4822 : 
; 4823 :     case WM_SIZE:
; 4824 :       ImGui_ImplDX11_InvalidateDeviceObjects ();

	call	?ImGui_ImplDX11_InvalidateDeviceObjects@@YAXXZ ; ImGui_ImplDX11_InvalidateDeviceObjects
$LN82@SK_DetourW:

; 4825 :       // Fallthrough to WM_MOVE
; 4826 : 
; 4827 :     case WM_MOVE:
; 4828 :       GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 4829 :       GetClientRect_Original (game_window.hWnd, &game_window.actual.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+84
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 4830 : 
; 4831 :       if (config.window.confine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+766, 0
	je	SHORT $LN83@SK_DetourW

; 4832 :         ClipCursor_Original (&game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	jmp	SHORT $LN163@SK_DetourW
$LN83@SK_DetourW:

; 4833 :       else if (config.window.unconfine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	je	SHORT $LN85@SK_DetourW

; 4834 :         ClipCursor_Original (nullptr);

	push	0
$LN163@SK_DetourW:
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN85@SK_DetourW:

; 4835 : 
; 4836 : 
; 4837 :       // Filter this message
; 4838 :       if (config.window.borderless && config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
$LN168@SK_DetourW:
	je	$LN89@SK_DetourW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	$LN89@SK_DetourW
$LN113@SK_DetourW:

; 4992 :     }
; 4993 :   }
; 4994 :   
; 4995 :   else {
; 4996 :     return DefWindowProcW (hWnd, uMsg, wParam, lParam);;

	push	edi
	push	DWORD PTR _wParam$[ebp]
$LN166@SK_DetourW:
	push	esi
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR __imp__DefWindowProcW@16
$LN161@SK_DetourW:
	pop	edi
	pop	esi

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN127@SK_DetourW:

; 4464 : 
; 4465 :       else
; 4466 :         ActivateCursor ();
; 4467 :     }
; 4468 :   }
; 4469 : 
; 4470 : 
; 4471 :   auto ActivateWindow =[&](bool active = false)
; 4472 :   {
; 4473 :     bool state_changed =
; 4474 :       (game_window.active != active);
; 4475 : 
; 4476 :     game_window.active = active;
; 4477 : 
; 4478 :     if (state_changed)
; 4479 :     {
; 4480 :       SK_Console::getInstance ()->reset ();
; 4481 : 
; 4482 :       if (config.window.background_mute)
; 4483 :         SK_WindowManager::getInstance ()->muteGame ((! active));
; 4484 : 
; 4485 :       // Keep Unity games from crashing at startup when forced into FULLSCREEN
; 4486 :       //
; 4487 :       //  ... also prevents a game from staying topmost when you Alt+Tab
; 4488 :       //
; 4489 : 
; 4490 :       if ( active && config.display.force_fullscreen &&
; 4491 :            ( static_cast <int> (SK_GetCurrentRenderBackend ().api)  &
; 4492 :              static_cast <int> (SK_RenderAPI::D3D9               )
; 4493 :            )
; 4494 :          )
; 4495 :       {
; 4496 :         SetWindowLongPtrW    (game_window.hWnd, GWL_EXSTYLE,
; 4497 :          ( GetWindowLongPtrW (game_window.hWnd, GWL_EXSTYLE) & ~(WS_EX_TOPMOST | WS_EX_NOACTIVATE)
; 4498 :          ) | WS_EX_APPWINDOW );
; 4499 :         //SetWindowPos      (game_window.hWnd, HWND_NOTOPMOST, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4500 :         //                                                                 SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4501 :         //                                                                 SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE );
; 4502 :         //SetWindowPos      (game_window.hWnd, HWND_TOP, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4503 :         //                                                           SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4504 :         //                                                           SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE | SWP_NOZORDER );
; 4505 : 
; 4506 :         extern void
; 4507 :         SK_D3D9_TriggerReset (bool);
; 4508 :       
; 4509 :         SK_D3D9_TriggerReset (false);
; 4510 :       }
; 4511 :     }
; 4512 : 
; 4513 : 
; 4514 :     if (active && state_changed)
; 4515 :     {
; 4516 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)
; 4517 :       {
; 4518 :         if (! game_window.cursor_visible)
; 4519 :         {
; 4520 :           while (ShowCursor (FALSE) >= 0)
; 4521 :             ;
; 4522 :         }
; 4523 : 
; 4524 :         ClipCursor_Original (&game_window.cursor_clip);
; 4525 :       }
; 4526 :     }
; 4527 : 
; 4528 :     else if ((! active) && state_changed)
; 4529 :     {
; 4530 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)
; 4531 :       {
; 4532 :         game_window.cursor_visible =
; 4533 :           ShowCursor (TRUE) >= 1;
; 4534 : 
; 4535 :         while (ShowCursor (TRUE) < 0)
; 4536 :           ;
; 4537 : 
; 4538 :         ClipCursor_Original (nullptr);
; 4539 :       }
; 4540 :     }
; 4541 : 
; 4542 : 
; 4543 :     if (config.window.confine_cursor && state_changed)
; 4544 :     {
; 4545 :       if (active)
; 4546 :       {
; 4547 :         SK_LOG4 ( ( L"Confining Mouse Cursor" ),
; 4548 :                     L"Window Mgr" );
; 4549 : 
; 4550 :         ////// XXX: Is this really necessary? State should be consistent unless we missed
; 4551 :         //////        an event --- Write unit test?
; 4552 :         GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);
; 4553 :         ClipCursor_Original    (&game_window.actual.window);
; 4554 :       }
; 4555 : 
; 4556 :       else
; 4557 :       {
; 4558 :         SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),
; 4559 :                     L"Window Mgr" );
; 4560 : 
; 4561 :         ClipCursor_Original (nullptr);
; 4562 :       }
; 4563 :     }
; 4564 : 
; 4565 :     if (config.window.unconfine_cursor && state_changed)
; 4566 :     {
; 4567 :       SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),
; 4568 :                   L"Window Mgr" );
; 4569 :       
; 4570 :       ClipCursor_Original (nullptr);
; 4571 :     }
; 4572 : 
; 4573 :     if (state_changed)
; 4574 :       SK_ImGui_Cursor.activateWindow (active);
; 4575 :   };
; 4576 : 
; 4577 : 
; 4578 :   switch (uMsg)

	cmp	esi, 512				; 00000200H
	ja	$LN128@SK_DetourW
	je	$LN98@SK_DetourW
$LN155@SK_DetourW:
	mov	cl, BYTE PTR ?game_window@@3Usk_window_s@@A+17
$LN153@SK_DetourW:
	lea	eax, DWORD PTR [esi-33]
	cmp	eax, 241				; 000000f1H
	ja	$LN89@SK_DetourW
	movzx	eax, BYTE PTR $LN154@SK_DetourW[eax]
	jmp	DWORD PTR $LN174@SK_DetourW[eax*4]
$LN27@SK_DetourW:

; 4579 :   {
; 4580 :     case WM_SYSCOMMAND:
; 4581 :       if ((wParam & 0xfff0) == SC_KEYMENU && lParam == 0) // Disable ALT application menu

	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65520				; 0000fff0H
	cmp	eax, 61696				; 0000f100H
	jne	$LN89@SK_DetourW
	test	edi, edi
	jne	$LN89@SK_DetourW
$LN171@SK_DetourW:
	pop	edi

; 4582 :         return 0;

	xor	eax, eax
	pop	esi

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN29@SK_DetourW:

; 4583 :       break;
; 4584 : 
; 4585 :     // Ignore (and physically remove) this event from the message queue if background_render = true
; 4586 :     case WM_MOUSEACTIVATE:
; 4587 :     {
; 4588 :       if ( reinterpret_cast <HWND> (wParam) == game_window.hWnd )

	mov	eax, DWORD PTR _wParam$[ebp]

; 4589 :       {
; 4590 :         ActivateWindow (true);

	lea	ecx, DWORD PTR _ActivateWindow$[ebp]
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN30@SK_DetourW
	push	1
	call	??R<lambda_ef5a5d55df29ca77b1ac13434a2f0c31>@@QBEX_N@Z ; <lambda_ef5a5d55df29ca77b1ac13434a2f0c31>::operator()

; 4591 : 
; 4592 :         if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	$LN89@SK_DetourW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	$LN89@SK_DetourW

; 4593 :         {
; 4594 :           SK_LOG2 ( ( L"WM_MOUSEACTIVATE ==> Activate and Eat" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN33@SK_DetourW
	push	OFFSET $SG281785
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN33@SK_DetourW:

; 4595 :                       L"Window Mgr" );
; 4596 :           return MA_ACTIVATEANDEAT;

	pop	edi
	mov	eax, 2
	pop	esi

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN30@SK_DetourW:

; 4597 :         }
; 4598 :       }
; 4599 : 
; 4600 :       else
; 4601 :       {
; 4602 :         ActivateWindow (false);

	push	0
	call	??R<lambda_ef5a5d55df29ca77b1ac13434a2f0c31>@@QBEX_N@Z ; <lambda_ef5a5d55df29ca77b1ac13434a2f0c31>::operator()

; 4603 : 
; 4604 :         // Game window was deactivated, but the game doesn't need to know this!
; 4605 :         //   in fact, it needs to be told the opposite.
; 4606 :         if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	$LN34@SK_DetourW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	$LN34@SK_DetourW

; 4607 :         {
; 4608 :           SK_LOG2 ( ( L"WM_MOUSEACTIVATE (Other Window) ==> Activate" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN35@SK_DetourW
	push	OFFSET $SG281788
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN35@SK_DetourW:

; 4609 :                       L"Window Mgr" );
; 4610 :           return MA_ACTIVATE;

	pop	edi
	mov	eax, 1
	pop	esi

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN49@SK_DetourW:

; 4677 : 
; 4678 :           case WA_INACTIVE:
; 4679 :           {
; 4680 :             activate = ( lParam                           == 0                ) ||

	test	edi, edi
	je	SHORT $LN125@SK_DetourW
	mov	BYTE PTR _activate$6[ebp], 0
	cmp	edi, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	SHORT $LN126@SK_DetourW
$LN125@SK_DetourW:
	mov	BYTE PTR _activate$6[ebp], 1
$LN126@SK_DetourW:

; 4681 :                        ( reinterpret_cast <HWND> (lParam) == game_window.hWnd );
; 4682 :             source   = L"(WM_ACTIVATE [ WA_INACTIVE ])";

	mov	DWORD PTR _source$1$[ebp], OFFSET $SG281808
$LN164@SK_DetourW:

; 4683 :             ActivateWindow (activate);

	push	DWORD PTR _activate$6[ebp]
	lea	ecx, DWORD PTR _ActivateWindow$[ebp]
	call	??R<lambda_ef5a5d55df29ca77b1ac13434a2f0c31>@@QBEX_N@Z ; <lambda_ef5a5d55df29ca77b1ac13434a2f0c31>::operator()

; 4684 :           } break;
; 4685 :         }
; 4686 : 
; 4687 :         switch (last_active)

	movzx	eax, BYTE PTR ?last_active@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA
	sub	eax, 0
	je	SHORT $LN53@SK_DetourW
	sub	eax, 1
	jne	SHORT $LN55@SK_DetourW

; 4688 :         {
; 4689 :           case true:
; 4690 :             if (! activate)

	cmp	BYTE PTR _activate$6[ebp], al
	jne	SHORT $LN55@SK_DetourW

; 4691 :             {
; 4692 :               SK_LOG2 ( ( L"Application Deactivated %s", source ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN55@SK_DetourW
	push	DWORD PTR _source$1$[ebp]
	push	OFFSET $SG281812

; 4693 :                           L"Window Mgr" );
; 4694 :             }
; 4695 :             break;

	jmp	SHORT $LN165@SK_DetourW
$LN53@SK_DetourW:

; 4696 : 
; 4697 :           case false:
; 4698 :             if (activate)

	cmp	BYTE PTR _activate$6[ebp], 0
	je	SHORT $LN55@SK_DetourW

; 4699 :             {
; 4700 :               SK_LOG2 ( ( L"Application Activated %s", source ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN55@SK_DetourW
	push	DWORD PTR _source$1$[ebp]
	push	OFFSET $SG281816
$LN165@SK_DetourW:
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN55@SK_DetourW:

; 4701 :                           L"Window Mgr" );
; 4702 :             }
; 4703 :             break;
; 4704 :         }
; 4705 : 
; 4706 :         if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN56@SK_DetourW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	jne	$LN173@SK_DetourW
$LN56@SK_DetourW:

; 4707 :         {
; 4708 :           return 1;
; 4709 :         }
; 4710 : 
; 4711 :         if (! activate)

	cmp	BYTE PTR _activate$6[ebp], 0
	jne	$LN89@SK_DetourW
$LN34@SK_DetourW:

; 4712 :           SK_GetCurrentRenderBackend ().fullscreen_exclusive = false;

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	mov	BYTE PTR [eax+48], 0
	jmp	$LN89@SK_DetourW
$LN39@SK_DetourW:

; 4623 :       {
; 4624 :         if (wParam != FALSE)

	cmp	DWORD PTR _wParam$[ebp], 0
	je	SHORT $LN40@SK_DetourW

; 4625 :         {
; 4626 :           if (last_active == false)

	cmp	BYTE PTR ?last_active@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, 0
	jne	SHORT $LN43@SK_DetourW

; 4627 :             SK_LOG3 ( ( L"Application Activated (Non-Client)" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 3
	jl	SHORT $LN43@SK_DetourW
	push	OFFSET $SG281797
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN43@SK_DetourW:

; 4628 :                         L"Window Mgr" );
; 4629 : 
; 4630 :           ActivateWindow (true);

	push	1
	lea	ecx, DWORD PTR _ActivateWindow$[ebp]
	call	??R<lambda_ef5a5d55df29ca77b1ac13434a2f0c31>@@QBEX_N@Z ; <lambda_ef5a5d55df29ca77b1ac13434a2f0c31>::operator()

; 4631 :         }
; 4632 : 
; 4633 :         else

	jmp	$LN89@SK_DetourW
$LN40@SK_DetourW:

; 4634 :         {
; 4635 :           if (last_active == true)

	cmp	BYTE PTR ?last_active@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, 1
	jne	SHORT $LN45@SK_DetourW

; 4636 :             SK_LOG3 ( ( L"Application Deactivated (Non-Client)" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 3
	jl	SHORT $LN45@SK_DetourW
	push	OFFSET $SG281800
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN45@SK_DetourW:

; 4637 :                         L"Window Mgr" );
; 4638 : 
; 4639 :           ActivateWindow (false);

	push	0
	lea	ecx, DWORD PTR _ActivateWindow$[ebp]
	call	??R<lambda_ef5a5d55df29ca77b1ac13434a2f0c31>@@QBEX_N@Z ; <lambda_ef5a5d55df29ca77b1ac13434a2f0c31>::operator()

; 4640 : 
; 4641 :           // We must fully consume one of these messages or audio will stop playing
; 4642 :           //   when the game loses focus, so do not simply pass this through to the
; 4643 :           //     default window procedure.
; 4644 :           if ( (! SK_GetCurrentRenderBackend ().fullscreen_exclusive) &&

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN34@SK_DetourW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	$LN34@SK_DetourW

; 4645 :                   config.window.background_render
; 4646 :              )
; 4647 :           {
; 4648 :             game_window.CallProc (

	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	ecx, OFFSET ?game_window@@3Usk_window_s@@A ; game_window
	push	eax
	push	1
	push	esi
	push	eax
	call	?CallProc@sk_window_s@@QAEJPAUHWND__@@IIJ@Z ; sk_window_s::CallProc

; 4649 :               hWnd,
; 4650 :                 uMsg,
; 4651 :                   TRUE,
; 4652 :                     reinterpret_cast <LPARAM> (hWnd) );
; 4653 : 
; 4654 :             return DefWindowProcW (hWnd, uMsg, wParam, lParam);;

	push	edi
	push	0
	jmp	$LN166@SK_DetourW
$LN59@SK_DetourW:
	cmp	DWORD PTR [edi+24], 2

; 4713 :       }
; 4714 :     } break;
; 4715 : 
; 4716 :     case WM_NCCALCSIZE:
; 4717 :       break;
; 4718 : 
; 4719 :     case WM_WINDOWPOSCHANGING:
; 4720 :     {
; 4721 :       auto wnd_pos =
; 4722 :         reinterpret_cast <LPWINDOWPOS> (lParam);
; 4723 : 
; 4724 :       if (wnd_pos->flags ^ SWP_NOMOVE)

	je	SHORT $LN156@SK_DetourW

; 4725 :       {
; 4726 :         int width  = game_window.game.window.right  - game_window.game.window.left;
; 4727 :         int height = game_window.game.window.bottom - game_window.game.window.top;
; 4728 : 
; 4729 :         game_window.game.window.left   = wnd_pos->x;

	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+60
	sub	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+52
	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+64
	sub	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+56
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$3[ebp], eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+52, eax

; 4730 :         game_window.game.window.top    = wnd_pos->y;

	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$4[ebp], eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+56, eax

; 4731 : 
; 4732 :         game_window.game.window.right  = wnd_pos->x + width;

	mov	eax, DWORD PTR [edi+8]
	add	eax, ecx

; 4733 :         game_window.game.window.bottom = wnd_pos->y + height;

	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A$3[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+60, eax
	mov	eax, DWORD PTR [edi+12]
	add	eax, edx
	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A$4[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+64, eax
	jmp	SHORT $LN60@SK_DetourW
$LN156@SK_DetourW:
	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+56
	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+52
$LN60@SK_DetourW:
	cmp	DWORD PTR [edi+24], 1

; 4734 :       }
; 4735 : 
; 4736 :       if (wnd_pos->flags ^ SWP_NOSIZE)

	je	SHORT $LN61@SK_DetourW

; 4737 :       {
; 4738 :         game_window.game.window.right  = game_window.game.window.left + wnd_pos->cx;

	mov	eax, DWORD PTR [edi+16]
	add	eax, ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+60, eax

; 4739 :         game_window.game.window.bottom = game_window.game.window.top  + wnd_pos->cy;

	mov	eax, DWORD PTR [edi+20]
	add	eax, edx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+64, eax
$LN61@SK_DetourW:

; 4740 :       }
; 4741 : 
; 4742 :       if (config.window.borderless && (wnd_pos->flags & SWP_FRAMECHANGED))

	mov	al, BYTE PTR ?config@@3Usk_config_t@@A+744
	test	al, al
	je	$LN89@SK_DetourW
	test	BYTE PTR [edi+24], 32			; 00000020H
	je	SHORT $LN62@SK_DetourW

; 4743 :         SK_AdjustBorder ();

	call	?SK_AdjustBorder@@YAXXZ			; SK_AdjustBorder
	mov	al, BYTE PTR ?config@@3Usk_config_t@@A+744
$LN62@SK_DetourW:

; 4744 : 
; 4745 :       //game_window.game.client = game_window.game.window;
; 4746 : 
; 4747 :       // Filter this message
; 4748 :       if (config.window.borderless && config.window.fullscreen)

	test	al, al

; 4749 :         return DefWindowProcW (hWnd, uMsg, wParam, lParam);;

	jmp	$LN168@SK_DetourW
$LN64@SK_DetourW:

; 4750 :     } break;
; 4751 : 
; 4752 :     
; 4753 :     case WM_WINDOWPOSCHANGED:
; 4754 :     {
; 4755 :       // Unconditionally doing this tends to anger Obduction :)
; 4756 :       //ImGui_ImplDX11_InvalidateDeviceObjects ();
; 4757 : 
; 4758 :       auto wnd_pos =
; 4759 :         reinterpret_cast <LPWINDOWPOS> (lParam);
; 4760 : 
; 4761 :       GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 4762 :       GetClientRect_Original (game_window.hWnd, &game_window.actual.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+84
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 4763 : 
; 4764 :       //game_window.game.client = game_window.actual.client;
; 4765 :       //game_window.game.window = game_window.actual.window;
; 4766 : 
; 4767 :       if (((wnd_pos->flags ^ SWP_NOMOVE) || (wnd_pos->flags ^ SWP_NOSIZE)))
; 4768 :       {
; 4769 :         bool offset = false;
; 4770 : 
; 4771 :         // Test for user-defined position; if it exists, then we must
; 4772 :         //   respond to all WM_WINDOWPOSCHANGED messages indicating window movement
; 4773 :         if ( config.window.offset.x.absolute                 || config.window.offset.y.absolute ||
; 4774 :              ( config.window.offset.x.percent >  0.000001f ||
; 4775 :                config.window.offset.x.percent < -0.000001f ) ||

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+748, 0
	mov	BYTE PTR _offset$1$[ebp], 0
	jne	SHORT $LN69@SK_DetourW
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+756, 0
	jne	SHORT $LN69@SK_DetourW
	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+752
	movss	xmm1, DWORD PTR __real@358637bd
	comiss	xmm0, xmm1
	ja	SHORT $LN69@SK_DetourW
	movss	xmm2, DWORD PTR __real@b58637bd
	comiss	xmm2, xmm0
	ja	SHORT $LN69@SK_DetourW
	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+760
	comiss	xmm0, xmm1
	ja	SHORT $LN69@SK_DetourW
	comiss	xmm2, xmm0
	jbe	SHORT $LN67@SK_DetourW
$LN69@SK_DetourW:

; 4776 :              ( config.window.offset.y.percent >  0.000001f ||
; 4777 :                config.window.offset.y.percent < -0.000001f )
; 4778 :            )
; 4779 :           offset = true;

	mov	BYTE PTR _offset$1$[ebp], 1
$LN67@SK_DetourW:
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	mov	ecx, DWORD PTR ?config@@3Usk_config_t@@A+772
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 4781 :         bool temp_override = false;

	xor	dl, dl
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+776
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 4781 :         bool temp_override = false;

	mov	BYTE PTR _temp_override$1$[ebp], dl
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	test	ecx, ecx
	jne	SHORT $LN70@SK_DetourW
	test	eax, eax
	jne	SHORT $LN70@SK_DetourW
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 4786 :                temp_override = true;

	lea	eax, DWORD PTR _client$3[ebp]
	mov	BYTE PTR _temp_override$1$[ebp], 1

; 4787 :           RECT client        = {  };
; 4788 : 
; 4789 :           GetClientRect_Original (game_window.hWnd, &client);

	push	eax
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	xorps	xmm0, xmm0
	movups	XMMWORD PTR _client$3[ebp], xmm0
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 4790 : 
; 4791 :           config.window.res.override.x = client.right  - client.left;

	mov	ecx, DWORD PTR _client$3[ebp+8]
	sub	ecx, DWORD PTR _client$3[ebp]

; 4792 :           config.window.res.override.y = client.bottom - client.top;

	mov	eax, DWORD PTR _client$3[ebp+12]
	sub	eax, DWORD PTR _client$3[ebp+4]
	mov	dl, BYTE PTR _temp_override$1$[ebp]
	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, ecx
	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, eax
$LN70@SK_DetourW:

; 4793 :         }
; 4794 : 
; 4795 :         if (config.window.center)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+746, 0
	je	SHORT $LN71@SK_DetourW

; 4796 :           SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow
	jmp	SHORT $LN75@SK_DetourW
$LN71@SK_DetourW:

; 4797 : 
; 4798 :         else if (offset                                                      && (wnd_pos->flags ^ SWP_NOMOVE))

	cmp	BYTE PTR _offset$1$[ebp], 0
	je	SHORT $LN73@SK_DetourW
	cmp	DWORD PTR [edi+24], 2
	je	SHORT $LN73@SK_DetourW

; 4799 :           SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow

; 4800 : 
; 4801 :         else if ((! (config.window.res.override.isZero () || temp_override)) && (wnd_pos->flags ^ SWP_NOSIZE))

	jmp	SHORT $LN75@SK_DetourW
$LN73@SK_DetourW:
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	test	ecx, ecx
	jne	SHORT $LN140@SK_DetourW
	test	eax, eax
	jne	SHORT $LN140@SK_DetourW
$LN75@SK_DetourW:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 4804 :         if (temp_override)

	mov	al, BYTE PTR _temp_override$1$[ebp]
	test	al, al
	je	SHORT $LN76@SK_DetourW
$LN143@SK_DetourW:

; 4805 :         {
; 4806 :           config.window.res.override.x = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, 0

; 4807 :           config.window.res.override.y = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, 0
$LN76@SK_DetourW:

; 4808 :         }
; 4809 : 
; 4810 :         if (config.window.unconfine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	je	SHORT $LN77@SK_DetourW

; 4811 :           ClipCursor_Original (nullptr);

	push	0
	jmp	SHORT $LN167@SK_DetourW
$LN140@SK_DetourW:

; 4800 : 
; 4801 :         else if ((! (config.window.res.override.isZero () || temp_override)) && (wnd_pos->flags ^ SWP_NOSIZE))

	test	dl, dl
	jne	SHORT $LN143@SK_DetourW
	cmp	DWORD PTR [edi+24], 1
	je	SHORT $LN76@SK_DetourW

; 4802 :           SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow

; 4804 :         if (temp_override)

	jmp	SHORT $LN76@SK_DetourW
$LN77@SK_DetourW:

; 4812 : 
; 4813 :         else if (config.window.confine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+766, 0
	je	SHORT $LN79@SK_DetourW

; 4814 :           ClipCursor_Original (&game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
$LN167@SK_DetourW:
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN79@SK_DetourW:

; 4815 :       }
; 4816 : 
; 4817 :       // Filter this message
; 4818 :       if (config.window.borderless && config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	$LN89@SK_DetourW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	$LN89@SK_DetourW
$LN173@SK_DetourW:
	pop	edi

; 4819 :         return 1;

	mov	eax, 1
	pop	esi

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN90@SK_DetourW:

; 4850 :           return DefWindowProcW (hWnd, uMsg, wParam, lParam);;
; 4851 :         break;
; 4852 : 
; 4853 : 
; 4854 :     case WM_KEYDOWN:
; 4855 :     case WM_SYSKEYDOWN:
; 4856 :       if (game_window.active)
; 4857 :       {
; 4858 :         if (SK_Console::getInstance ()->KeyDown (wParam & 0xFF, lParam) && (uMsg != WM_SYSKEYDOWN))

	push	edi
	push	DWORD PTR _wParam$[ebp]
	test	cl, cl
	je	$LN166@SK_DetourW
	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance
	mov	ecx, eax
	call	?KeyDown@SK_Console@@QAEHEJ@Z		; SK_Console::KeyDown
	test	eax, eax
	je	$LN89@SK_DetourW
	cmp	esi, 260				; 00000104H

; 4859 :         {
; 4860 :           return SK_COMPAT_SafeCallProc (&game_window, hWnd, uMsg, wParam, lParam);

	jmp	SHORT $LN172@SK_DetourW
$LN94@SK_DetourW:

; 4861 :         }
; 4862 :       }
; 4863 :       else
; 4864 :         return DefWindowProcW (hWnd, uMsg, wParam, lParam);
; 4865 :       break;
; 4866 : 
; 4867 :     case WM_KEYUP:
; 4868 :     case WM_SYSKEYUP:
; 4869 :       if (game_window.active)
; 4870 :       {
; 4871 :         if (SK_Console::getInstance ()->KeyUp (wParam & 0xFF, lParam) && (uMsg != WM_SYSKEYUP))

	push	edi
	push	DWORD PTR _wParam$[ebp]
	test	cl, cl
	je	$LN166@SK_DetourW
	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance
	mov	ecx, eax
	call	?KeyUp@SK_Console@@QAEHEJ@Z		; SK_Console::KeyUp
	test	eax, eax
	je	$LN89@SK_DetourW
	cmp	esi, 261				; 00000105H
$LN172@SK_DetourW:
	je	SHORT $LN89@SK_DetourW

; 4872 :         {
; 4873 :           return SK_COMPAT_SafeCallProc (&game_window, hWnd, uMsg, wParam, lParam);

	push	edi
	push	DWORD PTR _wParam$[ebp]
	push	esi
	push	DWORD PTR _hWnd$[ebp]
	push	OFFSET ?game_window@@3Usk_window_s@@A	; game_window
	call	?SK_COMPAT_SafeCallProc@@YAJPAUsk_window_s@@PAUHWND__@@IIJ@Z ; SK_COMPAT_SafeCallProc
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN100@SK_DetourW:

; 4884 : 
; 4885 :     case WM_INPUT:
; 4886 :       if (! game_window.active)

	test	cl, cl
	jne	SHORT $LN89@SK_DetourW

; 4887 :         return DefWindowProcW (hWnd, uMsg, wParam, lParam);

	jmp	$LN113@SK_DetourW
$LN98@SK_DetourW:

; 4874 :         }
; 4875 :       }
; 4876 :       else
; 4877 :         return DefWindowProcW (hWnd, uMsg, wParam, lParam);
; 4878 :       break;
; 4879 : 
; 4880 :     case WM_MOUSEMOVE:
; 4881 :       if (! game_window.active)

	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, 0
	jne	SHORT $LN89@SK_DetourW

; 4882 :         GetCursorPos_Original (&game_window.cursor_pos);

	push	OFFSET ?game_window@@3Usk_window_s@@A+184
	call	DWORD PTR ?GetCursorPos_Original@@3P6GHPAUtagPOINT@@@ZA ; GetCursorPos_Original

; 4883 :       break;

	jmp	SHORT $LN89@SK_DetourW
$LN128@SK_DetourW:

; 4464 : 
; 4465 :       else
; 4466 :         ActivateCursor ();
; 4467 :     }
; 4468 :   }
; 4469 : 
; 4470 : 
; 4471 :   auto ActivateWindow =[&](bool active = false)
; 4472 :   {
; 4473 :     bool state_changed =
; 4474 :       (game_window.active != active);
; 4475 : 
; 4476 :     game_window.active = active;
; 4477 : 
; 4478 :     if (state_changed)
; 4479 :     {
; 4480 :       SK_Console::getInstance ()->reset ();
; 4481 : 
; 4482 :       if (config.window.background_mute)
; 4483 :         SK_WindowManager::getInstance ()->muteGame ((! active));
; 4484 : 
; 4485 :       // Keep Unity games from crashing at startup when forced into FULLSCREEN
; 4486 :       //
; 4487 :       //  ... also prevents a game from staying topmost when you Alt+Tab
; 4488 :       //
; 4489 : 
; 4490 :       if ( active && config.display.force_fullscreen &&
; 4491 :            ( static_cast <int> (SK_GetCurrentRenderBackend ().api)  &
; 4492 :              static_cast <int> (SK_RenderAPI::D3D9               )
; 4493 :            )
; 4494 :          )
; 4495 :       {
; 4496 :         SetWindowLongPtrW    (game_window.hWnd, GWL_EXSTYLE,
; 4497 :          ( GetWindowLongPtrW (game_window.hWnd, GWL_EXSTYLE) & ~(WS_EX_TOPMOST | WS_EX_NOACTIVATE)
; 4498 :          ) | WS_EX_APPWINDOW );
; 4499 :         //SetWindowPos      (game_window.hWnd, HWND_NOTOPMOST, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4500 :         //                                                                 SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4501 :         //                                                                 SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE );
; 4502 :         //SetWindowPos      (game_window.hWnd, HWND_TOP, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 4503 :         //                                                           SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 4504 :         //                                                           SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE | SWP_NOZORDER );
; 4505 : 
; 4506 :         extern void
; 4507 :         SK_D3D9_TriggerReset (bool);
; 4508 :       
; 4509 :         SK_D3D9_TriggerReset (false);
; 4510 :       }
; 4511 :     }
; 4512 : 
; 4513 : 
; 4514 :     if (active && state_changed)
; 4515 :     {
; 4516 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)
; 4517 :       {
; 4518 :         if (! game_window.cursor_visible)
; 4519 :         {
; 4520 :           while (ShowCursor (FALSE) >= 0)
; 4521 :             ;
; 4522 :         }
; 4523 : 
; 4524 :         ClipCursor_Original (&game_window.cursor_clip);
; 4525 :       }
; 4526 :     }
; 4527 : 
; 4528 :     else if ((! active) && state_changed)
; 4529 :     {
; 4530 :       if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)
; 4531 :       {
; 4532 :         game_window.cursor_visible =
; 4533 :           ShowCursor (TRUE) >= 1;
; 4534 : 
; 4535 :         while (ShowCursor (TRUE) < 0)
; 4536 :           ;
; 4537 : 
; 4538 :         ClipCursor_Original (nullptr);
; 4539 :       }
; 4540 :     }
; 4541 : 
; 4542 : 
; 4543 :     if (config.window.confine_cursor && state_changed)
; 4544 :     {
; 4545 :       if (active)
; 4546 :       {
; 4547 :         SK_LOG4 ( ( L"Confining Mouse Cursor" ),
; 4548 :                     L"Window Mgr" );
; 4549 : 
; 4550 :         ////// XXX: Is this really necessary? State should be consistent unless we missed
; 4551 :         //////        an event --- Write unit test?
; 4552 :         GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);
; 4553 :         ClipCursor_Original    (&game_window.actual.window);
; 4554 :       }
; 4555 : 
; 4556 :       else
; 4557 :       {
; 4558 :         SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),
; 4559 :                     L"Window Mgr" );
; 4560 : 
; 4561 :         ClipCursor_Original (nullptr);
; 4562 :       }
; 4563 :     }
; 4564 : 
; 4565 :     if (config.window.unconfine_cursor && state_changed)
; 4566 :     {
; 4567 :       SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),
; 4568 :                   L"Window Mgr" );
; 4569 :       
; 4570 :       ClipCursor_Original (nullptr);
; 4571 :     }
; 4572 : 
; 4573 :     if (state_changed)
; 4574 :       SK_ImGui_Cursor.activateWindow (active);
; 4575 :   };
; 4576 : 
; 4577 : 
; 4578 :   switch (uMsg)

	mov	eax, esi
	sub	eax, 532				; 00000214H
	je	SHORT $LN87@SK_DetourW
	sub	eax, 2
	jne	SHORT $LN89@SK_DetourW
$LN87@SK_DetourW:

; 4839 :         return DefWindowProcW (hWnd, uMsg, wParam, lParam);;
; 4840 :       break;
; 4841 : 
; 4842 : 
; 4843 :       case WM_SIZING:
; 4844 :       case WM_MOVING:
; 4845 :         if (config.window.unconfine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	je	SHORT $LN88@SK_DetourW

; 4846 :           ClipCursor_Original (nullptr);

	push	0
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN88@SK_DetourW:

; 4847 : 
; 4848 :         // Filter this message
; 4849 :         if (config.window.borderless && config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	SHORT $LN89@SK_DetourW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	jne	$LN113@SK_DetourW
$LN89@SK_DetourW:

; 4888 :       break;
; 4889 :   }
; 4890 : 
; 4891 :          bool handled = false;
; 4892 :   static bool eqgame  =

	mov	ecx, DWORD PTR tv1297[ebp]
	mov	eax, DWORD PTR ?$TSS1@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jle	SHORT $LN9@SK_DetourW
	push	OFFSET ?$TSS1@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS1@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA, -1
	jne	SHORT $LN9@SK_DetourW

; 4893 :     wcsstr (SK_GetHostApp (), L"eqgame.exe");

	push	OFFSET $SG281863
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	DWORD PTR __imp__wcsstr
	test	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS1@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
	setne	BYTE PTR ?eqgame@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA
	call	__Init_thread_footer
	add	esp, 12					; 0000000cH
$LN9@SK_DetourW:

; 4894 : 
; 4895 :   if (uMsg == WM_INPUT)

	cmp	esi, 255				; 000000ffH
	jne	SHORT $LN103@SK_DetourW

; 4896 :   {
; 4897 :     if (ImGui_WndProcHandler (hWnd, uMsg, wParam, lParam))

	push	edi
	push	DWORD PTR _wParam$[ebp]
	push	esi
	push	DWORD PTR _hWnd$[ebp]
	call	?ImGui_WndProcHandler@@YGJPAUHWND__@@IIJ@Z ; ImGui_WndProcHandler
	test	eax, eax
	jne	$LN171@SK_DetourW
$LN103@SK_DetourW:

; 4898 :       return 0;
; 4899 :   }
; 4900 : 
; 4901 :   if (eqgame)

	mov	al, BYTE PTR ?eqgame@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA
	test	al, al
	je	SHORT $LN147@SK_DetourW

; 4902 :   {
; 4903 :     handled =

	push	edi
	push	DWORD PTR _wParam$[ebp]
	push	esi
	push	DWORD PTR _hWnd$[ebp]
	call	?ImGui_WndProcHandler@@YGJPAUHWND__@@IIJ@Z ; ImGui_WndProcHandler
	test	eax, eax
	setne	al

; 4904 :       ImGui_WndProcHandler (hWnd, uMsg, wParam, lParam);
; 4905 :   }
; 4906 : 
; 4907 : 
; 4908 : 
; 4909 :   // Synaptics Touchpad Compat Hack:
; 4910 :   // -------------------------------
; 4911 :   //
; 4912 :   //  PROBLEM:    Driver only generates window messages for mousewheel, it does
; 4913 :   //                not activate RawInput, DirectInput or HID like a real mouse
; 4914 :   //
; 4915 :   //  WORKAROUND: Generate a full-blown input event using SendInput (...); be
; 4916 :   //                aware that this event will generate ANOTHER WM_MOUSEWHEEL.
; 4917 :   //
; 4918 :   //    ** MUST handle recursive behavior caused by this fix-up **
; 4919 :   //
; 4920 :   static bool recursive_wheel = false;
; 4921 : 
; 4922 :   // Dual purpose: This also catches any WM_MOUSEWHEEL messages that Synaptics
; 4923 :   //                 issued through CallWindowProc (...) rather than
; 4924 :   //                   SendMessage (...) / PostMessage (...) -- UGH.
; 4925 :   //
; 4926 :   //      >> We need to process those for ImGui <<
; 4927 :   //
; 4928 :   if ((! handled) && uMsg == WM_MOUSEWHEEL && (! recursive_wheel))

	test	al, al
	jne	SHORT $LN105@SK_DetourW
	mov	al, BYTE PTR ?eqgame@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA
$LN147@SK_DetourW:
	cmp	esi, 522				; 0000020aH
	jne	SHORT $LN105@SK_DetourW
	cmp	BYTE PTR ?recursive_wheel@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, 0
	jne	SHORT $LN148@SK_DetourW

; 4929 :   {
; 4930 :     if (! eqgame)

	test	al, al
	jne	SHORT $LN149@SK_DetourW

; 4931 :       handled = ImGui_WndProcHandler (hWnd, uMsg, wParam, lParam);

	push	edi
	push	DWORD PTR _wParam$[ebp]
	push	esi
	push	DWORD PTR _hWnd$[ebp]
	call	?ImGui_WndProcHandler@@YGJPAUHWND__@@IIJ@Z ; ImGui_WndProcHandler
	test	eax, eax
	setne	al

; 4932 : 
; 4933 :     if ((! handled) && config.input.mouse.fix_synaptics)

	test	al, al
	jne	SHORT $LN151@SK_DetourW
$LN149@SK_DetourW:
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+728, 0
	je	SHORT $LN151@SK_DetourW

; 4934 :     {
; 4935 :       INPUT input        = { };
; 4936 : 
; 4937 :       input.type         = INPUT_MOUSE;
; 4938 :       input.mi.dwFlags   = MOUSEEVENTF_WHEEL;
; 4939 :       input.mi.mouseData = GET_WHEEL_DELTA_WPARAM (wParam);

	mov	eax, DWORD PTR _wParam$[ebp]
	xorps	xmm0, xmm0
	shr	eax, 16					; 00000010H
	cwde
	movups	XMMWORD PTR _input$2[ebp], xmm0
	mov	DWORD PTR _input$2[ebp+12], eax

; 4940 : 
; 4941 :       recursive_wheel    = true;
; 4942 : 
; 4943 :       SendInput_Original (1, &input, sizeof INPUT);

	lea	eax, DWORD PTR _input$2[ebp]
	push	28					; 0000001cH
	push	eax
	movq	QWORD PTR _input$2[ebp+16], xmm0
	push	1
	mov	DWORD PTR _input$2[ebp+24], 0
	mov	DWORD PTR _input$2[ebp], 0
	mov	DWORD PTR _input$2[ebp+16], 2048	; 00000800H
	mov	BYTE PTR ?recursive_wheel@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, 1
	call	DWORD PTR ?SendInput_Original@@3P6GIIPAUtagINPUT@@H@ZA ; SendInput_Original

; 4944 :     }
; 4945 :   }

	jmp	SHORT $LN151@SK_DetourW
$LN105@SK_DetourW:

; 4946 : 
; 4947 :   // In-lieu of a proper fence, this solves the recursion problem.
; 4948 :   //
; 4949 :   //   There's no guarantee the message we are ignoring is the one we
; 4950 :   //     generated, but one misplaced message won't kill anything.
; 4951 :   //
; 4952 :   else if (recursive_wheel && uMsg == WM_MOUSEWHEEL)

	cmp	BYTE PTR ?recursive_wheel@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, 0
	je	SHORT $LN109@SK_DetourW
	cmp	esi, 522				; 0000020aH
	jne	SHORT $LN109@SK_DetourW
$LN148@SK_DetourW:

; 4953 :     recursive_wheel = false;

	mov	BYTE PTR ?recursive_wheel@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4_NA, 0

; 4954 : 
; 4955 : 
; 4956 : 
; 4957 :   //
; 4958 :   // Squelch input messages that managed to get into the loop without triggering
; 4959 :   //   filtering logic in the GetMessage (...), PeekMessage (...) and
; 4960 :   //     DispatchMessage (...) hooks.
; 4961 :   //
; 4962 :   //   [ Mostly for EverQuest ]
; 4963 :   //
; 4964 :   if (uMsg >= WM_MOUSEFIRST && uMsg <= WM_MOUSELAST && SK_ImGui_WantMouseCapture    ())

	jmp	SHORT $LN151@SK_DetourW
$LN109@SK_DetourW:
	cmp	esi, 512				; 00000200H
	jb	SHORT $LN110@SK_DetourW
	cmp	esi, 526				; 0000020eH
	ja	SHORT $LN110@SK_DetourW
$LN151@SK_DetourW:
	call	?SK_ImGui_WantMouseCapture@@YA_NXZ	; SK_ImGui_WantMouseCapture
	test	al, al
	jne	SHORT $LN170@SK_DetourW
$LN110@SK_DetourW:

; 4965 :     return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);
; 4966 : 
; 4967 :   if (uMsg >= WM_KEYFIRST   && uMsg <= WM_KEYLAST   && SK_ImGui_WantKeyboardCapture ())

	lea	eax, DWORD PTR [esi-256]
	cmp	eax, 9
	ja	SHORT $LN111@SK_DetourW
	call	?SK_ImGui_WantKeyboardCapture@@YA_NXZ	; SK_ImGui_WantKeyboardCapture
	test	al, al
	jne	SHORT $LN170@SK_DetourW
$LN111@SK_DetourW:

; 4968 :     return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);
; 4969 : 
; 4970 :   if (uMsg == WM_INPUT      && SK_ImGui_WantGamepadCapture ())

	cmp	esi, 255				; 000000ffH
	jne	SHORT $LN112@SK_DetourW
	call	?SK_ImGui_WantGamepadCapture@@YA_NXZ	; SK_ImGui_WantGamepadCapture
	test	al, al
	jne	SHORT $LN169@SK_DetourW
$LN112@SK_DetourW:

; 4971 :     return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);
; 4972 : 
; 4973 : 
; 4974 : 
; 4975 :   //
; 4976 :   // DO NOT HOOK THIS FUNCTION outside of SpecialK plug-ins, the ABI is not guaranteed
; 4977 :   //
; 4978 :   if (SK_DetourWindowProc2 (hWnd, uMsg, wParam, lParam))

	push	edi
	push	DWORD PTR _wParam$[ebp]
	push	esi
	push	DWORD PTR _hWnd$[ebp]
	call	?SK_DetourWindowProc2@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc2
	test	eax, eax
	je	$LN113@SK_DetourW

; 4979 :   {
; 4980 :     // Block keyboard input to the game while the console is visible
; 4981 :     if (console_visible)

	cmp	BYTE PTR _console_visible$1$[ebp], 0
	je	SHORT $LN118@SK_DetourW

; 4982 :     {
; 4983 :       if (uMsg >= WM_MOUSEFIRST && uMsg <= WM_MOUSELAST)

	lea	eax, DWORD PTR [esi-512]
	cmp	eax, 14					; 0000000eH
	jbe	SHORT $LN170@SK_DetourW

; 4984 :         return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);
; 4985 : 
; 4986 :       if (uMsg >= WM_KEYFIRST   && uMsg <= WM_KEYLAST)

	lea	eax, DWORD PTR [esi-256]
	cmp	eax, 9
	ja	SHORT $LN117@SK_DetourW
$LN170@SK_DetourW:

; 4987 :         return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);

	push	edi
	push	DWORD PTR _wParam$[ebp]
	push	esi
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+212
	pop	edi
	pop	esi

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN117@SK_DetourW:

; 4988 : 
; 4989 :       // Block RAW Input
; 4990 :       if (uMsg == WM_INPUT)

	cmp	esi, 255				; 000000ffH
	jne	SHORT $LN118@SK_DetourW
$LN169@SK_DetourW:

; 4991 :         return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);

	push	edi
	push	DWORD PTR _wParam$[ebp]
	push	255					; 000000ffH
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+212
	pop	edi
	pop	esi

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN118@SK_DetourW:

; 4997 :   }
; 4998 : 
; 4999 : 
; 5000 :   // Filter this out for fullscreen override safety
; 5001 :   ////if (uMsg == WM_DISPLAYCHANGE)    return 1;//game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);
; 5002 :   ////if (uMsg == WM_WINDOWPOSCHANGED) return game_window.DefWindowProc (hWnd, uMsg, wParam, lParam);
; 5003 : 
; 5004 : 
; 5005 :   LRESULT lRet =
; 5006 :     SK_COMPAT_SafeCallProc (&game_window, hWnd, uMsg, wParam, lParam);

	push	edi
	push	DWORD PTR _wParam$[ebp]
	push	esi
	push	DWORD PTR _hWnd$[ebp]
	push	OFFSET ?game_window@@3Usk_window_s@@A	; game_window
	call	?SK_COMPAT_SafeCallProc@@YAJPAUsk_window_s@@PAUHWND__@@IIJ@Z ; SK_COMPAT_SafeCallProc
	add	esp, 20					; 00000014H

; 5007 : 
; 5008 : 
; 5009 :   // Post-Process the game's result to fix any non-compliant behaviors
; 5010 :   //
; 5011 : 
; 5012 : 
; 5013 :   // Fix for Skyrim SE beeping when Alt is pressed.
; 5014 :   if (uMsg == WM_MENUCHAR && (! HIWORD (lRet)))

	cmp	esi, 288				; 00000120H
	jne	$LN161@SK_DetourW
	mov	ecx, eax
	shr	ecx, 16					; 00000010H
	test	ecx, ecx
	jne	$LN161@SK_DetourW

; 5015 :     return MAKEWPARAM (0, MNC_CLOSE);
; 5016 : 
; 5017 : 
; 5018 :   return lRet;
; 5019 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, 65536				; 00010000H
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN174@SK_DetourW:
	DD	$LN29@SK_DetourW
	DD	$LN59@SK_DetourW
	DD	$LN64@SK_DetourW
	DD	$LN36@SK_DetourW
	DD	$LN100@SK_DetourW
	DD	$LN90@SK_DetourW
	DD	$LN94@SK_DetourW
	DD	$LN27@SK_DetourW
	DD	$LN89@SK_DetourW
$LN154@SK_DetourW:
	DB	0
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	1
	DB	2
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	3
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	4
	DB	5
	DB	6
	DB	8
	DB	8
	DB	5
	DB	6
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	7
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z$0:
	push	OFFSET ?$TSS1@?1??SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z@4HA
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z:
	mov	eax, OFFSET __ehfuncinfo$?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ENDP		; SK_DetourWindowProc
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator!=, COMDAT
; _this$ = ecx

; 301  : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 302  : 		return (!(*this == _Right));
; 303  : 		}

	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator==, COMDAT
; _this$ = ecx

; 286  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 287  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 288  : 		if (this->_Getcont() != _Right._Getcont())
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("list iterators incompatible");
; 291  : 			}
; 292  : 
; 293  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 294  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 295  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 296  : 
; 297  : 		return (this->_Ptr == _Right._Ptr);
; 298  : 		}

	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator++, COMDAT
; _this$ = ecx

; 247  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 248  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 249  : 		++*this;
; 250  : 		return (_Tmp);
; 251  : 		}

	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator++, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 226  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 227  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 228  : 		if (_Mycont == 0
; 229  : 			|| this->_Ptr == nullptr_t{}
; 230  : 			|| this->_Ptr == _Mycont->_Myhead)
; 231  : 			{	// report error
; 232  : 			_DEBUG_ERROR("list iterator not incrementable");
; 233  : 			}
; 234  : 
; 235  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 236  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 237  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 238  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 239  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 240  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 241  : 
; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 243  : 		return (*this);

	mov	eax, ecx

; 244  : 		}

	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEABQAUHWND__@@XZ
_TEXT	SEGMENT
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEABQAUHWND__@@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 207  : 		if (_Mycont == 0
; 208  : 			|| this->_Ptr == nullptr_t{}
; 209  : 			|| this->_Ptr == _Mycont->_Myhead)
; 210  : 			{	// report error
; 211  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 216  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 217  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 218  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 219  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 220  : 
; 221  : 		return (_Mylist::_Myval(this->_Ptr));
; 222  : 		}

	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEABQAUHWND__@@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_Unchecked, COMDAT
; _this$ = ecx

; 199  : 		{	// make an unchecked iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 200  : 		return (_Unchecked_type(this->_Ptr, static_cast<const _Mylist *>(this->_Getcont())));
; 201  : 		}

	pop	ebp
	ret	4
?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >, COMDAT
; _this$ = ecx

; 187  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 188  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAUHWND__@@PAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 97   : 		}

	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator!=, COMDAT
; _this$ = ecx

; 90   : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 91   : 		return (!(*this == _Right));
; 92   : 		}

	pop	ebp
	ret	4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator==, COMDAT
; _this$ = ecx

; 85   : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 86   : 		return (_Ptr == _Right._Ptr);
; 87   : 		}

	pop	ebp
	ret	4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], eax

; 74   : 		return (*this);

	mov	eax, ecx

; 75   : 		}

	ret	0
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 61   : 		return (*this);

	mov	eax, ecx

; 62   : 		}

	ret	0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABQAUHWND__@@XZ
_TEXT	SEGMENT
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABQAUHWND__@@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 50   : 		return (_Mylist::_Myval(_Ptr));
; 51   : 		}

	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABQAUHWND__@@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 45   : 		this->_Adopt(_Plist);
; 46   : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAUHWND__@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 40   : 		}

	mov	eax, ecx
	ret	0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$emplace@AAPAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Val_0>$ = 12						; size = 4
??$emplace@AAPAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::emplace<HWND__ * &>, COMDAT
; _this$ = ecx

; 294  : 		{	// try to insert value_type(_Val...)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, ecx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_0>$[ebp]

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ebx+4]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	lea	ecx, DWORD PTR [ebx+4]

; 96   : 		return (_Ptr);

	mov	edi, DWORD PTR [eax]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@AAPAUHWND__@@@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@1@PAU21@0AAPAUHWND__@@@Z ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Buynode<HWND__ * &>
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [ebx+8]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN53@emplace

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN181@emplace:
$LN53@emplace:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [ebx+8], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	mov	ecx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 347  : 		return (_List._Unchecked_begin());

	mov	eax, DWORD PTR [eax]

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	add	eax, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	push	eax
	push	esi
	call	??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 297  : 		}

	pop	ebp
	ret	8
$LN180@emplace:
??$emplace@AAPAUHWND__@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::emplace<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z
_TEXT	SEGMENT
$T1 = -16						; size = 8
__Ans$2 = -8						; size = 8
$T3 = -4						; size = 4
_hWnd$ = 8						; size = 4
__Where$4 = 12						; size = 4
_active$ = 12						; size = 1
$T5 = 15						; size = 1
_state_changed$1$ = 15					; size = 1
??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z PROC ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator(), COMDAT
; _this$ = ecx

; 781  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx

; 782  :   bool state_changed =
; 783  :     (game_window.active != active);

	mov	ebx, DWORD PTR _active$[ebp]
	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, bl
	push	esi
	setne	al

; 784  : 
; 785  :   game_window.active = active;

	mov	BYTE PTR ?game_window@@3Usk_window_s@@A+17, bl
	mov	BYTE PTR _state_changed$1$[ebp], al

; 786  : 
; 787  :   if (state_changed)

	test	al, al
	je	SHORT $LN8@operator

; 788  :   {
; 789  :     SK_Console::getInstance ()->reset ();

	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance
	mov	ecx, eax
	call	?reset@SK_Console@@QAEXXZ		; SK_Console::reset

; 790  : 
; 791  :     if (config.window.background_mute)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+765, 0
	je	SHORT $LN7@operator

; 792  :       SK_WindowManager::getInstance ()->muteGame ((! active));

	call	?getInstance@SK_WindowManager@@SAPAV1@XZ ; SK_WindowManager::getInstance
	mov	al, bl
	xor	al, 1

; 707  :     SK_SetGameMute (bMute);

	movzx	eax, al
	push	eax
	call	?SK_SetGameMute@@YGX_N@Z		; SK_SetGameMute
$LN7@operator:

; 793  : 
; 794  :     // Keep Unity games from crashing at startup when forced into FULLSCREEN
; 795  :     //
; 796  :     //  ... also prevents a game from staying topmost when you Alt+Tab
; 797  :     //
; 798  : 
; 799  :     if ( active && config.display.force_fullscreen &&

	test	bl, bl
	je	$LN159@operator
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+516, 0
	je	SHORT $LN161@operator
	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	test	BYTE PTR [eax], 8
	je	SHORT $LN161@operator

; 800  :          ( static_cast <int> (SK_GetCurrentRenderBackend ().api)  &
; 801  :            static_cast <int> (SK_RenderAPI::D3D9               )
; 802  :          )
; 803  :        )
; 804  :     {
; 805  :       SetWindowLongPtrW    (game_window.hWnd, GWL_EXSTYLE,

	push	-20					; ffffffecH
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__GetWindowLongW@8
	and	eax, -134217737				; f7fffff7H
	or	eax, 262144				; 00040000H
	push	eax
	push	-20					; ffffffecH
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__SetWindowLongW@12

; 806  :        ( GetWindowLongPtrW (game_window.hWnd, GWL_EXSTYLE) & ~(WS_EX_TOPMOST | WS_EX_NOACTIVATE)
; 807  :        ) | WS_EX_APPWINDOW );
; 808  :       //SetWindowPos      (game_window.hWnd, HWND_NOTOPMOST, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 809  :       //                                                                 SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 810  :       //                                                                 SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE );
; 811  :       //SetWindowPos      (game_window.hWnd, HWND_TOP, 0, 0, 0, 0, SWP_NOSENDCHANGING | SWP_NOMOVE     | SWP_NOSIZE     |
; 812  :       //                                                           SWP_FRAMECHANGED   | SWP_DEFERERASE | SWP_NOCOPYBITS |
; 813  :       //                                                           SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW | SWP_NOACTIVATE | SWP_NOZORDER );
; 814  : 
; 815  :       extern void
; 816  :       SK_D3D9_TriggerReset (bool);
; 817  :     
; 818  :       SK_D3D9_TriggerReset (false);

	push	0
	call	?SK_D3D9_TriggerReset@@YAX_N@Z		; SK_D3D9_TriggerReset
	add	esp, 4
$LN161@operator:
	mov	al, BYTE PTR _state_changed$1$[ebp]
$LN8@operator:

; 819  :     }
; 820  :   }
; 821  : 
; 822  : 
; 823  :   if (active && state_changed)

	test	bl, bl
	je	SHORT $LN151@operator
	test	al, al
	je	$LN15@operator

; 824  :   {
; 825  :     if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	$LN158@operator
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN158@operator

; 826  :     {
; 827  :       if (! game_window.cursor_visible)

	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+192, 0
	jne	SHORT $LN3@operator
	mov	esi, DWORD PTR __imp__ShowCursor@4
	npad	4
$LL2@operator:

; 828  :       {
; 829  :         while (ShowCursor (FALSE) >= 0)

	push	0
	call	esi
	test	eax, eax
	jns	SHORT $LL2@operator
$LN3@operator:

; 830  :           ;
; 831  :       }
; 832  : 
; 833  :       if (! wm_dispatch.moving_windows.count (game_window.hWnd))

	push	OFFSET ?game_window@@3Usk_window_s@@A+4
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A+32
	call	?count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::count
	test	eax, eax
	jne	SHORT $LN158@operator

; 834  :         ClipCursor_Original (&game_window.cursor_clip);

	push	OFFSET ?game_window@@3Usk_window_s@@A+168

; 835  :     }
; 836  :   }

	jmp	SHORT $LN163@operator
$LN159@operator:
	mov	al, BYTE PTR _state_changed$1$[ebp]
$LN151@operator:

; 837  : 
; 838  :   else if ((! active) && state_changed)

	test	al, al
	je	SHORT $LN15@operator

; 839  :   {
; 840  :     if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN158@operator
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN158@operator

; 841  :     {
; 842  :       game_window.cursor_visible =

	mov	esi, DWORD PTR __imp__ShowCursor@4
	push	1
	call	esi
	cmp	eax, 1
	setge	BYTE PTR ?game_window@@3Usk_window_s@@A+192
$LL4@operator:

; 843  :         ShowCursor (TRUE) >= 1;
; 844  : 
; 845  :       while (ShowCursor (TRUE) < 0)

	push	1
	call	esi
	test	eax, eax
	js	SHORT $LL4@operator

; 846  :         ;
; 847  : 
; 848  :       ClipCursor_Original (nullptr);

	push	0
$LN163@operator:
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN158@operator:
	mov	al, BYTE PTR _state_changed$1$[ebp]
$LN15@operator:

; 849  :     }
; 850  :   }
; 851  : 
; 852  : 
; 853  :   if (config.window.confine_cursor && state_changed)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+766, 0
	je	$LN153@operator
	test	al, al
	je	$LN153@operator

; 854  :   {
; 855  :     if (active)

	test	bl, bl
	je	SHORT $LN17@operator

; 856  :     {
; 857  :       SK_LOG4 ( ( L"Confining Mouse Cursor" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN19@operator
	push	OFFSET ??_C@_1EI@CGANLFJM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC?$AAu?$AAr@
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN19@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	push	OFFSET ?game_window@@3Usk_window_s@@A+4
	lea	eax, DWORD PTR __Ans$2[ebp]
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A+32
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, DWORD PTR __Ans$2[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Ans$2[ebp+4]
	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN152@operator
$LL35@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL35@operator
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 860  :       if (! wm_dispatch.moving_windows.count (game_window.hWnd))

	test	edx, edx
	jne	SHORT $LN153@operator
$LN152@operator:

; 861  :       {
; 862  :         ////// XXX: Is this really necessary? State should be consistent unless we missed
; 863  :         //////        an event --- Write unit test?
; 864  :         GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 865  :         ClipCursor_Original    (&game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100

; 866  :       }
; 867  :     }
; 868  : 
; 869  :     else

	jmp	SHORT $LN162@operator
$LN17@operator:

; 870  :     {
; 871  :       SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN21@operator
	push	OFFSET ??_C@_1EM@LBJEIGPM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAU?$AAn?$AAc?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC@
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN21@operator:

; 872  :                   L"Window Mgr" );
; 873  : 
; 874  :       ClipCursor_Original (nullptr);

	push	0
$LN162@operator:
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN153@operator:

; 875  :     }
; 876  :   }
; 877  : 
; 878  :   if (config.window.unconfine_cursor && state_changed)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	je	SHORT $LN22@operator
	cmp	BYTE PTR _state_changed$1$[ebp], 0
	je	SHORT $LN24@operator

; 879  :   {
; 880  :     SK_LOG4 ( ( L"Unconfining Mouse Cursor" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN23@operator
	push	OFFSET ??_C@_1EM@LBJEIGPM@?$AA?$FL?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AAM?$AAg?$AAr?$AA?$FN?$AA?5?$AAU?$AAn?$AAc?$AAo?$AAn?$AAf?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAo?$AAu?$AAs?$AAe?$AA?5?$AAC@
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN23@operator:

; 881  :                 L"Window Mgr" );
; 882  : 
; 883  :     ClipCursor_Original (nullptr);

	push	0
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN22@operator:

; 884  :   }
; 885  : 
; 886  :   if (state_changed)

	cmp	BYTE PTR _state_changed$1$[ebp], 0
	je	SHORT $LN24@operator

; 887  :     SK_ImGui_Cursor.activateWindow (active);

	push	ebx
	mov	ecx, OFFSET ?SK_ImGui_Cursor@@3Usk_imgui_cursor_s@@A ; SK_ImGui_Cursor
	call	?activateWindow@sk_imgui_cursor_s@@QAEX_N@Z ; sk_imgui_cursor_s::activateWindow
$LN24@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	lea	eax, DWORD PTR _hWnd$[ebp]
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A ; wm_dispatch
	push	eax
	lea	eax, DWORD PTR __Where$4[ebp]
	push	eax
	call	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$4[ebp]
	cmp	eax, DWORD PTR ?wm_dispatch@@3Uwindow_message_dispatch_s@@A+4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN50@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	lea	eax, DWORD PTR _hWnd$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A ; wm_dispatch
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T3[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 889  :   wm_dispatch.active_windows [hWnd] = active;

	mov	eax, DWORD PTR $T1[ebp]
$LN50@operator:
	pop	esi
	mov	BYTE PTR [eax+12], bl
	pop	ebx

; 890  : };

	mov	esp, ebp
	pop	ebp
	ret	8
??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ENDP ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0state_s@SK_WindowManager@@QAE@XZ
_TEXT	SEGMENT
??0state_s@SK_WindowManager@@QAE@XZ PROC		; SK_WindowManager::state_s::state_s, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	ret	0
??0state_s@SK_WindowManager@@QAE@XZ ENDP		; SK_WindowManager::state_s::state_s
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0value_s@state_s@SK_WindowManager@@QAE@XZ
_TEXT	SEGMENT
??0value_s@state_s@SK_WindowManager@@QAE@XZ PROC	; SK_WindowManager::state_s::value_s::value_s, COMDAT
; _this$ = ecx
	mov	WORD PTR [ecx], 0
	mov	eax, ecx
	ret	0
??0value_s@state_s@SK_WindowManager@@QAE@XZ ENDP	; SK_WindowManager::state_s::value_s::value_s
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?muteGame@SK_WindowManager@@QAEX_N@Z
_TEXT	SEGMENT
_bMute$ = 8						; size = 1
?muteGame@SK_WindowManager@@QAEX_N@Z PROC		; SK_WindowManager::muteGame, COMDAT
; _this$ = ecx

; 707  :     SK_SetGameMute (bMute);

	jmp	?SK_SetGameMute@@YGX_N@Z		; SK_SetGameMute
?muteGame@SK_WindowManager@@QAEX_N@Z ENDP		; SK_WindowManager::muteGame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?getInstance@SK_WindowManager@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?getInstance@SK_WindowManager@@SAPAV1@XZ PROC		; SK_WindowManager::getInstance, COMDAT

; 698  :   {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getInstance@SK_WindowManager@@SAPAV1@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 699  :     if (pWindowManager == nullptr)

	mov	eax, DWORD PTR ?pWindowManager@SK_WindowManager@@0PAV1@A ; SK_WindowManager::pWindowManager
	test	eax, eax
	jne	SHORT $LN2@getInstanc

; 700  :       pWindowManager = new SK_WindowManager ();

	push	100					; 00000064H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN4@getInstanc
	mov	ecx, eax
	call	??0SK_WindowManager@@QAE@XZ		; SK_WindowManager::SK_WindowManager
	mov	DWORD PTR ?pWindowManager@SK_WindowManager@@0PAV1@A, eax ; SK_WindowManager::pWindowManager

; 701  : 
; 702  :     return pWindowManager;
; 703  :   }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN4@getInstanc:

; 700  :       pWindowManager = new SK_WindowManager ();

	xor	eax, eax
	mov	DWORD PTR ?pWindowManager@SK_WindowManager@@0PAV1@A, eax ; SK_WindowManager::pWindowManager
$LN2@getInstanc:

; 701  : 
; 702  :     return pWindowManager;
; 703  :   }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getInstance@SK_WindowManager@@SAPAV1@XZ$0:
	push	100					; 00000064H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?getInstance@SK_WindowManager@@SAPAV1@XZ:
	mov	eax, OFFSET __ehfuncinfo$?getInstance@SK_WindowManager@@SAPAV1@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getInstance@SK_WindowManager@@SAPAV1@XZ ENDP		; SK_WindowManager::getInstance
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??0SK_WindowManager@@QAE@XZ
_TEXT	SEGMENT
??0SK_WindowManager@@QAE@XZ PROC			; SK_WindowManager::SK_WindowManager, COMDAT
; _this$ = ecx

; 567  :   SK_WindowManager (void)

	npad	2
	push	ebx
	mov	ebx, ecx
	xorps	xmm0, xmm0
	push	esi

; 696  : 
; 697  :   static SK_WindowManager* getInstance (void)
; 698  :   {
; 699  :     if (pWindowManager == nullptr)
; 700  :       pWindowManager = new SK_WindowManager ();
; 701  : 
; 702  :     return pWindowManager;
; 703  :   }
; 704  : 
; 705  :   void muteGame (bool bMute)
; 706  :   {
; 707  :     SK_SetGameMute (bMute);
; 708  :   }
; 709  : 
; 710  :   void finishFullscreen (bool fullscreen)
; 711  :   {
; 712  :     state_.fullscreen.actual = fullscreen;
; 713  :   }
; 714  : 
; 715  :   void finishBorderless (bool borderless)
; 716  :   {
; 717  :     state_.borderless.actual = borderless;
; 718  :   }
; 719  : 
; 720  :   bool makeFullscreen (bool fullscreen)
; 721  :   {
; 722  :     state_.fullscreen.set (fullscreen);
; 723  :     return state_.fullscreen.get ();
; 724  :   }
; 725  : 
; 726  :   bool makeBorderless (bool borderless)
; 727  :   {
; 728  :     state_.borderless.set (borderless);
; 729  :     return state_.borderless.get ();
; 730  :   }
; 731  : 
; 732  :   bool isChanging (void)
; 733  :   {
; 734  :     return state_.changing ();
; 735  :   }
; 736  : 
; 737  : protected:
; 738  :   struct state_s {
; 739  :     struct value_s {
; 740  :       bool set (bool val) { requested = val; return get (); };
; 741  :       bool get (void)     { return actual;                  };
; 742  : 
; 743  :       bool requested = false;
; 744  :       bool actual    = false;
; 745  :     } borderless,
; 746  :       fullscreen;
; 747  : 
; 748  :     bool changing (void)
; 749  :     {
; 750  :       return (borderless.requested != borderless.actual ||
; 751  :               fullscreen.requested != fullscreen.actual);
; 752  :     };
; 753  :   } state_;
; 754  : 
; 755  :   SK_IVariable* borderless_;
; 756  :   SK_IVariable* background_mute_;
; 757  :   SK_IVariable* confine_cursor_;
; 758  :   SK_IVariable* unconfine_cursor_;
; 759  :   SK_IVariable* center_window_;
; 760  :   SK_IVariable* fullscreen_;
; 761  :   SK_IVariable* x_override_;
; 762  :   SK_IVariable* y_override_;
; 763  :   SK_IVariable* res_override_; // Set X and Y at the same time
; 764  :   SK_IVariable* fix_mouse_;
; 765  :   SK_IVariable* x_offset_;    SK_IVariable* x_off_pct_;
; 766  :   SK_IVariable* y_offset_;    SK_IVariable* y_off_pct_;
; 767  : 
; 768  :   SK_IVariable* static_rects_; // Fake the game into thinking the
; 769  :                                //   client rectangle has not changed.
; 770  : 
; 771  :                                // This solves display scaling problems in Fallout 4 and
; 772  :                                //   Skyrim...
; 773  : 
; 774  :   char override_res [32] = { };

	lea	esi, DWORD PTR [ebx+68]
	push	edi
	mov	DWORD PTR [ebx], OFFSET ??_7SK_WindowManager@@6B@
	mov	DWORD PTR [ebx+4], 0
	movups	XMMWORD PTR [esi], xmm0
	movups	XMMWORD PTR [esi+16], xmm0
	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+767
	push	2
	mov	edi, eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	mov	DWORD PTR [ebx+20], eax
	mov	ecx, edi
	mov	edx, DWORD PTR [edi]
	push	eax
	push	OFFSET ??_C@_0BH@LLAHAFKD@Window?4UnconfineCursor?$AA@
	call	DWORD PTR [edx+20]
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+766
	push	2
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	mov	DWORD PTR [ebx+16], eax
	mov	ecx, edi
	mov	edx, DWORD PTR [edi]
	push	eax
	push	OFFSET ??_C@_0BF@JIGKFJCF@Window?4ConfineCursor?$AA@
	call	DWORD PTR [edx+20]
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+744
	push	2
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+765
	push	2
	mov	DWORD PTR [ebx+8], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+746
	push	2
	mov	DWORD PTR [ebx+12], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+770
	push	2
	mov	DWORD PTR [ebx+24], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+772
	push	5
	mov	DWORD PTR [ebx+28], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+776
	push	5
	mov	DWORD PTR [ebx+32], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	ebx
	push	esi
	push	7
	mov	DWORD PTR [ebx+36], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	0
	push	OFFSET ?config@@3Usk_config_t@@A+780
	push	2
	mov	DWORD PTR [ebx+40], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+748
	push	5
	mov	DWORD PTR [ebx+44], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+756
	push	5
	mov	DWORD PTR [ebx+48], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar

; 568  :   {
; 569  :     SK_ICommandProcessor* cmd =
; 570  :       SK_GetCommandProcessor ();
; 571  : 
; 572  :     unconfine_cursor_ =
; 573  :       SK_CreateVar (SK_IVariable::Boolean,&config.window.unconfine_cursor,this);
; 574  : 
; 575  :     cmd->AddVariable (
; 576  :       "Window.UnconfineCursor",
; 577  :         unconfine_cursor_
; 578  :     );
; 579  : 
; 580  :     confine_cursor_ =
; 581  :       SK_CreateVar (SK_IVariable::Boolean,&config.window.confine_cursor,this);
; 582  : 
; 583  :     cmd->AddVariable (
; 584  :       "Window.ConfineCursor",
; 585  :         confine_cursor_
; 586  :     );
; 587  : 
; 588  :     borderless_ =
; 589  :       SK_CreateVar (SK_IVariable::Boolean, &config.window.borderless,      this);
; 590  : 
; 591  :     background_mute_ =
; 592  :       SK_CreateVar (SK_IVariable::Boolean, &config.window.background_mute, this);
; 593  : 
; 594  :     center_window_ =
; 595  :       SK_CreateVar (SK_IVariable::Boolean, &config.window.center,          this);
; 596  : 
; 597  :     fullscreen_ =
; 598  :       SK_CreateVar (SK_IVariable::Boolean, &config.window.fullscreen,      this);
; 599  : 
; 600  :     x_override_ =
; 601  :       SK_CreateVar (SK_IVariable::Int,     &config.window.res.override.x,  this);
; 602  : 
; 603  :     y_override_ =
; 604  :       SK_CreateVar (SK_IVariable::Int,     &config.window.res.override.y,  this);
; 605  : 
; 606  :     res_override_ =
; 607  :       SK_CreateVar (SK_IVariable::String,  override_res,                   this);
; 608  : 
; 609  :     // Don't need to listen for this event, actually.
; 610  :     fix_mouse_ =
; 611  :       SK_CreateVar (SK_IVariable::Boolean, &config.window.res.override.fix_mouse);
; 612  : 
; 613  :     x_offset_ =
; 614  :       SK_CreateVar (SK_IVariable::Int,     &config.window.offset.x.absolute, this);
; 615  : 
; 616  :     y_offset_ =
; 617  :       SK_CreateVar (SK_IVariable::Int,     &config.window.offset.y.absolute, this);
; 618  : 
; 619  :     x_off_pct_ =

	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+752
	push	0
	mov	DWORD PTR [ebx+56], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar

; 620  :       SK_CreateVar (SK_IVariable::Float,   &config.window.offset.x.percent,  this);
; 621  : 
; 622  :     y_off_pct_ =

	push	ebx
	push	OFFSET ?config@@3Usk_config_t@@A+760
	push	0
	mov	DWORD PTR [ebx+52], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar

; 623  :       SK_CreateVar (SK_IVariable::Float,   &config.window.offset.y.percent,  this);
; 624  : 
; 625  :     static_rects_ =

	push	0
	push	OFFSET ?override_window_rects@@3_NA	; override_window_rects
	push	2
	mov	DWORD PTR [ebx+60], eax
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar

; 626  :       SK_CreateVar (SK_IVariable::Boolean, &override_window_rects);
; 627  : 
; 628  :     cmd->AddVariable (

	push	DWORD PTR [ebx+8]
	mov	DWORD PTR [ebx+64], eax
	mov	ecx, edi
	mov	eax, DWORD PTR [edi]
	push	OFFSET ??_C@_0BC@HLDPMDDM@Window?4Borderless?$AA@
	call	DWORD PTR [eax+20]

; 629  :       "Window.Borderless",
; 630  :         borderless_
; 631  :     );
; 632  : 
; 633  :     cmd->AddVariable (

	push	DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0BG@NEPDLABM@Window?4BackgroundMute?$AA@
	call	DWORD PTR [eax+20]

; 634  :       "Window.BackgroundMute",
; 635  :         background_mute_
; 636  :     );
; 637  : 
; 638  :     cmd->AddVariable (

	push	DWORD PTR [ebx+24]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0O@CAMIPBKP@Window?4Center?$AA@
	call	DWORD PTR [eax+20]

; 639  :       "Window.Center",
; 640  :         center_window_
; 641  :     );
; 642  : 
; 643  :     cmd->AddVariable (

	push	DWORD PTR [ebx+28]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0BC@LIBOMBDO@Window?4Fullscreen?$AA@
	call	DWORD PTR [eax+20]

; 644  :       "Window.Fullscreen",
; 645  :         fullscreen_
; 646  :     );
; 647  : 
; 648  :     cmd->AddVariable (

	push	DWORD PTR [ebx+32]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0BB@HKCOBNCG@Window?4OverrideX?$AA@
	call	DWORD PTR [eax+20]

; 649  :       "Window.OverrideX",
; 650  :         x_override_
; 651  :     );
; 652  : 
; 653  :     cmd->AddVariable (

	push	DWORD PTR [ebx+36]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0BB@GDDFCMGH@Window?4OverrideY?$AA@
	call	DWORD PTR [eax+20]

; 654  :       "Window.OverrideY",
; 655  :         y_override_
; 656  :     );
; 657  : 
; 658  :     cmd->AddVariable (

	push	DWORD PTR [ebx+40]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0BD@IFGLFGEJ@Window?4OverrideRes?$AA@
	call	DWORD PTR [eax+20]

; 659  :       "Window.OverrideRes",
; 660  :         res_override_
; 661  :     );
; 662  : 
; 663  :     snprintf ( override_res, 32, "%lux%lu",

	push	DWORD PTR ?config@@3Usk_config_t@@A+776
	push	DWORD PTR ?config@@3Usk_config_t@@A+772
	push	OFFSET ??_C@_07HBHJLNLC@?$CFlux?$CFlu?$AA@
	push	32					; 00000020H
	push	esi
	call	_snprintf

; 664  :                  config.window.res.override.x,
; 665  :                    config.window.res.override.y );
; 666  : 
; 667  :     cmd->AddVariable (

	mov	eax, DWORD PTR [edi]
	add	esp, 20					; 00000014H
	mov	ecx, edi
	push	DWORD PTR [ebx+44]
	push	OFFSET ??_C@_0BF@HANFDLDO@Window?4OverrideMouse?$AA@
	call	DWORD PTR [eax+20]

; 668  :       "Window.OverrideMouse",
; 669  :         fix_mouse_
; 670  :     );
; 671  : 
; 672  :     cmd->AddVariable (

	push	DWORD PTR [ebx+48]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0P@NNGOHKOM@Window?4XOffset?$AA@
	call	DWORD PTR [eax+20]

; 673  :       "Window.XOffset",
; 674  :         x_offset_
; 675  :     );
; 676  : 
; 677  :     cmd->AddVariable (

	push	DWORD PTR [ebx+56]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0P@BBMEHKHC@Window?4YOffset?$AA@
	call	DWORD PTR [eax+20]

; 678  :       "Window.YOffset",
; 679  :         y_offset_
; 680  :     );
; 681  : 
; 682  :     cmd->AddVariable (

	push	DWORD PTR [ebx+52]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0BF@OJMMDOKI@Window?4ScaledXOffset?$AA@
	call	DWORD PTR [eax+20]

; 683  :       "Window.ScaledXOffset",
; 684  :         x_off_pct_
; 685  :     );
; 686  : 
; 687  :     cmd->AddVariable (

	push	DWORD PTR [ebx+60]
	mov	eax, DWORD PTR [edi]
	push	OFFSET ??_C@_0BF@CFGGDODG@Window?4ScaledYOffset?$AA@
	mov	ecx, edi
	call	DWORD PTR [eax+20]

; 688  :       "Window.ScaledYOffset",
; 689  :         y_off_pct_
; 690  :     );
; 691  : 
; 692  :     cmd->AddVariable (

	push	DWORD PTR [ebx+64]
	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	push	OFFSET ??_C@_0BD@KMBFFGAF@Window?4StaticRects?$AA@
	call	DWORD PTR [eax+20]
	pop	edi
	pop	esi

; 693  :       "Window.StaticRects",
; 694  :         static_rects_ );
; 695  :   };

	mov	eax, ebx
	pop	ebx
	ret	0
??0SK_WindowManager@@QAE@XZ ENDP			; SK_WindowManager::SK_WindowManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z
_TEXT	SEGMENT
$T1 = -176						; size = 84
_mi$2 = -92						; size = 40
_client$3 = -52						; size = 16
_szTemp$4 = -36						; size = 31
$T5 = -24						; size = 16
$T6 = -24						; size = 16
_clip$7 = -24						; size = 16
_orig_y$1$ = -4						; size = 4
_x$8 = -4						; size = 4
_orig_x$1$ = 8						; size = 4
_y$9 = 8						; size = 4
_var$ = 8						; size = 4
tv681 = 12						; size = 4
_val$ = 12						; size = 4
?OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z PROC ; SK_WindowManager::OnVarChange, COMDAT
; _this$ = ecx

; 211  :   {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 176				; 000000b0H
	push	esi

; 212  :     if (var == confine_cursor_)

	mov	esi, DWORD PTR _var$[ebp]
	push	edi
	mov	edi, ecx
	cmp	esi, DWORD PTR [edi+16]
	jne	SHORT $LN6@OnVarChang

; 213  :     {
; 214  :       if (val != nullptr)

	mov	eax, DWORD PTR _val$[ebp]
	test	eax, eax
	je	SHORT $LN9@OnVarChang

; 215  :       {
; 216  :         config.window.confine_cursor =

	mov	al, BYTE PTR [eax]
	mov	BYTE PTR ?config@@3Usk_config_t@@A+766, al

; 217  :           *static_cast <bool *> (val);
; 218  : 
; 219  :         if (! config.window.confine_cursor)

	test	al, al
	jne	SHORT $LN8@OnVarChang

; 220  :         {
; 221  :           if (! config.window.unconfine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, al
	jne	SHORT $LN10@OnVarChang

; 222  :           {
; 223  :             ClipCursor_Original    (&game_window.cursor_clip);

	push	OFFSET ?game_window@@3Usk_window_s@@A+168
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original

; 224  :             SK_AdjustWindow        ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow
	pop	edi

; 235  :         }
; 236  :       }
; 237  : 
; 238  :       return true;

	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN10@OnVarChang:

; 225  :           }
; 226  : 
; 227  :           else
; 228  :             ClipCursor_Original    (nullptr);

	push	0

; 234  :           ClipCursor_Original    (&game_window.actual.window);

	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
	pop	edi

; 235  :         }
; 236  :       }
; 237  : 
; 238  :       return true;

	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN8@OnVarChang:

; 229  :         }
; 230  : 
; 231  :         else
; 232  :         {
; 233  :           GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 234  :           ClipCursor_Original    (&game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN9@OnVarChang:

; 235  :         }
; 236  :       }
; 237  : 
; 238  :       return true;

	pop	edi
	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@OnVarChang:

; 239  :     }
; 240  : 
; 241  :     if (var == unconfine_cursor_)

	cmp	esi, DWORD PTR [edi+20]
	jne	SHORT $LN12@OnVarChang

; 242  :     {
; 243  :       if (val != nullptr)

	mov	eax, DWORD PTR _val$[ebp]
	test	eax, eax
	je	SHORT $LN9@OnVarChang

; 244  :       {
; 245  :         config.window.unconfine_cursor =

	mov	al, BYTE PTR [eax]
	mov	BYTE PTR ?config@@3Usk_config_t@@A+767, al

; 246  :           *static_cast <bool *> (val);
; 247  : 
; 248  :         if (config.window.unconfine_cursor)

	test	al, al
	jne	SHORT $LN10@OnVarChang

; 249  :           ClipCursor_Original (nullptr);
; 250  : 
; 251  :         else if (config.window.confine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+766, al
	jne	SHORT $LN8@OnVarChang

; 252  :         {
; 253  :           GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);
; 254  :           ClipCursor_Original    (&game_window.actual.window);
; 255  :         }
; 256  : 
; 257  :         else
; 258  :         {
; 259  :           ClipCursor_Original    (&game_window.cursor_clip);

	push	OFFSET ?game_window@@3Usk_window_s@@A+168
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original

; 260  :           SK_AdjustWindow        ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow
	pop	edi

; 261  :         }
; 262  :       }
; 263  : 
; 264  :       return true;

	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN12@OnVarChang:

; 265  :     }
; 266  : 
; 267  :     else if ( var == center_window_ || var == x_offset_   || var == y_offset_   ||
; 268  :               var == borderless_    || var == x_override_ || var == y_override_ ||
; 269  :               var == fullscreen_    || var == x_off_pct_  || var == y_off_pct_ )

	mov	eax, DWORD PTR [edi+24]
	push	ebx
	cmp	esi, eax
	je	$LN21@OnVarChang
	cmp	esi, DWORD PTR [edi+48]
	je	$LN21@OnVarChang
	cmp	esi, DWORD PTR [edi+56]
	je	$LN21@OnVarChang
	cmp	esi, DWORD PTR [edi+8]
	je	$LN21@OnVarChang
	cmp	esi, DWORD PTR [edi+32]
	je	$LN21@OnVarChang
	cmp	esi, DWORD PTR [edi+36]
	je	$LN21@OnVarChang
	cmp	esi, DWORD PTR [edi+28]
	je	$LN21@OnVarChang
	cmp	esi, DWORD PTR [edi+52]
	je	$LN21@OnVarChang
	cmp	esi, DWORD PTR [edi+60]
	je	$LN21@OnVarChang

; 503  :       }
; 504  :     }
; 505  : 
; 506  :     else if ( var == background_mute_ )

	cmp	esi, DWORD PTR [edi+12]
	jne	SHORT $LN64@OnVarChang

; 507  :     {
; 508  :       if (val != nullptr)

	mov	eax, DWORD PTR _val$[ebp]
	test	eax, eax
	je	$LN22@OnVarChang

; 509  :       {
; 510  :         config.window.background_mute = *static_cast <bool *> (val);

	mov	al, BYTE PTR [eax]
	mov	BYTE PTR ?config@@3Usk_config_t@@A+765, al

; 511  : 
; 512  :         if (config.window.background_mute && (! game_window.active))

	test	al, al
	je	SHORT $LN82@OnVarChang
	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, 0
	jne	$LN50@OnVarChang

; 707  :     SK_SetGameMute (bMute);

	push	1
	call	?SK_SetGameMute@@YGX_N@Z		; SK_SetGameMute
	pop	ebx
	pop	edi

; 513  :         {
; 514  :           muteGame (true);
; 515  :         }
; 516  : 
; 517  :         else if (!config.window.background_mute)
; 518  :         {
; 519  :           muteGame (false);
; 520  :         }
; 521  : 
; 522  :         return true;

	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN82@OnVarChang:

; 707  :     SK_SetGameMute (bMute);

	push	0
	call	?SK_SetGameMute@@YGX_N@Z		; SK_SetGameMute
	pop	ebx
	pop	edi

; 513  :         {
; 514  :           muteGame (true);
; 515  :         }
; 516  : 
; 517  :         else if (!config.window.background_mute)
; 518  :         {
; 519  :           muteGame (false);
; 520  :         }
; 521  : 
; 522  :         return true;

	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN64@OnVarChang:

; 523  :       }
; 524  :     }
; 525  : 
; 526  :     else if (var == res_override_)

	cmp	esi, DWORD PTR [edi+40]
	jne	$LN22@OnVarChang

; 527  :     {
; 528  :       unsigned int x = 65535;
; 529  :       unsigned int y = 65535;
; 530  : 
; 531  :          char szTemp    [31] = { };
; 532  : 
; 533  :       if (val != nullptr) {

	mov	eax, DWORD PTR _val$[ebp]
	xorps	xmm0, xmm0
	mov	DWORD PTR _x$8[ebp], 65535		; 0000ffffH
	mov	DWORD PTR _y$9[ebp], 65535		; 0000ffffH
	movq	QWORD PTR _szTemp$4[ebp+16], xmm0
	mov	DWORD PTR _szTemp$4[ebp+24], 0
	mov	WORD PTR _szTemp$4[ebp+28], 0
	mov	BYTE PTR _szTemp$4[ebp+30], 0
	movups	XMMWORD PTR _szTemp$4[ebp], xmm0
	test	eax, eax
	je	$LN72@OnVarChang

; 534  :         strncat (szTemp, *static_cast <char **> (val), 31);

	push	31					; 0000001fH
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _szTemp$4[ebp]
	push	eax
	call	DWORD PTR __imp__strncat

; 535  :         sscanf  (szTemp, "%ux%u", &x, &y);

	lea	eax, DWORD PTR _y$9[ebp]
	push	eax
	lea	eax, DWORD PTR _x$8[ebp]
	push	eax
	lea	eax, DWORD PTR _szTemp$4[ebp]
	push	OFFSET ??_C@_05OKCLCEKN@?$CFux?$CFu?$AA@
	push	eax
	call	_sscanf

; 536  :       }
; 537  : 
; 538  :       if ((x > 320 && x < 16384 && y > 240 && y < 16384) || (x == 0 && y == 0))

	mov	ecx, DWORD PTR _x$8[ebp]
	add	esp, 28					; 0000001cH
	mov	eax, DWORD PTR _y$9[ebp]
	cmp	ecx, 320				; 00000140H
	jbe	SHORT $LN75@OnVarChang
	cmp	ecx, 16384				; 00004000H
	jae	SHORT $LN75@OnVarChang
	cmp	eax, 240				; 000000f0H
	jbe	SHORT $LN75@OnVarChang
	cmp	eax, 16384				; 00004000H
	jb	SHORT $LN74@OnVarChang
$LN75@OnVarChang:
	test	ecx, ecx
	jne	SHORT $LN72@OnVarChang
	test	eax, eax
	jne	SHORT $LN72@OnVarChang
$LN74@OnVarChang:

; 539  :       {
; 540  :         config.window.res.override.x = x;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, ecx

; 541  :         config.window.res.override.y = y;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, eax

; 542  : 
; 543  :         SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow

; 544  : 
; 545  :         auto *pszRes =
; 546  :           static_cast <char *> (((SK_IVarStub <char *> *)var)->getValuePointer ());

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	call	DWORD PTR [eax+8]

; 547  : 
; 548  :         snprintf (pszRes, 31, "%ux%u", x, y);

	push	DWORD PTR _y$9[ebp]
	push	DWORD PTR _x$8[ebp]
	push	OFFSET ??_C@_05OKCLCEKN@?$CFux?$CFu?$AA@
	push	31					; 0000001fH
	push	eax
	call	_snprintf
	add	esp, 20					; 00000014H

; 549  : 
; 550  :         return true;

	mov	al, 1
	pop	ebx
	pop	edi
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN72@OnVarChang:

; 551  :       }
; 552  : 
; 553  :       else
; 554  :       {
; 555  :         auto *pszRes =
; 556  :           static_cast <char *> (((SK_IVarStub <char *> *)var)->getValuePointer ());

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	call	DWORD PTR [eax+8]

; 557  : 
; 558  :         snprintf (pszRes, 31, "INVALID");

	push	OFFSET ??_C@_07DNODLGKM@INVALID?$AA@
	push	31					; 0000001fH
	push	eax
	call	_snprintf
	add	esp, 12					; 0000000cH
$LN22@OnVarChang:

; 559  : 
; 560  :         return false;
; 561  :       }
; 562  :     }
; 563  : 
; 564  :     return false;

	pop	ebx
	pop	edi
	xor	al, al
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN21@OnVarChang:

; 270  :     {
; 271  :       if (val != nullptr)

	mov	ebx, DWORD PTR _val$[ebp]
	test	ebx, ebx
	je	SHORT $LN22@OnVarChang

; 272  :       {
; 273  :         if (var == center_window_)

	cmp	esi, eax
	jne	SHORT $LN23@OnVarChang

; 274  :           config.window.center =

	mov	al, BYTE PTR [ebx]
	mov	BYTE PTR ?config@@3Usk_config_t@@A+746, al
	jmp	$LN60@OnVarChang
$LN23@OnVarChang:

; 275  :             *static_cast <bool *> (val);
; 276  : 
; 277  :         else if (var == x_offset_)

	cmp	esi, DWORD PTR [edi+48]
	jne	SHORT $LN25@OnVarChang

; 278  :         {
; 279  :           if ( *static_cast <int *> (val) >= -4096 &&

	mov	eax, DWORD PTR [ebx]
	cmp	eax, -4096				; fffff000H
	jl	$LN60@OnVarChang
	cmp	eax, 4096				; 00001000H
	jg	$LN60@OnVarChang

; 280  :                *static_cast <int *> (val) <= 4096     )
; 281  :           {
; 282  :             config.window.offset.x.absolute = *static_cast <signed int *> (val);

	mov	DWORD PTR ?config@@3Usk_config_t@@A+748, eax

; 283  :             config.window.offset.x.percent  = 0.0f;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+752, 0

; 284  :           }
; 285  :         }

	jmp	$LN60@OnVarChang
$LN25@OnVarChang:

; 286  : 
; 287  :         else if (var == y_offset_)

	cmp	esi, DWORD PTR [edi+56]
	jne	SHORT $LN28@OnVarChang

; 288  :         {
; 289  :           if ( *static_cast <int *> (val) >= -4096 &&

	mov	eax, DWORD PTR [ebx]
	cmp	eax, -4096				; fffff000H
	jl	$LN60@OnVarChang
	cmp	eax, 4096				; 00001000H
	jg	$LN60@OnVarChang

; 290  :                *static_cast <int *> (val) <=  4096    )
; 291  :           {
; 292  :             config.window.offset.y.absolute = *static_cast <signed int *> (val);

	mov	DWORD PTR ?config@@3Usk_config_t@@A+756, eax

; 293  :             config.window.offset.y.percent  = 0.0f;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+760, 0

; 294  :           }
; 295  :         }

	jmp	$LN60@OnVarChang
$LN28@OnVarChang:

; 296  : 
; 297  :         else if (var == x_off_pct_)

	cmp	esi, DWORD PTR [edi+52]
	jne	SHORT $LN31@OnVarChang

; 298  :         {
; 299  :           if ( *static_cast <float *> (val) > -1.0f &&

	movss	xmm1, DWORD PTR [ebx]
	comiss	xmm1, DWORD PTR __real@bf800000
	jbe	$LN60@OnVarChang
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, xmm1
	jbe	$LN60@OnVarChang

; 300  :                *static_cast <float *> (val) <  1.0f    )
; 301  :           {
; 302  :             config.window.offset.x.absolute = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+748, 0

; 303  :             config.window.offset.x.percent = *static_cast <float *> (val);

	movss	xmm0, DWORD PTR [ebx]
	movss	DWORD PTR ?config@@3Usk_config_t@@A+752, xmm0

; 304  :           }
; 305  :         }

	jmp	$LN60@OnVarChang
$LN31@OnVarChang:

; 306  : 
; 307  :         else if (var == y_off_pct_)

	cmp	esi, DWORD PTR [edi+60]
	jne	SHORT $LN34@OnVarChang

; 308  :         {
; 309  :           if ( *static_cast <float *> (val) > -1.0f &&

	movss	xmm1, DWORD PTR [ebx]
	comiss	xmm1, DWORD PTR __real@bf800000
	jbe	$LN60@OnVarChang
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, xmm1
	jbe	$LN60@OnVarChang

; 310  :                *static_cast <float *> (val) <  1.0f    )
; 311  :           {
; 312  :             config.window.offset.y.absolute = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+756, 0

; 313  :             config.window.offset.y.percent  = *static_cast <float *> (val);

	movss	xmm0, DWORD PTR [ebx]
	movss	DWORD PTR ?config@@3Usk_config_t@@A+760, xmm0

; 314  :           }
; 315  :         }

	jmp	$LN60@OnVarChang
$LN34@OnVarChang:

; 316  : 
; 317  :         else if ( var == borderless_ && 

	mov	dl, BYTE PTR ?config@@3Usk_config_t@@A+744
	cmp	esi, DWORD PTR [edi+8]
	jne	SHORT $LN37@OnVarChang
	mov	al, BYTE PTR [ebx]
	cmp	al, dl
	je	SHORT $LN37@OnVarChang

; 318  :          *static_cast <bool *> (val) != config.window.borderless )
; 319  :         {
; 320  :           config.window.borderless = *static_cast <bool *> (val);

	mov	BYTE PTR ?config@@3Usk_config_t@@A+744, al

; 321  : 
; 322  :           SK_AdjustBorder ();

	call	?SK_AdjustBorder@@YAXXZ			; SK_AdjustBorder
	jmp	$LN60@OnVarChang
$LN37@OnVarChang:

; 323  :         }
; 324  : 
; 325  :         else if (var == fullscreen_) 

	cmp	esi, DWORD PTR [edi+28]
	jne	$LN39@OnVarChang

; 326  :         {
; 327  :           static int x = config.window.res.override.x;

	mov	eax, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR __tls_index
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; TSS0<`template-parameter-76',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
	mov	DWORD PTR tv681[ebp], ecx
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jle	SHORT $LN2@OnVarChang
	jmp	$LN92@OnVarChang
$LN84@OnVarChang:
	mov	dl, BYTE PTR ?config@@3Usk_config_t@@A+744
$LN2@OnVarChang:

; 329  : 
; 330  :           if ( config.window.fullscreen != *static_cast <bool *> (val) &&

	mov	cl, BYTE PTR [ebx]
	mov	al, BYTE PTR ?config@@3Usk_config_t@@A+770
	cmp	al, cl
	je	$LN60@OnVarChang
	test	dl, dl
	jne	SHORT $LN42@OnVarChang
	test	al, al
	je	$LN60@OnVarChang
$LN42@OnVarChang:

; 331  :              ( config.window.borderless || (config.window.fullscreen) ) )
; 332  :           {
; 333  :             config.window.fullscreen = *static_cast <bool *> (val);
; 334  : 
; 335  :             static bool first_set         = true;
; 336  :             static RECT last_known_client = { };
; 337  :             static RECT last_known_window = { };
; 338  : 
; 339  :                    RECT client            = { };
; 340  : 
; 341  :             GetClientRect_Original (game_window.hWnd, &client);

	lea	eax, DWORD PTR _client$3[ebp]
	mov	BYTE PTR ?config@@3Usk_config_t@@A+770, cl
	push	eax
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	xorps	xmm0, xmm0
	movups	XMMWORD PTR _client$3[ebp], xmm0
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 342  : 
; 343  :             HMONITOR hMonitor =
; 344  :               MonitorFromWindow ( game_window.hWnd,

	push	2
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__MonitorFromWindow@8
	xorps	xmm0, xmm0

; 345  :                                     MONITOR_DEFAULTTONEAREST );
; 346  : 
; 347  :             MONITORINFO mi  = { };
; 348  :             mi.cbSize       = sizeof (mi);
; 349  :             GetMonitorInfo (hMonitor, &mi);

	lea	ecx, DWORD PTR _mi$2[ebp]
	push	ecx
	movups	XMMWORD PTR _mi$2[ebp], xmm0
	push	eax
	movups	XMMWORD PTR _mi$2[ebp+16], xmm0
	mov	DWORD PTR _mi$2[ebp], 40		; 00000028H
	movq	QWORD PTR _mi$2[ebp+32], xmm0
	call	DWORD PTR __imp__GetMonitorInfoW@8

; 350  : 
; 351  :             if ( (client.right  - client.left != mi.rcMonitor.right  - mi.rcMonitor.left ) &&

	mov	ecx, DWORD PTR _mi$2[ebp+12]
	mov	eax, DWORD PTR _client$3[ebp+8]
	sub	ecx, DWORD PTR _mi$2[ebp+4]
	sub	eax, DWORD PTR _client$3[ebp]
	cmp	eax, ecx
	je	SHORT $LN85@OnVarChang
	mov	ecx, DWORD PTR _mi$2[ebp+16]
	mov	eax, DWORD PTR _client$3[ebp+12]
	sub	ecx, DWORD PTR _mi$2[ebp+8]
	sub	eax, DWORD PTR _client$3[ebp+4]
	cmp	eax, ecx
	je	SHORT $LN85@OnVarChang

; 352  :                  (client.bottom - client.top  != mi.rcMonitor.bottom - mi.rcMonitor.top  ) )
; 353  :             {
; 354  :               GetClientRect_Original (game_window.hWnd, &last_known_client);

	push	OFFSET ?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A ; `SK_WindowManager::OnVarChange'::`79'::last_known_client
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 355  :               GetWindowRect_Original (game_window.hWnd, &last_known_window);

	push	OFFSET ?last_known_window@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A ; `SK_WindowManager::OnVarChange'::`79'::last_known_window
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original
$LN85@OnVarChang:

; 356  :             }
; 357  : 
; 358  :             unsigned int orig_x = config.window.res.override.x,
; 359  :                          orig_y = config.window.res.override.y;
; 360  : 
; 361  :             static unsigned int persist_x = orig_x, persist_y = orig_y;

	mov	ecx, DWORD PTR tv681[ebp]
	mov	eax, DWORD PTR ?$TSS2@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; TSS2<`template-parameter-79',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
	mov	ebx, DWORD PTR ?config@@3Usk_config_t@@A+772
	mov	esi, DWORD PTR ?config@@3Usk_config_t@@A+776
	mov	DWORD PTR _orig_x$1$[ebp], ebx
	mov	DWORD PTR _orig_y$1$[ebp], esi
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jg	$LN94@OnVarChang
$LN86@OnVarChang:

; 362  : 
; 363  :             // Restore Window Dimensions
; 364  :             if (! config.window.fullscreen) 

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	jne	$LN44@OnVarChang

; 365  :             {
; 366  :               config.window.res.override.x = last_known_client.right  - last_known_client.left;

	mov	eax, DWORD PTR ?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A+8
	sub	eax, DWORD PTR ?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A
	movups	xmm0, XMMWORD PTR ?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A
	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, eax
	movups	xmm1, XMMWORD PTR ?last_known_window@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A

; 367  :               config.window.res.override.y = last_known_client.bottom - last_known_client.top;

	mov	eax, DWORD PTR ?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A+12
	sub	eax, DWORD PTR ?last_known_client@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A+4

; 368  : 
; 369  :               // Trigger re-calc on adjust
; 370  :               game_window.game.client   = RECT { last_known_client.left,  last_known_client.top,
; 371  :                                                  last_known_client.right, last_known_client.bottom };
; 372  :               game_window.game.window   = RECT { last_known_window.left,  last_known_window.top,
; 373  :                                                  last_known_window.right, last_known_window.bottom };
; 374  : 
; 375  :               game_window.actual.client = RECT { last_known_client.left,  last_known_client.top,
; 376  :                                                  last_known_client.right, last_known_client.bottom };
; 377  :               game_window.actual.window = RECT { last_known_window.left,  last_known_window.top,
; 378  :                                                  last_known_window.right, last_known_window.bottom };
; 379  : 
; 380  :               if (! config.window.unconfine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, eax
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+36, xmm0
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+52, xmm1
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+84, xmm0
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+100, xmm1
	jne	SHORT $LN46@OnVarChang

; 381  :               {
; 382  :                 if (! wm_dispatch.moving_windows.count (game_window.hWnd))

	push	OFFSET ?game_window@@3Usk_window_s@@A+4
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A+32
	call	?count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::count
	test	eax, eax
	jne	SHORT $LN45@OnVarChang

; 383  :                 {
; 384  :                   RECT clip =
; 385  :                     game_window.actual.window;

	movups	xmm0, XMMWORD PTR ?last_known_window@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4UtagRECT@@A

; 386  : 
; 387  :                   ClipCursor_Original (&clip);

	lea	eax, DWORD PTR _clip$7[ebp]
	push	eax
	movups	XMMWORD PTR _clip$7[ebp], xmm0
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original

; 388  :                 }
; 389  :               }
; 390  : 
; 391  :               else

	jmp	SHORT $LN45@OnVarChang
$LN46@OnVarChang:

; 392  :                 ClipCursor_Original (nullptr);

	push	0
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original

; 393  :             }
; 394  : 
; 395  :             // Go Fullscreen (Stretch Window to Fill)
; 396  :             else

	jmp	SHORT $LN45@OnVarChang
$LN44@OnVarChang:

; 397  :             {
; 398  :               config.window.res.override.x = mi.rcMonitor.right  - mi.rcMonitor.left;

	mov	ebx, DWORD PTR _mi$2[ebp+12]
	mov	edx, ebx
	mov	esi, DWORD PTR _mi$2[ebp+4]
	sub	edx, esi

; 399  :               config.window.res.override.y = mi.rcMonitor.bottom - mi.rcMonitor.top;

	mov	edi, DWORD PTR _mi$2[ebp+16]
	mov	eax, edi
	mov	ecx, DWORD PTR _mi$2[ebp+8]
	sub	eax, ecx

; 400  : 
; 401  :               game_window.actual.client = RECT { 0,                                    0,

	mov	DWORD PTR $T6[ebp], 0
	mov	DWORD PTR $T6[ebp+4], 0
	mov	DWORD PTR $T6[ebp+8], edx
	mov	DWORD PTR $T6[ebp+12], eax
	movups	xmm0, XMMWORD PTR $T6[ebp]

; 402  :                                                  mi.rcMonitor.right-mi.rcMonitor.left, mi.rcMonitor.bottom-mi.rcMonitor.top };
; 403  :               game_window.actual.window = RECT { mi.rcMonitor.left,  mi.rcMonitor.top,

	mov	DWORD PTR $T5[ebp], esi
	mov	esi, DWORD PTR _orig_y$1$[ebp]
	mov	DWORD PTR $T5[ebp+8], ebx
	mov	ebx, DWORD PTR _orig_x$1$[ebp]
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+84, xmm0
	mov	DWORD PTR $T5[ebp+4], ecx
	mov	DWORD PTR $T5[ebp+12], edi
	movups	xmm0, XMMWORD PTR $T5[ebp]
	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, edx
	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, eax
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+100, xmm0
$LN45@OnVarChang:

; 404  :                                                  mi.rcMonitor.right, mi.rcMonitor.bottom };
; 405  :             }
; 406  : 
; 407  :             SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow

; 408  : 
; 409  :             if (! config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	jne	SHORT $LN49@OnVarChang

; 410  :             {
; 411  :               // XXX: This is being clobbered by another thread, needs redesign...
; 412  :               config.window.res.override.x = persist_x;

	mov	eax, DWORD PTR ?persist_x@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA ; `SK_WindowManager::OnVarChange'::`79'::persist_x
	pop	ebx
	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, eax

; 413  :               config.window.res.override.y = persist_y;

	mov	eax, DWORD PTR ?persist_y@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA ; `SK_WindowManager::OnVarChange'::`79'::persist_y
	pop	edi
	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, eax

; 423  :             }
; 424  : 
; 425  :             return true;

	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN49@OnVarChang:

; 414  :             }
; 415  : 
; 416  :             else
; 417  :             {
; 418  :               persist_x = orig_x;

	mov	DWORD PTR ?persist_x@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA, ebx ; `SK_WindowManager::OnVarChange'::`79'::persist_x

; 419  :               persist_y = orig_y;

	mov	DWORD PTR ?persist_y@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA, esi ; `SK_WindowManager::OnVarChange'::`79'::persist_y

; 420  : 
; 421  :               config.window.res.override.x = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, 0

; 422  :               config.window.res.override.y = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, 0
$LN50@OnVarChang:

; 423  :             }
; 424  : 
; 425  :             return true;

	pop	ebx
	pop	edi
	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN39@OnVarChang:

; 426  :           }
; 427  :         }
; 428  : 
; 429  :         else if (var == x_override_ || var == y_override_)

	mov	eax, DWORD PTR [edi+32]
	cmp	esi, eax
	je	SHORT $LN52@OnVarChang
	cmp	esi, DWORD PTR [edi+36]
	jne	SHORT $LN60@OnVarChang
$LN52@OnVarChang:

; 430  :         {
; 431  :           if ((! config.window.borderless) || config.window.fullscreen)

	test	dl, dl
	je	$LN22@OnVarChang
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	jne	$LN22@OnVarChang

; 432  :             return false;
; 433  : 
; 434  :           if (var == x_override_)

	cmp	esi, eax
	jne	SHORT $LN55@OnVarChang

; 435  :           {
; 436  :             config.window.res.override.x = *static_cast <unsigned int *> (val);
; 437  : 
; 438  :             // We cannot allow one variable to remain 0 while the other becomes
; 439  :             //   non-zero, so just make the window a square temporarily.
; 440  :             if (config.window.res.override.y == 0)

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+776, 0
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, eax
	jne	SHORT $LN87@OnVarChang

; 441  :               config.window.res.override.y = config.window.res.override.x;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, eax

; 442  :           }

	jmp	SHORT $LN87@OnVarChang
$LN55@OnVarChang:

; 443  : 
; 444  :           else if (var == y_override_)

	cmp	esi, DWORD PTR [edi+36]
	jne	SHORT $LN87@OnVarChang

; 445  :           {
; 446  :             config.window.res.override.y = *static_cast <unsigned int *> (val);
; 447  : 
; 448  :             // We cannot allow one variable to remain 0 while the other becomes
; 449  :             //   non-zero, so just make the window a square temporarily.
; 450  :             if (config.window.res.override.x == 0)

	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+772
	test	eax, eax
	mov	ecx, DWORD PTR [ebx]
	cmove	eax, ecx
	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, ecx
	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, eax
$LN87@OnVarChang:

; 451  :               config.window.res.override.x = config.window.res.override.y;
; 452  :           }
; 453  : 
; 454  :           // We have to override BOTH variables to 0 at the same time, or the window
; 455  :           //   will poof! :P
; 456  :           if (*static_cast <unsigned int *> (val) == 0)

	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN60@OnVarChang

; 457  :           {
; 458  :             config.window.res.override.x = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, 0

; 459  :             config.window.res.override.y = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, 0
$LN60@OnVarChang:

; 460  :           }
; 461  :         }
; 462  : 
; 463  :         snprintf ( override_res, 32, "%lux%lu",

	push	DWORD PTR ?config@@3Usk_config_t@@A+776
	lea	eax, DWORD PTR [edi+68]
	push	DWORD PTR ?config@@3Usk_config_t@@A+772
	push	OFFSET ??_C@_07HBHJLNLC@?$CFlux?$CFlu?$AA@
	push	32					; 00000020H
	push	eax
	call	_snprintf
	add	esp, 20					; 00000014H

; 464  :                      config.window.res.override.x,
; 465  :                        config.window.res.override.y );
; 466  : 
; 467  :         if (var == borderless_ && (! config.window.borderless))

	cmp	esi, DWORD PTR [edi+8]
	jne	SHORT $LN63@OnVarChang
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	jne	SHORT $LN63@OnVarChang

; 468  :         {
; 469  :           if (config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN63@OnVarChang

; 470  :           {
; 471  :             // Bring the game OUT of fullscreen mode, that's only for borderless
; 472  :             SK_GetCommandProcessor ()->ProcessCommandLine ("Window.Fullscreen 0");

	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	push	OFFSET ??_C@_0BE@EKKNCBFG@Window?4Fullscreen?50?$AA@
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	call	DWORD PTR [edx+28]
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1SK_ICommandResult@@QAE@XZ
$LN63@OnVarChang:

; 473  :           }
; 474  : 
; 475  :           else
; 476  :           {
; 477  :             SK_AdjustWindow ();
; 478  :             return true;
; 479  :           }
; 480  :         }
; 481  : 
; 482  : #if 1
; 483  :         SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow
	pop	ebx
	pop	edi

; 484  : #else
; 485  :         if (var != center_window_)
; 486  :         {
; 487  :           static char szCmd [64] = { };
; 488  :           snprintf (szCmd, 63, "Window.Center %d", config.window.center);
; 489  : 
; 490  :           DeferCommand (szCmd);
; 491  :         }
; 492  : 
; 493  :         if (var != borderless_)
; 494  :         {
; 495  :           static char szCmd [64] = { };
; 496  :           snprintf (szCmd, 63, "Window.Borderless %d", config.window.borderless);
; 497  : 
; 498  :           DeferCommand (szCmd);
; 499  :         }
; 500  : #endif
; 501  : 
; 502  :         return true;

	mov	al, 1
	pop	esi

; 565  :   }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN92@OnVarChang:

; 326  :         {
; 327  :           static int x = config.window.res.override.x;

	push	OFFSET ?$TSS0@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; TSS0<`template-parameter-76',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA, -1 ; TSS0<`template-parameter-76',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
	jne	$LN84@OnVarChang
	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+772
	mov	DWORD PTR ?x@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA, eax ; `SK_WindowManager::OnVarChange'::`76'::x

; 328  :           static int y = config.window.res.override.y;

	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+776
	push	OFFSET ?$TSS0@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; TSS0<`template-parameter-76',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
	mov	DWORD PTR ?y@?EM@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA, eax ; `SK_WindowManager::OnVarChange'::`76'::y
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN84@OnVarChang
$LN94@OnVarChang:

; 356  :             }
; 357  : 
; 358  :             unsigned int orig_x = config.window.res.override.x,
; 359  :                          orig_y = config.window.res.override.y;
; 360  : 
; 361  :             static unsigned int persist_x = orig_x, persist_y = orig_y;

	push	OFFSET ?$TSS2@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; TSS2<`template-parameter-79',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS2@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA, -1 ; TSS2<`template-parameter-79',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
	jne	$LN86@OnVarChang
	push	OFFSET ?$TSS2@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4HA ; TSS2<`template-parameter-79',SK_WindowManager::VarChange,AE_NPAUSK_IVariable,void *>
	mov	DWORD PTR ?persist_x@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA, ebx ; `SK_WindowManager::OnVarChange'::`79'::persist_x
	mov	DWORD PTR ?persist_y@?EP@??OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z@4IA, esi ; `SK_WindowManager::OnVarChange'::`79'::persist_y
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN86@OnVarChang
?OnVarChange@SK_WindowManager@@UAE_NPAUSK_IVariable@@PAX@Z ENDP ; SK_WindowManager::OnVarChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?StyleHasBorder@SK_WindowManager@@SA_NK@Z
_TEXT	SEGMENT
_style$ = 8						; size = 4
?StyleHasBorder@SK_WindowManager@@SA_NK@Z PROC		; SK_WindowManager::StyleHasBorder, COMDAT

; 203  :   {

	npad	2
	push	ebp
	mov	ebp, esp

; 204  :     return (  ( style == 0x0            ) ||

	mov	eax, DWORD PTR _style$[ebp]
	test	eax, eax
	je	SHORT $LN3@StyleHasBo
	test	eax, 12845056				; 00c40000H
	jne	SHORT $LN3@StyleHasBo
	xor	al, al

; 205  :               ( style  &  WS_BORDER     ) ||
; 206  :               ( style  &  WS_THICKFRAME ) ||
; 207  :               ( style  &  WS_DLGFRAME   )    );
; 208  :   }

	pop	ebp
	ret	0
$LN3@StyleHasBo:

; 204  :     return (  ( style == 0x0            ) ||

	mov	al, 1

; 205  :               ( style  &  WS_BORDER     ) ||
; 206  :               ( style  &  WS_THICKFRAME ) ||
; 207  :               ( style  &  WS_DLGFRAME   )    );
; 208  :   }

	pop	ebp
	ret	0
?StyleHasBorder@SK_WindowManager@@SA_NK@Z ENDP		; SK_WindowManager::StyleHasBorder
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fwm_dispatch@@YAXXZ
text$yd	SEGMENT
??__Fwm_dispatch@@YAXXZ PROC				; `dynamic atexit destructor for 'wm_dispatch'', COMDAT
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A+32
	call	??1?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::~_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A ; wm_dispatch
	jmp	??1?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::~_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
??__Fwm_dispatch@@YAXXZ ENDP				; `dynamic atexit destructor for 'wm_dispatch''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ??__Ewm_dispatch@@YAXXZ
text$di	SEGMENT
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -14						; size = 1
$T5 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??__Ewm_dispatch@@YAXXZ PROC				; `dynamic initializer for 'wm_dispatch'', COMDAT

; 192  : } wm_dispatch;

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__Ewm_dispatch@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 118  : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T5[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T3[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 118  : 		: _Mybase(key_compare(), allocator_type())

	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A ; wm_dispatch
	push	eax
	call	??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T2[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	push	eax
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A+32
	call	??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 192  : } wm_dispatch;

	push	OFFSET ??__Fwm_dispatch@@YAXXZ		; `dynamic atexit destructor for 'wm_dispatch''
	call	_atexit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	add	esp, 4
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
text$di	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__Ewm_dispatch@@YAXXZ$0:
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A ; wm_dispatch
	jmp	??1?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ
__ehhandler$??__Ewm_dispatch@@YAXXZ:
	mov	eax, OFFSET __ehfuncinfo$??__Ewm_dispatch@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__Ewm_dispatch@@YAXXZ ENDP				; `dynamic initializer for 'wm_dispatch''
; Function compile flags: /Ogtp
;	COMDAT ??1window_message_dispatch_s@@QAE@XZ
_TEXT	SEGMENT
??1window_message_dispatch_s@@QAE@XZ PROC		; window_message_dispatch_s::~window_message_dispatch_s, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+32]
	call	??1?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::~_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
	mov	ecx, esi
	pop	esi
	jmp	??1?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::~_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
??1window_message_dispatch_s@@QAE@XZ ENDP		; window_message_dispatch_s::~window_message_dispatch_s
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
;	COMDAT ??0window_message_dispatch_s@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -20						; size = 4
$T3 = -20						; size = 4
$T4 = -13						; size = 1
$T5 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0window_message_dispatch_s@@QAE@XZ PROC		; window_message_dispatch_s::window_message_dispatch_s, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0window_message_dispatch_s@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 118  : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T5[ebp]
	mov	esi, ecx
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _this$[ebp], esi
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T3[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 118  : 		: _Mybase(key_compare(), allocator_type())

	call	??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	eax
	lea	ecx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _this$[ebp], ecx
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T2[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	call	??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0window_message_dispatch_s@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ
__ehhandler$??0window_message_dispatch_s@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0window_message_dispatch_s@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0window_message_dispatch_s@@QAE@XZ ENDP		; window_message_dispatch_s::window_message_dispatch_s
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
__Where$1 = -8						; size = 8
__Where$2 = -8						; size = 8
__Ans$3 = -8						; size = 8
__Ans$4 = -8						; size = 8
__Ans$5 = -8						; size = 8
$T6 = 8							; size = 4
$T7 = 8							; size = 4
_hWnd$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?On_EXITSIZEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_EXITSIZEMOVE
; _this$ = ecx

; 906  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	lea	eax, DWORD PTR _hWnd$[ebp]
	push	eax
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 907  :   if ( moving_windows.count (hWnd) ||

	lea	edi, DWORD PTR [ecx+32]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	lea	eax, DWORD PTR __Ans$5[ebp]
	mov	ecx, edi
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, DWORD PTR __Ans$5[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Ans$5[ebp+4]
	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN114@On_EXITSIZ
$LL16@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL16@On_EXITSIZ
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 907  :   if ( moving_windows.count (hWnd) ||

	test	edx, edx
	jne	SHORT $LN3@On_EXITSIZ
$LN114@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	push	OFFSET ?game_window@@3Usk_window_s@@A+4
	lea	eax, DWORD PTR __Ans$4[ebp]
	mov	ecx, edi
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, DWORD PTR __Ans$4[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Ans$4[ebp+4]
	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	$LN117@On_EXITSIZ
$LL33@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL33@On_EXITSIZ
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 907  :   if ( moving_windows.count (hWnd) ||

	test	edx, edx
	je	$LN117@On_EXITSIZ
$LN3@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	lea	eax, DWORD PTR _hWnd$[ebp]
	mov	ecx, edi
	push	eax
	lea	eax, DWORD PTR __Ans$3[ebp]
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, DWORD PTR __Ans$3[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Ans$3[ebp+4]
	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN4@On_EXITSIZ
	npad	4
$LL50@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL50@On_EXITSIZ
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 910  :     if (moving_windows.count (hWnd))

	test	edx, edx
	je	SHORT $LN4@On_EXITSIZ
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 611  : 		_Pairii _Where = equal_range(_Keyval);

	lea	eax, DWORD PTR _hWnd$[ebp]
	mov	ecx, edi
	push	eax
	lea	eax, DWORD PTR __Where$2[ebp]
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	edx, DWORD PTR __Where$2[ebp]
	mov	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Where$2[ebp+4]
	cmp	edx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN66@On_EXITSIZ
$LL67@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL67@On_EXITSIZ
$LN66@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 613  : 		erase(_Where.first, _Where.second);

	push	ecx
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	mov	ecx, edi
	push	eax
	call	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 912  :     else

	jmp	SHORT $LN5@On_EXITSIZ
$LN4@On_EXITSIZ:
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 611  : 		_Pairii _Where = equal_range(_Keyval);

	push	OFFSET ?game_window@@3Usk_window_s@@A+4
	lea	eax, DWORD PTR __Where$1[ebp]
	mov	ecx, edi
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	esi, DWORD PTR __Where$1[ebp]
	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR __Where$1[ebp+4]
	cmp	esi, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN83@On_EXITSIZ
$LL84@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL84@On_EXITSIZ
$LN83@On_EXITSIZ:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 613  : 		erase(_Where.first, _Where.second);

	push	edx
	push	esi
	lea	eax, DWORD PTR $T6[ebp]
	mov	ecx, edi
	push	eax
	call	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
	pop	esi
$LN5@On_EXITSIZ:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 915  :     SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow

; 916  : 
; 917  :     if (config.window.unconfine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	je	SHORT $LN6@On_EXITSIZ

; 918  :       ClipCursor_Original (nullptr);

	push	0
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN6@On_EXITSIZ:

; 919  : 
; 920  :     if (config.window.confine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+766, 0
	je	SHORT $LN117@On_EXITSIZ

; 921  :       ClipCursor_Original (&game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN117@On_EXITSIZ:

; 922  :   }
; 923  : 
; 924  :   return false;

	xor	al, al
	pop	edi

; 925  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?On_EXITSIZEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_EXITSIZEMOVE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 8
_hWnd$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?On_ENTERSIZEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_ENTERSIZEMOVE
; _this$ = ecx

; 896  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi

; 897  :   ClipCursor (nullptr);

	push	0
	mov	esi, ecx
	call	DWORD PTR __imp__ClipCursor@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [esi+36]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	lea	ecx, DWORD PTR [esi+36]

; 96   : 		return (_Ptr);

	mov	edi, DWORD PTR [eax]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	lea	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@AAPAUHWND__@@@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@1@PAU21@0AAPAUHWND__@@@Z ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Buynode<HWND__ * &>
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [esi+40]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN55@On_ENTERSI

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN184@On_ENTERSI:
$LN55@On_ENTERSI:

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	lea	ecx, DWORD PTR [esi+32]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1952 : 		this->_Mysize() += _Count;

	mov	DWORD PTR [esi+40], eax

; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [esi+36]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 347  : 		return (_List._Unchecked_begin());

	mov	eax, DWORD PTR [eax]

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	add	eax, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
	pop	edi
	pop	esi
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 901  :   return false;

	xor	al, al
	pop	ebx

; 902  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN183@On_ENTERSI:
?On_ENTERSIZEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_ENTERSIZEMOVE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?On_MOUSEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_MOUSEMOVE
; _this$ = ecx

; 930  :   if (! game_window.active)

	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, 0
	jne	SHORT $LN4@On_MOUSEMO

; 931  :     GetCursorPos_Original (&game_window.cursor_pos);

	push	OFFSET ?game_window@@3Usk_window_s@@A+184
	call	DWORD PTR ?GetCursorPos_Original@@3P6GHPAUtagPOINT@@@ZA ; GetCursorPos_Original
$LN4@On_MOUSEMO:

; 932  : 
; 933  :   return false;

	xor	al, al

; 934  : }

	ret	16					; 00000010H
?On_MOUSEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_MOUSEMOVE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
$T2 = -8						; size = 8
$T3 = -4						; size = 4
_hWnd$ = 8						; size = 4
__Where$4 = 12						; size = 4
_wParam$ = 12						; size = 4
$T5 = 15						; size = 1
$T6 = 15						; size = 1
$T7 = 16						; size = 4
_lParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?On_NCACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_NCACTIVATE
; _this$ = ecx

; 979  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi

; 980  :   if (wParam != FALSE)

	mov	edi, DWORD PTR _wParam$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	lea	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	lea	eax, DWORD PTR __Where$4[ebp]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 979  : {

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	push	eax
	call	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 980  :   if (wParam != FALSE)

	cmp	DWORD PTR [edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$4[ebp]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 980  :   if (wParam != FALSE)

	je	SHORT $LN2@On_NCACTIV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN15@On_NCACTIV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	lea	eax, DWORD PTR _hWnd$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T7[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	mov	eax, DWORD PTR $T2[ebp]
$LN15@On_NCACTIV:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 982  :     if (active_windows [hWnd] == false)

	cmp	BYTE PTR [eax+12], 0
	jne	SHORT $LN5@On_NCACTIV

; 983  :       SK_LOG3 ( ( L"Application Activated (Non-Client)" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 3
	jl	SHORT $LN5@On_NCACTIV
	push	OFFSET $SG211441
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN5@On_NCACTIV:

; 984  :                   L"Window Mgr" );
; 985  : 
; 986  :     ActivateWindow (hWnd, true);

	push	1
	push	DWORD PTR _hWnd$[ebp]
	mov	ecx, OFFSET ?ActivateWindow@@3V<lambda>@@A ; ActivateWindow
	call	??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()
	pop	edi

; 1009 :   }
; 1010 : 
; 1011 :   return false;

	xor	al, al
	pop	esi

; 1012 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN2@On_NCACTIV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN111@On_NCACTIV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	lea	eax, DWORD PTR _hWnd$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T3[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	mov	eax, DWORD PTR $T1[ebp]
$LN111@On_NCACTIV:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 991  :     if (active_windows [hWnd] == true)

	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN7@On_NCACTIV

; 992  :       SK_LOG3 ( ( L"Application Deactivated (Non-Client)" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 3
	jl	SHORT $LN7@On_NCACTIV
	push	OFFSET $SG211444
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN7@On_NCACTIV:

; 993  :                   L"Window Mgr" );
; 994  : 
; 995  :     ActivateWindow (hWnd, false);

	push	0
	push	DWORD PTR _hWnd$[ebp]
	mov	ecx, OFFSET ?ActivateWindow@@3V<lambda>@@A ; ActivateWindow
	call	??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()

; 996  : 
; 997  :     // We must fully consume one of these messages or audio will stop playing
; 998  :     //   when the game loses focus, so do not simply pass this through to the
; 999  :     //     default window procedure.
; 1000 :     if ( (! SK_GetCurrentRenderBackend ().fullscreen_exclusive) &&

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN8@On_NCACTIV
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN8@On_NCACTIV

; 1001 :             config.window.background_render
; 1002 :        )
; 1003 :     {
; 1004 :       wParam = TRUE,

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR [edi], 1
	mov	DWORD PTR [ecx], eax
$LN8@On_NCACTIV:

; 1005 :       lParam = reinterpret_cast <LPARAM> (hWnd);
; 1006 :     }
; 1007 : 
; 1008 :     SK_GetCurrentRenderBackend ().fullscreen_exclusive = false;

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	pop	edi
	pop	esi
	mov	BYTE PTR [eax+48], 0

; 1009 :   }
; 1010 : 
; 1011 :   return false;

	xor	al, al

; 1012 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?On_NCACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_NCACTIVATE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
$T2 = -8						; size = 4
__Where$3 = -8						; size = 4
$T4 = -1						; size = 1
_hWnd$ = 8						; size = 4
_wParam$ = 12						; size = 4
_activate$ = 16						; size = 1
_lParam$ = 16						; size = 4
_pRet$ = 20						; size = 4
?On_ACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_ACTIVATE
; _this$ = ecx

; 1053 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	lea	eax, DWORD PTR _hWnd$[ebp]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1053 : {

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	push	eax
	lea	eax, DWORD PTR __Where$3[ebp]
	push	eax
	call	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$3[ebp]
	cmp	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN25@On_ACTIVAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	lea	eax, DWORD PTR _hWnd$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T2[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	mov	eax, DWORD PTR $T1[ebp]
$LN25@On_ACTIVAT:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1057 :   bool last_active = active_windows [hWnd];

	mov	bh, BYTE PTR [eax+12]

; 1058 : 
; 1059 :   switch (LOWORD (wParam))

	mov	eax, DWORD PTR _wParam$[ebp]
	movzx	ecx, WORD PTR [eax]

; 1060 :   {
; 1061 :     case WA_ACTIVE:
; 1062 :     case WA_CLICKACTIVE:
; 1063 :     default: // Unknown
; 1064 :     {
; 1065 :       activate = reinterpret_cast <HWND> (lParam) != game_window.hWnd;

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR [eax]
	test	cx, cx
	je	SHORT $LN7@On_ACTIVAT
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4

; 1066 :       source   = LOWORD (wParam) == 1 ? L"(WM_ACTIVATE [ WA_ACTIVE ])" :

	mov	esi, OFFSET $SG211485
	mov	eax, OFFSET $SG211486
	setne	bl
	cmp	ecx, 1
	cmovne	esi, eax

; 1067 :                                         L"(WM_ACTIVATE [ WA_CLICKACTIVE ])";
; 1068 :       ActivateWindow (hWnd, activate);
; 1069 :     } break;

	jmp	SHORT $LN119@On_ACTIVAT
$LN7@On_ACTIVAT:

; 1070 : 
; 1071 :     case WA_INACTIVE:
; 1072 :     {
; 1073 :       activate = ( lParam                           == 0                ) ||

	test	eax, eax
	je	SHORT $LN18@On_ACTIVAT
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	je	SHORT $LN18@On_ACTIVAT
	xor	bl, bl
	jmp	SHORT $LN117@On_ACTIVAT
$LN18@On_ACTIVAT:
	mov	bl, 1
$LN117@On_ACTIVAT:

; 1074 :                  ( reinterpret_cast <HWND> (lParam) == game_window.hWnd );
; 1075 :       source   = L"(WM_ACTIVATE [ WA_INACTIVE ])";

	mov	esi, OFFSET $SG211488
$LN119@On_ACTIVAT:

; 1070 : 
; 1071 :     case WA_INACTIVE:
; 1072 :     {
; 1073 :       activate = ( lParam                           == 0                ) ||

	mov	BYTE PTR _activate$[ebp], bl

; 1076 :       ActivateWindow (hWnd, activate);

	mov	ecx, OFFSET ?ActivateWindow@@3V<lambda>@@A ; ActivateWindow
	push	DWORD PTR _activate$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()

; 1077 :     } break;
; 1078 :   }
; 1079 : 
; 1080 :   switch (last_active)

	movzx	eax, bh
	sub	eax, 0
	je	SHORT $LN11@On_ACTIVAT
	sub	eax, 1
	jne	SHORT $LN13@On_ACTIVAT

; 1081 :   {
; 1082 :     case true:
; 1083 :       if (! activate)

	test	bl, bl
	jne	SHORT $LN13@On_ACTIVAT

; 1084 :       {
; 1085 :         SK_LOG2 ( ( L"Application Deactivated %s", source ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN13@On_ACTIVAT
	push	esi
	push	OFFSET $SG211492

; 1086 :                     L"Window Mgr" );
; 1087 :       }
; 1088 :       break;

	jmp	SHORT $LN118@On_ACTIVAT
$LN11@On_ACTIVAT:

; 1089 : 
; 1090 :     case false:
; 1091 :       if (activate)

	test	bl, bl
	je	SHORT $LN13@On_ACTIVAT

; 1092 :       {
; 1093 :         SK_LOG2 ( ( L"Application Activated %s", source ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN13@On_ACTIVAT
	push	esi
	push	OFFSET $SG211496
$LN118@On_ACTIVAT:
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN13@On_ACTIVAT:

; 1094 :                     L"Window Mgr" );
; 1095 :       }
; 1096 :       break;
; 1097 :   }
; 1098 : 
; 1099 :   if ((! SK_GetCurrentRenderBackend ().fullscreen_exclusive) && config.window.background_render)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN14@On_ACTIVAT
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN14@On_ACTIVAT

; 1100 :   {
; 1101 :     if (pRet) *pRet = 1;

	mov	eax, DWORD PTR _pRet$[ebp]
	test	eax, eax
	je	SHORT $LN15@On_ACTIVAT
	mov	DWORD PTR [eax], 1
$LN15@On_ACTIVAT:
	pop	esi

; 1102 :     return true;

	mov	al, 1
	pop	ebx

; 1109 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN14@On_ACTIVAT:

; 1103 :   }
; 1104 : 
; 1105 :   if (! activate)

	test	bl, bl
	jne	SHORT $LN16@On_ACTIVAT

; 1106 :     SK_GetCurrentRenderBackend ().fullscreen_exclusive = false;

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	mov	BYTE PTR [eax+48], bl
$LN16@On_ACTIVAT:

; 1107 : 
; 1108 :   return false;

	pop	esi
	xor	al, al
	pop	ebx

; 1109 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?On_ACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_ACTIVATE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
$T2 = -8						; size = 8
$T3 = -4						; size = 4
_hWnd$ = 8						; size = 4
__Where$4 = 12						; size = 4
_wParam$ = 12						; size = 4
$T5 = 15						; size = 1
$T6 = 15						; size = 1
$T7 = 16						; size = 4
_lParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?On_ACTIVATEAPP@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_ACTIVATEAPP
; _this$ = ecx

; 1016 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi

; 1017 :   if (wParam != FALSE)

	mov	edi, DWORD PTR _wParam$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	lea	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	lea	eax, DWORD PTR __Where$4[ebp]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1016 : {

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	push	eax
	call	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1017 :   if (wParam != FALSE)

	cmp	DWORD PTR [edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$4[ebp]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1017 :   if (wParam != FALSE)

	je	SHORT $LN2@On_ACTIVAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN15@On_ACTIVAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	lea	eax, DWORD PTR _hWnd$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T7[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	mov	eax, DWORD PTR $T2[ebp]
$LN15@On_ACTIVAT:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1019 :     if (active_windows [hWnd] == false)

	cmp	BYTE PTR [eax+12], 0
	jne	SHORT $LN5@On_ACTIVAT

; 1020 :       SK_LOG3 ( ( L"Application Activated (Non-Client)" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 3
	jl	SHORT $LN5@On_ACTIVAT
	push	OFFSET $SG211458
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN5@On_ACTIVAT:

; 1021 :                   L"Window Mgr" );
; 1022 : 
; 1023 :     ActivateWindow (hWnd, true);

	push	1
	push	DWORD PTR _hWnd$[ebp]
	mov	ecx, OFFSET ?ActivateWindow@@3V<lambda>@@A ; ActivateWindow
	call	??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()
	pop	edi

; 1046 :   }
; 1047 : 
; 1048 :   return false;

	xor	al, al
	pop	esi

; 1049 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN2@On_ACTIVAT:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN111@On_ACTIVAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	lea	eax, DWORD PTR _hWnd$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T3[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >
	mov	eax, DWORD PTR $T1[ebp]
$LN111@On_ACTIVAT:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1028 :     if (active_windows [hWnd] == true)

	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN7@On_ACTIVAT

; 1029 :       SK_LOG3 ( ( L"Application Deactivated (Non-Client)" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 3
	jl	SHORT $LN7@On_ACTIVAT
	push	OFFSET $SG211461
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN7@On_ACTIVAT:

; 1030 :                   L"Window Mgr" );
; 1031 : 
; 1032 :     ActivateWindow (hWnd, false);

	push	0
	push	DWORD PTR _hWnd$[ebp]
	mov	ecx, OFFSET ?ActivateWindow@@3V<lambda>@@A ; ActivateWindow
	call	??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()

; 1033 : 
; 1034 :     // We must fully consume one of these messages or audio will stop playing
; 1035 :     //   when the game loses focus, so do not simply pass this through to the
; 1036 :     //     default window procedure.
; 1037 :     if ( (! SK_GetCurrentRenderBackend ().fullscreen_exclusive) &&

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN8@On_ACTIVAT
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN8@On_ACTIVAT

; 1038 :             config.window.background_render
; 1039 :        )
; 1040 :     {
; 1041 :       wParam = TRUE,

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR [edi], 1
	mov	DWORD PTR [ecx], eax
$LN8@On_ACTIVAT:

; 1042 :       lParam = reinterpret_cast <LPARAM> (hWnd);
; 1043 :     }
; 1044 : 
; 1045 :     SK_GetCurrentRenderBackend ().fullscreen_exclusive = false;

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	pop	edi
	pop	esi
	mov	BYTE PTR [eax+48], 0

; 1046 :   }
; 1047 : 
; 1048 :   return false;

	xor	al, al

; 1049 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?On_ACTIVATEAPP@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_ACTIVATEAPP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_wParam$ = 12						; size = 4
___formal$ = 16						; size = 4
_pRet$ = 20						; size = 4
?On_MOUSEACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_MOUSEACTIVATE
; _this$ = ecx

; 938  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 939  :   SK_RenderBackend& rb = SK_GetCurrentRenderBackend ();

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend

; 940  : 
; 941  :   if ( reinterpret_cast <HWND> (wParam) == game_window.hWnd )

	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	esi, eax
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+4

; 942  :   {
; 943  :     ActivateWindow (hWnd, true);

	mov	ecx, OFFSET ?ActivateWindow@@3V<lambda>@@A ; ActivateWindow
	jne	SHORT $LN2@On_MOUSEAC
	push	1
	push	DWORD PTR _hWnd$[ebp]
	call	??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()

; 944  : 
; 945  :     if ((! rb.fullscreen_exclusive) && config.window.background_render)

	cmp	BYTE PTR [esi+48], 0
	jne	$LN3@On_MOUSEAC
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN3@On_MOUSEAC

; 946  :     {
; 947  :       SK_LOG2 ( ( L"WM_MOUSEACTIVATE ==> Activate and Eat" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN5@On_MOUSEAC
	push	OFFSET $SG211423
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN5@On_MOUSEAC:

; 948  :                   L"Window Mgr" );
; 949  :       if (pRet) *pRet = MA_ACTIVATEANDEAT;

	mov	eax, DWORD PTR _pRet$[ebp]
	test	eax, eax
	je	SHORT $LN6@On_MOUSEAC
	mov	DWORD PTR [eax], 2
$LN6@On_MOUSEAC:

; 950  : 
; 951  :       return true;

	mov	al, 1
	pop	esi

; 974  : }

	pop	ebp
	ret	16					; 00000010H
$LN2@On_MOUSEAC:

; 952  :     }
; 953  :   }
; 954  : 
; 955  :   else
; 956  :   {
; 957  :     ActivateWindow (hWnd, false);

	push	0
	push	DWORD PTR _hWnd$[ebp]
	call	??R<lambda_ffe6f3963d24d7ba2f5b274f92d39354>@@QBEXPAUHWND__@@_N@Z ; <lambda_ffe6f3963d24d7ba2f5b274f92d39354>::operator()

; 958  : 
; 959  :     // Game window was deactivated, but the game doesn't need to know this!
; 960  :     //   in fact, it needs to be told the opposite.
; 961  :     if ((! rb.fullscreen_exclusive) && config.window.background_render)

	cmp	BYTE PTR [esi+48], 0
	jne	SHORT $LN7@On_MOUSEAC
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+764, 0
	je	SHORT $LN7@On_MOUSEAC

; 962  :     {
; 963  :       SK_LOG2 ( ( L"WM_MOUSEACTIVATE (Other Window) ==> Activate" ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN8@On_MOUSEAC
	push	OFFSET $SG211427
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN8@On_MOUSEAC:

; 964  :                   L"Window Mgr" );
; 965  :       if (pRet) *pRet = MA_ACTIVATE;

	mov	eax, DWORD PTR _pRet$[ebp]
	test	eax, eax
	je	SHORT $LN9@On_MOUSEAC
	mov	DWORD PTR [eax], 1
$LN9@On_MOUSEAC:

; 966  : 
; 967  :       return true;

	mov	al, 1
	pop	esi

; 974  : }

	pop	ebp
	ret	16					; 00000010H
$LN7@On_MOUSEAC:

; 968  :     }
; 969  : 
; 970  :     rb.fullscreen_exclusive = false;

	mov	BYTE PTR [esi+48], 0
$LN3@On_MOUSEAC:

; 971  :   }
; 972  : 
; 973  :   return false;

	xor	al, al
	pop	esi

; 974  : }

	pop	ebp
	ret	16					; 00000010H
?On_MOUSEACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_MOUSEACTIVATE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_client$1 = -16						; size = 16
__Ans$2 = -8						; size = 8
_hWnd$ = 8						; size = 4
___formal$ = 12						; size = 4
_lParam$ = 16						; size = 4
_pRet$ = 20						; size = 4
?On_WINDOWPOSCHANGED@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_WINDOWPOSCHANGED
; _this$ = ecx

; 3469 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 3470 :   if (game_window.hWnd != hWnd)

	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	sub	esp, 16					; 00000010H
	push	edi
	mov	edi, ecx
	cmp	edx, DWORD PTR _hWnd$[ebp]
	jne	$LN18@On_WINDOWP

; 3471 :     return false;
; 3472 : 
; 3473 :   auto wnd_pos =
; 3474 :     reinterpret_cast <LPWINDOWPOS> (lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	push	ebx

; 3475 : 
; 3476 :   bool offset = false;

	xor	bh, bh

; 3477 : 
; 3478 :   // Test for user-defined position; if it exists, then we must
; 3479 :   //   respond to all WM_WINDOWPOSCHANGED messages indicating window movement
; 3480 :   if ( config.window.offset.x.absolute                 || config.window.offset.y.absolute ||
; 3481 :        ( config.window.offset.x.percent >  0.000001f ||
; 3482 :          config.window.offset.x.percent < -0.000001f ) ||

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+748, 0
	push	esi
	mov	esi, DWORD PTR [eax]
	jne	SHORT $LN5@On_WINDOWP
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+756, 0
	jne	SHORT $LN5@On_WINDOWP
	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+752
	movss	xmm1, DWORD PTR __real@358637bd
	comiss	xmm0, xmm1
	ja	SHORT $LN5@On_WINDOWP
	movss	xmm2, DWORD PTR __real@b58637bd
	comiss	xmm2, xmm0
	ja	SHORT $LN5@On_WINDOWP
	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+760
	comiss	xmm0, xmm1
	ja	SHORT $LN5@On_WINDOWP
	comiss	xmm2, xmm0
	jbe	SHORT $LN3@On_WINDOWP
$LN5@On_WINDOWP:

; 3483 :        ( config.window.offset.y.percent >  0.000001f ||
; 3484 :          config.window.offset.y.percent < -0.000001f )
; 3485 :      )
; 3486 :     offset = true;

	mov	bh, 1
$LN3@On_WINDOWP:

; 3487 : 
; 3488 :   bool temp_override = false;

	xor	bl, bl
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+772, 0
	jne	SHORT $LN6@On_WINDOWP
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+776, 0
	jne	SHORT $LN6@On_WINDOWP
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 3496 :     GetClientRect_Original (game_window.hWnd, &client);

	lea	eax, DWORD PTR _client$1[ebp]
	xorps	xmm0, xmm0
	push	eax
	push	edx
	mov	bl, 1
	movups	XMMWORD PTR _client$1[ebp], xmm0
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 3497 : 
; 3498 :     config.window.res.override.x = client.right  - client.left;

	mov	eax, DWORD PTR _client$1[ebp+8]
	sub	eax, DWORD PTR _client$1[ebp]
	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, eax

; 3499 :     config.window.res.override.y = client.bottom - client.top;

	mov	eax, DWORD PTR _client$1[ebp+12]
	sub	eax, DWORD PTR _client$1[ebp+4]
	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, eax
$LN6@On_WINDOWP:

; 3500 :   }
; 3501 : 
; 3502 :   SK_RenderBackend& rb = SK_GetCurrentRenderBackend ();

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend

; 3508 :       || (! ( config.window.res.override.isZero () ||

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+746, 0
	je	SHORT $LN10@On_WINDOWP
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN11@On_WINDOWP
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	jne	SHORT $LN10@On_WINDOWP
$LN11@On_WINDOWP:
	cmp	BYTE PTR [eax+48], 0
	je	SHORT $LN8@On_WINDOWP
$LN10@On_WINDOWP:
	test	bh, bh
	je	SHORT $LN12@On_WINDOWP
	test	BYTE PTR [esi+24], 2
	je	SHORT $LN8@On_WINDOWP
$LN12@On_WINDOWP:
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+772, 0
	jne	SHORT $LN26@On_WINDOWP
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+776, 0
	je	SHORT $LN7@On_WINDOWP
$LN26@On_WINDOWP:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 3508 :       || (! ( config.window.res.override.isZero () ||

	test	bl, bl
	jne	SHORT $LN49@On_WINDOWP
	test	BYTE PTR [esi+24], 1
	jne	SHORT $LN13@On_WINDOWP
$LN8@On_WINDOWP:

; 3509 :          (    temp_override                           ))  &&  (!(wnd_pos->flags & SWP_NOSIZE)) )
; 3510 :      )
; 3511 :   {
; 3512 :     wnd_pos->flags |= ( SWP_NOSENDCHANGING );

	or	DWORD PTR [esi+24], 1024		; 00000400H

; 3513 :     SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow
$LN7@On_WINDOWP:

; 3514 :   }
; 3515 : 
; 3516 :   if (temp_override)

	test	bl, bl
	je	SHORT $LN13@On_WINDOWP
$LN49@On_WINDOWP:

; 3517 :   {
; 3518 :     config.window.res.override.x = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+772, 0

; 3519 :     config.window.res.override.y = 0;

	mov	DWORD PTR ?config@@3Usk_config_t@@A+776, 0
$LN13@On_WINDOWP:

; 3520 :   }
; 3521 : 
; 3522 :   wnd_pos->x  = game_window.actual.window.left;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	mov	DWORD PTR [esi+8], eax

; 3523 :   wnd_pos->y  = game_window.actual.window.top;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	mov	DWORD PTR [esi+12], eax

; 3524 : 
; 3525 :   wnd_pos->cx = game_window.actual.window.right  - game_window.actual.window.left;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+108
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	mov	DWORD PTR [esi+16], eax

; 3526 :   wnd_pos->cy = game_window.actual.window.bottom - game_window.actual.window.top;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	mov	DWORD PTR [esi+20], eax

; 3530 :   if (config.window.confine_cursor && (! moving_windows.count (hWnd)))

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+766, 0
	movups	xmm0, XMMWORD PTR ?game_window@@3Usk_window_s@@A+100
	pop	esi
	pop	ebx
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+52, xmm0
	je	SHORT $LN14@On_WINDOWP
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	lea	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	lea	eax, DWORD PTR __Ans$2[ebp]
	push	eax
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 3530 :   if (config.window.confine_cursor && (! moving_windows.count (hWnd)))

	lea	ecx, DWORD PTR [edi+32]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, DWORD PTR __Ans$2[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Ans$2[ebp+4]
	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN52@On_WINDOWP
	npad	6
$LL35@On_WINDOWP:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL35@On_WINDOWP
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 3530 :   if (config.window.confine_cursor && (! moving_windows.count (hWnd)))

	test	edx, edx
	jne	SHORT $LN14@On_WINDOWP
$LN52@On_WINDOWP:

; 3531 :     ClipCursor_Original (&game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	jmp	SHORT $LN53@On_WINDOWP
$LN14@On_WINDOWP:

; 3532 :   else if (config.window.unconfine_cursor)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	je	SHORT $LN16@On_WINDOWP

; 3533 :     ClipCursor_Original (nullptr);

	push	0
$LN53@On_WINDOWP:
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN16@On_WINDOWP:

; 3534 : 
; 3535 :   // Filter this message
; 3536 :   if (config.window.borderless && config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	SHORT $LN18@On_WINDOWP
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN18@On_WINDOWP

; 3537 :   {
; 3538 :     if (pRet) *pRet = 1;

	mov	eax, DWORD PTR _pRet$[ebp]
	test	eax, eax
	je	SHORT $LN18@On_WINDOWP
	mov	DWORD PTR [eax], 1
$LN18@On_WINDOWP:

; 3539 : 
; 3540 :     //return true;
; 3541 :   }
; 3542 : 
; 3543 :   return false;

	xor	al, al
	pop	edi

; 3544 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?On_WINDOWPOSCHANGED@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_WINDOWPOSCHANGED
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_mi$1 = -40						; size = 40
_hWnd$ = 8						; size = 4
___formal$ = 12						; size = 4
_lParam$ = 16						; size = 4
_pRet$ = 20						; size = 4
?On_WINDOWPOSCHANGING@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z PROC ; window_message_dispatch_s::On_WINDOWPOSCHANGING
; _this$ = ecx

; 3381 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi

; 3382 :   if (hWnd != game_window.hWnd)

	mov	edi, DWORD PTR _hWnd$[ebp]
	cmp	edi, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	je	SHORT $LN2@On_WINDOWP

; 3383 :     return false;

	xor	al, al
	pop	edi

; 3465 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN2@On_WINDOWP:

; 3384 : 
; 3385 :   auto wnd_pos =
; 3386 :     reinterpret_cast <LPWINDOWPOS> (lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	push	esi
	mov	esi, DWORD PTR [eax]

; 3387 : 
; 3388 :   if ( (wnd_pos->flags ^ SWP_NOSIZE) ||
; 3389 :        (wnd_pos->flags ^ SWP_NOMOVE) )
; 3390 :   {
; 3391 :     ImGui_ImplDX11_InvalidateDeviceObjects ();

	call	?ImGui_ImplDX11_InvalidateDeviceObjects@@YAXXZ ; ImGui_ImplDX11_InvalidateDeviceObjects

; 3392 : 
; 3393 :     //GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);
; 3394 :     //GetClientRect_Original (game_window.hWnd, &game_window.actual.client);
; 3395 : 
; 3396 :     int width  = wnd_pos->cx;
; 3397 :     int height = wnd_pos->cy;
; 3398 : 
; 3399 :     if (wnd_pos->flags & SWP_NOMOVE)

	test	BYTE PTR [esi+24], 2
	mov	ecx, DWORD PTR [esi+20]
	je	SHORT $LN5@On_WINDOWP

; 3400 :     {
; 3401 :       //game_window.game.window.left   = wnd_pos->x;
; 3402 :       //game_window.game.window.top    = wnd_pos->y;
; 3403 : 
; 3404 :       game_window.game.window.right  = game_window.game.window.left   + width;

	mov	eax, DWORD PTR [esi+16]
	add	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+52

; 3405 :       game_window.game.window.bottom = game_window.game.window.bottom + height;

	add	DWORD PTR ?game_window@@3Usk_window_s@@A+64, ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+60, eax
$LN5@On_WINDOWP:

; 3406 :     }
; 3407 : 
; 3408 :     if (wnd_pos->flags & SWP_NOSIZE)
; 3409 :     {
; 3410 :       width  = game_window.game.window.right  - game_window.game.window.left;
; 3411 :       height = game_window.game.window.bottom - game_window.game.window.top;
; 3412 : 
; 3413 :       game_window.game.window.right  = game_window.game.window.left + width;
; 3414 :       game_window.game.window.bottom = game_window.game.window.top  + height;
; 3415 :     }
; 3416 :   }
; 3417 : 
; 3418 :   //if (config.window.borderless && (wnd_pos->flags & SWP_FRAMECHANGED))
; 3419 :   //  SK_AdjustBorder ();
; 3420 : 
; 3421 :   //game_window.game.client = game_window.game.window;
; 3422 : 
; 3423 :   if (((! (wnd_pos->flags & SWP_NOMOVE)) || (! (wnd_pos->flags & SWP_NOSIZE))))

	mov	eax, DWORD PTR [esi+24]
	and	eax, 3
	cmp	al, 3
	je	$LN11@On_WINDOWP

; 3424 :   {
; 3425 :     // Filter this message
; 3426 :     if (config.window.borderless && config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	$LN11@On_WINDOWP
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	$LN11@On_WINDOWP

; 3427 :     {
; 3428 :       HMONITOR hMonitor =
; 3429 :       MonitorFromWindow ( hWnd,

	push	2
	push	edi
	call	DWORD PTR __imp__MonitorFromWindow@8

; 3430 :                             MONITOR_DEFAULTTONEAREST );
; 3431 : 
; 3432 :       MONITORINFO mi = { 0 };
; 3433 :       mi.cbSize      = sizeof (mi);
; 3434 : 
; 3435 :       GetMonitorInfo (hMonitor, &mi);

	lea	ecx, DWORD PTR _mi$1[ebp]
	mov	DWORD PTR _mi$1[ebp+36], 0
	xorps	xmm0, xmm0
	mov	DWORD PTR _mi$1[ebp], 40		; 00000028H
	push	ecx
	push	eax
	movups	XMMWORD PTR _mi$1[ebp+4], xmm0
	movups	XMMWORD PTR _mi$1[ebp+20], xmm0
	call	DWORD PTR __imp__GetMonitorInfoW@8

; 3436 : 
; 3437 :       wnd_pos->cx = game_window.game.window.right  - game_window.game.window.left;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+60
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+52

; 3438 :       wnd_pos->cy = game_window.game.window.bottom - game_window.game.window.top;
; 3439 : 
; 3440 :       game_window.actual.window = mi.rcMonitor;

	movups	xmm1, XMMWORD PTR _mi$1[ebp+4]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+64
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+56

; 3441 : 
; 3442 :       (game_window.actual.window.right  -= game_window.actual.window.left);

	movaps	xmm0, xmm1
	mov	DWORD PTR [esi+20], eax
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+100, xmm1

; 3443 :       (game_window.actual.window.bottom -= game_window.actual.window.top);
; 3444 : 
; 3445 :       game_window.actual.client.left   = 0;

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+84, 0
	psrldq	xmm0, 8
	movd	eax, xmm1
	movd	ecx, xmm0

; 3446 :       game_window.actual.client.right  = game_window.actual.window.right;
; 3447 :       game_window.actual.client.top    = 0;

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+88, 0
	sub	ecx, eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+112, eax

; 3448 :       game_window.actual.client.bottom = game_window.actual.window.bottom;

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+96, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+108, ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+92, ecx

; 3449 : 
; 3450 :       wnd_pos->x  = 0;

	mov	DWORD PTR [esi+8], 0

; 3451 :       wnd_pos->y  = 0;

	mov	DWORD PTR [esi+12], 0

; 3452 :       wnd_pos->cx = game_window.actual.window.right  - game_window.actual.window.left;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+108
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	mov	DWORD PTR [esi+16], eax

; 3453 :       wnd_pos->cy = game_window.actual.window.bottom - game_window.actual.window.top;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104

; 3454 : 
; 3455 :       wnd_pos->flags |= (SWP_NOMOVE | SWP_NOSIZE | SWP_NOSENDCHANGING);

	or	DWORD PTR [esi+24], 1027		; 00000403H
	mov	DWORD PTR [esi+20], eax

; 3456 : 
; 3457 :       if (pRet) *pRet = 0;

	mov	eax, DWORD PTR _pRet$[ebp]
	test	eax, eax
	je	SHORT $LN10@On_WINDOWP
	mov	DWORD PTR [eax], 0
$LN10@On_WINDOWP:

; 3458 : 
; 3459 :       if (wnd_pos->flags & SWP_NOACTIVATE)

	test	BYTE PTR [esi+24], 16			; 00000010H
	je	SHORT $LN11@On_WINDOWP

; 3460 :         return true;

	pop	esi
	mov	al, 1
	pop	edi

; 3465 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN11@On_WINDOWP:
	pop	esi

; 3461 :     }
; 3462 :   }
; 3463 : 
; 3464 :   return false;

	xor	al, al
	pop	edi

; 3465 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?On_WINDOWPOSCHANGING@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ENDP ; window_message_dispatch_s::On_WINDOWPOSCHANGING
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$unordered_set@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unordered_set@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ PROC ; std::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >::~unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx
	jmp	??1?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::~_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
??1?$unordered_set@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ ENDP ; std::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >::~unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
;	COMDAT ??0?$unordered_set@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -8						; size = 4
$T2 = -1						; size = 1
??0?$unordered_set@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ PROC ; std::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx

; 91   : 		{	// construct empty set from defaults

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 90   : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T2[ebp]

; 91   : 		{	// construct empty set from defaults

	mov	esi, ecx
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _this$[ebp], esi
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T1[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	call	??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >

; 92   : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unordered_set@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ ENDP ; std::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >::unordered_set<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Xlength, COMDAT

; 1962 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlength:
$LN3@Xlength:
	int	3
?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Tidy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1946 : 		{	// free all storage

	npad	2
	push	esi
	mov	esi, ecx

; 1947 : 		this->_Orphan_all();
; 1948 : 
; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Tidy

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:
	pop	esi

; 1957 : 			}
; 1958 : 		}

	ret	0
?_Tidy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Change_array@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@II@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Change_array, COMDAT
; _this$ = ecx

; 1931 : 		{	// orphan all iterators, discard old array, acquire new array

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx

; 1932 : 		this->_Orphan_all();
; 1933 : 
; 1934 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Change_arr

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Change_arr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1940 : 		this->_Myfirst() = _Newvec;

	mov	ecx, DWORD PTR __Newvec$[ebp]

; 1941 : 		this->_Mylast() = _Newvec + _Newsize;

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [esi], ecx
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+4], eax

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 1943 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Change_array@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@II@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Buy, COMDAT
; _this$ = ecx

; 1908 : 		{	// allocate array with _Newcapacity elements

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1909 : 		this->_Myfirst() = pointer();
; 1910 : 		this->_Mylast() = pointer();
; 1911 : 		this->_Myend() = pointer();
; 1912 : 
; 1913 : 		if (_Newcapacity == 0)

	mov	edi, DWORD PTR __Newcapacity$[ebp]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	test	edi, edi
	jne	SHORT $LN2@Buy

; 1914 : 			{
; 1915 : 			return (false);

	pop	edi
	xor	al, al
	pop	esi

; 1928 : 		}

	pop	ebp
	ret	4
$LN2@Buy:

; 1916 : 			}
; 1917 : 
; 1918 : 		if (_Newcapacity > max_size())

	cmp	edi, 1073741823				; 3fffffffH
	ja	SHORT $LN115@Buy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	edi
	call	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1923 : 		this->_Myfirst() = this->_Getal().allocate(_Newcapacity);

	mov	DWORD PTR [esi], eax

; 1924 : 		this->_Mylast() = this->_Myfirst();

	mov	DWORD PTR [esi+4], eax

; 1925 : 		this->_Myend() = this->_Myfirst() + _Newcapacity;

	mov	eax, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+8], eax

; 1926 : 
; 1927 : 		return (true);

	mov	al, 1
	pop	edi
	pop	esi

; 1928 : 		}

	pop	ebp
	ret	4
$LN115@Buy:

; 1919 : 			{
; 1920 : 			_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Xlength
$LN117@Buy:
$LN114@Buy:
	int	3
?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Buy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@ABEII@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@ABEII@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1889 : 		{	// given _Oldcapacity and _Newsize, calculate geometric growth

	npad	2
	push	ebp
	mov	ebp, esp

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	edx, DWORD PTR [ecx+8]

; 1890 : 		const size_type _Oldcapacity = capacity();
; 1891 : 
; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	eax, 1073741823				; 3fffffffH

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sub	edx, DWORD PTR [ecx]
	sar	edx, 2

; 1890 : 		const size_type _Oldcapacity = capacity();
; 1891 : 
; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	ecx, edx
	shr	ecx, 1
	sub	eax, ecx
	cmp	edx, eax
	jbe	SHORT $LN2@Calculate_

; 1893 : 			{
; 1894 : 			return (_Newsize);	// geometric growth would overflow

	mov	eax, DWORD PTR __Newsize$[ebp]

; 1900 : 			{
; 1901 : 			return (_Newsize);	// geometric growth would be insufficient
; 1902 : 			}
; 1903 : 
; 1904 : 		return (_Geometric);	// geometric growth is sufficient
; 1905 : 		}

	pop	ebp
	ret	4
$LN2@Calculate_:

; 1895 : 			}
; 1896 : 
; 1897 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [ecx+edx]

; 1898 : 
; 1899 : 		if (_Geometric < _Newsize)

	cmp	eax, DWORD PTR __Newsize$[ebp]
	cmovb	eax, DWORD PTR __Newsize$[ebp]

; 1900 : 			{
; 1901 : 			return (_Newsize);	// geometric growth would be insufficient
; 1902 : 			}
; 1903 : 
; 1904 : 		return (_Geometric);	// geometric growth is sufficient
; 1905 : 		}

	pop	ebp
	ret	4
?_Calculate_growth@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@ABEII@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@0@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1885 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1886 : 		}

	ret	8
?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@0@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept, COMDAT
; _this$ = ecx

; 1878 : 		{	// move_if_noexcept [_First, _Last) to raw _Dest, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1881 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Umove_if_noexcept@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept1, COMDAT
; _this$ = ecx

; 1868 : 		{	// move [_First, _Last) to raw _Dest, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1870 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@PAV32@IABV32@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
$T1 = 16						; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@PAV32@IABV32@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Ufill, COMDAT
; _this$ = ecx

; 1852 : 		{	// fill raw _Dest with _Count copies of _Val, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Dest$[ebp]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1854 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@PAV32@IABV32@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Ufill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@I@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::operator[], COMDAT
; _this$ = ecx

; 1750 : 		{	// subscript nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 1751 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1752 : 		if (size() <= _Pos)
; 1753 : 			{	// report error
; 1754 : 			_DEBUG_ERROR("vector subscript out of range");
; 1755 : 			}
; 1756 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1757 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1758 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1759 : 
; 1760 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 1761 : 		}

	pop	ebp
	ret	4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@I@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@I@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::operator[], COMDAT
; _this$ = ecx

; 1736 : 		{	// subscript mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 1737 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1738 : 		if (size() <= _Pos)
; 1739 : 			{	// report error
; 1740 : 			_DEBUG_ERROR("vector subscript out of range");
; 1741 : 			}
; 1742 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1743 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1744 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1745 : 
; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 1747 : 		}

	pop	ebp
	ret	4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@I@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::capacity, COMDAT
; _this$ = ecx

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1721 : 		}

	ret	0
?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size, COMDAT
; _this$ = ecx

; 1715 : 		return (this->_Getal().max_size());

	mov	eax, 1073741823				; 3fffffffH

; 1716 : 		}

	ret	0
?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::size, COMDAT
; _this$ = ecx

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1711 : 		}

	ret	0
?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?reserve@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?reserve@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::reserve, COMDAT
; _this$ = ecx

; 1528 : 		{	// increase capacity to _Newcapacity (without geometric growth), provide strong guarantee

	npad	2
	push	ebp
	mov	ebp, esp

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]

; 1529 : 		if (_Newcapacity > capacity())

	mov	edx, DWORD PTR __Newcapacity$[ebp]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sar	eax, 2

; 1529 : 		if (_Newcapacity > capacity())

	cmp	edx, eax
	jbe	SHORT $LN2@reserve

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())

	cmp	edx, 1073741823				; 3fffffffH
	ja	SHORT $LN55@reserve

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	mov	DWORD PTR __Newcapacity$[ebp], edx

; 1537 : 			}
; 1538 : 		}

	pop	ebp

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	jmp	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
$LN2@reserve:

; 1537 : 			}
; 1538 : 		}

	pop	ebp
	ret	4
$LN55@reserve:

; 1532 : 				{
; 1533 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Xlength
$LN57@reserve:
$LN54@reserve:
	int	3
?reserve@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::reserve
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Newvec$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T2 = 8							; size = 1
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1511 : 		{	// set capacity to _Newcapacity (without geometric growth), provide strong guarantee

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	DWORD PTR __Newcapacity$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	ebx, DWORD PTR [esi+4]
	sub	ebx, DWORD PTR [esi]

; 1511 : 		{	// set capacity to _Newcapacity (without geometric growth), provide strong guarantee

	mov	DWORD PTR _this$[ebp], esi

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sar	ebx, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	call	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1514 : 		const pointer _Newvec = this->_Getal().allocate(_Newcapacity);

	mov	edi, eax

; 1515 : 
; 1516 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	esi
	push	edi
	push	DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1514 : 		const pointer _Newvec = this->_Getal().allocate(_Newcapacity);

	mov	DWORD PTR __Newvec$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	DWORD PTR [esi]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1934 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1934 : 		if (this->_Myfirst() != pointer())

	test	ecx, ecx
	je	SHORT $LN83@Reallocate

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN83@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1524 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]

; 1941 : 		this->_Mylast() = _Newvec + _Newsize;

	lea	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], eax

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]

; 1524 : 		}

	pop	edi

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	DWORD PTR [esi+8], eax

; 1524 : 		}

	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z$0:

; 1517 : 		_Umove_if_noexcept(this->_Myfirst(), this->_Mylast(), _Newvec);
; 1518 : 		_CATCH_ALL
; 1519 : 		this->_Getal().deallocate(_Newvec, _Newcapacity);

	push	DWORD PTR __Newcapacity$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR __Newvec$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::deallocate

; 1520 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN180@Reallocate:
$LN179@Reallocate:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
__Oldsize$1$ = -4					; size = 4
$T1 = 8							; size = 1
__Newsize$ = 8						; size = 4
$T2 = 12						; size = 1
$T3 = 12						; size = 1
__Val$ = 12						; size = 4
?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::assign, COMDAT
; _this$ = ecx

; 1287 : 		{	// assign _Newsize * _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	esi
	push	edi

; 1288 : 		this->_Orphan_all();
; 1289 : 
; 1290 : 		const size_type _Oldsize = size();
; 1291 : 		const size_type _Oldcapacity = capacity();
; 1292 : 
; 1293 : 		if (_Newsize > _Oldcapacity)

	mov	edi, DWORD PTR __Newsize$[ebp]

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	edx, DWORD PTR [ebx]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR [ebx+8]

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	eax, DWORD PTR [ebx+4]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sub	ecx, edx

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sub	eax, edx

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sar	ecx, 2

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sar	eax, 2
	mov	DWORD PTR __Oldsize$1$[ebp], eax

; 1288 : 		this->_Orphan_all();
; 1289 : 
; 1290 : 		const size_type _Oldsize = size();
; 1291 : 		const size_type _Oldcapacity = capacity();
; 1292 : 
; 1293 : 		if (_Newsize > _Oldcapacity)

	cmp	edi, ecx
	jbe	SHORT $LN2@assign

; 1294 : 			{	// reallocate
; 1295 : 			if (_Newsize > max_size())

	cmp	edi, 1073741823				; 3fffffffH
	ja	$LN297@assign

; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	esi, ecx
	mov	eax, 1073741823				; 3fffffffH
	shr	esi, 1
	sub	eax, esi
	cmp	ecx, eax
	jbe	SHORT $LN79@assign

; 1893 : 			{
; 1894 : 			return (_Newsize);	// geometric growth would overflow

	mov	esi, edi
	jmp	SHORT $LN80@assign
$LN79@assign:

; 1895 : 			}
; 1896 : 
; 1897 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	add	esi, ecx

; 1898 : 
; 1899 : 		if (_Geometric < _Newsize)

	cmp	esi, edi
	cmovb	esi, edi
$LN80@assign:

; 1298 : 				}
; 1299 : 
; 1300 : 			const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1301 : 
; 1302 : 			if (this->_Myfirst() != pointer())

	test	edx, edx
	je	SHORT $LN5@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	ecx
	push	edx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN5@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1308 : 			_Buy(_Newcapacity);

	push	esi
	mov	ecx, ebx
	call	?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Buy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T3[ebp]
	push	ebx
	push	DWORD PTR __Val$[ebp]
	push	edi
	push	DWORD PTR [ebx]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1310 : 			this->_Mylast() = _Ufill(this->_Myfirst(), _Newsize, _Val);

	mov	DWORD PTR [ebx+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2682 : 	return {};

	mov	BYTE PTR $T1[ebp], 0

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR $T1[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1312 : 		else if (_Newsize > _Oldsize)

	cmp	edi, eax
	jbe	SHORT $LN6@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	mov	esi, DWORD PTR __Val$[ebp]
	push	esi
	push	DWORD PTR [ebx+4]
	push	edx
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1315 : 			this->_Mylast() = _Ufill(this->_Mylast(), _Newsize - _Oldsize, _Val);

	sub	edi, DWORD PTR __Oldsize$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	ebx
	push	esi
	push	edi
	push	DWORD PTR [ebx+4]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
	add	esp, 36					; 00000024H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1315 : 			this->_Mylast() = _Ufill(this->_Mylast(), _Newsize - _Oldsize, _Val);

	mov	DWORD PTR [ebx+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1319 : 			const pointer _Newlast = this->_Myfirst() + _Newsize;

	lea	esi, DWORD PTR [edx+edi*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	esi
	push	edx
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1322 : 			this->_Mylast() = _Newlast;

	mov	DWORD PTR [ebx+4], esi
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN297@assign:

; 1296 : 				{
; 1297 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Xlength
$LN299@assign:
$LN296@assign:
	int	3
?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::~vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx

; 891  : 		{	// destroy the object

	npad	2
	push	esi
	mov	esi, ecx

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN4@vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi

; 892  : 		_Tidy();
; 893  : 		}

	ret	0
??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::~vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 728  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 728  : 		}

	ret	4
??0?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 480  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myend, COMDAT
; _this$ = ecx

; 676  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 677  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myend, COMDAT
; _this$ = ecx

; 671  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 672  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Mylast, COMDAT
; _this$ = ecx

; 666  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 667  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Mylast, COMDAT
; _this$ = ecx

; 661  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 662  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myfirst, COMDAT
; _this$ = ecx

; 656  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 657  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myfirst, COMDAT
; _this$ = ecx

; 651  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 652  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Get_data, COMDAT
; _this$ = ecx

; 646  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 647  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Get_data, COMDAT
; _this$ = ecx

; 641  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 642  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Getal, COMDAT
; _this$ = ecx

; 636  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 637  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Getal, COMDAT
; _this$ = ecx

; 631  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 632  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Orphan_all, COMDAT
; _this$ = ecx

; 621  : 		_Get_data()._Orphan_all();
; 622  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 1073741823				; 3fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocate
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size, COMDAT

; 751  : 		return (_Alloc_max_size::_Fn(0, _Al));

	mov	eax, 1073741823				; 3fffffffH

; 752  : 		}

	ret	0
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 1073741823				; 3fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABU01@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >, COMDAT
; _this$ = ecx

; 1043 : 		}

	mov	eax, ecx
	ret	4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABMXZ
_TEXT	SEGMENT
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABMXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 960  : 		return (_Traitsobj._Get_max_bucket_size());

	mov	eax, ecx

; 961  : 		}

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABMXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAMXZ
_TEXT	SEGMENT
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAMXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 955  : 		return (_Traitsobj._Get_max_bucket_size());

	mov	eax, ecx

; 956  : 		}

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAMXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Reinsert@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
?_Reinsert@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 940  : 		{	// insert elements in [begin(), end())

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, ecx

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [eax], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 942  : 		if (_Unchecked_begin() != _Last)

	je	SHORT $LN115@Reinsert
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	edi, DWORD PTR [eax+4]
$LL2@Reinsert:

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	mov	ecx, ebx

; 347  : 		return (_List._Unchecked_begin());

	mov	esi, DWORD PTR [esi]

; 947  : 				_Insert(*_First, _First);

	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 948  : 				if (_Done)

	jne	SHORT $LL2@Reinsert
	pop	edi
	pop	esi
$LN115@Reinsert:
	pop	ebx

; 949  : 					break;
; 950  : 				}
; 951  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Reinsert@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Reinsert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Check_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
?_Check_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Check_size, COMDAT
; _this$ = ecx

; 924  : 		{	// grow table as needed

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, ecx

; 494  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [ebx+28]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	eax, ecx
	shr	eax, 31					; 0000001fH
	cvtpd2ps xmm1, xmm0
	movd	xmm0, ecx
	cvtdq2pd xmm0, xmm0
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	divss	xmm1, xmm0

; 925  : 		if (max_load_factor() < load_factor())

	comiss	xmm1, DWORD PTR [ebx]
	jbe	SHORT $LN187@Check_size

; 926  : 
; 927  : 			{	// rehash to bigger table
; 928  : 			size_type _Newsize = bucket_count();
; 929  : 
; 930  : 			if (_Newsize < 512)

	cmp	ecx, 512				; 00000200H
	jae	SHORT $LN3@Check_size

; 931  : 				_Newsize *= 8;	// multiply by 8

	shl	ecx, 3
	jmp	SHORT $LN5@Check_size
$LN3@Check_size:

; 932  : 			else if (_Newsize < _Vec.max_size() / 2)

	cmp	ecx, 536870911				; 1fffffffH
	jae	SHORT $LN5@Check_size

; 933  : 				_Newsize *= 2;	// multiply safely by 2

	add	ecx, ecx
$LN5@Check_size:
	push	edi

; 934  : 			_Init(_Newsize);

	push	ecx
	mov	ecx, ebx
	call	?_Init@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Init

; 357  : 		return (_List._Unchecked_end());

	mov	edi, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edi], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 942  : 		if (_Unchecked_begin() != _Last)

	je	SHORT $LN190@Check_size
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	edi, DWORD PTR [edi+4]
	push	esi
$LL74@Check_size:

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	mov	ecx, ebx

; 347  : 		return (_List._Unchecked_begin());

	mov	esi, DWORD PTR [esi]

; 947  : 				_Insert(*_First, _First);

	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@ABQAUHWND__@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert<HWND__ * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 948  : 				if (_Done)

	jne	SHORT $LL74@Check_size
	pop	esi
$LN190@Check_size:
	pop	edi
$LN187@Check_size:
	pop	ebx

; 935  : 			_Reinsert();
; 936  : 			}
; 937  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Check_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Init@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXI@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Init, COMDAT
; _this$ = ecx

; 916  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	esi

; 917  : 		_Vec.reserve(2 * _Buckets);	// avoid curdling _Vec if exception occurs

	mov	esi, DWORD PTR __Buckets$[ebp]
	add	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ebx+20]
	sub	eax, DWORD PTR [ebx+12]
	sar	eax, 2
	push	edi

; 1529 : 		if (_Newcapacity > capacity())

	cmp	esi, eax
	jbe	SHORT $LN4@Init

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())

	cmp	esi, 1073741823				; 3fffffffH
	ja	SHORT $LN85@Init

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	push	esi
	lea	ecx, DWORD PTR [ebx+12]
	call	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
$LN4@Init:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR [ebx+4]

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	ecx, DWORD PTR [ebx+12]

; 357  : 		return (_List._Unchecked_end());

	mov	DWORD PTR $T1[ebp], eax

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	esi
	call	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::assign

; 919  : 		_Mask = _Buckets - 1;

	mov	ecx, DWORD PTR __Buckets$[ebp]
	pop	edi
	pop	esi

; 920  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [ebx+28], ecx
	lea	eax, DWORD PTR [ecx-1]
	mov	DWORD PTR [ebx+24], eax
	pop	ebx

; 921  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN85@Init:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1533 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Xlength
$LN87@Init:
$LN84@Init:
	int	3
?_Init@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXI@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Hashval@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEIABQAUHWND__@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Hashval@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEIABQAUHWND__@@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hashval, COMDAT
; _this$ = ecx

; 911  : 		{	// return hash value, masked to current table size

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	esi, DWORD PTR __Keyval$[ebp]
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 911  : 		{	// return hash value, masked to current table size

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [esi]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [esi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+2]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+3]
	imul	ecx, edx, 16777619
	xor	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	eax, DWORD PTR [edi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, ecx, 16777619
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	and	eax, ecx

; 913  : 		}

	pop	ebp
	ret	4
?_Hashval@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEIABQAUHWND__@@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hashval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Insert_bucket@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@0I@Z
_TEXT	SEGMENT
__Plist$ = 8						; size = 4
__Where$ = 12						; size = 4
__Bucket$ = 16						; size = 4
?_Insert_bucket@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@0I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert_bucket, COMDAT
; _this$ = ecx

; 882  : 		{	// fix iterators after inserting _Plist before _Where

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	eax, DWORD PTR __Bucket$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR [ecx+12]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	esi, DWORD PTR [eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [edx+esi]
	add	edx, esi
	cmp	eax, DWORD PTR [ecx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 883  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN2@Insert_buc

; 884  : 			{	// make bucket non-empty
; 885  : 			_Vec_lo(_Bucket) = _Plist;

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [edx], eax

; 886  : 			_Vec_hi(_Bucket) = _Plist;

	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [esi+ecx+4], eax
	pop	esi

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@Insert_buc:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR __Where$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jne	SHORT $LN4@Insert_buc

; 889  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [edx], eax
	pop	esi

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN4@Insert_buc:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], eax

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	je	SHORT $LN6@Insert_buc
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx+esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi+4], eax
$LN6@Insert_buc:
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Insert_bucket@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@0I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Insert_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Erase_bucket@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Plist_arg$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Erase_bucket@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Erase_bucket, COMDAT
; _this$ = ecx

; 866  : 		{	// fix iterators before erasing _Plist before _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	mov	eax, DWORD PTR __Bucket$[ebp]
	push	esi
	mov	esi, ecx
	push	edi
	lea	edi, DWORD PTR [eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Plist_arg$[ebp]
	mov	edx, DWORD PTR [esi+12]
	add	edx, edi
	cmp	DWORD PTR [edx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	jne	SHORT $LN2@Erase_buck
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 869  : 			if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN4@Erase_buck

; 870  : 				{	// make bucket empty
; 871  : 				_Vec_lo(_Bucket) = _Unchecked_end();

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx], eax

; 872  : 				_Vec_hi(_Bucket) = _Unchecked_end();

	mov	ecx, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+ecx+4], eax
	pop	edi
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
$LN4@Erase_buck:

; 873  : 				}
; 874  : 			else
; 875  : 				_Vec_hi(_Bucket) = --_Plist;	// move end back one element

	mov	eax, DWORD PTR [eax+4]
	pop	edi
	mov	DWORD PTR [edx+4], eax
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
$LN2@Erase_buck:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN6@Erase_buck

; 877  : 			_Vec_lo(_Bucket) = ++_Plist;	// move beginning up one element

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN6@Erase_buck:
	pop	edi
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
?_Erase_bucket@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Erase_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_End@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_End@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_End, COMDAT
; _this$ = ecx

; 855  : 		{	// return end iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*8]
	cmp	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 856  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	je	SHORT $LN89@End
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 861  : 			return (++_Ans);

	mov	ecx, DWORD PTR [eax]
$LN89@End:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 862  : 			}
; 863  : 		}

	pop	ebp
	ret	8
?_End@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_End
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_End@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_End@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_End, COMDAT
; _this$ = ecx

; 845  : 		{	// return end iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*8]
	cmp	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	je	SHORT $LN93@End
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	ecx, DWORD PTR [eax]
$LN93@End:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 852  : 			}
; 853  : 		}

	pop	ebp
	ret	8
?_End@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_End
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Begin, COMDAT
; _this$ = ecx

; 840  : 		{	// return begin iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp

; 841  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 842  : 		}

	pop	ebp
	ret	8
?_Begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Begin, COMDAT
; _this$ = ecx

; 835  : 		{	// return begin iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp

; 836  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 837  : 		}

	pop	ebp
	ret	8
?_Begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_hi@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_hi, COMDAT
; _this$ = ecx

; 830  : 		{	// return reference to end()-1 for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1760 : 		return (this->_Myfirst()[_Pos]);

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [eax*8+4]
	add	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 832  : 		}

	pop	ebp
	ret	4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_hi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_hi@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_hi, COMDAT
; _this$ = ecx

; 825  : 		{	// return reference to end()-1 for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [eax*8+4]
	add	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 827  : 		}

	pop	ebp
	ret	4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_hi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_lo@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_lo, COMDAT
; _this$ = ecx

; 820  : 		{	// return reference to begin() for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1760 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 822  : 		}

	pop	ebp
	ret	4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_lo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_lo@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_lo, COMDAT
; _this$ = ecx

; 815  : 		{	// return reference to begin() for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 817  : 		}

	pop	ebp
	ret	4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Vec_lo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Destroy_if_not_nil@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
__Plist$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 750  : 		{	// node exists, destroy it

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 96   : 		return (_Ptr);

	mov	esi, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [esi+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edx], eax

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ecx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 752  : 		}

	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
tv897 = 12						; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range, COMDAT
; _this$ = ecx

; 703  : 		{	// find range equivalent to _Keyval in nonmutable hash table

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	ebx, DWORD PTR __Keyval$[ebp]
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 703  : 		{	// find range equivalent to _Keyval in nonmutable hash table

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [ebx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1760 : 		return (this->_Myfirst()[_Pos]);

	mov	esi, DWORD PTR [edi+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	xor	edx, eax
	movzx	eax, BYTE PTR [ebx+2]

; 347  : 		_Val *= _FNV_prime;

	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [ebx+3]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [edi+24]
	and	ecx, eax

; 841  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR [esi+ecx*8]

; 821  : 		return ((_Unchecked_const_iterator&)_Vec[2 * _Bucket]);

	lea	edx, DWORD PTR [ecx+ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1183 : 		return (_Unchecked_const_iterator(this->_Myhead(),

	mov	ecx, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1760 : 		return (this->_Myfirst()[_Pos]);

	lea	edi, DWORD PTR [esi+edx*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ebx, DWORD PTR [esi+edx*4]
	mov	esi, DWORD PTR __Keyval$[ebp]
	npad	7
$LL4@equal_rang:
	cmp	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 856  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN49@equal_rang

; 857  : 			return (_Unchecked_end());

	mov	edx, ecx
	jmp	SHORT $LN50@equal_rang
$LN49@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 861  : 			return (++_Ans);

	mov	edx, DWORD PTR [edx]
$LN50@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 706  : 			_Where != _End(_Bucket); ++_Where)

	je	SHORT $LN3@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 707  : 			if (!_Traitsobj(_Traits::_Kfn(*_Where), _Keyval))

	je	SHORT $LN399@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LL4@equal_rang
$LN399@equal_rang:
	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 709  : 				_Unchecked_const_iterator _First = _Where;

	mov	edx, eax
	mov	DWORD PTR tv897[ebp], esi
$LL7@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 856  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN164@equal_rang

; 857  : 			return (_Unchecked_end());

	mov	esi, ecx
	jmp	SHORT $LN165@equal_rang
$LN164@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 861  : 			return (++_Ans);

	mov	esi, DWORD PTR [esi]
$LN165@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 710  : 				for (; _Where != _End(_Bucket); ++_Where)

	je	SHORT $LN400@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	esi, DWORD PTR tv897[ebp]
	cmp	esi, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 711  : 					if (_Traitsobj(_Keyval, _Traits::_Kfn(*_Where)))

	jne	SHORT $LN400@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LL7@equal_rang
$LN400@equal_rang:

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 713  : 				if (_First == _Where)

	je	SHORT $LN3@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [ecx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 715  : 				return (_Paircc(_Make_iter(_First),

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [ecx], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 719  : 		}

	pop	ebp
	ret	8
$LN3@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 719  : 		}

	pop	ebp
	ret	8
?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
tv993 = 12						; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range, COMDAT
; _this$ = ecx

; 684  : 		{	// find range equivalent to _Keyval in mutable hash table

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	ebx, DWORD PTR __Keyval$[ebp]
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 684  : 		{	// find range equivalent to _Keyval in mutable hash table

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [ebx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	esi, DWORD PTR [edi+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	xor	edx, eax
	movzx	eax, BYTE PTR [ebx+2]

; 347  : 		_Val *= _FNV_prime;

	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [ebx+3]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [edi+24]
	and	ecx, eax

; 836  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR [esi+ecx*8]

; 816  : 		return (_Vec[2 * _Bucket]);

	lea	edx, DWORD PTR [ecx+ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1178 : 		return (_Unchecked_iterator(this->_Myhead(), _STD addressof(this->_Get_data())));

	mov	ecx, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	edi, DWORD PTR [esi+edx*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ebx, DWORD PTR [esi+edx*4]
	mov	esi, DWORD PTR __Keyval$[ebp]
	npad	7
$LL4@equal_rang:
	cmp	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN49@equal_rang

; 847  : 			return (_Unchecked_end());

	mov	edx, ecx
	jmp	SHORT $LN50@equal_rang
$LN49@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	edx, DWORD PTR [edx]
$LN50@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 687  : 			_Where != _End(_Bucket); ++_Where)

	je	SHORT $LN3@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 688  : 			if (!_Traitsobj(_Traits::_Kfn(*_Where), _Keyval))

	je	SHORT $LN411@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LL4@equal_rang
$LN411@equal_rang:
	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 690  : 				_Unchecked_iterator _First = _Where;

	mov	edx, eax
	mov	DWORD PTR tv993[ebp], esi
$LL7@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN168@equal_rang

; 847  : 			return (_Unchecked_end());

	mov	esi, ecx
	jmp	SHORT $LN169@equal_rang
$LN168@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	esi, DWORD PTR [esi]
$LN169@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 691  : 				for (; _Where != _End(_Bucket); ++_Where)

	je	SHORT $LN412@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	esi, DWORD PTR tv993[ebp]
	cmp	esi, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 692  : 					if (_Traitsobj(_Keyval, _Traits::_Kfn(*_Where)))

	jne	SHORT $LN412@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LL7@equal_rang
$LN412@equal_rang:

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 694  : 				if (_First == _Where)

	je	SHORT $LN3@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [ecx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 696  : 				return (_Pairii(_Make_iter(_First),

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [ecx], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 700  : 		}

	pop	ebp
	ret	8
$LN3@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 700  : 		}

	pop	ebp
	ret	8
?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIABQAUHWND__@@@Z
_TEXT	SEGMENT
__Ans$ = -8						; size = 8
__Keyval$ = 8						; size = 4
?count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIABQAUHWND__@@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::count, COMDAT
; _this$ = ecx

; 634  : 		{	// count all elements that match _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	ecx, DWORD PTR __Ans$[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR __Ans$[ebp+4]
	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN7@count
$LL8@count:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL8@count
$LN7@count:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIABQAUHWND__@@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::clear, COMDAT
; _this$ = ecx

; 618  : 		{	// erase all

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi+4]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	edx, DWORD PTR [eax]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR [edi+4]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+8], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	edx, DWORD PTR [edi+4]
	je	SHORT $LN5@clear
$LL6@clear:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [edx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	edx, esi
	cmp	esi, DWORD PTR [edi+4]
	jne	SHORT $LL6@clear
$LN5@clear:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [edi+20]
	sub	eax, DWORD PTR [edi+12]
	sar	eax, 2

; 1529 : 		if (_Newcapacity > capacity())

	cmp	eax, 16					; 00000010H
	jae	SHORT $LN155@clear

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())
; 1532 : 				{
; 1533 : 				_Xlength();
; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	push	16					; 00000010H
	lea	ecx, DWORD PTR [edi+12]
	call	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
$LN155@clear:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR [edi+4]

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	ecx, DWORD PTR [edi+12]

; 357  : 		return (_List._Unchecked_end());

	mov	DWORD PTR $T2[ebp], eax

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	push	16					; 00000010H
	call	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::assign

; 619  : 		_List.clear();
; 620  : 		_Init();
; 621  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]

; 919  : 		_Mask = _Buckets - 1;

	mov	DWORD PTR [edi+24], 7

; 920  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [edi+28], 8
	pop	edi
	pop	esi

; 619  : 		_List.clear();
; 620  : 		_Init();
; 621  : 		}

	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::clear
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEIABQAUHWND__@@@Z
_TEXT	SEGMENT
__Where$ = -8						; size = 8
$T1 = 8							; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEIABQAUHWND__@@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase, COMDAT
; _this$ = ecx

; 610  : 		{	// erase and count all that match _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	push	edi

; 611  : 		_Pairii _Where = equal_range(_Keyval);

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Where$[ebp]
	mov	edi, ecx
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	edx, DWORD PTR __Where$[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Where$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	edx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN7@erase
$LL8@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL8@erase
$LN7@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 613  : 		erase(_Where.first, _Where.second);

	push	ecx
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	mov	ecx, edi
	push	eax
	call	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
	pop	edi

; 614  : 		return (_Num);

	mov	eax, esi
	pop	esi

; 615  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEIABQAUHWND__@@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase, COMDAT
; _this$ = ecx

; 594  : 		{	// erase [_First, _Last)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 596  : 		if (_First == begin() && _Last == end())

	mov	edx, DWORD PTR __Last$[ebp]
	push	esi
	push	edi
	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [edi+4]

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 596  : 		if (_First == begin() && _Last == end())

	jne	SHORT $LN147@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	edx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 596  : 		if (_First == begin() && _Last == end())

	jne	SHORT $LN147@erase

; 597  : 			{	// erase all
; 598  : 			clear();

	call	?clear@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::clear
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi+4]
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 327  : 		return (_List.begin());

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 606  : 			}
; 607  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN147@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 603  : 			while (_First != _Last)

	je	SHORT $LN3@erase
$LL2@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 604  : 				erase(_First++);

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	DWORD PTR __First$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 604  : 				erase(_First++);

	push	eax
	mov	ecx, edi
	call	?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 603  : 			while (_First != _Last)

	jne	SHORT $LL2@erase
$LN3@erase:

; 372  : 		return (_List._Make_iter(_Where));

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax

; 605  : 			return (_Make_iter(_First));

	mov	eax, ecx

; 606  : 			}
; 607  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Plist$ = 12						; size = 4
?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase, COMDAT
; _this$ = ecx

; 586  : 		{	// erase element at _Plist

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	edi, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 586  : 		{	// erase element at _Plist

	mov	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi+8]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+9]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+10]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+11]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [ebx+24]
	and	ecx, eax

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	lea	edx, DWORD PTR [ecx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR [ebx+12]
	add	ecx, edx
	cmp	DWORD PTR [ecx+4], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	jne	SHORT $LN49@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [ecx], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 869  : 			if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN51@erase

; 870  : 				{	// make bucket empty
; 871  : 				_Vec_lo(_Bucket) = _Unchecked_end();

	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [ecx], eax

; 872  : 				_Vec_hi(_Bucket) = _Unchecked_end();

	mov	ecx, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [edx+ecx+4], eax

; 873  : 				}
; 874  : 			else

	jmp	SHORT $LN350@erase
$LN51@erase:

; 875  : 				_Vec_hi(_Bucket) = --_Plist;	// move end back one element

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], eax

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jmp	SHORT $LN350@erase
$LN49@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [ecx], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN53@erase

; 877  : 			_Vec_lo(_Bucket) = ++_Plist;	// move beginning up one element

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [ecx], eax
$LN350@erase:
	mov	edi, DWORD PTR __Plist$[ebp]
$LN53@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi+4]

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	esi, DWORD PTR [edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	DWORD PTR [eax], esi

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	DWORD PTR [ecx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 590  : 		return (_List.erase(_Plist));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 590  : 		return (_List.erase(_Plist));

	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx

; 591  : 		}

	pop	ebp
	ret	8
?erase@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?max_load_factor@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
?max_load_factor@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::max_load_factor, COMDAT
; _this$ = ecx

; 499  : 		return (_Max_bucket_size());

	fld	DWORD PTR [ecx]

; 500  : 		}

	ret	0
?max_load_factor@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::max_load_factor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?load_factor@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
?load_factor@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::load_factor, COMDAT
; _this$ = ecx

; 493  : 		{	// return elements per bucket

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 494  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ecx+8]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	eax, DWORD PTR [ecx+28]
	cvtpd2ps xmm1, xmm0
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	divss	xmm1, xmm0
	movss	DWORD PTR tv72[ebp], xmm1
	fld	DWORD PTR tv72[ebp]

; 495  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?load_factor@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::load_factor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?bucket_count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?bucket_count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::bucket_count, COMDAT
; _this$ = ecx

; 421  : 		return (_Maxidx);

	mov	eax, DWORD PTR [ecx+28]

; 422  : 		}

	ret	0
?bucket_count@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::bucket_count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::size, COMDAT
; _this$ = ecx

; 387  : 		return (_List.size());

	mov	eax, DWORD PTR [ecx+8]

; 388  : 		}

	ret	0
?size@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 371  : 		{	// make iterator from const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 372  : 		return (_List._Make_iter(_Where));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 373  : 		}

	pop	ebp
	ret	8
?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 366  : 		{	// make iterator from _Unchecked_const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 367  : 		return (_List._Make_iter(_Where));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 368  : 		}

	pop	ebp
	ret	8
?_Make_iter@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 361  : 		{	// return iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 363  : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 356  : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx

; 358  : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Unchecked_begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 346  : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 347  : 		return (_List._Unchecked_begin());

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 348  : 		}

	pop	ebp
	ret	4
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::end, COMDAT
; _this$ = ecx

; 341  : 		{	// return iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 343  : 		}

	pop	ebp
	ret	4
?end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::end, COMDAT
; _this$ = ecx

; 336  : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 337  : 		return (_List.end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx

; 338  : 		}

	pop	ebp
	ret	4
?end@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::begin, COMDAT
; _this$ = ecx

; 326  : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 327  : 		return (_List.begin());

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 328  : 		}

	pop	ebp
	ret	4
?begin@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??1?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::~_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >, COMDAT
; _this$ = ecx

; 307  : 		{	// destroy hash table

	npad	2
	push	edi
	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [edi+12]
	test	ecx, ecx
	je	SHORT $LN7@Hash

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [edi+20]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [edi+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [edi+16], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [edi+20], 0
$LN7@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi+4]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	ecx, DWORD PTR [eax]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR [edi+4]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+8], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	ecx, DWORD PTR [edi+4]
	je	SHORT $LN109@Hash
	push	esi
	npad	1
$LL110@Hash:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	ecx, esi
	cmp	esi, DWORD PTR [edi+4]
	jne	SHORT $LL110@Hash
	pop	esi
$LN109@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR [edi+4]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 309  : 		}

	ret	0
??1?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::~_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_this$ = 8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >, COMDAT
; _this$ = ecx

; 197  : 		{	// construct empty hash table

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	lea	ebx, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 36   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR __Parg$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	mov	ecx, ebx
	push	edi
	push	0
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 36   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 195  : 			_List(_Al),

	mov	DWORD PTR _this$[ebp], ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ebx], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [ebx+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [ebx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 195  : 			_List(_Al),

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [esi+12], 0

; 477  : 		_Mylast(),

	mov	DWORD PTR [esi+16], 0

; 478  : 		_Myend()

	mov	DWORD PTR [esi+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 198  : 		_Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [esi], 1065353216		; 3f800000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+20]
	sub	eax, DWORD PTR [esi+12]
	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 196  : 			_Vec(_Al)

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1529 : 		if (_Newcapacity > capacity())

	cmp	eax, 16					; 00000010H
	jae	SHORT $LN69@Hash

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())
; 1532 : 				{
; 1533 : 				_Xlength();
; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	push	16					; 00000010H
	lea	ecx, DWORD PTR [esi+12]
	call	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
$LN69@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR [ebx]

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	ecx, DWORD PTR [esi+12]

; 357  : 		return (_List._Unchecked_end());

	mov	DWORD PTR $T2[ebp], eax

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	push	16					; 00000010H
	call	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::assign

; 199  : 		_Init();
; 200  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	edi

; 919  : 		_Mask = _Buckets - 1;

	mov	DWORD PTR [esi+24], 7

; 920  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [esi+28], 8
	pop	esi
	pop	ebx

; 199  : 		_Init();
; 200  : 		}

	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::list<HWND__ *,std::allocator<HWND__ *> >::~list<HWND__ *,std::allocator<HWND__ *> >
__unwindfunclet$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >::~vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<HWND__ *> >,std::_Iterator_base0> > > >
__ehhandler$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Incsize@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Incsize@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXI@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Incsize, COMDAT
; _this$ = ecx

; 1949 : 		{	// alter element count, with checking

	npad	2
	push	ebp
	mov	ebp, esp

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, 357913940				; 15555554H
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
	sub	eax, edx
	cmp	eax, esi
	jae	SHORT $LN2@Incsize

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN42@Incsize:
$LN2@Incsize:

; 1952 : 		this->_Mysize() += _Count;

	lea	eax, DWORD PTR [edx+esi]
	mov	DWORD PTR [ecx+4], eax
	pop	esi

; 1953 : 		}

	pop	ebp
	ret	4
$LN41@Incsize:
?_Incsize@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXI@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Incsize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Tidy@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXXZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Tidy, COMDAT
; _this$ = ecx

; 1926 : 		{	// free all storage

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	eax, DWORD PTR [edx]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx], edx

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	edx, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx+4], edx

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN5@Tidy
	push	esi
	npad	4
$LL6@Tidy:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	eax, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL6@Tidy
	pop	esi
$LN5@Tidy:
	pop	edi

; 1927 : 		clear();
; 1928 : 		}

	ret	0
?_Tidy@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXXZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_splice@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?_Unchecked_splice@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_splice, COMDAT
; _this$ = ecx

; 1909 : 		{	// splice [_First, _Last) before _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1910 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1911 : 			_Last._Mynode();
; 1912 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1913 : 			_Where._Mynode();
; 1914 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	ecx, DWORD PTR __Where$[ebp]

; 1915 : 			_First._Mynode();
; 1916 : 
; 1917 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());
; 1918 : 		this->_Prevnode(_Where._Mynode()) =

	mov	eax, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], eax

; 1919 : 			this->_Prevnode(_Last._Mynode());
; 1920 : 		this->_Prevnode(_Last._Mynode()) =

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1921 : 			this->_Prevnode(_First._Mynode());
; 1922 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax+4], edx

; 1923 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Unchecked_splice@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_splice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?clear@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXXZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::clear, COMDAT
; _this$ = ecx

; 1534 : 		{	// erase all

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi]

; 1535 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1536 : 
; 1537 : 		this->_Orphan_ptr(nullptr);
; 1538 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	eax, DWORD PTR [edx]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx], edx

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	edx, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx+4], edx

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN3@clear
	push	esi
	npad	4
$LL4@clear:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	eax, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL4@clear
	pop	esi
$LN3@clear:
	pop	edi

; 1547 : 			this->_Freenode(_Pnode);
; 1548 : 			}
; 1549 : 		}

	ret	0
?clear@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXXZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?erase@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::erase, COMDAT
; _this$ = ecx

; 1500 : 		{	// erase element at _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 248  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	edi

; 1500 : 		{	// erase element at _Where

	mov	edi, ecx

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Where$[ebp], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [eax+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	DWORD PTR [esi], edx

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	DWORD PTR [edx+4], ecx

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR __Where$[ebp]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 1501 : 		_Nodeptr _Pnode = _Unlinknode(_Where++);
; 1502 : 		this->_Freenode(_Pnode);
; 1503 : 		return (_Make_iter(_Where));
; 1504 : 		}

	pop	ebp
	ret	8
?erase@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unlinknode@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Unlinknode@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unlinknode, COMDAT
; _this$ = ecx

; 1475 : 		{	// unlink node at _Where from the list

	npad	2
	push	ebp
	mov	ebp, esp

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR __Where$[ebp]
	push	esi

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [eax+4]

; 1476 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1477 : 		if (_Where._Getcont() != _STD addressof(this->_Get_data())
; 1478 : 			|| _Where._Ptr == this->_Myhead())
; 1479 : 			{
; 1480 : 			_DEBUG_ERROR("list erase iterator outside range");
; 1481 : 			}
; 1482 : 
; 1483 : 		_Nodeptr _Pnode = (_Where)._Mynode();
; 1484 : 		_Orphan_ptr(_Pnode);
; 1485 : 
; 1486 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1487 : 		_Nodeptr _Pnode = (_Where)._Mynode();
; 1488 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1489 : 
; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi], edx

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], edx

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ecx+4]
	pop	esi

; 1496 : 		return (_Pnode);
; 1497 : 		}

	pop	ebp
	ret	4
?_Unlinknode@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unlinknode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?front@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@XZ
_TEXT	SEGMENT
?front@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@XZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::front, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [eax]

; 540  : 		return ((reference)_Pnode->_Myval);

	add	eax, 8

; 1288 : 		return (*begin());
; 1289 : 		}

	ret	0
?front@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@XZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::front
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?max_size@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::max_size, COMDAT
; _this$ = ecx

; 1272 : 		return (this->_Getal().max_size());

	mov	eax, 357913941				; 15555555H

; 1273 : 		}

	ret	0
?max_size@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?size@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::size, COMDAT
; _this$ = ecx

; 1267 : 		return (this->_Mysize());

	mov	eax, DWORD PTR [ecx+4]

; 1268 : 		}

	ret	0
?size@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Make_iter@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Make_iter, COMDAT
; _this$ = ecx

; 1193 : 		{	// make iterator from _Unchecked_const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 1194 : 		return (iterator(_Where._Ptr, _STD addressof(this->_Get_data())));
; 1195 : 		}

	pop	ebp
	ret	8
?_Make_iter@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Make_iter@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Make_iter, COMDAT
; _this$ = ecx

; 1188 : 		{	// make iterator from const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 1189 : 		return (iterator(_Where._Ptr, _STD addressof(this->_Get_data())));
; 1190 : 		}

	pop	ebp
	ret	8
?_Make_iter@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1182 : 		{	// return unchecked iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1183 : 		return (_Unchecked_const_iterator(this->_Myhead(),
; 1184 : 			_STD addressof(this->_Get_data())));
; 1185 : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1177 : 		{	// return unchecked iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1178 : 		return (_Unchecked_iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1179 : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_begin@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 1165 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1166 : 		return (_Unchecked_iterator(this->_Nextnode(this->_Myhead()),
; 1167 : 			_STD addressof(this->_Get_data())));
; 1168 : 		}

	pop	ebp
	ret	4
?_Unchecked_begin@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::end, COMDAT
; _this$ = ecx

; 1160 : 		{	// return iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1161 : 		return (const_iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1162 : 		}

	pop	ebp
	ret	4
?end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::end, COMDAT
; _this$ = ecx

; 1155 : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1156 : 		return (iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1157 : 		}

	pop	ebp
	ret	4
?end@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?begin@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::begin, COMDAT
; _this$ = ecx

; 1143 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1144 : 		return (iterator(this->_Nextnode(this->_Myhead()),
; 1145 : 			_STD addressof(this->_Get_data())));
; 1146 : 		}

	pop	ebp
	ret	4
?begin@?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??1?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::~list<HWND__ *,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx

; 1118 : 		{	// destroy the object

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	edx, DWORD PTR [eax]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	edx, DWORD PTR [edi]
	je	SHORT $LN7@list
	push	esi
	npad	4
$LL8@list:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [edx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	edx, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL8@list
	pop	esi
$LN7@list:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR [edi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1120 : 		}

	ret	0
??1?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::~list<HWND__ *,std::allocator<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::list<HWND__ *,std::allocator<HWND__ *> >::list<HWND__ *,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx

; 914  : 		{	// construct empty list, allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 914  : 		{	// construct empty list, allocator

	mov	DWORD PTR _this$[ebp], esi

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 915  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::list<HWND__ *,std::allocator<HWND__ *> >::list<HWND__ *,std::allocator<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??1?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::~_List_buy<HWND__ *,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	ret	0
??1?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::~_List_buy<HWND__ *,std::allocator<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Freenode@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@@Z PROC ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Freenode, COMDAT
; _this$ = ecx

; 864  : 		{	// give node back

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 872  : 		}

	pop	ebp
	ret	4
?_Freenode@?$_List_buy@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_List_buy<HWND__ *,std::allocator<HWND__ *> >::_Freenode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >,std::_List_val<std::_List_simple_types<HWND__ *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAUHWND__@@PAU?$_List_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAUHWND__@@PAU?$_List_node@PAUHWND__@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Myval, COMDAT

; 539  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 541  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAUHWND__@@PAU?$_List_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Prevnode, COMDAT

; 534  : 		{	// return reference to predecessor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 536  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Nextnode, COMDAT

; 529  : 		{	// return reference to successor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 531  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<HWND__ *> >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<HWND__ *> >::_List_val<std::_List_simple_types<HWND__ *> >, COMDAT
; _this$ = ecx

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0

; 526  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<HWND__ *> >::_List_val<std::_List_simple_types<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABIXZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Mysize, COMDAT
; _this$ = ecx

; 813  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 814  : 		}

	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABIXZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAIXZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Mysize, COMDAT
; _this$ = ecx

; 808  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 809  : 		}

	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myhead@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABQAU?$_List_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABQAU?$_List_node@PAUHWND__@@PAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myhead, COMDAT
; _this$ = ecx

; 803  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 804  : 		}

	ret	0
?_Myhead@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABQAU?$_List_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myhead@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAPAU?$_List_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAPAU?$_List_node@PAUHWND__@@PAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myhead, COMDAT
; _this$ = ecx

; 798  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 799  : 		}

	ret	0
?_Myhead@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAPAU?$_List_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Get_data, COMDAT
; _this$ = ecx

; 793  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 794  : 		}

	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Get_data, COMDAT
; _this$ = ecx

; 788  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 789  : 		}

	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal, COMDAT
; _this$ = ecx

; 783  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 784  : 		}

	ret	0
?_Getal@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal, COMDAT
; _this$ = ecx

; 778  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 779  : 		}

	ret	0
?_Getal@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0, COMDAT
; _this$ = ecx

; 745  : 		{	// allocate a node and set links

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN26@Buynode0
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN98@Buynode0:
$LN26@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 748  : 		if (_Next == _Nodeptr())

	mov	ecx, DWORD PTR __Next$[ebp]
	test	ecx, ecx
	jne	SHORT $LN95@Buynode0

; 749  : 			{	// point at self
; 750  : 			_Next = _Pnode;

	mov	ecx, eax

; 751  : 			_Prev = _Pnode;

	mov	edx, eax
	jmp	SHORT $LN2@Buynode0
$LN95@Buynode0:
	mov	edx, DWORD PTR __Prev$[ebp]
$LN2@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	lea	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN4@Buynode0
	mov	DWORD PTR [ecx], edx
$LN4@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 764  : 		}

	pop	ebp
	ret	8
$LN97@Buynode0:
?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Freeheadnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 735  : 		{	// free head node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 741  : 		}

	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Buyheadnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buynode0

; 732  : 		}

	ret	0
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??1?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 612  : 		}

	ret	0
??1?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myval@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAUHWND__@@PAU?$_List_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAUHWND__@@PAU?$_List_node@PAUHWND__@@PAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myval, COMDAT

; 589  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 590  : 		return (_List_val<_Val_types>::_Myval(_Pnode));
; 591  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAUHWND__@@PAU?$_List_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Prevnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Prevnode, COMDAT

; 584  : 		{	// return reference to predecessor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 585  : 		return (_List_val<_Val_types>::_Prevnode(_Pnode));
; 586  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Nextnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Nextnode, COMDAT

; 579  : 		{	// return reference to successor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 580  : 		return (_List_val<_Val_types>::_Nextnode(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]

; 581  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_alloc@U?$_List_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 357913941				; 15555555H

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ; std::allocator<std::_List_node<HWND__ *,void *> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<HWND__ *,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 357913941				; 15555555H

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<HWND__ *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<HWND__ *,void *> >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 357913941				; 15555555H

; 852  : 		}

	ret	0
?max_size@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<HWND__ *,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<HWND__ *,void *> >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 357913941				; 15555555H
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<HWND__ *,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<HWND__ *,void *> >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@PAUHWND__@@PAX@std@@@std@@QAEXPAU?$_List_node@PAUHWND__@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<HWND__ *,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@PAUHWND__@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAUHWND__@@@std@@QAE@XZ PROC		; std::allocator<HWND__ *>::allocator<HWND__ *>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@PAUHWND__@@@std@@QAE@XZ ENDP		; std::allocator<HWND__ *>::allocator<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
;	COMDAT ?_Kfn@?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@SAABQAUHWND__@@ABQAU3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@SAABQAUHWND__@@ABQAU3@@Z PROC ; std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>::_Kfn, COMDAT

; 43   : 		{	// return entire value as key

	npad	2
	push	ebp
	mov	ebp, esp

; 44   : 		return (_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 45   : 		}

	pop	ebp
	ret	0
?_Kfn@?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@SAABQAUHWND__@@ABQAU3@@Z ENDP ; std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>::_Kfn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
;	COMDAT ??0?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@@Z
_TEXT	SEGMENT
__Traits$ = 8						; size = 4
??0?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@@Z PROC ; std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>, COMDAT
; _this$ = ecx

; 37   : 		{	// construct with specified comparator

	npad	2
	push	ebp
	mov	ebp, esp

; 36   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR __Traits$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 38   : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@@Z ENDP ; std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ PROC ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::~unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >, COMDAT
; _this$ = ecx
	jmp	??1?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::~_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
??1?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ ENDP ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::~unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
;	COMDAT ??A?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAEAA_NABQAUHWND__@@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
$T2 = -4						; size = 4
__Where$3 = 8						; size = 4
__Keyval$ = 8						; size = 4
$T4 = 11						; size = 1
??A?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAEAA_NABQAUHWND__@@@Z PROC ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::operator[], COMDAT
; _this$ = ecx

; 477  : 		{	// find element matching _Keyval or insert with default mapped

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	mov	edi, DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Where$3[ebp]
	push	edi
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 477  : 		{	// find element matching _Keyval or insert with default mapped

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 625  : 		return (lower_bound(_Keyval));

	call	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Where$3[ebp]
	cmp	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 308  : 		if (_Where == _Mybase::end())

	jne	SHORT $LN6@operator

; 309  : 			return (_Mybase::emplace(

	lea	eax, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T2[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 309  : 			return (_Mybase::emplace(

	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	mov	ecx, esi
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@ABQAUHWND__@@@2@V?$tuple@$$V@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAUHWND__@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<HWND__ * const &>,std::tuple<> >

; 478  : 		return (try_emplace(_Keyval).first->second);

	mov	eax, DWORD PTR $T1[ebp]
$LN6@operator:
	pop	edi
	add	eax, 12					; 0000000cH
	pop	esi

; 479  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAEAA_NABQAUHWND__@@@Z ENDP ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
;	COMDAT ??0?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -8						; size = 4
$T2 = -1						; size = 1
??0?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ PROC ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >, COMDAT
; _this$ = ecx

; 119  : 		{	// construct empty map from defaults

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 118  : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T2[ebp]

; 119  : 		{	// construct empty map from defaults

	mov	esi, ecx
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _this$[ebp], esi
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T1[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 118  : 		: _Mybase(key_compare(), allocator_type())

	call	??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >

; 120  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unordered_map@PAUHWND__@@_NU?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@@std@@QAE@XZ ENDP ; std::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >::unordered_map<HWND__ *,bool,std::hash<HWND__ *>,std::equal_to<HWND__ *>,std::allocator<std::pair<HWND__ * const,bool> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Xlength@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Xlength, COMDAT

; 1962 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlength:
$LN3@Xlength:
	int	3
?_Xlength@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Tidy, COMDAT
; _this$ = ecx

; 1946 : 		{	// free all storage

	npad	2
	push	esi
	mov	esi, ecx

; 1947 : 		this->_Orphan_all();
; 1948 : 
; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Tidy

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:
	pop	esi

; 1957 : 			}
; 1958 : 		}

	ret	0
?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Change_array@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@II@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Change_array, COMDAT
; _this$ = ecx

; 1931 : 		{	// orphan all iterators, discard old array, acquire new array

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx

; 1932 : 		this->_Orphan_all();
; 1933 : 
; 1934 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Change_arr

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Change_arr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1940 : 		this->_Myfirst() = _Newvec;

	mov	ecx, DWORD PTR __Newvec$[ebp]

; 1941 : 		this->_Mylast() = _Newvec + _Newsize;

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [esi], ecx
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+4], eax

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 1943 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Change_array@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@II@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Buy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAE_NI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?_Buy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAE_NI@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Buy, COMDAT
; _this$ = ecx

; 1908 : 		{	// allocate array with _Newcapacity elements

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1909 : 		this->_Myfirst() = pointer();
; 1910 : 		this->_Mylast() = pointer();
; 1911 : 		this->_Myend() = pointer();
; 1912 : 
; 1913 : 		if (_Newcapacity == 0)

	mov	edi, DWORD PTR __Newcapacity$[ebp]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	test	edi, edi
	jne	SHORT $LN2@Buy

; 1914 : 			{
; 1915 : 			return (false);

	pop	edi
	xor	al, al
	pop	esi

; 1928 : 		}

	pop	ebp
	ret	4
$LN2@Buy:

; 1916 : 			}
; 1917 : 
; 1918 : 		if (_Newcapacity > max_size())

	cmp	edi, 1073741823				; 3fffffffH
	ja	SHORT $LN115@Buy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	edi
	call	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1923 : 		this->_Myfirst() = this->_Getal().allocate(_Newcapacity);

	mov	DWORD PTR [esi], eax

; 1924 : 		this->_Mylast() = this->_Myfirst();

	mov	DWORD PTR [esi+4], eax

; 1925 : 		this->_Myend() = this->_Myfirst() + _Newcapacity;

	mov	eax, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+8], eax

; 1926 : 
; 1927 : 		return (true);

	mov	al, 1
	pop	edi
	pop	esi

; 1928 : 		}

	pop	ebp
	ret	4
$LN115@Buy:

; 1919 : 			{
; 1920 : 			_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Xlength
$LN117@Buy:
$LN114@Buy:
	int	3
?_Buy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAE_NI@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Buy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@ABEII@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@ABEII@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1889 : 		{	// given _Oldcapacity and _Newsize, calculate geometric growth

	npad	2
	push	ebp
	mov	ebp, esp

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	edx, DWORD PTR [ecx+8]

; 1890 : 		const size_type _Oldcapacity = capacity();
; 1891 : 
; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	eax, 1073741823				; 3fffffffH

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sub	edx, DWORD PTR [ecx]
	sar	edx, 2

; 1890 : 		const size_type _Oldcapacity = capacity();
; 1891 : 
; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	ecx, edx
	shr	ecx, 1
	sub	eax, ecx
	cmp	edx, eax
	jbe	SHORT $LN2@Calculate_

; 1893 : 			{
; 1894 : 			return (_Newsize);	// geometric growth would overflow

	mov	eax, DWORD PTR __Newsize$[ebp]

; 1900 : 			{
; 1901 : 			return (_Newsize);	// geometric growth would be insufficient
; 1902 : 			}
; 1903 : 
; 1904 : 		return (_Geometric);	// geometric growth is sufficient
; 1905 : 		}

	pop	ebp
	ret	4
$LN2@Calculate_:

; 1895 : 			}
; 1896 : 
; 1897 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [ecx+edx]

; 1898 : 
; 1899 : 		if (_Geometric < _Newsize)

	cmp	eax, DWORD PTR __Newsize$[ebp]
	cmovb	eax, DWORD PTR __Newsize$[ebp]

; 1900 : 			{
; 1901 : 			return (_Newsize);	// geometric growth would be insufficient
; 1902 : 			}
; 1903 : 
; 1904 : 		return (_Geometric);	// geometric growth is sufficient
; 1905 : 		}

	pop	ebp
	ret	4
?_Calculate_growth@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@ABEII@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@0@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Destroy, COMDAT
; _this$ = ecx

; 1885 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1886 : 		}

	ret	8
?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@0@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@00@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Umove_if_noexcept, COMDAT
; _this$ = ecx

; 1878 : 		{	// move_if_noexcept [_First, _Last) to raw _Dest, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1881 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Umove_if_noexcept@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@00@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Umove_if_noexcept1, COMDAT
; _this$ = ecx

; 1868 : 		{	// move [_First, _Last) to raw _Dest, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1870 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@PAV32@IABV32@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
$T1 = 16						; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@PAV32@IABV32@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Ufill, COMDAT
; _this$ = ecx

; 1852 : 		{	// fill raw _Dest with _Count copies of _Val, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Dest$[ebp]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1854 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@PAV32@IABV32@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Ufill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@I@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::operator[], COMDAT
; _this$ = ecx

; 1736 : 		{	// subscript mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 1737 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1738 : 		if (size() <= _Pos)
; 1739 : 			{	// report error
; 1740 : 			_DEBUG_ERROR("vector subscript out of range");
; 1741 : 			}
; 1742 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1743 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1744 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1745 : 
; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 1747 : 		}

	pop	ebp
	ret	4
??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@I@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::capacity, COMDAT
; _this$ = ecx

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1721 : 		}

	ret	0
?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size, COMDAT
; _this$ = ecx

; 1715 : 		return (this->_Getal().max_size());

	mov	eax, 1073741823				; 3fffffffH

; 1716 : 		}

	ret	0
?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::size, COMDAT
; _this$ = ecx

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1711 : 		}

	ret	0
?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?reserve@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?reserve@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::reserve, COMDAT
; _this$ = ecx

; 1528 : 		{	// increase capacity to _Newcapacity (without geometric growth), provide strong guarantee

	npad	2
	push	ebp
	mov	ebp, esp

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]

; 1529 : 		if (_Newcapacity > capacity())

	mov	edx, DWORD PTR __Newcapacity$[ebp]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sar	eax, 2

; 1529 : 		if (_Newcapacity > capacity())

	cmp	edx, eax
	jbe	SHORT $LN2@reserve

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())

	cmp	edx, 1073741823				; 3fffffffH
	ja	SHORT $LN55@reserve

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	mov	DWORD PTR __Newcapacity$[ebp], edx

; 1537 : 			}
; 1538 : 		}

	pop	ebp

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	jmp	?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Reallocate_exactly
$LN2@reserve:

; 1537 : 			}
; 1538 : 		}

	pop	ebp
	ret	4
$LN55@reserve:

; 1532 : 				{
; 1533 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Xlength
$LN57@reserve:
$LN54@reserve:
	int	3
?reserve@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::reserve
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Newvec$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T2 = 8							; size = 1
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1511 : 		{	// set capacity to _Newcapacity (without geometric growth), provide strong guarantee

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	DWORD PTR __Newcapacity$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	ebx, DWORD PTR [esi+4]
	sub	ebx, DWORD PTR [esi]

; 1511 : 		{	// set capacity to _Newcapacity (without geometric growth), provide strong guarantee

	mov	DWORD PTR _this$[ebp], esi

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sar	ebx, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	call	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1514 : 		const pointer _Newvec = this->_Getal().allocate(_Newcapacity);

	mov	edi, eax

; 1515 : 
; 1516 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	esi
	push	edi
	push	DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1514 : 		const pointer _Newvec = this->_Getal().allocate(_Newcapacity);

	mov	DWORD PTR __Newvec$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	DWORD PTR [esi]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1934 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1934 : 		if (this->_Myfirst() != pointer())

	test	ecx, ecx
	je	SHORT $LN83@Reallocate

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN83@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1524 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]

; 1941 : 		this->_Mylast() = _Newvec + _Newsize;

	lea	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], eax

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]

; 1524 : 		}

	pop	edi

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	DWORD PTR [esi+8], eax

; 1524 : 		}

	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z$0:

; 1517 : 		_Umove_if_noexcept(this->_Myfirst(), this->_Mylast(), _Newvec);
; 1518 : 		_CATCH_ALL
; 1519 : 		this->_Getal().deallocate(_Newvec, _Newcapacity);

	push	DWORD PTR __Newcapacity$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR __Newvec$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::deallocate

; 1520 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN180@Reallocate:
$LN179@Reallocate:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Reallocate_exactly
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Oldsize$1$ = -4					; size = 4
$T1 = 8							; size = 1
__Newsize$ = 8						; size = 4
$T2 = 12						; size = 1
$T3 = 12						; size = 1
__Val$ = 12						; size = 4
?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::assign, COMDAT
; _this$ = ecx

; 1287 : 		{	// assign _Newsize * _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	esi
	push	edi

; 1288 : 		this->_Orphan_all();
; 1289 : 
; 1290 : 		const size_type _Oldsize = size();
; 1291 : 		const size_type _Oldcapacity = capacity();
; 1292 : 
; 1293 : 		if (_Newsize > _Oldcapacity)

	mov	edi, DWORD PTR __Newsize$[ebp]

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	edx, DWORD PTR [ebx]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR [ebx+8]

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	eax, DWORD PTR [ebx+4]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sub	ecx, edx

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sub	eax, edx

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sar	ecx, 2

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sar	eax, 2
	mov	DWORD PTR __Oldsize$1$[ebp], eax

; 1288 : 		this->_Orphan_all();
; 1289 : 
; 1290 : 		const size_type _Oldsize = size();
; 1291 : 		const size_type _Oldcapacity = capacity();
; 1292 : 
; 1293 : 		if (_Newsize > _Oldcapacity)

	cmp	edi, ecx
	jbe	SHORT $LN2@assign

; 1294 : 			{	// reallocate
; 1295 : 			if (_Newsize > max_size())

	cmp	edi, 1073741823				; 3fffffffH
	ja	$LN297@assign

; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	esi, ecx
	mov	eax, 1073741823				; 3fffffffH
	shr	esi, 1
	sub	eax, esi
	cmp	ecx, eax
	jbe	SHORT $LN79@assign

; 1893 : 			{
; 1894 : 			return (_Newsize);	// geometric growth would overflow

	mov	esi, edi
	jmp	SHORT $LN80@assign
$LN79@assign:

; 1895 : 			}
; 1896 : 
; 1897 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	add	esi, ecx

; 1898 : 
; 1899 : 		if (_Geometric < _Newsize)

	cmp	esi, edi
	cmovb	esi, edi
$LN80@assign:

; 1298 : 				}
; 1299 : 
; 1300 : 			const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1301 : 
; 1302 : 			if (this->_Myfirst() != pointer())

	test	edx, edx
	je	SHORT $LN5@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	ecx
	push	edx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN5@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1308 : 			_Buy(_Newcapacity);

	push	esi
	mov	ecx, ebx
	call	?_Buy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAE_NI@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Buy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T3[ebp]
	push	ebx
	push	DWORD PTR __Val$[ebp]
	push	edi
	push	DWORD PTR [ebx]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1310 : 			this->_Mylast() = _Ufill(this->_Myfirst(), _Newsize, _Val);

	mov	DWORD PTR [ebx+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2682 : 	return {};

	mov	BYTE PTR $T1[ebp], 0

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR $T1[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1312 : 		else if (_Newsize > _Oldsize)

	cmp	edi, eax
	jbe	SHORT $LN6@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	mov	esi, DWORD PTR __Val$[ebp]
	push	esi
	push	DWORD PTR [ebx+4]
	push	edx
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1315 : 			this->_Mylast() = _Ufill(this->_Mylast(), _Newsize - _Oldsize, _Val);

	sub	edi, DWORD PTR __Oldsize$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	ebx
	push	esi
	push	edi
	push	DWORD PTR [ebx+4]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
	add	esp, 36					; 00000024H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1315 : 			this->_Mylast() = _Ufill(this->_Mylast(), _Newsize - _Oldsize, _Val);

	mov	DWORD PTR [ebx+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1319 : 			const pointer _Newlast = this->_Myfirst() + _Newsize;

	lea	esi, DWORD PTR [edx+edi*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	esi
	push	edx
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1322 : 			this->_Mylast() = _Newlast;

	mov	DWORD PTR [ebx+4], esi
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN297@assign:

; 1296 : 				{
; 1297 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Xlength
$LN299@assign:
$LN296@assign:
	int	3
?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >, COMDAT
; _this$ = ecx

; 891  : 		{	// destroy the object

	npad	2
	push	esi
	mov	esi, ecx

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN4@vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi

; 892  : 		_Tidy();
; 893  : 		}

	ret	0
??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 728  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 728  : 		}

	ret	4
??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 480  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myend, COMDAT
; _this$ = ecx

; 676  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 677  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myend, COMDAT
; _this$ = ecx

; 671  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 672  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Mylast, COMDAT
; _this$ = ecx

; 666  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 667  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Mylast, COMDAT
; _this$ = ecx

; 661  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 662  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myfirst, COMDAT
; _this$ = ecx

; 656  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 657  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myfirst, COMDAT
; _this$ = ecx

; 651  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 652  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Get_data, COMDAT
; _this$ = ecx

; 646  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 647  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Get_data, COMDAT
; _this$ = ecx

; 641  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 642  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Getal, COMDAT
; _this$ = ecx

; 636  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 637  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Getal, COMDAT
; _this$ = ecx

; 631  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 632  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Orphan_all, COMDAT
; _this$ = ecx

; 621  : 		_Get_data()._Orphan_all();
; 622  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 1073741823				; 3fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocate
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size, COMDAT

; 751  : 		return (_Alloc_max_size::_Fn(0, _Al));

	mov	eax, 1073741823				; 3fffffffH

; 752  : 		}

	ret	0
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 1073741823				; 3fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU01@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >, COMDAT
; _this$ = ecx

; 1043 : 		}

	mov	eax, ecx
	ret	4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IBEABMXZ
_TEXT	SEGMENT
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IBEABMXZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 960  : 		return (_Traitsobj._Get_max_bucket_size());

	mov	eax, ecx

; 961  : 		}

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IBEABMXZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAMXZ
_TEXT	SEGMENT
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAMXZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 955  : 		return (_Traitsobj._Get_max_bucket_size());

	mov	eax, ecx

; 956  : 		}

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAMXZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
?_Reinsert@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 940  : 		{	// insert elements in [begin(), end())

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [ebx+4]

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [eax], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 942  : 		if (_Unchecked_begin() != _Last)

	je	SHORT $LN119@Reinsert
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	edi, DWORD PTR [eax+4]
$LL2@Reinsert:

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	mov	ecx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert<std::pair<HWND__ * const,bool> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 948  : 				if (_Done)

	jne	SHORT $LL2@Reinsert
	pop	edi
	pop	esi
$LN119@Reinsert:
	pop	ebx

; 949  : 					break;
; 950  : 				}
; 951  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Reinsert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Check_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
?_Check_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Check_size, COMDAT
; _this$ = ecx

; 924  : 		{	// grow table as needed

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, ecx

; 494  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [ebx+28]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	eax, ecx
	shr	eax, 31					; 0000001fH
	cvtpd2ps xmm1, xmm0
	movd	xmm0, ecx
	cvtdq2pd xmm0, xmm0
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	divss	xmm1, xmm0

; 925  : 		if (max_load_factor() < load_factor())

	comiss	xmm1, DWORD PTR [ebx]
	jbe	SHORT $LN191@Check_size

; 926  : 
; 927  : 			{	// rehash to bigger table
; 928  : 			size_type _Newsize = bucket_count();
; 929  : 
; 930  : 			if (_Newsize < 512)

	cmp	ecx, 512				; 00000200H
	jae	SHORT $LN3@Check_size

; 931  : 				_Newsize *= 8;	// multiply by 8

	shl	ecx, 3
	jmp	SHORT $LN5@Check_size
$LN3@Check_size:

; 932  : 			else if (_Newsize < _Vec.max_size() / 2)

	cmp	ecx, 536870911				; 1fffffffH
	jae	SHORT $LN5@Check_size

; 933  : 				_Newsize *= 2;	// multiply safely by 2

	add	ecx, ecx
$LN5@Check_size:
	push	edi

; 934  : 			_Init(_Newsize);

	push	ecx
	mov	ecx, ebx
	call	?_Init@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Init
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	edi, DWORD PTR [ebx+4]

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edi], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 942  : 		if (_Unchecked_begin() != _Last)

	je	SHORT $LN194@Check_size
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	edi, DWORD PTR [edi+4]
	push	esi
$LL74@Check_size:

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	mov	ecx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert@AAU?$pair@QAUHWND__@@_N@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@_N@1@AAU?$pair@QAUHWND__@@_N@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert<std::pair<HWND__ * const,bool> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 948  : 				if (_Done)

	jne	SHORT $LL74@Check_size
	pop	esi
$LN194@Check_size:
	pop	edi
$LN191@Check_size:
	pop	ebx

; 935  : 			_Reinsert();
; 936  : 			}
; 937  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Check_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXI@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Init, COMDAT
; _this$ = ecx

; 916  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	esi

; 917  : 		_Vec.reserve(2 * _Buckets);	// avoid curdling _Vec if exception occurs

	mov	esi, DWORD PTR __Buckets$[ebp]
	add	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ebx+20]
	sub	eax, DWORD PTR [ebx+12]
	sar	eax, 2
	push	edi

; 1529 : 		if (_Newcapacity > capacity())

	cmp	esi, eax
	jbe	SHORT $LN4@Init

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())

	cmp	esi, 1073741823				; 3fffffffH
	ja	SHORT $LN85@Init

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	push	esi
	lea	ecx, DWORD PTR [ebx+12]
	call	?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Reallocate_exactly
$LN4@Init:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	ecx, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	DWORD PTR $T1[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	esi
	call	?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::assign

; 919  : 		_Mask = _Buckets - 1;

	mov	ecx, DWORD PTR __Buckets$[ebp]
	pop	edi
	pop	esi

; 920  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [ebx+28], ecx
	lea	eax, DWORD PTR [ecx-1]
	mov	DWORD PTR [ebx+24], eax
	pop	ebx

; 921  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN85@Init:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1533 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Xlength
$LN87@Init:
$LN84@Init:
	int	3
?_Init@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXI@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Hashval@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IBEIABQAUHWND__@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Hashval@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IBEIABQAUHWND__@@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hashval, COMDAT
; _this$ = ecx

; 911  : 		{	// return hash value, masked to current table size

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	esi, DWORD PTR __Keyval$[ebp]
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 911  : 		{	// return hash value, masked to current table size

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [esi]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [esi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+2]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+3]
	imul	ecx, edx, 16777619
	xor	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	eax, DWORD PTR [edi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, ecx, 16777619
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	and	eax, ecx

; 913  : 		}

	pop	ebp
	ret	4
?_Hashval@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IBEIABQAUHWND__@@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hashval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Insert_bucket@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@0I@Z
_TEXT	SEGMENT
__Plist$ = 8						; size = 4
__Where$ = 12						; size = 4
__Bucket$ = 16						; size = 4
?_Insert_bucket@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@0I@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert_bucket, COMDAT
; _this$ = ecx

; 882  : 		{	// fix iterators after inserting _Plist before _Where

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	eax, DWORD PTR __Bucket$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR [ecx+12]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	esi, DWORD PTR [eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [edx+esi]
	add	edx, esi
	cmp	eax, DWORD PTR [ecx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 883  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN2@Insert_buc

; 884  : 			{	// make bucket non-empty
; 885  : 			_Vec_lo(_Bucket) = _Plist;

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [edx], eax

; 886  : 			_Vec_hi(_Bucket) = _Plist;

	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [esi+ecx+4], eax
	pop	esi

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@Insert_buc:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR __Where$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jne	SHORT $LN4@Insert_buc

; 889  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [edx], eax
	pop	esi

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN4@Insert_buc:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], eax

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	je	SHORT $LN6@Insert_buc
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx+esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi+4], eax
$LN6@Insert_buc:
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Insert_bucket@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@0I@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Insert_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Erase_bucket@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Plist_arg$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Erase_bucket@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Erase_bucket, COMDAT
; _this$ = ecx

; 866  : 		{	// fix iterators before erasing _Plist before _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	mov	eax, DWORD PTR __Bucket$[ebp]
	push	esi
	mov	esi, ecx
	push	edi
	lea	edi, DWORD PTR [eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Plist_arg$[ebp]
	mov	edx, DWORD PTR [esi+12]
	add	edx, edi
	cmp	DWORD PTR [edx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	jne	SHORT $LN2@Erase_buck
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 869  : 			if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN4@Erase_buck

; 870  : 				{	// make bucket empty
; 871  : 				_Vec_lo(_Bucket) = _Unchecked_end();

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx], eax

; 872  : 				_Vec_hi(_Bucket) = _Unchecked_end();

	mov	ecx, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+ecx+4], eax
	pop	edi
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
$LN4@Erase_buck:

; 873  : 				}
; 874  : 			else
; 875  : 				_Vec_hi(_Bucket) = --_Plist;	// move end back one element

	mov	eax, DWORD PTR [eax+4]
	pop	edi
	mov	DWORD PTR [edx+4], eax
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
$LN2@Erase_buck:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN6@Erase_buck

; 877  : 			_Vec_lo(_Bucket) = ++_Plist;	// move beginning up one element

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN6@Erase_buck:
	pop	edi
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
?_Erase_bucket@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Erase_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_End@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_End@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_End, COMDAT
; _this$ = ecx

; 845  : 		{	// return end iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*8]
	cmp	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	je	SHORT $LN95@End
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	ecx, DWORD PTR [eax]
$LN95@End:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 852  : 			}
; 853  : 		}

	pop	ebp
	ret	8
?_End@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_End
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Begin@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Begin@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Begin, COMDAT
; _this$ = ecx

; 835  : 		{	// return begin iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp

; 836  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 837  : 		}

	pop	ebp
	ret	8
?_Begin@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_hi@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_hi@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Vec_hi, COMDAT
; _this$ = ecx

; 825  : 		{	// return reference to end()-1 for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [eax*8+4]
	add	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 827  : 		}

	pop	ebp
	ret	4
?_Vec_hi@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Vec_hi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_lo@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_lo@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Vec_lo, COMDAT
; _this$ = ecx

; 815  : 		{	// return reference to begin() for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 817  : 		}

	pop	ebp
	ret	4
?_Vec_lo@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Vec_lo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Plist$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 750  : 		{	// node exists, destroy it

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 96   : 		return (_Ptr);

	mov	esi, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [esi+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edx], eax

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ecx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 752  : 		}

	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 640  : 		{	// find leftmost not less than _Keyval in mutable hash table

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edi, DWORD PTR __Keyval$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 640  : 		{	// find leftmost not less than _Keyval in mutable hash table

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+2]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+3]
	imul	ecx, edx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	edx, DWORD PTR [esi+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	xor	ecx, eax

; 347  : 		_Val *= _FNV_prime;

	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1178 : 		return (_Unchecked_iterator(this->_Myhead(), _STD addressof(this->_Get_data())));

	mov	esi, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	and	ecx, eax

; 836  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR [edx+ecx*8]

; 816  : 		return (_Vec[2 * _Bucket]);

	add	ecx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ebx, DWORD PTR [edx+ecx*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	edx, DWORD PTR [edx+ecx*4]
$LL4@lower_boun:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	ebx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN48@lower_boun

; 847  : 			return (_Unchecked_end());

	mov	ecx, esi
	jmp	SHORT $LN49@lower_boun
$LN48@lower_boun:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	ecx, DWORD PTR [ecx]
$LN49@lower_boun:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 643  : 			_Where != _End(_Bucket); ++_Where)

	je	SHORT $LN3@lower_boun
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR [edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 644  : 			if (!_Traitsobj(_Traits::_Kfn(*_Where), _Keyval))

	je	SHORT $LN274@lower_boun
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LL4@lower_boun
$LN274@lower_boun:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [edi]
	cmp	ecx, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 645  : 				return (_Traitsobj(_Keyval,

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	cmovne	eax, esi
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebx

; 648  : 		}

	pop	ebp
	ret	8
$LN3@lower_boun:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 648  : 		}

	pop	ebp
	ret	8
?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?find@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::find, COMDAT
; _this$ = ecx

; 624  : 		{	// find an element in mutable hash table that matches _Keyval

	npad	2
	push	ebp
	mov	ebp, esp

; 625  : 		return (lower_bound(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	?lower_bound@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::lower_bound
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 626  : 		}

	pop	ebp
	ret	8
?find@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@ABQAUHWND__@@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::find
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?erase@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Plist$ = 12						; size = 4
?erase@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::erase, COMDAT
; _this$ = ecx

; 586  : 		{	// erase element at _Plist

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 67   : 		return (_Val.first);

	mov	edi, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 586  : 		{	// erase element at _Plist

	mov	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi+8]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+9]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+10]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+11]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [ebx+24]
	and	ecx, eax

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	lea	edx, DWORD PTR [ecx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR [ebx+12]
	add	ecx, edx
	cmp	DWORD PTR [ecx+4], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	jne	SHORT $LN49@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [ecx], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 869  : 			if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN51@erase

; 870  : 				{	// make bucket empty
; 871  : 				_Vec_lo(_Bucket) = _Unchecked_end();

	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [ecx], eax

; 872  : 				_Vec_hi(_Bucket) = _Unchecked_end();

	mov	ecx, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [edx+ecx+4], eax

; 873  : 				}
; 874  : 			else

	jmp	SHORT $LN356@erase
$LN51@erase:

; 875  : 				_Vec_hi(_Bucket) = --_Plist;	// move end back one element

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], eax

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jmp	SHORT $LN356@erase
$LN49@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [ecx], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN53@erase

; 877  : 			_Vec_lo(_Bucket) = ++_Plist;	// move beginning up one element

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [ecx], eax
$LN356@erase:
	mov	edi, DWORD PTR __Plist$[ebp]
$LN53@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi+4]

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	esi, DWORD PTR [edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	DWORD PTR [eax], esi

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	DWORD PTR [ecx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 591  : 		}

	pop	ebp
	ret	8
?erase@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?max_load_factor@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
?max_load_factor@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::max_load_factor, COMDAT
; _this$ = ecx

; 499  : 		return (_Max_bucket_size());

	fld	DWORD PTR [ecx]

; 500  : 		}

	ret	0
?max_load_factor@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::max_load_factor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?load_factor@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
?load_factor@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::load_factor, COMDAT
; _this$ = ecx

; 493  : 		{	// return elements per bucket

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 494  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ecx+8]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	eax, DWORD PTR [ecx+28]
	cvtpd2ps xmm1, xmm0
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	divss	xmm1, xmm0
	movss	DWORD PTR tv72[ebp], xmm1
	fld	DWORD PTR tv72[ebp]

; 495  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?load_factor@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::load_factor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?bucket_count@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?bucket_count@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::bucket_count, COMDAT
; _this$ = ecx

; 421  : 		return (_Maxidx);

	mov	eax, DWORD PTR [ecx+28]

; 422  : 		}

	ret	0
?bucket_count@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::bucket_count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::size, COMDAT
; _this$ = ecx

; 387  : 		return (_List.size());

	mov	eax, DWORD PTR [ecx+8]

; 388  : 		}

	ret	0
?size@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 371  : 		{	// make iterator from const_iterator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 373  : 		}

	pop	ebp
	ret	8
?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 366  : 		{	// make iterator from _Unchecked_const_iterator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 368  : 		}

	pop	ebp
	ret	8
?_Make_iter@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 356  : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 358  : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Unchecked_begin@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 346  : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 348  : 		}

	pop	ebp
	ret	4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::end, COMDAT
; _this$ = ecx

; 336  : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 338  : 		}

	pop	ebp
	ret	4
?end@?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??1?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::~_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >, COMDAT
; _this$ = ecx

; 307  : 		{	// destroy hash table

	npad	2
	push	edi
	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [edi+12]
	test	ecx, ecx
	je	SHORT $LN7@Hash

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [edi+20]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [edi+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [edi+16], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [edi+20], 0
$LN7@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi+4]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	ecx, DWORD PTR [eax]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR [edi+4]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+8], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	ecx, DWORD PTR [edi+4]
	je	SHORT $LN109@Hash
	push	esi
	npad	1
$LL110@Hash:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	ecx, esi
	cmp	esi, DWORD PTR [edi+4]
	jne	SHORT $LL110@Hash
	pop	esi
$LN109@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	DWORD PTR [edi+4]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 309  : 		}

	ret	0
??1?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::~_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_this$ = 8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >, COMDAT
; _this$ = ecx

; 197  : 		{	// construct empty hash table

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	lea	ebx, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 38   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR __Parg$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	mov	ecx, ebx
	push	edi
	push	0
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map

; 38   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 195  : 			_List(_Al),

	mov	DWORD PTR _this$[ebp], ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ebx], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [ebx+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [ebx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 195  : 			_List(_Al),

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [esi+12], 0

; 477  : 		_Mylast(),

	mov	DWORD PTR [esi+16], 0

; 478  : 		_Myend()

	mov	DWORD PTR [esi+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 198  : 		_Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [esi], 1065353216		; 3f800000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+20]
	sub	eax, DWORD PTR [esi+12]
	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 196  : 			_Vec(_Al)

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1529 : 		if (_Newcapacity > capacity())

	cmp	eax, 16					; 00000010H
	jae	SHORT $LN69@Hash

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())
; 1532 : 				{
; 1533 : 				_Xlength();
; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	push	16					; 00000010H
	lea	ecx, DWORD PTR [esi+12]
	call	?_Reallocate_exactly@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::_Reallocate_exactly
$LN69@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [ebx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	ecx, DWORD PTR [esi+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	DWORD PTR $T2[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	push	16					; 00000010H
	call	?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::assign

; 199  : 		_Init();
; 200  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	edi

; 919  : 		_Mask = _Buckets - 1;

	mov	DWORD PTR [esi+24], 7

; 920  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [esi+28], 8
	pop	esi
	pop	ebx

; 199  : 		_Init();
; 200  : 		}

	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::~list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > > > > > >
__ehhandler$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >::_Hash<std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Incsize@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXI@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Incsize, COMDAT
; _this$ = ecx

; 1949 : 		{	// alter element count, with checking

	npad	2
	push	ebp
	mov	ebp, esp

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, 268435454				; 0ffffffeH
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
	sub	eax, edx
	cmp	eax, esi
	jae	SHORT $LN2@Incsize

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN42@Incsize:
$LN2@Incsize:

; 1952 : 		this->_Mysize() += _Count;

	lea	eax, DWORD PTR [edx+esi]
	mov	DWORD PTR [ecx+4], eax
	pop	esi

; 1953 : 		}

	pop	ebp
	ret	4
$LN41@Incsize:
?_Incsize@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXI@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Incsize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Tidy, COMDAT
; _this$ = ecx

; 1926 : 		{	// free all storage

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	eax, DWORD PTR [edx]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx], edx

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	edx, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx+4], edx

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN5@Tidy
	push	esi
	npad	4
$LL6@Tidy:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	eax, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL6@Tidy
	pop	esi
$LN5@Tidy:
	pop	edi

; 1927 : 		clear();
; 1928 : 		}

	ret	0
?_Tidy@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_splice@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?_Unchecked_splice@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_splice, COMDAT
; _this$ = ecx

; 1909 : 		{	// splice [_First, _Last) before _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1910 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1911 : 			_Last._Mynode();
; 1912 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1913 : 			_Where._Mynode();
; 1914 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	ecx, DWORD PTR __Where$[ebp]

; 1915 : 			_First._Mynode();
; 1916 : 
; 1917 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());
; 1918 : 		this->_Prevnode(_Where._Mynode()) =

	mov	eax, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], eax

; 1919 : 			this->_Prevnode(_Last._Mynode());
; 1920 : 		this->_Prevnode(_Last._Mynode()) =

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1921 : 			this->_Prevnode(_First._Mynode());
; 1922 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax+4], edx

; 1923 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Unchecked_splice@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_splice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?clear@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::clear, COMDAT
; _this$ = ecx

; 1534 : 		{	// erase all

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi]

; 1535 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1536 : 
; 1537 : 		this->_Orphan_ptr(nullptr);
; 1538 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	eax, DWORD PTR [edx]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx], edx

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	edx, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx+4], edx

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN3@clear
	push	esi
	npad	4
$LL4@clear:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	eax, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL4@clear
	pop	esi
$LN3@clear:
	pop	edi

; 1547 : 			this->_Freenode(_Pnode);
; 1548 : 			}
; 1549 : 		}

	ret	0
?clear@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?erase@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::erase, COMDAT
; _this$ = ecx

; 1500 : 		{	// erase element at _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 248  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	edi

; 1500 : 		{	// erase element at _Where

	mov	edi, ecx

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Where$[ebp], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [eax+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	DWORD PTR [esi], edx

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	DWORD PTR [edx+4], ecx

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR __Where$[ebp]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 1501 : 		_Nodeptr _Pnode = _Unlinknode(_Where++);
; 1502 : 		this->_Freenode(_Pnode);
; 1503 : 		return (_Make_iter(_Where));
; 1504 : 		}

	pop	ebp
	ret	8
?erase@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unlinknode@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Unlinknode@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unlinknode, COMDAT
; _this$ = ecx

; 1475 : 		{	// unlink node at _Where from the list

	npad	2
	push	ebp
	mov	ebp, esp

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR __Where$[ebp]
	push	esi

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [eax+4]

; 1476 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1477 : 		if (_Where._Getcont() != _STD addressof(this->_Get_data())
; 1478 : 			|| _Where._Ptr == this->_Myhead())
; 1479 : 			{
; 1480 : 			_DEBUG_ERROR("list erase iterator outside range");
; 1481 : 			}
; 1482 : 
; 1483 : 		_Nodeptr _Pnode = (_Where)._Mynode();
; 1484 : 		_Orphan_ptr(_Pnode);
; 1485 : 
; 1486 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1487 : 		_Nodeptr _Pnode = (_Where)._Mynode();
; 1488 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1489 : 
; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi], edx

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], edx

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ecx+4]
	pop	esi

; 1496 : 		return (_Pnode);
; 1497 : 		}

	pop	ebp
	ret	4
?_Unlinknode@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unlinknode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?front@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEAAU?$pair@QAUHWND__@@_N@2@XZ
_TEXT	SEGMENT
?front@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEAAU?$pair@QAUHWND__@@_N@2@XZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::front, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [eax]

; 540  : 		return ((reference)_Pnode->_Myval);

	add	eax, 8

; 1288 : 		return (*begin());
; 1289 : 		}

	ret	0
?front@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEAAU?$pair@QAUHWND__@@_N@2@XZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::front
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?max_size@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::max_size, COMDAT
; _this$ = ecx

; 1272 : 		return (this->_Getal().max_size());

	mov	eax, 268435455				; 0fffffffH

; 1273 : 		}

	ret	0
?max_size@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?size@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::size, COMDAT
; _this$ = ecx

; 1267 : 		return (this->_Mysize());

	mov	eax, DWORD PTR [ecx+4]

; 1268 : 		}

	ret	0
?size@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1193 : 		{	// make iterator from _Unchecked_const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 1194 : 		return (iterator(_Where._Ptr, _STD addressof(this->_Get_data())));
; 1195 : 		}

	pop	ebp
	ret	8
?_Make_iter@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1188 : 		{	// make iterator from const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 1189 : 		return (iterator(_Where._Ptr, _STD addressof(this->_Get_data())));
; 1190 : 		}

	pop	ebp
	ret	8
?_Make_iter@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_end@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1177 : 		{	// return unchecked iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1178 : 		return (_Unchecked_iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1179 : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_begin@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 1165 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1166 : 		return (_Unchecked_iterator(this->_Nextnode(this->_Myhead()),
; 1167 : 			_STD addressof(this->_Get_data())));
; 1168 : 		}

	pop	ebp
	ret	4
?_Unchecked_begin@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?end@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::end, COMDAT
; _this$ = ecx

; 1155 : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1156 : 		return (iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1157 : 		}

	pop	ebp
	ret	4
?end@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?begin@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::begin, COMDAT
; _this$ = ecx

; 1143 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1144 : 		return (iterator(this->_Nextnode(this->_Myhead()),
; 1145 : 			_STD addressof(this->_Get_data())));
; 1146 : 		}

	pop	ebp
	ret	4
?begin@?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??1?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::~list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >, COMDAT
; _this$ = ecx

; 1118 : 		{	// destroy the object

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	edx, DWORD PTR [eax]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	edx, DWORD PTR [edi]
	je	SHORT $LN7@list
	push	esi
	npad	4
$LL8@list:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [edx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	edx, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL8@list
	pop	esi
$LN7@list:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	DWORD PTR [edi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1120 : 		}

	ret	0
??1?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::~list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z PROC ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >, COMDAT
; _this$ = ecx

; 914  : 		{	// construct empty list, allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 914  : 		{	// construct empty list, allocator

	mov	DWORD PTR _this$[ebp], esi

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 915  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QAUHWND__@@_N@std@@@1@@Z ENDP ; std::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::list<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??1?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ PROC ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::~_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >, COMDAT
; _this$ = ecx

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	ret	0
??1?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAE@XZ ENDP ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::~_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Freenode@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z PROC ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Freenode, COMDAT
; _this$ = ecx

; 864  : 		{	// give node back

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 872  : 		}

	pop	ebp
	ret	4
?_Freenode@?$_List_buy@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z ENDP ; std::_List_buy<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > >::_Freenode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAU?$pair@QAUHWND__@@_N@2@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAU?$pair@QAUHWND__@@_N@2@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Myval, COMDAT

; 539  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 541  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAU?$pair@QAUHWND__@@_N@2@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Prevnode, COMDAT

; 534  : 		{	// return reference to predecessor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 536  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Nextnode, COMDAT

; 529  : 		{	// return reference to successor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 531  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >, COMDAT
; _this$ = ecx

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0

; 526  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >::_List_val<std::_List_simple_types<std::pair<HWND__ * const,bool> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABIXZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Mysize, COMDAT
; _this$ = ecx

; 813  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 814  : 		}

	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABIXZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAIXZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Mysize, COMDAT
; _this$ = ecx

; 808  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 809  : 		}

	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAIXZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myhead@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Myhead, COMDAT
; _this$ = ecx

; 798  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 799  : 		}

	ret	0
?_Myhead@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Get_data, COMDAT
; _this$ = ecx

; 793  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 794  : 		}

	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Get_data, COMDAT
; _this$ = ecx

; 788  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 789  : 		}

	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@U?$pair@QAUHWND__@@_N@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Getal, COMDAT
; _this$ = ecx

; 783  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 784  : 		}

	ret	0
?_Getal@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Getal, COMDAT
; _this$ = ecx

; 778  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 779  : 		}

	ret	0
?_Getal@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0, COMDAT
; _this$ = ecx

; 745  : 		{	// allocate a node and set links

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN26@Buynode0
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN98@Buynode0:
$LN26@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 748  : 		if (_Next == _Nodeptr())

	mov	ecx, DWORD PTR __Next$[ebp]
	test	ecx, ecx
	jne	SHORT $LN95@Buynode0

; 749  : 			{	// point at self
; 750  : 			_Next = _Pnode;

	mov	ecx, eax

; 751  : 			_Prev = _Pnode;

	mov	edx, eax
	jmp	SHORT $LN2@Buynode0
$LN95@Buynode0:
	mov	edx, DWORD PTR __Prev$[ebp]
$LN2@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	lea	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN4@Buynode0
	mov	DWORD PTR [ecx], edx
$LN4@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 764  : 		}

	pop	ebp
	ret	8
$LN97@Buynode0:
?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Freeheadnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 735  : 		{	// free head node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 741  : 		}

	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Buyheadnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buynode0

; 732  : 		}

	ret	0
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??1?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::~_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 612  : 		}

	ret	0
??1?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::~_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myval@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAU?$pair@QAUHWND__@@_N@2@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAU?$pair@QAUHWND__@@_N@2@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Myval, COMDAT

; 589  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 590  : 		return (_List_val<_Val_types>::_Myval(_Pnode));
; 591  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAU?$pair@QAUHWND__@@_N@2@PAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Prevnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Prevnode, COMDAT

; 584  : 		{	// return reference to predecessor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 585  : 		return (_List_val<_Val_types>::_Prevnode(_Pnode));
; 586  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Nextnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Nextnode, COMDAT

; 579  : 		{	// return reference to successor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 580  : 		return (_List_val<_Val_types>::_Nextnode(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]

; 581  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_alloc@U?$_List_base_types@U?$pair@QAUHWND__@@_N@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@2@@std@@@std@@SAAAPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<std::pair<HWND__ * const,bool>,std::allocator<std::pair<HWND__ * const,bool> > > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 268435455				; 0fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 268435455				; 0fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 268435455				; 0fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 268435455				; 0fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 4

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	16					; 00000010H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@QAUHWND__@@_N@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<HWND__ * const,bool>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<HWND__ * const,bool> >::allocator<std::pair<HWND__ * const,bool> >, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@U?$pair@QAUHWND__@@_N@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<HWND__ * const,bool> >::allocator<std::pair<HWND__ * const,bool> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_map
;	COMDAT ??0?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@@Z
_TEXT	SEGMENT
__Traits$ = 8						; size = 4
??0?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@@Z PROC ; std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with specified comparator

	npad	2
	push	ebp
	mov	ebp, esp

; 38   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR __Traits$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 40   : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$_Umap_traits@PAUHWND__@@_NV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@U?$pair@QAUHWND__@@_N@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@1@@Z ENDP ; std::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>::_Umap_traits<HWND__ *,bool,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<std::pair<HWND__ * const,bool> >,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@XZ PROC ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@XZ ENDP ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@XZ PROC ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@XZ ENDP ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QBEABU?$hash@PAUHWND__@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QBEABU?$hash@PAUHWND__@@@2@XZ PROC ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$hash@PAUHWND__@@@std@@V?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@2@$00@std@@QBEABU?$hash@PAUHWND__@@@2@XZ ENDP ; std::_Compressed_pair<std::hash<HWND__ *>,std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QBEABMXZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QBEABMXZ PROC ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QBEABMXZ ENDP ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QAEAAMXZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QAEAAMXZ PROC ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QAEAAMXZ ENDP ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QBEABU?$equal_to@PAUHWND__@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QBEABU?$equal_to@PAUHWND__@@@2@XZ PROC ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$equal_to@PAUHWND__@@@std@@M$00@std@@QBEABU?$equal_to@PAUHWND__@@@2@XZ ENDP ; std::_Compressed_pair<std::equal_to<HWND__ *>,float,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$_Bitwise_hash@PAUHWND__@@@std@@QBEIABQAUHWND__@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??R?$_Bitwise_hash@PAUHWND__@@@std@@QBEIABQAUHWND__@@@Z PROC ; std::_Bitwise_hash<HWND__ *>::operator(), COMDAT
; _this$ = ecx

; 360  : 		{	// hash _Keyval to size_t value by pseudorandomizing transform

	npad	2
	push	ebp
	mov	ebp, esp

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edx, DWORD PTR __Keyval$[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, eax, 16777619
	movzx	eax, BYTE PTR [edx+1]
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619

; 361  : 		return (_Hash_seq((const unsigned char *)&_Keyval, sizeof (_Kty)));
; 362  : 		}

	pop	ebp
	ret	4
??R?$_Bitwise_hash@PAUHWND__@@@std@@QBEIABQAUHWND__@@@Z ENDP ; std::_Bitwise_hash<HWND__ *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$equal_to@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$equal_to@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z PROC ; std::equal_to<HWND__ *>::operator(), COMDAT
; _this$ = ecx

; 219  : 		{	// apply operator== to operands

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 220  : 		return (_Left == _Right);
; 221  : 		}

	pop	ebp
	ret	8
??R?$equal_to@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ENDP ; std::equal_to<HWND__ *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Get_max_bucket_size@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABMXZ
_TEXT	SEGMENT
?_Get_max_bucket_size@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABMXZ PROC ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Get_max_bucket_size, COMDAT
; _this$ = ecx

; 138  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 139  : 		}

	ret	0
?_Get_max_bucket_size@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABMXZ ENDP ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Get_max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Get_max_bucket_size@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QAEAAMXZ
_TEXT	SEGMENT
?_Get_max_bucket_size@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QAEAAMXZ PROC ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Get_max_bucket_size, COMDAT
; _this$ = ecx

; 133  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 134  : 		}

	ret	0
?_Get_max_bucket_size@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QAEAAMXZ ENDP ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Get_max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Getkeyeq@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABU?$equal_to@PAUHWND__@@@2@XZ
_TEXT	SEGMENT
?_Getkeyeq@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABU?$equal_to@PAUHWND__@@@2@XZ PROC ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Getkeyeq, COMDAT
; _this$ = ecx

; 128  : 		return (_Mypair._Get_second()._Get_first());

	mov	eax, ecx

; 129  : 		}

	ret	0
?_Getkeyeq@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABU?$equal_to@PAUHWND__@@@2@XZ ENDP ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Getkeyeq
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Gethash@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABU?$hash@PAUHWND__@@@2@XZ
_TEXT	SEGMENT
?_Gethash@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABU?$hash@PAUHWND__@@@2@XZ PROC ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Gethash, COMDAT
; _this$ = ecx

; 123  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 124  : 		}

	ret	0
?_Gethash@?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEABU?$hash@PAUHWND__@@@2@XZ ENDP ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Gethash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??R?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBE_NABQAUHWND__@@0@Z
_TEXT	SEGMENT
__Keyval1$ = 8						; size = 4
__Keyval2$ = 12						; size = 4
??R?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBE_NABQAUHWND__@@0@Z PROC ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::operator(), COMDAT
; _this$ = ecx

; 117  : 		{	// test if _Keyval1 NOT equal to _Keyval2

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Keyval1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Keyval2$[ebp]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 118  : 		return (!_Getkeyeq()(_Keyval1, _Keyval2));
; 119  : 		}

	pop	ebp
	ret	8
??R?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBE_NABQAUHWND__@@0@Z ENDP ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??R?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEIABQAUHWND__@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??R?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEIABQAUHWND__@@@Z PROC ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::operator(), COMDAT
; _this$ = ecx

; 112  : 		{	// hash _Keyval to size_t value

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edx, DWORD PTR __Keyval$[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, eax, 16777619
	movzx	eax, BYTE PTR [edx+1]
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 114  : 		}

	pop	ebp
	ret	4
??R?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QBEIABQAUHWND__@@@Z ENDP ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??0?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QAE@U?$hash@PAUHWND__@@@1@U?$equal_to@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
__Hasharg$ = 8						; size = 1
__Keyeqarg$ = 12					; size = 1
??0?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QAE@U?$hash@PAUHWND__@@@1@U?$equal_to@PAUHWND__@@@1@@Z PROC ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 109  : 		}

	mov	eax, ecx
	ret	8
??0?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@QAE@U?$hash@PAUHWND__@@@1@U?$equal_to@PAUHWND__@@@1@@Z ENDP ; std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?ProcessMessage@window_message_dispatch_s@@QAE_NPAUHWND__@@IAAIAAJPAJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_pRet$ = 24						; size = 4
?ProcessMessage@window_message_dispatch_s@@QAE_NPAUHWND__@@IAAIAAJPAJ@Z PROC ; window_message_dispatch_s::ProcessMessage, COMDAT
; _this$ = ecx

; 146  :   {

	npad	2
	push	ebp
	mov	ebp, esp

; 147  :     switch (uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	cmp	eax, 71					; 00000047H
	ja	$LN14@ProcessMes
	je	SHORT $LN5@ProcessMes
	add	eax, -6					; fffffffaH
	cmp	eax, 64					; 00000040H
	ja	$LN2@ProcessMes
	movzx	eax, BYTE PTR $LN16@ProcessMes[eax]
	jmp	DWORD PTR $LN18@ProcessMes[eax*4]
$LN4@ProcessMes:

; 148  :     {
; 149  :       case WM_WINDOWPOSCHANGING:
; 150  :         return On_WINDOWPOSCHANGING (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_WINDOWPOSCHANGING@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_WINDOWPOSCHANGING

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN6@ProcessMes:

; 153  : 
; 154  :       case WM_MOUSEACTIVATE:
; 155  :         return On_MOUSEACTIVATE     (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_MOUSEACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_MOUSEACTIVATE

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN7@ProcessMes:

; 156  : 
; 157  :       case WM_ACTIVATEAPP:
; 158  :         return On_ACTIVATEAPP       (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_ACTIVATEAPP@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_ACTIVATEAPP

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN8@ProcessMes:

; 159  :       case WM_ACTIVATE:
; 160  :         return On_ACTIVATE          (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_ACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_ACTIVATE

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN5@ProcessMes:

; 151  :       case WM_WINDOWPOSCHANGED:
; 152  :         return On_WINDOWPOSCHANGED  (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_WINDOWPOSCHANGED@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_WINDOWPOSCHANGED

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN14@ProcessMes:

; 147  :     switch (uMsg)

	cmp	eax, 561				; 00000231H
	ja	SHORT $LN15@ProcessMes
	je	SHORT $LN11@ProcessMes
	cmp	eax, 134				; 00000086H
	je	SHORT $LN9@ProcessMes
	cmp	eax, 512				; 00000200H
	jne	SHORT $LN2@ProcessMes

; 163  : 
; 164  :       case WM_MOUSEMOVE:
; 165  :         return On_MOUSEMOVE         (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_MOUSEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_MOUSEMOVE

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN9@ProcessMes:

; 161  :       case WM_NCACTIVATE:
; 162  :         return On_NCACTIVATE        (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_NCACTIVATE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_NCACTIVATE

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN11@ProcessMes:

; 166  : 
; 167  :       case WM_ENTERSIZEMOVE:
; 168  :         return On_ENTERSIZEMOVE     (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_ENTERSIZEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_ENTERSIZEMOVE

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN15@ProcessMes:

; 147  :     switch (uMsg)

	cmp	eax, 562				; 00000232H
	je	SHORT $LN12@ProcessMes
$LN2@ProcessMes:

; 171  :     }
; 172  : 
; 173  :     return false;

	xor	al, al

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
$LN12@ProcessMes:

; 169  :       case WM_EXITSIZEMOVE:
; 170  :         return On_EXITSIZEMOVE      (hWnd, wParam, lParam, pRet);

	push	DWORD PTR _pRet$[ebp]
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	?On_EXITSIZEMOVE@window_message_dispatch_s@@IAE_NPAUHWND__@@AAIAAJPAJ@Z ; window_message_dispatch_s::On_EXITSIZEMOVE

; 174  :   }

	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN18@ProcessMes:
	DD	$LN8@ProcessMes
	DD	$LN7@ProcessMes
	DD	$LN6@ProcessMes
	DD	$LN4@ProcessMes
	DD	$LN2@ProcessMes
$LN16@ProcessMes:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
?ProcessMessage@window_message_dispatch_s@@QAE_NPAUHWND__@@IAAIAAJPAJ@Z ENDP ; window_message_dispatch_s::ProcessMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_szSymbol$1 = -1048					; size = 1024
$T2 = -24						; size = 24
__$ReturnAddr$ = 4					; size = 4
_hWnd$ = 8						; size = 4
_hWndInsertAfter$ = 12					; size = 4
_X$ = 16						; size = 4
_Y$ = 20						; size = 4
_cx$ = 24						; size = 4
_cy$ = 28						; size = 4
_uFlags$ = 32						; size = 4
?SetWindowPos_Detour@@YGHPAUHWND__@@0HHHHI@Z PROC	; SetWindowPos_Detour

; 1540 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 1048				; 00000418H

; 1541 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??SetWindowPos_Detour@@YGHPAUHWND__@@0HHHHI@Z@4_NA, 0
	jne	SHORT $LN60@SetWindowP
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@SetWindowP
	push	OFFSET $SG211919
	push	OFFSET $SG211920
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@SetWindowP:
	mov	BYTE PTR ?called@?2??SetWindowPos_Detour@@YGHPAUHWND__@@0HHHHI@Z@4_NA, 1
$LN60@SetWindowP:
	push	esi

; 1542 : 
; 1543 :   if (hWnd == game_window.hWnd)

	mov	esi, DWORD PTR _hWnd$[ebp]
	cmp	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	jne	$LN34@SetWindowP

; 1544 :     SK_WINDOW_LOG_CALL1 ();

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 1
	jl	$LN34@SetWindowP
	push	1024					; 00000400H
	lea	eax, DWORD PTR _szSymbol$1[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR _szSymbol$1[ebp]
	push	1024					; 00000400H
	push	eax
	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	push	eax
	call	?SK_GetSymbolNameFromModuleAddr@@YAKPAUHINSTANCE__@@IPADK@Z ; SK_GetSymbolNameFromModuleAddr
	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	add	esp, 16					; 00000010H
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?SK_SummarizeCaller@@YG?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAX@Z ; SK_SummarizeCaller
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN24@SetWindowP
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN24@SetWindowP:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1544 :     SK_WINDOW_LOG_CALL1 ();

	push	eax
	push	OFFSET $SG211923
	push	OFFSET $SG211924
	push	OFFSET $SG211925
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1544 :     SK_WINDOW_LOG_CALL1 ();

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN34@SetWindowP
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN34@SetWindowP:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1546 :   if (config.display.force_windowed)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+517, 0

; 1547 :     if (hWndInsertAfter == HWND_TOPMOST)

	mov	eax, DWORD PTR _hWndInsertAfter$[ebp]
	je	SHORT $LN7@SetWindowP
	xor	ecx, ecx
	cmp	eax, -1
	cmove	eax, ecx
$LN7@SetWindowP:

; 1548 :       hWndInsertAfter = HWND_TOP;
; 1549 : 
; 1550 : 
; 1551 : 
; 1552 :   if (config.render.dxgi.safe_fullscreen) uFlags |= SWP_ASYNCWINDOWPOS;

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+504, 0
	mov	ecx, DWORD PTR _uFlags$[ebp]
	je	SHORT $LN8@SetWindowP
	or	ecx, 16384				; 00004000H
$LN8@SetWindowP:

; 1553 : 
; 1554 : 
; 1555 : 
; 1556 :   BOOL bRet = 
; 1557 :     SetWindowPos_Original ( hWnd, hWndInsertAfter,

	push	ecx
	push	DWORD PTR _cy$[ebp]
	push	DWORD PTR _cx$[ebp]
	push	DWORD PTR _Y$[ebp]
	push	DWORD PTR _X$[ebp]
	push	eax
	push	esi
	call	DWORD PTR ?SetWindowPos_Original@@3P6GHPAUHWND__@@0HHHHI@ZA ; SetWindowPos_Original
	pop	esi

; 1558 :                               X, Y,
; 1559 :                                 cx, cy,
; 1560 :                                   uFlags );
; 1561 : 
; 1562 :   return bRet;
; 1563 : }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?SetWindowPos_Detour@@YGHPAUHWND__@@0HHHHI@Z ENDP	; SetWindowPos_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_szSymbol$1 = -1048					; size = 1024
$T2 = -24						; size = 24
__$ReturnAddr$ = 4					; size = 4
_hWnd$ = 8						; size = 4
_lpwndpl$ = 12						; size = 4
?SetWindowPlacement_Detour@@YGHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z PROC ; SetWindowPlacement_Detour

; 1524 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 1048				; 00000418H

; 1525 :   SK_WINDOW_LOG_CALL_UNTESTED ();

	lea	eax, DWORD PTR _szSymbol$1[ebp]
	push	1024					; 00000400H
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR _szSymbol$1[ebp]
	push	1024					; 00000400H
	push	eax
	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	push	eax
	call	?SK_GetSymbolNameFromModuleAddr@@YAKPAUHINSTANCE__@@IPADK@Z ; SK_GetSymbolNameFromModuleAddr
	mov	eax, DWORD PTR __$ReturnAddr$[ebp]
	add	esp, 16					; 00000010H
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?SK_SummarizeCaller@@YG?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAX@Z ; SK_SummarizeCaller
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN18@SetWindowP
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN18@SetWindowP:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1525 :   SK_WINDOW_LOG_CALL_UNTESTED ();

	push	eax
	push	OFFSET $SG211896
	push	OFFSET $SG211897
	push	OFFSET $SG211898
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1525 :   SK_WINDOW_LOG_CALL_UNTESTED ();

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN27@SetWindowP
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN27@SetWindowP:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 1527 :   return SetWindowPlacement_Original ( hWnd, lpwndpl );

	push	DWORD PTR _lpwndpl$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR ?SetWindowPlacement_Original@@3P6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@ZA ; SetWindowPlacement_Original

; 1528 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetWindowPlacement_Detour@@YGHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z ENDP ; SetWindowPlacement_Detour
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-last_mouse>@@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-last_mouse>@@QAE@XZ PROC		; <unnamed-type-last_mouse>::<unnamed-type-last_mouse>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	BYTE PTR [ecx+8], 1
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+16], 428435		; 00068993H
	ret	0
??0<unnamed-type-last_mouse>@@QAE@XZ ENDP		; <unnamed-type-last_mouse>::<unnamed-type-last_mouse>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
;	COMDAT ?isZero@<unnamed-type-override>@<unnamed-type-res>@<unnamed-type-window>@sk_config_t@@QAE_NXZ
_TEXT	SEGMENT
?isZero@<unnamed-type-override>@<unnamed-type-res>@<unnamed-type-window>@sk_config_t@@QAE_NXZ PROC ; sk_config_t::<unnamed-type-window>::<unnamed-type-res>::<unnamed-type-override>::isZero, COMDAT
; _this$ = ecx

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN3@isZero
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN3@isZero
	mov	al, 1
	ret	0
$LN3@isZero:
	xor	al, al
	ret	0
?isZero@<unnamed-type-override>@<unnamed-type-res>@<unnamed-type-window>@sk_config_t@@QAE_NXZ ENDP ; sk_config_t::<unnamed-type-window>::<unnamed-type-res>::<unnamed-type-override>::isZero
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
;	COMDAT ?isZero@<unnamed-type-offset>@<unnamed-type-window>@sk_config_t@@QAE_NXZ
_TEXT	SEGMENT
?isZero@<unnamed-type-offset>@<unnamed-type-window>@sk_config_t@@QAE_NXZ PROC ; sk_config_t::<unnamed-type-window>::<unnamed-type-offset>::isZero, COMDAT
; _this$ = ecx

; 422  :       bool isZero (void) { return x.absolute == 0        && y.absolute == 0        &&

	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN3@isZero
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN3@isZero
	movss	xmm1, DWORD PTR [ecx+4]
	movss	xmm2, DWORD PTR __real@b727c5ac
	comiss	xmm1, xmm2
	jbe	SHORT $LN3@isZero
	movss	xmm0, DWORD PTR __real@3727c5ac
	comiss	xmm0, xmm1
	jbe	SHORT $LN3@isZero
	movss	xmm1, DWORD PTR [ecx+12]
	comiss	xmm1, xmm2
	jbe	SHORT $LN3@isZero
	comiss	xmm0, xmm1
	jbe	SHORT $LN3@isZero
	mov	al, 1

; 423  :                                   x.percent  > -0.00001f && x.percent   < 0.00001f &&
; 424  :                                   y.percent  > -0.00001f && y.percent   < 0.00001f; }

	ret	0
$LN3@isZero:

; 422  :       bool isZero (void) { return x.absolute == 0        && y.absolute == 0        &&

	xor	al, al

; 423  :                                   x.percent  > -0.00001f && x.percent   < 0.00001f &&
; 424  :                                   y.percent  > -0.00001f && y.percent   < 0.00001f; }

	ret	0
?isZero@<unnamed-type-offset>@<unnamed-type-window>@sk_config_t@@QAE_NXZ ENDP ; sk_config_t::<unnamed-type-window>::<unnamed-type-offset>::isZero
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2964 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	push	DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32
	test	eax, eax
	je	SHORT $LN29@dynamic

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32, 0
$LN29@dynamic:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+40, 0
	mov	DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+36, 0
	ret	0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2979 : __declspec(selectany) CAtlWinModule _AtlWinModule;

	mov	ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
	call	??0CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::CAtlWinModule
	push	OFFSET ??__F_AtlWinModule@ATL@@YAXXZ	; ATL::`dynamic atexit destructor for '_AtlWinModule''
	call	_atexit
	pop	ecx
	ret	0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlWinModule@ATL@@QAEXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2964 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	push	DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	ecx
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2965 : 	}

	ret	0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2958 : 	{

	npad	2
	push	esi

; 2964 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	push	DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4

; 2958 : 	{

	mov	esi, ecx

; 2964 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	push	esi
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN26@CAtlWinMod

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi+32], 0
$LN26@CAtlWinMod:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+36], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2960 : 	}

	ret	0
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2944 : 	CAtlWinModule()

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movups	XMMWORD PTR [esi+4], xmm0
	lea	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2944 : 	CAtlWinModule()

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movq	QWORD PTR [eax+16], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

	mov	DWORD PTR [esi+32], 0
	mov	DWORD PTR [esi+36], 0
	mov	DWORD PTR [esi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2946 : 		cbSize = sizeof(_ATL_WIN_MODULE);

	mov	DWORD PTR [esi], 44			; 0000002cH

; 8412 : 	pWinModule->m_pCreateWndList = NULL;

	mov	DWORD PTR [esi+28], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN26@CAtlWinMod

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	eax, eax
	jle	SHORT $LN27@CAtlWinMod
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2948 : 		if (FAILED(hr))

	test	eax, eax
$LN27@CAtlWinMod:

; 2953 : 			return;
; 2954 : 		}
; 2955 : 	}

	mov	eax, esi

; 2948 : 		if (FAILED(hr))

	jns	SHORT $LN2@CAtlWinMod

; 2949 : 		{
; 2950 : 			ATLASSERT(0);
; 2951 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2952 : 			cbSize = 0;

	mov	DWORD PTR [esi], 0
	pop	esi

; 2953 : 			return;
; 2954 : 		}
; 2955 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
$LN26@CAtlWinMod:
	mov	eax, esi
$LN2@CAtlWinMod:
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
__$EHRec$ = -12						; size = 12
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??__F_AtlComModule@ATL@@YAXXZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 2615 : 		Term();

	mov	ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?Term@CAtlComModule@ATL@@QAEXXZ		; ATL::CAtlComModule::Term

; 2616 : 	}

	mov	ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	??1_ATL_COM_MODULE70@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
text$yd	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??__F_AtlComModule@ATL@@YAXXZ:
	mov	eax, OFFSET __ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
	push	0
	push	OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A+16
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN4@dynamic

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	eax, eax
	jle	SHORT $LN20@dynamic
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2602 : 		if (FAILED(m_csObjMap.Init()))

	test	eax, eax
$LN20@dynamic:
	jns	SHORT $LN4@dynamic

; 2723 : __declspec(selectany) CAtlComModule _AtlComModule;

	push	OFFSET ??__F_AtlComModule@ATL@@YAXXZ	; ATL::`dynamic atexit destructor for '_AtlComModule''

; 2606 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2723 : __declspec(selectany) CAtlComModule _AtlComModule;

	call	_atexit
	pop	ecx
	ret	0
$LN4@dynamic:
	push	OFFSET ??__F_AtlComModule@ATL@@YAXXZ	; ATL::`dynamic atexit destructor for '_AtlComModule''

; 2610 : 		cbSize = sizeof(_ATL_COM_MODULE);

	mov	DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A, 40 ; 00000028H

; 2723 : __declspec(selectany) CAtlComModule _AtlComModule;

	call	_atexit
	pop	ecx
	ret	0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlComModule@ATL@@QAEXXZ PROC			; ATL::CAtlComModule::Term, COMDAT
; _this$ = ecx

; 2620 : 	{

	npad	2
	push	edi
	mov	edi, ecx

; 2621 : 		if (cbSize == 0)

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN1@Term

; 2622 : 			return;
; 2623 : 
; 2624 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

	push	esi
	mov	esi, DWORD PTR [edi+8]
	cmp	esi, DWORD PTR [edi+12]
	jae	SHORT $LN3@Term
	push	ebx
$LL4@Term:

; 2625 : 		{
; 2626 : 			if (*ppEntry != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@Term

; 2627 : 			{
; 2628 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

	mov	ebx, DWORD PTR [eax+16]

; 2629 : 
; 2630 : 				if (pCache->pCF != NULL)

	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN2@Term

; 2631 : 				{
; 2632 : 					// Decode factory pointer if it's not null
; 2633 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

	push	eax
	call	DWORD PTR __imp__DecodePointer@4

; 2634 : 					_Analysis_assume_(factory != nullptr);
; 2635 : 					factory->Release();

	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]

; 2636 : 					pCache->pCF = NULL;

	mov	DWORD PTR [ebx], 0
$LN2@Term:

; 2622 : 			return;
; 2623 : 
; 2624 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

	add	esi, 4
	cmp	esi, DWORD PTR [edi+12]
	jb	SHORT $LL4@Term
	pop	ebx
$LN3@Term:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 181  : 		DeleteCriticalSection(&m_sec);

	lea	eax, DWORD PTR [edi+16]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2644 : 		cbSize = 0;

	mov	DWORD PTR [edi], 0
	pop	esi
$LN1@Term:
	pop	edi

; 2645 : 	}

	ret	0
?Term@CAtlComModule@ATL@@QAEXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT
; _this$ = ecx

; 2614 : 	{

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1CAtlComModule@ATL@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 2615 : 		Term();

	call	?Term@CAtlComModule@ATL@@QAEXXZ		; ATL::CAtlComModule::Term

; 2616 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlComModule@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT
; _this$ = ecx

; 2593 : 	CAtlComModule() throw()

	npad	2
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
	lea	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movups	XMMWORD PTR [eax], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movq	QWORD PTR [eax+16], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2595 : 		cbSize = 0;

	mov	DWORD PTR [esi], 0

; 2596 : 
; 2597 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

	mov	DWORD PTR [esi+4], OFFSET ___ImageBase

; 2598 : 
; 2599 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

	mov	DWORD PTR [esi+8], OFFSET ___pobjMapEntryFirst+4

; 2600 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

	mov	DWORD PTR [esi+12], OFFSET ___pobjMapEntryLast
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN2@CAtlComMod

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	eax, eax
	jle	SHORT $LN18@CAtlComMod
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2602 : 		if (FAILED(m_csObjMap.Init()))

	test	eax, eax
$LN18@CAtlComMod:
	jns	SHORT $LN2@CAtlComMod

; 2611 : 	}

	mov	eax, esi
	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
	pop	esi
	ret	0
$LN2@CAtlComMod:

; 2603 : 		{
; 2604 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));
; 2605 : 			ATLASSERT(0);
; 2606 : 			CAtlBaseModule::m_bInitFailed = true;
; 2607 : 			return;
; 2608 : 		}
; 2609 : 		// Set cbSize on success.
; 2610 : 		cbSize = sizeof(_ATL_COM_MODULE);

	mov	DWORD PTR [esi], 40			; 00000028H

; 2611 : 	}

	mov	eax, esi
	pop	esi
	ret	0
??0CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7660 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 7661 : 	if (pWinModule == NULL)

	mov	esi, DWORD PTR _pWinModule$[ebp]
	test	esi, esi
	jne	SHORT $LN5@AtlWinModu
$LN35@AtlWinModu:

; 7662 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	pop	esi

; 7674 : }

	pop	ebp
	ret	8
$LN5@AtlWinModu:

; 7663 : 	if (pWinModule->cbSize == 0)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN34@AtlWinModu

; 7664 : 		return S_OK;
; 7665 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

	cmp	eax, 44					; 0000002cH
	jne	SHORT $LN35@AtlWinModu

; 7666 : 		return E_INVALIDARG;
; 7667 : 
; 7668 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

	push	edi
	xor	edi, edi
	cmp	DWORD PTR [esi+36], edi
	jle	SHORT $LN3@AtlWinModu

; 7669 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

	push	ebx
	mov	ebx, DWORD PTR _hInst$[ebp]
	npad	2
$LL4@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

	test	edi, edi
	js	SHORT $LN36@AtlWinModu
	cmp	edi, DWORD PTR [esi+36]
	jge	SHORT $LN36@AtlWinModu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 7669 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

	mov	eax, DWORD PTR [esi+32]
	push	ebx
	movzx	eax, WORD PTR [eax+edi*2]
	push	eax
	call	DWORD PTR __imp__UnregisterClassW@8
	inc	edi
	cmp	edi, DWORD PTR [esi+36]
	jl	SHORT $LL4@AtlWinModu
	pop	ebx
$LN3@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi+32]
	pop	edi
	test	eax, eax
	je	SHORT $LN20@AtlWinModu

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi+32], 0
$LN20@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 181  : 		DeleteCriticalSection(&m_sec);

	lea	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 223  : 		m_nSize = 0;

	mov	DWORD PTR [esi+36], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 181  : 		DeleteCriticalSection(&m_sec);

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 181  : 		DeleteCriticalSection(&m_sec);

	call	DWORD PTR __imp__DeleteCriticalSection@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 7672 : 	pWinModule->cbSize = 0;

	mov	DWORD PTR [esi], 0
$LN34@AtlWinModu:

; 7673 : 	return S_OK;

	xor	eax, eax
	pop	esi

; 7674 : }

	pop	ebp
	ret	8
$LN36@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

	push	1
	push	-1073741684				; c000008cH
	call	?_AtlRaiseException@ATL@@YAXKK@Z	; ATL::_AtlRaiseException
$LN37@AtlWinModu:
$LN33@AtlWinModu:
	int	3
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8404 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 8405 : 	if (pWinModule == NULL)

	mov	eax, DWORD PTR _pWinModule$[ebp]
	test	eax, eax
	jne	SHORT $LN2@AtlWinModu
$LN15@AtlWinModu:

; 8406 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H

; 8421 : }

	pop	ebp
	ret	4
$LN2@AtlWinModu:

; 8407 : 
; 8408 : 	// check only in the DLL
; 8409 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

	cmp	DWORD PTR [eax], 44			; 0000002cH
	jne	SHORT $LN15@AtlWinModu
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 170  : 		HRESULT hRes = S_OK;

	xor	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 8412 : 	pWinModule->m_pCreateWndList = NULL;

	mov	DWORD PTR [eax+28], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	esi
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	add	eax, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	eax
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN14@AtlWinModu

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
	mov	esi, eax
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	esi, esi
	jle	SHORT $LN14@AtlWinModu
	movzx	esi, si
	or	esi, -2147024896			; 80070000H
$LN14@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 8420 : 	return hr;

	mov	eax, esi
	pop	esi

; 8421 : }

	pop	ebp
	ret	4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN19@ATL_WIN_MO

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi+32], 0
$LN19@ATL_WIN_MO:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+36], 0
	pop	esi
	ret	0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	xorps	xmm0, xmm0
	mov	DWORD PTR _this$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movups	XMMWORD PTR [ecx+4], xmm0
	mov	eax, ecx
	movq	QWORD PTR [ecx+20], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

	mov	DWORD PTR [ecx+32], 0
	mov	DWORD PTR [ecx+36], 0
	mov	DWORD PTR [ecx+40], 0
	mov	esp, ebp
	pop	ebp
	ret	0
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 236  : 	{

	npad	2
	push	ebp
	mov	ebp, esp

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);
; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

	mov	edx, DWORD PTR _nIndex$[ebp]
	test	edx, edx
	js	SHORT $LN6@operator
	cmp	edx, DWORD PTR [ecx+4]
	jge	SHORT $LN6@operator

; 241  : 		}
; 242  : 		return m_aT[nIndex];

	mov	eax, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+edx*2]

; 243  : 	}

	pop	ebp
	ret	4
$LN6@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

	push	1
	push	-1073741684				; c000008cH
	call	?_AtlRaiseException@ATL@@YAXKK@Z	; ATL::_AtlRaiseException
$LN7@operator:
$LN5@operator:
	int	3
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 215  : 	{

	npad	2
	push	esi
	mov	esi, ecx

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi], 0
$LN11@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+4], 0
	pop	esi

; 225  :     }

	ret	0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx

; 161  : 		return m_nSize;

	mov	eax, DWORD PTR [ecx+4]

; 162  : 	}

	ret	0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 310  : {

	npad	2
	push	esi
	mov	esi, ecx

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@CSimpleArr

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi], 0
$LN13@CSimpleArr:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+4], 0
	pop	esi

; 311  : 	RemoveAll();
; 312  : }

	ret	0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

	mov	DWORD PTR [ecx], 0

; 121  : 	}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??1_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
	ret	0
??1_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??0_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
	xorps	xmm0, xmm0
	mov	eax, ecx

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movups	XMMWORD PTR [ecx+16], xmm0
	movq	QWORD PTR [ecx+32], xmm0
	ret	0
??0_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 316  : 		return m_hInst;

	mov	eax, DWORD PTR [ecx+4]

; 317  : 	}

	ret	0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 180  : 	{

	npad	2

; 181  : 		DeleteCriticalSection(&m_sec);

	push	ecx
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 182  : 		return S_OK;

	xor	eax, eax

; 183  : 	}

	ret	0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Init@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
	push	0
	push	ecx
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN10@Init

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	eax, eax
	jle	SHORT $LN9@Init
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 177  : 	}

	ret	0
$LN10@Init:

; 174  : 		}
; 175  : 
; 176  : 		return hRes;

	xor	eax, eax
$LN9@Init:

; 177  : 	}

	ret	0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx

; 156  : 	}

	ret	0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 149  : 	CComCriticalSection() throw()

	xorps	xmm0, xmm0

; 150  : 	{
; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));
; 152  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm0
	ret	0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
_lpCriticalSection$ = 8					; size = 4
_dwSpinCount$ = 12					; size = 4
_Flags$ = 16						; size = 4
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	DWORD PTR _Flags$[ebp]
	push	DWORD PTR _dwSpinCount$[ebp]
	push	DWORD PTR _lpCriticalSection$[ebp]
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

	pop	ebp
	ret	0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

	npad	2
	push	ebp
	mov	ebp, esp

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

	push	0
	push	0
	push	DWORD PTR _dwExceptionFlags$[ebp]
	push	DWORD PTR _dwExceptionCode$[ebp]
	call	DWORD PTR __imp__RaiseException@16

; 32   : }

	pop	ebp
	ret	0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SK_IVariableListener@@QAE@XZ
_TEXT	SEGMENT
??0SK_IVariableListener@@QAE@XZ PROC			; SK_IVariableListener::SK_IVariableListener, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7SK_IVariableListener@@6B@
	mov	eax, ecx
	ret	0
??0SK_IVariableListener@@QAE@XZ ENDP			; SK_IVariableListener::SK_IVariableListener
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ??1SK_ICommandResult@@QAE@XZ
_TEXT	SEGMENT
??1SK_ICommandResult@@QAE@XZ PROC			; SK_ICommandResult::~SK_ICommandResult, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+76]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN7@SK_IComman
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+56]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN7@SK_IComman:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+72], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+76], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi+56], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+52]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN37@SK_IComman
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+32]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN37@SK_IComman:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+48], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+52], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi+32], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+28]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN67@SK_IComman
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+8]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN67@SK_IComman:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+24], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+28], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi+8], 0
	pop	esi
	ret	0
??1SK_ICommandResult@@QAE@XZ ENDP			; SK_ICommandResult::~SK_ICommandResult
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??0?$tuple@$$V@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$tuple@$$V@std@@QAE@ABV01@@Z PROC			; std::tuple<>::tuple<>, COMDAT
; _this$ = ecx

; 238  : 		{	// copy construct
; 239  : 		}

	mov	eax, ecx
	ret	4
??0?$tuple@$$V@std@@QAE@ABV01@@Z ENDP			; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??0?$tuple@$$V@std@@QAE@XZ
_TEXT	SEGMENT
??0?$tuple@$$V@std@@QAE@XZ PROC				; std::tuple<>::tuple<>, COMDAT
; _this$ = ecx

; 229  : 		{	// default construct
; 230  : 		}

	mov	eax, ecx
	ret	0
??0?$tuple@$$V@std@@QAE@XZ ENDP				; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\console.h
;	COMDAT ?isVisible@SK_Console@@QAE_NXZ
_TEXT	SEGMENT
?isVisible@SK_Console@@QAE_NXZ PROC			; SK_Console::isVisible, COMDAT
; _this$ = ecx

; 69   :   bool isVisible (void) { return visible; }

	mov	al, BYTE PTR [ecx+4356]
	ret	0
?isVisible@SK_Console@@QAE_NXZ ENDP			; SK_Console::isVisible
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@c_str

; 3003 : 		return (this->_Myptr());

	mov	eax, DWORD PTR [ecx]

; 3004 : 		}

	ret	0
$LN13@c_str:

; 3003 : 		return (this->_Myptr());

	mov	eax, ecx

; 3004 : 		}

	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1834 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1835 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1691 : 		}

	ret	0
$LN11@Myptr:

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1691 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 8
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
$LN3@Myptr:

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 96   : 	{	// deallocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 97   :  #if defined(_M_IX86) || defined(_M_X64)
; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	mov	ecx, DWORD PTR __Count$[ebp]
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	ecx, eax
	jbe	SHORT $LN2@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 99   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	al, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jb	SHORT $LN5@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jae	SHORT $LN6@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN9@Deallocate:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN3@Deallocate:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 	}

	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 50   : 	{	// allocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 51   : 	void *_Ptr = 0;
; 52   : 
; 53   : 	if (_Count == 0)

	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate

; 54   : 		return (_Ptr);

	xor	eax, eax
$LN1@Allocate:

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN2@Allocate:

; 55   : 
; 56   : 	// check overflow of multiply
; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN3@Allocate

; 58   : 		_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	BYTE PTR __Try_aligned_allocation$[ebp], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	eax, DWORD PTR [ecx+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	eax, ecx
	ja	SHORT $LN6@Allocate

; 69   : 			_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN7@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN4@Allocate:

; 76   : 
; 77   :  #ifdef _DEBUG
; 78   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 79   :  #endif /* _DEBUG */
; 80   : 		}
; 81   : 	else
; 82   :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 83   : 	static_cast<void>(_Try_aligned_allocation);
; 84   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 85   : 
; 86   : 		{	// allocate normal block
; 87   : 		_Ptr = ::operator new(_User_size);

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN1@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
;	COMDAT ?max@?$numeric_limits@J@std@@SAJXZ
_TEXT	SEGMENT
?max@?$numeric_limits@J@std@@SAJXZ PROC			; std::numeric_limits<long>::max, COMDAT

; 799  : 		return (LONG_MAX);

	mov	eax, 2147483647				; 7fffffffH

; 800  : 		}

	ret	0
?max@?$numeric_limits@J@std@@SAJXZ ENDP			; std::numeric_limits<long>::max
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
;	COMDAT ?min@?$numeric_limits@J@std@@SAJXZ
_TEXT	SEGMENT
?min@?$numeric_limits@J@std@@SAJXZ PROC			; std::numeric_limits<long>::min, COMDAT

; 794  : 		return (LONG_MIN);

	mov	eax, -2147483648			; 80000000H

; 795  : 		}

	ret	0
?min@?$numeric_limits@J@std@@SAJXZ ENDP			; std::numeric_limits<long>::min
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ
_TEXT	SEGMENT
?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ PROC ; std::_Iterator_base0::_Getcont, COMDAT
; _this$ = ecx

; 79   : 		return (0);

	xor	eax, eax

; 80   : 		}

	ret	0
?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ ENDP ; std::_Iterator_base0::_Getcont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 75   : 		}

	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 64   : 		}

	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 516  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 517  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [eax], cl

; 518  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 325  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 326  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cx, WORD PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	WORD PTR [eax], cx

; 327  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 98   :         return;
; 99   :     }

	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 91   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 94   :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ?_Hash_seq@std@@YAIPBEI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
?_Hash_seq@std@@YAIPBEI@Z PROC				; std::_Hash_seq, COMDAT

; 331  : 	{	// FNV-1a hash function for bytes in [_First, _First + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 332  :  #if defined(_WIN64)
; 333  : 	static_assert(sizeof(size_t) == 8, "This code is for 64-bit size_t.");
; 334  : 	const size_t _FNV_offset_basis = 14695981039346656037ULL;
; 335  : 	const size_t _FNV_prime = 1099511628211ULL;
; 336  : 
; 337  :  #else /* defined(_WIN64) */
; 338  : 	static_assert(sizeof(size_t) == 4, "This code is for 32-bit size_t.");
; 339  : 	const size_t _FNV_offset_basis = 2166136261U;
; 340  : 	const size_t _FNV_prime = 16777619U;
; 341  :  #endif /* defined(_WIN64) */
; 342  : 
; 343  : 	size_t _Val = _FNV_offset_basis;
; 344  : 	for (size_t _Next = 0; _Next < _Count; ++_Next)

	mov	esi, DWORD PTR __Count$[ebp]
	xor	ecx, ecx
	mov	edx, -2128831035			; 811c9dc5H
	test	esi, esi
	je	SHORT $LN12@Hash_seq
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
$LL8@Hash_seq:

; 345  : 		{	// fold in another byte
; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [ecx+edi]
	inc	ecx
	xor	eax, edx

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	cmp	ecx, esi
	jb	SHORT $LL8@Hash_seq
	pop	edi
$LN12@Hash_seq:

; 348  : 		}
; 349  : 	return (_Val);

	mov	eax, edx
	pop	esi

; 350  : 	}

	pop	ebp
	ret	0
?_Hash_seq@std@@YAIPBEI@Z ENDP				; std::_Hash_seq
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 8
_proc_id$ = 8						; size = 4
?SK_FindRootWindow@@YA?AUwindow_t@@K@Z PROC		; SK_FindRootWindow

; 1180 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1181 :   window_t win;
; 1182 : 
; 1183 :   win.proc_id  = proc_id;

	mov	eax, DWORD PTR _proc_id$[ebp]
	mov	DWORD PTR _win$[ebp], eax

; 1184 :   win.root     = nullptr;
; 1185 : 
; 1186 :   EnumWindows (SK_EnumWindows, (LPARAM)&win);

	lea	eax, DWORD PTR _win$[ebp]
	push	eax
	push	OFFSET ?SK_EnumWindows@@YGHPAUHWND__@@J@Z ; SK_EnumWindows
	mov	DWORD PTR _win$[ebp+4], 0
	call	DWORD PTR __imp__EnumWindows@8

; 1187 : 
; 1188 :   return win;

	mov	eax, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR _win$[ebp+4]

; 1189 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_FindRootWindow@@YA?AUwindow_t@@K@Z ENDP		; SK_FindRootWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0sk_window_s@@QAE@XZ
_TEXT	SEGMENT
??0sk_window_s@@QAE@XZ PROC				; sk_window_s::sk_window_s, COMDAT
; _this$ = ecx
	mov	BYTE PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
	mov	WORD PTR [ecx+16], 256			; 00000100H
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 640			; 00000280H
	mov	DWORD PTR [ecx+32], 480			; 000001e0H
	mov	DWORD PTR [ecx+36], 0
	mov	DWORD PTR [ecx+40], 0
	mov	DWORD PTR [ecx+44], 640			; 00000280H
	mov	DWORD PTR [ecx+48], 480			; 000001e0H
	mov	DWORD PTR [ecx+52], 0
	mov	DWORD PTR [ecx+56], 0
	mov	DWORD PTR [ecx+60], 640			; 00000280H
	mov	DWORD PTR [ecx+64], 480			; 000001e0H
	mov	DWORD PTR [ecx+68], 282001408		; 10cf0000H
	mov	DWORD PTR [ecx+72], 262400		; 00040100H
	mov	DWORD PTR [ecx+76], 640			; 00000280H
	mov	DWORD PTR [ecx+80], 480			; 000001e0H
	mov	DWORD PTR [ecx+84], 0
	mov	DWORD PTR [ecx+88], 0
	mov	DWORD PTR [ecx+92], 640			; 00000280H
	mov	DWORD PTR [ecx+96], 480			; 000001e0H
	mov	DWORD PTR [ecx+100], 0
	mov	DWORD PTR [ecx+104], 0
	mov	DWORD PTR [ecx+108], 640		; 00000280H
	mov	DWORD PTR [ecx+112], 480		; 000001e0H
	mov	DWORD PTR [ecx+116], 282001408		; 10cf0000H
	mov	DWORD PTR [ecx+120], 262400		; 00040100H
	mov	DWORD PTR [ecx+124], 382664704		; 16cf0000H
	mov	DWORD PTR [ecx+128], 262400		; 00040100H
	mov	BYTE PTR [ecx+132], 1
	mov	DWORD PTR [ecx+136], 1065353216		; 3f800000H
	mov	DWORD PTR [ecx+140], 1065353216		; 3f800000H
	mov	DWORD PTR [ecx+144], 0
	mov	DWORD PTR [ecx+148], 0
	mov	DWORD PTR [ecx+152], 640		; 00000280H
	mov	DWORD PTR [ecx+156], 480		; 000001e0H
	mov	DWORD PTR [ecx+160], 640		; 00000280H
	mov	DWORD PTR [ecx+164], 480		; 000001e0H
	mov	DWORD PTR [ecx+168], -2147483648	; 80000000H
	mov	DWORD PTR [ecx+172], -2147483648	; 80000000H
	mov	DWORD PTR [ecx+176], 2147483647		; 7fffffffH
	mov	DWORD PTR [ecx+180], 2147483647		; 7fffffffH
	mov	DWORD PTR [ecx+184], 0
	mov	DWORD PTR [ecx+188], 0
	mov	BYTE PTR [ecx+192], 1
	mov	DWORD PTR [ecx+196], 0
	mov	DWORD PTR [ecx+200], 0
	mov	DWORD PTR [ecx+204], 0
	mov	DWORD PTR [ecx+208], 0
	mov	DWORD PTR [ecx+212], 0
	mov	DWORD PTR [ecx+216], 0
	mov	BYTE PTR [ecx+220], 0
	ret	0
??0sk_window_s@@QAE@XZ ENDP				; sk_window_s::sk_window_s
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd_$ = 8						; size = 4
_Msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?CallProc@sk_window_s@@QAEJPAUHWND__@@IIJ@Z PROC	; sk_window_s::CallProc
; _this$ = ecx

; 5962 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 5963 :   if (hooked)

	cmp	BYTE PTR [ecx+220], 0
	je	SHORT $LN2@CallProc

; 5964 :     return CallWindowProc (WndProc_Original, hWnd_, Msg, wParam, lParam);

	push	DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR [ecx+216]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _Msg$[ebp]
	push	DWORD PTR _hWnd_$[ebp]
	push	DWORD PTR [ecx+8]
	call	eax

; 5967 : }

	pop	ebp
	ret	16					; 00000010H
$LN2@CallProc:

; 5965 :   else
; 5966 :     return WndProc_Original (hWnd_, Msg, wParam, lParam);

	mov	eax, DWORD PTR [ecx+8]

; 5967 : }

	pop	ebp

; 5965 :   else
; 5966 :     return WndProc_Original (hWnd_, Msg, wParam, lParam);

	jmp	eax
?CallProc@sk_window_s@@QAEJPAUHWND__@@IIJ@Z ENDP	; sk_window_s::CallProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_Msg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?DefProc@sk_window_s@@QAEJIIJ@Z PROC			; sk_window_s::DefProc
; _this$ = ecx

; 5952 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 5953 :   return DefWindowProc (hWnd, Msg, wParam, lParam);

	push	DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR [ecx+212]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _Msg$[ebp]
	push	DWORD PTR [ecx+4]
	call	eax

; 5954 : }

	pop	ebp
	ret	12					; 0000000cH
?DefProc@sk_window_s@@QAEJIIJ@Z ENDP			; sk_window_s::DefProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_mi$1 = -44						; size = 40
_resized$1$ = -1					; size = 1
?updateDims@sk_window_s@@QAEXXZ PROC			; sk_window_s::updateDims
; _this$ = ecx

; 5885 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH

; 5886 :   if (config.window.borderless && config.window.fullscreen)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	push	ebx
	push	esi
	push	edi
	mov	esi, ecx
	je	SHORT $LN2@updateDims
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN2@updateDims

; 5887 :   {
; 5888 :     HMONITOR hMonitor =
; 5889 :     MonitorFromWindow ( hWnd,

	push	2
	push	DWORD PTR [esi+4]
	call	DWORD PTR __imp__MonitorFromWindow@8

; 5890 :                           MONITOR_DEFAULTTONEAREST );
; 5891 : 
; 5892 :     MONITORINFO mi = { 0 };
; 5893 :     mi.cbSize      = sizeof (mi);
; 5894 : 
; 5895 :     GetMonitorInfo (hMonitor, &mi);

	lea	ecx, DWORD PTR _mi$1[ebp]
	mov	DWORD PTR _mi$1[ebp+36], 0
	xorps	xmm0, xmm0
	mov	DWORD PTR _mi$1[ebp], 40		; 00000028H
	push	ecx
	push	eax
	movups	XMMWORD PTR _mi$1[ebp+4], xmm0
	movups	XMMWORD PTR _mi$1[ebp+20], xmm0
	call	DWORD PTR __imp__GetMonitorInfoW@8

; 5896 : 
; 5897 :     actual.window = mi.rcMonitor;

	movups	xmm0, XMMWORD PTR _mi$1[ebp+4]

; 5898 : 
; 5899 :     actual.client.left   = 0;

	mov	DWORD PTR [esi+84], 0

; 5900 :     actual.client.right  = actual.window.right - actual.window.left;
; 5901 :     actual.client.top    = 0;

	mov	DWORD PTR [esi+88], 0
	movups	XMMWORD PTR [esi+100], xmm0
	mov	eax, DWORD PTR [esi+108]
	sub	eax, DWORD PTR [esi+100]
	mov	DWORD PTR [esi+92], eax

; 5902 :     actual.client.bottom = actual.window.bottom - actual.window.top;

	mov	eax, DWORD PTR [esi+112]
	sub	eax, DWORD PTR [esi+104]
	mov	DWORD PTR [esi+96], eax
$LN2@updateDims:

; 5903 :   }
; 5904 : 
; 5905 :   long game_width   = (game.client.right   - game.client.left);

	mov	edi, DWORD PTR [esi+44]

; 5906 :   long window_width = (actual.client.right - actual.client.left);

	mov	ebx, DWORD PTR [esi+92]

; 5907 : 
; 5908 :   long game_height   = (game.client.bottom   - game.client.top);

	mov	ecx, DWORD PTR [esi+48]

; 5909 :   long window_height = (actual.client.bottom - actual.client.top);

	mov	edx, DWORD PTR [esi+96]
	sub	edi, DWORD PTR [esi+36]
	sub	ebx, DWORD PTR [esi+84]
	sub	ecx, DWORD PTR [esi+40]
	sub	edx, DWORD PTR [esi+88]

; 5910 : 
; 5911 :   bool resized =
; 5912 :     (game_width != window_width || game_height != window_height);

	cmp	edi, ebx
	jne	SHORT $LN7@updateDims
	mov	BYTE PTR _resized$1$[ebp], 0
	cmp	ecx, edx
	je	SHORT $LN8@updateDims
$LN7@updateDims:
	mov	BYTE PTR _resized$1$[ebp], 1
$LN8@updateDims:

; 5913 : 
; 5914 :   bool moved =
; 5915 :     ( game.window.left != actual.window.left ||

	mov	eax, DWORD PTR [esi+52]
	cmp	eax, DWORD PTR [esi+100]
	jne	SHORT $LN9@updateDims
	mov	eax, DWORD PTR [esi+56]
	cmp	eax, DWORD PTR [esi+104]
	jne	SHORT $LN9@updateDims
	xor	al, al
	jmp	SHORT $LN10@updateDims
$LN9@updateDims:
	mov	al, 1
$LN10@updateDims:

; 5916 :       game.window.top  != actual.window.top );
; 5917 : 
; 5918 :   if (resized || moved) {

	cmp	BYTE PTR _resized$1$[ebp], 0
	jne	SHORT $LN5@updateDims
	test	al, al
	jne	SHORT $LN5@updateDims

; 5930 :       (float)(actual.window.top + actual.client.top) -
; 5931 :       (float)(game.window.top   + game.client.top);
; 5932 :   }
; 5933 : 
; 5934 :   else {
; 5935 :     coord_remap.identical = true;

	pop	edi
	mov	BYTE PTR [esi+132], 1

; 5936 : 
; 5937 :     coord_remap.offset.x  = 0.0f;

	mov	DWORD PTR [esi+144], 0

; 5938 :     coord_remap.offset.y  = 0.0f;

	mov	DWORD PTR [esi+148], 0

; 5939 : 
; 5940 :     coord_remap.scale.x   = 0.0f;

	mov	DWORD PTR [esi+136], 0

; 5941 :     coord_remap.scale.y   = 0.0f;

	mov	DWORD PTR [esi+140], 0
	pop	esi
	pop	ebx

; 5942 :   }
; 5943 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@updateDims:
	movd	xmm1, ebx

; 5919 :     coord_remap.identical = false;
; 5920 : 
; 5921 :     coord_remap.scale.x =

	cvtdq2ps xmm1, xmm1

; 5922 :       (float)window_width  / (float)game_width;
; 5923 :     coord_remap.scale.y =
; 5924 :       (float)window_height / (float)game_height;
; 5925 : 
; 5926 :     coord_remap.offset.x =

	mov	eax, DWORD PTR [esi+100]
	add	eax, DWORD PTR [esi+84]
	mov	BYTE PTR [esi+132], 0
	movd	xmm0, edi
	cvtdq2ps xmm0, xmm0
	pop	edi
	divss	xmm1, xmm0
	movd	xmm0, ecx
	movss	DWORD PTR [esi+136], xmm1
	cvtdq2ps xmm0, xmm0
	movd	xmm1, edx
	cvtdq2ps xmm1, xmm1
	divss	xmm1, xmm0
	movss	DWORD PTR [esi+140], xmm1
	movd	xmm1, eax
	mov	eax, DWORD PTR [esi+52]
	add	eax, DWORD PTR [esi+36]
	cvtdq2ps xmm1, xmm1
	movd	xmm0, eax

; 5927 :       (float)(actual.window.left + actual.client.left) -
; 5928 :       (float)(game.window.left   + game.client.left);
; 5929 :     coord_remap.offset.y =

	mov	eax, DWORD PTR [esi+104]
	add	eax, DWORD PTR [esi+88]
	cvtdq2ps xmm0, xmm0
	subss	xmm1, xmm0
	movss	DWORD PTR [esi+144], xmm1
	movd	xmm1, eax
	mov	eax, DWORD PTR [esi+56]
	add	eax, DWORD PTR [esi+40]
	cvtdq2ps xmm1, xmm1
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	subss	xmm1, xmm0
	movss	DWORD PTR [esi+148], xmm1
	pop	esi
	pop	ebx

; 5942 :   }
; 5943 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?updateDims@sk_window_s@@QAEXXZ ENDP			; sk_window_s::updateDims
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
?needsCoordTransform@sk_window_s@@QAE_NXZ PROC		; sk_window_s::needsCoordTransform
; _this$ = ecx

; 5871 :   if (! config.window.res.override.fix_mouse)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+780, 0
	jne	SHORT $LN2@needsCoord
$LN5@needsCoord:

; 5872 :     return false;

	xor	al, al

; 5878 :     return false;
; 5879 : 
; 5880 :   return (! coord_remap.identical);
; 5881 : }

	ret	0
$LN2@needsCoord:

; 5873 : 
; 5874 :   bool dynamic_window =
; 5875 :     (config.window.borderless /*&& config.window.fullscreen*/);
; 5876 : 
; 5877 :   if (! dynamic_window)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	SHORT $LN5@needsCoord

; 5878 :     return false;
; 5879 : 
; 5880 :   return (! coord_remap.identical);
; 5881 : }

	cmp	BYTE PTR [ecx+132], 0
	sete	al
	ret	0
?needsCoordTransform@sk_window_s@@QAE_NXZ ENDP		; sk_window_s::needsCoordTransform
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ PROC	; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-coord_remap>, COMDAT
; _this$ = ecx
	mov	BYTE PTR [ecx], 1
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 1065353216		; 3f800000H
	mov	DWORD PTR [ecx+8], 1065353216		; 3f800000H
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+16], 0
	ret	0
??0<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ ENDP	; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-coord_remap>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-offset>@<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-offset>@<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ PROC ; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-offset>::<unnamed-type-offset>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0<unnamed-type-offset>@<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ ENDP ; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-offset>::<unnamed-type-offset>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-scale>@<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-scale>@<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ PROC ; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-scale>::<unnamed-type-scale>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 1065353216		; 3f800000H
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 1065353216		; 3f800000H
	ret	0
??0<unnamed-type-scale>@<unnamed-type-coord_remap>@sk_window_s@@QAE@XZ ENDP ; sk_window_s::<unnamed-type-coord_remap>::<unnamed-type-scale>::<unnamed-type-scale>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-game>@sk_window_s@@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-game>@sk_window_s@@QAE@XZ PROC		; sk_window_s::<unnamed-type-game>::<unnamed-type-game>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 640			; 00000280H
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 480			; 000001e0H
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+16], 640			; 00000280H
	mov	DWORD PTR [ecx+20], 480			; 000001e0H
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 0
	mov	DWORD PTR [ecx+32], 640			; 00000280H
	mov	DWORD PTR [ecx+36], 480			; 000001e0H
	mov	DWORD PTR [ecx+40], 282001408		; 10cf0000H
	mov	DWORD PTR [ecx+44], 262400		; 00040100H
	ret	0
??0<unnamed-type-game>@sk_window_s@@QAE@XZ ENDP		; sk_window_s::<unnamed-type-game>::<unnamed-type-game>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-framebuffer>@<unnamed-type-game>@sk_window_s@@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-framebuffer>@<unnamed-type-game>@sk_window_s@@QAE@XZ PROC ; sk_window_s::<unnamed-type-game>::<unnamed-type-framebuffer>::<unnamed-type-framebuffer>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 640			; 00000280H
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 480			; 000001e0H
	ret	0
??0<unnamed-type-framebuffer>@<unnamed-type-game>@sk_window_s@@QAE@XZ ENDP ; sk_window_s::<unnamed-type-game>::<unnamed-type-framebuffer>::<unnamed-type-framebuffer>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-border>@sk_window_s@@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-border>@sk_window_s@@QAE@XZ PROC	; sk_window_s::<unnamed-type-border>::<unnamed-type-border>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0<unnamed-type-border>@sk_window_s@@QAE@XZ ENDP	; sk_window_s::<unnamed-type-border>::<unnamed-type-border>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
?SK_GetGameWindow@@YGPAUHWND__@@XZ PROC			; SK_GetGameWindow

; 5351 :   ////SK_WINDOW_LOG_CALL3 ();
; 5352 : 
; 5353 :   return game_window.hWnd;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4

; 5354 : }

	ret	0
?SK_GetGameWindow@@YGPAUHWND__@@XZ ENDP			; SK_GetGameWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWndForeground$ = 8					; size = 4
?SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z PROC	; SK_RealizeForegroundWindow

; 3319 : {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?nest_lvl@?1??SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z@4JC
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 3322 :   while (ReadAcquire (&nest_lvl))

	test	eax, eax
	je	SHORT $LN3@SK_Realize
	push	esi
	mov	esi, DWORD PTR __imp__MsgWaitForMultipleObjectsEx@20
$LL2@SK_Realize:

; 3323 :     MsgWaitForMultipleObjectsEx (0, nullptr, 125, QS_ALLINPUT, MWMO_ALERTABLE);

	push	2
	push	1279					; 000004ffH
	push	125					; 0000007dH
	push	0
	push	0
	call	esi
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?nest_lvl@?1??SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z@4JC
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 3322 :   while (ReadAcquire (&nest_lvl))

	test	eax, eax
	jne	SHORT $LL2@SK_Realize
	pop	esi
$LN3@SK_Realize:

; 3324 : 
; 3325 :   InterlockedIncrementAcquire (&nest_lvl);

	lock	 inc	 DWORD PTR ?nest_lvl@?1??SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z@4JC

; 3326 : 
; 3327 :   CreateThread (

	push	0
	push	0
	push	DWORD PTR _hWndForeground$[ebp]
	push	OFFSET ?<lambda_invoker_stdcall>@<lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>@@CGKPAX@Z ; <lambda_9f5df0c8a1d89b8b0ae29fd3c4e96afa>::<lambda_invoker_stdcall>
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24

; 3328 :     nullptr,
; 3329 :       0,
; 3330 :         [](LPVOID user)->
; 3331 : 
; 3332 :         DWORD
; 3333 :         {
; 3334 :           BringWindowToTop    (static_cast <HWND> (user));
; 3335 :           SetForegroundWindow (static_cast <HWND> (user));
; 3336 :           SetActiveWindow     (static_cast <HWND> (user));
; 3337 :           SetFocus            (static_cast <HWND> (user));
; 3338 : 
; 3339 :           CloseHandle (GetCurrentThread ());
; 3340 : 
; 3341 :           return 0;
; 3342 :         },
; 3343 : 
; 3344 :         static_cast <LPVOID> (hWndForeground),
; 3345 :       0x00,
; 3346 :     nullptr
; 3347 :   );
; 3348 : 
; 3349 :   InterlockedDecrementRelease (&nest_lvl);

	lock	 dec	 DWORD PTR ?nest_lvl@?1??SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z@4JC

; 3350 : 
; 3351 :   return 0UL;

	xor	eax, eax

; 3352 : }

	pop	ebp
	ret	4
?SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z ENDP	; SK_RealizeForegroundWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
?SK_GetGameRect@@YAPAUtagRECT@@XZ PROC			; SK_GetGameRect

; 1237 :   return &game_window.game.client;

	mov	eax, OFFSET ?game_window@@3Usk_window_s@@A+36

; 1238 : }

	ret	0
?SK_GetGameRect@@YAPAUtagRECT@@XZ ENDP			; SK_GetGameRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?SK_GetSystemMetrics@@YGHH@Z PROC			; SK_GetSystemMetrics

; 2932 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2933 :   SK_LOG_FIRST_CALL

	cmp	BYTE PTR ?called@?2??SK_GetSystemMetrics@@YGHH@Z@4_NA, 0
	jne	SHORT $LN2@SK_GetSyst
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 0
	jl	SHORT $LN3@SK_GetSyst
	push	OFFSET $SG212493
	push	OFFSET $SG212494
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN3@SK_GetSyst:
	mov	BYTE PTR ?called@?2??SK_GetSystemMetrics@@YGHH@Z@4_NA, 1
$LN2@SK_GetSyst:

; 2936 : }

	pop	ebp

; 2934 : 
; 2935 :   return GetSystemMetrics_Original (nIndex);

	jmp	DWORD PTR ?GetSystemMetrics_Original@@3P6GHH@ZA ; GetSystemMetrics_Original
?SK_GetSystemMetrics@@YGHH@Z ENDP			; SK_GetSystemMetrics
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_y$ = 8							; size = 4
?SK_SetWindowResY@@YAXJ@Z PROC				; SK_SetWindowResY

; 1229 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1230 :   //game_window.game.client.bottom = game_window.game.client.top + y;
; 1231 :   game_window.render_y = y;

	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+156, eax

; 1232 : }

	pop	ebp
	ret	0
?SK_SetWindowResY@@YAXJ@Z ENDP				; SK_SetWindowResY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
?SK_SetWindowResX@@YAXJ@Z PROC				; SK_SetWindowResX

; 1222 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1223 :   //game_window.game.client.right = game_window.game.client.left + x;
; 1224 :   game_window.render_x = x;

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+152, eax

; 1225 : }

	pop	ebp
	ret	0
?SK_SetWindowResX@@YAXJ@Z ENDP				; SK_SetWindowResX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_remember_pos$ = 8					; size = 4
?SK_CenterWindowAtMouse@@YAXH@Z PROC			; SK_CenterWindowAtMouse

; 1425 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1426 :   // This is too much trouble to bother with...
; 1427 :   if (config.window.center || (config.window.borderless && config.window.fullscreen))

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+746, 0
	jne	SHORT $LN3@SK_CenterW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	je	SHORT $LN2@SK_CenterW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	jne	SHORT $LN3@SK_CenterW
$LN2@SK_CenterW:

; 1428 :     return;
; 1429 : 
; 1430 :   static CRITICAL_SECTION cs_center;
; 1431 :   static bool             init = false;
; 1432 : 
; 1433 :   if (! init)

	cmp	BYTE PTR ?init@?1??SK_CenterWindowAtMouse@@YAXH@Z@4_NA, 0
	jne	SHORT $LN4@SK_CenterW

; 1434 :   {
; 1435 :     InitializeCriticalSection (&cs_center);

	push	OFFSET ?cs_center@?1??SK_CenterWindowAtMouse@@YAXH@Z@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__InitializeCriticalSection@4

; 1436 :     init = true;

	mov	BYTE PTR ?init@?1??SK_CenterWindowAtMouse@@YAXH@Z@4_NA, 1
$LN4@SK_CenterW:

; 1437 :   }
; 1438 : 
; 1439 :   CreateThread ( nullptr, 0,

	push	0
	push	0
	push	DWORD PTR _remember_pos$[ebp]
	push	OFFSET ?<lambda_invoker_stdcall>@<lambda_6ddf3f278265021f7f193928a74e47d8>@@CGKPAX@Z ; <lambda_6ddf3f278265021f7f193928a74e47d8>::<lambda_invoker_stdcall>
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
$LN3@SK_CenterW:

; 1440 :     [](LPVOID user) ->
; 1441 :       DWORD {
; 1442 :   EnterCriticalSection (&cs_center);
; 1443 : 
; 1444 :   BOOL  remember_pos = (user != nullptr);
; 1445 :   POINT mouse        = { 0, 0 };
; 1446 : 
; 1447 :   if (GetCursorPos_Original != nullptr)
; 1448 :     GetCursorPos_Original (&mouse);
; 1449 : 
; 1450 :   struct {
; 1451 :     struct {
; 1452 :       float percent  = 0.0f;
; 1453 :       int   absolute =   0L;
; 1454 :     } x,y;
; 1455 :   } offsets;
; 1456 : 
; 1457 :   if (! remember_pos)
; 1458 :   {
; 1459 :     offsets.x.absolute = config.window.offset.x.absolute;
; 1460 :     offsets.y.absolute = config.window.offset.y.absolute;
; 1461 : 
; 1462 :     offsets.x.percent = config.window.offset.x.percent;
; 1463 :     offsets.y.percent = config.window.offset.y.percent;
; 1464 :   }
; 1465 : 
; 1466 :   config.window.offset.x.absolute = mouse.x;
; 1467 :   config.window.offset.y.absolute = mouse.y;
; 1468 : 
; 1469 :   config.window.offset.x.absolute -= (game_window.actual.window.right  - game_window.actual.window.left) / 2;
; 1470 :   config.window.offset.y.absolute -= (game_window.actual.window.bottom - game_window.actual.window.top)  / 2;
; 1471 : 
; 1472 :   if (config.window.offset.x.absolute <= 0)
; 1473 :     config.window.offset.x.absolute = 1;  // 1 = Flush with Left
; 1474 : 
; 1475 :   if (config.window.offset.y.absolute <= 0)
; 1476 :     config.window.offset.y.absolute = 1;  // 1 = Flush with Top
; 1477 : 
; 1478 :   config.window.offset.x.percent = 0.0f;
; 1479 :   config.window.offset.y.percent = 0.0f;
; 1480 : 
; 1481 :   SK_AdjustWindow ();
; 1482 : 
; 1483 :   if (! remember_pos)
; 1484 :   {
; 1485 :     config.window.offset.x.absolute = offsets.x.absolute;
; 1486 :     config.window.offset.y.absolute = offsets.y.absolute;
; 1487 : 
; 1488 :     config.window.offset.x.percent  = offsets.x.percent;
; 1489 :     config.window.offset.y.percent  = offsets.y.percent;
; 1490 :   }
; 1491 : 
; 1492 :   LeaveCriticalSection (&cs_center);
; 1493 : 
; 1494 :   CloseHandle (GetCurrentThread ());
; 1495 : 
; 1496 :   return 0;
; 1497 :        // Don't dereference this, it's actually a boolean
; 1498 :     }, reinterpret_cast <LPVOID> (static_cast <uintptr_t> (remember_pos)), 0x0, nullptr );
; 1499 : }

	pop	ebp
	ret	0
?SK_CenterWindowAtMouse@@YAXH@Z ENDP			; SK_CenterWindowAtMouse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_szSymbol$1 = -1112					; size = 1024
$T2 = -88						; size = 16
$T3 = -72						; size = 24
_orig_client$ = -48					; size = 16
_new_window$ = -32					; size = 16
_origin$ = -12						; size = 8
_has_border$1$ = -1					; size = 1
__$ReturnAddr$ = 4					; size = 4
?SK_AdjustBorder@@YAXXZ PROC				; SK_AdjustBorder

; 2361 : {

	npad	2
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 1120				; 00000460H

; 2362 :   SK_WINDOW_LOG_CALL3 ();

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 3
	jl	$LN35@SK_AdjustB
	push	1024					; 00000400H
	lea	eax, DWORD PTR _szSymbol$1[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR _szSymbol$1[ebp]
	push	1024					; 00000400H
	push	eax
	mov	eax, DWORD PTR __$ReturnAddr$[ebx]
	push	eax
	mov	eax, DWORD PTR __$ReturnAddr$[ebx]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	push	eax
	call	?SK_GetSymbolNameFromModuleAddr@@YAKPAUHINSTANCE__@@IPADK@Z ; SK_GetSymbolNameFromModuleAddr
	mov	eax, DWORD PTR __$ReturnAddr$[ebx]
	add	esp, 16					; 00000010H
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?SK_SummarizeCaller@@YG?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAX@Z ; SK_SummarizeCaller
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN26@SK_AdjustB
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN26@SK_AdjustB:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2362 :   SK_WINDOW_LOG_CALL3 ();

	push	eax
	push	OFFSET $SG212227
	push	OFFSET $SG212228
	push	OFFSET $SG212229
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T3[ebp+20]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2362 :   SK_WINDOW_LOG_CALL3 ();

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN35@SK_AdjustB
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T3[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN35@SK_AdjustB:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2364 :   if (game_window.GetWindowLongPtr == nullptr)

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+200
	test	eax, eax
	je	$LN1@SK_AdjustB

; 2365 :     return;
; 2366 : 
; 2367 :   game_window.actual.style    = game_window.GetWindowLongPtr ( game_window.hWnd, GWL_STYLE   );

	push	-16					; fffffff0H
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	eax

; 2368 :   game_window.actual.style_ex = game_window.GetWindowLongPtr ( game_window.hWnd, GWL_EXSTYLE );

	push	-20					; ffffffecH
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, eax
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+200
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 204  :     return (  ( style == 0x0            ) ||

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+116
	test	eax, eax
	je	SHORT $LN63@SK_AdjustB
	test	eax, 12845056				; 00c40000H
	jne	SHORT $LN63@SK_AdjustB
	xor	al, al
	jmp	SHORT $LN65@SK_AdjustB
$LN63@SK_AdjustB:
	mov	al, 1
$LN65@SK_AdjustB:

; 2369 : 
; 2370 :   bool has_border =
; 2371 :     SK_WindowManager::StyleHasBorder (
; 2372 :       game_window.actual.style
; 2373 :   );
; 2374 : 
; 2375 :   // If these are opposite, we can skip a whole bunch of
; 2376 :   //   pointless work!
; 2377 :   if (has_border != config.window.borderless)

	mov	cl, BYTE PTR ?config@@3Usk_config_t@@A+744

; 204  :     return (  ( style == 0x0            ) ||

	mov	BYTE PTR _has_border$1$[ebp], al

; 2369 : 
; 2370 :   bool has_border =
; 2371 :     SK_WindowManager::StyleHasBorder (
; 2372 :       game_window.actual.style
; 2373 :   );
; 2374 : 
; 2375 :   // If these are opposite, we can skip a whole bunch of
; 2376 :   //   pointless work!
; 2377 :   if (has_border != config.window.borderless)

	cmp	al, cl
	jne	$LN1@SK_AdjustB

; 2378 :     return;
; 2379 : 
; 2380 :   game_window.actual.style =

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+124
	test	cl, cl
	mov	edx, -1878392832			; 900a0000H
	xorps	xmm0, xmm0
	cmovne	eax, edx

; 2381 :     config.window.borderless ?
; 2382 :       SK_BORDERLESS :
; 2383 :         game_window.border_style;
; 2384 : 
; 2385 :   game_window.actual.style_ex =
; 2386 :     config.window.borderless ?
; 2387 :       SK_BORDERLESS_EX :
; 2388 :         game_window.border_style_ex;
; 2389 : 
; 2390 :   RECT orig_client =

	movaps	XMMWORD PTR _orig_client$[ebp], xmm0
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, eax
	mov	edx, 262144				; 00040000H
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+128
	cmovne	eax, edx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 2391 :     { };
; 2392 : 
; 2393 :   GetClientRect_Original (game_window.hWnd, &orig_client);

	lea	eax, DWORD PTR _orig_client$[ebp]
	push	eax
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 2394 : 
; 2395 :   RECT new_client =
; 2396 :     SK_ComputeClientSize ();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?SK_ComputeClientSize@@YA?AUtagRECT@@XZ	; SK_ComputeClientSize
	add	esp, 4
	movups	xmm0, XMMWORD PTR [eax]

; 2397 : 
; 2398 :   RECT  new_window = new_client;
; 2399 :   POINT origin     { new_client.left, new_client.top };//SK_ComputeClientOrigin ();
; 2400 : 
; 2401 :   ClientToScreen (game_window.hWnd, &origin);

	lea	eax, DWORD PTR _origin$[ebp]
	push	eax
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	movaps	XMMWORD PTR _new_window$[ebp], xmm0
	movd	DWORD PTR _origin$[ebp], xmm0
	psrldq	xmm0, 4
	movd	DWORD PTR _origin$[ebp+4], xmm0
	call	DWORD PTR __imp__ClientToScreen@8

; 2402 : 
; 2403 :   SK_SetWindowStyle   ( game_window.actual.style    );

	push	0
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+116
	call	?SK_SetWindowStyle@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyle

; 2404 :   SK_SetWindowStyleEx ( game_window.actual.style_ex );

	push	0
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+120
	call	?SK_SetWindowStyleEx@@YAXKP6GJPAUHWND__@@HJ@Z@Z ; SK_SetWindowStyleEx
	add	esp, 16					; 00000010H

; 2405 : 
; 2406 :   if ( AdjustWindowRectEx_Original ( &new_window,

	lea	eax, DWORD PTR _new_window$[ebp]
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+120
	push	0
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+116
	push	eax
	call	DWORD PTR ?AdjustWindowRectEx_Original@@3P6GHPAUtagRECT@@KHK@ZA ; AdjustWindowRectEx_Original
	test	eax, eax
	je	SHORT $LN5@SK_AdjustB

; 2407 :                                        static_cast <DWORD>     (game_window.actual.style),
; 2408 :                                          FALSE,
; 2409 :                                            static_cast <DWORD> (game_window.actual.style_ex)
; 2410 :                                    )
; 2411 :      )
; 2412 :   {
; 2413 :     bool had_border = has_border;
; 2414 : 
; 2415 :     int origin_x = had_border ? origin.x + orig_client.left : origin.x;

	cmp	BYTE PTR _has_border$1$[ebp], 0

; 2416 :     int origin_y = had_border ? origin.y + orig_client.top  : origin.y;

	mov	ecx, DWORD PTR _origin$[ebp+4]
	je	SHORT $LN7@SK_AdjustB

; 2407 :                                        static_cast <DWORD>     (game_window.actual.style),
; 2408 :                                          FALSE,
; 2409 :                                            static_cast <DWORD> (game_window.actual.style_ex)
; 2410 :                                    )
; 2411 :      )
; 2412 :   {
; 2413 :     bool had_border = has_border;
; 2414 : 
; 2415 :     int origin_x = had_border ? origin.x + orig_client.left : origin.x;

	mov	edx, DWORD PTR _orig_client$[ebp]
	add	edx, DWORD PTR _origin$[ebp]

; 2416 :     int origin_y = had_border ? origin.y + orig_client.top  : origin.y;

	add	ecx, DWORD PTR _orig_client$[ebp+4]
	jmp	SHORT $LN10@SK_AdjustB
$LN7@SK_AdjustB:

; 2407 :                                        static_cast <DWORD>     (game_window.actual.style),
; 2408 :                                          FALSE,
; 2409 :                                            static_cast <DWORD> (game_window.actual.style_ex)
; 2410 :                                    )
; 2411 :      )
; 2412 :   {
; 2413 :     bool had_border = has_border;
; 2414 : 
; 2415 :     int origin_x = had_border ? origin.x + orig_client.left : origin.x;

	mov	edx, DWORD PTR _origin$[ebp]
$LN10@SK_AdjustB:

; 2417 : 
; 2418 :     SetWindowPos_Original ( game_window.hWnd,

	mov	eax, DWORD PTR _new_window$[ebp+12]
	sub	eax, DWORD PTR _new_window$[ebp+4]
	push	1636					; 00000664H
	push	eax
	mov	eax, DWORD PTR _new_window$[ebp+8]
	sub	eax, DWORD PTR _new_window$[ebp]
	push	eax
	push	ecx
	push	edx
	push	0
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?SetWindowPos_Original@@3P6GHPAUHWND__@@0HHHHI@ZA ; SetWindowPos_Original

; 2419 :                     HWND_TOP,
; 2420 :                       origin_x, origin_y,
; 2421 :                         new_window.right - new_window.left,
; 2422 :                         new_window.bottom - new_window.top,
; 2423 :                           SWP_NOZORDER     | SWP_NOREPOSITION   |
; 2424 :                           SWP_FRAMECHANGED | SWP_NOSENDCHANGING | SWP_SHOWWINDOW  );
; 2425 : 
; 2426 :     GetWindowRect (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__GetWindowRect@8

; 2427 :     GetClientRect (game_window.hWnd, &game_window.actual.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+84
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__GetClientRect@8
$LN5@SK_AdjustB:

; 2428 :   }
; 2429 : 
; 2430 :   game_window.game.window = game_window.actual.window;

	movups	xmm0, XMMWORD PTR ?game_window@@3Usk_window_s@@A+100
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+52, xmm0

; 2431 :   game_window.game.client = game_window.actual.client;

	movups	xmm0, XMMWORD PTR ?game_window@@3Usk_window_s@@A+84
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+36, xmm0
$LN1@SK_AdjustB:

; 2432 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?SK_AdjustBorder@@YAXXZ ENDP				; SK_AdjustBorder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\include\specialk\config.h
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\window.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_szSymbol$1 = -1440					; size = 1024
_wszBorderDesc$2 = -416					; size = 256
$T3 = -160						; size = 24
__Ans$4 = -136						; size = 8
_full_width$1$ = -128					; size = 4
_full_height$1$ = -124					; size = 4
_rb$1$ = -120						; size = 4
_clip$5 = -116						; size = 16
_DescribeRect$ = -97					; size = 1
_mi$ = -96						; size = 40
_render_height_before$1$ = -40				; size = 4
tv1073 = -40						; size = 4
_mon_width$1$ = -36					; size = 4
_mon_height$1$ = -32					; size = 4
_win_width$1$ = -28					; size = 4
_win_height$1$ = -24					; size = 4
_x_offset$1$ = -20					; size = 4
?game_window@@3Usk_window_s@@A$10 = -16			; size = 4
_y_offset$1$ = -12					; size = 4
_real_width$1$ = -12					; size = 4
_DescribeClipRect$6 = -12				; size = 4
?game_window@@3Usk_window_s@@A$2 = -8			; size = 4
_confine$1$ = -1					; size = 1
_has_border$1$ = -1					; size = 1
_nomove$1$ = -1						; size = 1
__$ReturnAddr$ = 4					; size = 4
?SK_AdjustWindow@@YAXXZ PROC				; SK_AdjustWindow

; 2499 : {

	npad	2
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 1448				; 000005a8H

; 2500 :   SK_WINDOW_LOG_CALL3 ();

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 3
	push	esi
	push	edi
	jl	$LN85@SK_AdjustW
	push	1024					; 00000400H
	lea	eax, DWORD PTR _szSymbol$1[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR _szSymbol$1[ebp]
	push	1024					; 00000400H
	push	eax
	mov	eax, DWORD PTR __$ReturnAddr$[ebx]
	push	eax
	mov	eax, DWORD PTR __$ReturnAddr$[ebx]
	push	eax
	call	?SK_GetCallingDLL@@YAPAUHINSTANCE__@@PAX@Z ; SK_GetCallingDLL
	add	esp, 4
	push	eax
	call	?SK_GetSymbolNameFromModuleAddr@@YAKPAUHINSTANCE__@@IPADK@Z ; SK_GetSymbolNameFromModuleAddr
	mov	eax, DWORD PTR __$ReturnAddr$[ebx]
	add	esp, 16					; 00000010H
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?SK_SummarizeCaller@@YG?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAX@Z ; SK_SummarizeCaller
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN75@SK_AdjustW
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN75@SK_AdjustW:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2500 :   SK_WINDOW_LOG_CALL3 ();

	push	eax
	push	OFFSET $SG212406
	push	OFFSET $SG212407
	push	OFFSET $SG212408
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T3[ebp+20]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2500 :   SK_WINDOW_LOG_CALL3 ();

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN85@SK_AdjustW
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T3[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN85@SK_AdjustW:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2502 :   if (game_window.GetWindowLongPtr == nullptr)

	cmp	DWORD PTR ?game_window@@3Usk_window_s@@A+200, 0
	je	$LN48@SK_AdjustW

; 2503 :     return;
; 2504 : 
; 2505 :   if (! game_window.active)

	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A+17, 0
	je	$LN48@SK_AdjustW

; 2506 :     return;
; 2507 : 
; 2508 :   HMONITOR hMonitor =
; 2509 :     MonitorFromWindow ( game_window.hWnd,

	push	2
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR __imp__MonitorFromWindow@8
	xorps	xmm0, xmm0

; 2510 :                           MONITOR_DEFAULTTONEAREST );
; 2511 : 
; 2512 :   MONITORINFO mi   = {         };
; 2513 :   mi.cbSize        = sizeof (mi);
; 2514 :   GetMonitorInfo (hMonitor, &mi);

	lea	ecx, DWORD PTR _mi$[ebp]
	push	ecx
	movaps	XMMWORD PTR _mi$[ebp], xmm0
	push	eax
	movaps	XMMWORD PTR _mi$[ebp+16], xmm0
	movq	QWORD PTR _mi$[ebp+32], xmm0
	mov	DWORD PTR _mi$[ebp], 40			; 00000028H
	call	DWORD PTR __imp__GetMonitorInfoW@8

; 2515 : 
; 2516 :   if (config.window.borderless && config.window.fullscreen)

	mov	al, BYTE PTR ?config@@3Usk_config_t@@A+744
	test	al, al
	je	$LN5@SK_AdjustW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	$LN5@SK_AdjustW

; 2517 :   {
; 2518 :     SK_LOG4 ( (L" > SK_AdjustWindow (Fullscreen)"),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN7@SK_AdjustW
	push	OFFSET $SG212414
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN7@SK_AdjustW:

; 2519 :               L"Window Mgr" );
; 2520 : 
; 2521 :     SetWindowPos_Original ( game_window.hWnd,

	mov	eax, DWORD PTR _mi$[ebp+16]
	mov	edx, DWORD PTR _mi$[ebp+8]
	sub	eax, edx
	mov	ecx, DWORD PTR _mi$[ebp+4]
	push	17988					; 00004644H
	push	eax
	mov	eax, DWORD PTR _mi$[ebp+12]
	sub	eax, ecx
	push	eax
	push	edx
	push	ecx
	push	0
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?SetWindowPos_Original@@3P6GHPAUHWND__@@0HHHHI@ZA ; SetWindowPos_Original

; 2522 :                               HWND_TOP,
; 2523 :                                 mi.rcMonitor.left,
; 2524 :                                 mi.rcMonitor.top,
; 2525 :                                   mi.rcMonitor.right  - mi.rcMonitor.left,
; 2526 :                                   mi.rcMonitor.bottom - mi.rcMonitor.top,
; 2527 :                                     SWP_NOSENDCHANGING | SWP_NOZORDER |
; 2528 :                                     SWP_NOREPOSITION   | SWP_ASYNCWINDOWPOS | SWP_SHOWWINDOW );
; 2529 : 
; 2530 :     SK_LOG1 ( ( L"FULLSCREEN => {Left: %li, Top: %li} - (WxH: %lix%li)",

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 1
	jl	SHORT $LN8@SK_AdjustW
	mov	eax, DWORD PTR _mi$[ebp+16]
	mov	edx, DWORD PTR _mi$[ebp+8]
	sub	eax, edx
	mov	ecx, DWORD PTR _mi$[ebp+4]
	push	eax
	mov	eax, DWORD PTR _mi$[ebp+12]
	sub	eax, ecx
	push	eax
	push	edx
	push	ecx
	push	OFFSET $SG212416
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 24					; 00000018H
$LN8@SK_AdjustW:

; 2531 :                   mi.rcMonitor.left, mi.rcMonitor.top,
; 2532 :                     mi.rcMonitor.right - mi.rcMonitor.left,
; 2533 :                       mi.rcMonitor.bottom - mi.rcMonitor.top ),
; 2534 :                 L"Border Mgr" );
; 2535 : 
; 2536 :     // Must set this or the mouse cursor clip rect will be wrong
; 2537 :     game_window.actual.window = mi.rcMonitor;

	movups	xmm0, XMMWORD PTR _mi$[ebp+4]
	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+100, xmm0

; 2538 :     game_window.actual.client = mi.rcMonitor;

	movups	XMMWORD PTR ?game_window@@3Usk_window_s@@A+84, xmm0

; 2539 :   }
; 2540 : 
; 2541 :   else

	jmp	$LN46@SK_AdjustW
$LN5@SK_AdjustW:

; 2542 :   {
; 2543 :     SK_LOG4 ( (L" > SK_AdjustWindow (Windowed)"),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN9@SK_AdjustW
	push	OFFSET $SG212418
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	mov	al, BYTE PTR ?config@@3Usk_config_t@@A+744
	add	esp, 8
$LN9@SK_AdjustW:

; 2544 :                L"Window Mgr" );
; 2545 : 
; 2546 :     // Adjust the desktop resolution to make room for window decorations
; 2547 :     //   if the game window were maximized.
; 2548 :     if (! config.window.borderless) {

	test	al, al
	jne	SHORT $LN10@SK_AdjustW

; 2549 :       AdjustWindowRect_Original (

	push	0
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+116
	lea	eax, DWORD PTR _mi$[ebp+20]
	push	eax
	call	DWORD PTR ?AdjustWindowRect_Original@@3P6GHPAUtagRECT@@KH@ZA ; AdjustWindowRect_Original
$LN10@SK_AdjustW:

; 2557 :     LONG mon_width     = mi.rcWork.right     - mi.rcWork.left;

	mov	eax, DWORD PTR _mi$[ebp+28]
	sub	eax, DWORD PTR _mi$[ebp+20]

; 2561 :     LONG real_width    = mi.rcMonitor.right  - mi.rcMonitor.left;

	mov	esi, DWORD PTR _mi$[ebp+12]

; 2562 :     LONG real_height   = mi.rcMonitor.bottom - mi.rcMonitor.top;

	mov	edi, DWORD PTR _mi$[ebp+16]
	sub	esi, DWORD PTR _mi$[ebp+4]
	sub	edi, DWORD PTR _mi$[ebp+8]
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	mov	edx, DWORD PTR ?config@@3Usk_config_t@@A+776
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2557 :     LONG mon_width     = mi.rcWork.right     - mi.rcWork.left;

	mov	DWORD PTR _mon_width$1$[ebp], eax

; 2558 :     LONG mon_height    = mi.rcWork.bottom    - mi.rcWork.top;

	mov	eax, DWORD PTR _mi$[ebp+32]
	sub	eax, DWORD PTR _mi$[ebp+24]
	mov	DWORD PTR _mon_height$1$[ebp], eax

; 2563 : 
; 2564 :     // The Game's _Requested_ Client Rectangle
; 2565 :     LONG render_width  = game_window.game.client.right  - game_window.game.client.left;
; 2566 :     LONG render_height = game_window.game.client.bottom - game_window.game.client.top;
; 2567 : 
; 2568 :     // The Game's _Requested_ Window Rectangle (including borders)
; 2569 :     LONG full_width     = game_window.game.window.right  - game_window.game.window.left;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+60
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+52
	mov	DWORD PTR _full_width$1$[ebp], eax

; 2570 :     LONG full_height    = game_window.game.window.bottom - game_window.game.window.top;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+64
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+56
	mov	DWORD PTR _full_height$1$[ebp], eax
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+772
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2561 :     LONG real_width    = mi.rcMonitor.right  - mi.rcMonitor.left;

	mov	DWORD PTR _real_width$1$[ebp], esi
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	test	eax, eax
	jne	SHORT $LN113@SK_AdjustW
	test	edx, edx
	jne	SHORT $LN113@SK_AdjustW
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2579 :       int  render_width_before  = game_window.game.client.right  - game_window.game.client.left;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+48
	mov	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+44

; 2580 :       int  render_height_before = game_window.game.client.bottom - game_window.game.client.top;

	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+40
	sub	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+36

; 2581 : 
; 2582 :       RECT client_before = 
; 2583 :         game_window.game.client;
; 2584 : 
; 2585 :       GetClientRect_Original (game_window.hWnd, &game_window.game.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+36
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR _render_height_before$1$[ebp], eax
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 2586 :       GetWindowRect_Original (game_window.hWnd, &game_window.game.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+52
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 2587 : 
; 2588 :       render_width  = game_window.game.client.right  - game_window.game.client.left;

	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+44

; 2589 :       render_height = game_window.game.client.bottom - game_window.game.client.top;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+48
	sub	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+36
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+40

; 2590 : 
; 2591 :       if ( render_width  != render_width_before  ||

	cmp	ecx, esi
	jne	SHORT $LN14@SK_AdjustW
	cmp	eax, DWORD PTR _render_height_before$1$[ebp]
	jne	SHORT $LN14@SK_AdjustW

; 2575 :       render_height = config.window.res.override.y;

	mov	edx, DWORD PTR ?config@@3Usk_config_t@@A+776
	mov	esi, DWORD PTR _real_width$1$[ebp]
	jmp	SHORT $LN13@SK_AdjustW
$LN14@SK_AdjustW:

; 2592 :            render_height != render_height_before )
; 2593 :       {
; 2594 :         SK_AdjustWindow ();

	call	?SK_AdjustWindow@@YAXXZ			; SK_AdjustWindow

; 2884 : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
$LN113@SK_AdjustW:

; 2571 : 
; 2572 :     if ((! config.window.res.override.isZero ()))
; 2573 :     {
; 2574 :       render_width  = config.window.res.override.x;

	mov	ecx, eax

; 2575 :       render_height = config.window.res.override.y;

	mov	eax, edx
$LN13@SK_AdjustW:

; 2595 :         return;
; 2596 :       }
; 2597 :     }
; 2598 : 
; 2599 :     // No adjustment if the window is full-width
; 2600 :     if (render_width == real_width)

	cmp	ecx, esi
	jne	SHORT $LN15@SK_AdjustW

; 2601 :     {
; 2602 :       mon_width       = real_width;

	mov	DWORD PTR _mon_width$1$[ebp], esi

; 2603 :       mi.rcWork.right = mi.rcMonitor.right;

	mov	esi, DWORD PTR _mi$[ebp+12]
	mov	DWORD PTR _mi$[ebp+28], esi

; 2604 :       mi.rcWork.left  = mi.rcMonitor.left;

	mov	esi, DWORD PTR _mi$[ebp+4]
	mov	DWORD PTR _mi$[ebp+20], esi
$LN15@SK_AdjustW:

; 2605 :     }
; 2606 : 
; 2607 :     // No adjustment if the window is full-height
; 2608 :     if (render_height == real_height)

	cmp	eax, edi
	jne	SHORT $LN16@SK_AdjustW

; 2609 :     {
; 2610 :       mon_height       = real_height;
; 2611 :       mi.rcWork.top    = mi.rcMonitor.top;

	mov	esi, DWORD PTR _mi$[ebp+8]
	mov	DWORD PTR _mi$[ebp+24], esi

; 2612 :       mi.rcWork.bottom = mi.rcMonitor.bottom;

	mov	esi, DWORD PTR _mi$[ebp+16]
	mov	DWORD PTR _mon_height$1$[ebp], edi
	mov	DWORD PTR _mi$[ebp+32], esi
$LN16@SK_AdjustW:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	edi, DWORD PTR _mon_width$1$[ebp]
	cmp	ecx, edi
	cmovl	edi, ecx
	mov	ecx, DWORD PTR _mon_height$1$[ebp]
	cmp	eax, ecx
	mov	DWORD PTR _win_width$1$[ebp], edi
	cmovl	ecx, eax
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 422  :       bool isZero (void) { return x.absolute == 0        && y.absolute == 0        &&

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+748, 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	DWORD PTR _win_height$1$[ebp], ecx
; File c:\users\andon\source\repos\specialk\include\specialk\config.h

; 422  :       bool isZero (void) { return x.absolute == 0        && y.absolute == 0        &&

	jne	SHORT $LN123@SK_AdjustW
	cmp	DWORD PTR ?config@@3Usk_config_t@@A+756, 0
	jne	SHORT $LN123@SK_AdjustW
	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+752
	movss	xmm1, DWORD PTR __real@b727c5ac
	comiss	xmm0, xmm1
	jbe	SHORT $LN123@SK_AdjustW
	movss	xmm2, DWORD PTR __real@3727c5ac
	comiss	xmm2, xmm0
	jbe	SHORT $LN123@SK_AdjustW
	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+760
	comiss	xmm0, xmm1
	jbe	SHORT $LN123@SK_AdjustW
	comiss	xmm2, xmm0
	mov	BYTE PTR _nomove$1$[ebp], 1
	ja	SHORT $LN124@SK_AdjustW
$LN123@SK_AdjustW:
	mov	BYTE PTR _nomove$1$[ebp], 0
$LN124@SK_AdjustW:

; 438  :         bool isZero (void) { return x == 0 && y == 0; };

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+772, 0
	jne	SHORT $LN127@SK_AdjustW
	mov	DWORD PTR tv1073[ebp], 1
	test	edx, edx
	je	SHORT $LN128@SK_AdjustW
$LN127@SK_AdjustW:
	mov	DWORD PTR tv1073[ebp], 0
$LN128@SK_AdjustW:
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2623 :     SK_RenderBackend& rb = SK_GetCurrentRenderBackend ();

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend

; 2624 : 
; 2625 :     // We will offset coordinates later; move the window to the top-left
; 2626 :     //   origin first.
; 2627 :     if (config.window.center && (! ( (config.window.fullscreen &&

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+746, 0
	mov	DWORD PTR _rb$1$[ebp], eax
	je	SHORT $LN17@SK_AdjustW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN19@SK_AdjustW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	jne	SHORT $LN17@SK_AdjustW
$LN19@SK_AdjustW:
	cmp	BYTE PTR [eax+48], 0
	jne	SHORT $LN17@SK_AdjustW

; 2628 :                                       config.window.borderless)  ||
; 2629 :                                       rb.fullscreen_exclusive  ) ) )
; 2630 :     {
; 2631 :       game_window.actual.window.left   = 0;

	xor	ecx, ecx

; 2632 :       game_window.actual.window.top    = 0;
; 2633 :       game_window.actual.window.right  = win_width;

	mov	edx, edi

; 2634 :       game_window.actual.window.bottom = win_height;

	mov	edi, DWORD PTR _win_height$1$[ebp]
	xor	esi, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+108, edx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+112, edi

; 2635 :       nomove                           = false; // Centering requires moving ;)

	mov	BYTE PTR _nomove$1$[ebp], cl

; 2636 :     }
; 2637 : 
; 2638 :     else

	jmp	SHORT $LN171@SK_AdjustW
$LN17@SK_AdjustW:

; 2639 :     {
; 2640 :       game_window.actual.window.left   = game_window.game.window.left;

	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+52

; 2641 :       game_window.actual.window.top    = game_window.game.window.top;

	mov	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+56
	mov	edi, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+108
$LN171@SK_AdjustW:

; 2642 :     }
; 2643 : 
; 2644 :     int x_offset = ( config.window.offset.x.percent != 0.0f ? 

	movss	xmm1, DWORD PTR ?config@@3Usk_config_t@@A+752
	xorps	xmm2, xmm2
	ucomiss	xmm1, xmm2
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$10[ebp], edx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+104, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+100, ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp], ecx
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN57@SK_AdjustW
	mov	eax, DWORD PTR _mi$[ebp+28]
	sub	eax, DWORD PTR _mi$[ebp+20]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm1
	cvttss2si eax, xmm0
	jmp	SHORT $LN172@SK_AdjustW
$LN57@SK_AdjustW:
	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+748
$LN172@SK_AdjustW:

; 2645 :                  (int)( config.window.offset.x.percent *
; 2646 :                          (mi.rcWork.right - mi.rcWork.left) ) :
; 2647 :                        config.window.offset.x.absolute );
; 2648 : 
; 2649 :     int y_offset = ( config.window.offset.y.percent != 0.0f ? 

	movss	xmm1, DWORD PTR ?config@@3Usk_config_t@@A+760
	ucomiss	xmm1, xmm2
	mov	DWORD PTR _x_offset$1$[ebp], eax
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN59@SK_AdjustW
	mov	eax, DWORD PTR _mi$[ebp+32]
	sub	eax, DWORD PTR _mi$[ebp+24]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm1
	cvttss2si eax, xmm0
	jmp	SHORT $LN173@SK_AdjustW
$LN59@SK_AdjustW:
	mov	eax, DWORD PTR ?config@@3Usk_config_t@@A+756
$LN173@SK_AdjustW:

; 2650 :                  (int)( config.window.offset.y.percent *
; 2651 :                          (mi.rcWork.bottom - mi.rcWork.top) ) :
; 2652 :                        config.window.offset.y.absolute );
; 2653 : 
; 2654 :     if (x_offset > 0)

	cmp	DWORD PTR _x_offset$1$[ebp], 0
	mov	DWORD PTR _y_offset$1$[ebp], eax
	jle	SHORT $LN174@SK_AdjustW

; 2655 :       game_window.actual.window.left = mi.rcWork.left  + x_offset - 1;

	mov	edx, DWORD PTR _mi$[ebp+20]
	mov	ecx, DWORD PTR _x_offset$1$[ebp]
	dec	edx
	add	ecx, edx
	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A$10[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp], ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+100, ecx
	jmp	SHORT $LN22@SK_AdjustW
$LN174@SK_AdjustW:

; 2656 :     else if (x_offset < 0)

	jge	SHORT $LN22@SK_AdjustW

; 2657 :       game_window.actual.window.right = mi.rcWork.right + x_offset + 1;

	mov	ecx, DWORD PTR _mi$[ebp+28]
	mov	edx, DWORD PTR _x_offset$1$[ebp]
	inc	ecx
	add	edx, ecx
	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$10[ebp], edx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+108, edx
$LN22@SK_AdjustW:

; 2658 : 
; 2659 : 
; 2660 :     if (y_offset > 0)

	test	eax, eax
	jle	SHORT $LN175@SK_AdjustW

; 2661 :       game_window.actual.window.top    = mi.rcWork.top    + y_offset - 1;

	mov	esi, DWORD PTR _mi$[ebp+24]
	dec	esi
	add	esi, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+104, esi
	jmp	SHORT $LN25@SK_AdjustW
$LN175@SK_AdjustW:

; 2662 :     else if (y_offset < 0)

	jns	SHORT $LN25@SK_AdjustW

; 2663 :       game_window.actual.window.bottom = mi.rcWork.bottom + y_offset + 1;

	mov	edi, DWORD PTR _mi$[ebp+32]
	inc	edi
	add	edi, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+112, edi
$LN25@SK_AdjustW:

; 2664 : 
; 2665 :     if (config.window.center && (! ( (config.window.fullscreen &&

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+746, 0
	je	$LN26@SK_AdjustW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+770, 0
	je	SHORT $LN27@SK_AdjustW
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+744, 0
	jne	$LN26@SK_AdjustW
$LN27@SK_AdjustW:
	mov	ecx, DWORD PTR _rb$1$[ebp]
	cmp	BYTE PTR [ecx+48], 0
	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp]
	jne	$LN26@SK_AdjustW

; 2666 :                                       config.window.borderless)  ||
; 2667 :                                       rb.fullscreen_exclusive  ) ) )
; 2668 :     {
; 2669 :       SK_LOG4 ( ( L"Center --> (%li,%li)",

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 4
	jl	SHORT $LN28@SK_AdjustW
	mov	eax, DWORD PTR _mi$[ebp+32]
	sub	eax, DWORD PTR _mi$[ebp+24]
	push	eax
	mov	eax, DWORD PTR _mi$[ebp+28]
	sub	eax, DWORD PTR _mi$[ebp+20]
	push	eax
	push	OFFSET $SG212438
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+108
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	mov	edi, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	mov	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$10[ebp], eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp], ecx
$LN28@SK_AdjustW:

; 2670 :                     mi.rcWork.right - mi.rcWork.left,
; 2671 :                       mi.rcWork.bottom - mi.rcWork.top ),
; 2672 :                     L"Window Mgr" );
; 2673 : 
; 2674 :       if (x_offset < 0)

	cmp	DWORD PTR _x_offset$1$[ebp], 0
	jge	SHORT $LN29@SK_AdjustW

; 2675 :       {
; 2676 :         game_window.actual.window.left  -= (win_width / 2);

	mov	eax, DWORD PTR _win_width$1$[ebp]
	cdq
	sub	eax, edx

; 2677 :         game_window.actual.window.right -= (win_width / 2);

	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A$10[ebp]
	sar	eax, 1
	sub	ecx, eax
	sub	edx, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp], ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$10[ebp], edx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+108, edx
$LN29@SK_AdjustW:

; 2678 :       }
; 2679 : 
; 2680 :       if (y_offset < 0)

	cmp	DWORD PTR _y_offset$1$[ebp], 0
	jge	SHORT $LN30@SK_AdjustW

; 2681 :       {
; 2682 :         game_window.actual.window.top    -= (win_height / 2);

	mov	eax, DWORD PTR _win_height$1$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	esi, eax

; 2683 :         game_window.actual.window.bottom -= (win_height / 2);

	sub	edi, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+112, edi
$LN30@SK_AdjustW:

; 2686 :       game_window.actual.window.left += std::max (0L, (mon_width  - win_width)  / 2);

	mov	eax, DWORD PTR _mon_width$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	xor	ecx, ecx
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2686 :       game_window.actual.window.left += std::max (0L, (mon_width  - win_width)  / 2);

	sub	eax, DWORD PTR _win_width$1$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	test	eax, eax
	cmovg	ecx, eax
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2686 :       game_window.actual.window.left += std::max (0L, (mon_width  - win_width)  / 2);

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp]
	add	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	xor	ecx, ecx
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2686 :       game_window.actual.window.left += std::max (0L, (mon_width  - win_width)  / 2);

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp], eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+100, eax

; 2687 :       game_window.actual.window.top  += std::max (0L, (mon_height - win_height) / 2);

	mov	eax, DWORD PTR _mon_height$1$[ebp]
	sub	eax, DWORD PTR _win_height$1$[ebp]
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A$10[ebp]
	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	test	eax, eax
	cmovg	ecx, eax
	mov	eax, DWORD PTR _y_offset$1$[ebp]
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2687 :       game_window.actual.window.top  += std::max (0L, (mon_height - win_height) / 2);

	add	esi, ecx
	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A$2[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+104, esi
$LN26@SK_AdjustW:

; 2688 :     }
; 2689 : 
; 2690 : 
; 2691 :     if (x_offset >= 0)

	cmp	DWORD PTR _x_offset$1$[ebp], 0
	jl	SHORT $LN31@SK_AdjustW

; 2692 :       game_window.actual.window.right = game_window.actual.window.left  + win_width;

	mov	edx, DWORD PTR _win_width$1$[ebp]
	add	edx, ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+108, edx

; 2693 :     else

	jmp	SHORT $LN32@SK_AdjustW
$LN31@SK_AdjustW:

; 2694 :       game_window.actual.window.left  = game_window.actual.window.right - win_width;

	mov	ecx, edx
	sub	ecx, DWORD PTR _win_width$1$[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+100, ecx
$LN32@SK_AdjustW:

; 2695 : 
; 2696 : 
; 2697 :     if (y_offset >= 0)

	test	eax, eax
	js	SHORT $LN33@SK_AdjustW

; 2698 :       game_window.actual.window.bottom = game_window.actual.window.top    + win_height;

	mov	edi, DWORD PTR _win_height$1$[ebp]
	add	edi, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+112, edi

; 2699 :     else

	jmp	SHORT $LN34@SK_AdjustW
$LN33@SK_AdjustW:

; 2700 :       game_window.actual.window.top    = game_window.actual.window.bottom - win_height;

	mov	esi, edi
	sub	esi, DWORD PTR _win_height$1$[ebp]
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+104, esi
$LN34@SK_AdjustW:

; 2701 : 
; 2702 : 
; 2703 :     // Adjust the window to fit if it's not fullscreen
; 2704 :     if ( (full_height < mon_height ) ||

	mov	eax, DWORD PTR _full_height$1$[ebp]
	cmp	eax, DWORD PTR _mon_height$1$[ebp]
	jl	SHORT $LN37@SK_AdjustW
	mov	eax, DWORD PTR _full_width$1$[ebp]
	cmp	eax, DWORD PTR _mon_width$1$[ebp]
	jge	$LN35@SK_AdjustW
$LN37@SK_AdjustW:

; 2705 :          (full_width  < mon_width  ) )
; 2706 :     {
; 2707 :       AdjustWindowRect_Original (

	push	0
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+116
	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	call	DWORD PTR ?AdjustWindowRect_Original@@3P6GHPAUtagRECT@@KH@ZA ; AdjustWindowRect_Original

; 2708 :         &game_window.actual.window,
; 2709 :           static_cast <LONG> (game_window.actual.style),
; 2710 :             FALSE
; 2711 :       );
; 2712 : 
; 2713 :       //
; 2714 :       // Compensate for scenarios where the window is partially offscreen
; 2715 :       //
; 2716 :       int push_right = 0;
; 2717 : 
; 2718 :       if (game_window.actual.window.left < mi.rcWork.left)

	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	xor	eax, eax
	mov	esi, DWORD PTR _mi$[ebp+20]
	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+108
	cmp	ecx, esi
	jge	SHORT $LN38@SK_AdjustW

; 2719 :         push_right = mi.rcWork.left - game_window.actual.window.left;

	mov	eax, esi
	sub	eax, ecx
	jmp	SHORT $LN40@SK_AdjustW
$LN38@SK_AdjustW:

; 2720 :       else if (game_window.actual.window.right > mi.rcWork.right)

	mov	esi, DWORD PTR _mi$[ebp+28]
	cmp	edx, esi
	jle	SHORT $LN40@SK_AdjustW

; 2721 :         push_right = (mi.rcWork.right - game_window.actual.window.right);

	mov	eax, esi
	sub	eax, edx
$LN40@SK_AdjustW:

; 2722 : 
; 2723 :       game_window.actual.window.left  += push_right;
; 2724 :       game_window.actual.window.right += push_right;
; 2725 : 
; 2726 :       int push_down = 0;
; 2727 : 
; 2728 :       if ((game_window.actual.window.top - game_window.actual.client.top) < 0)

	mov	esi, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	add	ecx, eax
	mov	edi, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	add	edx, eax
	mov	eax, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+100, ecx
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+88

; 2729 :         push_down = 0 - (game_window.actual.window.top - game_window.actual.client.top);

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+88
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+108, edx
	jns	SHORT $LN41@SK_AdjustW
	sub	eax, esi
	jmp	SHORT $LN43@SK_AdjustW
$LN41@SK_AdjustW:

; 2730 :       else if (game_window.actual.window.bottom + game_window.actual.client.top > mi.rcWork.bottom)

	add	eax, edi
	cmp	eax, DWORD PTR _mi$[ebp+32]
	jle	SHORT $LN170@SK_AdjustW

; 2731 :         push_down = mi.rcWork.bottom - (game_window.actual.window.bottom + game_window.actual.client.top);

	mov	eax, DWORD PTR _mi$[ebp+32]
	sub	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+88
	sub	eax, edi
	jmp	SHORT $LN43@SK_AdjustW
$LN170@SK_AdjustW:
	xor	eax, eax
$LN43@SK_AdjustW:

; 2732 : 
; 2733 :       game_window.actual.window.top    += push_down;

	add	esi, eax

; 2734 :       game_window.actual.window.bottom += push_down;

	add	edi, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+104, esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+112, edi
$LN35@SK_AdjustW:

; 2735 :     }
; 2736 : 
; 2737 :     else
; 2738 :     {
; 2739 : #if 0
; 2740 :       game_window.actual.window.left   = 0;
; 2741 :       game_window.actual.window.top    = 0;
; 2742 :       game_window.actual.window.right  = real_width;
; 2743 :       game_window.actual.window.bottom = real_height;
; 2744 : 
; 2745 :       game_window.actual.client = game_window.actual.window;
; 2746 : 
; 2747 :       game_window.actual.style    = SK_BORDERLESS;
; 2748 :       game_window.actual.style_ex = SK_BORDERLESS_EX;
; 2749 : 
; 2750 :       SK_SetWindowStyle   ( game_window.actual.style    );
; 2751 :       SK_SetWindowStyleEx ( game_window.actual.style_ex );
; 2752 : #endif
; 2753 :     }
; 2754 : 
; 2755 : 
; 2756 :     if (game_window.actual.window.right  - game_window.actual.window.left > 0 &&

	sub	edx, ecx
	test	edx, edx
	jle	SHORT $LN44@SK_AdjustW
	sub	edi, esi
	test	edi, edi
	jle	SHORT $LN44@SK_AdjustW

; 2757 :         game_window.actual.window.bottom - game_window.actual.window.top  > 0 )
; 2758 :     {
; 2759 :       SetWindowPos_Original ( game_window.hWnd,

	xor	eax, eax
	cmp	BYTE PTR _nomove$1$[ebp], al
	setne	al
	lea	eax, DWORD PTR [eax*2+1604]
	or	eax, DWORD PTR tv1073[ebp]
	push	eax
	push	edi
	push	edx
	push	esi
	push	ecx
	push	0
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?SetWindowPos_Original@@3P6GHPAUHWND__@@0HHHHI@ZA ; SetWindowPos_Original
$LN44@SK_AdjustW:

; 2760 :                                 HWND_TOP,
; 2761 :                                   game_window.actual.window.left,
; 2762 :                                   game_window.actual.window.top,
; 2763 :                                     game_window.actual.window.right  - game_window.actual.window.left,
; 2764 :                                     game_window.actual.window.bottom - game_window.actual.window.top,
; 2765 :                                       SWP_NOSENDCHANGING | SWP_NOZORDER   |
; 2766 :                                       SWP_NOREPOSITION   | SWP_SHOWWINDOW |
; 2767 :                             (nomove ? SWP_NOMOVE : 0x00) |
; 2768 :                             (nosize ? SWP_NOSIZE : 0x00) );
; 2769 :     }
; 2770 : 
; 2771 :     GetWindowRect_Original (game_window.hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 2772 :     GetClientRect_Original (game_window.hWnd, &game_window.actual.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+84
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 2773 : 
; 2774 :     GetWindowRect_Original (game_window.hWnd, &game_window.game.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+52
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 2775 :     GetClientRect_Original (game_window.hWnd, &game_window.game.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+36
	push	DWORD PTR ?game_window@@3Usk_window_s@@A+4
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 2776 : 
; 2777 : 
; 2778 : 
; 2779 :     wchar_t wszBorderDesc [128] = { };

	push	256					; 00000100H
	lea	eax, DWORD PTR _wszBorderDesc$2[ebp]
	push	0
	push	eax
	call	_memset

; 204  :     return (  ( style == 0x0            ) ||

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 2776 : 
; 2777 : 
; 2778 : 
; 2779 :     wchar_t wszBorderDesc [128] = { };

	add	esp, 12					; 0000000cH

; 204  :     return (  ( style == 0x0            ) ||

	test	eax, eax
	je	SHORT $LN137@SK_AdjustW
	mov	BYTE PTR _has_border$1$[ebp], 0
	test	eax, 12845056				; 00c40000H
	je	SHORT $LN138@SK_AdjustW
$LN137@SK_AdjustW:
	mov	BYTE PTR _has_border$1$[ebp], 1
$LN138@SK_AdjustW:
	test	eax, eax
	je	SHORT $LN141@SK_AdjustW
	test	eax, 12845056				; 00c40000H
	je	SHORT $LN45@SK_AdjustW
$LN141@SK_AdjustW:

; 2780 : 
; 2781 :     bool has_border = SK_WindowManager::StyleHasBorder (game_window.actual.style);
; 2782 : 
; 2783 :     // Summarize the border
; 2784 :     if (SK_WindowManager::StyleHasBorder (game_window.actual.style))
; 2785 :     {
; 2786 :       _swprintf ( wszBorderDesc,

	push	4
	call	?SK_GetSystemMetrics@@YGHH@Z		; SK_GetSystemMetrics
	push	eax
	push	8
	call	?SK_GetSystemMetrics@@YGHH@Z		; SK_GetSystemMetrics
	add	eax, eax
	push	eax
	push	7
	call	?SK_GetSystemMetrics@@YGHH@Z		; SK_GetSystemMetrics
	add	eax, eax
	push	eax
	lea	eax, DWORD PTR _wszBorderDesc$2[ebp]
	push	OFFSET $SG212456
	push	eax
	call	__swprintf
	add	esp, 20					; 00000014H
$LN45@SK_AdjustW:

; 2787 :                    L"(Frame = %lipx x %lipx, Title = %lipx)",
; 2788 :                      2 * SK_GetSystemMetrics (SM_CXDLGFRAME),
; 2789 :                      2 * SK_GetSystemMetrics (SM_CYDLGFRAME),
; 2790 :                          SK_GetSystemMetrics (SM_CYCAPTION) );
; 2791 :     }
; 2792 : 
; 2793 :     SK_LOG1 ( ( L"WINDOW => {Left: %li, Top: %li} - (WxH: %lix%li) - { Border: %s }",

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 1
	jl	SHORT $LN46@SK_AdjustW
	cmp	BYTE PTR _has_border$1$[ebp], 0
	lea	ecx, DWORD PTR _wszBorderDesc$2[ebp]
	mov	edx, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	mov	eax, OFFSET $SG212458
	cmovne	eax, ecx
	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	push	eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+112
	sub	eax, edx
	push	eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+108
	sub	eax, ecx
	push	eax
	push	edx
	push	ecx
	push	OFFSET $SG212459
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 28					; 0000001cH
$LN46@SK_AdjustW:

; 2794 :                   game_window.actual.window.left, game_window.actual.window.top,
; 2795 :                     game_window.actual.window.right - game_window.actual.window.left,
; 2796 :                       game_window.actual.window.bottom - game_window.actual.window.top,
; 2797 :                         (! has_border) ? L"None" : wszBorderDesc ),
; 2798 :                 L"Border Mgr" );
; 2799 :   }
; 2800 : 
; 2801 : 
; 2802 :   // Post-Process Results:
; 2803 :   //
; 2804 :   //  If window is moved as a result of this function, we need to:
; 2805 :   //  ------------------------------------------------------------
; 2806 :   //   Re-compute certain game-defined metrics (which may differ):
; 2807 :   //   ===========================================================
; 2808 :   //    1. Client Rectangle
; 2809 :   //    2. Clip Rectangle (mouse confinement)
; 2810 :   //    3. Which monitor the game is on (XXX: that whole thing needs consideration)
; 2811 :   //
; 2812 :   //   Decide how to translate mouse events so that if the game does not know the
; 2813 :   //     window was moved, it still processes mouse input in a sane way.
; 2814 :   //
; 2815 : 
; 2816 :   auto DescribeRect = [&](RECT* lpRect)
; 2817 :   {
; 2818 :     SK_LOG2_EX ( false, ( L" => {Left: %li, Top: %li} - {WxH: %lix%li)\n",
; 2819 :                             lpRect->left, lpRect->top,
; 2820 :                               lpRect->right - lpRect->left,
; 2821 :                                 lpRect->bottom - lpRect->top ) );
; 2822 :   };
; 2823 : 
; 2824 :   // 1. Client Rectangle
; 2825 :   ////RECT client;
; 2826 :   ////GetClientRect_Original (game_window.hWnd, &client);
; 2827 : 
; 2828 : 
; 2829 :   // 2. Re-Compute Clip Rectangle
; 2830 :   bool unconfine = config.window.unconfine_cursor;
; 2831 :   bool   confine = config.window.confine_cursor;
; 2832 : 
; 2833 :   // This logic is questionable -- we probably need to transform the clip rect,
; 2834 :   //                                 but not apply it when unconfine is true.
; 2835 :   if (! unconfine)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+767, 0
	mov	al, BYTE PTR ?config@@3Usk_config_t@@A+766
	mov	BYTE PTR _confine$1$[ebp], al
	jne	$LN47@SK_AdjustW

; 2836 :   {
; 2837 :     RECT clip;
; 2838 :     GetClipCursor (&clip);

	lea	eax, DWORD PTR _clip$5[ebp]
	push	eax
	call	DWORD PTR __imp__GetClipCursor@4

; 2845 : 
; 2846 :     if (confine || SK_IsClipRectFinite (&game_window.cursor_clip) || SK_IsClipRectFinite (&clip))

	cmp	BYTE PTR _confine$1$[ebp], 0

; 2844 :     };

	lea	eax, DWORD PTR _DescribeRect$[ebp]
	mov	DWORD PTR _DescribeClipRect$6[ebp], eax

; 2845 : 
; 2846 :     if (confine || SK_IsClipRectFinite (&game_window.cursor_clip) || SK_IsClipRectFinite (&clip))

	jne	SHORT $LN50@SK_AdjustW
	push	OFFSET ?game_window@@3Usk_window_s@@A+168
	call	?SK_IsClipRectFinite@@YGHPAUtagRECT@@@Z	; SK_IsClipRectFinite
	test	eax, eax
	jne	SHORT $LN50@SK_AdjustW
	lea	eax, DWORD PTR _clip$5[ebp]
	push	eax
	call	?SK_IsClipRectFinite@@YGHPAUtagRECT@@@Z	; SK_IsClipRectFinite
	test	eax, eax
	je	$LN48@SK_AdjustW
$LN50@SK_AdjustW:

; 2847 :     { 
; 2848 :       DescribeClipRect (L"Game", &game_window.cursor_clip);

	push	OFFSET ?game_window@@3Usk_window_s@@A+168
	push	OFFSET $SG212464
	lea	ecx, DWORD PTR _DescribeClipRect$6[ebp]
	call	??R<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QBEXPB_WPAUtagRECT@@@Z ; <lambda_77fcd7573a79bd26205f7e2e096cdf28>::operator()

; 2849 :       DescribeClipRect (L" IN ", &clip);

	lea	eax, DWORD PTR _clip$5[ebp]
	push	eax
	push	OFFSET $SG212465
	lea	ecx, DWORD PTR _DescribeClipRect$6[ebp]
	call	??R<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QBEXPB_WPAUtagRECT@@@Z ; <lambda_77fcd7573a79bd26205f7e2e096cdf28>::operator()

; 2850 : 
; 2851 :       if (confine)

	cmp	BYTE PTR _confine$1$[ebp], 0
	jne	SHORT $LN53@SK_AdjustW

; 2852 :       {
; 2853 :         clip.left   = game_window.actual.window.left + game_window.actual.client.left;
; 2854 :         clip.top    = game_window.actual.window.top  + game_window.actual.client.top;
; 2855 :         clip.right  = game_window.actual.window.left + game_window.actual.client.right;
; 2856 :         clip.bottom = game_window.actual.window.top  + game_window.actual.client.bottom;
; 2857 :       }
; 2858 : 
; 2859 :       // TODO: Transform clip rectangle using existing rectangle
; 2860 :       //
; 2861 :       else
; 2862 :       {
; 2863 :         SK_LOG2 ( ( L"Need to transform original clip rect..." ),

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+824, 2
	jl	SHORT $LN53@SK_AdjustW
	push	OFFSET $SG212469
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN53@SK_AdjustW:

; 2864 :                     L"Cursor Mgr" );
; 2865 : 
; 2866 :         clip.left   = game_window.actual.window.left + game_window.actual.client.left;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+84

; 2867 :         clip.top    = game_window.actual.window.top  + game_window.actual.client.top;
; 2868 :         clip.right  = game_window.actual.window.left + game_window.actual.client.right;
; 2869 :         clip.bottom = game_window.actual.window.top  + game_window.actual.client.bottom;
; 2870 :       }
; 2871 : 
; 2872 :       DescribeClipRect (L"OUT ", &clip);

	lea	ecx, DWORD PTR _DescribeClipRect$6[ebp]
	add	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	mov	DWORD PTR _clip$5[ebp], eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+88
	add	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	mov	DWORD PTR _clip$5[ebp+4], eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+92
	add	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+100
	mov	DWORD PTR _clip$5[ebp+8], eax
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+96
	add	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+104
	mov	DWORD PTR _clip$5[ebp+12], eax
	lea	eax, DWORD PTR _clip$5[ebp]
	push	eax
	push	OFFSET $SG212470
	call	??R<lambda_77fcd7573a79bd26205f7e2e096cdf28>@@QBEXPB_WPAUtagRECT@@@Z ; <lambda_77fcd7573a79bd26205f7e2e096cdf28>::operator()
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	push	OFFSET ?game_window@@3Usk_window_s@@A+4
	lea	eax, DWORD PTR __Ans$4[ebp]
	mov	ecx, OFFSET ?wm_dispatch@@3Uwindow_message_dispatch_s@@A+32
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAUHWND__@@V?$_Uhash_compare@PAUHWND__@@U?$hash@PAUHWND__@@@std@@U?$equal_to@PAUHWND__@@@3@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Hash<std::_Uset_traits<HWND__ *,std::_Uhash_compare<HWND__ *,std::hash<HWND__ *>,std::equal_to<HWND__ *> >,std::allocator<HWND__ *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, DWORD PTR __Ans$4[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Ans$4[ebp+4]
	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN168@SK_AdjustW
$LL152@SK_AdjustW:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL152@SK_AdjustW
; File c:\users\andon\source\repos\specialk\src\window.cpp

; 2874 :       if (! wm_dispatch.moving_windows.count (game_window.hWnd))

	test	edx, edx
	jne	SHORT $LN47@SK_AdjustW
$LN168@SK_AdjustW:

; 2875 :         ClipCursor_Original (&clip);

	lea	eax, DWORD PTR _clip$5[ebp]
	push	eax

; 2876 :       else
; 2877 :         ClipCursor_Original (nullptr);
; 2878 :     } 
; 2879 :   }
; 2880 : 
; 2881 :   // Unconfine Cursor
; 2882 :   else
; 2883 :     ClipCursor_Original (nullptr);

	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original

; 2884 : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
$LN47@SK_AdjustW:

; 2876 :       else
; 2877 :         ClipCursor_Original (nullptr);
; 2878 :     } 
; 2879 :   }
; 2880 : 
; 2881 :   // Unconfine Cursor
; 2882 :   else
; 2883 :     ClipCursor_Original (nullptr);

	push	0
	call	DWORD PTR ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
$LN48@SK_AdjustW:

; 2884 : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?SK_AdjustWindow@@YAXXZ ENDP				; SK_AdjustWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_fullscreen_exclusive$ = 12				; size = 1
?SK_InitWindow@@YAXPAUHWND__@@_N@Z PROC			; SK_InitWindow

; 5026 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 5027 :   if (game_window.GetWindowLongPtr == nullptr)

	cmp	DWORD PTR ?game_window@@3Usk_window_s@@A+200, 0
	push	esi
	mov	esi, DWORD PTR _hWnd$[ebp]
	jne	SHORT $LN2@SK_InitWin

; 5028 :   {
; 5029 :     SK_InstallWindowHook (hWnd);

	push	esi
	call	?SK_InstallWindowHook@@YAXPAUHWND__@@@Z	; SK_InstallWindowHook
	add	esp, 4
$LN2@SK_InitWin:

; 5030 :   }
; 5031 : 
; 5032 :   GetWindowRect_Original (hWnd, &game_window.game.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+52
	push	esi
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 5033 :   GetClientRect_Original (hWnd, &game_window.game.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+36
	push	esi
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 5034 : 
; 5035 :   GetWindowRect_Original (hWnd, &game_window.actual.window);

	push	OFFSET ?game_window@@3Usk_window_s@@A+100
	push	esi
	call	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetWindowRect_Original

; 5036 :   GetClientRect_Original (hWnd, &game_window.actual.client);

	push	OFFSET ?game_window@@3Usk_window_s@@A+84
	push	esi
	call	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA ; GetClientRect_Original

; 5037 : 
; 5038 :   GetCursorPos_Original  (      &game_window.cursor_pos);

	push	OFFSET ?game_window@@3Usk_window_s@@A+184
	call	DWORD PTR ?GetCursorPos_Original@@3P6GHPAUtagPOINT@@@ZA ; GetCursorPos_Original

; 5039 : 
; 5040 :   if (game_window.GetWindowLongPtr == nullptr)

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+200
	test	eax, eax
	je	SHORT $LN6@SK_InitWin

; 5041 :     return;
; 5042 : 
; 5043 :   game_window.actual.style =

	push	-16					; fffffff0H
	push	esi
	call	eax

; 5044 :     game_window.GetWindowLongPtr ( hWnd, GWL_STYLE );
; 5045 : 
; 5046 :   game_window.actual.style_ex =

	push	-20					; ffffffecH
	push	esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+116, eax
	call	DWORD PTR ?game_window@@3Usk_window_s@@A+200

; 204  :     return (  ( style == 0x0            ) ||

	mov	ecx, DWORD PTR ?game_window@@3Usk_window_s@@A+116

; 5044 :     game_window.GetWindowLongPtr ( hWnd, GWL_STYLE );
; 5045 : 
; 5046 :   game_window.actual.style_ex =

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+120, eax

; 204  :     return (  ( style == 0x0            ) ||

	test	ecx, ecx
	je	SHORT $LN10@SK_InitWin
	test	ecx, 12845056				; 00c40000H
	je	SHORT $LN4@SK_InitWin
$LN10@SK_InitWin:

; 5047 :     game_window.GetWindowLongPtr ( hWnd, GWL_EXSTYLE );
; 5048 : 
; 5049 :   bool has_border  = SK_WindowManager::StyleHasBorder (
; 5050 :                        game_window.actual.style
; 5051 :                      );
; 5052 : 
; 5053 :   if (has_border)
; 5054 :   {
; 5055 :     game_window.border_style    = game_window.actual.style;

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+124, ecx

; 5056 :     game_window.border_style_ex = game_window.actual.style_ex;

	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+128, eax
$LN4@SK_InitWin:

; 5057 :   }
; 5058 : 
; 5059 :   game_window.game.style    = game_window.actual.style;
; 5060 :   game_window.game.style_ex = game_window.actual.style_ex;
; 5061 : 
; 5062 :   game_window.hWnd = hWnd;
; 5063 : 
; 5064 : 
; 5065 :   if (! fullscreen_exclusive)

	cmp	BYTE PTR _fullscreen_exclusive$[ebp], 0
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+68, ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+72, eax
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+4, esi
	jne	SHORT $LN6@SK_InitWin

; 5066 :   {
; 5067 :     // Next, adjust the border and/or window location if the user
; 5068 :     //   wants an override
; 5069 :     SK_ResetWindow ();

	call	?SK_ResetWindow@@YAXXZ			; SK_ResetWindow

; 5070 : 
; 5071 :     if (game_window.actual.style & WS_VISIBLE)

	test	DWORD PTR ?game_window@@3Usk_window_s@@A+116, 268435456 ; 10000000H
	je	SHORT $LN6@SK_InitWin

; 5072 :       SK_RealizeForegroundWindow (hWnd);

	push	esi
	call	?SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z ; SK_RealizeForegroundWindow
$LN6@SK_InitWin:
	pop	esi

; 5073 :   }
; 5074 : }

	pop	ebp
	ret	0
?SK_InitWindow@@YAXPAUHWND__@@_N@Z ENDP			; SK_InitWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
_wszClassName$ = -536					; size = 512
_rid$1 = -24						; size = 12
_dwLast$1$ = -12					; size = 4
_count$ = -8						; size = 4
_has_raw_mouse$1$ = -1					; size = 1
_hWnd$ = 8						; size = 4
?SK_InstallWindowHook@@YAXPAUHWND__@@@Z PROC		; SK_InstallWindowHook

; 5078 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H

; 5079 :   static volatile LONG installed = FALSE;
; 5080 : 
; 5081 :   if (InterlockedCompareExchange (&installed, TRUE, FALSE))

	mov	ecx, 1
	mov	edx, OFFSET ?installed@?1??SK_InstallWindowHook@@YAXPAUHWND__@@@Z@4JC
	xor	eax, eax
	lock	 cmpxchg DWORD PTR [edx], ecx
	test	eax, eax
	jne	$LN1@SK_Install

; 5082 :     return;
; 5083 : 
; 5084 :   game_window.unicode = IsWindowUnicode (hWnd) != FALSE;

	push	ebx
	mov	ebx, DWORD PTR _hWnd$[ebp]
	push	esi
	push	edi
	push	ebx
	call	DWORD PTR __imp__IsWindowUnicode@4
	test	eax, eax
	setne	al
	mov	BYTE PTR ?game_window@@3Usk_window_s@@A, al

; 5085 : 
; 5086 :   if (game_window.unicode && (! caught_register)) 

	test	al, al
	je	SHORT $LN6@SK_Install
	cmp	BYTE PTR ?caught_register@@3_NA, 0	; caught_register
	jne	$LN8@SK_Install

; 5087 :   {
; 5088 : #ifdef _WIN64
; 5089 :     game_window.GetWindowLongPtr = GetWindowLongPtrW_Original;
; 5090 :   //game_window.GetClassLongPtr  = GetClassLongPtrW_Original;
; 5091 : #else
; 5092 :     game_window.GetWindowLongPtr =

	mov	eax, DWORD PTR ?GetWindowLongW_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongW_Original

; 5093 :       static_cast <GetWindowLongPtr_pfn> (GetWindowLongW_Original);
; 5094 :   //game_window.GetClassLongPtr =
; 5095 :   //  static_cast <GetClassLongPtr_pfn>  (GetClassLongW_Original);
; 5096 : #endif
; 5097 :     game_window.SetWindowLongPtr = SetWindowLongPtrW_Original;
; 5098 :   //game_window.SetClassLongPtr  = SetClassLongPtrW_Original;
; 5099 :     game_window.DefWindowProc    = (DefWindowProc_pfn)

	mov	edi, DWORD PTR __imp__GetModuleHandleW@4
	push	OFFSET $SG281967
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+200, eax
	mov	eax, DWORD PTR ?SetWindowLongPtrW_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongPtrW_Original
	push	OFFSET $SG281968
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+196, eax
	call	edi
	mov	esi, DWORD PTR __imp__GetProcAddress@8
	push	eax
	call	esi

; 5100 :       GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5101 :                          "DefWindowProcW" );
; 5102 :     game_window.CallWindowProc   = (CallWindowProc_pfn)

	push	OFFSET $SG281969
	push	OFFSET $SG281970
	jmp	SHORT $LN51@SK_Install
$LN6@SK_Install:

; 5103 :       GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5104 :                          "CallWindowProcW" );
; 5105 :   }
; 5106 : 
; 5107 :   else if (! caught_register)

	cmp	BYTE PTR ?caught_register@@3_NA, 0	; caught_register
	jne	SHORT $LN24@SK_Install

; 5108 :   {
; 5109 : #ifdef _WIN64
; 5110 :     game_window.GetWindowLongPtr = GetWindowLongPtrA_Original;
; 5111 :   //game_window.GetClassLongPtr  = GetClassLongPtrA_Original;
; 5112 : #else
; 5113 :     game_window.GetWindowLongPtr =

	mov	eax, DWORD PTR ?GetWindowLongA_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongA_Original

; 5114 :       static_cast <GetWindowLongPtr_pfn> (GetWindowLongA_Original);
; 5115 :   //game_window.GetClassLongPtr =
; 5116 :   //  static_cast <GetClassLongPtr_pfn>  (GetClassLongA_Original);
; 5117 : #endif
; 5118 :     game_window.SetWindowLongPtr = SetWindowLongPtrA_Original;
; 5119 :   //game_window.SetClassLongPtr  = SetClassLongPtrA_Original;
; 5120 :     game_window.DefWindowProc    = reinterpret_cast <DefWindowProc_pfn>

	mov	edi, DWORD PTR __imp__GetModuleHandleW@4
	push	OFFSET $SG281972
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+200, eax
	mov	eax, DWORD PTR ?SetWindowLongPtrA_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongPtrA_Original
	push	OFFSET $SG281973
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+196, eax
	call	edi
	mov	esi, DWORD PTR __imp__GetProcAddress@8
	push	eax
	call	esi

; 5121 :       ( GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5122 :                           "DefWindowProcA" )
; 5123 :       );
; 5124 :     game_window.CallWindowProc   = reinterpret_cast <CallWindowProc_pfn>

	push	OFFSET $SG281974
	push	OFFSET $SG281975
$LN51@SK_Install:
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+212, eax
	call	edi
	push	eax
	call	esi
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+216, eax
	mov	al, BYTE PTR ?game_window@@3Usk_window_s@@A
$LN8@SK_Install:

; 5125 :       ( GetProcAddress ( GetModuleHandle (L"user32.dll"),
; 5126 :                            "CallWindowProcA" )
; 5127 :       );
; 5128 :   }
; 5129 : 
; 5130 :   WNDPROC class_proc = game_window.unicode ? (WNDPROC)

	test	al, al
	je	SHORT $LN24@SK_Install
	push	-24					; ffffffe8H
	push	ebx
	call	DWORD PTR __imp__GetClassLongW@8
	jmp	SHORT $LN52@SK_Install
$LN24@SK_Install:
	push	-24					; ffffffe8H
	push	ebx
	call	DWORD PTR __imp__GetClassLongA@8
$LN52@SK_Install:

; 5131 :     GetClassLongPtrW  ( hWnd, GCLP_WNDPROC ) :
; 5132 :                                              (WNDPROC)
; 5133 :     GetClassLongPtrA  ( hWnd, GCLP_WNDPROC );
; 5134 : 
; 5135 :   WNDPROC wnd_proc = game_window.unicode    ? (WNDPROC)

	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A, 0
	mov	esi, eax
	push	-4					; fffffffcH
	push	ebx
	je	SHORT $LN26@SK_Install
	call	DWORD PTR __imp__GetWindowLongW@8
	jmp	SHORT $LN53@SK_Install
$LN26@SK_Install:
	call	DWORD PTR __imp__GetWindowLongA@8
$LN53@SK_Install:

; 5136 :     GetWindowLongPtrW  ( hWnd, GWLP_WNDPROC ) :
; 5137 :                                               (WNDPROC)
; 5138 :     GetWindowLongPtrA  ( hWnd, GWLP_WNDPROC );
; 5139 : 
; 5140 : 
; 5141 :   // When ImGui is active, we will do character translation internally
; 5142 :   //   for any Raw Input or Win32 keydown event -- disable Windows'
; 5143 :   //     translation from WM_KEYDOWN to WM_CHAR while we are doing this.
; 5144 :   //
; 5145 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?TranslateMessage_Original@@3P6GHPBUtagMSG@@@ZA ; TranslateMessage_Original
	push	OFFSET ?TranslateMessage_Detour@@YGHPBUtagMSG@@@Z ; TranslateMessage_Detour
	push	OFFSET $SG281976
	push	OFFSET $SG281977
	mov	edi, eax
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5146 :                              "TranslateMessage",
; 5147 :                               TranslateMessage_Detour,
; 5148 :      static_cast_p2p <void> (&TranslateMessage_Original) );
; 5149 : 
; 5150 : 
; 5151 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?PeekMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageW_Original
	push	OFFSET ?PeekMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z ; PeekMessageW_Detour
	push	OFFSET $SG281978
	push	OFFSET $SG281979
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5152 :                              "PeekMessageW",
; 5153 :                               PeekMessageW_Detour,
; 5154 :      static_cast_p2p <void> (&PeekMessageW_Original) );
; 5155 : 
; 5156 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?PeekMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@III@ZA ; PeekMessageA_Original
	push	OFFSET ?PeekMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@III@Z ; PeekMessageA_Detour
	push	OFFSET $SG281980
	push	OFFSET $SG281981
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5157 :                              "PeekMessageA",
; 5158 :                               PeekMessageA_Detour,
; 5159 :      static_cast_p2p <void> (&PeekMessageA_Original) );
; 5160 : 
; 5161 : 
; 5162 :   // Hook as few of these as possible, disrupting the message pump
; 5163 :   //   when we already have the game's main window hooked is redundant.
; 5164 :   //
; 5165 :   //   ** PeekMessage is hooked because The Witness pulls mouse click events
; 5166 :   //        out of the pump without passing them through its window procedure.
; 5167 :   //
; 5168 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?GetMessageW_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA ; GetMessageW_Original
	push	OFFSET ?GetMessageW_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z ; GetMessageW_Detour
	push	OFFSET $SG281982
	push	OFFSET $SG281983
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5169 :                              "GetMessageW",
; 5170 :                               GetMessageW_Detour,
; 5171 :      static_cast_p2p <void> (&GetMessageW_Original) );
; 5172 : 
; 5173 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?DispatchMessageW_Original@@3P6GJPBUtagMSG@@@ZA ; DispatchMessageW_Original
	push	OFFSET ?DispatchMessageW_Detour@@YGJPBUtagMSG@@@Z ; DispatchMessageW_Detour
	push	OFFSET $SG281984
	push	OFFSET $SG281985
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5174 :                              "DispatchMessageW",
; 5175 :                               DispatchMessageW_Detour,
; 5176 :      static_cast_p2p <void> (&DispatchMessageW_Original) );
; 5177 :   
; 5178 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?GetMessageA_Original@@3P6GHPAUtagMSG@@PAUHWND__@@II@ZA ; GetMessageA_Original
	push	OFFSET ?GetMessageA_Detour@@YGHPAUtagMSG@@PAUHWND__@@II@Z ; GetMessageA_Detour
	push	OFFSET $SG281986
	push	OFFSET $SG281987
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5179 :                              "GetMessageA",
; 5180 :                               GetMessageA_Detour,
; 5181 :      static_cast_p2p <void> (&GetMessageA_Original) );
; 5182 : 
; 5183 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?DispatchMessageA_Original@@3P6GJPBUtagMSG@@@ZA ; DispatchMessageA_Original
	push	OFFSET ?DispatchMessageA_Detour@@YGJPBUtagMSG@@@Z ; DispatchMessageA_Detour
	push	OFFSET $SG281988
	push	OFFSET $SG281989
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5184 :                              "DispatchMessageA",
; 5185 :                               DispatchMessageA_Detour,
; 5186 :      static_cast_p2p <void> (&DispatchMessageA_Original) );
; 5187 : 
; 5188 :   if (! caught_register)

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+8
	xor	ecx, ecx
	cmp	BYTE PTR ?caught_register@@3_NA, cl	; caught_register

; 5189 :     game_window.WndProc_Original = nullptr;
; 5190 : 
; 5191 :   wchar_t wszClassName [256] = { };

	push	512					; 00000200H
	cmove	eax, ecx
	mov	DWORD PTR ?game_window@@3Usk_window_s@@A+8, eax
	lea	eax, DWORD PTR _wszClassName$[ebp]
	push	ecx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5192 :   GetClassNameW ( hWnd, wszClassName, 256 );

	lea	eax, DWORD PTR _wszClassName$[ebp]
	push	256					; 00000100H
	push	eax
	push	ebx
	call	DWORD PTR __imp__GetClassNameW@12

; 5193 : 
; 5194 :   dll_log.Log ( L"[Window Mgr] Hooking the Window Procedure for "

	cmp	BYTE PTR ?game_window@@3Usk_window_s@@A, 0
	lea	eax, DWORD PTR _wszClassName$[ebp]
	push	edi
	push	esi
	push	eax
	mov	ecx, OFFSET $SG281992
	mov	eax, OFFSET $SG281991
	cmove	eax, ecx
	push	eax
	push	OFFSET $SG281993
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 24					; 00000018H

; 5195 :                 L"%s Window Class ('%s') :: (ClassProc: %p, WndProc: %p)",
; 5196 :                   game_window.unicode ? L"Unicode" : L"ANSI",
; 5197 :                     wszClassName,
; 5198 :                       class_proc,
; 5199 :                         wnd_proc );
; 5200 : 
; 5201 :   bool hook_classfunc = false;
; 5202 : 
; 5203 :   // Compat Hack: EverQuest (hook classfunc)
; 5204 :   //
; 5205 :   //   Initial PeekMessage hook will handle input at server select,
; 5206 :   //     hooked window proc will handle events in-game.
; 5207 :   //
; 5208 :   //   This game hooks its own message loop dispatch functions, probably
; 5209 :   //     as an anti-cheat method. Hooking the class procedure is the only
; 5210 :   //       workaround.
; 5211 :   //
; 5212 :   //if (! _wcsicmp (SK_GetHostApp (), L"eqgame.exe"))
; 5213 :     hook_classfunc = true;
; 5214 :   
; 5215 :   if (hook_classfunc && (! caught_register))

	cmp	BYTE PTR ?caught_register@@3_NA, 0	; caught_register
	jne	SHORT $LN14@SK_Install

; 5216 :   {
; 5217 :     game_window.hooked = false;
; 5218 : 
; 5219 : #if 0
; 5220 :     game_window.WndProc_Original = (WNDPROC)GetWindowLongPtrW (game_window.hWnd, GWLP_WNDPROC);
; 5221 :     g_hkCallWndProc = SetWindowsHookEx (WH_CALLWNDPROC, CallWndProc, SK_GetDLL (), GetCurrentThreadId ());
; 5222 : #else
; 5223 :     if ( MH_OK ==

	push	OFFSET ?game_window@@3Usk_window_s@@A+8
	push	OFFSET ?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc
	push	esi
	mov	BYTE PTR ?game_window@@3Usk_window_s@@A+220, 0
	call	_MH_CreateHook@12
	test	eax, eax
	jne	SHORT $LN12@SK_Install

; 5224 :            MH_CreateHook (
; 5225 :                                                    class_proc,
; 5226 :                                           SK_DetourWindowProc,
; 5227 :                  static_cast_p2p <void> (&game_window.WndProc_Original)
; 5228 :            )
; 5229 :       )
; 5230 :     {
; 5231 :       MH_QueueEnableHook (class_proc);

	push	esi
	call	_MH_QueueEnableHook@4

; 5232 :     
; 5233 :       dll_log.Log (L"[Window Mgr]  >> Hooked ClassProc.");

	push	OFFSET $SG281998

; 5234 :     
; 5235 :       game_window.hooked = false;
; 5236 :     }
; 5237 :     
; 5238 :     else if ( MH_OK ==

	jmp	SHORT $LN54@SK_Install
$LN12@SK_Install:
	push	OFFSET ?game_window@@3Usk_window_s@@A+8
	push	OFFSET ?SK_DetourWindowProc@@YGJPAUHWND__@@IIJ@Z ; SK_DetourWindowProc
	push	edi
	call	_MH_CreateHook@12
	test	eax, eax
	jne	SHORT $LN14@SK_Install

; 5239 :                 MH_CreateHook (
; 5240 :                                                       wnd_proc,
; 5241 :                                            SK_DetourWindowProc,
; 5242 :                   static_cast_p2p <void> (&game_window.WndProc_Original)
; 5243 :                 )
; 5244 :             )
; 5245 :     {
; 5246 :       MH_QueueEnableHook (wnd_proc);

	push	edi
	call	_MH_QueueEnableHook@4

; 5247 :     
; 5248 :       dll_log.Log (L"[Window Mgr]  >> Hooked WndProc.");

	push	OFFSET $SG282000
$LN54@SK_Install:
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 5249 :     
; 5250 :       game_window.hooked = false;

	mov	BYTE PTR ?game_window@@3Usk_window_s@@A+220, 0
	add	esp, 8
$LN14@SK_Install:

; 5251 :     }
; 5252 : #endif
; 5253 :   }
; 5254 :   
; 5255 :   else if (! caught_register)
; 5256 :   {
; 5257 :     //dll_log.Log ( L"[Window Mgr]  >> Hooking was impossible; installing new "
; 5258 :     //              L"window procedure instead (this may be undone "
; 5259 :     //              L"by other software)." );
; 5260 :   
; 5261 :     game_window.WndProc_Original =
; 5262 :       static_cast <WNDPROC> (wnd_proc);
; 5263 :   
; 5264 :     game_window.SetWindowLongPtr ( hWnd,
; 5265 :                                      GWLP_WNDPROC,
; 5266 :           reinterpret_cast <LONG_PTR> (SK_DetourWindowProc) );
; 5267 :   
; 5268 :     //game_window.SetClassLongPtr ( hWnd,
; 5269 :     //                                GWLP_WNDPROC,
; 5270 :     //      reinterpret_cast <LONG_PTR> (SK_DetourWindowProc) );
; 5271 :   
; 5272 :     if (game_window.unicode)
; 5273 :       SetClassLongPtrW ( hWnd, GCLP_WNDPROC, (LONG_PTR)SK_DetourWindowProc );
; 5274 :     else
; 5275 :       SetClassLongPtrA ( hWnd, GCLP_WNDPROC, (LONG_PTR)SK_DetourWindowProc );
; 5276 :   
; 5277 :     game_window.hooked = true;
; 5278 :   }
; 5279 : 
; 5280 : 
; 5281 : 
; 5282 :   bool has_raw_mouse = false;
; 5283 :   UINT count         = 0;
; 5284 : 
; 5285 :                  GetRegisteredRawInputDevices_Original (nullptr, &count, sizeof RAWINPUTDEVICE);

	push	12					; 0000000cH
	lea	eax, DWORD PTR _count$[ebp]
	mov	BYTE PTR _has_raw_mouse$1$[ebp], 0
	push	eax
	push	0
	mov	DWORD PTR _count$[ebp], 0
	call	DWORD PTR ?GetRegisteredRawInputDevices_Original@@3P6GIPAUtagRAWINPUTDEVICE@@PAII@ZA ; GetRegisteredRawInputDevices_Original

; 5286 :   DWORD dwLast = GetLastError                          ();

	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _dwLast$1$[ebp], eax

; 5287 : 
; 5288 :   if (count > 0)

	mov	eax, DWORD PTR _count$[ebp]
	test	eax, eax
	je	SHORT $LN18@SK_Install

; 5289 :   {
; 5290 :     auto* pDevs =
; 5291 :       new RAWINPUTDEVICE [count + 1];

	xor	ecx, ecx
	inc	eax
	mov	edx, 12					; 0000000cH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	edi, eax

; 5292 : 
; 5293 :     GetRegisteredRawInputDevices_Original ( pDevs,

	lea	eax, DWORD PTR _count$[ebp]
	push	12					; 0000000cH
	push	eax
	push	edi
	call	DWORD PTR ?GetRegisteredRawInputDevices_Original@@3P6GIPAUtagRAWINPUTDEVICE@@PAII@ZA ; GetRegisteredRawInputDevices_Original

; 5294 :                                               &count,
; 5295 :                                                 sizeof RAWINPUTDEVICE );
; 5296 : 
; 5297 :     for (UINT i = 0 ; i < count ; i++)

	mov	esi, DWORD PTR _count$[ebp]
	xor	ecx, ecx
	test	esi, esi
	je	SHORT $LN3@SK_Install

; 5289 :   {
; 5290 :     auto* pDevs =
; 5291 :       new RAWINPUTDEVICE [count + 1];

	mov	eax, edi
	npad	3
$LL4@SK_Install:

; 5298 :     {
; 5299 :       if ( ( pDevs [i].usUsage     == HID_USAGE_GENERIC_MOUSE ||
; 5300 :              pDevs [i].usUsage     == HID_USAGE_GENERIC_POINTER ) &&

	movzx	edx, WORD PTR [eax+2]
	cmp	edx, 2
	je	SHORT $LN20@SK_Install
	cmp	edx, 1
	jne	SHORT $LN2@SK_Install
$LN20@SK_Install:
	movzx	edx, WORD PTR [eax]
	cmp	edx, 1
	je	SHORT $LN47@SK_Install
	cmp	edx, 5
	je	SHORT $LN47@SK_Install
$LN2@SK_Install:

; 5294 :                                               &count,
; 5295 :                                                 sizeof RAWINPUTDEVICE );
; 5296 : 
; 5297 :     for (UINT i = 0 ; i < count ; i++)

	inc	ecx
	add	eax, 12					; 0000000cH
	cmp	ecx, esi
	jb	SHORT $LL4@SK_Install

; 5298 :     {
; 5299 :       if ( ( pDevs [i].usUsage     == HID_USAGE_GENERIC_MOUSE ||
; 5300 :              pDevs [i].usUsage     == HID_USAGE_GENERIC_POINTER ) &&

	jmp	SHORT $LN3@SK_Install
$LN47@SK_Install:

; 5301 :            ( pDevs [i].usUsagePage == HID_USAGE_PAGE_GENERIC  ||
; 5302 :              pDevs [i].usUsagePage == HID_USAGE_PAGE_GAME       ) )
; 5303 :       {
; 5304 :         has_raw_mouse = true; // Technically this could be just about any pointing device

	mov	BYTE PTR _has_raw_mouse$1$[ebp], 1
$LN3@SK_Install:

; 5305 :                               //   including a touchscreen (on purpose).
; 5306 :         break;
; 5307 :       }
; 5308 :     }
; 5309 : 
; 5310 :     delete [] pDevs;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN18@SK_Install:

; 5311 :   }
; 5312 : 
; 5313 :   SetLastError (dwLast);

	push	DWORD PTR _dwLast$1$[ebp]
	call	DWORD PTR __imp__SetLastError@4

; 5314 : 
; 5315 :   // If no pointing device is setup, go ahead and register our own mouse,
; 5316 :   //   it won't interfere with the game's operation until the ImGui overlay
; 5317 :   //     requires a mouse... at which point third-party software will flip out :)
; 5318 :   if (! has_raw_mouse)

	cmp	BYTE PTR _has_raw_mouse$1$[ebp], 0
	jne	SHORT $LN22@SK_Install

; 5319 :   {
; 5320 :     RAWINPUTDEVICE rid;
; 5321 :     rid.hwndTarget  = hWnd;
; 5322 :     rid.usUsage     = HID_USAGE_GENERIC_MOUSE;
; 5323 :     rid.usUsagePage = HID_USAGE_PAGE_GENERIC;
; 5324 :     rid.dwFlags     = RIDEV_INPUTSINK |
; 5325 :                       RIDEV_DEVNOTIFY;
; 5326 :   
; 5327 :     RegisterRawInputDevices_Original (&rid, 1, sizeof RAWINPUTDEVICE);

	push	12					; 0000000cH
	push	1
	lea	eax, DWORD PTR _rid$1[ebp]
	mov	DWORD PTR _rid$1[ebp+8], ebx
	push	eax
	mov	DWORD PTR _rid$1[ebp], 131073		; 00020001H
	mov	DWORD PTR _rid$1[ebp+4], 8448		; 00002100H
	call	DWORD PTR ?RegisterRawInputDevices_Original@@3P6GHPBUtagRAWINPUTDEVICE@@II@ZA ; RegisterRawInputDevices_Original
$LN22@SK_Install:

; 5328 :   }
; 5329 : 
; 5330 : 
; 5331 :   SK_ApplyQueuedHooks ();

	call	?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ ; SK_ApplyQueuedHooks

; 5332 :   SK_InitWindow (hWnd);

	push	0
	push	ebx
	call	?SK_InitWindow@@YAXPAUHWND__@@_N@Z	; SK_InitWindow
	add	esp, 8

; 5333 : 
; 5334 : 
; 5335 :   SK_ICommandProcessor* cmd =
; 5336 :     SK_GetCommandProcessor ();

	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor

; 5337 : 
; 5338 :   cmd->AddVariable ("Cursor.Manage",           SK_CreateVar (SK_IVariable::Boolean, (bool *)&config.input.cursor.manage));

	push	0
	mov	edi, eax
	push	OFFSET ?config@@3Usk_config_t@@A+672
	push	2
	mov	esi, DWORD PTR [edi]
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	eax
	push	OFFSET $SG282009
	mov	ecx, edi
	call	DWORD PTR [esi+20]

; 5339 :   cmd->AddVariable ("Cursor.Timeout",          SK_CreateVar (SK_IVariable::Int,     (int  *)&config.input.cursor.timeout));

	mov	esi, DWORD PTR [edi]
	push	0
	push	OFFSET ?config@@3Usk_config_t@@A+668
	push	5
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	eax
	push	OFFSET $SG282010
	mov	ecx, edi
	call	DWORD PTR [esi+20]

; 5340 :   cmd->AddVariable ("Cursor.KeysActivate",     SK_CreateVar (SK_IVariable::Boolean, (bool *)&config.input.cursor.keys_activate));

	mov	esi, DWORD PTR [edi]
	push	0
	push	OFFSET ?config@@3Usk_config_t@@A+673
	push	2
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	eax
	push	OFFSET $SG282011
	mov	ecx, edi
	call	DWORD PTR [esi+20]

; 5341 : 
; 5342 :   cmd->AddVariable ("Window.BackgroundRender", SK_CreateVar (SK_IVariable::Boolean, (bool *)&config.window.background_render));

	mov	esi, DWORD PTR [edi]
	push	0
	push	OFFSET ?config@@3Usk_config_t@@A+764
	push	2
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	eax
	push	OFFSET $SG282012
	mov	ecx, edi
	call	DWORD PTR [esi+20]

; 5343 : 
; 5344 :   cmd->AddVariable ("ImGui.Visible",           SK_CreateVar (SK_IVariable::Boolean, (bool *)&SK_ImGui_Visible));

	mov	esi, DWORD PTR [edi]
	push	0
	push	OFFSET ?SK_ImGui_Visible@@3_NA		; SK_ImGui_Visible
	push	2
	call	?SK_CreateVar@@YGPAUSK_IVariable@@W4VariableType@1@PAXPAUSK_IVariableListener@@@Z ; SK_CreateVar
	push	eax
	push	OFFSET $SG282013
	mov	ecx, edi
	call	DWORD PTR [esi+20]
	pop	edi
	pop	esi
	pop	ebx
$LN1@SK_Install:

; 5345 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_InstallWindowHook@@YAXPAUHWND__@@@Z ENDP		; SK_InstallWindowHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?SK_HookWinAPI@@YAXXZ PROC				; SK_HookWinAPI

; 5665 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SK_HookWinAPI@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 699  :     if (pWindowManager == nullptr)

	cmp	DWORD PTR ?pWindowManager@SK_WindowManager@@0PAV1@A, 0 ; SK_WindowManager::pWindowManager
	jne	SHORT $LN4@SK_HookWin

; 700  :       pWindowManager = new SK_WindowManager ();

	push	100					; 00000064H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN6@SK_HookWin
	mov	ecx, eax
	call	??0SK_WindowManager@@QAE@XZ		; SK_WindowManager::SK_WindowManager
	jmp	SHORT $LN7@SK_HookWin
$LN6@SK_HookWin:
	xor	eax, eax
$LN7@SK_HookWin:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pWindowManager@SK_WindowManager@@0PAV1@A, eax ; SK_WindowManager::pWindowManager
$LN4@SK_HookWin:

; 5666 :   // Initialize the Window Manager
; 5667 :   SK_WindowManager::getInstance ();
; 5668 : 
; 5669 : 
; 5670 :   //int phys_w         = GetDeviceCaps (GetDC (GetDesktopWindow ()), PHYSICALWIDTH);
; 5671 :   //int phys_h         = GetDeviceCaps (GetDC (GetDesktopWindow ()), PHYSICALHEIGHT);
; 5672 :   //int phys_off_x     = GetDeviceCaps (GetDC (GetDesktopWindow ()), PHYSICALOFFSETX);
; 5673 :   //int phys_off_y     = GetDeviceCaps (GetDC (GetDesktopWindow ()), PHYSICALOFFSETY);
; 5674 :   //int scale_factor_x = GetDeviceCaps (GetDC (GetDesktopWindow ()), SCALINGFACTORX);
; 5675 :   //int scale_factor_y = GetDeviceCaps (GetDC (GetDesktopWindow ()), SCALINGFACTORY);
; 5676 : 
; 5677 :   //SK_LOG0 ( ( L" Physical Coordinates  ::  { %lux%lu) + <%lu,%lu> * {%lu:%lu}",
; 5678 :                 //phys_w, phys_h,
; 5679 :                 //phys_off_x, phys_off_y,
; 5680 :                 //scale_factor_x, scale_factor_y ),
; 5681 :               //L"Window Sys" );
; 5682 : 
; 5683 : 
; 5684 : #if 1
; 5685 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?SetWindowPos_Original@@3P6GHPAUHWND__@@0HHHHI@ZA ; SetWindowPos_Original
	push	OFFSET ?SetWindowPos_Detour@@YGHPAUHWND__@@0HHHHI@Z ; SetWindowPos_Detour
	push	OFFSET $SG282228
	push	OFFSET $SG282229
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5686 :                              "SetWindowPos",
; 5687 :                               SetWindowPos_Detour,
; 5688 :      static_cast_p2p <void> (&SetWindowPos_Original) );
; 5689 : 
; 5690 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?SetWindowPlacement_Original@@3P6GHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@ZA ; SetWindowPlacement_Original
	push	OFFSET ?SetWindowPlacement_Detour@@YGHPAUHWND__@@PBUtagWINDOWPLACEMENT@@@Z ; SetWindowPlacement_Detour
	push	OFFSET $SG282230
	push	OFFSET $SG282231
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5691 :                              "SetWindowPlacement",
; 5692 :                               SetWindowPlacement_Detour,
; 5693 :      static_cast_p2p <void> (&SetWindowPlacement_Original) );
; 5694 : 
; 5695 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?MoveWindow_Original@@3P6GHPAUHWND__@@HHHHH@ZA ; MoveWindow_Original
	push	OFFSET ?MoveWindow_Detour@@YGHPAUHWND__@@HHHHH@Z ; MoveWindow_Detour
	push	OFFSET $SG282232
	push	OFFSET $SG282233
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5696 :                              "MoveWindow",
; 5697 :                               MoveWindow_Detour,
; 5698 :      static_cast_p2p <void> (&MoveWindow_Original) );
; 5699 : #else
; 5700 :     SetWindowPos_Original =
; 5701 :       (SetWindowPos_pfn)
; 5702 :         GetProcAddress ( GetModuleHandleW (L"user32.dll"), 
; 5703 :                          "SetWindowPos" );
; 5704 :     SetWindowPlacement_Original =
; 5705 :       (SetWindowPlacement_pfn)
; 5706 :         GetProcAddress ( GetModuleHandleW (L"user32.dll"), 
; 5707 :                          "SetWindowPlacement" );
; 5708 : 
; 5709 :     MoveWindow_Original =
; 5710 :       (MoveWindow_pfn)
; 5711 :         GetProcAddress ( GetModuleHandleW (L"user32.dll"), 
; 5712 :                          "MoveWindow" );
; 5713 : #endif
; 5714 : 
; 5715 : 
; 5716 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?ClipCursor_Original@@3P6GHPBUtagRECT@@@ZA ; ClipCursor_Original
	push	OFFSET ?ClipCursor_Detour@@YGHPBUtagRECT@@@Z ; ClipCursor_Detour
	push	OFFSET $SG282234
	push	OFFSET $SG282235
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5717 :                              "ClipCursor",
; 5718 :                               ClipCursor_Detour,
; 5719 :      static_cast_p2p <void> (&ClipCursor_Original) );
; 5720 : 
; 5721 : 
; 5722 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?CreateWindowExW_Original@@3P6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExW_Original
	push	OFFSET ?CreateWindowExW_Detour@@YGPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z ; CreateWindowExW_Detour
	push	OFFSET $SG282236
	push	OFFSET $SG282237
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5723 :                              "CreateWindowExW",
; 5724 :                               CreateWindowExW_Detour,
; 5725 :      static_cast_p2p <void> (&CreateWindowExW_Original) );
; 5726 : 
; 5727 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?CreateWindowExA_Original@@3P6GPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExA_Original
	push	OFFSET ?CreateWindowExA_Detour@@YGPAUHWND__@@KPBD0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@Z ; CreateWindowExA_Detour
	push	OFFSET $SG282238
	push	OFFSET $SG282239
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5728 :                              "CreateWindowExA",
; 5729 :                               CreateWindowExA_Detour,
; 5730 :      static_cast_p2p <void> (&CreateWindowExA_Original) );
; 5731 : 
; 5732 : 
; 5733 : // These functions are dispatched through the Ptr version, so
; 5734 : //   hooking them in the 64-bit version would be a bad idea.
; 5735 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?SetWindowLongA_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongA_Original
	push	OFFSET ?SetWindowLongA_Detour@@YGJPAUHWND__@@HJ@Z ; SetWindowLongA_Detour
	push	OFFSET $SG282240
	push	OFFSET $SG282241
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5736 :                              "SetWindowLongA",
; 5737 :                               SetWindowLongA_Detour,
; 5738 :      static_cast_p2p <void> (&SetWindowLongA_Original) );
; 5739 : 
; 5740 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?SetWindowLongW_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongW_Original
	push	OFFSET ?SetWindowLongW_Detour@@YGJPAUHWND__@@HJ@Z ; SetWindowLongW_Detour
	push	OFFSET $SG282242
	push	OFFSET $SG282243
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5741 :                              "SetWindowLongW",
; 5742 :                               SetWindowLongW_Detour,
; 5743 :      static_cast_p2p <void> (&SetWindowLongW_Original) );
; 5744 : 
; 5745 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?GetWindowLongA_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongA_Original
	push	OFFSET ?GetWindowLongA_Detour@@YGJPAUHWND__@@H@Z ; GetWindowLongA_Detour
	push	OFFSET $SG282244
	push	OFFSET $SG282245
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5746 :                              "GetWindowLongA",
; 5747 :                               GetWindowLongA_Detour,
; 5748 :      static_cast_p2p <void> (&GetWindowLongA_Original) );
; 5749 : 
; 5750 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?GetWindowLongW_Original@@3P6GJPAUHWND__@@H@ZA ; GetWindowLongW_Original
	push	OFFSET ?GetWindowLongW_Detour@@YGJPAUHWND__@@H@Z ; GetWindowLongW_Detour
	push	OFFSET $SG282246
	push	OFFSET $SG282247
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5751 :                              "GetWindowLongW",
; 5752 :                               GetWindowLongW_Detour,
; 5753 :      static_cast_p2p <void> (&GetWindowLongW_Original) );
; 5754 : 
; 5755 :   //SK_CreateDLLHook2 (       L"user32.dll",
; 5756 :   //                           "SetClassLongA",
; 5757 :   //                            SetClassLongA_Detour,
; 5758 :   //   static_cast_p2p <void> (&SetClassLongA_Original) );
; 5759 :   //
; 5760 :   //SK_CreateDLLHook2 (       L"user32.dll",
; 5761 :   //                           "SetClassLongW",
; 5762 :   //                            SetClassLongW_Detour,
; 5763 :   //   static_cast_p2p <void> (&SetClassLongW_Original) );
; 5764 :   //
; 5765 :   //SK_CreateDLLHook2 (       L"user32.dll",
; 5766 :   //                           "GetClassLongA",
; 5767 :   //                            GetClassLongA_Detour,
; 5768 :   //   static_cast_p2p <void> (&GetClassLongA_Original) );
; 5769 :   //
; 5770 :   //SK_CreateDLLHook2 (       L"user32.dll",
; 5771 :   //                           "GetClassLongW",
; 5772 :   //                            GetClassLongW_Detour,
; 5773 :   //   static_cast_p2p <void> (&GetClassLongW_Original) );
; 5774 : 
; 5775 : #ifdef _WIN64
; 5776 :   SK_CreateDLLHook2 (       L"user32.dll",
; 5777 :                              "SetWindowLongPtrA",
; 5778 :                               SetWindowLongPtrA_Detour,
; 5779 :      static_cast_p2p <void> (&SetWindowLongPtrA_Original) );
; 5780 : 
; 5781 :   SK_CreateDLLHook2 (       L"user32.dll",
; 5782 :                              "SetWindowLongPtrW",
; 5783 :                               SetWindowLongPtrW_Detour,
; 5784 :      static_cast_p2p <void> (&SetWindowLongPtrW_Original) );
; 5785 : 
; 5786 :   SK_CreateDLLHook2 (       L"user32.dll",
; 5787 :                              "GetWindowLongPtrA",
; 5788 :                               GetWindowLongPtrA_Detour,
; 5789 :      static_cast_p2p <void> (&GetWindowLongPtrA_Original) );
; 5790 : 
; 5791 :   SK_CreateDLLHook2 (       L"user32.dll",
; 5792 :                              "GetWindowLongPtrW",
; 5793 :                               GetWindowLongPtrW_Detour,
; 5794 :      static_cast_p2p <void> (&GetWindowLongPtrW_Original) );
; 5795 : 
; 5796 :   //SK_CreateDLLHook2 (       L"user32.dll",
; 5797 :   //                           "SetClassLongPtrA",
; 5798 :   //                            SetClassLongPtrA_Detour,
; 5799 :   //   static_cast_p2p <void> (&SetClassLongPtrA_Original) );
; 5800 :   //
; 5801 :   //SK_CreateDLLHook2 (       L"user32.dll",
; 5802 :   //                           "SetClassLongPtrW",
; 5803 :   //                            SetClassLongPtrW_Detour,
; 5804 :   //   static_cast_p2p <void> (&SetClassLongPtrW_Original) );
; 5805 :   //
; 5806 :   //SK_CreateDLLHook2 (       L"user32.dll",
; 5807 :   //                           "GetClassLongPtrA",
; 5808 :   //                            GetClassLongPtrA_Detour,
; 5809 :   //   static_cast_p2p <void> (&GetClassLongPtrA_Original) );
; 5810 :   //
; 5811 :   //SK_CreateDLLHook2 (       L"user32.dll",
; 5812 :   //                           "GetClassLongPtrW",
; 5813 :   //                            GetClassLongPtrW_Detour,
; 5814 :   //   static_cast_p2p <void> (&GetClassLongPtrW_Original) );
; 5815 : #endif
; 5816 : 
; 5817 : #if 0
; 5818 :   SK_CreateDLLHook2 (         L"user32.dll",
; 5819 :                              "GetWindowRect",
; 5820 :                               GetWindowRect_Detour,
; 5821 :      static_cast_p2p <void> (&GetWindowRect_Original) );
; 5822 : #else
; 5823 :     GetWindowRect_Original =

	push	OFFSET $SG282248
	push	OFFSET $SG282249
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8

; 5824 :       reinterpret_cast <GetWindowRect_pfn> (
; 5825 :         GetProcAddress ( GetModuleHandleW (L"user32.dll"), 
; 5826 :                                             "GetWindowRect" )
; 5827 :       );
; 5828 : #endif
; 5829 : 
; 5830 : #if 0
; 5831 :   SK_CreateDLLHook2 (       L"user32.dll",
; 5832 :                              "GetClientRect",
; 5833 :                               GetClientRect_Detour,
; 5834 :      static_cast_p2p <void> (&GetClientRect_Original) );
; 5835 : #else
; 5836 :     GetClientRect_Original =

	push	OFFSET $SG282250
	push	OFFSET $SG282251
	mov	DWORD PTR ?GetWindowRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA, eax ; GetWindowRect_Original
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8

; 5837 :       reinterpret_cast <GetClientRect_pfn> (
; 5838 :         GetProcAddress ( GetModuleHandleW (L"user32.dll"), 
; 5839 :                                             "GetClientRect" )
; 5840 :       );
; 5841 : #endif
; 5842 : 
; 5843 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?AdjustWindowRect_Original@@3P6GHPAUtagRECT@@KH@ZA ; AdjustWindowRect_Original
	push	OFFSET ?AdjustWindowRect_Detour@@YGHPAUtagRECT@@KH@Z ; AdjustWindowRect_Detour
	push	OFFSET $SG282252
	push	OFFSET $SG282253
	mov	DWORD PTR ?GetClientRect_Original@@3P6GHPAUHWND__@@PAUtagRECT@@@ZA, eax ; GetClientRect_Original
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5844 :                              "AdjustWindowRect",
; 5845 :                               AdjustWindowRect_Detour,
; 5846 :      static_cast_p2p <void> (&AdjustWindowRect_Original) );
; 5847 : 
; 5848 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?AdjustWindowRectEx_Original@@3P6GHPAUtagRECT@@KHK@ZA ; AdjustWindowRectEx_Original
	push	OFFSET ?AdjustWindowRectEx_Detour@@YGHPAUtagRECT@@KHK@Z ; AdjustWindowRectEx_Detour
	push	OFFSET $SG282254
	push	OFFSET $SG282255
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5849 :                              "AdjustWindowRectEx",
; 5850 :                               AdjustWindowRectEx_Detour,
; 5851 :      static_cast_p2p <void> (&AdjustWindowRectEx_Original) );
; 5852 : 
; 5853 :   SK_CreateDLLHook2 (       L"user32.dll",

	push	0
	push	OFFSET ?GetSystemMetrics_Original@@3P6GHH@ZA ; GetSystemMetrics_Original
	push	OFFSET ?GetSystemMetrics_Detour@@YGHH@Z	; GetSystemMetrics_Detour
	push	OFFSET $SG282256
	push	OFFSET $SG282257
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2

; 5854 :                              "GetSystemMetrics",
; 5855 :                               GetSystemMetrics_Detour,
; 5856 :      static_cast_p2p <void> (&GetSystemMetrics_Original) );
; 5857 : 
; 5858 :   SK_ApplyQueuedHooks ();

	call	?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ ; SK_ApplyQueuedHooks

; 5859 : 
; 5860 : #ifndef _WIN64
; 5861 :   SetWindowLongPtrA_Original = SetWindowLongA_Original;

	mov	eax, DWORD PTR ?SetWindowLongA_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongA_Original

; 5862 :   SetWindowLongPtrW_Original = SetWindowLongW_Original;
; 5863 : #else
; 5864 : #endif
; 5865 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR ?SetWindowLongPtrA_Original@@3P6GJPAUHWND__@@HJ@ZA, eax ; SetWindowLongPtrA_Original
	mov	eax, DWORD PTR ?SetWindowLongW_Original@@3P6GJPAUHWND__@@HJ@ZA ; SetWindowLongW_Original
	mov	DWORD PTR ?SetWindowLongPtrW_Original@@3P6GJPAUHWND__@@HJ@ZA, eax ; SetWindowLongPtrW_Original
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_HookWinAPI@@YAXXZ$0:
	push	100					; 00000064H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?SK_HookWinAPI@@YAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?SK_HookWinAPI@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_HookWinAPI@@YAXXZ ENDP				; SK_HookWinAPI
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _x$[ebp]
	test	eax, eax
	jle	SHORT $LN4@HRESULT_FR
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
$LN4@HRESULT_FR:
	pop	ebp
	ret	0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
;	COMDAT _ReadAcquire
_TEXT	SEGMENT
_Source$ = 8						; size = 4
_ReadAcquire PROC					; COMDAT

; 8059 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 8060 : 
; 8061 :     LONG Value;
; 8062 : 
; 8063 :     Value = *Source;

	mov	eax, DWORD PTR _Source$[ebp]
	mov	eax, DWORD PTR [eax]

; 8064 :     return Value;
; 8065 : }

	pop	ebp
	ret	0
_ReadAcquire ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 6100 : #endif

	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\window.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 6100 : #endif

	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___n$[ebp]
	test	esi, esi
	je	SHORT $LN6@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	edi
	mov	edi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, edi
	call	ebx
	add	edi, DWORD PTR ___s$[ebp]
	sub	esi, 1
	jne	SHORT $LL2@vector
	pop	edi
	pop	ebx
$LN6@vector:
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
