; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\osd\popup.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?__manager__@SK_PopupManager@@0PAV1@A		; SK_PopupManager::__manager__
PUBLIC	?cs@SK_PopupManager@@0U_RTL_CRITICAL_SECTION@@A	; SK_PopupManager::cs
_BSS	SEGMENT
?__manager__@SK_PopupManager@@0PAV1@A DD 01H DUP (?)	; SK_PopupManager::__manager__
?cs@SK_PopupManager@@0U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?) ; SK_PopupManager::cs
_BSS	ENDS
CONST	SEGMENT
$SG222960 DB	'DestructStart', 00H
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0?$tuple@$$V@std@@QAE@XZ			; std::tuple<>::tuple<>
PUBLIC	??0?$tuple@$$V@std@@QAE@ABV01@@Z		; std::tuple<>::tuple<>
PUBLIC	??1SlotFunctorBase@CEGUI@@UAE@XZ		; CEGUI::SlotFunctorBase::~SlotFunctorBase
PUBLIC	??0SlotFunctorBase@CEGUI@@QAE@XZ		; CEGUI::SlotFunctorBase::SlotFunctorBase
PUBLIC	??_GSlotFunctorBase@CEGUI@@UAEPAXI@Z		; CEGUI::SlotFunctorBase::`scalar deleting destructor'
PUBLIC	??_GBoundSlot@CEGUI@@QAEPAXI@Z			; CEGUI::BoundSlot::`scalar deleting destructor'
PUBLIC	??1?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@QAE@XZ ; CEGUI::RefCounted<CEGUI::BoundSlot>::~RefCounted<CEGUI::BoundSlot>
PUBLIC	?release@?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@AAEXXZ ; CEGUI::RefCounted<CEGUI::BoundSlot>::release
PUBLIC	??R?$less@PAVWindow@CEGUI@@@std@@QBE_NABQAVWindow@CEGUI@@0@Z ; std::less<CEGUI::Window *>::operator()
PUBLIC	?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z ; SK_PopupWindow::getChild
PUBLIC	??BSK_PopupWindow@@QAEPAVWindow@CEGUI@@XZ	; SK_PopupWindow::operator CEGUI::Window *
PUBLIC	??0SK_PopupWindow@@IAE@PBD@Z			; SK_PopupWindow::SK_PopupWindow
PUBLIC	??1SK_PopupWindow@@IAE@XZ			; SK_PopupWindow::~SK_PopupWindow
PUBLIC	??_GSK_PopupWindow@@IAEPAXI@Z			; SK_PopupWindow::`scalar deleting destructor'
PUBLIC	?getInstance@SK_PopupManager@@SAPAV1@XZ		; SK_PopupManager::getInstance
PUBLIC	?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z ; SK_PopupManager::createPopup
PUBLIC	?destroyPopup@SK_PopupManager@@QAEXPAVSK_PopupWindow@@@Z ; SK_PopupManager::destroyPopup
PUBLIC	?destroyAllPopups@SK_PopupManager@@QAEXXZ	; SK_PopupManager::destroyAllPopups
PUBLIC	?isPopup@SK_PopupManager@@QAE_NPAVSK_PopupWindow@@@Z ; SK_PopupManager::isPopup
PUBLIC	?OnDestroyPopup@SK_PopupManager@@QAE_NABVEventArgs@CEGUI@@@Z ; SK_PopupManager::OnDestroyPopup
PUBLIC	??0SK_PopupManager@@IAE@XZ			; SK_PopupManager::SK_PopupManager
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::max_size
PUBLIC	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Color
PUBLIC	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Isnil
PUBLIC	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Left
PUBLIC	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Parent
PUBLIC	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Right
PUBLIC	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myval
PUBLIC	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Max
PUBLIC	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Min
PUBLIC	??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVSK_PopupWindow@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >
PUBLIC	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Construct
PUBLIC	??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >
PUBLIC	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Freeheadnode
PUBLIC	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode0
PUBLIC	?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Freenode0
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAU?$less@PAVSK_PopupWindow@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getcomp
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABU?$less@PAVSK_PopupWindow@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getal
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Get_data
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Get_data
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myhead
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myhead
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Mysize
PUBLIC	??R?$less@PAVSK_PopupWindow@@@std@@QBE_NABQAVSK_PopupWindow@@0@Z ; std::less<SK_PopupWindow *>::operator()
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >
PUBLIC	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Color
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Isnil
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Right
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Myval
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Min
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_second
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAVSK_PopupWindow@@@2@XZ ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAVSK_PopupWindow@@@2@XZ ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_second
PUBLIC	??0?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVSK_PopupWindow@@@1@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::~_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::end
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::max_size
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEIABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::clear
PUBLIC	?count@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEIABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::count
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@2@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::equal_range
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@2@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Destroy_if_not_nil
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Erase
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lmost
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lrotate
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Root
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rrotate
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tidy
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEABQAVSK_PopupWindow@@ABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEABQAVSK_PopupWindow@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Key
PUBLIC	??0?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >
PUBLIC	??1?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::~map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::max_size
PUBLIC	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Color
PUBLIC	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Isnil
PUBLIC	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Left
PUBLIC	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Parent
PUBLIC	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Right
PUBLIC	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myval
PUBLIC	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Max
PUBLIC	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Min
PUBLIC	??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVWindow@CEGUI@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >
PUBLIC	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Construct
PUBLIC	??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >
PUBLIC	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Freeheadnode
PUBLIC	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode0
PUBLIC	?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Freenode0
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAU?$less@PAVWindow@CEGUI@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getcomp
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABU?$less@PAVWindow@CEGUI@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getal
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Get_data
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Get_data
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myhead
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myhead
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Mysize
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Mysize
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >
PUBLIC	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Color
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Isnil
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Right
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Myval
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Min
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_second
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAVWindow@CEGUI@@@2@XZ ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAVWindow@CEGUI@@@2@XZ ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_second
PUBLIC	??0?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVWindow@CEGUI@@@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::~_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::end
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::max_size
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEIABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::clear
PUBLIC	?count@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::count
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::lower_bound
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@2@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::equal_range
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@2@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Destroy_if_not_nil
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Erase
PUBLIC	?_Compare@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE_NABQAVWindow@CEGUI@@0@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Compare
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lmost
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lrotate
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Root
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rrotate
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tidy
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEABQAVWindow@CEGUI@@ABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEABQAVWindow@CEGUI@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Key
PUBLIC	??0?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE@XZ ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >
PUBLIC	??A?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAEAAPAVSK_PopupWindow@@ABQAVWindow@CEGUI@@@Z ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::operator[]
PUBLIC	??1?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE@XZ ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::~map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >
PUBLIC	??$make_pair@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@std@@YA?AU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@Z ; std::make_pair<SK_PopupWindow * &,CEGUI::Window * &>
PUBLIC	??$?0PAVSK_PopupWindow@@PAVWindow@CEGUI@@X$0A@@?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@QAE@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::pair<SK_PopupWindow * const,CEGUI::Window *>::pair<SK_PopupWindow * const,CEGUI::Window *><SK_PopupWindow *,CEGUI::Window *,void,0>
PUBLIC	??$insert@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@X@?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::insert<std::pair<SK_PopupWindow *,CEGUI::Window *>,void>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator--
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator*
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator--
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator!=
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator->
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator--
PUBLIC	??$make_pair@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@std@@YA?AU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@Z ; std::make_pair<CEGUI::Window * &,SK_PopupWindow * &>
PUBLIC	??$?0PAVWindow@CEGUI@@PAVSK_PopupWindow@@X$0A@@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><CEGUI::Window *,SK_PopupWindow *,void,0>
PUBLIC	??$insert@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@X@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::insert<std::pair<CEGUI::Window *,SK_PopupWindow *>,void>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator--
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator*
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator--
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator!=
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator->
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator--
PUBLIC	??$?0VSK_PopupManager@@@SubscriberSlot@CEGUI@@QAE@P8SK_PopupManager@@AE_NABVEventArgs@1@@ZPAV2@@Z ; CEGUI::SubscriberSlot::SubscriberSlot<SK_PopupManager>
PUBLIC	??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
PUBLIC	??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
PUBLIC	??$try_emplace@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::try_emplace<>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@SAPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@AAU32@@Z ; std::pointer_traits<std::pair<SK_PopupWindow * const,CEGUI::Window *> *>::pointer_to
PUBLIC	??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
PUBLIC	??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >
PUBLIC	??$addressof@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YAPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z ; std::addressof<std::pair<SK_PopupWindow * const,CEGUI::Window *> >
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@SAPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@AAU32@@Z ; std::pointer_traits<std::pair<CEGUI::Window * const,SK_PopupWindow *> *>::pointer_to
PUBLIC	??$addressof@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YAPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z ; std::addressof<std::pair<CEGUI::Window * const,SK_PopupWindow *> >
PUBLIC	??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >
PUBLIC	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
PUBLIC	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >
PUBLIC	??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >
PUBLIC	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
PUBLIC	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
PUBLIC	??$?0ABU?$less@PAVWindow@CEGUI@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAVWindow@CEGUI@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1><std::less<CEGUI::Window *> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$swap@DX@std@@YAXAAD0@Z			; std::swap<char,void>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
PUBLIC	??$?0ABU?$less@PAVSK_PopupWindow@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAVSK_PopupWindow@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1><std::less<SK_PopupWindow *> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>
PUBLIC	??$forward@AAPAVSK_PopupWindow@@@std@@YAAAPAVSK_PopupWindow@@AAPAV1@@Z ; std::forward<SK_PopupWindow * &>
PUBLIC	??$forward@AAPAVWindow@CEGUI@@@std@@YAAAPAVWindow@CEGUI@@AAPAV12@@Z ; std::forward<CEGUI::Window * &>
PUBLIC	??$?0AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@X$0A@@?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@QAE@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@Z ; std::pair<SK_PopupWindow *,CEGUI::Window *>::pair<SK_PopupWindow *,CEGUI::Window *><SK_PopupWindow * &,CEGUI::Window * &,void,0>
PUBLIC	??$forward@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YA$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z ; std::forward<std::pair<SK_PopupWindow *,CEGUI::Window *> >
PUBLIC	??$emplace@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::emplace<std::pair<SK_PopupWindow *,CEGUI::Window *> >
PUBLIC	??$?0AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@X$0A@@?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@Z ; std::pair<CEGUI::Window *,SK_PopupWindow *>::pair<CEGUI::Window *,SK_PopupWindow *><CEGUI::Window * &,SK_PopupWindow * &,void,0>
PUBLIC	??$forward@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YA$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z ; std::forward<std::pair<CEGUI::Window *,SK_PopupWindow *> >
PUBLIC	??$emplace@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::emplace<std::pair<CEGUI::Window *,SK_PopupWindow *> >
PUBLIC	??0?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@QAE@P8SK_PopupManager@@AE_NABVEventArgs@1@@ZPAV2@@Z ; CEGUI::MemberFunctionSlot<SK_PopupManager>::MemberFunctionSlot<SK_PopupManager>
PUBLIC	??R?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE_NABVEventArgs@1@@Z ; CEGUI::MemberFunctionSlot<SK_PopupManager>::operator()
PUBLIC	??1?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE@XZ ; CEGUI::MemberFunctionSlot<SK_PopupManager>::~MemberFunctionSlot<SK_PopupManager>
PUBLIC	??_G?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAEPAXI@Z ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`scalar deleting destructor'
PUBLIC	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
PUBLIC	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
PUBLIC	??$_Try_emplace@ABQAVWindow@CEGUI@@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Try_emplace<CEGUI::Window * const &>
PUBLIC	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
PUBLIC	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
PUBLIC	??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,void,0>
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > const >
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,void,0>
PUBLIC	??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,void,0>
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > const >
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,void,0>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
PUBLIC	??$forward@ABU?$less@PAVWindow@CEGUI@@@std@@@std@@YAABU?$less@PAVWindow@CEGUI@@@0@ABU10@@Z ; std::forward<std::less<CEGUI::Window *> const &>
PUBLIC	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1><>
PUBLIC	??$move@AAD@std@@YA$$QADAAD@Z			; std::move<char &>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
PUBLIC	??$forward@ABU?$less@PAVSK_PopupWindow@@@std@@@std@@YAABU?$less@PAVSK_PopupWindow@@@0@ABU10@@Z ; std::forward<std::less<SK_PopupWindow *> const &>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1><>
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>
PUBLIC	??$_Kfn@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@SAABQAVWindow@CEGUI@@ABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0>::_Kfn<CEGUI::Window * const,SK_PopupWindow *>
PUBLIC	??$_Kfn@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@SAABQAVSK_PopupWindow@@ABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0>::_Kfn<SK_PopupWindow * const,CEGUI::Window *>
PUBLIC	??$_Buynode@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode<std::pair<SK_PopupWindow *,CEGUI::Window *> >
PUBLIC	??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_nohint<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
PUBLIC	??$_Buynode@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::pair<CEGUI::Window *,SK_PopupWindow *> >
PUBLIC	??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_nohint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
PUBLIC	??$forward@ABQAVWindow@CEGUI@@@std@@YAABQAVWindow@CEGUI@@ABQAV12@@Z ; std::forward<CEGUI::Window * const &>
PUBLIC	??$forward_as_tuple@ABQAVWindow@CEGUI@@@std@@YA?AV?$tuple@ABQAVWindow@CEGUI@@@0@ABQAVWindow@CEGUI@@@Z ; std::forward_as_tuple<CEGUI::Window * const &>
PUBLIC	??0?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@$$QAV01@@Z ; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &>
PUBLIC	??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ; std::forward_as_tuple<>
PUBLIC	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool,void,0>
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,bool,void,0>
PUBLIC	??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &>
PUBLIC	??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>
PUBLIC	??$_Lbound@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lbound<CEGUI::Window *>
PUBLIC	??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >
PUBLIC	??$forward@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z ; std::forward<std::pair<SK_PopupWindow * const,CEGUI::Window *> &>
PUBLIC	??$_Insert_at@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@1@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_at<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool,void,0>
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,bool,void,0>
PUBLIC	??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >
PUBLIC	??$forward@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z ; std::forward<std::pair<CEGUI::Window * const,SK_PopupWindow *> &>
PUBLIC	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
PUBLIC	??$?0ABQAVWindow@CEGUI@@$0A@@?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@ABQAVWindow@CEGUI@@@Z ; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &><CEGUI::Window * const &,0>
PUBLIC	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
PUBLIC	??$forward@V?$tuple@ABQAVWindow@CEGUI@@@std@@@std@@YA$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@AAV10@@Z ; std::forward<std::tuple<CEGUI::Window * const &> >
PUBLIC	??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
PUBLIC	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
PUBLIC	??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_hint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >
PUBLIC	??$_Buynode_if_nil@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PAU21@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode_if_nil<std::pair<SK_PopupWindow * const,CEGUI::Window *> &>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
PUBLIC	??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >
PUBLIC	??$_Buynode_if_nil@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PAU21@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode_if_nil<std::pair<CEGUI::Window * const,SK_PopupWindow *> &>
PUBLIC	??$?0U_Exact_args_t@std@@ABQAVWindow@CEGUI@@$$V$0A@@?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@U_Exact_args_t@1@ABQAVWindow@CEGUI@@@Z ; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &><std::_Exact_args_t,CEGUI::Window * const &,0>
PUBLIC	??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
PUBLIC	??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >
PUBLIC	??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0ABQAVWindow@CEGUI@@@?$_Tuple_val@ABQAVWindow@CEGUI@@@std@@QAE@ABQAVWindow@CEGUI@@@Z ; std::_Tuple_val<CEGUI::Window * const &>::_Tuple_val<CEGUI::Window * const &><CEGUI::Window * const &>
PUBLIC	??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
PUBLIC	??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
PUBLIC	??$forward@PAVSK_PopupWindow@@@std@@YA$$QAPAVSK_PopupWindow@@AAPAV1@@Z ; std::forward<SK_PopupWindow *>
PUBLIC	??$forward@PAVWindow@CEGUI@@@std@@YA$$QAPAVWindow@CEGUI@@AAPAV12@@Z ; std::forward<CEGUI::Window *>
PUBLIC	??$?0ABQAVWindow@CEGUI@@$$Z$$V@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAVWindow@CEGUI@@@1@V?$tuple@$$V@1@@Z ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><CEGUI::Window * const &>
PUBLIC	??$?0V?$tuple@ABQAVWindow@CEGUI@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@AAV?$tuple@ABQAVWindow@CEGUI@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><std::tuple<CEGUI::Window * const &>,std::tuple<>,0>
PUBLIC	??$move@AAV?$tuple@ABQAVWindow@CEGUI@@@std@@@std@@YA$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@AAV10@@Z ; std::move<std::tuple<CEGUI::Window * const &> &>
PUBLIC	??$get@$0A@ABQAVWindow@CEGUI@@@std@@YAABQAVWindow@CEGUI@@$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@@Z ; std::get<0,CEGUI::Window * const &>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7SlotFunctorBase@CEGUI@@6B@			; CEGUI::SlotFunctorBase::`vftable'
PUBLIC	??_7?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@ ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`vftable'
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R4SlotFunctorBase@CEGUI@@6B@			; CEGUI::SlotFunctorBase::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSlotFunctorBase@CEGUI@@@8		; CEGUI::SlotFunctorBase `RTTI Type Descriptor'
PUBLIC	??_R3SlotFunctorBase@CEGUI@@8			; CEGUI::SlotFunctorBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SlotFunctorBase@CEGUI@@8			; CEGUI::SlotFunctorBase::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SlotFunctorBase@CEGUI@@8		; CEGUI::SlotFunctorBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@ ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@@8 ; CEGUI::MemberFunctionSlot<SK_PopupManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8 ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8 ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8 ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___std_terminate:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_??1String@CEGUI@@QAE@XZ:PROC
EXTRN	__imp_?assign@String@CEGUI@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_?init@String@CEGUI@@AAEXXZ:PROC
EXTRN	??_ESlotFunctorBase@CEGUI@@UAEPAXI@Z:PROC	; CEGUI::SlotFunctorBase::`vector deleting destructor'
EXTRN	__imp_??1SubscriberSlot@CEGUI@@QAE@XZ:PROC
EXTRN	__imp_??1BoundSlot@CEGUI@@QAE@XZ:PROC
EXTRN	__imp_?getDllSingleton@?$Singleton@VSystem@CEGUI@@@CEGUI@@SAAAVSystem@2@XZ:PROC
EXTRN	__imp_?getDefaultGUIContext@System@CEGUI@@QBEAAVGUIContext@2@XZ:PROC
EXTRN	__imp_?destroyGUIContext@System@CEGUI@@QAEXAAVGUIContext@2@@Z:PROC
EXTRN	__imp_?getChildElement@NamedElement@CEGUI@@QBEPAV12@ABVString@2@@Z:PROC
EXTRN	__imp_?getDllSingleton@?$Singleton@VWindowManager@CEGUI@@@CEGUI@@SAAAVWindowManager@2@XZ:PROC
EXTRN	__imp_?destroyWindow@WindowManager@CEGUI@@QAEXPAVWindow@2@@Z:PROC
EXTRN	__imp_?loadLayoutFromFile@WindowManager@CEGUI@@QAEPAVWindow@2@ABVString@2@0P6A_NPAV32@AAV42@2PAX@Z3@Z:PROC
EXTRN	??_E?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAEPAXI@Z:PROC ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`vector deleting destructor'
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8 DD FLAT:??_R0?AV?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@@8 ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8
rdata$r	ENDS
;	COMDAT ??_R2?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8
rdata$r	SEGMENT
??_R2?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8 DD FLAT:??_R1A@?0A@EA@?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8 ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SlotFunctorBase@CEGUI@@8
rdata$r	ENDS
;	COMDAT ??_R3?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8
rdata$r	SEGMENT
??_R3?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8 DD 00H ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@@8
data$r	SEGMENT
??_R0?AV?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@@8 DD FLAT:??_7type_info@@6B@ ; CEGUI::MemberFunctionSlot<SK_PopupManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@
rdata$r	SEGMENT
??_R4?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@ DD 00H ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@@8
	DD	FLAT:??_R3?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SlotFunctorBase@CEGUI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SlotFunctorBase@CEGUI@@8 DD FLAT:??_R0?AVSlotFunctorBase@CEGUI@@@8 ; CEGUI::SlotFunctorBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SlotFunctorBase@CEGUI@@8
rdata$r	ENDS
;	COMDAT ??_R2SlotFunctorBase@CEGUI@@8
rdata$r	SEGMENT
??_R2SlotFunctorBase@CEGUI@@8 DD FLAT:??_R1A@?0A@EA@SlotFunctorBase@CEGUI@@8 ; CEGUI::SlotFunctorBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SlotFunctorBase@CEGUI@@8
rdata$r	SEGMENT
??_R3SlotFunctorBase@CEGUI@@8 DD 00H			; CEGUI::SlotFunctorBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SlotFunctorBase@CEGUI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSlotFunctorBase@CEGUI@@@8
data$r	SEGMENT
??_R0?AVSlotFunctorBase@CEGUI@@@8 DD FLAT:??_7type_info@@6B@ ; CEGUI::SlotFunctorBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSlotFunctorBase@CEGUI@@', 00H
data$r	ENDS
;	COMDAT ??_R4SlotFunctorBase@CEGUI@@6B@
rdata$r	SEGMENT
??_R4SlotFunctorBase@CEGUI@@6B@ DD 00H			; CEGUI::SlotFunctorBase::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSlotFunctorBase@CEGUI@@@8
	DD	FLAT:??_R3SlotFunctorBase@CEGUI@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@
CONST	SEGMENT
??_7?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@ DD FLAT:??_R4?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@ ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`vftable'
	DD	FLAT:??_E?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAEPAXI@Z
	DD	FLAT:??R?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE_NABVEventArgs@1@@Z
CONST	ENDS
;	COMDAT ??_7SlotFunctorBase@CEGUI@@6B@
CONST	SEGMENT
??_7SlotFunctorBase@CEGUI@@6B@ DD FLAT:??_R4SlotFunctorBase@CEGUI@@6B@ ; CEGUI::SlotFunctorBase::`vftable'
	DD	FLAT:??_ESlotFunctorBase@CEGUI@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z$119 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z$0
__unwindtable$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z$119
__ehfuncinfo$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z$51 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z$0
__unwindtable$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z$51
__ehfuncinfo$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z$51 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z$0
__unwindtable$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z$51
__ehfuncinfo$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1SK_PopupWindow@@IAE@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1SK_PopupWindow@@IAE@XZ$0
__unwindtable$??1SK_PopupWindow@@IAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??1SK_PopupWindow@@IAE@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??1SK_PopupWindow@@IAE@XZ$2
__ehfuncinfo$??1SK_PopupWindow@@IAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1SK_PopupWindow@@IAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1SK_PopupWindow@@IAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0SK_PopupWindow@@IAE@PBD@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0SK_PopupWindow@@IAE@PBD@Z$0
__tryblocktable$??0SK_PopupWindow@@IAE@PBD@Z DD 00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??0SK_PopupWindow@@IAE@PBD@Z$4
__unwindtable$??0SK_PopupWindow@@IAE@PBD@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??0SK_PopupWindow@@IAE@PBD@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??0SK_PopupWindow@@IAE@PBD@Z$3
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??0SK_PopupWindow@@IAE@PBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0SK_PopupWindow@@IAE@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0SK_PopupWindow@@IAE@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??0SK_PopupManager@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SK_PopupManager@@IAE@XZ$0
__unwindtable$?getInstance@SK_PopupManager@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getInstance@SK_PopupManager@@SAPAV1@XZ$0
__unwindtable$?destroyAllPopups@SK_PopupManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__catchsym$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z$0
__tryblocktable$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z$3
__unwindtable$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z$2
__unwindtable$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??0SK_PopupManager@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SK_PopupManager@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?destroyAllPopups@SK_PopupManager@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?destroyAllPopups@SK_PopupManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?getInstance@SK_PopupManager@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getInstance@SK_PopupManager@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$get@$0A@ABQAVWindow@CEGUI@@@std@@YAABQAVWindow@CEGUI@@$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@ABQAVWindow@CEGUI@@@std@@YAABQAVWindow@CEGUI@@$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@@Z PROC ; std::get<0,CEGUI::Window * const &>, COMDAT

; 810  : 	{	// get rvalue reference to _Index element of tuple

	npad	2
	push	ebp
	mov	ebp, esp

; 811  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 812  : 		_Ttype;
; 813  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::type&&
; 814  : 		_RRtype;
; 815  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));

	mov	eax, DWORD PTR __Tuple$[ebp]
	mov	eax, DWORD PTR [eax]

; 816  : 	}

	pop	ebp
	ret	0
??$get@$0A@ABQAVWindow@CEGUI@@@std@@YAABQAVWindow@CEGUI@@$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@@Z ENDP ; std::get<0,CEGUI::Window * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$tuple@ABQAVWindow@CEGUI@@@std@@@std@@YA$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$tuple@ABQAVWindow@CEGUI@@@std@@@std@@YA$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@AAV10@@Z PROC ; std::move<std::tuple<CEGUI::Window * const &> &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$tuple@ABQAVWindow@CEGUI@@@std@@@std@@YA$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@AAV10@@Z ENDP ; std::move<std::tuple<CEGUI::Window * const &> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0V?$tuple@ABQAVWindow@CEGUI@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@AAV?$tuple@ABQAVWindow@CEGUI@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABQAVWindow@CEGUI@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@AAV?$tuple@ABQAVWindow@CEGUI@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><std::tuple<CEGUI::Window * const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 1140 : 		{	// construct from pair of tuples

	npad	2
	push	ebp
	mov	ebp, esp

; 815  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]

; 816  : 	}
; 817  : 
; 818  : template<size_t _Index,
; 819  : 	class... _Types> inline
; 820  : 	constexpr const typename tuple_element<_Index, tuple<_Types...> >::type&&
; 821  : 		get(const tuple<_Types...>&& _Tuple) _NOEXCEPT
; 822  : 	{	// get const rvalue reference to _Index element of tuple
; 823  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 824  : 		_Ttype;
; 825  : 	typedef const typename tuple_element<_Index, tuple<_Types...> >::type&&
; 826  : 		_RRtype;
; 827  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));
; 828  : 	}
; 829  : 
; 830  : 	// TEMPLATE FUNCTION get (by type)
; 831  : template<class _Ty,
; 832  : 	class... _Types> inline
; 833  : 	constexpr _Ty& get(tuple<_Types...>& _Tuple) _NOEXCEPT
; 834  : 	{	// get reference to _Ty element of tuple
; 835  : 	typedef typename _Tuple_element<_Ty, tuple<_Types...> >::_Ttype _Ttype;
; 836  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);
; 837  : 	}
; 838  : 
; 839  : template<class _Ty,
; 840  : 	class... _Types> inline
; 841  : 	constexpr const _Ty& get(const tuple<_Types...>& _Tuple) _NOEXCEPT
; 842  : 	{	// get const reference to _Ty element of tuple
; 843  : 	typedef typename _Tuple_element<_Ty, tuple<_Types...> >::_Ttype _Ttype;
; 844  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);
; 845  : 	}
; 846  : 
; 847  : template<class _Ty,
; 848  : 	class... _Types> inline
; 849  : 	constexpr _Ty&& get(tuple<_Types...>&& _Tuple) _NOEXCEPT
; 850  : 	{	// get rvalue reference to _Ty element of tuple
; 851  : 	typedef typename _Tuple_element<_Ty, tuple<_Types...> >::_Ttype _Ttype;
; 852  : 	return (_STD forward<_Ty&&>(((_Ttype&)_Tuple)._Myfirst._Val));
; 853  : 	}
; 854  : 
; 855  : template<class _Ty,
; 856  : 	class... _Types> inline
; 857  : 	constexpr const _Ty&& get(const tuple<_Types...>&& _Tuple) _NOEXCEPT
; 858  : 	{	// get const rvalue reference to _Ty element of tuple
; 859  : 	typedef typename _Tuple_element<_Ty, tuple<_Types...> >::_Ttype _Ttype;
; 860  : 	return (_STD forward<const _Ty&&>(((_Ttype&)_Tuple)._Myfirst._Val));
; 861  : 	}
; 862  : 
; 863  : 	// CONSTRUCTOR TEMPLATES FOR tuple
; 864  : template<class _This,
; 865  : 	class... _Rest>
; 866  : 	template<class _Tag,
; 867  : 		class _Tpl,
; 868  : 		size_t... _Indices,
; 869  : 		enable_if_t<is_same<_Tag, _Unpack_tuple_t>::value, int>> inline
; 870  : 		constexpr tuple<_This, _Rest...>::tuple(_Tag, _Tpl&& _Right, index_sequence<_Indices...>)
; 871  : 		: tuple(_Exact_args_t{}, _STD get<_Indices>(_STD forward<_Tpl>(_Right))...)
; 872  : 		{	// construct from unpacking a tuple/pair, using get<I>()
; 873  : 		}
; 874  : 
; 875  : template<class _This,
; 876  : 	class... _Rest>
; 877  : 	template<class _Tag,
; 878  : 		class _Alloc,
; 879  : 		class _Tpl,
; 880  : 		size_t... _Indices,
; 881  : 		enable_if_t<is_same<_Tag, _Alloc_unpack_tuple_t>::value, int>> inline
; 882  : 		tuple<_This, _Rest...>::tuple(_Tag, const _Alloc& _Al, _Tpl&& _Right, index_sequence<_Indices...>)
; 883  : 		: tuple(_Alloc_exact_args_t{}, _Al, _STD get<_Indices>(_STD forward<_Tpl>(_Right))...)
; 884  : 		{	// construct from an allocator and unpacking a tuple/pair, using get<I>()
; 885  : 		}
; 886  : 
; 887  : 	// TEMPLATE FUNCTION make_tuple
; 888  : template<class... _Types> inline
; 889  : 	constexpr tuple<typename _Unrefwrap<_Types>::type...>
; 890  : 		make_tuple(_Types&&... _Args)
; 891  : 	{	// make tuple from elements
; 892  : 	typedef tuple<typename _Unrefwrap<_Types>::type...> _Ttype;
; 893  : 	return (_Ttype(_STD forward<_Types>(_Args)...));
; 894  : 	}
; 895  : 
; 896  : 	// TEMPLATE FUNCTION tie
; 897  : template<class... _Types> inline
; 898  : 	constexpr tuple<_Types&...>
; 899  : 		tie(_Types&... _Args) _NOEXCEPT
; 900  : 	{	// make tuple from elements
; 901  : 	typedef tuple<_Types&...> _Ttype;
; 902  : 	return (_Ttype(_Args...));
; 903  : 	}
; 904  : 
; 905  : 
; 906  : 	// TEMPLATE FUNCTION forward_as_tuple
; 907  : 
; 908  : template<class... _Types> inline
; 909  : 	constexpr tuple<_Types&&...>
; 910  : 		forward_as_tuple(_Types&&... _Args) _NOEXCEPT
; 911  : 	{	// forward arguments in a tuple
; 912  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));
; 913  : 	}
; 914  : 
; 915  : 
; 916  : 	// TEMPLATE STRUCT _Cat_sequences
; 917  : template<class _Seq_type1,
; 918  : 	class _Seq_type2>
; 919  : 	struct _Cat_sequences;
; 920  : 
; 921  : template<size_t... _Indexes1,
; 922  : 	size_t... _Indexes2>
; 923  : 	struct _Cat_sequences<index_sequence<_Indexes1...>,
; 924  : 		index_sequence<_Indexes2...> >
; 925  : 	{	// concatenates two index_sequence types
; 926  : 	typedef index_sequence<_Indexes1..., _Indexes2...> type;
; 927  : 	};
; 928  : 
; 929  : 	// FORWARD DECLARATIONS
; 930  : template<class _Ty,
; 931  : 	size_t _Size>
; 932  : 	class array;
; 933  : 
; 934  : template<size_t _Idx,
; 935  : 	class _Ty,
; 936  : 	size_t _Size>
; 937  : 	constexpr _Ty& get(array<_Ty, _Size>& _Arr) _NOEXCEPT;
; 938  : 
; 939  : template<size_t _Idx,
; 940  : 	class _Ty,
; 941  : 	size_t _Size>
; 942  : 	constexpr const _Ty& get(const array<_Ty, _Size>& _Arr) _NOEXCEPT;
; 943  : 
; 944  : template<size_t _Idx,
; 945  : 	class _Ty,
; 946  : 	size_t _Size>
; 947  : 	constexpr _Ty&& get(array<_Ty, _Size>&& _Arr) _NOEXCEPT;
; 948  : 
; 949  : 	// TEMPLATE STRUCT _View_as_tuple
; 950  : template<class _Ty,
; 951  : 	class... _For_array>
; 952  : 	struct _View_as_tuple
; 953  : 	{	// tuple_cat() supports only tuples, pairs, and arrays
; 954  : 	static_assert(_Always_false<_Ty>::value,
; 955  : 		"Unsupported tuple_cat arguments.");
; 956  : 	};
; 957  : 
; 958  : template<class... _Types>
; 959  : 	struct _View_as_tuple<tuple<_Types...> >
; 960  : 	{	// view a tuple as a tuple
; 961  : 	typedef tuple<_Types...> type;
; 962  : 	};
; 963  : 
; 964  : template<class _Ty1,
; 965  : 	class _Ty2>
; 966  : 	struct _View_as_tuple<pair<_Ty1, _Ty2> >
; 967  : 	{	// view a pair as a tuple
; 968  : 	typedef tuple<_Ty1, _Ty2> type;
; 969  : 	};
; 970  : 
; 971  : template<class _Ty,
; 972  : 	class... _Types>
; 973  : 	struct _View_as_tuple<array<_Ty, 0>, _Types...>
; 974  : 	{	// view an array as a tuple; ends recursion at 0
; 975  : 	typedef tuple<_Types...> type;
; 976  : 	};
; 977  : 
; 978  : template<class _Ty,
; 979  : 	size_t _Size,
; 980  : 	class... _Types>
; 981  : 	struct _View_as_tuple<array<_Ty, _Size>, _Types...>
; 982  : 		: _View_as_tuple<array<_Ty, _Size - 1>, _Ty, _Types...>
; 983  : 	{	// view an array as a tuple; counts down to 0
; 984  : 	};
; 985  : 
; 986  : 	// TEMPLATE STRUCT _Repeat_for
; 987  : template<size_t _Nx,
; 988  : 	class _Ty>
; 989  : 	struct _Repeat_for
; 990  : 		: integral_constant<size_t, _Nx>
; 991  : 	{	// repeats _Nx for each _Ty in a parameter pack
; 992  : 	};
; 993  : 
; 994  : 	// TEMPLATE FUNCTION tuple_cat
; 995  : template<class _Ret,
; 996  : 	class _Kx_arg,
; 997  : 	class _Ix_arg,
; 998  : 	size_t _Ix_next,
; 999  : 	class... _Tuples>
; 1000 : 	struct _Tuple_cat2
; 1001 : 	{	// determine tuple_cat's return type and _Kx/_Ix indices
; 1002 : 	static_assert(sizeof...(_Tuples) == 0,
; 1003 : 		"Unsupported tuple_cat arguments.");
; 1004 : 	typedef _Ret type;
; 1005 : 	typedef _Kx_arg _Kx_arg_seq;
; 1006 : 	typedef _Ix_arg _Ix_arg_seq;
; 1007 : 	};
; 1008 : 
; 1009 : template<class... _Types1,
; 1010 : 	class _Kx_arg,
; 1011 : 	size_t... _Ix,
; 1012 : 	size_t _Ix_next,
; 1013 : 	class... _Types2,
; 1014 : 	class... _Rest>
; 1015 : 	struct _Tuple_cat2<tuple<_Types1...>, _Kx_arg,
; 1016 : 		index_sequence<_Ix...>, _Ix_next,
; 1017 : 		tuple<_Types2...>, _Rest...>
; 1018 : 		: _Tuple_cat2<
; 1019 : 			tuple<_Types1..., _Types2...>,
; 1020 : 			typename _Cat_sequences<_Kx_arg, index_sequence_for<_Types2...>>::type,
; 1021 : 			index_sequence<_Ix..., _Repeat_for<_Ix_next, _Types2>::value...>,
; 1022 : 			_Ix_next + 1,
; 1023 : 			_Rest...>
; 1024 : 	{	// determine tuple_cat's return type and _Kx/_Ix indices
; 1025 : 	};
; 1026 : 
; 1027 : template<class... _Tuples>
; 1028 : 	struct _Tuple_cat1
; 1029 : 		: _Tuple_cat2<tuple<>, index_sequence<>,
; 1030 : 				index_sequence<>, 0,
; 1031 : 			typename _View_as_tuple<typename decay<_Tuples>::type>::type...>
; 1032 : 	{	// prepare to determine tuple_cat's return type and _Kx/_Ix indices
; 1033 : 	};
; 1034 : 
; 1035 : #pragma warning(push)
; 1036 : #pragma warning(disable: 4100)	// TRANSITION, VSO#181496, unreferenced formal parameter
; 1037 : template<class _Ret,
; 1038 : 	size_t... _Kx,
; 1039 : 	size_t... _Ix,
; 1040 : 	class _Ty> inline
; 1041 : 	constexpr _Ret _Tuple_cat(index_sequence<_Kx...>,
; 1042 : 		index_sequence<_Ix...>, _Ty&& _Arg)
; 1043 : 	{	// concatenate tuples
; 1044 : 	return (_Ret(_STD get<_Kx>(_STD get<_Ix>(_STD forward<_Ty>(_Arg)))...));
; 1045 : 	}
; 1046 : #pragma warning(pop)
; 1047 : 
; 1048 : template<class... _Tuples> inline
; 1049 : 	constexpr typename _Tuple_cat1<_Tuples...>::type
; 1050 : 		tuple_cat(_Tuples&&... _Tpls)
; 1051 : 	{	// concatenate tuples
; 1052 : 	typedef _Tuple_cat1<_Tuples...> _Cat1;
; 1053 : 	return (_Tuple_cat<typename _Cat1::type>(
; 1054 : 		typename _Cat1::_Kx_arg_seq(), typename _Cat1::_Ix_arg_seq(),
; 1055 : 		_STD forward_as_tuple(_STD forward<_Tuples>(_Tpls)...)));
; 1056 : 	}
; 1057 : 
; 1058 : #if _HAS_CXX17
; 1059 : 	// FUNCTION TEMPLATE apply
; 1060 : #pragma warning(push)
; 1061 : #pragma warning(disable: 4100)	// TRANSITION, VSO#181496, unreferenced formal parameter
; 1062 : template<class _Callable,
; 1063 : 	class _Tuple,
; 1064 : 	size_t... _Indices>
; 1065 : 	constexpr decltype(auto) _Apply_impl(_Callable&& _Obj, _Tuple&& _Tpl, index_sequence<_Indices...>)
; 1066 : 	{	// invoke _Obj with the elements of _Tpl
; 1067 : 	return (_C_invoke(_STD forward<_Callable>(_Obj), _STD get<_Indices>(_STD forward<_Tuple>(_Tpl))...));
; 1068 : 	}
; 1069 : #pragma warning(pop)
; 1070 : 
; 1071 : template<class _Callable,
; 1072 : 	class _Tuple>
; 1073 : 	constexpr decltype(auto) apply(_Callable&& _Obj, _Tuple&& _Tpl)
; 1074 : 	{	// invoke _Obj with the elements of _Tpl
; 1075 : 	return (_Apply_impl(_STD forward<_Callable>(_Obj), _STD forward<_Tuple>(_Tpl),
; 1076 : 		make_index_sequence<tuple_size_v<decay_t<_Tuple>>>{}));
; 1077 : 	}
; 1078 : 
; 1079 : 	// FUNCTION TEMPLATE make_from_tuple
; 1080 : #pragma warning(push)
; 1081 : #pragma warning(disable: 4100)	// TRANSITION, VSO#181496, unreferenced formal parameter
; 1082 : template<class _Ty,
; 1083 : 	class _Tuple,
; 1084 : 	size_t... _Indices>
; 1085 : 	constexpr _Ty _Make_from_tuple_impl(_Tuple&& _Tpl, index_sequence<_Indices...>)
; 1086 : 	{	// construct _Ty from the elements of _Tpl
; 1087 : 	return (_Ty(_STD get<_Indices>(_STD forward<_Tuple>(_Tpl))...));
; 1088 : 	}
; 1089 : #pragma warning(pop)
; 1090 : 
; 1091 : template<class _Ty,
; 1092 : 	class _Tuple>
; 1093 : 	constexpr _Ty make_from_tuple(_Tuple&& _Tpl)
; 1094 : 	{	// construct _Ty from the elements of _Tpl
; 1095 : 	return (_Make_from_tuple_impl<_Ty>(_STD forward<_Tuple>(_Tpl),
; 1096 : 		make_index_sequence<tuple_size_v<decay_t<_Tuple>>>{}));
; 1097 : 	}
; 1098 : #endif /* _HAS_CXX17 */
; 1099 : 
; 1100 : 	// FUNCTION TEMPLATE _For_each_tuple_element
; 1101 : template<class _Tpl,
; 1102 : 	class _Fx,
; 1103 : 	size_t... _Indices> inline
; 1104 : 	void _For_each_tuple_element_impl(_Tpl&& _Tuple,
; 1105 : 		_Fx _Func, index_sequence<_Indices...>)
; 1106 : 	{	// call _Func() on the _Indices elements of _Tuple
; 1107 : 	int _Ignored[] = { (static_cast<void>(_Func(
; 1108 : 		_STD get<_Indices>(_STD forward<_Tpl>(_Tuple))
; 1109 : 		)), 0)... };
; 1110 : 	(void)_Ignored;
; 1111 : 	}
; 1112 : 
; 1113 : template<class _Tpl,
; 1114 : 	class _Fx> inline
; 1115 : 	void _For_each_tuple_element(_Tpl&& _Tuple, _Fx _Func)
; 1116 : 	{	// call _Func() on each element in _Tuple
; 1117 : 	_For_each_tuple_element_impl(
; 1118 : 		_STD forward<_Tpl>(_Tuple),
; 1119 : 		_Func,
; 1120 : 		make_index_sequence<tuple_size<remove_reference_t<_Tpl>>::value>()
; 1121 : 		);
; 1122 : 	}
; 1123 : 
; 1124 : 
; 1125 : #pragma warning(push)
; 1126 : #pragma warning(disable: 4100)	// TRANSITION, VSO#181496, unreferenced formal parameter
; 1127 : 	// TEMPLATE CONSTRUCTOR pair::pair(tuple, tuple, sequence, sequence)
; 1128 : template<class _Ty1,
; 1129 : 	class _Ty2>
; 1130 : 	template<class _Tuple1,
; 1131 : 		class _Tuple2,
; 1132 : 		size_t... _Indexes1,
; 1133 : 		size_t... _Indexes2> inline
; 1134 : 		pair<_Ty1, _Ty2>::pair(_Tuple1& _Val1,
; 1135 : 			_Tuple2& _Val2,
; 1136 : 			index_sequence<_Indexes1...>,
; 1137 : 			index_sequence<_Indexes2...>)
; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1141 : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	pop	ebp
	ret	16					; 00000010H
??$?0V?$tuple@ABQAVWindow@CEGUI@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@AAV?$tuple@ABQAVWindow@CEGUI@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><std::tuple<CEGUI::Window * const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0ABQAVWindow@CEGUI@@$$Z$$V@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAVWindow@CEGUI@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABQAVWindow@CEGUI@@$$Z$$V@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAVWindow@CEGUI@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><CEGUI::Window * const &>, COMDAT
; _this$ = ecx

; 1155 : 		{	// construct from pair of tuples

	npad	2
	push	ebp
	mov	ebp, esp

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1156 : 		}

	mov	eax, ecx

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	DWORD PTR [ecx+4], 0

; 1156 : 		}

	pop	ebp
	ret	12					; 0000000cH
??$?0ABQAVWindow@CEGUI@@$$Z$$V@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABQAVWindow@CEGUI@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><CEGUI::Window * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@PAVWindow@CEGUI@@@std@@YA$$QAPAVWindow@CEGUI@@AAPAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVWindow@CEGUI@@@std@@YA$$QAPAVWindow@CEGUI@@AAPAV12@@Z PROC ; std::forward<CEGUI::Window *>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@PAVWindow@CEGUI@@@std@@YA$$QAPAVWindow@CEGUI@@AAPAV12@@Z ENDP ; std::forward<CEGUI::Window *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@PAVSK_PopupWindow@@@std@@YA$$QAPAVSK_PopupWindow@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVSK_PopupWindow@@@std@@YA$$QAPAVSK_PopupWindow@@AAPAV1@@Z PROC ; std::forward<SK_PopupWindow *>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@PAVSK_PopupWindow@@@std@@YA$$QAPAVSK_PopupWindow@@AAPAV1@@Z ENDP ; std::forward<SK_PopupWindow *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 264  : }

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	DWORD PTR [ecx+4], 0
$LN3@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 841  : 		}

	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN14@construct
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	DWORD PTR [ecx+4], 0
$LN14@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 960  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0ABQAVWindow@CEGUI@@@?$_Tuple_val@ABQAVWindow@CEGUI@@@std@@QAE@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$?0ABQAVWindow@CEGUI@@@?$_Tuple_val@ABQAVWindow@CEGUI@@@std@@QAE@ABQAVWindow@CEGUI@@@Z PROC ; std::_Tuple_val<CEGUI::Window * const &>::_Tuple_val<CEGUI::Window * const &><CEGUI::Window * const &>, COMDAT
; _this$ = ecx

; 165  : 		{	// construct with argument

	npad	2
	push	ebp
	mov	ebp, esp

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __Arg$[ebp]
	mov	DWORD PTR [ecx], eax

; 166  : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0ABQAVWindow@CEGUI@@@?$_Tuple_val@ABQAVWindow@CEGUI@@@std@@QAE@ABQAVWindow@CEGUI@@@Z ENDP ; std::_Tuple_val<CEGUI::Window * const &>::_Tuple_val<CEGUI::Window * const &><CEGUI::Window * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT
; _this$ = ecx

; 250  : 		}

	mov	eax, ecx
	ret	4
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QAE@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN3@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN3@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 841  : 		}

	pop	ebp
	ret	8
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN3@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN3@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 841  : 		}

	pop	ebp
	ret	8
??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN25@construct
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	DWORD PTR [ecx+4], 0
$LN25@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1098 : 		}

	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@ABQAVWindow@CEGUI@@$$V$0A@@?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@U_Exact_args_t@1@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__This_arg$ = 12					; size = 4
??$?0U_Exact_args_t@std@@ABQAVWindow@CEGUI@@$$V$0A@@?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@U_Exact_args_t@1@ABQAVWindow@CEGUI@@@Z PROC ; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &><std::_Exact_args_t,CEGUI::Window * const &,0>, COMDAT
; _this$ = ecx

; 292  : 		{	// construct from one arg per element

	npad	2
	push	ebp
	mov	ebp, esp

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __This_arg$[ebp]
	mov	DWORD PTR [ecx], eax

; 293  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0U_Exact_args_t@std@@ABQAVWindow@CEGUI@@$$V$0A@@?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@U_Exact_args_t@1@ABQAVWindow@CEGUI@@@Z ENDP ; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &><std::_Exact_args_t,CEGUI::Window * const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PAU21@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Node$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Buynode_if_nil@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PAU21@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode_if_nil<std::pair<CEGUI::Window * const,SK_PopupWindow *> &>, COMDAT
; _this$ = ecx

; 1637 : 		{	// node exists, just return it

	npad	2
	push	ebp
	mov	ebp, esp

; 1638 : 		return (_Node);

	mov	eax, DWORD PTR __Node$[ebp]

; 1639 : 		}

	pop	ebp
	ret	8
??$_Buynode_if_nil@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PAU21@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode_if_nil<std::pair<CEGUI::Window * const,SK_PopupWindow *> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN8@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN8@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 960  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PAU21@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Node$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Buynode_if_nil@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PAU21@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode_if_nil<std::pair<SK_PopupWindow * const,CEGUI::Window *> &>, COMDAT
; _this$ = ecx

; 1637 : 		{	// node exists, just return it

	npad	2
	push	ebp
	mov	ebp, esp

; 1638 : 		return (_Node);

	mov	eax, DWORD PTR __Node$[ebp]

; 1639 : 		}

	pop	ebp
	ret	8
??$_Buynode_if_nil@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PAU21@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode_if_nil<std::pair<SK_PopupWindow * const,CEGUI::Window *> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN8@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN8@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 960  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
_TEXT	SEGMENT
$T2 = -32						; size = 8
_this$ = -28						; size = 4
tv1433 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_hint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>, COMDAT
; _this$ = ecx

; 1663 : 		{	// try to insert node using _Where as a hint

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 20					; 00000014H
	push	ebx
	mov	ebx, ecx

; 1664 : 		const_iterator _Next;
; 1665 : 		bool _Leftish = false;	// assume nearest point is end of sequence
; 1666 : 
; 1667 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1668 : 
; 1669 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 : 		if (_Where._Getcont() != _STD addressof(this->_Get_data()))
; 1671 : 			{
; 1672 : 			_DEBUG_ERROR("map/set insert iterator outside range");
; 1673 : 			}
; 1674 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1675 : 
; 1676 : #pragma warning(push)
; 1677 : #pragma warning(disable: 4127)	// conditional expression is constant
; 1678 : 		if (size() == 0)

	cmp	DWORD PTR [ebx+4], 0
	mov	DWORD PTR _this$[ebp], ebx
	jne	SHORT $LN3@Insert_hin

; 1679 : 			return (_Insert_at(true, this->_Myhead(),

	push	DWORD PTR __Newnode$[ebp]
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR [ebx]
	push	1
	push	esi
	call	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, esi

; 1777 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1778 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN3@Insert_hin:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	edi, DWORD PTR [ebx]

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	esi, DWORD PTR __Where$[ebp]
	cmp	esi, DWORD PTR [edi]

; 1680 : 				_STD forward<_Valty>(_Val), _Newnode));	// empty tree
; 1681 : 		else if (this->_Multi)
; 1682 : 			{	// insert even if duplicate
; 1683 : 			if (_Where == begin())
; 1684 : 				{	// insert at beginning if before first element
; 1685 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),
; 1686 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1687 : 					return (_Insert_at(true, _Where._Mynode(),
; 1688 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1689 : 				_Leftish = true;	// nearest point is beginning of sequence
; 1690 : 				}
; 1691 : 			else if (_Where == end())
; 1692 : 				{	// insert at end if after last element
; 1693 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),
; 1694 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1695 : 					return (_Insert_at(false, _Rmost(),
; 1696 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1697 : 				}
; 1698 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),
; 1699 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1700 : 				&& !_DEBUG_LT_PRED(this->_Getcomp(),
; 1701 : 					this->_Kfn(_Val),
; 1702 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1703 : 				{	// insert before _Where
; 1704 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))
; 1705 : 					return (_Insert_at(false, _Next._Mynode(),
; 1706 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1707 : 				else
; 1708 : 					return (_Insert_at(true, _Where._Mynode(),
; 1709 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1710 : 				}
; 1711 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),
; 1712 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1713 : 				&& (++(_Next = _Where) == end()
; 1714 : 					|| !_DEBUG_LT_PRED(this->_Getcomp(),
; 1715 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1716 : 				{	// insert after _Where
; 1717 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))
; 1718 : 					return (_Insert_at(false, _Where._Mynode(),
; 1719 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1720 : 				else
; 1721 : 					return (_Insert_at(true, _Next._Mynode(),
; 1722 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1723 : 				}
; 1724 : 			else
; 1725 : 				_Leftish = true;	// nearest point is beginning of sequence
; 1726 : 			}
; 1727 : 		else
; 1728 : 			{	// insert only if unique
; 1729 : 			if (_Where == begin())

	jne	SHORT $LN22@Insert_hin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1731 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	jae	$LN35@Insert_hin

; 1732 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1733 : 					return (_Insert_at(true, _Where._Mynode(),

	push	DWORD PTR __Newnode$[ebp]
	push	ecx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, ebx
	push	1
	push	esi
	call	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, esi

; 1777 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1778 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN22@Insert_hin:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	esi, edi

; 1734 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1735 : 				}
; 1736 : 			else if (_Where == end())

	jne	SHORT $LN25@Insert_hin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 63   : 		return (_Val.first);

	mov	edx, DWORD PTR [edi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1738 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	jae	$LN35@Insert_hin

; 1739 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1740 : 					return (_Insert_at(false, _Rmost(),

	push	DWORD PTR __Newnode$[ebp]
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	push	edx
	push	0
	push	esi
	mov	ecx, ebx
	call	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, esi

; 1777 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1778 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN25@Insert_hin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv1433[ebp], eax
	cmp	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1745 : 				&& _DEBUG_LT_PRED(this->_Getcomp(),

	jbe	SHORT $LN775@Insert_hin

; 306  : 		--static_cast<_Mybase&>(*this);

	lea	ecx, DWORD PTR __Next$[ebp]

; 1745 : 				&& _DEBUG_LT_PRED(this->_Getcomp(),

	mov	DWORD PTR __Next$[ebp], esi

; 306  : 		--static_cast<_Mybase&>(*this);

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator--
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Next$[ebp]
	mov	ecx, DWORD PTR tv1433[ebp]
	cmp	DWORD PTR [eax+16], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1745 : 				&& _DEBUG_LT_PRED(this->_Getcomp(),

	jae	SHORT $LN772@Insert_hin

; 1746 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1747 : 					this->_Kfn(_Val)))
; 1748 : 				{	// insert before _Where
; 1749 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	mov	ecx, DWORD PTR [eax+8]

; 1750 : 					return (_Insert_at(false, _Next._Mynode(),

	push	DWORD PTR __Newnode$[ebp]
	push	DWORD PTR __Val$[ebp]
	cmp	BYTE PTR [ecx+13], 0
	mov	ecx, ebx
	je	SHORT $LN30@Insert_hin
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	push	0
	push	esi
	call	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, esi

; 1777 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1778 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN30@Insert_hin:

; 1751 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1752 : 				else
; 1753 : 					return (_Insert_at(true, _Where._Mynode(),

	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	1
	push	esi
	call	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, esi

; 1777 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1778 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN772@Insert_hin:
	mov	eax, ecx
	mov	ecx, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	ecx, eax
$LN775@Insert_hin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1758 : 				&& (++(_Next = _Where) == end()

	jae	$LN35@Insert_hin

; 271  : 		++static_cast<_Mybase&>(*this);

	lea	ecx, DWORD PTR __Next$[ebp]

; 1758 : 				&& (++(_Next = _Where) == end()

	mov	DWORD PTR __Next$[ebp], esi

; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator++

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, edi

; 1758 : 				&& (++(_Next = _Where) == end()

	je	SHORT $LN33@Insert_hin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	ecx, DWORD PTR tv1433[ebp]
	cmp	ecx, DWORD PTR [eax+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1758 : 				&& (++(_Next = _Where) == end()

	jae	SHORT $LN35@Insert_hin
$LN33@Insert_hin:

; 1759 : 					|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1760 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1761 : 				{	// insert after _Where
; 1762 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	mov	ecx, DWORD PTR [esi+8]

; 1763 : 					return (_Insert_at(false, _Where._Mynode(),

	push	DWORD PTR __Newnode$[ebp]
	push	DWORD PTR __Val$[ebp]
	cmp	BYTE PTR [ecx+13], 0
	mov	ecx, ebx
	je	SHORT $LN34@Insert_hin
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	0
	push	esi
	call	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, esi

; 1777 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1778 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN34@Insert_hin:

; 1764 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1765 : 				else
; 1766 : 					return (_Insert_at(true, _Next._Mynode(),

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	push	1
	push	esi
	call	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, esi

; 1777 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1778 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
__catch$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z$0:

; 1767 : 						_STD forward<_Valty>(_Val), _Newnode));
; 1768 : 				}
; 1769 : 			}
; 1770 : #pragma warning(pop)
; 1771 : 		_CATCH_ALL
; 1772 : 		_Destroy_if_not_nil(_Newnode);

	push	DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Destroy_if_not_nil

; 1773 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN776@Insert_hin:
$LN35@Insert_hin:

; 1774 : 		_CATCH_END
; 1775 : 
; 1776 : 		return (_Insert_nohint(_Leftish,

	push	DWORD PTR __Newnode$[ebp]
	lea	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	push	DWORD PTR __Val$[ebp]
	mov	ecx, ebx
	push	0
	push	eax
	call	??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_nohint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx

; 1777 : 			_STD forward<_Valty>(_Val), _Newnode).first);
; 1778 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN774@Insert_hin:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_hint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
_<_Val_2>$ = 16						; size = 4
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 895  : 		{	// allocate a node with defaults and set links and value

	npad	2
	push	ebp
	mov	ebp, esp

; 896  : 		_Nodeptr _Pnode = _Buynode0();

	call	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode0

; 596  : 		return ((reference)_Pnode->_Myval);

	lea	edx, DWORD PTR [eax+16]

; 897  : 
; 898  : 		this->_Color(_Pnode) = _Red;

	mov	WORD PTR [eax+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	edx, edx
	je	SHORT $LN65@Buynode
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 264  : }

	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	mov	ecx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 1138 : 		: first(_STD get<_Indexes1>(_STD move(_Val1))...),

	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], ecx

; 1139 : 			second(_STD get<_Indexes2>(_STD move(_Val2))...)

	mov	DWORD PTR [edx+4], 0
$LN65@Buynode:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 911  : 		}

	pop	ebp
	ret	12					; 0000000cH
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z PROC ; std::forward<std::tuple<> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$tuple@$$V@std@@@std@@YA$$QAV?$tuple@$$V@0@AAV10@@Z ENDP ; std::forward<std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$tuple@ABQAVWindow@CEGUI@@@std@@@std@@YA$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@ABQAVWindow@CEGUI@@@std@@@std@@YA$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@AAV10@@Z PROC ; std::forward<std::tuple<CEGUI::Window * const &> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$tuple@ABQAVWindow@CEGUI@@@std@@@std@@YA$$QAV?$tuple@ABQAVWindow@CEGUI@@@0@AAV10@@Z ENDP ; std::forward<std::tuple<CEGUI::Window * const &> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z PROC ; std::forward<std::piecewise_construct_t const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ENDP ; std::forward<std::piecewise_construct_t const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$?0ABQAVWindow@CEGUI@@$0A@@?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
__This_arg$ = 8						; size = 4
??$?0ABQAVWindow@CEGUI@@$0A@@?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@ABQAVWindow@CEGUI@@@Z PROC ; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &><CEGUI::Window * const &,0>, COMDAT
; _this$ = ecx

; 386  : 		{	// construct from one or more copied elements

	npad	2
	push	ebp
	mov	ebp, esp

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR __This_arg$[ebp]
	mov	DWORD PTR [ecx], eax

; 387  : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0ABQAVWindow@CEGUI@@$0A@@?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@ABQAVWindow@CEGUI@@@Z ENDP ; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &><CEGUI::Window * const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
__Node$ = 24						; size = 4
??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>, COMDAT
; _this$ = ecx

; 1843 : 		{	// add node with value next to _Wherenode, to left if _Addleft

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1844 : 		if (max_size() - 1 <= this->_Mysize())

	mov	eax, DWORD PTR [edi+4]
	cmp	eax, 178956969				; 0aaaaaa9H
	jb	SHORT $LN5@Insert_at

; 1845 : 			{	// tree would get too big, fail
; 1846 : 			_Destroy_if_not_nil(_Node);

	push	DWORD PTR __Node$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Destroy_if_not_nil

; 1847 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN688@Insert_at:
$LN5@Insert_at:

; 1848 : 			}
; 1849 : 		_Nodeptr _Newnode = _Buynode_if_nil(_Node,
; 1850 : 			_STD forward<_Valty>(_Val));
; 1851 : 
; 1852 : 		++this->_Mysize();
; 1853 : 		_Newnode->_Parent = _Wherenode;

	mov	ebx, DWORD PTR __Node$[ebp]
	inc	eax
	mov	DWORD PTR [edi+4], eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [ebx+4], eax

; 1854 : 
; 1855 : 		if (_Wherenode == this->_Myhead())

	mov	ecx, DWORD PTR [edi]
	cmp	eax, ecx
	jne	SHORT $LN6@Insert_at

; 1856 : 			{	// first node in tree, just set head values
; 1857 : 			_Root() = _Newnode;

	mov	DWORD PTR [ecx+4], ebx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edi]

; 1858 : 			_Lmost() = _Newnode;

	mov	DWORD PTR [eax], ebx

; 1859 : 			_Rmost() = _Newnode;

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax+8], ebx
	jmp	SHORT $LN11@Insert_at
$LN6@Insert_at:

; 1860 : 			}
; 1861 : 		else if (_Addleft)

	cmp	BYTE PTR __Addleft$[ebp], 0
	je	SHORT $LN8@Insert_at

; 1862 : 			{	// add to left of _Wherenode
; 1863 : 			this->_Left(_Wherenode) = _Newnode;

	mov	DWORD PTR [eax], ebx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	ecx, DWORD PTR [edi]

; 1864 : 			if (_Wherenode == _Lmost())

	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN11@Insert_at

; 1865 : 				_Lmost() = _Newnode;

	mov	DWORD PTR [ecx], ebx

; 1866 : 			}
; 1867 : 		else

	jmp	SHORT $LN11@Insert_at
$LN8@Insert_at:

; 1868 : 			{	// add to right of _Wherenode
; 1869 : 			this->_Right(_Wherenode) = _Newnode;

	mov	DWORD PTR [eax+8], ebx

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	ecx, DWORD PTR [edi]

; 1870 : 			if (_Wherenode == _Rmost())

	cmp	eax, DWORD PTR [ecx+8]
	jne	SHORT $LN11@Insert_at

; 1871 : 				_Rmost() = _Newnode;

	mov	DWORD PTR [ecx+8], ebx
$LN11@Insert_at:

; 1872 : 			}
; 1873 : 
; 1874 : 		for (_Nodeptr _Pnode = _Newnode;
; 1875 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR [ebx+4]
	mov	esi, ebx
	cmp	BYTE PTR [eax+12], 0
	jne	$LN3@Insert_at
$LL2@Insert_at:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [esi+4]

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	edx, DWORD PTR [eax+4]

; 1876 : 			if (this->_Parent(_Pnode)
; 1877 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	ecx, DWORD PTR [edx]
	cmp	eax, ecx
	jne	SHORT $LN12@Insert_at

; 1878 : 				{	// fixup red-red in left subtree
; 1879 : 				_Wherenode =

	mov	ecx, DWORD PTR [edx+8]

; 1880 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));
; 1881 : 				if (this->_Color(_Wherenode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	je	SHORT $LN686@Insert_at

; 1882 : 					{	// parent has two red children, blacken both
; 1883 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1884 : 					this->_Color(_Wherenode) = this->_Black;
; 1885 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1886 : 						= this->_Red;
; 1887 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1888 : 					}
; 1889 : 				else
; 1890 : 					{	// parent has red and black children
; 1891 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LN16@Insert_at

; 1892 : 						{	// rotate right child to left
; 1893 : 						_Pnode = this->_Parent(_Pnode);

	mov	esi, eax

; 1894 : 						_Lrotate(_Pnode);

	mov	ecx, edi
	push	esi
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lrotate
$LN16@Insert_at:

; 1895 : 						}
; 1896 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+12], 1

; 1897 : 						this->_Black;	// propagate red up
; 1898 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1899 : 						this->_Red;
; 1900 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]

; 2128 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	edx, DWORD PTR [ecx]

; 2129 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx+8]

; 2131 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN330@Insert_at

; 2132 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], ecx
$LN330@Insert_at:

; 2133 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 2135 : 		if (_Wherenode == _Root())

	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN331@Insert_at

; 2136 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	$LN685@Insert_at
$LN331@Insert_at:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ecx+4]

; 2137 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN333@Insert_at

; 2138 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	$LN685@Insert_at
$LN333@Insert_at:

; 2140 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	SHORT $LN685@Insert_at
$LN12@Insert_at:

; 1904 : 				{	// fixup red-red in right subtree
; 1905 : 				_Wherenode =
; 1906 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));
; 1907 : 				if (this->_Color(_Wherenode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN17@Insert_at
$LN686@Insert_at:

; 1908 : 					{	// parent has two red children, blacken both
; 1909 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	BYTE PTR [eax+12], 1

; 1910 : 					this->_Color(_Wherenode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1911 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1912 : 						this->_Red;
; 1913 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR [esi+4]
	mov	esi, DWORD PTR [eax+4]

; 1914 : 					}
; 1915 : 				else

	jmp	SHORT $LN18@Insert_at
$LN17@Insert_at:

; 1916 : 					{	// parent has red and black children
; 1917 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN19@Insert_at

; 1918 : 						{	// rotate left child to right
; 1919 : 						_Pnode = this->_Parent(_Pnode);

	mov	esi, eax

; 1920 : 						_Rrotate(_Pnode);

	mov	ecx, edi
	push	esi
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rrotate
$LN19@Insert_at:

; 1921 : 						}
; 1922 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+12], 1

; 1923 : 						this->_Black;	// propagate red up
; 1924 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1925 : 						this->_Red;
; 1926 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]

; 2098 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	edx, DWORD PTR [ecx+8]

; 2099 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 2101 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN529@Insert_at

; 2102 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], ecx
$LN529@Insert_at:

; 2103 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 2105 : 		if (_Wherenode == _Root())

	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN530@Insert_at

; 2106 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], edx

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	jmp	SHORT $LN533@Insert_at
$LN530@Insert_at:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx+4]

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN532@Insert_at

; 2108 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], edx

; 2109 : 		else

	jmp	SHORT $LN533@Insert_at
$LN532@Insert_at:

; 2110 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], edx
$LN533@Insert_at:

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx], ecx
$LN685@Insert_at:

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [ecx+4], edx
$LN18@Insert_at:

; 1872 : 			}
; 1873 : 
; 1874 : 		for (_Nodeptr _Pnode = _Newnode;
; 1875 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+12], 0
	je	$LL2@Insert_at
$LN3@Insert_at:

; 1927 : 					}
; 1928 : 				}
; 1929 : 
; 1930 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 1

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ebx
	pop	ebx

; 1931 : 		return (iterator(_Newnode, _STD addressof(this->_Get_data())));
; 1932 : 		}

	pop	ebp
	ret	20					; 00000014H
$LN687@Insert_at:
??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z PROC ; std::forward<std::pair<CEGUI::Window * const,SK_PopupWindow *> &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z ENDP ; std::forward<std::pair<CEGUI::Window * const,SK_PopupWindow *> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN13@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN13@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1098 : 		}

	pop	ebp
	ret	8
??$construct@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::pair<CEGUI::Window * const,SK_PopupWindow *>,std::pair<CEGUI::Window *,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Insert_at@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
__Node$ = 24						; size = 4
??$_Insert_at@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@1@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_at<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>, COMDAT
; _this$ = ecx

; 1843 : 		{	// add node with value next to _Wherenode, to left if _Addleft

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1844 : 		if (max_size() - 1 <= this->_Mysize())

	mov	eax, DWORD PTR [edi+4]
	cmp	eax, 178956969				; 0aaaaaa9H
	jb	SHORT $LN5@Insert_at

; 1845 : 			{	// tree would get too big, fail
; 1846 : 			_Destroy_if_not_nil(_Node);

	push	DWORD PTR __Node$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Destroy_if_not_nil

; 1847 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN688@Insert_at:
$LN5@Insert_at:

; 1848 : 			}
; 1849 : 		_Nodeptr _Newnode = _Buynode_if_nil(_Node,
; 1850 : 			_STD forward<_Valty>(_Val));
; 1851 : 
; 1852 : 		++this->_Mysize();
; 1853 : 		_Newnode->_Parent = _Wherenode;

	mov	ebx, DWORD PTR __Node$[ebp]
	inc	eax
	mov	DWORD PTR [edi+4], eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [ebx+4], eax

; 1854 : 
; 1855 : 		if (_Wherenode == this->_Myhead())

	mov	ecx, DWORD PTR [edi]
	cmp	eax, ecx
	jne	SHORT $LN6@Insert_at

; 1856 : 			{	// first node in tree, just set head values
; 1857 : 			_Root() = _Newnode;

	mov	DWORD PTR [ecx+4], ebx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edi]

; 1858 : 			_Lmost() = _Newnode;

	mov	DWORD PTR [eax], ebx

; 1859 : 			_Rmost() = _Newnode;

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax+8], ebx
	jmp	SHORT $LN11@Insert_at
$LN6@Insert_at:

; 1860 : 			}
; 1861 : 		else if (_Addleft)

	cmp	BYTE PTR __Addleft$[ebp], 0
	je	SHORT $LN8@Insert_at

; 1862 : 			{	// add to left of _Wherenode
; 1863 : 			this->_Left(_Wherenode) = _Newnode;

	mov	DWORD PTR [eax], ebx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	ecx, DWORD PTR [edi]

; 1864 : 			if (_Wherenode == _Lmost())

	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN11@Insert_at

; 1865 : 				_Lmost() = _Newnode;

	mov	DWORD PTR [ecx], ebx

; 1866 : 			}
; 1867 : 		else

	jmp	SHORT $LN11@Insert_at
$LN8@Insert_at:

; 1868 : 			{	// add to right of _Wherenode
; 1869 : 			this->_Right(_Wherenode) = _Newnode;

	mov	DWORD PTR [eax+8], ebx

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	ecx, DWORD PTR [edi]

; 1870 : 			if (_Wherenode == _Rmost())

	cmp	eax, DWORD PTR [ecx+8]
	jne	SHORT $LN11@Insert_at

; 1871 : 				_Rmost() = _Newnode;

	mov	DWORD PTR [ecx+8], ebx
$LN11@Insert_at:

; 1872 : 			}
; 1873 : 
; 1874 : 		for (_Nodeptr _Pnode = _Newnode;
; 1875 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR [ebx+4]
	mov	esi, ebx
	cmp	BYTE PTR [eax+12], 0
	jne	$LN3@Insert_at
$LL2@Insert_at:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [esi+4]

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	edx, DWORD PTR [eax+4]

; 1876 : 			if (this->_Parent(_Pnode)
; 1877 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	ecx, DWORD PTR [edx]
	cmp	eax, ecx
	jne	SHORT $LN12@Insert_at

; 1878 : 				{	// fixup red-red in left subtree
; 1879 : 				_Wherenode =

	mov	ecx, DWORD PTR [edx+8]

; 1880 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));
; 1881 : 				if (this->_Color(_Wherenode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	je	SHORT $LN686@Insert_at

; 1882 : 					{	// parent has two red children, blacken both
; 1883 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1884 : 					this->_Color(_Wherenode) = this->_Black;
; 1885 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1886 : 						= this->_Red;
; 1887 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1888 : 					}
; 1889 : 				else
; 1890 : 					{	// parent has red and black children
; 1891 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LN16@Insert_at

; 1892 : 						{	// rotate right child to left
; 1893 : 						_Pnode = this->_Parent(_Pnode);

	mov	esi, eax

; 1894 : 						_Lrotate(_Pnode);

	mov	ecx, edi
	push	esi
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lrotate
$LN16@Insert_at:

; 1895 : 						}
; 1896 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+12], 1

; 1897 : 						this->_Black;	// propagate red up
; 1898 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1899 : 						this->_Red;
; 1900 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]

; 2128 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	edx, DWORD PTR [ecx]

; 2129 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx+8]

; 2131 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN330@Insert_at

; 2132 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], ecx
$LN330@Insert_at:

; 2133 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 2135 : 		if (_Wherenode == _Root())

	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN331@Insert_at

; 2136 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	$LN685@Insert_at
$LN331@Insert_at:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ecx+4]

; 2137 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN333@Insert_at

; 2138 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	$LN685@Insert_at
$LN333@Insert_at:

; 2140 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	SHORT $LN685@Insert_at
$LN12@Insert_at:

; 1904 : 				{	// fixup red-red in right subtree
; 1905 : 				_Wherenode =
; 1906 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));
; 1907 : 				if (this->_Color(_Wherenode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN17@Insert_at
$LN686@Insert_at:

; 1908 : 					{	// parent has two red children, blacken both
; 1909 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	BYTE PTR [eax+12], 1

; 1910 : 					this->_Color(_Wherenode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1911 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1912 : 						this->_Red;
; 1913 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR [esi+4]
	mov	esi, DWORD PTR [eax+4]

; 1914 : 					}
; 1915 : 				else

	jmp	SHORT $LN18@Insert_at
$LN17@Insert_at:

; 1916 : 					{	// parent has red and black children
; 1917 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN19@Insert_at

; 1918 : 						{	// rotate left child to right
; 1919 : 						_Pnode = this->_Parent(_Pnode);

	mov	esi, eax

; 1920 : 						_Rrotate(_Pnode);

	mov	ecx, edi
	push	esi
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rrotate
$LN19@Insert_at:

; 1921 : 						}
; 1922 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+12], 1

; 1923 : 						this->_Black;	// propagate red up
; 1924 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1925 : 						this->_Red;
; 1926 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]

; 2098 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	edx, DWORD PTR [ecx+8]

; 2099 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 2101 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN529@Insert_at

; 2102 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], ecx
$LN529@Insert_at:

; 2103 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 2105 : 		if (_Wherenode == _Root())

	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN530@Insert_at

; 2106 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], edx

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	jmp	SHORT $LN533@Insert_at
$LN530@Insert_at:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx+4]

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN532@Insert_at

; 2108 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], edx

; 2109 : 		else

	jmp	SHORT $LN533@Insert_at
$LN532@Insert_at:

; 2110 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], edx
$LN533@Insert_at:

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx], ecx
$LN685@Insert_at:

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [ecx+4], edx
$LN18@Insert_at:

; 1872 : 			}
; 1873 : 
; 1874 : 		for (_Nodeptr _Pnode = _Newnode;
; 1875 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+12], 0
	je	$LL2@Insert_at
$LN3@Insert_at:

; 1927 : 					}
; 1928 : 				}
; 1929 : 
; 1930 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 1

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ebx
	pop	ebx

; 1931 : 		return (iterator(_Newnode, _STD addressof(this->_Get_data())));
; 1932 : 		}

	pop	ebp
	ret	20					; 00000014H
$LN687@Insert_at:
??$_Insert_at@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@1@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_at<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z PROC ; std::forward<std::pair<SK_PopupWindow * const,CEGUI::Window *> &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z ENDP ; std::forward<std::pair<SK_PopupWindow * const,CEGUI::Window *> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN13@construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN13@construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1098 : 		}

	pop	ebp
	ret	8
??$construct@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::pair<SK_PopupWindow * const,CEGUI::Window *>,std::pair<SK_PopupWindow *,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Lbound@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??$_Lbound@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABQAVWindow@CEGUI@@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lbound<CEGUI::Window *>, COMDAT
; _this$ = ecx

; 2075 : 		{	// find leftmost node not less than _Keyval

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	edx, DWORD PTR [ecx]

; 2076 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [edx+4]

; 2077 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails
; 2078 : 
; 2079 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN72@Lbound
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	ecx, DWORD PTR __Keyval$[ebp]
	mov	ecx, DWORD PTR [ecx]
$LL2@Lbound:
	cmp	DWORD PTR [eax+16], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2080 : 			if (_Compare(this->_Key(_Pnode), _Keyval))

	jae	SHORT $LN4@Lbound

; 2081 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR [eax+8]

; 2082 : 			else

	jmp	SHORT $LN5@Lbound
$LN4@Lbound:

; 2083 : 				{	// _Pnode not less than _Keyval, remember it
; 2084 : 				_Wherenode = _Pnode;

	mov	edx, eax

; 2085 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR [eax]
$LN5@Lbound:

; 2077 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails
; 2078 : 
; 2079 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Lbound
$LN72@Lbound:

; 2086 : 				}
; 2087 : 
; 2088 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, edx

; 2089 : 		}

	pop	ebp
	ret	4
??$_Lbound@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABQAVWindow@CEGUI@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lbound<CEGUI::Window *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
_<_Val_1>$ = 20						; size = 4
_<_Val_2>$ = 24						; size = 4
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1091 : 		{	// insert value_type(_Val...) at _Where

	npad	2
	push	ebp
	mov	ebp, esp
	push	edi

; 1092 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	push	DWORD PTR _<_Val_2>$[ebp]
	mov	edi, ecx
	push	DWORD PTR _<_Val_1>$[ebp]
	push	DWORD PTR _<_Val_0>$[ebp]
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >

; 1093 : 		return (_Insert_hint(_Where,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1093 : 		return (_Insert_hint(_Where,

	mov	ecx, edi
	push	eax
	push	DWORD PTR __Where$[ebp]
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_hint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi

; 1094 : 			this->_Myval(_Newnode), _Newnode));
; 1095 : 		}

	pop	ebp
	ret	20					; 00000014H
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ PROC	; std::forward_as_tuple<>, COMDAT

; 911  : 	{	// forward arguments in a tuple

	npad	2
	push	ebp
	mov	ebp, esp

; 912  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 913  : 	}

	pop	ebp
	ret	0
??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ ENDP	; std::forward_as_tuple<>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
;	COMDAT ??0?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@$$QAV01@@Z PROC	; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &>, COMDAT
; _this$ = ecx

; 264  : }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??0?$tuple@ABQAVWindow@CEGUI@@@std@@QAE@$$QAV01@@Z ENDP	; std::tuple<CEGUI::Window * const &>::tuple<CEGUI::Window * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??$forward_as_tuple@ABQAVWindow@CEGUI@@@std@@YA?AV?$tuple@ABQAVWindow@CEGUI@@@0@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$forward_as_tuple@ABQAVWindow@CEGUI@@@std@@YA?AV?$tuple@ABQAVWindow@CEGUI@@@0@ABQAVWindow@CEGUI@@@Z PROC ; std::forward_as_tuple<CEGUI::Window * const &>, COMDAT

; 911  : 	{	// forward arguments in a tuple

	npad	2
	push	ebp
	mov	ebp, esp

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	DWORD PTR [eax], ecx

; 912  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));
; 913  : 	}

	pop	ebp
	ret	0
??$forward_as_tuple@ABQAVWindow@CEGUI@@@std@@YA?AV?$tuple@ABQAVWindow@CEGUI@@@0@ABQAVWindow@CEGUI@@@Z ENDP ; std::forward_as_tuple<CEGUI::Window * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABQAVWindow@CEGUI@@@std@@YAABQAVWindow@CEGUI@@ABQAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVWindow@CEGUI@@@std@@YAABQAVWindow@CEGUI@@ABQAV12@@Z PROC ; std::forward<CEGUI::Window * const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABQAVWindow@CEGUI@@@std@@YAABQAVWindow@CEGUI@@ABQAV12@@Z ENDP ; std::forward<CEGUI::Window * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Addleft$2 = -20					; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
$T3 = 12						; size = 4
__Where$4 = 12						; size = 4
__Leftish$ = 12						; size = 1
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_nohint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>, COMDAT
; _this$ = ecx

; 1784 : 		{	// try to insert node, on left if _Leftish

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	edx, DWORD PTR [ecx]

; 1784 : 		{	// try to insert node, on left if _Leftish

	push	ebx
	mov	ebx, DWORD PTR __Val$[ebp]
	push	esi

; 1785 : 		_TRY_BEGIN
; 1786 : 		_Nodeptr _Trynode = _Root();

	mov	eax, DWORD PTR [edx+4]
	push	edi

; 1787 : 		_Nodeptr _Wherenode = this->_Myhead();

	mov	edi, edx
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1788 : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	dl, 1
	mov	DWORD PTR _this$[ebp], ecx

; 1789 : 
; 1790 : 		while (!this->_Isnil(_Trynode))

	cmp	BYTE PTR [eax+13], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	BYTE PTR __Addleft$2[ebp], dl
	jne	SHORT $LN3@Insert_noh
	mov	ecx, DWORD PTR [ebx]
	mov	dh, BYTE PTR __Leftish$[ebp]
$LL2@Insert_noh:

; 1791 : 			{	// look for leaf to insert before (_Addleft) or after
; 1792 : 			_Wherenode = _Trynode;

	mov	edi, eax

; 1793 : 			if (_Leftish)

	test	dh, dh
	je	SHORT $LN5@Insert_noh
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	DWORD PTR [eax+16], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1794 : 				_Addleft = !_DEBUG_LT_PRED(this->_Getcomp(),

	setae	dl

; 1795 : 					this->_Key(_Trynode),
; 1796 : 					this->_Kfn(_Val));	// favor left end
; 1797 : 			else

	jmp	SHORT $LN282@Insert_noh
$LN5@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	ecx, DWORD PTR [eax+16]
	setb	dl
$LN282@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1798 : 				_Addleft = _DEBUG_LT_PRED(this->_Getcomp(),

	mov	BYTE PTR __Addleft$2[ebp], dl

; 1799 : 					this->_Kfn(_Val),
; 1800 : 					this->_Key(_Trynode));	// favor right end
; 1801 : 			_Trynode = _Addleft ? this->_Left(_Trynode)

	test	dl, dl
	je	SHORT $LN16@Insert_noh
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN17@Insert_noh
$LN16@Insert_noh:
	mov	eax, DWORD PTR [eax+8]
$LN17@Insert_noh:

; 1789 : 
; 1790 : 		while (!this->_Isnil(_Trynode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Insert_noh
	mov	ecx, DWORD PTR _this$[ebp]
$LN3@Insert_noh:

; 43   : 		: _Ptr(_Pnode)

	mov	esi, edi
	mov	DWORD PTR __Where$4[ebp], esi

; 1802 : 				: this->_Right(_Trynode);
; 1803 : 			}
; 1804 : 
; 1805 : #pragma warning(push)
; 1806 : #pragma warning(disable: 4127)	// conditional expression is constant
; 1807 : 		if (this->_Multi)
; 1808 : 			return (_Pairib(_Insert_at(_Addleft, _Wherenode,
; 1809 : 				_STD forward<_Valty>(_Val), _Newnode), true));
; 1810 : 		else
; 1811 : 			{	// insert only if unique
; 1812 : 			iterator _Where = iterator(_Wherenode, _STD addressof(this->_Get_data()));
; 1813 : 			if (!_Addleft)

	test	dl, dl
	je	SHORT $LN12@Insert_noh

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [ecx]
	cmp	edi, DWORD PTR [eax]

; 1814 : 				;	// need to test if insert after is okay
; 1815 : 			else if (_Where == begin())

	jne	SHORT $LN11@Insert_noh

; 1816 : 				return (_Pairib(_Insert_at(true, _Wherenode,

	push	DWORD PTR __Newnode$[ebp]
	push	ebx
	push	edi
	push	1
$LN284@Insert_noh:
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??$_Insert_at@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@1@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_at<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN11@Insert_noh:

; 306  : 		--static_cast<_Mybase&>(*this);

	lea	ecx, DWORD PTR __Where$4[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator--
	mov	esi, DWORD PTR __Where$4[ebp]
$LN12@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	eax, DWORD PTR [esi+16]
	cmp	eax, DWORD PTR [ebx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1821 : 			if (_DEBUG_LT_PRED(this->_Getcomp(),

	jae	SHORT $LN13@Insert_noh

; 1822 : 				this->_Key(_Where._Mynode()),
; 1823 : 				this->_Kfn(_Val)))
; 1824 : 				return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	push	DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ebx
	push	edi
	push	DWORD PTR __Addleft$2[ebp]
	jmp	SHORT $LN284@Insert_noh
__catch$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z$0:

; 1825 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1826 : 			else
; 1827 : 				{	// duplicate, don't insert
; 1828 : 				_Destroy_if_not_nil(_Newnode);
; 1829 : 				return (_Pairib(_Where, false));
; 1830 : 				}
; 1831 : 			}
; 1832 : #pragma warning(pop)
; 1833 : 		_CATCH_ALL
; 1834 : 		_Destroy_if_not_nil(_Newnode);

	push	DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Destroy_if_not_nil

; 1835 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN285@Insert_noh:
$LN13@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR __Newnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN281@Insert_noh:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_nohint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Buynode@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$_Buynode@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::pair<CEGUI::Window *,SK_PopupWindow *> >, COMDAT
; _this$ = ecx

; 895  : 		{	// allocate a node with defaults and set links and value

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 896  : 		_Nodeptr _Pnode = _Buynode0();

	call	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode0
	mov	edx, eax

; 596  : 		return ((reference)_Pnode->_Myval);

	lea	esi, DWORD PTR [edx+16]

; 897  : 
; 898  : 		this->_Color(_Pnode) = _Red;

	mov	WORD PTR [edx+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	esi, esi
	je	SHORT $LN47@Buynode
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 910  : 		return (_Pnode);

	mov	eax, edx
$LN47@Buynode:
	pop	esi

; 911  : 		}

	pop	ebp
	ret	4
??$_Buynode@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::pair<CEGUI::Window *,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Addleft$2 = -20					; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
$T3 = 12						; size = 4
__Where$4 = 12						; size = 4
__Leftish$ = 12						; size = 1
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_nohint<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>, COMDAT
; _this$ = ecx

; 1784 : 		{	// try to insert node, on left if _Leftish

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	edx, DWORD PTR [ecx]

; 1784 : 		{	// try to insert node, on left if _Leftish

	push	ebx
	mov	ebx, DWORD PTR __Val$[ebp]
	push	esi

; 1785 : 		_TRY_BEGIN
; 1786 : 		_Nodeptr _Trynode = _Root();

	mov	eax, DWORD PTR [edx+4]
	push	edi

; 1787 : 		_Nodeptr _Wherenode = this->_Myhead();

	mov	edi, edx
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1788 : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	dl, 1
	mov	DWORD PTR _this$[ebp], ecx

; 1789 : 
; 1790 : 		while (!this->_Isnil(_Trynode))

	cmp	BYTE PTR [eax+13], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	BYTE PTR __Addleft$2[ebp], dl
	jne	SHORT $LN3@Insert_noh
	mov	ecx, DWORD PTR [ebx]
	mov	dh, BYTE PTR __Leftish$[ebp]
$LL2@Insert_noh:

; 1791 : 			{	// look for leaf to insert before (_Addleft) or after
; 1792 : 			_Wherenode = _Trynode;

	mov	edi, eax

; 1793 : 			if (_Leftish)

	test	dh, dh
	je	SHORT $LN5@Insert_noh
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	DWORD PTR [eax+16], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1794 : 				_Addleft = !_DEBUG_LT_PRED(this->_Getcomp(),

	setae	dl

; 1795 : 					this->_Key(_Trynode),
; 1796 : 					this->_Kfn(_Val));	// favor left end
; 1797 : 			else

	jmp	SHORT $LN282@Insert_noh
$LN5@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	ecx, DWORD PTR [eax+16]
	setb	dl
$LN282@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1798 : 				_Addleft = _DEBUG_LT_PRED(this->_Getcomp(),

	mov	BYTE PTR __Addleft$2[ebp], dl

; 1799 : 					this->_Kfn(_Val),
; 1800 : 					this->_Key(_Trynode));	// favor right end
; 1801 : 			_Trynode = _Addleft ? this->_Left(_Trynode)

	test	dl, dl
	je	SHORT $LN16@Insert_noh
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN17@Insert_noh
$LN16@Insert_noh:
	mov	eax, DWORD PTR [eax+8]
$LN17@Insert_noh:

; 1789 : 
; 1790 : 		while (!this->_Isnil(_Trynode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Insert_noh
	mov	ecx, DWORD PTR _this$[ebp]
$LN3@Insert_noh:

; 43   : 		: _Ptr(_Pnode)

	mov	esi, edi
	mov	DWORD PTR __Where$4[ebp], esi

; 1802 : 				: this->_Right(_Trynode);
; 1803 : 			}
; 1804 : 
; 1805 : #pragma warning(push)
; 1806 : #pragma warning(disable: 4127)	// conditional expression is constant
; 1807 : 		if (this->_Multi)
; 1808 : 			return (_Pairib(_Insert_at(_Addleft, _Wherenode,
; 1809 : 				_STD forward<_Valty>(_Val), _Newnode), true));
; 1810 : 		else
; 1811 : 			{	// insert only if unique
; 1812 : 			iterator _Where = iterator(_Wherenode, _STD addressof(this->_Get_data()));
; 1813 : 			if (!_Addleft)

	test	dl, dl
	je	SHORT $LN12@Insert_noh

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [ecx]
	cmp	edi, DWORD PTR [eax]

; 1814 : 				;	// need to test if insert after is okay
; 1815 : 			else if (_Where == begin())

	jne	SHORT $LN11@Insert_noh

; 1816 : 				return (_Pairib(_Insert_at(true, _Wherenode,

	push	DWORD PTR __Newnode$[ebp]
	push	ebx
	push	edi
	push	1
$LN284@Insert_noh:
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??$_Insert_at@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@1@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_at<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN11@Insert_noh:

; 306  : 		--static_cast<_Mybase&>(*this);

	lea	ecx, DWORD PTR __Where$4[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator--
	mov	esi, DWORD PTR __Where$4[ebp]
$LN12@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	eax, DWORD PTR [esi+16]
	cmp	eax, DWORD PTR [ebx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1821 : 			if (_DEBUG_LT_PRED(this->_Getcomp(),

	jae	SHORT $LN13@Insert_noh

; 1822 : 				this->_Key(_Where._Mynode()),
; 1823 : 				this->_Kfn(_Val)))
; 1824 : 				return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	push	DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ebx
	push	edi
	push	DWORD PTR __Addleft$2[ebp]
	jmp	SHORT $LN284@Insert_noh
__catch$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z$0:

; 1825 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1826 : 			else
; 1827 : 				{	// duplicate, don't insert
; 1828 : 				_Destroy_if_not_nil(_Newnode);
; 1829 : 				return (_Pairib(_Where, false));
; 1830 : 				}
; 1831 : 			}
; 1832 : #pragma warning(pop)
; 1833 : 		_CATCH_ALL
; 1834 : 		_Destroy_if_not_nil(_Newnode);

	push	DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Destroy_if_not_nil

; 1835 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN285@Insert_noh:
$LN13@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR __Newnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN281@Insert_noh:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_nohint<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Buynode@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$_Buynode@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode<std::pair<SK_PopupWindow *,CEGUI::Window *> >, COMDAT
; _this$ = ecx

; 895  : 		{	// allocate a node with defaults and set links and value

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 896  : 		_Nodeptr _Pnode = _Buynode0();

	call	?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode0
	mov	edx, eax

; 596  : 		return ((reference)_Pnode->_Myval);

	lea	esi, DWORD PTR [edx+16]

; 897  : 
; 898  : 		this->_Color(_Pnode) = _Red;

	mov	WORD PTR [edx+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	esi, esi
	je	SHORT $LN47@Buynode
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 910  : 		return (_Pnode);

	mov	eax, edx
$LN47@Buynode:
	pop	esi

; 911  : 		}

	pop	ebp
	ret	4
??$_Buynode@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode<std::pair<SK_PopupWindow *,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??$_Kfn@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@SAABQAVSK_PopupWindow@@ABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@SAABQAVSK_PopupWindow@@ABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0>::_Kfn<SK_PopupWindow * const,CEGUI::Window *>, COMDAT

; 62   : 		{	// extract key from element value

	npad	2
	push	ebp
	mov	ebp, esp

; 63   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 64   : 		}

	pop	ebp
	ret	0
??$_Kfn@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@SAABQAVSK_PopupWindow@@ABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0>::_Kfn<SK_PopupWindow * const,CEGUI::Window *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??$_Kfn@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@SAABQAVWindow@CEGUI@@ABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@SAABQAVWindow@CEGUI@@ABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0>::_Kfn<CEGUI::Window * const,SK_PopupWindow *>, COMDAT

; 62   : 		{	// extract key from element value

	npad	2
	push	ebp
	mov	ebp, esp

; 63   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 64   : 		}

	pop	ebp
	ret	0
??$_Kfn@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@SAABQAVWindow@CEGUI@@ABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0>::_Kfn<CEGUI::Window * const,SK_PopupWindow *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 561  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABU?$less@PAVSK_PopupWindow@@@std@@@std@@YAABU?$less@PAVSK_PopupWindow@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@PAVSK_PopupWindow@@@std@@@std@@YAABU?$less@PAVSK_PopupWindow@@@0@ABU10@@Z PROC ; std::forward<std::less<SK_PopupWindow *> const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABU?$less@PAVSK_PopupWindow@@@std@@@std@@YAABU?$less@PAVSK_PopupWindow@@@0@ABU10@@Z ENDP ; std::forward<std::less<SK_PopupWindow *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAD@std@@YA$$QADAAD@Z PROC			; std::move<char &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAD@std@@YA$$QADAAD@Z ENDP			; std::move<char &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 561  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_Zero_then_variadic_args_t>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABU?$less@PAVWindow@CEGUI@@@std@@@std@@YAABU?$less@PAVWindow@CEGUI@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@PAVWindow@CEGUI@@@std@@@std@@YAABU?$less@PAVWindow@CEGUI@@@0@ABU10@@Z PROC ; std::forward<std::less<CEGUI::Window *> const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABU?$less@PAVWindow@CEGUI@@@std@@@std@@YAABU?$less@PAVWindow@CEGUI@@@0@ABU10@@Z ENDP ; std::forward<std::less<CEGUI::Window *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > &,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@1@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > &,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@1@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >, COMDAT

; 1094 : 	{	// return distance between iterators; input

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN58@Distance1
$LL16@Distance1:

; 1097 : 		++_Off;

	inc	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN51@Distance1

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN48@Distance1

; 63   : 			_Ptr = _Mytree::_Min(

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN28@Distance1
	npad	4
$LL27@Distance1:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL27@Distance1

; 65   : 		else

	jmp	SHORT $LN28@Distance1
$LN48@Distance1:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN59@Distance1
$LL11@Distance1:
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN59@Distance1

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, edx
	mov	DWORD PTR __First$[ebp], eax
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL11@Distance1
$LN59@Distance1:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	eax, edx
$LN28@Distance1:
	mov	DWORD PTR __First$[ebp], eax
$LN51@Distance1:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL16@Distance1
$LN58@Distance1:

; 1098 : 
; 1099 : 	return (_Off);

	mov	eax, esi
	pop	esi

; 1100 : 	}

	pop	ebp
	ret	0
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >, COMDAT

; 1094 : 	{	// return distance between iterators; input

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN56@Distance1
$LL14@Distance1:

; 1097 : 		++_Off;

	inc	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN49@Distance1

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN46@Distance1

; 63   : 			_Ptr = _Mytree::_Min(

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN26@Distance1
	npad	4
$LL25@Distance1:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL25@Distance1

; 65   : 		else

	jmp	SHORT $LN26@Distance1
$LN46@Distance1:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN57@Distance1
$LL9@Distance1:
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN57@Distance1

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, edx
	mov	DWORD PTR __First$[ebp], eax
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL9@Distance1
$LN57@Distance1:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	eax, edx
$LN26@Distance1:
	mov	DWORD PTR __First$[ebp], eax
$LN49@Distance1:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL14@Distance1
$LN56@Distance1:

; 1098 : 
; 1099 : 	return (_Off);

	mov	eax, esi
	pop	esi

; 1100 : 	}

	pop	ebp
	ret	0
??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??$_Try_emplace@ABQAVWindow@CEGUI@@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
$T2 = 12						; size = 4
__Keyval$ = 12						; size = 4
$T3 = 15						; size = 1
??$_Try_emplace@ABQAVWindow@CEGUI@@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z PROC ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Try_emplace<CEGUI::Window * const &>, COMDAT
; _this$ = ecx

; 216  : 		{	// fail if _Keyval present, else emplace

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2079 : 		while (!this->_Isnil(_Pnode))

	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	esi

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ebx]

; 2077 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails

	mov	esi, eax
	mov	edx, DWORD PTR [eax+4]

; 2079 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN22@Try_emplac
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	edi, DWORD PTR [ecx]
	npad	3
$LL21@Try_emplac:
	cmp	DWORD PTR [edx+16], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2080 : 			if (_Compare(this->_Key(_Pnode), _Keyval))

	jae	SHORT $LN23@Try_emplac

; 2081 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	edx, DWORD PTR [edx+8]

; 2082 : 			else

	jmp	SHORT $LN24@Try_emplac
$LN23@Try_emplac:

; 2083 : 				{	// _Pnode not less than _Keyval, remember it
; 2084 : 				_Wherenode = _Pnode;

	mov	esi, edx

; 2085 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	edx, DWORD PTR [edx]
$LN24@Try_emplac:

; 2079 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL21@Try_emplac
	pop	edi
$LN22@Try_emplac:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 219  : 			|| _DEBUG_LT_PRED(_Mybase::_Getcomp(),

	je	SHORT $LN4@Try_emplac
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 219  : 			|| _DEBUG_LT_PRED(_Mybase::_Getcomp(),

	jb	SHORT $LN4@Try_emplac
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], esi
	pop	esi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 231  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN4@Try_emplac:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1092 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	lea	eax, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple

; 164  : 		: _Val(_STD forward<_Other>(_Arg))

	mov	DWORD PTR $T1[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1092 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	mov	ecx, ebx
	push	eax
	push	OFFSET ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABQAVWindow@CEGUI@@@2@V?$tuple@$$V@2@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABQAVWindow@CEGUI@@@1@$$QAV?$tuple@$$V@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::piecewise_construct_t const &,std::tuple<CEGUI::Window * const &>,std::tuple<> >

; 1093 : 		return (_Insert_hint(_Where,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1093 : 		return (_Insert_hint(_Where,

	mov	ecx, ebx
	push	eax
	push	esi
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$_Insert_hint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@1@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_hint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 231  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Try_emplace@ABQAVWindow@CEGUI@@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z ENDP ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Try_emplace<CEGUI::Window * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >, COMDAT

; 1094 : 	{	// return distance between iterators; input

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN58@Distance1
$LL16@Distance1:

; 1097 : 		++_Off;

	inc	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN51@Distance1

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN48@Distance1

; 63   : 			_Ptr = _Mytree::_Min(

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN28@Distance1
	npad	4
$LL27@Distance1:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL27@Distance1

; 65   : 		else

	jmp	SHORT $LN28@Distance1
$LN48@Distance1:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN59@Distance1
$LL11@Distance1:
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN59@Distance1

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, edx
	mov	DWORD PTR __First$[ebp], eax
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL11@Distance1
$LN59@Distance1:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	eax, edx
$LN28@Distance1:
	mov	DWORD PTR __First$[ebp], eax
$LN51@Distance1:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL16@Distance1
$LN58@Distance1:

; 1098 : 
; 1099 : 	return (_Off);

	mov	eax, esi
	pop	esi

; 1100 : 	}

	pop	ebp
	ret	0
??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >, COMDAT

; 1094 : 	{	// return distance between iterators; input

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN56@Distance1
$LL14@Distance1:

; 1097 : 		++_Off;

	inc	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN49@Distance1

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN46@Distance1

; 63   : 			_Ptr = _Mytree::_Min(

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN26@Distance1
	npad	4
$LL25@Distance1:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL25@Distance1

; 65   : 		else

	jmp	SHORT $LN26@Distance1
$LN46@Distance1:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN57@Distance1
$LL9@Distance1:
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN57@Distance1

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, edx
	mov	DWORD PTR __First$[ebp], eax
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL9@Distance1
$LN57@Distance1:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	eax, edx
$LN26@Distance1:
	mov	DWORD PTR __First$[ebp], eax
$LN49@Distance1:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL14@Distance1
$LN56@Distance1:

; 1098 : 
; 1099 : 	return (_Off);

	mov	eax, esi
	pop	esi

; 1100 : 	}

	pop	ebp
	ret	0
??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\slotfunctorbase.h
;	COMDAT ??_G?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAEPAXI@Z PROC ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx

; 46   :     virtual ~SlotFunctorBase() {};

	mov	DWORD PTR [esi], OFFSET ??_7SlotFunctorBase@CEGUI@@6B@
	je	SHORT $LN10@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN10@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAEPAXI@Z ENDP ; CEGUI::MemberFunctionSlot<SK_PopupManager>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\slotfunctorbase.h
;	COMDAT ??1?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE@XZ
_TEXT	SEGMENT
??1?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE@XZ PROC ; CEGUI::MemberFunctionSlot<SK_PopupManager>::~MemberFunctionSlot<SK_PopupManager>, COMDAT
; _this$ = ecx

; 46   :     virtual ~SlotFunctorBase() {};

	mov	DWORD PTR [ecx], OFFSET ??_7SlotFunctorBase@CEGUI@@6B@
	ret	0
??1?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE@XZ ENDP ; CEGUI::MemberFunctionSlot<SK_PopupManager>::~MemberFunctionSlot<SK_PopupManager>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\memberfunctionslot.h
;	COMDAT ??R?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE_NABVEventArgs@1@@Z
_TEXT	SEGMENT
_args$ = 8						; size = 4
??R?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE_NABVEventArgs@1@@Z PROC ; CEGUI::MemberFunctionSlot<SK_PopupManager>::operator(), COMDAT
; _this$ = ecx

; 53   :     {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, ecx

; 54   :         return (d_object->*d_function)(args);

	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+4]

; 55   :     }

	pop	ebp

; 54   :         return (d_object->*d_function)(args);

	jmp	eax
??R?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@UAE_NABVEventArgs@1@@Z ENDP ; CEGUI::MemberFunctionSlot<SK_PopupManager>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\memberfunctionslot.h
;	COMDAT ??0?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@QAE@P8SK_PopupManager@@AE_NABVEventArgs@1@@ZPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
_obj$ = 12						; size = 4
??0?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@QAE@P8SK_PopupManager@@AE_NABVEventArgs@1@@ZPAV2@@Z PROC ; CEGUI::MemberFunctionSlot<SK_PopupManager>::MemberFunctionSlot<SK_PopupManager>, COMDAT
; _this$ = ecx

; 50   :     {}

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 48   :         d_function(func),

	mov	eax, DWORD PTR _func$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 49   :         d_object(obj)

	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 50   :     {}

	mov	eax, ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR [ecx], OFFSET ??_7?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@QAE@P8SK_PopupManager@@AE_NABVEventArgs@1@@ZPAV2@@Z ENDP ; CEGUI::MemberFunctionSlot<SK_PopupManager>::MemberFunctionSlot<SK_PopupManager>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$emplace@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Val_0>$ = 12						; size = 4
??$emplace@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::emplace<std::pair<CEGUI::Window *,SK_PopupWindow *> >, COMDAT
; _this$ = ecx

; 1083 : 		{	// try to insert value_type(_Val...), favoring right side

	npad	2
	push	ebp
	mov	ebp, esp
	push	edi

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	push	DWORD PTR _<_Val_0>$[ebp]
	mov	edi, ecx
	call	??$_Buynode@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::pair<CEGUI::Window *,SK_PopupWindow *> >

; 1085 : 		return (_Insert_nohint(false,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1085 : 		return (_Insert_nohint(false,

	mov	ecx, edi
	push	eax
	push	0
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_nohint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi

; 1086 : 			this->_Myval(_Newnode), _Newnode));
; 1087 : 		}

	pop	ebp
	ret	8
??$emplace@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::emplace<std::pair<CEGUI::Window *,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YA$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YA$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z PROC ; std::forward<std::pair<CEGUI::Window *,SK_PopupWindow *> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YA$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z ENDP ; std::forward<std::pair<CEGUI::Window *,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@X$0A@@?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@X$0A@@?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@Z PROC ; std::pair<CEGUI::Window *,SK_PopupWindow *>::pair<CEGUI::Window *,SK_PopupWindow *><CEGUI::Window * &,SK_PopupWindow * &,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@X$0A@@?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@Z ENDP ; std::pair<CEGUI::Window *,SK_PopupWindow *>::pair<CEGUI::Window *,SK_PopupWindow *><CEGUI::Window * &,SK_PopupWindow * &,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$emplace@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Val_0>$ = 12						; size = 4
??$emplace@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::emplace<std::pair<SK_PopupWindow *,CEGUI::Window *> >, COMDAT
; _this$ = ecx

; 1083 : 		{	// try to insert value_type(_Val...), favoring right side

	npad	2
	push	ebp
	mov	ebp, esp
	push	edi

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	push	DWORD PTR _<_Val_0>$[ebp]
	mov	edi, ecx
	call	??$_Buynode@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode<std::pair<SK_PopupWindow *,CEGUI::Window *> >

; 1085 : 		return (_Insert_nohint(false,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1085 : 		return (_Insert_nohint(false,

	mov	ecx, edi
	push	eax
	push	0
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_nohint<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi

; 1086 : 			this->_Myval(_Newnode), _Newnode));
; 1087 : 		}

	pop	ebp
	ret	8
??$emplace@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::emplace<std::pair<SK_PopupWindow *,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YA$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YA$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z PROC ; std::forward<std::pair<SK_PopupWindow *,CEGUI::Window *> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YA$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z ENDP ; std::forward<std::pair<SK_PopupWindow *,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@X$0A@@?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@QAE@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@X$0A@@?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@QAE@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@Z PROC ; std::pair<SK_PopupWindow *,CEGUI::Window *>::pair<SK_PopupWindow *,CEGUI::Window *><SK_PopupWindow * &,CEGUI::Window * &,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@X$0A@@?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@QAE@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@Z ENDP ; std::pair<SK_PopupWindow *,CEGUI::Window *>::pair<SK_PopupWindow *,CEGUI::Window *><SK_PopupWindow * &,CEGUI::Window * &,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAVWindow@CEGUI@@@std@@YAAAPAVWindow@CEGUI@@AAPAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVWindow@CEGUI@@@std@@YAAAPAVWindow@CEGUI@@AAPAV12@@Z PROC ; std::forward<CEGUI::Window * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAVWindow@CEGUI@@@std@@YAAAPAVWindow@CEGUI@@AAPAV12@@Z ENDP ; std::forward<CEGUI::Window * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAVSK_PopupWindow@@@std@@YAAAPAVSK_PopupWindow@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVSK_PopupWindow@@@std@@YAAAPAVSK_PopupWindow@@AAPAV1@@Z PROC ; std::forward<SK_PopupWindow * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAVSK_PopupWindow@@@std@@YAAAPAVSK_PopupWindow@@AAPAV1@@Z ENDP ; std::forward<SK_PopupWindow * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::construct<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::construct<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABU?$less@PAVSK_PopupWindow@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAVSK_PopupWindow@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@PAVSK_PopupWindow@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAVSK_PopupWindow@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1><std::less<SK_PopupWindow *> const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 561  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	12					; 0000000cH
??$?0ABU?$less@PAVSK_PopupWindow@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAVSK_PopupWindow@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1><std::less<SK_PopupWindow *> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$swap@DX@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@DX@std@@YAXAAD0@Z PROC				; std::swap<char,void>, COMDAT

; 65   : 	{	// exchange values stored at _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 66   : 	_Ty _Tmp = _STD move(_Left);
; 67   : 	_Left = _STD move(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Left$[ebp]
	push	ebx
	mov	al, BYTE PTR [ecx]
	mov	bl, BYTE PTR [edx]
	mov	BYTE PTR [edx], al

; 68   : 	_Right = _STD move(_Tmp);

	mov	BYTE PTR [ecx], bl
	pop	ebx

; 69   : 	}

	pop	ebp
	ret	0
??$swap@DX@std@@YAXAAD0@Z ENDP				; std::swap<char,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABU?$less@PAVWindow@CEGUI@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAVWindow@CEGUI@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@PAVWindow@CEGUI@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAVWindow@CEGUI@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1><std::less<CEGUI::Window *> const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 561  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	12					; 0000000cH
??$?0ABU?$less@PAVWindow@CEGUI@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAVWindow@CEGUI@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1><std::less<CEGUI::Window *> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z
_TEXT	SEGMENT
tv476 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>, COMDAT
; _this$ = ecx

; 2004 : 		{	// find leftmost node not less than _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	mov	ebx, DWORD PTR __Keyval$[ebp]
	push	edi

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	edi, DWORD PTR [ecx]

; 2006 : 		_Nodeptr _Lonode = this->_Myhead();	// end() if search fails
; 2007 : 		_Nodeptr _Hinode = this->_Myhead();	// end() if search fails

	mov	ecx, edi

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	eax, DWORD PTR [edi+4]
	mov	DWORD PTR tv476[ebp], eax

; 2005 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [eax]

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN3@Eqrange
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	esi, DWORD PTR [ebx]
$LL2@Eqrange:
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2010 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	jae	SHORT $LN6@Eqrange

; 2011 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR [eax+8]

; 2012 : 			else

	jmp	SHORT $LN7@Eqrange
$LN6@Eqrange:

; 2015 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	cmp	BYTE PTR [ecx+13], 0
	je	SHORT $LN8@Eqrange
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	esi, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2015 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	cmovb	ecx, eax
$LN8@Eqrange:

; 2016 : 						this->_Key(_Pnode)))
; 2017 : 					_Hinode = _Pnode;	// _Pnode greater, remember it
; 2018 : 				_Lonode = _Pnode;

	mov	edi, eax

; 2019 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR [eax]
$LN7@Eqrange:

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Eqrange
	pop	esi
$LN3@Eqrange:

; 2020 : 				}
; 2021 : 
; 2022 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()

	cmp	BYTE PTR [ecx+13], 0
	mov	eax, ecx
	cmovne	eax, DWORD PTR tv476[ebp]
	mov	eax, DWORD PTR [eax]

; 2023 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2024 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN5@Eqrange
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	edx, DWORD PTR [ebx]
$LL4@Eqrange:
	cmp	edx, DWORD PTR [eax+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2025 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), _Keyval, this->_Key(_Pnode)))

	jae	SHORT $LN9@Eqrange

; 2026 : 				{	// _Pnode greater than _Keyval, remember it
; 2027 : 				_Hinode = _Pnode;

	mov	ecx, eax

; 2028 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR [eax]

; 2029 : 				}
; 2030 : 			else

	jmp	SHORT $LN10@Eqrange
$LN9@Eqrange:

; 2031 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR [eax+8]
$LN10@Eqrange:

; 2023 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2024 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Eqrange
$LN5@Eqrange:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edi
	pop	edi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [eax+4], ecx
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2036 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z
_TEXT	SEGMENT
__Ans$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>, COMDAT
; _this$ = ecx

; 2040 : 		{	// find leftmost node not less than _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	call	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Ans$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2045 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::destroy<std::pair<SK_PopupWindow * const,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
tv476 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>, COMDAT
; _this$ = ecx

; 2004 : 		{	// find leftmost node not less than _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	mov	ebx, DWORD PTR __Keyval$[ebp]
	push	edi

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	edi, DWORD PTR [ecx]

; 2006 : 		_Nodeptr _Lonode = this->_Myhead();	// end() if search fails
; 2007 : 		_Nodeptr _Hinode = this->_Myhead();	// end() if search fails

	mov	ecx, edi

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	eax, DWORD PTR [edi+4]
	mov	DWORD PTR tv476[ebp], eax

; 2005 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [eax]

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN3@Eqrange
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	esi, DWORD PTR [ebx]
$LL2@Eqrange:
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2010 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	jae	SHORT $LN6@Eqrange

; 2011 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR [eax+8]

; 2012 : 			else

	jmp	SHORT $LN7@Eqrange
$LN6@Eqrange:

; 2015 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	cmp	BYTE PTR [ecx+13], 0
	je	SHORT $LN8@Eqrange
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	esi, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2015 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	cmovb	ecx, eax
$LN8@Eqrange:

; 2016 : 						this->_Key(_Pnode)))
; 2017 : 					_Hinode = _Pnode;	// _Pnode greater, remember it
; 2018 : 				_Lonode = _Pnode;

	mov	edi, eax

; 2019 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR [eax]
$LN7@Eqrange:

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Eqrange
	pop	esi
$LN3@Eqrange:

; 2020 : 				}
; 2021 : 
; 2022 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()

	cmp	BYTE PTR [ecx+13], 0
	mov	eax, ecx
	cmovne	eax, DWORD PTR tv476[ebp]
	mov	eax, DWORD PTR [eax]

; 2023 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2024 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN5@Eqrange
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	edx, DWORD PTR [ebx]
$LL4@Eqrange:
	cmp	edx, DWORD PTR [eax+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2025 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), _Keyval, this->_Key(_Pnode)))

	jae	SHORT $LN9@Eqrange

; 2026 : 				{	// _Pnode greater than _Keyval, remember it
; 2027 : 				_Hinode = _Pnode;

	mov	ecx, eax

; 2028 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR [eax]

; 2029 : 				}
; 2030 : 			else

	jmp	SHORT $LN10@Eqrange
$LN9@Eqrange:

; 2031 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR [eax+8]
$LN10@Eqrange:

; 2023 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2024 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Eqrange
$LN5@Eqrange:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edi
	pop	edi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [eax+4], ecx
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2036 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
__Ans$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>, COMDAT
; _this$ = ecx

; 2040 : 		{	// find leftmost node not less than _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	call	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Ans$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2045 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::destroy<std::pair<CEGUI::Window * const,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YAPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YAPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z PROC ; std::addressof<std::pair<CEGUI::Window * const,SK_PopupWindow *> >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@YAPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<CEGUI::Window * const,SK_PopupWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@SAPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@SAPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<CEGUI::Window * const,SK_PopupWindow *> *>::pointer_to, COMDAT

; 289  : 		{	// convert raw reference to pointer

	npad	2
	push	ebp
	mov	ebp, esp

; 290  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 291  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@SAPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<CEGUI::Window * const,SK_PopupWindow *> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YAPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YAPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z PROC ; std::addressof<std::pair<SK_PopupWindow * const,CEGUI::Window *> >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@YAPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<SK_PopupWindow * const,CEGUI::Window *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >, COMDAT

; 1112 : 	{	// return distance between iterators

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
	add	esp, 12					; 0000000cH

; 1114 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >, COMDAT

; 1112 : 	{	// return distance between iterators

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
	add	esp, 12					; 0000000cH

; 1114 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@SAPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@SAPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<SK_PopupWindow * const,CEGUI::Window *> *>::pointer_to, COMDAT

; 289  : 		{	// convert raw reference to pointer

	npad	2
	push	ebp
	mov	ebp, esp

; 290  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 291  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@SAPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<SK_PopupWindow * const,CEGUI::Window *> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??$try_emplace@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$try_emplace@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z PROC ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::try_emplace<>, COMDAT
; _this$ = ecx

; 236  : 		{	// fail if _Keyval present, else emplace

	npad	2
	push	ebp
	mov	ebp, esp

; 237  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	push	DWORD PTR __Keyval$[ebp]
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Try_emplace@ABQAVWindow@CEGUI@@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Try_emplace<CEGUI::Window * const &>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 238  : 		}

	pop	ebp
	ret	8
??$try_emplace@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z ENDP ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::try_emplace<>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >, COMDAT

; 1112 : 	{	// return distance between iterators

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
	add	esp, 12					; 0000000cH

; 1114 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >, COMDAT

; 1112 : 	{	// return distance between iterators

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
	add	esp, 12					; 0000000cH

; 1114 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h
; File c:\users\andon\source\repos\specialk\depends\include\cegui\memberfunctionslot.h
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h
;	COMDAT ??$?0VSK_PopupManager@@@SubscriberSlot@CEGUI@@QAE@P8SK_PopupManager@@AE_NABVEventArgs@1@@ZPAV2@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_function$ = 8						; size = 4
_obj$ = 12						; size = 4
??$?0VSK_PopupManager@@@SubscriberSlot@CEGUI@@QAE@P8SK_PopupManager@@AE_NABVEventArgs@1@@ZPAV2@@Z PROC ; CEGUI::SubscriberSlot::SubscriberSlot<SK_PopupManager>, COMDAT
; _this$ = ecx

; 142  :     {}

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 141  :         d_functor_impl(new MemberFunctionSlot<T>(function, obj))

	push	12					; 0000000cH

; 142  :     {}

	mov	esi, ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	test	eax, eax
	je	SHORT $LN3@Subscriber
; File c:\users\andon\source\repos\specialk\depends\include\cegui\memberfunctionslot.h

; 48   :         d_function(func),

	mov	ecx, DWORD PTR _function$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 49   :         d_object(obj)

	mov	ecx, DWORD PTR _obj$[ebp]

; 50   :     {}

	mov	DWORD PTR [eax], OFFSET ??_7?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@
	mov	DWORD PTR [eax+8], ecx
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h

; 141  :         d_functor_impl(new MemberFunctionSlot<T>(function, obj))

	mov	DWORD PTR [esi], eax

; 142  :     {}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN3@Subscriber:

; 141  :         d_functor_impl(new MemberFunctionSlot<T>(function, obj))

	mov	DWORD PTR [esi], 0

; 142  :     {}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0VSK_PopupManager@@@SubscriberSlot@CEGUI@@QAE@P8SK_PopupManager@@AE_NABVEventArgs@1@@ZPAV2@@Z ENDP ; CEGUI::SubscriberSlot::SubscriberSlot<SK_PopupManager>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator--, COMDAT
; _this$ = ecx

; 419  : 		{	// predecrement

	npad	2
	push	esi
	mov	esi, ecx

; 306  : 		--static_cast<_Mybase&>(*this);

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator--

; 420  : 		--static_cast<_Mybase&>(*this);
; 421  : 		return (*this);

	mov	eax, esi
	pop	esi

; 422  : 		}

	ret	0
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++, COMDAT
; _this$ = ecx

; 406  : 		{	// preincrement

	npad	2
	push	esi
	mov	esi, ecx

; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator++

; 407  : 		++static_cast<_Mybase&>(*this);
; 408  : 		return (*this);

	mov	eax, esi
	pop	esi

; 409  : 		}

	ret	0
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator->, COMDAT
; _this$ = ecx

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 16					; 00000010H

; 402  : 		return (pointer_traits<pointer>::pointer_to(**this));
; 403  : 		}

	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator*, COMDAT
; _this$ = ecx

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 16					; 00000010H

; 397  : 		return ((reference)**(_Mybase *)this);
; 398  : 		}

	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >, COMDAT
; _this$ = ecx

; 379  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 380  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator!=, COMDAT
; _this$ = ecx

; 335  : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 336  : 		return (!(*this == _Right));
; 337  : 		}

	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator==, COMDAT
; _this$ = ecx

; 320  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 321  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 322  : 		if (this->_Getcont() != _Right._Getcont())
; 323  : 			{	// report error
; 324  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 325  : 			}
; 326  : 
; 327  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 328  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 329  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 330  : 
; 331  : 		return (this->_Ptr == _Right._Ptr);
; 332  : 		}

	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator--, COMDAT
; _this$ = ecx

; 283  : 		{	// predecrement

	npad	2
	push	esi
	mov	esi, ecx

; 284  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 285  : 		if (this->_Getcont() == 0
; 286  : 			|| this->_Ptr == nullptr_t{})
; 287  : 			{	// report error
; 288  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 289  : 			}
; 290  : 
; 291  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 292  : 		--static_cast<_Mybase&>(*this);
; 293  : 		if (_Ptrsav == this->_Ptr)
; 294  : 			{	// report error
; 295  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 296  : 			}
; 297  : 
; 298  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 299  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 300  : 
; 301  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 302  : 		--static_cast<_Mybase&>(*this);
; 303  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 304  : 
; 305  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 306  : 		--static_cast<_Mybase&>(*this);

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator--

; 307  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 308  : 
; 309  : 		return (*this);

	mov	eax, esi
	pop	esi

; 310  : 		}

	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++, COMDAT
; _this$ = ecx

; 276  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 277  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], edx

; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator++

; 278  : 		++*this;
; 279  : 		return (_Tmp);

	mov	eax, esi
	pop	esi

; 280  : 		}

	pop	ebp
	ret	8
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++, COMDAT
; _this$ = ecx

; 257  : 		{	// preincrement

	npad	2
	push	esi
	mov	esi, ecx

; 258  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 259  : 		if (this->_Getcont() == 0
; 260  : 			|| this->_Ptr == nullptr_t{}
; 261  : 			|| _Mytree::_Isnil(this->_Ptr))
; 262  : 			{	// report error
; 263  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 264  : 			}
; 265  : 
; 266  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 267  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 268  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 269  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 270  : 
; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator++

; 272  : 		return (*this);

	mov	eax, esi
	pop	esi

; 273  : 		}

	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator*, COMDAT
; _this$ = ecx

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 16					; 00000010H

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 234  : 		if (_Mycont == 0
; 235  : 			|| this->_Ptr == nullptr_t{}
; 236  : 			|| this->_Ptr == _Mycont->_Myhead)
; 237  : 			{	// report error
; 238  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 239  : 			}
; 240  : 
; 241  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 242  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 243  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 244  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 245  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 246  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 247  : 
; 248  : 		return (_Mytree::_Myval(this->_Ptr));
; 249  : 		}

	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 215  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 210  : 		}

	mov	eax, ecx
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 124  : 		}

	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 84   : 		{	// predecrement

	mov	edx, ecx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 85   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LN4@operator

; 86   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], eax

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
$LN4@operator:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [eax]

; 87   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN40@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN23@operator
$LL22@operator:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL22@operator

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else
; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [edx], ecx

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
$LN40@operator:

; 88   : 			_Ptr = _Mytree::_Max(
; 89   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree
; 90   : 		else
; 91   : 			{	// climb looking for left subtree
; 92   : 			_Nodeptr _Pnode;
; 93   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 94   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	ecx, DWORD PTR [eax+4]
	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN3@operator
	npad	4
$LL2@operator:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN3@operator

; 95   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [ecx+4]
	cmp	BYTE PTR [ecx+13], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 96   : 			if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR [edx]
	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN47@operator
$LN23@operator:

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else
; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [edx], ecx
$LN47@operator:

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	mov	edx, ecx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN41@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [eax+8]

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN34@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN19@operator
	npad	5
$LL18@operator:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL18@operator
$LN19@operator:

; 63   : 			_Ptr = _Mytree::_Min(

	mov	DWORD PTR [edx], ecx

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, edx

; 74   : 		}

	ret	0
$LN34@operator:

; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree
; 65   : 		else
; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN3@operator
$LL2@operator:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR [edx], eax
$LN41@operator:

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, edx

; 74   : 		}

	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 45   : 		this->_Adopt(_Plist);
; 46   : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 40   : 		}

	mov	eax, ecx
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??$insert@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@X@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@X@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::insert<std::pair<CEGUI::Window *,SK_PopupWindow *>,void>, COMDAT
; _this$ = ecx

; 201  : 		{	// insert _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	push	DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 201  : 		{	// insert _Val

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	call	??$_Buynode@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::pair<CEGUI::Window *,SK_PopupWindow *> >

; 1085 : 		return (_Insert_nohint(false,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1085 : 		return (_Insert_nohint(false,

	mov	ecx, edi
	push	eax
	push	0
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_nohint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 202  : 		return (this->emplace(_STD forward<_Valty>(_Val)));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi

; 203  : 		}

	pop	ebp
	ret	8
??$insert@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@X@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::insert<std::pair<CEGUI::Window *,SK_PopupWindow *>,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0PAVWindow@CEGUI@@PAVSK_PopupWindow@@X$0A@@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0PAVWindow@CEGUI@@PAVSK_PopupWindow@@X$0A@@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z PROC ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><CEGUI::Window *,SK_PopupWindow *,void,0>, COMDAT
; _this$ = ecx

; 217  : 		{	// construct from moved compatible pair

	npad	2
	push	ebp
	mov	ebp, esp

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 218  : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0PAVWindow@CEGUI@@PAVSK_PopupWindow@@X$0A@@?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@QAE@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ENDP ; std::pair<CEGUI::Window * const,SK_PopupWindow *>::pair<CEGUI::Window * const,SK_PopupWindow *><CEGUI::Window *,SK_PopupWindow *,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$make_pair@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@std@@YA?AU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@std@@YA?AU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@Z PROC ; std::make_pair<CEGUI::Window * &,SK_PopupWindow * &>, COMDAT

; 341  : 	{	// return pair composed from arguments

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx

; 342  : 	typedef pair<typename _Unrefwrap<_Ty1>::type,
; 343  : 		typename _Unrefwrap<_Ty2>::type> _Mypair;
; 344  : 	return (_Mypair(_STD forward<_Ty1>(_Val1),
; 345  : 		_STD forward<_Ty2>(_Val2)));
; 346  : 	}

	pop	ebp
	ret	0
??$make_pair@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@std@@YA?AU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@0@AAPAVWindow@CEGUI@@AAPAVSK_PopupWindow@@@Z ENDP ; std::make_pair<CEGUI::Window * &,SK_PopupWindow * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator--, COMDAT
; _this$ = ecx

; 419  : 		{	// predecrement

	npad	2
	push	esi
	mov	esi, ecx

; 306  : 		--static_cast<_Mybase&>(*this);

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator--

; 420  : 		--static_cast<_Mybase&>(*this);
; 421  : 		return (*this);

	mov	eax, esi
	pop	esi

; 422  : 		}

	ret	0
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++, COMDAT
; _this$ = ecx

; 412  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 413  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], edx

; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator++

; 414  : 		++*this;
; 415  : 		return (_Tmp);

	mov	eax, esi
	pop	esi

; 416  : 		}

	pop	ebp
	ret	8
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++, COMDAT
; _this$ = ecx

; 406  : 		{	// preincrement

	npad	2
	push	esi
	mov	esi, ecx

; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator++

; 407  : 		++static_cast<_Mybase&>(*this);
; 408  : 		return (*this);

	mov	eax, esi
	pop	esi

; 409  : 		}

	ret	0
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator->, COMDAT
; _this$ = ecx

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 16					; 00000010H

; 402  : 		return (pointer_traits<pointer>::pointer_to(**this));
; 403  : 		}

	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEPAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator*, COMDAT
; _this$ = ecx

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 16					; 00000010H

; 397  : 		return ((reference)**(_Mybase *)this);
; 398  : 		}

	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >, COMDAT
; _this$ = ecx

; 379  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 380  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator!=, COMDAT
; _this$ = ecx

; 335  : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 336  : 		return (!(*this == _Right));
; 337  : 		}

	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator==, COMDAT
; _this$ = ecx

; 320  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 321  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 322  : 		if (this->_Getcont() != _Right._Getcont())
; 323  : 			{	// report error
; 324  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 325  : 			}
; 326  : 
; 327  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 328  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 329  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 330  : 
; 331  : 		return (this->_Ptr == _Right._Ptr);
; 332  : 		}

	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator--, COMDAT
; _this$ = ecx

; 283  : 		{	// predecrement

	npad	2
	push	esi
	mov	esi, ecx

; 284  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 285  : 		if (this->_Getcont() == 0
; 286  : 			|| this->_Ptr == nullptr_t{})
; 287  : 			{	// report error
; 288  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 289  : 			}
; 290  : 
; 291  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 292  : 		--static_cast<_Mybase&>(*this);
; 293  : 		if (_Ptrsav == this->_Ptr)
; 294  : 			{	// report error
; 295  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 296  : 			}
; 297  : 
; 298  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 299  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 300  : 
; 301  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 302  : 		--static_cast<_Mybase&>(*this);
; 303  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 304  : 
; 305  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 306  : 		--static_cast<_Mybase&>(*this);

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator--

; 307  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 308  : 
; 309  : 		return (*this);

	mov	eax, esi
	pop	esi

; 310  : 		}

	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++, COMDAT
; _this$ = ecx

; 276  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 277  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], edx

; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator++

; 278  : 		++*this;
; 279  : 		return (_Tmp);

	mov	eax, esi
	pop	esi

; 280  : 		}

	pop	ebp
	ret	8
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++, COMDAT
; _this$ = ecx

; 257  : 		{	// preincrement

	npad	2
	push	esi
	mov	esi, ecx

; 258  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 259  : 		if (this->_Getcont() == 0
; 260  : 			|| this->_Ptr == nullptr_t{}
; 261  : 			|| _Mytree::_Isnil(this->_Ptr))
; 262  : 			{	// report error
; 263  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 264  : 			}
; 265  : 
; 266  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 267  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 268  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 269  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 270  : 
; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator++

; 272  : 		return (*this);

	mov	eax, esi
	pop	esi

; 273  : 		}

	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator*, COMDAT
; _this$ = ecx

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 16					; 00000010H

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 234  : 		if (_Mycont == 0
; 235  : 			|| this->_Ptr == nullptr_t{}
; 236  : 			|| this->_Ptr == _Mycont->_Myhead)
; 237  : 			{	// report error
; 238  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 239  : 			}
; 240  : 
; 241  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 242  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 243  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 244  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 245  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 246  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 247  : 
; 248  : 		return (_Mytree::_Myval(this->_Ptr));
; 249  : 		}

	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QBEABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 215  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 124  : 		}

	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 84   : 		{	// predecrement

	mov	edx, ecx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 85   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LN4@operator

; 86   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], eax

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
$LN4@operator:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [eax]

; 87   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN40@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN23@operator
$LL22@operator:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL22@operator

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else
; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [edx], ecx

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
$LN40@operator:

; 88   : 			_Ptr = _Mytree::_Max(
; 89   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree
; 90   : 		else
; 91   : 			{	// climb looking for left subtree
; 92   : 			_Nodeptr _Pnode;
; 93   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 94   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	ecx, DWORD PTR [eax+4]
	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN3@operator
	npad	4
$LL2@operator:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN3@operator

; 95   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [ecx+4]
	cmp	BYTE PTR [ecx+13], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 96   : 			if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR [edx]
	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN47@operator
$LN23@operator:

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else
; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [edx], ecx
$LN47@operator:

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	mov	edx, ecx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN41@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [eax+8]

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN34@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN19@operator
	npad	5
$LL18@operator:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL18@operator
$LN19@operator:

; 63   : 			_Ptr = _Mytree::_Min(

	mov	DWORD PTR [edx], ecx

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, edx

; 74   : 		}

	ret	0
$LN34@operator:

; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree
; 65   : 		else
; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN3@operator
$LL2@operator:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR [edx], eax
$LN41@operator:

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, edx

; 74   : 		}

	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 45   : 		this->_Adopt(_Plist);
; 46   : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??$insert@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@X@?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@X@?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::insert<std::pair<SK_PopupWindow *,CEGUI::Window *>,void>, COMDAT
; _this$ = ecx

; 201  : 		{	// insert _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	push	DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 201  : 		{	// insert _Val

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	call	??$_Buynode@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode<std::pair<SK_PopupWindow *,CEGUI::Window *> >

; 1085 : 		return (_Insert_nohint(false,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1085 : 		return (_Insert_nohint(false,

	mov	ecx, edi
	push	eax
	push	0
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_nohint<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 202  : 		return (this->emplace(_STD forward<_Valty>(_Val)));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi

; 203  : 		}

	pop	ebp
	ret	8
??$insert@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@X@?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::insert<std::pair<SK_PopupWindow *,CEGUI::Window *>,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0PAVSK_PopupWindow@@PAVWindow@CEGUI@@X$0A@@?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@QAE@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0PAVSK_PopupWindow@@PAVWindow@CEGUI@@X$0A@@?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@QAE@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z PROC ; std::pair<SK_PopupWindow * const,CEGUI::Window *>::pair<SK_PopupWindow * const,CEGUI::Window *><SK_PopupWindow *,CEGUI::Window *,void,0>, COMDAT
; _this$ = ecx

; 217  : 		{	// construct from moved compatible pair

	npad	2
	push	ebp
	mov	ebp, esp

; 215  : 		: first(_STD forward<_Other1>(_Right.first)),

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 216  : 			second(_STD forward<_Other2>(_Right.second))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 218  : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0PAVSK_PopupWindow@@PAVWindow@CEGUI@@X$0A@@?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@QAE@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ENDP ; std::pair<SK_PopupWindow * const,CEGUI::Window *>::pair<SK_PopupWindow * const,CEGUI::Window *><SK_PopupWindow *,CEGUI::Window *,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$make_pair@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@std@@YA?AU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@std@@YA?AU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@Z PROC ; std::make_pair<SK_PopupWindow * &,CEGUI::Window * &>, COMDAT

; 341  : 	{	// return pair composed from arguments

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx

; 342  : 	typedef pair<typename _Unrefwrap<_Ty1>::type,
; 343  : 		typename _Unrefwrap<_Ty2>::type> _Mypair;
; 344  : 	return (_Mypair(_STD forward<_Ty1>(_Val1),
; 345  : 		_STD forward<_Ty2>(_Val2)));
; 346  : 	}

	pop	ebp
	ret	0
??$make_pair@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@std@@YA?AU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@0@AAPAVSK_PopupWindow@@AAPAVWindow@CEGUI@@@Z ENDP ; std::make_pair<SK_PopupWindow * &,CEGUI::Window * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??1?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
??1?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE@XZ PROC ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::~map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [esi]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE@XZ ENDP ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::~map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??A?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAEAAPAVSK_PopupWindow@@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
__Keyval$ = 8						; size = 4
??A?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAEAAPAVSK_PopupWindow@@ABQAVWindow@CEGUI@@@Z PROC ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::operator[], COMDAT
; _this$ = ecx

; 351  : 		{	// find element matching _Keyval or insert with default mapped

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 237  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Try_emplace@ABQAVWindow@CEGUI@@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Try_emplace<CEGUI::Window * const &>

; 352  : 		return (try_emplace(_Keyval).first->second);

	mov	eax, DWORD PTR $T1[ebp]
	add	eax, 20					; 00000014H

; 353  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAEAAPAVSK_PopupWindow@@ABQAVWindow@CEGUI@@@Z ENDP ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??0?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE@XZ PROC ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >, COMDAT
; _this$ = ecx

; 101  : 		{	// construct empty map from defaults

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 102  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE@XZ ENDP ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEABQAVWindow@CEGUI@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEABQAVWindow@CEGUI@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Key, COMDAT
; _this$ = ecx

; 2193 : 		{	// return reference to key in node

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 63   : 		return (_Val.first);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2195 : 		}

	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEABQAVWindow@CEGUI@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Key
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEABQAVWindow@CEGUI@@ABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEABQAVWindow@CEGUI@@ABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Kfn, COMDAT
; _this$ = ecx

; 2188 : 		{	// get key from value

	npad	2
	push	ebp
	mov	ebp, esp

; 2189 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 2190 : 		}

	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEABQAVWindow@CEGUI@@ABU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 2183 : 		{	// free all storage

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [ecx]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase

; 2185 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 2127 : 		{	// promote left node to root of subtree

	npad	2
	push	ebp
	mov	ebp, esp

; 2128 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	esi
	mov	esi, DWORD PTR [edx]

; 2129 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [edx], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi+8]

; 2130 : 
; 2131 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN2@Rrotate

; 2132 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], edx
$LN2@Rrotate:

; 2133 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]

; 2134 : 
; 2135 : 		if (_Wherenode == _Root())

	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Rrotate

; 2136 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
$LN3@Rrotate:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [edx+4]

; 2137 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	cmp	edx, DWORD PTR [eax+8]
	jne	SHORT $LN5@Rrotate

; 2138 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
$LN5@Rrotate:

; 2139 : 		else
; 2140 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]
	add	eax, 4

; 2123 : 		return (this->_Parent(this->_Myhead()));
; 2124 : 		}

	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Root
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 2118 : 		return (this->_Right(this->_Myhead()));
; 2119 : 		}

	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rmost
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 2097 : 		{	// promote right node to root of subtree

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	esi

; 2098 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	esi, DWORD PTR [edx+8]

; 2099 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edx+8], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi]

; 2100 : 
; 2101 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN2@Lrotate

; 2102 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], edx
$LN2@Lrotate:

; 2103 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]

; 2104 : 
; 2105 : 		if (_Wherenode == _Root())

	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Lrotate

; 2106 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
$LN3@Lrotate:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edx+4]

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Lrotate

; 2108 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
$LN5@Lrotate:

; 2109 : 		else
; 2110 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 2093 : 		return (this->_Left(this->_Myhead()));

	mov	eax, DWORD PTR [ecx]

; 2094 : 		}

	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Compare@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE_NABQAVWindow@CEGUI@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?_Compare@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE_NABQAVWindow@CEGUI@@0@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Compare, COMDAT
; _this$ = ecx

; 2062 : 		{	// compare key_type to key_type, with debug checks

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	setb	al

; 2063 : 		return (_DEBUG_LT_PRED(this->_Getcomp(), _Left, _Right));
; 2064 : 		}

	pop	ebp
	ret	8
?_Compare@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE_NABQAVWindow@CEGUI@@0@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Compare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 2048 : 		{	// free entire subtree, recursively

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi

; 2049 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	edi, DWORD PTR __Rootnode$[ebp]
	mov	ebx, ecx
	mov	esi, edi

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	cmp	BYTE PTR [edi+13], 0
	jne	SHORT $LN3@Erase
$LL4@Erase:

; 2051 : 			{	// free subtrees, then node
; 2052 : 			_Erase(this->_Right(_Pnode));

	push	DWORD PTR [esi+8]
	mov	ecx, ebx
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Erase

; 2053 : 			_Pnode = this->_Left(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	edi, esi
	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LL4@Erase
$LN3@Erase:
	pop	edi
	pop	esi
	pop	ebx

; 2054 : 			this->_Getal().destroy(
; 2055 : 				_STD addressof(this->_Myval(_Rootnode)));
; 2056 : 
; 2057 : 			this->_Getal().deallocate(_Rootnode, 1);
; 2058 : 			}
; 2059 : 		}

	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Newnode$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 1648 : 		{	// node exists, destroy it

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR __Newnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1653 : 		}

	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@2@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@2@ABQAVWindow@CEGUI@@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1602 : 		{	// find range equivalent to _Keyval in nonmutable tree

	npad	2
	push	ebp
	mov	ebp, esp

; 1603 : 		return (_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1604 : 		}

	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@2@ABQAVWindow@CEGUI@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@2@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
__Ans$1 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@2@ABQAVWindow@CEGUI@@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1597 : 		{	// find range equivalent to _Keyval in mutable tree

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$1[ebp]
	push	eax
	call	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Ans$1[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Ans$1[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1599 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@2@ABQAVWindow@CEGUI@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@ABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@ABQAVWindow@CEGUI@@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1545 : 		{	// find leftmost node not less than _Keyval in mutable tree

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	edx, DWORD PTR [ecx]

; 2076 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [edx+4]

; 2077 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails
; 2078 : 
; 2079 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN94@lower_boun
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	ecx, DWORD PTR __Keyval$[ebp]
	mov	ecx, DWORD PTR [ecx]
$LL16@lower_boun:
	cmp	DWORD PTR [eax+16], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2080 : 			if (_Compare(this->_Key(_Pnode), _Keyval))

	jae	SHORT $LN18@lower_boun

; 2081 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR [eax+8]

; 2082 : 			else

	jmp	SHORT $LN19@lower_boun
$LN18@lower_boun:

; 2083 : 				{	// _Pnode not less than _Keyval, remember it
; 2084 : 				_Wherenode = _Pnode;

	mov	edx, eax

; 2085 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR [eax]
$LN19@lower_boun:

; 2077 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails
; 2078 : 
; 2079 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL16@lower_boun
$LN94@lower_boun:

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx

; 1546 : 		return (iterator(_Lbound(_Keyval), _STD addressof(this->_Get_data())));
; 1547 : 		}

	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@ABQAVWindow@CEGUI@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?count@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
__Ans$ = -8						; size = 8
$T1 = 8							; size = 1
__Keyval$ = 8						; size = 4
?count@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIABQAVWindow@CEGUI@@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::count, COMDAT
; _this$ = ecx

; 1530 : 		{	// count all elements that match _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1603 : 		return (_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	call	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Ans$[ebp+4]
	push	DWORD PTR __Ans$[ebp]
	call	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1533 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?count@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIABQAVWindow@CEGUI@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1475 : 		{	// erase all

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1476 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1477 : 		this->_Orphan_ptr(nullptr_t{});
; 1478 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1479 : 
; 1480 : 		_Erase(_Root());

	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR [eax+4]

; 2049 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	esi, ebx

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	cmp	BYTE PTR [ebx+13], 0
	jne	SHORT $LN23@clear
	npad	4
$LL24@clear:

; 2051 : 			{	// free subtrees, then node
; 2052 : 			_Erase(this->_Right(_Pnode));

	push	DWORD PTR [esi+8]
	mov	ecx, edi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Erase

; 2053 : 			_Pnode = this->_Left(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	ebx, esi
	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LL24@clear
$LN23@clear:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 1485 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax], eax

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [edi]

; 1481 : 		_Root() = this->_Myhead();
; 1482 : 		_Lmost() = this->_Myhead();
; 1483 : 		_Rmost() = this->_Myhead();

	mov	DWORD PTR [eax+8], eax

; 1484 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1485 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::clear
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEIABQAVWindow@CEGUI@@@Z
_TEXT	SEGMENT
__Ans$1 = -12						; size = 8
_this$1$ = -4						; size = 4
$T2 = 8							; size = 1
$T3 = 8							; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEIABQAVWindow@CEGUI@@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1467 : 		{	// erase and count all that match _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]

; 1467 : 		{	// erase and count all that match _Keyval

	mov	eax, ecx

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	lea	ecx, DWORD PTR __Ans$1[ebp]
	push	ecx
	mov	ecx, eax

; 1467 : 		{	// erase and count all that match _Keyval

	mov	DWORD PTR _this$1$[ebp], eax

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	call	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T2[ebp]
	push	DWORD PTR __Ans$1[ebp+4]
	push	DWORD PTR __Ans$1[ebp]
	call	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1470 : 		erase(_Where.first, _Where.second);

	mov	ecx, DWORD PTR _this$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1469 : 		size_type _Num = _STD distance(_Where.first, _Where.second);

	mov	ebx, eax

; 1470 : 		erase(_Where.first, _Where.second);

	lea	eax, DWORD PTR $T3[ebp]
	push	DWORD PTR __Ans$1[ebp+4]
	push	DWORD PTR __Ans$1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase

; 1471 : 		return (_Num);

	mov	eax, ebx
	pop	ebx

; 1472 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEIABQAVWindow@CEGUI@@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1452 : 		{	// erase [_First, _Last)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]

; 1453 : 		if (_First == begin() && _Last == end())

	mov	edx, DWORD PTR __Last$[ebp]
	push	esi
	push	edi
	mov	edi, ecx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	esi, DWORD PTR [edi]

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [esi]

; 1453 : 		if (_First == begin() && _Last == end())

	jne	SHORT $LN188@erase

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	edx, esi

; 1453 : 		if (_First == begin() && _Last == end())

	jne	SHORT $LN188@erase

; 1454 : 			{	// erase all
; 1455 : 			clear();

	call	?clear@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::clear

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1463 : 			}
; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN188@erase:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, edx

; 1456 : 			return (begin());
; 1457 : 			}
; 1458 : 		else
; 1459 : 			{	// partial erase, one at a time
; 1460 : 			while (_First != _Last)

	je	SHORT $LN3@erase
$LL2@erase:

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0

; 277  : 		_Myiter _Tmp = *this;

	mov	ecx, eax

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	jne	SHORT $LN142@erase

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN190@erase

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN200@erase
	npad	3
$LL153@erase:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL153@erase

; 65   : 		else

	jmp	SHORT $LN200@erase
$LN190@erase:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN200@erase
$LL137@erase:
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN200@erase

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, edx
	mov	DWORD PTR __First$[ebp], eax
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL137@erase
$LN200@erase:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR __First$[ebp], edx
$LN142@erase:

; 1461 : 				erase(_First++);

	push	ecx
	lea	eax, DWORD PTR $T1[ebp]
	mov	ecx, edi
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]

; 1456 : 			return (begin());
; 1457 : 			}
; 1458 : 		else
; 1459 : 			{	// partial erase, one at a time
; 1460 : 			while (_First != _Last)

	jne	SHORT $LL2@erase
$LN3@erase:

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax

; 1462 : 			return (iterator(_First._Ptr, _STD addressof(this->_Get_data())));

	mov	eax, ecx

; 1463 : 			}
; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv1196 = -16						; size = 4
tv1197 = -12						; size = 4
tv1195 = -8						; size = 4
tv1191 = -8						; size = 4
tv1171 = -8						; size = 4
__Erasednode$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1264 : 		{	// erase element at _Where

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR __Where$[ebp]
	push	ebx
	push	esi

; 1264 : 		{	// erase element at _Where

	mov	ebx, ecx

; 123  : 		return (_Ptr);

	mov	DWORD PTR __Erasednode$1$[ebp], eax
	push	edi

; 271  : 		++static_cast<_Mybase&>(*this);

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,std::_Iterator_base0>::operator++

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Erasednode$1$[ebp]
	mov	esi, DWORD PTR [ecx]

; 1265 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1266 : 		if (_Where._Getcont() != _STD addressof(this->_Get_data())
; 1267 : 			|| this->_Isnil(_Where._Mynode()))
; 1268 : 			{
; 1269 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1270 : 			}
; 1271 : 
; 1272 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1273 : 		++_Where;	// save successor iterator for return
; 1274 : 		_Orphan_ptr(_Erasednode);
; 1275 : 
; 1276 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1277 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1278 : 		++_Where;	// save successor iterator for return
; 1279 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1280 : 
; 1281 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1282 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1283 : 		_Nodeptr _Pnode = _Erasednode;
; 1284 : 
; 1285 : 		if (this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LN5@erase

; 1286 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	edi, DWORD PTR [ecx+8]

; 1287 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	jmp	SHORT $LN694@erase
$LN5@erase:
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LN7@erase

; 1288 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	edi, esi

; 1289 : 		else

	jmp	SHORT $LN694@erase
$LN7@erase:

; 123  : 		return (_Ptr);

	mov	edx, DWORD PTR __Where$[ebp]

; 1290 : 			{	// two subtrees, must lift successor node to replace erased
; 1291 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 1292 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	edi, DWORD PTR [edx+8]

; 1293 : 			}
; 1294 : 
; 1295 : 		if (_Pnode == _Erasednode)

	cmp	edx, ecx
	jne	$LN9@erase
$LN694@erase:

; 1296 : 			{	// at most one subtree, relink it
; 1297 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1298 : 			if (!this->_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+13], 0
	mov	esi, DWORD PTR [ecx+4]
	jne	SHORT $LN11@erase

; 1299 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	DWORD PTR [edi+4], esi
$LN11@erase:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ebx]

; 1300 : 
; 1301 : 			if (_Root() == _Erasednode)

	cmp	DWORD PTR [eax+4], ecx
	jne	SHORT $LN12@erase

; 1302 : 				_Root() = _Fixnode;	// link down from root

	mov	DWORD PTR [eax+4], edi

; 1303 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	jmp	SHORT $LN15@erase
$LN12@erase:
	cmp	DWORD PTR [esi], ecx
	jne	SHORT $LN14@erase

; 1304 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	DWORD PTR [esi], edi

; 1305 : 			else

	jmp	SHORT $LN15@erase
$LN14@erase:

; 1306 : 				this->_Right(_Fixnodeparent) =

	mov	DWORD PTR [esi+8], edi
$LN15@erase:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ebx]

; 1307 : 					_Fixnode;	// link down to right
; 1308 : 
; 1309 : 			if (_Lmost() == _Erasednode)

	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN16@erase

; 1310 : 				_Lmost() = this->_Isnil(_Fixnode)

	cmp	BYTE PTR [edi+13], 0
	je	SHORT $LN42@erase
	mov	edx, esi
	jmp	SHORT $LN43@erase
$LN42@erase:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edi]

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	edx, edi

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN166@erase
$LL165@erase:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL165@erase
$LN166@erase:
	mov	eax, DWORD PTR [ebx]
$LN43@erase:

; 1310 : 				_Lmost() = this->_Isnil(_Fixnode)

	mov	DWORD PTR [eax], edx
$LN16@erase:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ebx]

; 1311 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1312 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree
; 1313 : 
; 1314 : 			if (_Rmost() == _Erasednode)

	cmp	DWORD PTR [eax+8], ecx
	jne	$LN373@erase

; 1315 : 				_Rmost() = this->_Isnil(_Fixnode)

	cmp	BYTE PTR [edi+13], 0
	je	SHORT $LN44@erase
	mov	edx, esi
	mov	DWORD PTR [eax+8], edx

; 1316 : 					? _Fixnodeparent	// largest is parent of erased node
; 1317 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1318 : 			}
; 1319 : 		else

	jmp	SHORT $LN373@erase
$LN44@erase:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edi+8]

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	edx, edi

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN218@erase
$LL217@erase:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL217@erase
$LN218@erase:
	mov	eax, DWORD PTR [ebx]

; 1315 : 				_Rmost() = this->_Isnil(_Fixnode)

	mov	DWORD PTR [eax+8], edx

; 1316 : 					? _Fixnodeparent	// largest is parent of erased node
; 1317 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1318 : 			}
; 1319 : 		else

	jmp	SHORT $LN373@erase
$LN9@erase:

; 1320 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1321 : 			this->_Parent(this->_Left(_Erasednode)) =

	mov	DWORD PTR [esi+4], edx

; 1322 : 				_Pnode;	// link left up
; 1323 : 			this->_Left(_Pnode) =

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1324 : 				this->_Left(_Erasednode);	// link successor down
; 1325 : 
; 1326 : 			if (_Pnode == this->_Right(_Erasednode))

	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN18@erase

; 1327 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	esi, edx

; 1328 : 			else

	jmp	SHORT $LN19@erase
$LN18@erase:

; 1329 : 				{	// successor further down, link in place of erased
; 1330 : 				_Fixnodeparent =
; 1331 : 					this->_Parent(_Pnode);	// parent is successor's
; 1332 : 				if (!this->_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+13], 0
	mov	esi, DWORD PTR [edx+4]
	jne	SHORT $LN20@erase

; 1333 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	DWORD PTR [edi+4], esi
$LN20@erase:

; 1334 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	DWORD PTR [esi], edi

; 1335 : 				this->_Right(_Pnode) =

	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax

; 1336 : 					this->_Right(_Erasednode);	// link next down
; 1337 : 				this->_Parent(this->_Right(_Erasednode)) =

	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
$LN19@erase:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ebx]

; 1338 : 					_Pnode;	// right up
; 1339 : 				}
; 1340 : 
; 1341 : 			if (_Root() == _Erasednode)

	cmp	DWORD PTR [eax+4], ecx
	jne	SHORT $LN21@erase

; 1342 : 				_Root() = _Pnode;	// link down from root

	mov	DWORD PTR [eax+4], edx

; 1343 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	jmp	SHORT $LN24@erase
$LN21@erase:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx+4]

; 1343 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN23@erase

; 1344 : 				this->_Left(this->_Parent(_Erasednode)) =

	mov	DWORD PTR [eax], edx

; 1345 : 					_Pnode;	// link down to left
; 1346 : 			else

	jmp	SHORT $LN24@erase
$LN23@erase:

; 1347 : 				this->_Right(this->_Parent(_Erasednode)) =

	mov	DWORD PTR [eax+8], edx
$LN24@erase:

; 1348 : 					_Pnode;	// link down to right
; 1349 : 
; 1350 : 			this->_Parent(_Pnode) =

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 67   : 	_Left = _STD move(_Right);

	mov	eax, DWORD PTR __Erasednode$1$[ebp]
	mov	cl, BYTE PTR [edx+12]
	mov	al, BYTE PTR [eax+12]
	mov	BYTE PTR [edx+12], al

; 68   : 	_Right = _STD move(_Tmp);

	mov	eax, DWORD PTR __Erasednode$1$[ebp]
	mov	BYTE PTR [eax+12], cl
	mov	ecx, eax
$LN373@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1356 : 		if (this->_Color(_Erasednode) == this->_Black)

	cmp	BYTE PTR [ecx+12], 1
	jne	$LN25@erase

; 1357 : 			{	// erasing black link, must recolor/rebalance tree
; 1358 : 			for (; _Fixnode != _Root()
; 1359 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	eax, DWORD PTR [ebx]
	cmp	edi, DWORD PTR [eax+4]
	je	$LN3@erase
	npad	7
$LL4@erase:
	cmp	BYTE PTR [edi+12], 1
	mov	edx, esi
	mov	DWORD PTR tv1195[ebp], edx
	mov	DWORD PTR tv1197[ebp], esi
	mov	DWORD PTR tv1196[ebp], esi
	jne	$LN697@erase

; 1361 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	ecx, DWORD PTR [esi]
	cmp	edi, ecx
	jne	SHORT $LN26@erase

; 1362 : 					{	// fixup left subtree
; 1363 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]

; 1364 : 					if (this->_Color(_Pnode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN28@erase

; 1365 : 						{	// rotate red up from right subtree
; 1366 : 						this->_Color(_Pnode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1367 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1368 : 						_Lrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [esi+12], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lrotate

; 1369 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]
	mov	edx, esi
$LN28@erase:

; 1370 : 						}
; 1371 : 
; 1372 : 					if (this->_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+13], 0
	jne	$LN2@erase

; 1373 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1374 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black
; 1375 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN31@erase
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	je	SHORT $LN698@erase
$LN31@erase:

; 1376 : 						{	// redden right subtree with black children
; 1377 : 						this->_Color(_Pnode) = this->_Red;
; 1378 : 						_Fixnode = _Fixnodeparent;
; 1379 : 						}
; 1380 : 					else
; 1381 : 						{	// must rearrange right subtree
; 1382 : 						if (this->_Color(this->_Right(_Pnode))
; 1383 : 							== this->_Black)

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN33@erase

; 1384 : 							{	// rotate red up from left sub-subtree
; 1385 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx]

; 1386 : 							this->_Color(_Pnode) = this->_Red;
; 1387 : 							_Rrotate(_Pnode);

	push	ecx
	mov	BYTE PTR [eax+12], 1
	mov	BYTE PTR [ecx+12], 0
	mov	ecx, ebx
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rrotate

; 1388 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]
$LN33@erase:

; 1389 : 							}
; 1390 : 
; 1391 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	al, BYTE PTR [esi+12]
	mov	BYTE PTR [ecx+12], al

; 1392 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	BYTE PTR [esi+12], 1

; 1393 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx+8]

; 1394 : 						_Lrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [eax+12], 1
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lrotate

; 1395 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN697@erase
$LN26@erase:

; 1396 : 						}
; 1397 : 					}
; 1398 : 				else
; 1399 : 					{	// fixup right subtree
; 1400 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1401 : 					if (this->_Color(_Pnode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN34@erase

; 1402 : 						{	// rotate red up from left subtree
; 1403 : 						this->_Color(_Pnode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1404 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1405 : 						_Rrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [esi+12], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rrotate

; 1406 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR tv1195[ebp]
$LN34@erase:

; 1407 : 						}
; 1408 : 
; 1409 : 					if (this->_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN2@erase

; 1410 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1411 : 					else if (this->_Color(this->_Right(_Pnode)) ==
; 1412 : 						this->_Black
; 1413 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN37@erase
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN37@erase
$LN698@erase:

; 1414 : 						{	// redden left subtree with black children
; 1415 : 						this->_Color(_Pnode) = this->_Red;

	mov	BYTE PTR [ecx+12], 0
$LN2@erase:

; 1357 : 			{	// erasing black link, must recolor/rebalance tree
; 1358 : 			for (; _Fixnode != _Root()
; 1359 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	eax, DWORD PTR [ebx]

; 1360 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	mov	esi, DWORD PTR [esi+4]
	mov	edi, DWORD PTR tv1197[ebp]
	cmp	edx, DWORD PTR [eax+4]
	jne	$LL4@erase
	mov	edi, DWORD PTR tv1196[ebp]
$LN697@erase:
	mov	ecx, DWORD PTR __Erasednode$1$[ebp]
$LN3@erase:

; 1432 : 						break;	// tree now recolored/rebalanced
; 1433 : 						}
; 1434 : 					}
; 1435 : 
; 1436 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	BYTE PTR [edi+12], 1
$LN25@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1444 : 		if (0 < this->_Mysize())

	mov	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR __Where$[ebp]

; 1444 : 		if (0 < this->_Mysize())

	test	eax, eax
	je	SHORT $LN696@erase

; 1445 : 			--this->_Mysize();

	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN696@erase:

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx

; 1446 : 
; 1447 : 		return (iterator(_Where._Ptr,
; 1448 : 			_STD addressof(this->_Get_data())));	// return successor iterator
; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN37@erase:

; 1416 : 						_Fixnode = _Fixnodeparent;
; 1417 : 						}
; 1418 : 					else
; 1419 : 						{	// must rearrange left subtree
; 1420 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN39@erase

; 1421 : 							{	// rotate red up from right sub-subtree
; 1422 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx+8]

; 1423 : 							this->_Color(_Pnode) = this->_Red;
; 1424 : 							_Lrotate(_Pnode);

	push	ecx
	mov	BYTE PTR [eax+12], 1
	mov	BYTE PTR [ecx+12], 0
	mov	ecx, ebx
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Lrotate

; 1425 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi]
$LN39@erase:

; 1426 : 							}
; 1427 : 
; 1428 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	al, BYTE PTR [esi+12]
	mov	BYTE PTR [ecx+12], al

; 1429 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	BYTE PTR [esi+12], 1

; 1430 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx]

; 1431 : 						_Rrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [eax+12], 1
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Rrotate
	jmp	SHORT $LN697@erase
?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 1181 : 		return (this->_Getal().max_size());

	mov	eax, 178956970				; 0aaaaaaaH

; 1182 : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::size, COMDAT
; _this$ = ecx

; 1176 : 		return (this->_Mysize());

	mov	eax, DWORD PTR [ecx+4]

; 1177 : 		}

	ret	0
?size@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::end, COMDAT
; _this$ = ecx

; 1125 : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1126 : 		return (iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1127 : 		}

	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::begin, COMDAT
; _this$ = ecx

; 1115 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1116 : 		return (iterator(_Lmost(), _STD addressof(this->_Get_data())));
; 1117 : 		}

	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::~_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >, COMDAT
; _this$ = ecx

; 1098 : 		{	// destroy tree

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [esi]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1100 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::~_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVWindow@CEGUI@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >, COMDAT
; _this$ = ecx

; 1019 : 		{	// construct empty tree from comparator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax

; 1020 : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVWindow@CEGUI@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAVWindow@CEGUI@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAVWindow@CEGUI@@@2@XZ PROC ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAVWindow@CEGUI@@@2@XZ ENDP ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAVWindow@CEGUI@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAVWindow@CEGUI@@@2@XZ PROC ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAVWindow@CEGUI@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAVWindow@CEGUI@@@2@XZ ENDP ; std::_Compressed_pair<std::less<CEGUI::Window *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Min, COMDAT

; 607  : 		{	// return leftmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN15@Min
$LL2@Min:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Min
$LN15@Min:

; 610  : 		return (_Pnode);

	mov	eax, ecx

; 611  : 		}

	pop	ebp
	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Max, COMDAT

; 600  : 		{	// return rightmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN15@Max
$LL2@Max:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Max
$LN15@Max:

; 603  : 		return (_Pnode);

	mov	eax, ecx

; 604  : 		}

	pop	ebp
	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Myval, COMDAT

; 595  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 597  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Right, COMDAT

; 590  : 		{	// return reference to right pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 592  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Right
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Parent, COMDAT

; 585  : 		{	// return reference to parent pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 587  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Parent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Left, COMDAT

; 580  : 		{	// return reference to left pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 582  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Left
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Isnil, COMDAT

; 575  : 		{	// return reference to nil flag in node

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 577  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Isnil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Color, COMDAT

; 570  : 		{	// return reference to color in node

	npad	2
	push	ebp
	mov	ebp, esp

; 571  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 572  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Color
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >, COMDAT
; _this$ = ecx

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0

; 563  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 960  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 961  : 		}

	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 955  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 956  : 		}

	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 950  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 951  : 		}

	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 945  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 946  : 		}

	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 940  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 941  : 		}

	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 935  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 936  : 		}

	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 930  : 		return (_Mypair._Get_second()._Get_first());

	mov	eax, ecx

; 931  : 		}

	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 925  : 		return (_Mypair._Get_second()._Get_first());

	mov	eax, ecx

; 926  : 		}

	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABU?$less@PAVWindow@CEGUI@@@2@XZ
_TEXT	SEGMENT
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABU?$less@PAVWindow@CEGUI@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 920  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 921  : 		}

	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QBEABU?$less@PAVWindow@CEGUI@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAU?$less@PAVWindow@CEGUI@@@2@XZ
_TEXT	SEGMENT
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAU?$less@PAVWindow@CEGUI@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 915  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 916  : 		}

	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEAAU?$less@PAVWindow@CEGUI@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Freenode0, COMDAT
; _this$ = ecx

; 883  : 		{	// free non-value node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 891  : 		}

	pop	ebp
	ret	4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Freenode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode0, COMDAT
; _this$ = ecx

; 864  : 		{	// allocate a non-value node

	npad	2
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 864  : 		{	// allocate a non-value node

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	mov	edx, eax
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	edx, edx
	jne	SHORT $LN174@Buynode0
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN177@Buynode0:
$LN174@Buynode0:

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	ecx, DWORD PTR [edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [edx], eax
	test	ecx, ecx
	je	SHORT $LN120@Buynode0
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax
$LN120@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	lea	ecx, DWORD PTR [edx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN167@Buynode0
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax
$LN167@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 879  : 		return (_Pnode);

	mov	eax, edx
	pop	esi

; 880  : 		}

	ret	0
$LN176@Buynode0:
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Freeheadnode, COMDAT
; _this$ = ecx

; 853  : 		{	// free head node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 861  : 		}

	pop	ebp
	ret	4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buyheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN146@Buyheadnod
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN146@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], eax
	test	ecx, ecx
	je	SHORT $LN96@Buyheadnod
	mov	DWORD PTR [ecx], eax
$LN96@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	lea	ecx, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN131@Buyheadnod
	mov	DWORD PTR [ecx], eax
$LN131@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 847  : 		_Color(_Pnode) = _Black;

	mov	WORD PTR [eax+12], 257			; 00000101H

; 848  : 		_Isnil(_Pnode) = true;
; 849  : 		return (_Pnode);
; 850  : 		}

	ret	0
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 720  : 		}

	ret	0
??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Construct, COMDAT
; _this$ = ecx

; 713  : 		{	// construct head node

	npad	2
	push	esi
	mov	esi, ecx

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax
	pop	esi

; 715  : 		}

	ret	0
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Construct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVWindow@CEGUI@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVWindow@CEGUI@@@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >, COMDAT
; _this$ = ecx

; 697  : 		{	// construct from comparator

	npad	2
	push	esi
	mov	esi, ecx

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax

; 698  : 		_Construct();
; 699  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVWindow@CEGUI@@@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Min, COMDAT

; 690  : 		{	// return leftmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	ecx, DWORD PTR __Pnode$[ebp]

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN17@Min
$LL4@Min:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Min
$LN17@Min:

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	eax, ecx

; 692  : 		}

	pop	ebp
	ret	0
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Max, COMDAT

; 685  : 		{	// return rightmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	ecx, DWORD PTR __Pnode$[ebp]

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN17@Max
$LL4@Max:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Max
$LN17@Max:

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	eax, ecx

; 687  : 		}

	pop	ebp
	ret	0
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myval, COMDAT

; 680  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 681  : 		return (_Tree_val<_Val_types>::_Myval(_Pnode));
; 682  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@2@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Right, COMDAT

; 675  : 		{	// return reference to right pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 676  : 		return (_Tree_val<_Val_types>::_Right(_Pnode));
; 677  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Right
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Parent, COMDAT

; 670  : 		{	// return reference to parent pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 671  : 		return (_Tree_val<_Val_types>::_Parent(_Pnode));
; 672  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Parent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Left, COMDAT

; 665  : 		{	// return reference to left pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 666  : 		return (_Tree_val<_Val_types>::_Left(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]

; 667  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Left
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Isnil, COMDAT

; 660  : 		{	// return reference to nil flag in node

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 661  : 		return (_Tree_val<_Val_types>::_Isnil(_Pnode));
; 662  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Isnil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Color, COMDAT

; 655  : 		{	// return reference to color in node

	npad	2
	push	ebp
	mov	ebp, esp

; 571  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 656  : 		return (_Tree_val<_Val_types>::_Color(_Pnode));
; 657  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Color
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 178956970				; 0aaaaaaaH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 178956970				; 0aaaaaaaH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 178956970				; 0aaaaaaaH

; 852  : 		}

	ret	0
?max_size@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 178956970				; 0aaaaaaaH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 3

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >::allocator<std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??1?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
??1?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ PROC ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::~map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [esi]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ ENDP ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::~map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
;	COMDAT ??0?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ PROC ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >, COMDAT
; _this$ = ecx

; 101  : 		{	// construct empty map from defaults

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 102  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ ENDP ; std::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::map<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEABQAVSK_PopupWindow@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEABQAVSK_PopupWindow@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Key, COMDAT
; _this$ = ecx

; 2193 : 		{	// return reference to key in node

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 63   : 		return (_Val.first);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2195 : 		}

	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEABQAVSK_PopupWindow@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Key
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEABQAVSK_PopupWindow@@ABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEABQAVSK_PopupWindow@@ABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Kfn, COMDAT
; _this$ = ecx

; 2188 : 		{	// get key from value

	npad	2
	push	ebp
	mov	ebp, esp

; 2189 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 2190 : 		}

	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEABQAVSK_PopupWindow@@ABU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 2183 : 		{	// free all storage

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [ecx]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase

; 2185 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 2127 : 		{	// promote left node to root of subtree

	npad	2
	push	ebp
	mov	ebp, esp

; 2128 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	esi
	mov	esi, DWORD PTR [edx]

; 2129 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [edx], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi+8]

; 2130 : 
; 2131 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN2@Rrotate

; 2132 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], edx
$LN2@Rrotate:

; 2133 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]

; 2134 : 
; 2135 : 		if (_Wherenode == _Root())

	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Rrotate

; 2136 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
$LN3@Rrotate:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [edx+4]

; 2137 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	cmp	edx, DWORD PTR [eax+8]
	jne	SHORT $LN5@Rrotate

; 2138 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
$LN5@Rrotate:

; 2139 : 		else
; 2140 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]
	add	eax, 4

; 2123 : 		return (this->_Parent(this->_Myhead()));
; 2124 : 		}

	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Root
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 2118 : 		return (this->_Right(this->_Myhead()));
; 2119 : 		}

	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rmost
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 2097 : 		{	// promote right node to root of subtree

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	esi

; 2098 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	esi, DWORD PTR [edx+8]

; 2099 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edx+8], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi]

; 2100 : 
; 2101 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN2@Lrotate

; 2102 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], edx
$LN2@Lrotate:

; 2103 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]

; 2104 : 
; 2105 : 		if (_Wherenode == _Root())

	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Lrotate

; 2106 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
$LN3@Lrotate:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edx+4]

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Lrotate

; 2108 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
$LN5@Lrotate:

; 2109 : 		else
; 2110 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 2093 : 		return (this->_Left(this->_Myhead()));

	mov	eax, DWORD PTR [ecx]

; 2094 : 		}

	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 2048 : 		{	// free entire subtree, recursively

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi

; 2049 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	edi, DWORD PTR __Rootnode$[ebp]
	mov	ebx, ecx
	mov	esi, edi

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	cmp	BYTE PTR [edi+13], 0
	jne	SHORT $LN3@Erase
$LL4@Erase:

; 2051 : 			{	// free subtrees, then node
; 2052 : 			_Erase(this->_Right(_Pnode));

	push	DWORD PTR [esi+8]
	mov	ecx, ebx
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Erase

; 2053 : 			_Pnode = this->_Left(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	edi, esi
	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LL4@Erase
$LN3@Erase:
	pop	edi
	pop	esi
	pop	ebx

; 2054 : 			this->_Getal().destroy(
; 2055 : 				_STD addressof(this->_Myval(_Rootnode)));
; 2056 : 
; 2057 : 			this->_Getal().deallocate(_Rootnode, 1);
; 2058 : 			}
; 2059 : 		}

	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Newnode$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 1648 : 		{	// node exists, destroy it

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR __Newnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1653 : 		}

	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@2@ABQAVSK_PopupWindow@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@2@ABQAVSK_PopupWindow@@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1602 : 		{	// find range equivalent to _Keyval in nonmutable tree

	npad	2
	push	ebp
	mov	ebp, esp

; 1603 : 		return (_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1604 : 		}

	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@2@ABQAVSK_PopupWindow@@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@2@ABQAVSK_PopupWindow@@@Z
_TEXT	SEGMENT
__Ans$1 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@2@ABQAVSK_PopupWindow@@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1597 : 		{	// find range equivalent to _Keyval in mutable tree

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$1[ebp]
	push	eax
	call	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Ans$1[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Ans$1[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1599 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@2@ABQAVSK_PopupWindow@@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?count@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEIABQAVSK_PopupWindow@@@Z
_TEXT	SEGMENT
__Ans$ = -8						; size = 8
$T1 = 8							; size = 1
__Keyval$ = 8						; size = 4
?count@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEIABQAVSK_PopupWindow@@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::count, COMDAT
; _this$ = ecx

; 1530 : 		{	// count all elements that match _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1603 : 		return (_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	call	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Ans$[ebp+4]
	push	DWORD PTR __Ans$[ebp]
	call	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1533 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?count@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEIABQAVSK_PopupWindow@@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1475 : 		{	// erase all

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1476 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1477 : 		this->_Orphan_ptr(nullptr_t{});
; 1478 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1479 : 
; 1480 : 		_Erase(_Root());

	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR [eax+4]

; 2049 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	esi, ebx

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	cmp	BYTE PTR [ebx+13], 0
	jne	SHORT $LN23@clear
	npad	4
$LL24@clear:

; 2051 : 			{	// free subtrees, then node
; 2052 : 			_Erase(this->_Right(_Pnode));

	push	DWORD PTR [esi+8]
	mov	ecx, edi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Erase

; 2053 : 			_Pnode = this->_Left(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	ebx, esi
	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LL24@clear
$LN23@clear:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 1485 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax], eax

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [edi]

; 1481 : 		_Root() = this->_Myhead();
; 1482 : 		_Lmost() = this->_Myhead();
; 1483 : 		_Rmost() = this->_Myhead();

	mov	DWORD PTR [eax+8], eax

; 1484 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1485 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::clear
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEIABQAVSK_PopupWindow@@@Z
_TEXT	SEGMENT
__Ans$1 = -12						; size = 8
_this$1$ = -4						; size = 4
$T2 = 8							; size = 1
$T3 = 8							; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEIABQAVSK_PopupWindow@@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1467 : 		{	// erase and count all that match _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]

; 1467 : 		{	// erase and count all that match _Keyval

	mov	eax, ecx

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	lea	ecx, DWORD PTR __Ans$1[ebp]
	push	ecx
	mov	ecx, eax

; 1467 : 		{	// erase and count all that match _Keyval

	mov	DWORD PTR _this$1$[ebp], eax

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	call	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T2[ebp]
	push	DWORD PTR __Ans$1[ebp+4]
	push	DWORD PTR __Ans$1[ebp]
	call	??$_Distance1@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1470 : 		erase(_Where.first, _Where.second);

	mov	ecx, DWORD PTR _this$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1469 : 		size_type _Num = _STD distance(_Where.first, _Where.second);

	mov	ebx, eax

; 1470 : 		erase(_Where.first, _Where.second);

	lea	eax, DWORD PTR $T3[ebp]
	push	DWORD PTR __Ans$1[ebp+4]
	push	DWORD PTR __Ans$1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase

; 1471 : 		return (_Num);

	mov	eax, ebx
	pop	ebx

; 1472 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEIABQAVSK_PopupWindow@@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1452 : 		{	// erase [_First, _Last)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]

; 1453 : 		if (_First == begin() && _Last == end())

	mov	edx, DWORD PTR __Last$[ebp]
	push	esi
	push	edi
	mov	edi, ecx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	esi, DWORD PTR [edi]

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [esi]

; 1453 : 		if (_First == begin() && _Last == end())

	jne	SHORT $LN188@erase

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	edx, esi

; 1453 : 		if (_First == begin() && _Last == end())

	jne	SHORT $LN188@erase

; 1454 : 			{	// erase all
; 1455 : 			clear();

	call	?clear@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::clear

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1463 : 			}
; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN188@erase:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, edx

; 1456 : 			return (begin());
; 1457 : 			}
; 1458 : 		else
; 1459 : 			{	// partial erase, one at a time
; 1460 : 			while (_First != _Last)

	je	SHORT $LN3@erase
$LL2@erase:

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0

; 277  : 		_Myiter _Tmp = *this;

	mov	ecx, eax

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	jne	SHORT $LN142@erase

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN190@erase

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN200@erase
	npad	3
$LL153@erase:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL153@erase

; 65   : 		else

	jmp	SHORT $LN200@erase
$LN190@erase:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN200@erase
$LL137@erase:
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN200@erase

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, edx
	mov	DWORD PTR __First$[ebp], eax
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL137@erase
$LN200@erase:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR __First$[ebp], edx
$LN142@erase:

; 1461 : 				erase(_First++);

	push	ecx
	lea	eax, DWORD PTR $T1[ebp]
	mov	ecx, edi
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]

; 1456 : 			return (begin());
; 1457 : 			}
; 1458 : 		else
; 1459 : 			{	// partial erase, one at a time
; 1460 : 			while (_First != _Last)

	jne	SHORT $LL2@erase
$LN3@erase:

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax

; 1462 : 			return (iterator(_First._Ptr, _STD addressof(this->_Get_data())));

	mov	eax, ecx

; 1463 : 			}
; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv1196 = -16						; size = 4
tv1197 = -12						; size = 4
tv1195 = -8						; size = 4
tv1191 = -8						; size = 4
tv1171 = -8						; size = 4
__Erasednode$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1264 : 		{	// erase element at _Where

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR __Where$[ebp]
	push	ebx
	push	esi

; 1264 : 		{	// erase element at _Where

	mov	ebx, ecx

; 123  : 		return (_Ptr);

	mov	DWORD PTR __Erasednode$1$[ebp], eax
	push	edi

; 271  : 		++static_cast<_Mybase&>(*this);

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,std::_Iterator_base0>::operator++

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Erasednode$1$[ebp]
	mov	esi, DWORD PTR [ecx]

; 1265 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1266 : 		if (_Where._Getcont() != _STD addressof(this->_Get_data())
; 1267 : 			|| this->_Isnil(_Where._Mynode()))
; 1268 : 			{
; 1269 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1270 : 			}
; 1271 : 
; 1272 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1273 : 		++_Where;	// save successor iterator for return
; 1274 : 		_Orphan_ptr(_Erasednode);
; 1275 : 
; 1276 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1277 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1278 : 		++_Where;	// save successor iterator for return
; 1279 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1280 : 
; 1281 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1282 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1283 : 		_Nodeptr _Pnode = _Erasednode;
; 1284 : 
; 1285 : 		if (this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LN5@erase

; 1286 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	edi, DWORD PTR [ecx+8]

; 1287 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	jmp	SHORT $LN694@erase
$LN5@erase:
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LN7@erase

; 1288 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	edi, esi

; 1289 : 		else

	jmp	SHORT $LN694@erase
$LN7@erase:

; 123  : 		return (_Ptr);

	mov	edx, DWORD PTR __Where$[ebp]

; 1290 : 			{	// two subtrees, must lift successor node to replace erased
; 1291 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 1292 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	edi, DWORD PTR [edx+8]

; 1293 : 			}
; 1294 : 
; 1295 : 		if (_Pnode == _Erasednode)

	cmp	edx, ecx
	jne	$LN9@erase
$LN694@erase:

; 1296 : 			{	// at most one subtree, relink it
; 1297 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1298 : 			if (!this->_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+13], 0
	mov	esi, DWORD PTR [ecx+4]
	jne	SHORT $LN11@erase

; 1299 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	DWORD PTR [edi+4], esi
$LN11@erase:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ebx]

; 1300 : 
; 1301 : 			if (_Root() == _Erasednode)

	cmp	DWORD PTR [eax+4], ecx
	jne	SHORT $LN12@erase

; 1302 : 				_Root() = _Fixnode;	// link down from root

	mov	DWORD PTR [eax+4], edi

; 1303 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	jmp	SHORT $LN15@erase
$LN12@erase:
	cmp	DWORD PTR [esi], ecx
	jne	SHORT $LN14@erase

; 1304 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	DWORD PTR [esi], edi

; 1305 : 			else

	jmp	SHORT $LN15@erase
$LN14@erase:

; 1306 : 				this->_Right(_Fixnodeparent) =

	mov	DWORD PTR [esi+8], edi
$LN15@erase:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ebx]

; 1307 : 					_Fixnode;	// link down to right
; 1308 : 
; 1309 : 			if (_Lmost() == _Erasednode)

	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN16@erase

; 1310 : 				_Lmost() = this->_Isnil(_Fixnode)

	cmp	BYTE PTR [edi+13], 0
	je	SHORT $LN42@erase
	mov	edx, esi
	jmp	SHORT $LN43@erase
$LN42@erase:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edi]

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	edx, edi

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN166@erase
$LL165@erase:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL165@erase
$LN166@erase:
	mov	eax, DWORD PTR [ebx]
$LN43@erase:

; 1310 : 				_Lmost() = this->_Isnil(_Fixnode)

	mov	DWORD PTR [eax], edx
$LN16@erase:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ebx]

; 1311 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1312 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree
; 1313 : 
; 1314 : 			if (_Rmost() == _Erasednode)

	cmp	DWORD PTR [eax+8], ecx
	jne	$LN373@erase

; 1315 : 				_Rmost() = this->_Isnil(_Fixnode)

	cmp	BYTE PTR [edi+13], 0
	je	SHORT $LN44@erase
	mov	edx, esi
	mov	DWORD PTR [eax+8], edx

; 1316 : 					? _Fixnodeparent	// largest is parent of erased node
; 1317 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1318 : 			}
; 1319 : 		else

	jmp	SHORT $LN373@erase
$LN44@erase:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edi+8]

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	edx, edi

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN218@erase
$LL217@erase:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL217@erase
$LN218@erase:
	mov	eax, DWORD PTR [ebx]

; 1315 : 				_Rmost() = this->_Isnil(_Fixnode)

	mov	DWORD PTR [eax+8], edx

; 1316 : 					? _Fixnodeparent	// largest is parent of erased node
; 1317 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1318 : 			}
; 1319 : 		else

	jmp	SHORT $LN373@erase
$LN9@erase:

; 1320 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1321 : 			this->_Parent(this->_Left(_Erasednode)) =

	mov	DWORD PTR [esi+4], edx

; 1322 : 				_Pnode;	// link left up
; 1323 : 			this->_Left(_Pnode) =

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1324 : 				this->_Left(_Erasednode);	// link successor down
; 1325 : 
; 1326 : 			if (_Pnode == this->_Right(_Erasednode))

	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN18@erase

; 1327 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	esi, edx

; 1328 : 			else

	jmp	SHORT $LN19@erase
$LN18@erase:

; 1329 : 				{	// successor further down, link in place of erased
; 1330 : 				_Fixnodeparent =
; 1331 : 					this->_Parent(_Pnode);	// parent is successor's
; 1332 : 				if (!this->_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+13], 0
	mov	esi, DWORD PTR [edx+4]
	jne	SHORT $LN20@erase

; 1333 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	DWORD PTR [edi+4], esi
$LN20@erase:

; 1334 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	DWORD PTR [esi], edi

; 1335 : 				this->_Right(_Pnode) =

	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax

; 1336 : 					this->_Right(_Erasednode);	// link next down
; 1337 : 				this->_Parent(this->_Right(_Erasednode)) =

	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
$LN19@erase:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ebx]

; 1338 : 					_Pnode;	// right up
; 1339 : 				}
; 1340 : 
; 1341 : 			if (_Root() == _Erasednode)

	cmp	DWORD PTR [eax+4], ecx
	jne	SHORT $LN21@erase

; 1342 : 				_Root() = _Pnode;	// link down from root

	mov	DWORD PTR [eax+4], edx

; 1343 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	jmp	SHORT $LN24@erase
$LN21@erase:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx+4]

; 1343 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN23@erase

; 1344 : 				this->_Left(this->_Parent(_Erasednode)) =

	mov	DWORD PTR [eax], edx

; 1345 : 					_Pnode;	// link down to left
; 1346 : 			else

	jmp	SHORT $LN24@erase
$LN23@erase:

; 1347 : 				this->_Right(this->_Parent(_Erasednode)) =

	mov	DWORD PTR [eax+8], edx
$LN24@erase:

; 1348 : 					_Pnode;	// link down to right
; 1349 : 
; 1350 : 			this->_Parent(_Pnode) =

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 67   : 	_Left = _STD move(_Right);

	mov	eax, DWORD PTR __Erasednode$1$[ebp]
	mov	cl, BYTE PTR [edx+12]
	mov	al, BYTE PTR [eax+12]
	mov	BYTE PTR [edx+12], al

; 68   : 	_Right = _STD move(_Tmp);

	mov	eax, DWORD PTR __Erasednode$1$[ebp]
	mov	BYTE PTR [eax+12], cl
	mov	ecx, eax
$LN373@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1356 : 		if (this->_Color(_Erasednode) == this->_Black)

	cmp	BYTE PTR [ecx+12], 1
	jne	$LN25@erase

; 1357 : 			{	// erasing black link, must recolor/rebalance tree
; 1358 : 			for (; _Fixnode != _Root()
; 1359 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	eax, DWORD PTR [ebx]
	cmp	edi, DWORD PTR [eax+4]
	je	$LN3@erase
	npad	7
$LL4@erase:
	cmp	BYTE PTR [edi+12], 1
	mov	edx, esi
	mov	DWORD PTR tv1195[ebp], edx
	mov	DWORD PTR tv1197[ebp], esi
	mov	DWORD PTR tv1196[ebp], esi
	jne	$LN697@erase

; 1361 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	ecx, DWORD PTR [esi]
	cmp	edi, ecx
	jne	SHORT $LN26@erase

; 1362 : 					{	// fixup left subtree
; 1363 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]

; 1364 : 					if (this->_Color(_Pnode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN28@erase

; 1365 : 						{	// rotate red up from right subtree
; 1366 : 						this->_Color(_Pnode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1367 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1368 : 						_Lrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [esi+12], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lrotate

; 1369 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]
	mov	edx, esi
$LN28@erase:

; 1370 : 						}
; 1371 : 
; 1372 : 					if (this->_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+13], 0
	jne	$LN2@erase

; 1373 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1374 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black
; 1375 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN31@erase
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	je	SHORT $LN698@erase
$LN31@erase:

; 1376 : 						{	// redden right subtree with black children
; 1377 : 						this->_Color(_Pnode) = this->_Red;
; 1378 : 						_Fixnode = _Fixnodeparent;
; 1379 : 						}
; 1380 : 					else
; 1381 : 						{	// must rearrange right subtree
; 1382 : 						if (this->_Color(this->_Right(_Pnode))
; 1383 : 							== this->_Black)

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN33@erase

; 1384 : 							{	// rotate red up from left sub-subtree
; 1385 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx]

; 1386 : 							this->_Color(_Pnode) = this->_Red;
; 1387 : 							_Rrotate(_Pnode);

	push	ecx
	mov	BYTE PTR [eax+12], 1
	mov	BYTE PTR [ecx+12], 0
	mov	ecx, ebx
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rrotate

; 1388 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]
$LN33@erase:

; 1389 : 							}
; 1390 : 
; 1391 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	al, BYTE PTR [esi+12]
	mov	BYTE PTR [ecx+12], al

; 1392 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	BYTE PTR [esi+12], 1

; 1393 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx+8]

; 1394 : 						_Lrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [eax+12], 1
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lrotate

; 1395 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN697@erase
$LN26@erase:

; 1396 : 						}
; 1397 : 					}
; 1398 : 				else
; 1399 : 					{	// fixup right subtree
; 1400 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1401 : 					if (this->_Color(_Pnode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN34@erase

; 1402 : 						{	// rotate red up from left subtree
; 1403 : 						this->_Color(_Pnode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1404 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1405 : 						_Rrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [esi+12], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rrotate

; 1406 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR tv1195[ebp]
$LN34@erase:

; 1407 : 						}
; 1408 : 
; 1409 : 					if (this->_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN2@erase

; 1410 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1411 : 					else if (this->_Color(this->_Right(_Pnode)) ==
; 1412 : 						this->_Black
; 1413 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN37@erase
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN37@erase
$LN698@erase:

; 1414 : 						{	// redden left subtree with black children
; 1415 : 						this->_Color(_Pnode) = this->_Red;

	mov	BYTE PTR [ecx+12], 0
$LN2@erase:

; 1357 : 			{	// erasing black link, must recolor/rebalance tree
; 1358 : 			for (; _Fixnode != _Root()
; 1359 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	eax, DWORD PTR [ebx]

; 1360 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	mov	esi, DWORD PTR [esi+4]
	mov	edi, DWORD PTR tv1197[ebp]
	cmp	edx, DWORD PTR [eax+4]
	jne	$LL4@erase
	mov	edi, DWORD PTR tv1196[ebp]
$LN697@erase:
	mov	ecx, DWORD PTR __Erasednode$1$[ebp]
$LN3@erase:

; 1432 : 						break;	// tree now recolored/rebalanced
; 1433 : 						}
; 1434 : 					}
; 1435 : 
; 1436 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	BYTE PTR [edi+12], 1
$LN25@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1444 : 		if (0 < this->_Mysize())

	mov	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR __Where$[ebp]

; 1444 : 		if (0 < this->_Mysize())

	test	eax, eax
	je	SHORT $LN696@erase

; 1445 : 			--this->_Mysize();

	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN696@erase:

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx

; 1446 : 
; 1447 : 		return (iterator(_Where._Ptr,
; 1448 : 			_STD addressof(this->_Get_data())));	// return successor iterator
; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN37@erase:

; 1416 : 						_Fixnode = _Fixnodeparent;
; 1417 : 						}
; 1418 : 					else
; 1419 : 						{	// must rearrange left subtree
; 1420 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN39@erase

; 1421 : 							{	// rotate red up from right sub-subtree
; 1422 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx+8]

; 1423 : 							this->_Color(_Pnode) = this->_Red;
; 1424 : 							_Lrotate(_Pnode);

	push	ecx
	mov	BYTE PTR [eax+12], 1
	mov	BYTE PTR [ecx+12], 0
	mov	ecx, ebx
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Lrotate

; 1425 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi]
$LN39@erase:

; 1426 : 							}
; 1427 : 
; 1428 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	al, BYTE PTR [esi+12]
	mov	BYTE PTR [ecx+12], al

; 1429 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	BYTE PTR [esi+12], 1

; 1430 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx]

; 1431 : 						_Rrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [eax+12], 1
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Rrotate
	jmp	SHORT $LN697@erase
?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 1181 : 		return (this->_Getal().max_size());

	mov	eax, 178956970				; 0aaaaaaaH

; 1182 : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::end, COMDAT
; _this$ = ecx

; 1125 : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1126 : 		return (iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1127 : 		}

	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::begin, COMDAT
; _this$ = ecx

; 1115 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1116 : 		return (iterator(_Lmost(), _STD addressof(this->_Get_data())));
; 1117 : 		}

	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::~_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >, COMDAT
; _this$ = ecx

; 1098 : 		{	// destroy tree

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [esi]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1100 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::~_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVSK_PopupWindow@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >, COMDAT
; _this$ = ecx

; 1019 : 		{	// construct empty tree from comparator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax

; 1020 : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVSK_PopupWindow@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAVSK_PopupWindow@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAVSK_PopupWindow@@@2@XZ PROC ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAVSK_PopupWindow@@@2@XZ ENDP ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAVSK_PopupWindow@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAVSK_PopupWindow@@@2@XZ PROC ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAVSK_PopupWindow@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAVSK_PopupWindow@@@2@XZ ENDP ; std::_Compressed_pair<std::less<SK_PopupWindow *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Min, COMDAT

; 607  : 		{	// return leftmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN15@Min
$LL2@Min:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Min
$LN15@Min:

; 610  : 		return (_Pnode);

	mov	eax, ecx

; 611  : 		}

	pop	ebp
	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Max, COMDAT

; 600  : 		{	// return rightmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN15@Max
$LL2@Max:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Max
$LN15@Max:

; 603  : 		return (_Pnode);

	mov	eax, ecx

; 604  : 		}

	pop	ebp
	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Myval, COMDAT

; 595  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 597  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Right, COMDAT

; 590  : 		{	// return reference to right pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 592  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Right
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Parent, COMDAT

; 585  : 		{	// return reference to parent pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 587  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Parent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Left, COMDAT

; 580  : 		{	// return reference to left pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 582  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Left
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Isnil, COMDAT

; 575  : 		{	// return reference to nil flag in node

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 577  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Isnil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Color, COMDAT

; 570  : 		{	// return reference to color in node

	npad	2
	push	ebp
	mov	ebp, esp

; 571  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 572  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Color
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >, COMDAT
; _this$ = ecx

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0

; 563  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$less@PAVSK_PopupWindow@@@std@@QBE_NABQAVSK_PopupWindow@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@PAVSK_PopupWindow@@@std@@QBE_NABQAVSK_PopupWindow@@0@Z PROC ; std::less<SK_PopupWindow *>::operator(), COMDAT
; _this$ = ecx

; 233  : 		{	// apply operator< to operands

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	setb	al

; 234  : 		return (_Left < _Right);
; 235  : 		}

	pop	ebp
	ret	8
??R?$less@PAVSK_PopupWindow@@@std@@QBE_NABQAVSK_PopupWindow@@0@Z ENDP ; std::less<SK_PopupWindow *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 955  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 956  : 		}

	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 950  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 951  : 		}

	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 945  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 946  : 		}

	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 940  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 941  : 		}

	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 935  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 936  : 		}

	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 930  : 		return (_Mypair._Get_second()._Get_first());

	mov	eax, ecx

; 931  : 		}

	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 925  : 		return (_Mypair._Get_second()._Get_first());

	mov	eax, ecx

; 926  : 		}

	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABU?$less@PAVSK_PopupWindow@@@2@XZ
_TEXT	SEGMENT
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABU?$less@PAVSK_PopupWindow@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 920  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 921  : 		}

	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QBEABU?$less@PAVSK_PopupWindow@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAU?$less@PAVSK_PopupWindow@@@2@XZ
_TEXT	SEGMENT
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAU?$less@PAVSK_PopupWindow@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 915  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 916  : 		}

	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEAAU?$less@PAVSK_PopupWindow@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Freenode0, COMDAT
; _this$ = ecx

; 883  : 		{	// free non-value node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 891  : 		}

	pop	ebp
	ret	4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Freenode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode0, COMDAT
; _this$ = ecx

; 864  : 		{	// allocate a non-value node

	npad	2
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 864  : 		{	// allocate a non-value node

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	mov	edx, eax
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	edx, edx
	jne	SHORT $LN174@Buynode0
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN177@Buynode0:
$LN174@Buynode0:

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	ecx, DWORD PTR [edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [edx], eax
	test	ecx, ecx
	je	SHORT $LN120@Buynode0
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax
$LN120@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	lea	ecx, DWORD PTR [edx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN167@Buynode0
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax
$LN167@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 879  : 		return (_Pnode);

	mov	eax, edx
	pop	esi

; 880  : 		}

	ret	0
$LN176@Buynode0:
?_Buynode0@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Freeheadnode, COMDAT
; _this$ = ecx

; 853  : 		{	// free head node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 861  : 		}

	pop	ebp
	ret	4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ
_TEXT	SEGMENT
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buyheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN146@Buyheadnod
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN146@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], eax
	test	ecx, ecx
	je	SHORT $LN96@Buyheadnod
	mov	DWORD PTR [ecx], eax
$LN96@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	lea	ecx, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN131@Buyheadnod
	mov	DWORD PTR [ecx], eax
$LN131@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 847  : 		_Color(_Pnode) = _Black;

	mov	WORD PTR [eax+12], 257			; 00000101H

; 848  : 		_Isnil(_Pnode) = true;
; 849  : 		return (_Pnode);
; 850  : 		}

	ret	0
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 720  : 		}

	ret	0
??1?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Construct, COMDAT
; _this$ = ecx

; 713  : 		{	// construct head node

	npad	2
	push	esi
	mov	esi, ecx

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax
	pop	esi

; 715  : 		}

	ret	0
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Construct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVSK_PopupWindow@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVSK_PopupWindow@@@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >, COMDAT
; _this$ = ecx

; 697  : 		{	// construct from comparator

	npad	2
	push	esi
	mov	esi, ecx

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax

; 698  : 		_Construct();
; 699  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PAVSK_PopupWindow@@@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Min, COMDAT

; 690  : 		{	// return leftmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	ecx, DWORD PTR __Pnode$[ebp]

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN17@Min
$LL4@Min:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Min
$LN17@Min:

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	eax, ecx

; 692  : 		}

	pop	ebp
	ret	0
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Max, COMDAT

; 685  : 		{	// return rightmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	ecx, DWORD PTR __Pnode$[ebp]

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN17@Max
$LL4@Max:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Max
$LN17@Max:

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	eax, ecx

; 687  : 		}

	pop	ebp
	ret	0
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myval, COMDAT

; 680  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 681  : 		return (_Tree_val<_Val_types>::_Myval(_Pnode));
; 682  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@2@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Right, COMDAT

; 675  : 		{	// return reference to right pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 676  : 		return (_Tree_val<_Val_types>::_Right(_Pnode));
; 677  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Right
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Parent, COMDAT

; 670  : 		{	// return reference to parent pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 671  : 		return (_Tree_val<_Val_types>::_Parent(_Pnode));
; 672  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Parent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Left, COMDAT

; 665  : 		{	// return reference to left pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 666  : 		return (_Tree_val<_Val_types>::_Left(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]

; 667  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Left
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Isnil, COMDAT

; 660  : 		{	// return reference to nil flag in node

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 661  : 		return (_Tree_val<_Val_types>::_Isnil(_Pnode));
; 662  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Isnil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Color, COMDAT

; 655  : 		{	// return reference to color in node

	npad	2
	push	ebp
	mov	ebp, esp

; 571  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 656  : 		return (_Tree_val<_Val_types>::_Color(_Pnode));
; 657  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Color
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 178956970				; 0aaaaaaaH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 178956970				; 0aaaaaaaH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 178956970				; 0aaaaaaaH

; 852  : 		}

	ret	0
?max_size@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 178956970				; 0aaaaaaaH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 3

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	24					; 00000018H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >::allocator<std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0SK_PopupManager@@IAE@XZ PROC				; SK_PopupManager::SK_PopupManager
; _this$ = ecx

; 145  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SK_PopupManager@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [edi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [edi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buyheadnode
	mov	DWORD PTR [edi], eax
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 145  : {

	lea	esi, DWORD PTR [edi+8]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 714  : 		_Myhead() = _Buyheadnode();

	mov	ecx, esi
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 145  : {

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buyheadnode
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 147  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 714  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 147  : }

	mov	eax, edi
	mov	DWORD PTR [edi+16], 0
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0SK_PopupManager@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$map@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@@std@@QAE@XZ
__ehhandler$??0SK_PopupManager@@IAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0SK_PopupManager@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SK_PopupManager@@IAE@XZ ENDP				; SK_PopupManager::SK_PopupManager
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
__Ans$1 = -8						; size = 8
__Ans$2 = -8						; size = 8
$T3 = -8						; size = 8
__Ans$4 = -8						; size = 8
$T5 = 8							; size = 1
$T6 = 8							; size = 4
$T7 = 8							; size = 4
_e$ = 8							; size = 4
?OnDestroyPopup@SK_PopupManager@@QAE_NABVEventArgs@CEGUI@@@Z PROC ; SK_PopupManager::OnDestroyPopup
; _this$ = ecx

; 252  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx

; 256  :   if (popups_rev_.count (win_event.window))

	mov	ebx, DWORD PTR _e$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1603 : 		return (_Eqrange(_Keyval));

	lea	eax, DWORD PTR __Ans$4[ebp]
	push	esi
	push	edi
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 252  : {

	mov	edi, ecx

; 256  :   if (popups_rev_.count (win_event.window))

	add	ebx, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1603 : 		return (_Eqrange(_Keyval));

	push	ebx
	push	eax
	lea	ecx, DWORD PTR [edi+8]
	call	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T5[ebp]
	push	DWORD PTR __Ans$4[ebp+4]
	push	DWORD PTR __Ans$4[ebp]
	call	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<CEGUI::Window * const,SK_PopupWindow *> > > > >
	add	esp, 12					; 0000000cH
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 256  :   if (popups_rev_.count (win_event.window))

	test	eax, eax
	je	SHORT $LN141@OnDestroyP
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 237  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	push	ebx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR [edi+8]
	call	??$_Try_emplace@ABQAVWindow@CEGUI@@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Try_emplace<CEGUI::Window * const &>

; 352  : 		return (try_emplace(_Keyval).first->second);

	mov	eax, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	mov	ecx, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 352  : 		return (try_emplace(_Keyval).first->second);

	add	eax, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	eax
	lea	eax, DWORD PTR __Ans$2[ebp]
	push	eax
	call	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>

; 1470 : 		erase(_Where.first, _Where.second);

	push	DWORD PTR __Ans$2[ebp+4]
	lea	eax, DWORD PTR $T7[ebp]
	mov	ecx, edi
	push	DWORD PTR __Ans$2[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	ebx
	lea	eax, DWORD PTR __Ans$1[ebp]
	push	eax
	lea	ecx, DWORD PTR [edi+8]
	call	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>

; 1470 : 		erase(_Where.first, _Where.second);

	push	DWORD PTR __Ans$1[ebp+4]
	lea	eax, DWORD PTR $T6[ebp]
	push	DWORD PTR __Ans$1[ebp]
	lea	ecx, DWORD PTR [edi+8]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
$LN141@OnDestroyP:
	pop	edi
	pop	esi
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 262  :   return true;

	mov	al, 1
	pop	ebx

; 263  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?OnDestroyPopup@SK_PopupManager@@QAE_NABVEventArgs@CEGUI@@@Z ENDP ; SK_PopupManager::OnDestroyPopup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
__Ans$1 = -8						; size = 8
$T2 = 8							; size = 1
_popup$ = 8						; size = 4
?isPopup@SK_PopupManager@@QAE_NPAVSK_PopupWindow@@@Z PROC ; SK_PopupManager::isPopup
; _this$ = ecx

; 151  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1603 : 		return (_Eqrange(_Keyval));

	lea	eax, DWORD PTR _popup$[ebp]
	push	eax
	lea	eax, DWORD PTR __Ans$1[ebp]
	push	eax
	call	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T2[ebp]
	push	DWORD PTR __Ans$1[ebp+4]
	push	DWORD PTR __Ans$1[ebp]
	call	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SK_PopupWindow * const,CEGUI::Window *> > > > >
	add	esp, 12					; 0000000cH
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 152  :   if (popups_.count (popup))

	test	eax, eax
	setne	al

; 153  :     return true;
; 154  : 
; 155  :   return false;
; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?isPopup@SK_PopupManager@@QAE_NPAVSK_PopupWindow@@@Z ENDP ; SK_PopupManager::isPopup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
_window_mgr$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?destroyAllPopups@SK_PopupManager@@QAEXXZ PROC		; SK_PopupManager::destroyAllPopups
; _this$ = ecx

; 221  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?destroyAllPopups@SK_PopupManager@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	esi
	push	edi

; 222  :   if (gui_ctx_ != nullptr)

	mov	eax, DWORD PTR [ebx+16]
	test	eax, eax
	je	SHORT $LN4@destroyAll

; 223  :     CEGUI::System::getDllSingleton ().destroyGUIContext (*gui_ctx_);

	push	eax
	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VSystem@CEGUI@@@CEGUI@@SAAAVSystem@2@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?destroyGUIContext@System@CEGUI@@QAEXAAVGUIContext@2@@Z
$LN4@destroyAll:

; 224  : 
; 225  :   gui_ctx_ = nullptr;

	mov	DWORD PTR [ebx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	esi, DWORD PTR [ebx]

; 43   : 		: _Ptr(_Pnode)

	mov	esi, DWORD PTR [esi]
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 229  :   CEGUI::WindowManager& window_mgr =

	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VWindowManager@CEGUI@@@CEGUI@@SAAAVWindowManager@2@XZ
	mov	DWORD PTR _window_mgr$1$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	esi, DWORD PTR [ebx]
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 232  :   while (it != popups_.end ())

	je	SHORT $LN3@destroyAll
	npad	2
$LL2@destroyAll:

; 233  :   {
; 234  :     SK_PopupWindow* popup =
; 235  :       (it)->first;

	mov	edi, DWORD PTR [esi+16]

; 236  : 
; 237  :     window_mgr.destroyWindow (popup->window_);

	mov	ecx, eax
	push	DWORD PTR [edi]
	call	DWORD PTR __imp_?destroyWindow@WindowManager@CEGUI@@QAEXPAVWindow@2@@Z

; 238  : 
; 239  :     popup->window_ = nullptr;

	mov	DWORD PTR [edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 413  : 		_Myiter _Tmp = *this;

	mov	eax, esi

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [esi+13], 0
	jne	SHORT $LN113@destroyAll

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [esi+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN521@destroyAll

; 63   : 			_Ptr = _Mytree::_Min(

	mov	esi, ecx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [esi]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN113@destroyAll
	npad	2
$LL124@destroyAll:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	esi, ecx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [esi]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [ecx+13], 0
	je	SHORT $LL124@destroyAll

; 65   : 		else

	jmp	SHORT $LN113@destroyAll
$LN521@destroyAll:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	ecx, DWORD PTR [esi+4]
	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN548@destroyAll
$LL108@destroyAll:
	cmp	esi, DWORD PTR [ecx+8]
	jne	SHORT $LN548@destroyAll

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	esi, ecx
	mov	ecx, DWORD PTR [ecx+4]
	cmp	BYTE PTR [ecx+13], 0
	je	SHORT $LL108@destroyAll
$LN548@destroyAll:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	esi, ecx
$LN113@destroyAll:
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 241  :     delete (it++)->first;

	mov	edi, DWORD PTR [eax+16]
	test	edi, edi
	je	SHORT $LN153@destroyAll
	mov	ecx, edi
	call	??1SK_PopupWindow@@IAE@XZ		; SK_PopupWindow::~SK_PopupWindow
	push	4
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN153@destroyAll:

; 232  :   while (it != popups_.end ())

	mov	eax, DWORD PTR _window_mgr$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	esi, DWORD PTR [ebx]
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 232  :   while (it != popups_.end ())

	jne	SHORT $LL2@destroyAll
$LN3@destroyAll:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1480 : 		_Erase(_Root());

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edi, DWORD PTR [eax+4]

; 2049 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	esi, edi

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	cmp	BYTE PTR [edi+13], 0
	jne	SHORT $LN179@destroyAll
	npad	5
$LL180@destroyAll:

; 2051 : 			{	// free subtrees, then node
; 2052 : 			_Erase(this->_Right(_Pnode));

	push	DWORD PTR [esi+8]
	mov	ecx, ebx
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Erase

; 2053 : 			_Pnode = this->_Left(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	edi, esi
	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LL180@destroyAll
$LN179@destroyAll:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ebx]
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 245  :   popups_rev_.clear ();

	lea	edi, DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1481 : 		_Root() = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1482 : 		_Lmost() = this->_Myhead();

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [eax], eax

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ebx]

; 1483 : 		_Rmost() = this->_Myhead();

	mov	DWORD PTR [eax+8], eax

; 1484 : 		this->_Mysize() = 0;

	mov	DWORD PTR [ebx+4], 0

; 1480 : 		_Erase(_Root());

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ebx, DWORD PTR [eax+4]

; 2049 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	esi, ebx

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	cmp	BYTE PTR [ebx+13], 0
	jne	SHORT $LN361@destroyAll
	npad	7
$LL362@destroyAll:

; 2051 : 			{	// free subtrees, then node
; 2052 : 			_Erase(this->_Right(_Pnode));

	push	DWORD PTR [esi+8]
	mov	ecx, edi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Erase

; 2053 : 			_Pnode = this->_Left(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	ebx, esi
	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LL362@destroyAll
$LN361@destroyAll:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 246  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1481 : 		_Root() = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1482 : 		_Lmost() = this->_Myhead();

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax], eax

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [edi]

; 1483 : 		_Rmost() = this->_Myhead();

	mov	DWORD PTR [eax+8], eax

; 1484 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0
	pop	edi
	pop	esi
	pop	ebx
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 246  : }

	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?destroyAllPopups@SK_PopupManager@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?destroyAllPopups@SK_PopupManager@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?destroyAllPopups@SK_PopupManager@@QAEXXZ ENDP		; SK_PopupManager::destroyAllPopups
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
__Ans$1 = -12						; size = 8
__Ans$2 = -12						; size = 8
$T3 = -12						; size = 8
_this$1$ = -4						; size = 4
$T4 = 8							; size = 4
$T5 = 8							; size = 4
_popup$ = 8						; size = 4
?destroyPopup@SK_PopupManager@@QAEXPAVSK_PopupWindow@@@Z PROC ; SK_PopupManager::destroyPopup
; _this$ = ecx

; 199  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx

; 200  :   if (isPopup (popup))

	mov	ebx, DWORD PTR _popup$[ebp]
	push	esi
	mov	esi, ecx
	push	ebx
	mov	DWORD PTR _this$1$[ebp], esi
	call	?isPopup@SK_PopupManager@@QAE_NPAVSK_PopupWindow@@@Z ; SK_PopupManager::isPopup
	test	al, al
	je	SHORT $LN138@destroyPop

; 201  :   {
; 202  :     CEGUI::WindowManager& window_mgr =

	push	edi
	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VWindowManager@CEGUI@@@CEGUI@@SAAAVWindowManager@2@XZ
	mov	edi, eax

; 203  :       CEGUI::WindowManager::getDllSingleton ();
; 204  : 
; 205  :     popups_.erase     (popups_rev_ [popup->window_]);

	add	esi, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 237  : 		return (_Try_emplace(_Keyval, _STD forward<_Mappedty>(_Mapval)...));

	push	ebx
	lea	eax, DWORD PTR $T3[ebp]
	mov	ecx, esi
	push	eax
	call	??$_Try_emplace@ABQAVWindow@CEGUI@@$$V@?$map@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@ABQAVWindow@CEGUI@@@Z ; std::map<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> > >::_Try_emplace<CEGUI::Window * const &>

; 352  : 		return (try_emplace(_Keyval).first->second);

	mov	ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	lea	eax, DWORD PTR __Ans$2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\map

; 352  : 		return (try_emplace(_Keyval).first->second);

	add	ecx, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	ecx
	mov	ecx, DWORD PTR _this$1$[ebp]
	push	eax
	call	??$_Eqrange@PAVSK_PopupWindow@@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@V12@@1@ABQAVSK_PopupWindow@@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Eqrange<SK_PopupWindow *>

; 1470 : 		erase(_Where.first, _Where.second);

	push	DWORD PTR __Ans$2[ebp+4]
	mov	ecx, DWORD PTR _this$1$[ebp]
	lea	eax, DWORD PTR $T5[ebp]
	push	DWORD PTR __Ans$2[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::erase

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	ebx
	lea	eax, DWORD PTR __Ans$1[ebp]
	mov	ecx, esi
	push	eax
	call	??$_Eqrange@PAVWindow@CEGUI@@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@V12@@1@ABQAVWindow@CEGUI@@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Eqrange<CEGUI::Window *>

; 1470 : 		erase(_Where.first, _Where.second);

	push	DWORD PTR __Ans$1[ebp+4]
	lea	eax, DWORD PTR $T4[ebp]
	mov	ecx, esi
	push	DWORD PTR __Ans$1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::erase
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 209  :     window_mgr.destroyWindow (popup->window_);

	push	DWORD PTR [ebx]
	mov	ecx, edi
	call	DWORD PTR __imp_?destroyWindow@WindowManager@CEGUI@@QAEXPAVWindow@2@@Z
	mov	ecx, ebx

; 210  : 
; 211  :     popup->window_ = nullptr;

	mov	DWORD PTR [ebx], 0
	call	??1SK_PopupWindow@@IAE@XZ		; SK_PopupWindow::~SK_PopupWindow
	push	4
	push	ebx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	pop	edi
$LN138@destroyPop:
	pop	esi
	pop	ebx

; 212  : 
; 213  :     delete popup;
; 214  :   }
; 215  : 
; 216  :   //SK_TextOverlayFactory::getInstance ()->drawAllOverlays (0.0f, 0.0f, true);
; 217  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?destroyPopup@SK_PopupManager@@QAEXPAVSK_PopupWindow@@@Z ENDP ; SK_PopupManager::destroyPopup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h
; File c:\users\andon\source\repos\specialk\depends\include\cegui\memberfunctionslot.h
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
$T2 = -180						; size = 152
$T3 = -28						; size = 8
$T4 = -20						; size = 8
$T5 = -20						; size = 8
$T6 = -20						; size = 8
$T7 = -20						; size = 8
$T8 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T9 = 8							; size = 4
$T10 = 8						; size = 4
_szLayout$ = 8						; size = 4
?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z PROC ; SK_PopupManager::createPopup
; _this$ = ecx

; 162  : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 168				; 000000a8H
	push	ebx
	mov	ebx, ecx
	push	edi

; 163  :   if (gui_ctx_ == nullptr)

	cmp	DWORD PTR [ebx+16], 0
	jne	SHORT $LN2@createPopu

; 164  :   {
; 165  :     gui_ctx_ =

	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VSystem@CEGUI@@@CEGUI@@SAAAVSystem@2@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?getDefaultGUIContext@System@CEGUI@@QBEAAVGUIContext@2@XZ
	mov	DWORD PTR [ebx+16], eax
$LN2@createPopu:

; 166  :       &CEGUI::System::getDllSingleton ().getDefaultGUIContext ();
; 167  :   }
; 168  : 
; 169  :   auto* popup =
; 170  :     new SK_PopupWindow (szLayout);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN6@createPopu
	push	DWORD PTR _szLayout$[ebp]
	mov	ecx, eax
	call	??0SK_PopupWindow@@IAE@PBD@Z		; SK_PopupWindow::SK_PopupWindow
	mov	edi, eax
	jmp	SHORT $LN7@createPopu
$LN6@createPopu:
	xor	edi, edi
$LN7@createPopu:
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 171  : 
; 172  :   if (popup)

	test	edi, edi
	je	$LN118@createPopu

; 173  :   {
; 174  :     if (popup->window_ != nullptr)

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	$LN4@createPopu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR $T7[ebp+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	mov	ecx, ebx
	push	esi
	lea	eax, DWORD PTR $T7[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR $T7[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	push	eax
	call	??$_Buynode@U?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@$$QAU?$pair@PAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Buynode<std::pair<SK_PopupWindow *,CEGUI::Window *> >

; 1085 : 		return (_Insert_nohint(false,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1085 : 		return (_Insert_nohint(false,

	mov	ecx, ebx
	push	eax
	push	0
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??$_Insert_nohint@AAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVSK_PopupWindow@@PAVWindow@CEGUI@@U?$less@PAVSK_PopupWindow@@@std@@V?$allocator@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@1@PAU?$_Tree_node@U?$pair@QAVSK_PopupWindow@@PAVWindow@CEGUI@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<SK_PopupWindow *,CEGUI::Window *,std::less<SK_PopupWindow *>,std::allocator<std::pair<SK_PopupWindow * const,CEGUI::Window *> >,0> >::_Insert_nohint<std::pair<SK_PopupWindow * const,CEGUI::Window *> &,std::_Tree_node<std::pair<SK_PopupWindow * const,CEGUI::Window *>,void *> *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR [edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	lea	ecx, DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR $T5[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR $T5[ebp+4], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	call	??$_Buynode@U?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@?$_Tree_comp_alloc@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@$$QAU?$pair@PAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Buynode<std::pair<CEGUI::Window *,SK_PopupWindow *> >

; 1085 : 		return (_Insert_nohint(false,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1085 : 		return (_Insert_nohint(false,

	lea	ecx, DWORD PTR [ebx+8]
	push	eax
	push	0
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??$_Insert_nohint@AAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@PAVWindow@CEGUI@@PAVSK_PopupWindow@@U?$less@PAVWindow@CEGUI@@@std@@V?$allocator@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@1@PAU?$_Tree_node@U?$pair@QAVWindow@CEGUI@@PAVSK_PopupWindow@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<CEGUI::Window *,SK_PopupWindow *,std::less<CEGUI::Window *>,std::allocator<std::pair<CEGUI::Window * const,SK_PopupWindow *> >,0> >::_Insert_nohint<std::pair<CEGUI::Window * const,SK_PopupWindow *> &,std::_Tree_node<std::pair<CEGUI::Window * const,SK_PopupWindow *>,void *> *>
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h

; 573  : 		init();

	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_?init@String@CEGUI@@AAEXXZ

; 1520 : 		return assign(cstr, strlen(cstr));

	push	13					; 0000000dH
	push	OFFSET $SG222960
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_?assign@String@CEGUI@@QAEAAV12@PBDI@Z
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h

; 141  :         d_functor_impl(new MemberFunctionSlot<T>(function, obj))

	push	12					; 0000000cH
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 179  :       popup->window_->subscribeEvent (

	mov	DWORD PTR __$EHRec$[ebp+8], 1
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h

; 141  :         d_functor_impl(new MemberFunctionSlot<T>(function, obj))

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	edx, eax
	mov	DWORD PTR $T9[ebp], edx
	pop	esi
	test	edx, edx
	je	SHORT $LN107@createPopu
; File c:\users\andon\source\repos\specialk\depends\include\cegui\memberfunctionslot.h

; 50   :     {}

	mov	DWORD PTR [edx], OFFSET ??_7?$MemberFunctionSlot@VSK_PopupManager@@@CEGUI@@6B@
	mov	DWORD PTR [edx+4], OFFSET ?OnDestroyPopup@SK_PopupManager@@QAE_NABVEventArgs@CEGUI@@@Z ; SK_PopupManager::OnDestroyPopup
	mov	DWORD PTR [edx+8], ebx
; File c:\users\andon\source\repos\specialk\depends\include\cegui\subscriberslot.h

; 141  :         d_functor_impl(new MemberFunctionSlot<T>(function, obj))

	jmp	SHORT $LN108@createPopu
$LN107@createPopu:
	xor	edx, edx
$LN108@createPopu:
	mov	DWORD PTR $T10[ebp], edx
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 179  :       popup->window_->subscribeEvent (

	mov	ecx, DWORD PTR [edi]
	push	edx
	add	ecx, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	lea	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR [eax+8]
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@QAE@XZ ; CEGUI::RefCounted<CEGUI::BoundSlot>::~RefCounted<CEGUI::BoundSlot>
	lea	ecx, DWORD PTR $T10[ebp]
	call	DWORD PTR __imp_??1SubscriberSlot@CEGUI@@QAE@XZ
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@CEGUI@@QAE@XZ

; 180  :         "DestructStart",//CEGUI::Window::EventDestructionStarted,
; 181  :           CEGUI::Event::Subscriber ( &SK_PopupManager::OnDestroyPopup,
; 182  :                                        this
; 183  :                                    )
; 184  :       );
; 185  : 
; 186  :       //gui_ctx_->setRootWindow (popup->window_);
; 187  : 
; 188  :       return popup;

	mov	eax, edi
	pop	edi
	pop	ebx

; 189  :     }
; 190  : 
; 191  :     delete popup;
; 192  :   }
; 193  : 
; 194  :   return nullptr;
; 195  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN4@createPopu:
	mov	ecx, edi
	call	??1SK_PopupWindow@@IAE@XZ		; SK_PopupWindow::~SK_PopupWindow
	push	4
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN118@createPopu:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	xor	eax, eax
	pop	edi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z$0:
	push	4
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	DWORD PTR __imp_??1String@CEGUI@@QAE@XZ
__unwindfunclet$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z$2:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	DWORD PTR __imp_??1SubscriberSlot@CEGUI@@QAE@XZ
__ehhandler$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z:
	mov	eax, OFFSET __ehfuncinfo$?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createPopup@SK_PopupManager@@QAEPAVSK_PopupWindow@@PBD@Z ENDP ; SK_PopupManager::createPopup
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?getInstance@SK_PopupManager@@SAPAV1@XZ PROC		; SK_PopupManager::getInstance

; 134  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getInstance@SK_PopupManager@@SAPAV1@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 135  :   if (__manager__ == nullptr)

	mov	eax, DWORD PTR ?__manager__@SK_PopupManager@@0PAV1@A ; SK_PopupManager::__manager__
	test	eax, eax
	jne	SHORT $LN2@getInstanc

; 136  :   {
; 137  :     __manager__ =

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN4@getInstanc
	mov	ecx, eax
	call	??0SK_PopupManager@@IAE@XZ		; SK_PopupManager::SK_PopupManager
	mov	DWORD PTR ?__manager__@SK_PopupManager@@0PAV1@A, eax ; SK_PopupManager::__manager__

; 138  :       new SK_PopupManager ();
; 139  :   }
; 140  : 
; 141  :   return __manager__;
; 142  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN4@getInstanc:

; 136  :   {
; 137  :     __manager__ =

	xor	eax, eax
	mov	DWORD PTR ?__manager__@SK_PopupManager@@0PAV1@A, eax ; SK_PopupManager::__manager__
$LN2@getInstanc:

; 138  :       new SK_PopupManager ();
; 139  :   }
; 140  : 
; 141  :   return __manager__;
; 142  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?getInstance@SK_PopupManager@@SAPAV1@XZ$0:
	push	20					; 00000014H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?getInstance@SK_PopupManager@@SAPAV1@XZ:
	mov	eax, OFFSET __ehfuncinfo$?getInstance@SK_PopupManager@@SAPAV1@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getInstance@SK_PopupManager@@SAPAV1@XZ ENDP		; SK_PopupManager::getInstance
; Function compile flags: /Ogtp
;	COMDAT ??_GSK_PopupWindow@@IAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSK_PopupWindow@@IAEPAXI@Z PROC			; SK_PopupWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1SK_PopupWindow@@IAE@XZ		; SK_PopupWindow::~SK_PopupWindow
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar
	push	4
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN4@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GSK_PopupWindow@@IAEPAXI@Z ENDP			; SK_PopupWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
;	COMDAT ??1SK_PopupWindow@@IAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
??1SK_PopupWindow@@IAE@XZ PROC				; SK_PopupWindow::~SK_PopupWindow, COMDAT
; _this$ = ecx

; 54   :   {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SK_PopupWindow@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 55   :     if (window_ != nullptr)

	cmp	DWORD PTR [esi], 0
	je	SHORT $LN8@SK_PopupWi

; 56   :     {
; 57   :       try

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 58   :       {
; 59   :         CEGUI::WindowManager& window_mgr =

	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VWindowManager@CEGUI@@@CEGUI@@SAAAVWindowManager@2@XZ

; 60   :           CEGUI::WindowManager::getDllSingleton ();
; 61   : 
; 62   :         window_mgr.destroyWindow (window_);

	push	DWORD PTR [esi]
	mov	ecx, eax
	call	DWORD PTR __imp_?destroyWindow@WindowManager@CEGUI@@QAEXPAVWindow@2@@Z

; 63   : 
; 64   :         window_ = nullptr;

	mov	DWORD PTR [esi], 0
$LN8@SK_PopupWi:

; 70   :     }
; 71   :   }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$??1SK_PopupWindow@@IAE@XZ$0:

; 65   :       }
; 66   : 
; 67   :       catch (...)
; 68   :       {
; 69   :       }

	mov	eax, $LN8@SK_PopupWi
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1SK_PopupWindow@@IAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1SK_PopupWindow@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SK_PopupWindow@@IAE@XZ ENDP				; SK_PopupWindow::~SK_PopupWindow
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
;	COMDAT ??0SK_PopupWindow@@IAE@PBD@Z
_TEXT	SEGMENT
$T2 = -324						; size = 152
$T3 = -172						; size = 152
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_szLayout$ = 8						; size = 4
??0SK_PopupWindow@@IAE@PBD@Z PROC			; SK_PopupWindow::SK_PopupWindow, COMDAT
; _this$ = ecx

; 37   :   SK_PopupWindow (const char* szLayout)

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SK_PopupWindow@@IAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], edi

; 38   :   {
; 39   :     try

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 41   :       CEGUI::WindowManager& window_mgr =

	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VWindowManager@CEGUI@@@CEGUI@@SAAAVWindowManager@2@XZ
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h

; 573  : 		init();

	lea	ecx, DWORD PTR $T2[ebp]
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 41   :       CEGUI::WindowManager& window_mgr =

	mov	esi, eax
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h

; 573  : 		init();

	call	DWORD PTR __imp_?init@String@CEGUI@@AAEXXZ

; 1520 : 		return assign(cstr, strlen(cstr));

	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_?assign@String@CEGUI@@QAEAAV12@PBDI@Z

; 573  : 		init();

	lea	ecx, DWORD PTR $T3[ebp]
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 44   :       window_ =

	mov	BYTE PTR __$EHRec$[ebp+12], 1
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h

; 573  : 		init();

	call	DWORD PTR __imp_?init@String@CEGUI@@AAEXXZ

; 1520 : 		return assign(cstr, strlen(cstr));

	mov	edx, DWORD PTR _szLayout$[ebp]
	mov	ecx, edx
	lea	ebx, DWORD PTR [ecx+1]
$LL68@SK_PopupWi:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL68@SK_PopupWi
	sub	ecx, ebx
	push	ecx
	push	edx
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_?assign@String@CEGUI@@QAEAAV12@PBDI@Z
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 44   :       window_ =

	push	0
	push	0
	lea	eax, DWORD PTR $T2[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	mov	ecx, esi
	push	eax
	call	DWORD PTR __imp_?loadLayoutFromFile@WindowManager@CEGUI@@QAEPAVWindow@2@ABVString@2@0P6A_NPAV32@AAV42@2PAX@Z3@Z
	mov	esi, DWORD PTR __imp_??1String@CEGUI@@QAE@XZ
	lea	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [edi], eax
	call	esi
	lea	ecx, DWORD PTR $T2[ebp]
	call	esi
	jmp	SHORT $LN9@SK_PopupWi
__catch$??0SK_PopupWindow@@IAE@PBD@Z$0:

; 45   :         window_mgr.loadLayoutFromFile (szLayout);
; 46   :     }
; 47   : 
; 48   :     catch (...)
; 49   :     {
; 50   :     }

	mov	eax, $LN69@SK_PopupWi
	ret	0
$LN69@SK_PopupWi:
	mov	edi, DWORD PTR _this$[ebp]
$LN9@SK_PopupWi:

; 51   :   }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SK_PopupWindow@@IAE@PBD@Z$2:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	DWORD PTR __imp_??1String@CEGUI@@QAE@XZ
__unwindfunclet$??0SK_PopupWindow@@IAE@PBD@Z$3:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	DWORD PTR __imp_??1String@CEGUI@@QAE@XZ
__ehhandler$??0SK_PopupWindow@@IAE@PBD@Z:
	mov	eax, OFFSET __ehfuncinfo$??0SK_PopupWindow@@IAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SK_PopupWindow@@IAE@PBD@Z ENDP			; SK_PopupWindow::SK_PopupWindow
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
??BSK_PopupWindow@@QAEPAVWindow@CEGUI@@XZ PROC		; SK_PopupWindow::operator CEGUI::Window *
; _this$ = ecx

; 97   :   return window_;

	mov	eax, DWORD PTR [ecx]

; 98   : }

	ret	0
??BSK_PopupWindow@@QAEPAVWindow@CEGUI@@XZ ENDP		; SK_PopupWindow::operator CEGUI::Window *
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h
; File c:\users\andon\source\repos\specialk\depends\include\cegui\window.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\window.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\window.h
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp
_TEXT	SEGMENT
$T2 = -168						; size = 152
__$EHRec$ = -16						; size = 16
_szName$ = 8						; size = 4
?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z PROC ; SK_PopupWindow::getChild
; _this$ = ecx

; 79   : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 156				; 0000009cH
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 80   :   if (window_ == nullptr)

	cmp	DWORD PTR [esi], 0
	je	SHORT $LN9@getChild
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h

; 573  : 		init();

	lea	ecx, DWORD PTR $T2[ebp]
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 83   :   try

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\users\andon\source\repos\specialk\depends\include\cegui\string.h

; 573  : 		init();

	call	DWORD PTR __imp_?init@String@CEGUI@@AAEXXZ

; 1520 : 		return assign(cstr, strlen(cstr));

	mov	edx, DWORD PTR _szName$[ebp]
	mov	ecx, edx
	lea	edi, DWORD PTR [ecx+1]
$LL41@getChild:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL41@getChild
	sub	ecx, edi
	push	ecx
	push	edx
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_?assign@String@CEGUI@@QAEAAV12@PBDI@Z
; File c:\users\andon\source\repos\specialk\depends\include\cegui\window.h

; 753  :         return static_cast<Window*>(getChildElement(name_path));

	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 85   :     return window_->getChild (szName);

	mov	BYTE PTR __$EHRec$[ebp+12], 1
; File c:\users\andon\source\repos\specialk\depends\include\cegui\window.h

; 753  :         return static_cast<Window*>(getChildElement(name_path));

	call	DWORD PTR __imp_?getChildElement@NamedElement@CEGUI@@QBEPAV12@ABVString@2@@Z
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 85   :     return window_->getChild (szName);

	lea	ecx, DWORD PTR $T2[ebp]
; File c:\users\andon\source\repos\specialk\depends\include\cegui\window.h

; 753  :         return static_cast<Window*>(getChildElement(name_path));

	mov	esi, eax
; File c:\users\andon\source\repos\specialk\src\osd\popup.cpp

; 85   :     return window_->getChild (szName);

	call	DWORD PTR __imp_??1String@CEGUI@@QAE@XZ
	mov	eax, esi

; 91   : 
; 92   :   return nullptr;
; 93   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z$0:

; 86   :   }
; 87   : 
; 88   :   catch (...)
; 89   :   {
; 90   :   }

	mov	eax, $LN9@getChild
	ret	0
$LN9@getChild:

; 91   : 
; 92   :   return nullptr;
; 93   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	xor	eax, eax
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z$2:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	DWORD PTR __imp_??1String@CEGUI@@QAE@XZ
__ehhandler$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z:
	mov	eax, OFFSET __ehfuncinfo$?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getChild@SK_PopupWindow@@QAEPAVWindow@CEGUI@@PBD@Z ENDP ; SK_PopupWindow::getChild
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$less@PAVWindow@CEGUI@@@std@@QBE_NABQAVWindow@CEGUI@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@PAVWindow@CEGUI@@@std@@QBE_NABQAVWindow@CEGUI@@0@Z PROC ; std::less<CEGUI::Window *>::operator(), COMDAT
; _this$ = ecx

; 233  : 		{	// apply operator< to operands

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	setb	al

; 234  : 		return (_Left < _Right);
; 235  : 		}

	pop	ebp
	ret	8
??R?$less@PAVWindow@CEGUI@@@std@@QBE_NABQAVWindow@CEGUI@@0@Z ENDP ; std::less<CEGUI::Window *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\refcounted.h
;	COMDAT ?release@?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@AAEXXZ
_TEXT	SEGMENT
?release@?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@AAEXXZ PROC ; CEGUI::RefCounted<CEGUI::BoundSlot>::release, COMDAT
; _this$ = ecx

; 186  :     {

	npad	2
	push	esi
	mov	esi, ecx

; 187  :         if (!--*d_count)

	mov	eax, DWORD PTR [esi+4]
	add	DWORD PTR [eax], -1
	jne	SHORT $LN2@release

; 188  :         {
; 189  :             // use CEGUI allocators for the object
; 190  :             CEGUI_DELETE_AO d_object;

	push	edi
	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN7@release
	mov	ecx, edi
	call	DWORD PTR __imp_??1BoundSlot@CEGUI@@QAE@XZ
	push	12					; 0000000cH
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN7@release:

; 191  : 
; 192  :             // use system heap for this! no CEGUI_DELETE_PT!
; 193  :             delete d_count;

	push	4
	push	DWORD PTR [esi+4]
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 194  :             d_object = 0;

	mov	DWORD PTR [esi], 0

; 195  :             d_count = 0;

	mov	DWORD PTR [esi+4], 0
	pop	edi
$LN2@release:
	pop	esi

; 196  :         }
; 197  :     }

	ret	0
?release@?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@AAEXXZ ENDP ; CEGUI::RefCounted<CEGUI::BoundSlot>::release
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\refcounted.h
;	COMDAT ??1?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@QAE@XZ
_TEXT	SEGMENT
??1?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@QAE@XZ PROC	; CEGUI::RefCounted<CEGUI::BoundSlot>::~RefCounted<CEGUI::BoundSlot>, COMDAT
; _this$ = ecx

; 84   :     {

	npad	2
	push	esi
	mov	esi, ecx

; 85   :         if (d_object)

	cmp	DWORD PTR [esi], 0
	je	SHORT $LN5@RefCounted

; 187  :         if (!--*d_count)

	mov	eax, DWORD PTR [esi+4]
	add	DWORD PTR [eax], -1
	jne	SHORT $LN5@RefCounted
	push	edi

; 188  :         {
; 189  :             // use CEGUI allocators for the object
; 190  :             CEGUI_DELETE_AO d_object;

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN10@RefCounted
	mov	ecx, edi
	call	DWORD PTR __imp_??1BoundSlot@CEGUI@@QAE@XZ
	push	12					; 0000000cH
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN10@RefCounted:

; 191  : 
; 192  :             // use system heap for this! no CEGUI_DELETE_PT!
; 193  :             delete d_count;

	push	4
	push	DWORD PTR [esi+4]
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 194  :             d_object = 0;

	mov	DWORD PTR [esi], 0

; 195  :             d_count = 0;

	mov	DWORD PTR [esi+4], 0
	pop	edi
$LN5@RefCounted:
	pop	esi

; 86   :             release();
; 87   :     }

	ret	0
??1?$RefCounted@VBoundSlot@CEGUI@@@CEGUI@@QAE@XZ ENDP	; CEGUI::RefCounted<CEGUI::BoundSlot>::~RefCounted<CEGUI::BoundSlot>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GBoundSlot@CEGUI@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GBoundSlot@CEGUI@@QAEPAXI@Z PROC			; CEGUI::BoundSlot::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??1BoundSlot@CEGUI@@QAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN4@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GBoundSlot@CEGUI@@QAEPAXI@Z ENDP			; CEGUI::BoundSlot::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\slotfunctorbase.h
;	COMDAT ??_GSlotFunctorBase@CEGUI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSlotFunctorBase@CEGUI@@UAEPAXI@Z PROC		; CEGUI::SlotFunctorBase::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx

; 46   :     virtual ~SlotFunctorBase() {};

	mov	DWORD PTR [esi], OFFSET ??_7SlotFunctorBase@CEGUI@@6B@
	je	SHORT $LN7@scalar
	push	4
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN7@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GSlotFunctorBase@CEGUI@@UAEPAXI@Z ENDP		; CEGUI::SlotFunctorBase::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SlotFunctorBase@CEGUI@@QAE@XZ
_TEXT	SEGMENT
??0SlotFunctorBase@CEGUI@@QAE@XZ PROC			; CEGUI::SlotFunctorBase::SlotFunctorBase, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7SlotFunctorBase@CEGUI@@6B@
	mov	eax, ecx
	ret	0
??0SlotFunctorBase@CEGUI@@QAE@XZ ENDP			; CEGUI::SlotFunctorBase::SlotFunctorBase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\slotfunctorbase.h
;	COMDAT ??1SlotFunctorBase@CEGUI@@UAE@XZ
_TEXT	SEGMENT
??1SlotFunctorBase@CEGUI@@UAE@XZ PROC			; CEGUI::SlotFunctorBase::~SlotFunctorBase, COMDAT
; _this$ = ecx

; 46   :     virtual ~SlotFunctorBase() {};

	mov	DWORD PTR [ecx], OFFSET ??_7SlotFunctorBase@CEGUI@@6B@
	ret	0
??1SlotFunctorBase@CEGUI@@UAE@XZ ENDP			; CEGUI::SlotFunctorBase::~SlotFunctorBase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??0?$tuple@$$V@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$tuple@$$V@std@@QAE@ABV01@@Z PROC			; std::tuple<>::tuple<>, COMDAT
; _this$ = ecx

; 238  : 		{	// copy construct
; 239  : 		}

	mov	eax, ecx
	ret	4
??0?$tuple@$$V@std@@QAE@ABV01@@Z ENDP			; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\tuple
;	COMDAT ??0?$tuple@$$V@std@@QAE@XZ
_TEXT	SEGMENT
??0?$tuple@$$V@std@@QAE@XZ PROC				; std::tuple<>::tuple<>, COMDAT
; _this$ = ecx

; 229  : 		{	// default construct
; 230  : 		}

	mov	eax, ecx
	ret	0
??0?$tuple@$$V@std@@QAE@XZ ENDP				; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 96   : 	{	// deallocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 97   :  #if defined(_M_IX86) || defined(_M_X64)
; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	mov	ecx, DWORD PTR __Count$[ebp]
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	ecx, eax
	jbe	SHORT $LN2@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 99   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	al, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jb	SHORT $LN5@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jae	SHORT $LN6@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN9@Deallocate:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN3@Deallocate:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 	}

	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 50   : 	{	// allocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 51   : 	void *_Ptr = 0;
; 52   : 
; 53   : 	if (_Count == 0)

	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate

; 54   : 		return (_Ptr);

	xor	eax, eax
$LN1@Allocate:

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN2@Allocate:

; 55   : 
; 56   : 	// check overflow of multiply
; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN3@Allocate

; 58   : 		_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	BYTE PTR __Try_aligned_allocation$[ebp], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	eax, DWORD PTR [ecx+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	eax, ecx
	ja	SHORT $LN6@Allocate

; 69   : 			_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN7@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN4@Allocate:

; 76   : 
; 77   :  #ifdef _DEBUG
; 78   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 79   :  #endif /* _DEBUG */
; 80   : 		}
; 81   : 	else
; 82   :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 83   : 	static_cast<void>(_Try_aligned_allocation);
; 84   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 85   : 
; 86   : 		{	// allocate normal block
; 87   : 		_Ptr = ::operator new(_User_size);

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN1@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 75   : 		}

	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 98   :         return;
; 99   :     }

	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 91   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 94   :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
