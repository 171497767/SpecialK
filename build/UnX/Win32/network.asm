; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\update\network.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?update_dlg_backup@@3_NA			; update_dlg_backup
PUBLIC	?update_dlg_keep@@3_NA				; update_dlg_keep
PUBLIC	?update_dlg_file@@3PA_WA			; update_dlg_file
PUBLIC	?update_dlg_build@@3PA_WA			; update_dlg_build
PUBLIC	?update_dlg_relnotes@@3PA_WA			; update_dlg_relnotes
PUBLIC	?hWndUpdateDlg@@3PAUHWND__@@A			; hWndUpdateDlg
PUBLIC	?hWndRemind@@3PAUHWND__@@A			; hWndRemind
_BSS	SEGMENT
?update_dlg_backup@@3_NA DB 01H DUP (?)			; update_dlg_backup
	ALIGN	4

?update_dlg_keep@@3_NA DB 01H DUP (?)			; update_dlg_keep
	ALIGN	4

?update_dlg_file@@3PA_WA DW 0104H DUP (?)		; update_dlg_file
?update_dlg_build@@3PA_WA DW 0104H DUP (?)		; update_dlg_build
?update_dlg_relnotes@@3PA_WA DW 0800H DUP (?)		; update_dlg_relnotes
?hWndRemind@@3PAUHWND__@@A DD 01H DUP (?)		; hWndRemind
?__SK_UpdateStatus@@3JC DD 01H DUP (?)			; __SK_UpdateStatus
_BSS	ENDS
_DATA	SEGMENT
?hWndUpdateDlg@@3PAUHWND__@@A DD 0ffffffffH		; hWndUpdateDlg
_DATA	ENDS
CONST	SEGMENT
$SG161862 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'A', 00H, 'u', 00H, 't'
	DB	00H, 'o', 00H, '-', 00H, 'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 00H, 00H
$SG161863 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'S', 00H, 'o', 00H, 'f'
	DB	00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H
	ORG $+2
$SG161864 DB	'Y', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG161867 DB	'R', 00H, 'e', 00H, 'm', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, '(', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'd', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG161868 DB	'N', 00H, 'o', 00H, ',', 00H, ' ', 00H, 'I', 00H, ' ', 00H
	DB	'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'm', 00H, 'y', 00H, ' ', 00H, 'm', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, '.', 00H, '.', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG161877 DB	'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, '.', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
$SG161871 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'U', 00H, 'p', 00H, 'd', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'A', 00H, 'v', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' '
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG161872 DB	'W', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 'k'
	DB	00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'u', 00H
	DB	'p', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 'd', 00H, 'e', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 'w', 00H, '?', 00H, 00H, 00H
	ORG $+2
$SG161873 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's', 00H, 't'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, 'y', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'D', 00H
	DB	'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 00H, 00H
$SG161874 DB	'W', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 'k'
	DB	00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'b', 00H
	DB	'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'i', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'n', 00H, 'o'
	DB	00H, 'w', 00H, '?', 00H, 00H, 00H
$SG161878 DB	'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, '.', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
$SG161880 DB	'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, '.', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, 00H, 00H
$SG161881 DB	' ', 00H, 00H, 00H
$SG161882 DB	'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG161883 DB	'L', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG161884 DB	'B', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'h', 00H
	DB	00H, 00H
	ORG $+2
$SG161887 DB	'L', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG161888 DB	'%', 00H, '1', 00H, '2', 00H, '8', 00H, '[', 00H, '^', 00H
	DB	',', 00H, ']', 00H, ',', 00H, '%', 00H, 'i', 00H, 00H, 00H
$SG161889 DB	'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG161890 DB	'B', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'h', 00H
	DB	00H, 00H
	ORG $+2
$SG161891 DB	'[', 00H, 'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, '.', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, ']'
	DB	00H, 0aH, 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, '=', 00H, '0', 00H, 0aH, 00H, 0aH
	DB	00H, 00H, 00H
	ORG $+2
$SG161892 DB	'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, '.', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG161893 DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i', 00H
	DB	'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG161894 DB	'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG161895 DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H
	DB	'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'e', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG161896 DB	'<', 00H, 'a', 00H, ' ', 00H, 'h', 00H, 'r', 00H, 'e', 00H
	DB	'f', 00H, '=', 00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, '>'
	DB	00H, '%', 00H, 's', 00H, '<', 00H, '/', 00H, 'a', 00H, '>', 00H
	DB	0aH, 00H, 0aH, 00H, '%', 00H, 's', 00H, 00H, 00H
$SG161897 DB	'%', 00H, '1', 00H, '2', 00H, '8', 00H, '[', 00H, '^', 00H
	DB	',', 00H, ']', 00H, ',', 00H, '%', 00H, 'i', 00H, 00H, 00H
$SG161898 DB	'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG161899 DB	'R', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H
	DB	'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'e', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG161902 DB	'A', 00H, 'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H
	DB	'e', 00H, '.', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG161905 DB	'U', 00H, 'R', 00H, 'L', 00H, 00H, 00H
$SG161906 DB	'U', 00H, 'R', 00H, 'L', 00H, 00H, 00H
$SG161907 DB	'%', 00H, 's', 00H, '%', 00H, 's', 00H, '.', 00H, '7', 00H
	DB	'z', 00H, 00H, 00H
$SG161908 DB	'H', 00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'D', 00H
	DB	'e', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG161909 DB	'S', 00H, 'h', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'M', 00H
	DB	'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'e', 00H, 't'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG161915 DB	'B', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'u', 00H, 'p', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG161916 DB	'B', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'u', 00H, 'p', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG161917 DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'.', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG161918 DB	'K', 00H, 'e', 00H, 'e', 00H, 'p', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, 00H, 00H
$SG161919 DB	'K', 00H, 'e', 00H, 'e', 00H, 'p', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's'
	DB	00H, 00H, 00H
$SG161920 DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'.', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG161931 DB	'R', 00H, 'e', 00H, 'm', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG161927 DB	'[', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, '.', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 'l', 00H, ']', 00H, 0aH, 00H, 'B', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'c', 00H, 'h', 00H, '=', 00H, 'L', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 0aH, 00H, 'I', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'P', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '=', 00H
	DB	' ', 00H, 0aH, 00H, 0aH, 00H, '[', 00H, 'U', 00H, 'p', 00H, 'd'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'U', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, ']', 00H, 0aH, 00H, 'F', 00H, 'r', 00H, 'e'
	DB	00H, 'q', 00H, 'u', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'y', 00H
	DB	'=', 00H, '6', 00H, 'h', 00H, 0aH, 00H, 'B', 00H, 'a', 00H, 'c'
	DB	00H, 'k', 00H, 'u', 00H, 'p', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 's', 00H, '=', 00H, 'f', 00H, 'a', 00H, 'l', 00H, 's'
	DB	00H, 'e', 00H, 0aH, 00H, 'K', 00H, 'e', 00H, 'e', 00H, 'p', 00H
	DB	'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 's', 00H, '=', 00H, 't', 00H, 'r', 00H, 'u', 00H
	DB	'e', 00H, 0aH, 00H, 0aH, 00H, 00H, 00H
$SG161928 DB	'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG161929 DB	'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG161930 DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'.', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG160330 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'A', 00H, 'u', 00H, 't'
	DB	00H, 'o', 00H, '-', 00H, 'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 00H, 00H
$SG160335 DB	'*', 00H, '/', 00H, '*', 00H, 00H, 00H
$SG160336 DB	'H', 00H, 'T', 00H, 'T', 00H, 'P', 00H, '/', 00H, '1', 00H
	DB	'.', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG160502 DB	'W', 00H, 'A', 00H, 'V', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG160505 DB	'N', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, 'l', 00H
	DB	'a', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 'h', 00H, 00H, 00H
$SG160506 DB	'A', 00H, 'f', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'1', 00H, '5', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, 'u'
	DB	00H, 't', 00H, 'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG160507 DB	'A', 00H, 'f', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'1', 00H, ' ', 00H, 'H', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 00H
	DB	00H
	ORG $+2
$SG160508 DB	'A', 00H, 'f', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'1', 00H, '2', 00H, ' ', 00H, 'H', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG160509 DB	'T', 00H, 'o', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG160510 DB	'N', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG160521 DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'.', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG160523 DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'.', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG160526 DB	'R', 00H, 'e', 00H, 'm', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG160527 DB	'R', 00H, 'e', 00H, 'm', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG160528 DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'.', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG160529 DB	'F', 00H, 'r', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H
	DB	'n', 00H, 'c', 00H, 'y', 00H, 00H, 00H
$SG160530 DB	'F', 00H, 'r', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H
	DB	'n', 00H, 'c', 00H, 'y', 00H, 00H, 00H
$SG160531 DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'.', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG160532 DB	'R', 00H, 'e', 00H, 'm', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG160533 DB	'n', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG160594 DB	'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG161705 DB	' ', 00H, ' ', 00H, ' ', 00H, '1', 00H, ' ', 00H, 'F', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, ',', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, '5', 00H, '.', 00H, '2', 00H, 'f', 00H, ' ', 00H, 'M', 00H
	DB	'i', 00H, 'B', 00H, 00H, 00H
$SG161707 DB	'%', 00H, '4', 00H, 'u', 00H, ' ', 00H, 'F', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, ',', 00H, ' ', 00H, '%', 00H, '5'
	DB	00H, '.', 00H, '2', 00H, 'f', 00H, ' ', 00H, 'M', 00H, 'i', 00H
	DB	'B', 00H, 00H, 00H
	ORG $+2
$SG161708 DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 'o', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG161710 DB	'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, ':', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, '5', 00H, '.', 00H, '2', 00H, 'f', 00H, ' ', 00H, 'M', 00H
	DB	'i', 00H, 'B', 00H, 00H, 00H
$SG161714 DB	'O', 00H, 'P', 00H, 'E', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG161720 DB	'F', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 's', 00H, 'h', 00H
	DB	' ', 00H, 'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 0aH, 00H, 'T', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'g', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'l'
	DB	00H, 'l', 00H, ' ', 00H, 'a', 00H, 'u', 00H, 't', 00H, 'o', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'y', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'i', 00H
	DB	't', 00H, '.', 00H, 00H, 00H
$SG161721 DB	'F', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 's', 00H, 'h', 00H
	DB	' ', 00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG161722 DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, ' ', 00H, 'R', 00H
	DB	'e', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'N', 00H, 'o', 00H, 't', 00H, 'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG161725 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'S', 00H, 'o', 00H, 'f'
	DB	00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'U', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H
	DB	00H
$SG161726 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'U', 00H, 'p', 00H, 'd', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'S', 00H, 'u', 00H, 'c', 00H
	DB	'c', 00H, 'e', 00H, 's', 00H, 's', 00H, 'f', 00H, 'u', 00H, 'l'
	DB	00H, 00H, 00H
	ORG $+2
$SG161727 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'S', 00H, 'o', 00H, 'f'
	DB	00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H
	ORG $+6
$SG161728 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's', 00H, 't'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'S', 00H, 'u', 00H, 'c', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, 'f', 00H, 'u', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+6
$SG161732 DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'g', 00H
	DB	' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' '
	DB	00H, 'w', 00H, 'e', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'a', 00H
	DB	'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ','
	DB	00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'y', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'g', 00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, 's', 00H
	DB	' ', 00H, 'h', 00H, 'a', 00H, 'v', 00H, 'e', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'b', 00H, 'a', 00H
	DB	'c', 00H, 'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'u', 00H, 'p'
	DB	00H, '.', 00H, 00H, 00H
	ORG $+2
$SG161733 DB	'N', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	'f', 00H, 'i', 00H, 'g', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'b', 00H, 'y', 00H, ' ', 00H
	DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H
	DB	00H, 00H
	ORG $+4
$SG161734 DB	'Y', 00H, 'o', 00H, 'u', 00H, 'r', 00H, ' ', 00H, 'o', 00H
	DB	'l', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 's', 00H, ' ', 00H, 'h', 00H, 'a', 00H, 'v', 00H, 'e', 00H
	DB	' ', 00H, 'b', 00H, 'e', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'b'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'u', 00H, 'p', 00H, ' ', 00H, '<', 00H, 'a', 00H, ' ', 00H, 'h'
	DB	00H, 'r', 00H, 'e', 00H, 'f', 00H, '=', 00H, '"', 00H, '%', 00H
	DB	's', 00H, '\', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, '\', 00H, '%', 00H, 's', 00H, '\', 00H
	DB	'"', 00H, '>', 00H, 'h', 00H, 'e', 00H, 'r', 00H, 'e', 00H, '.'
	DB	00H, '<', 00H, '/', 00H, 'a', 00H, '>', 00H, 0aH, 00H, 0aH, 00H
	DB	'%', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG161735 DB	';', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	' ', 00H, 'a', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, ',', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'y', 00H, 'o', 00H, 'u', 00H, 'r', 00H, ' ', 00H, 'o'
	DB	00H, 'r', 00H, 'i', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'a', 00H
	DB	'l', 00H, 's', 00H, ' ', 00H, 'h', 00H, 'a', 00H, 'v', 00H, 'e'
	DB	00H, ' ', 00H, 'b', 00H, 'e', 00H, 'e', 00H, 'n', 00H, ' ', 00H
	DB	'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'u', 00H, 'p', 00H, '.', 00H, 00H, 00H
	ORG $+6
$SG161736 DB	';', 00H, ' ', 00H, 'n', 00H, 'o', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'g', 00H, ' ', 00H, 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'w', 00H
	DB	'e', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '.', 00H, 00H, 00H
$SG161737 DB	'E', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'm', 00H, 'o', 00H, 'd', 00H, ' '
	DB	00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H
	DB	'w', 00H, 'e', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'o', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	't', 00H, 'e', 00H, 'n', 00H, '%', 00H, 's', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?swprintf@@YAHQA_WQB_WZZ			; swprintf
PUBLIC	??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ ; __vcrt_va_start_verify_argument_type<wchar_t const * const>
PUBLIC	_wmemcpy
PUBLIC	_wmemmove
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?length@?$char_traits@_W@std@@SAIQB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > > >::_Get_data
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@@std@@QBEABIXZ ; std::_List_alloc<std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > > >::_Mysize
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > >,1>::_Get_second
PUBLIC	?empty@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@QBE_NXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > >::empty
PUBLIC	?empty@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@V?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@$0A@@std@@@std@@QBE_NXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,iSK_INISection,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> >,0> >::empty
PUBLIC	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini
PUBLIC	??1iParameter@sk@@QAE@XZ			; sk::iParameter::~iParameter
PUBLIC	??1?$Parameter@_J@sk@@QAE@XZ			; sk::Parameter<__int64>::~Parameter<__int64>
PUBLIC	??1ParameterInt64@sk@@QAE@XZ			; sk::ParameterInt64::~ParameterInt64
PUBLIC	??_GParameterInt64@sk@@QAEPAXI@Z		; sk::ParameterInt64::`scalar deleting destructor'
PUBLIC	??1?$Parameter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@sk@@QAE@XZ ; sk::Parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~Parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??1ParameterStringW@sk@@QAE@XZ			; sk::ParameterStringW::~ParameterStringW
PUBLIC	??_GParameterStringW@sk@@QAEPAXI@Z		; sk::ParameterStringW::`scalar deleting destructor'
PUBLIC	??0?$allocator@PAViParameter@sk@@@std@@QAE@XZ	; std::allocator<sk::iParameter *>::allocator<sk::iParameter *>
PUBLIC	?deallocate@?$allocator@PAViParameter@sk@@@std@@QAEXPAPAViParameter@sk@@I@Z ; std::allocator<sk::iParameter *>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::_Wrap_alloc<std::allocator<sk::iParameter *> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAEXPAPAViParameter@sk@@I@Z ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::deallocate
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<sk::iParameter *> >::_Vector_val<std::_Simple_types<sk::iParameter *> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_second
PUBLIC	??0?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::vector<sk::iParameter *,std::allocator<sk::iParameter *> >
PUBLIC	??1?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::~vector<sk::iParameter *,std::allocator<sk::iParameter *> >
PUBLIC	?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Destroy
PUBLIC	?_Tidy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXXZ ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Tidy
PUBLIC	??0ParameterFactory@sk@@QAE@XZ			; sk::ParameterFactory::ParameterFactory
PUBLIC	??1ParameterFactory@sk@@QAE@XZ			; sk::ParameterFactory::~ParameterFactory
PUBLIC	??1sk_file_entry_s@@QAE@XZ			; sk_file_entry_s::~sk_file_entry_s
PUBLIC	??_Gsk_file_entry_s@@QAEPAXI@Z			; sk_file_entry_s::`scalar deleting destructor'
PUBLIC	?SK_UpdateSoftware1@@YGJPB_W_N@Z		; SK_UpdateSoftware1
PUBLIC	?SK_UpdateSoftware@@YGJPB_W@Z			; SK_UpdateSoftware
PUBLIC	?DownloadThread@@YGKPAX@Z			; DownloadThread
PUBLIC	??$max@N@std@@YAABNABN0@Z			; std::max<double>
PUBLIC	??0<unnamed-type-annoy_sound>@@QAE@XZ		; <unnamed-type-annoy_sound>::<unnamed-type-annoy_sound>
PUBLIC	?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z	; RemindMeLater_DlgProc
PUBLIC	?DownloadDialogCallback@@YGJPAUHWND__@@IIJJ@Z	; DownloadDialogCallback
PUBLIC	?DecompressionProgressCallback@@YGHHH@Z		; DecompressionProgressCallback
PUBLIC	?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z		; Update_DlgProc
PUBLIC	?deallocate@?$allocator@Usk_file_entry_s@@@std@@QAEXPAUsk_file_entry_s@@I@Z ; std::allocator<sk_file_entry_s>::deallocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAEXPAUsk_file_entry_s@@I@Z ; std::_Wrap_alloc<std::allocator<sk_file_entry_s> >::deallocate
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Myend
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk_file_entry_s> >,std::_Vector_val<std::_Simple_types<sk_file_entry_s> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk_file_entry_s> >,std::_Vector_val<std::_Simple_types<sk_file_entry_s> >,1>::_Get_second
PUBLIC	??1?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE@XZ ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::~vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >
PUBLIC	?begin@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@2@XZ ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::begin
PUBLIC	?end@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@2@XZ ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::end
PUBLIC	?_Destroy@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@AAEXPAUsk_file_entry_s@@0@Z ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::_Destroy
PUBLIC	?_Tidy@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@AAEXXZ ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::_Tidy
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAE@PAUsk_file_entry_s@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEABUsk_file_entry_s@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Compat
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAE@PAUsk_file_entry_s@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEAAUsk_file_entry_s@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator++
PUBLIC	?UpdateDlg_Thread@@YGKPAX@Z			; UpdateDlg_Thread
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >
PUBLIC	??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1><>
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z		; std::addressof<wchar_t *>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$_Destroy_range@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
PUBLIC	??$_Destroy_range@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<sk::iParameter *>,sk::iParameter * *>
PUBLIC	??$_Unfancy@_W@std@@YAPA_WPA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
PUBLIC	??$_Destroy_range1@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<sk::iParameter *>,sk::iParameter * *>
PUBLIC	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z		; std::forward<wchar_t * &>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$_Unfancy@Usk_file_entry_s@@@std@@YAPAUsk_file_entry_s@@PAU1@@Z ; std::_Unfancy<sk_file_entry_s>
PUBLIC	??$destroy@Usk_file_entry_s@@@?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAEXPAUsk_file_entry_s@@@Z ; std::_Wrap_alloc<std::allocator<sk_file_entry_s> >::destroy<sk_file_entry_s>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@Usk_file_entry_s@@@?$allocator_traits@V?$allocator@Usk_file_entry_s@@@std@@@std@@SAXAAV?$allocator@Usk_file_entry_s@@@1@PAUsk_file_entry_s@@@Z ; std::allocator_traits<std::allocator<sk_file_entry_s> >::destroy<sk_file_entry_s>
PUBLIC	??$destroy@Usk_file_entry_s@@@?$allocator@Usk_file_entry_s@@@std@@QAEXPAUsk_file_entry_s@@@Z ; std::allocator<sk_file_entry_s>::destroy<sk_file_entry_s>
PUBLIC	??_R0?AViParameter@sk@@@8			; sk::iParameter `RTTI Type Descriptor'
PUBLIC	??_C@_1M@BLGDOOIB@?$AAR?$AAe?$AAt?$AAr?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_R0?AVParameterInt64@sk@@@8			; sk::ParameterInt64 `RTTI Type Descriptor'
PUBLIC	??_R0?AVParameterStringW@sk@@@8			; sk::ParameterStringW `RTTI Type Descriptor'
PUBLIC	??_C@_19CLMIMLD@?$AAO?$AAP?$AAE?$AAN?$AA?$AA@	; `string'
PUBLIC	??_R0?AVParameterBool@sk@@@8			; sk::ParameterBool `RTTI Type Descriptor'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	__real@3eb0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40dfffc000000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp__srand:PROC
EXTRN	__imp__rand:PROC
EXTRN	_vswprintf:PROC
EXTRN	_swscanf:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp__wcsncpy:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp__CreateFileW@28:PROC
EXTRN	__imp__DeleteFileW@4:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__SleepEx@8:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	__imp__GetCurrentThread@0:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__GetSystemTimeAsFileTime@4:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__LoadResource@8:PROC
EXTRN	__imp__LockResource@4:PROC
EXTRN	__imp__lstrcatW@8:PROC
EXTRN	__imp__FindResourceW@12:PROC
EXTRN	__imp__CreateFontW@56:PROC
EXTRN	__imp__GetMessageW@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageW@4:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__BringWindowToTop@4:PROC
EXTRN	__imp__CreateDialogParamW@20:PROC
EXTRN	__imp__EndDialog@8:PROC
EXTRN	__imp__GetDlgItem@8:PROC
EXTRN	__imp__SetDlgItemTextW@12:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__SetActiveWindow@4:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__SetWindowTextW@8:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__GetDesktopWindow@0:PROC
EXTRN	__imp__IsGUIThread@4:PROC
EXTRN	__imp__PlaySoundW@12:PROC
EXTRN	__imp__ShellExecuteW@24:PROC
EXTRN	??0iSK_INI@@QAE@PB_W@Z:PROC			; iSK_INI::iSK_INI
EXTRN	??1iSK_INI@@QAE@XZ:PROC				; iSK_INI::~iSK_INI
EXTRN	?import@iSK_INI@@UAGXPB_W@Z:PROC		; iSK_INI::import
EXTRN	?write@iSK_INI@@UAGXPB_W@Z:PROC			; iSK_INI::write
EXTRN	?get_sections@iSK_INI@@UAGABV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@XZ:PROC ; iSK_INI::get_sections
EXTRN	?get_section@iSK_INI@@UAGAAUiSK_INISection@@PB_W@Z:PROC ; iSK_INI::get_section
EXTRN	?contains_section@iSK_INI@@UAG_NPB_W@Z:PROC	; iSK_INI::contains_section
EXTRN	?get_section_f@iSK_INI@@UAAAAUiSK_INISection@@QB_WZZ:PROC ; iSK_INI::get_section_f
EXTRN	?SK_RestartGame@@YAXPB_W@Z:PROC			; SK_RestartGame
EXTRN	?SK_SYS_GetInstallPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:PROC ; SK_SYS_GetInstallPath
EXTRN	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ:PROC		; SK_GetDLL
EXTRN	?SK_IsSuperSpecialK@@YA_NXZ:PROC		; SK_IsSuperSpecialK
EXTRN	?SK_GetFileSize@@YG_KPB_W@Z:PROC		; SK_GetFileSize
EXTRN	?SK_GetConfigPath@@YGPB_WXZ:PROC		; SK_GetConfigPath
EXTRN	?SK_IsHostAppSKIM@@YA_NXZ:PROC			; SK_IsHostAppSKIM
EXTRN	?SK_IsInjected@@YG_N_N@Z:PROC			; SK_IsInjected
EXTRN	?SK_SYS_GetVersionPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:PROC ; SK_SYS_GetVersionPath
EXTRN	?SK_Version_GetRepoIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:PROC ; SK_Version_GetRepoIniPath
EXTRN	?SK_Version_GetInstallIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:PROC ; SK_Version_GetInstallIniPath
EXTRN	?SK_Get7ZFileContents@@YA?AV?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@PB_W@Z:PROC ; SK_Get7ZFileContents
EXTRN	?SK_Decompress7z@@YAJPB_W0_NP6GHHH@Z@Z:PROC	; SK_Decompress7z
EXTRN	?SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z:PROC ; SK_RealizeForegroundWindow
EXTRN	__imp__TaskDialogIndirect@16:PROC
EXTRN	__imp__InternetCrackUrlW@16:PROC
EXTRN	__imp__InternetOpenW@20:PROC
EXTRN	__imp__InternetCloseHandle@4:PROC
EXTRN	__imp__InternetConnectW@32:PROC
EXTRN	__imp__InternetReadFile@16:PROC
EXTRN	__imp__InternetQueryDataAvailable@16:PROC
EXTRN	__imp__InternetSetOptionW@16:PROC
EXTRN	__imp__HttpOpenRequestW@32:PROC
EXTRN	__imp__HttpSendRequestW@20:PROC
EXTRN	__imp__HttpQueryInfoW@20:PROC
EXTRN	?SK_Inject_Stop@@YAXXZ:PROC			; SK_Inject_Stop
EXTRN	?SK_Inject_Start@@YAXXZ:PROC			; SK_Inject_Start
EXTRN	??$create_parameter@_J@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z:PROC ; sk::ParameterFactory::create_parameter<__int64>
EXTRN	??$create_parameter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z:PROC ; sk::ParameterFactory::create_parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
EXTRN	??$create_parameter@_N@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z:PROC ; sk::ParameterFactory::create_parameter<bool>
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	__chkstk:PROC
EXTRN	__ultod3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?config_files_changed@@3_NA:BYTE		; config_files_changed
EXTRN	?SK_bypass_dialog_active@@3JC:DWORD		; SK_bypass_dialog_active
EXTRN	?SK_bypass_dialog_hwnd@@3PAUHWND__@@A:DWORD	; SK_bypass_dialog_hwnd
EXTRN	?SK_bypass_dialog_tid@@3JC:DWORD		; SK_bypass_dialog_tid
EXTRN	?SK_bypass_dialog_tid@@3JC:DWORD		; SK_bypass_dialog_tid
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?annoy_sound@@3U<unnamed-type-annoy_sound>@@A DQ 01H DUP (?) ; annoy_sound
_BSS	ENDS
;	COMDAT ?last_total@?1??DecompressionProgressCallback@@YGHHH@Z@4HA
_BSS	SEGMENT
?last_total@?1??DecompressionProgressCallback@@YGHHH@Z@4HA DD 01H DUP (?) ; `DecompressionProgressCallback'::`2'::last_total
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@40dfffc000000000
CONST	SEGMENT
__real@40dfffc000000000 DQ 040dfffc000000000r	; 32767
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3eb0000000000000
CONST	SEGMENT
__real@3eb0000000000000 DQ 03eb0000000000000r	; 9.53674e-07
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0?AVParameterBool@sk@@@8
data$r	SEGMENT
??_R0?AVParameterBool@sk@@@8 DD FLAT:??_7type_info@@6B@	; sk::ParameterBool `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParameterBool@sk@@', 00H
data$r	ENDS
;	COMDAT ??_C@_19CLMIMLD@?$AAO?$AAP?$AAE?$AAN?$AA?$AA@
CONST	SEGMENT
??_C@_19CLMIMLD@?$AAO?$AAP?$AAE?$AAN?$AA?$AA@ DB 'O', 00H, 'P', 00H, 'E', 00H
	DB	'N', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_R0?AVParameterStringW@sk@@@8
data$r	SEGMENT
??_R0?AVParameterStringW@sk@@@8 DD FLAT:??_7type_info@@6B@ ; sk::ParameterStringW `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParameterStringW@sk@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVParameterInt64@sk@@@8
data$r	SEGMENT
??_R0?AVParameterInt64@sk@@@8 DD FLAT:??_7type_info@@6B@ ; sk::ParameterInt64 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParameterInt64@sk@@', 00H
data$r	ENDS
;	COMDAT ??_C@_1M@BLGDOOIB@?$AAR?$AAe?$AAt?$AAr?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1M@BLGDOOIB@?$AAR?$AAe?$AAt?$AAr?$AAy?$AA?$AA@ DB 'R', 00H, 'e', 00H
	DB	't', 00H, 'r', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_R0?AViParameter@sk@@@8
data$r	SEGMENT
??_R0?AViParameter@sk@@@8 DD FLAT:??_7type_info@@6B@	; sk::iParameter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AViParameter@sk@@', 00H
data$r	ENDS
xdata$x	SEGMENT
__unwindtable$?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z$0
__ehfuncinfo$?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SK_UpdateSoftware1@@YGJPB_W_N@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?SK_UpdateSoftware1@@YGJPB_W_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$5
__unwindtable$?SK_UpdateSoftware1@@YGJPB_W_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$3
	DD	05H
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$10
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z$1
__ehfuncinfo$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@Usk_file_entry_s@@@?$allocator@Usk_file_entry_s@@@std@@QAEXPAUsk_file_entry_s@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@Usk_file_entry_s@@@?$allocator@Usk_file_entry_s@@@std@@QAEXPAUsk_file_entry_s@@@Z PROC ; std::allocator<sk_file_entry_s>::destroy<sk_file_entry_s>, COMDAT
; _this$ = ecx

; 845  : 		{	// destroy object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR __Ptr$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+36]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN14@destroy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+16]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN14@destroy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+32], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+36], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+16], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 847  : 		}

	pop	ebp
	ret	4
??$destroy@Usk_file_entry_s@@@?$allocator@Usk_file_entry_s@@@std@@QAEXPAUsk_file_entry_s@@@Z ENDP ; std::allocator<sk_file_entry_s>::destroy<sk_file_entry_s>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@Usk_file_entry_s@@@?$allocator_traits@V?$allocator@Usk_file_entry_s@@@std@@@std@@SAXAAV?$allocator@Usk_file_entry_s@@@1@PAUsk_file_entry_s@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@Usk_file_entry_s@@@?$allocator_traits@V?$allocator@Usk_file_entry_s@@@std@@@std@@SAXAAV?$allocator@Usk_file_entry_s@@@1@PAUsk_file_entry_s@@@Z PROC ; std::allocator_traits<std::allocator<sk_file_entry_s> >::destroy<sk_file_entry_s>, COMDAT

; 964  : 		{	// destroy object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR __Ptr$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+36]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN16@destroy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+16]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN16@destroy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+32], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+36], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+16], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 966  : 		}

	pop	ebp
	ret	0
??$destroy@Usk_file_entry_s@@@?$allocator_traits@V?$allocator@Usk_file_entry_s@@@std@@@std@@SAXAAV?$allocator@Usk_file_entry_s@@@1@PAUsk_file_entry_s@@@Z ENDP ; std::allocator_traits<std::allocator<sk_file_entry_s> >::destroy<sk_file_entry_s>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@Usk_file_entry_s@@@?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAEXPAUsk_file_entry_s@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@Usk_file_entry_s@@@?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAEXPAUsk_file_entry_s@@@Z PROC ; std::_Wrap_alloc<std::allocator<sk_file_entry_s> >::destroy<sk_file_entry_s>, COMDAT
; _this$ = ecx

; 1102 : 		{	// destroy object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR __Ptr$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+36]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN18@destroy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+16]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN18@destroy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+32], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+36], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+16], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1104 : 		}

	pop	ebp
	ret	4
??$destroy@Usk_file_entry_s@@@?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAEXPAUsk_file_entry_s@@@Z ENDP ; std::_Wrap_alloc<std::allocator<sk_file_entry_s> >::destroy<sk_file_entry_s>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@Usk_file_entry_s@@@std@@YAPAUsk_file_entry_s@@PAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@Usk_file_entry_s@@@std@@YAPAUsk_file_entry_s@@PAU1@@Z PROC ; std::_Unfancy<sk_file_entry_s>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@Usk_file_entry_s@@@std@@YAPAUsk_file_entry_s@@PAU1@@Z ENDP ; std::_Unfancy<sk_file_entry_s>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z PROC		; std::forward<wchar_t * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<sk::iParameter *>,sk::iParameter * *>, COMDAT

; 1208 : 		// nothing to do
; 1209 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<sk::iParameter *>,sk::iParameter * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::allocator<sk_file_entry_s>,sk_file_entry_s *>, COMDAT

; 1199 : 	{	// destroy [_First, _Last), no special optimization

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 1200 : 	for (; _First != _Last; ++_First)

	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	mov	edi, DWORD PTR __Last$[ebp]
	cmp	esi, edi
	je	SHORT $LN78@Destroy_ra
	add	esi, 36					; 00000024H
$LL4@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN55@Destroy_ra

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;
; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));
; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	ecx, DWORD PTR [eax+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	eax, DWORD PTR [esi-20]

; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	cmp	ecx, 2147483647				; 7fffffffH
	ja	SHORT $LN74@Destroy_ra

; 99   : 	const size_t _User_size = _Count * _Sz;

	add	ecx, ecx

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN50@Destroy_ra

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	test	al, 31					; 0000001fH
	jne	SHORT $LN74@Destroy_ra

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jae	SHORT $LN74@Destroy_ra

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jb	SHORT $LN74@Destroy_ra

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	ja	SHORT $LN74@Destroy_ra

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	eax, ecx
$LN50@Destroy_ra:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN55@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi-4], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi-20], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1200 : 	for (; _First != _Last; ++_First)

	add	esi, 40					; 00000028H
	lea	eax, DWORD PTR [esi-36]
	cmp	eax, edi
	jne	SHORT $LL4@Destroy_ra
$LN78@Destroy_ra:
	pop	edi
	pop	esi

; 1201 : 		_Al.destroy(_Unfancy(_First));
; 1202 : 	}

	pop	ebp
	ret	0
$LN74@Destroy_ra:

; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN81@Destroy_ra:
$LN80@Destroy_ra:
	int	3
??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1139 : 	}

	ret	0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 22   : 	{	// return smaller of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	cmovb	eax, edx

; 24   : 	}

	pop	ebp
	ret	0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@_W@std@@YAPA_WPA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@_W@std@@YAPA_WPA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<sk::iParameter *>,sk::iParameter * *>, COMDAT

; 1215 : 		// note that this is an optimization for debug mode codegen;
; 1216 : 		// in release mode the BE removes all of this
; 1217 : 	typedef typename _Alloc::value_type _Val;
; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1219 : 		is_trivially_destructible<_Val>,
; 1220 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1221 : 	}

	ret	0
??$_Destroy_range@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<sk::iParameter *>,sk::iParameter * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<sk_file_entry_s>,sk_file_entry_s *>, COMDAT

; 1214 : 	{	// destroy [_First, _Last), choose optimization

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1215 : 		// note that this is an optimization for debug mode codegen;
; 1216 : 		// in release mode the BE removes all of this
; 1217 : 	typedef typename _Alloc::value_type _Val;
; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Al$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
	add	esp, 16					; 00000010H

; 1219 : 		is_trivially_destructible<_Val>,
; 1220 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1221 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z PROC		; std::addressof<wchar_t *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z ENDP		; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1144 : 	typename _Alty::propagate_on_container_copy_assignment _Tag;
; 1145 : 	_Pocca(_Left, _Right, _Tag);
; 1146 : 	}

	ret	0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
_TEXT	SEGMENT
_msg$ = -28						; size = 28
_user$ = 8						; size = 4
?UpdateDlg_Thread@@YGKPAX@Z PROC			; UpdateDlg_Thread

; 966  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi

; 967  :   bool started = false;
; 968  : 
; 969  :   UNREFERENCED_PARAMETER (user);
; 970  : 
; 971  :   HWND hWndDlg =
; 972  :     CreateDialog ( SK_GetDLL (),

	push	0
	push	OFFSET ?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z ; Update_DlgProc
	xor	bl, bl
	call	DWORD PTR __imp__GetDesktopWindow@0
	push	eax
	push	109					; 0000006dH
	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	call	DWORD PTR __imp__CreateDialogParamW@20

; 973  :                      MAKEINTRESOURCE (IDD_UPDATE),
; 974  :                       GetDesktopWindow (),
; 975  :                         Update_DlgProc );
; 976  : 
; 977  :   IsGUIThread (TRUE);

	push	1
	mov	esi, eax
	call	DWORD PTR __imp__IsGUIThread@4

; 978  : 
; 979  :   BringWindowToTop    (hWndDlg);

	push	esi
	call	DWORD PTR __imp__BringWindowToTop@4

; 980  :   SetForegroundWindow (hWndDlg);

	push	esi
	call	DWORD PTR __imp__SetForegroundWindow@4

; 981  :   SetActiveWindow     (hWndDlg);

	push	esi
	call	DWORD PTR __imp__SetActiveWindow@4

; 982  :   SetFocus            (hWndDlg);

	push	esi
	call	DWORD PTR __imp__SetFocus@4

; 983  : 
; 984  :   MSG  msg;
; 985  :   BOOL bRet;
; 986  : 
; 987  :   while ((bRet = GetMessage (&msg, nullptr, 0, 0)) != 0)

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageW@16
	test	eax, eax
	je	SHORT $LN3@UpdateDlg_
	mov	edi, DWORD PTR __imp__SendMessageW@16
	npad	7
$LL2@UpdateDlg_:

; 988  :   {
; 989  :     if (bRet == -1)

	cmp	eax, -1
	je	SHORT $LN3@UpdateDlg_

; 990  :     {
; 991  :       CloseHandle (GetCurrentThread ());
; 992  :       return 0;
; 993  :     }
; 994  : 
; 995  : 
; 996  :     TranslateMessage (&msg);

	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4

; 997  :     DispatchMessage  (&msg);

	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageW@4

; 998  : 
; 999  : 
; 1000 :     if ((! started) && msg.hwnd == hWndDlg)

	test	bl, bl
	jne	SHORT $LN6@UpdateDlg_
	cmp	DWORD PTR _msg$[ebp], esi
	jne	SHORT $LN6@UpdateDlg_

; 1001 :     {
; 1002 :       if (SK_IsHostAppSKIM ())

	call	?SK_IsHostAppSKIM@@YA_NXZ		; SK_IsHostAppSKIM
	test	al, al
	je	SHORT $LN6@UpdateDlg_

; 1003 :       {
; 1004 :         started = true;
; 1005 :         SendMessage (hWndDlg, WM_COMMAND, MAKEWPARAM (IDC_AUTO_CMD, 0), 0);

	push	0
	push	1007					; 000003efH
	push	273					; 00000111H
	push	esi
	mov	bl, 1
	call	edi
$LN6@UpdateDlg_:

; 983  : 
; 984  :   MSG  msg;
; 985  :   BOOL bRet;
; 986  : 
; 987  :   while ((bRet = GetMessage (&msg, nullptr, 0, 0)) != 0)

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageW@16
	test	eax, eax
	jne	SHORT $LL2@UpdateDlg_
$LN3@UpdateDlg_:

; 1006 :       }
; 1007 :     }
; 1008 :   }
; 1009 : 
; 1010 :   CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	pop	edi
	pop	esi

; 1011 : 
; 1012 :   return 0;

	xor	eax, eax
	pop	ebx

; 1013 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateDlg_Thread@@YGKPAX@Z ENDP			; UpdateDlg_Thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ??B<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@QBEP6GJPAUHWND__@@IIJJ@ZXZ
_TEXT	SEGMENT
??B<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@QBEP6GJPAUHWND__@@IIJJ@ZXZ PROC ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::operator long (__stdcall*)(HWND__ *,unsigned int,unsigned int,long,long), COMDAT
; _this$ = ecx

; 880  :             };

	mov	eax, OFFSET ?<lambda_invoker_stdcall>@<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@CGJPAUHWND__@@IIJJ@Z ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::<lambda_invoker_stdcall>
	ret	0
??B<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@QBEP6GJPAUHWND__@@IIJJ@ZXZ ENDP ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::operator long (__stdcall*)(HWND__ *,unsigned int,unsigned int,long,long)
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ?<lambda_invoker_stdcall>@<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@CGJPAUHWND__@@IIJJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_uNotification$ = 12					; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_dwRefData$ = 24					; size = 4
?<lambda_invoker_stdcall>@<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@CGJPAUHWND__@@IIJJ@Z PROC ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::<lambda_invoker_stdcall>, COMDAT

; 880  :             };

	npad	2
	push	ebp
	mov	ebp, esp
	xor	ecx, ecx
	pop	ebp
	jmp	??R<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@QBEJPAUHWND__@@IIJJ@Z ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::operator()
?<lambda_invoker_stdcall>@<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@CGJPAUHWND__@@IIJJ@Z ENDP ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::<lambda_invoker_stdcall>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ??R<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@QBEJPAUHWND__@@IIJJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_uNotification$ = 12					; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_dwRefData$ = 24					; size = 4
??R<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@QBEJPAUHWND__@@IIJJ@Z PROC ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::operator(), COMDAT
; _this$ = ecx

; 828  :             {

	npad	2
	push	ebp
	mov	ebp, esp

; 829  :               UNREFERENCED_PARAMETER (hWnd);
; 830  :               UNREFERENCED_PARAMETER (wParam);
; 831  :               UNREFERENCED_PARAMETER (lParam);
; 832  :               UNREFERENCED_PARAMETER (dwRefData);
; 833  :                
; 834  :               switch (uNotification)

	mov	eax, DWORD PTR _uNotification$[ebp]
	sub	eax, 0
	je	SHORT $LN4@operator
	sub	eax, 2
	je	SHORT $LN6@operator
	sub	eax, 1
	jne	$LN11@operator

; 856  : 
; 857  :                 } break;
; 858  : 
; 859  :                 case TDN_HYPERLINK_CLICKED:
; 860  :                   ShellExecuteW ( nullptr,

	push	3
	push	eax
	push	eax
	push	DWORD PTR _lParam$[ebp]
	push	OFFSET ??_C@_19CLMIMLD@?$AAO?$AAP?$AAE?$AAN?$AA?$AA@
	push	eax
	call	DWORD PTR __imp__ShellExecuteW@24

; 871  :                                       L"OPEN",
; 872  :                                         (wchar_t *)update_dlg_relnotes,
; 873  :                                           nullptr, nullptr,
; 874  :                                             SW_SHOWMAXIMIZED );
; 875  :                   }
; 876  :                   break;
; 877  :               }
; 878  : 
; 879  :               return S_OK;

	xor	eax, eax

; 880  :             };

	pop	ebp
	ret	20					; 00000014H
$LN6@operator:

; 861  :                                     L"OPEN",
; 862  :                                       (wchar_t *)lParam,
; 863  :                                         nullptr, nullptr,
; 864  :                                           SW_SHOWMAXIMIZED );
; 865  :                   break;
; 866  : 
; 867  :                 case TDN_BUTTON_CLICKED:
; 868  :                   if (wParam == 0)

	cmp	DWORD PTR _wParam$[ebp], 0
	jne	$LN11@operator

; 869  :                   {
; 870  :                     ShellExecuteW ( nullptr,

	push	3
	push	0
	push	0
	push	OFFSET ?update_dlg_relnotes@@3PA_WA	; update_dlg_relnotes
	push	OFFSET ??_C@_19CLMIMLD@?$AAO?$AAP?$AAE?$AAN?$AA?$AA@
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24

; 871  :                                       L"OPEN",
; 872  :                                         (wchar_t *)update_dlg_relnotes,
; 873  :                                           nullptr, nullptr,
; 874  :                                             SW_SHOWMAXIMIZED );
; 875  :                   }
; 876  :                   break;
; 877  :               }
; 878  : 
; 879  :               return S_OK;

	xor	eax, eax

; 880  :             };

	pop	ebp
	ret	20					; 00000014H
$LN4@operator:
	push	ebx

; 835  :               {
; 836  :                 case TDN_CREATED:
; 837  :                 {
; 838  :                   BringWindowToTop    (hWnd);

	mov	ebx, DWORD PTR _hWnd$[ebp]
	push	esi
	push	edi
	push	ebx
	call	DWORD PTR __imp__BringWindowToTop@4

; 839  :                   SetForegroundWindow (hWnd);

	push	ebx
	call	DWORD PTR __imp__SetForegroundWindow@4

; 840  :                   SetActiveWindow     (hWnd);

	push	ebx
	call	DWORD PTR __imp__SetActiveWindow@4

; 841  :                   SetFocus            (hWnd);

	push	ebx
	call	DWORD PTR __imp__SetFocus@4

; 842  : 
; 843  :                   LONG_PTR style    = GetWindowLongPtrW (hWnd, GWL_STYLE);

	mov	esi, DWORD PTR __imp__GetWindowLongW@8
	push	-16					; fffffff0H
	push	ebx
	call	esi

; 844  :                   LONG_PTR style_ex = GetWindowLongPtrW (hWnd, GWL_EXSTYLE);

	push	-20					; ffffffecH
	push	ebx
	mov	edi, eax
	call	esi

; 845  : 
; 846  :                   SetWindowLongPtrW (hWnd, GWL_STYLE,   style    | WS_POPUP);

	mov	esi, DWORD PTR __imp__SetWindowLongW@12
	or	edi, -2147483648			; 80000000H
	push	edi
	mov	edi, DWORD PTR _hWnd$[ebp]
	mov	ebx, eax
	push	-16					; fffffff0H
	push	edi
	call	esi

; 847  :                   SetWindowLongPtrW (hWnd, GWL_EXSTYLE, style_ex | WS_EX_TOPMOST | WS_EX_APPWINDOW);

	or	ebx, 262152				; 00040008H
	push	ebx
	push	-20					; ffffffecH
	push	edi
	call	esi

; 848  : 
; 849  :                   SetWindowPos ( hWnd, HWND_TOPMOST,

	push	17443					; 00004423H
	push	0
	push	0
	push	0
	push	0
	push	-1
	push	edi
	call	DWORD PTR __imp__SetWindowPos@28

; 850  :                                    0, 0,
; 851  :                                    0, 0,
; 852  :                                      SWP_NOSENDCHANGING | SWP_ASYNCWINDOWPOS | SWP_FRAMECHANGED |
; 853  :                                      SWP_NOMOVE         | SWP_NOSIZE );
; 854  : 
; 855  :                   SK_RealizeForegroundWindow (hWnd);

	push	edi
	call	?SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z ; SK_RealizeForegroundWindow
	pop	edi
	pop	esi
	pop	ebx
$LN11@operator:

; 871  :                                       L"OPEN",
; 872  :                                         (wchar_t *)update_dlg_relnotes,
; 873  :                                           nullptr, nullptr,
; 874  :                                             SW_SHOWMAXIMIZED );
; 875  :                   }
; 876  :                   break;
; 877  :               }
; 878  : 
; 879  :               return S_OK;

	xor	eax, eax

; 880  :             };

	pop	ebp
	ret	20					; 00000014H
??R<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@QBEJPAUHWND__@@IIJJ@Z ENDP ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator++, COMDAT
; _this$ = ecx

; 107  : 		++_Ptr;

	add	DWORD PTR [ecx], 40			; 00000028H

; 332  : 		++*(_Mybase *)this;
; 333  : 		return (*this);

	mov	eax, ecx

; 334  : 		}

	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEAAUsk_file_entry_s@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEAAUsk_file_entry_s@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 323  : 		}

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEAAUsk_file_entry_s@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAE@PAUsk_file_entry_s@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAE@PAUsk_file_entry_s@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >, COMDAT
; _this$ = ecx

; 304  : 		{	// construct with pointer _Parg

	npad	2
	push	ebp
	mov	ebp, esp

; 42   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [ecx], eax

; 305  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAE@PAUsk_file_entry_s@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Compat, COMDAT
; _this$ = ecx

; 253  : 		}

	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator!=, COMDAT
; _this$ = ecx

; 210  : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 211  : 		return (!(*this == _Right));
; 212  : 		}

	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator==, COMDAT
; _this$ = ecx

; 204  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 205  : 		_Compat(_Right);
; 206  : 		return (_Ptr == _Right._Ptr);
; 207  : 		}

	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator++, COMDAT
; _this$ = ecx

; 91   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 92   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 93   : 		if (_Mycont == 0
; 94   : 			|| _Ptr == nullptr_t{}
; 95   : 			|| _Mycont->_Mylast <= _Ptr)
; 96   : 			{	// report error
; 97   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 98   : 			}
; 99   : 
; 100  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 101  : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 102  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 103  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 104  : 		_SCL_SECURE_VALIDATE_RANGE(_Ptr < _Mycont->_Mylast);
; 105  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 106  : 
; 107  : 		++_Ptr;

	add	DWORD PTR [ecx], 40			; 00000028H

; 108  : 		return (*this);

	mov	eax, ecx

; 109  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEABUsk_file_entry_s@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEABUsk_file_entry_s@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator*, COMDAT
; _this$ = ecx

; 62   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 63   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 64   : 		if (_Mycont == 0
; 65   : 			|| _Ptr == _Tptr()
; 66   : 			|| _Ptr < _Mycont->_Myfirst
; 67   : 			|| _Mycont->_Mylast <= _Ptr)
; 68   : 			{	// report error
; 69   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 70   : 			}
; 71   : 
; 72   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 73   : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 74   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 75   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast);
; 77   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 78   : 
; 79   : 		_Analysis_assume_(_Ptr != _Tptr());
; 80   : 
; 81   : 		return (*_Ptr);

	mov	eax, DWORD PTR [ecx]

; 82   : 		}

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QBEABUsk_file_entry_s@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAE@PAUsk_file_entry_s@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAE@PAUsk_file_entry_s@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with pointer _Parg

	npad	2
	push	ebp
	mov	ebp, esp

; 42   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [ecx], eax

; 44   : 		this->_Adopt(_Pvector);
; 45   : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@std@@QAE@PAUsk_file_entry_s@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<sk_file_entry_s> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Tidy@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -4						; size = 1
?_Tidy@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@AAEXXZ PROC ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::_Tidy, COMDAT
; _this$ = ecx

; 1946 : 		{	// free all storage

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	edi
	mov	edi, ecx

; 1947 : 		this->_Orphan_all();
; 1948 : 
; 1949 : 		if (this->_Myfirst() != pointer())

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN2@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<

	push	DWORD PTR $T1[ebp]
	push	edi
	push	DWORD PTR [edi+4]
	push	eax
	call	??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR [edi+8]
	mov	eax, 1717986919				; 66666667H
	sub	ecx, DWORD PTR [edi]
	imul	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	40					; 00000028H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [edi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 28					; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [edi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [edi+8], 0
$LN2@Tidy:
	pop	edi

; 1957 : 			}
; 1958 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@AAEXXZ ENDP ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Destroy@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@AAEXPAUsk_file_entry_s@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
$T1 = 12						; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@AAEXPAUsk_file_entry_s@@0@Z PROC ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::_Destroy, COMDAT
; _this$ = ecx

; 1884 : 		{	// destroy [_First, _Last) using allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<

	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1886 : 		}

	pop	ebp
	ret	8
?_Destroy@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@AAEXPAUsk_file_entry_s@@0@Z ENDP ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?end@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@2@XZ PROC ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::end, COMDAT
; _this$ = ecx

; 1654 : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 42   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx

; 1655 : 		return (iterator(this->_Mylast(), _STD addressof(this->_Get_data())));
; 1656 : 		}

	pop	ebp
	ret	4
?end@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@2@XZ ENDP ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?begin@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@2@XZ PROC ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::begin, COMDAT
; _this$ = ecx

; 1644 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 42   : 		: _Ptr(_Parg)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1645 : 		return (iterator(this->_Myfirst(), _STD addressof(this->_Get_data())));
; 1646 : 		}

	pop	ebp
	ret	4
?begin@?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@std@@@2@XZ ENDP ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??1?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 1
??1?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE@XZ PROC ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::~vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >, COMDAT
; _this$ = ecx

; 891  : 		{	// destroy the object

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	edi
	mov	edi, ecx

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN4@vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<

	push	DWORD PTR $T1[ebp]
	push	edi
	push	DWORD PTR [edi+4]
	push	eax
	call	??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR [edi+8]
	mov	eax, 1717986919				; 66666667H
	sub	ecx, DWORD PTR [edi]
	imul	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	40					; 00000028H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [edi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 28					; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [edi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [edi+8], 0
$LN4@vector:
	pop	edi

; 892  : 		_Tidy();
; 893  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE@XZ ENDP ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::~vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk_file_entry_s> >,std::_Vector_val<std::_Simple_types<sk_file_entry_s> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk_file_entry_s> >,std::_Vector_val<std::_Simple_types<sk_file_entry_s> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk_file_entry_s> >,std::_Vector_val<std::_Simple_types<sk_file_entry_s> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk_file_entry_s> >,std::_Vector_val<std::_Simple_types<sk_file_entry_s> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Myend, COMDAT
; _this$ = ecx

; 671  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 672  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Mylast, COMDAT
; _this$ = ecx

; 661  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 662  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Myfirst, COMDAT
; _this$ = ecx

; 651  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 652  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAPAUsk_file_entry_s@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Get_data, COMDAT
; _this$ = ecx

; 641  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 642  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@Usk_file_entry_s@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Getal, COMDAT
; _this$ = ecx

; 631  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 632  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 621  : 		_Get_data()._Orphan_all();
; 622  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk_file_entry_s,std::allocator<sk_file_entry_s> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAEXPAUsk_file_entry_s@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAEXPAUsk_file_entry_s@@I@Z PROC ; std::_Wrap_alloc<std::allocator<sk_file_entry_s> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	40					; 00000028H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAEXPAUsk_file_entry_s@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<sk_file_entry_s> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@Usk_file_entry_s@@@std@@QAEXPAUsk_file_entry_s@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@Usk_file_entry_s@@@std@@QAEXPAUsk_file_entry_s@@I@Z PROC ; std::allocator<sk_file_entry_s>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	40					; 00000028H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@Usk_file_entry_s@@@std@@QAEXPAUsk_file_entry_s@@I@Z ENDP ; std::allocator<sk_file_entry_s>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
_TEXT	SEGMENT
_wszBackupMessage$2 = -9016				; size = 8192
_wszFinalPath$3 = -824					; size = 520
_wszBackupSize$4 = -304					; size = 64
_wszDownloadSize$5 = -240				; size = 64
$T6 = -176						; size = 24
_task_cfg$7 = -152					; size = 96
_buttons$8 = -56					; size = 16
tv917 = -48						; size = 8
_hWndKeepDownloads$1$ = -40				; size = 4
_hWndBackup$1$ = -36					; size = 4
_backup_size$9 = -32					; size = 8
_files$10 = -24						; size = 12
__$EHRec$ = -12						; size = 12
$T11 = 8						; size = 1
_hWndDlg$ = 8						; size = 4
_backup_size$1$ = 12					; size = 4
_uMsg$ = 12						; size = 4
_backup_count$1$ = 16					; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z PROC		; Update_DlgProc

; 651  : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z
	push	eax
	mov	eax, 9004				; 0000232cH
	mov	DWORD PTR fs:0, esp
	call	__chkstk

; 652  :   UNREFERENCED_PARAMETER (lParam);
; 653  : 
; 654  :   switch (uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	push	ebx
	push	esi
	push	edi
	cmp	eax, 272				; 00000110H
	ja	$LN27@Update_Dlg
	je	SHORT $LN7@Update_Dlg
	sub	eax, 1
	je	SHORT $LN24@Update_Dlg
	sub	eax, 1
	jne	SHORT $LN2@Update_Dlg

; 939  :             static_cast <HWND> (INVALID_HANDLE_VALUE);
; 940  :         }
; 941  :       }
; 942  : 
; 943  :       return 1;
; 944  :     }
; 945  : 
; 946  :     case WM_DESTROY:
; 947  :     {
; 948  :       hWndUpdateDlg =

	mov	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A, -1 ; hWndUpdateDlg
$LN2@Update_Dlg:
	pop	edi
	pop	esi

; 949  :         static_cast <HWND> (INVALID_HANDLE_VALUE);
; 950  : 
; 951  :       return 0;

	xor	eax, eax
	pop	ebx

; 957  :     } break;
; 958  :   }
; 959  : 
; 960  :   return 0;
; 961  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN24@Update_Dlg:

; 952  :     }
; 953  : 
; 954  :     case WM_CREATE:
; 955  :     {
; 956  :       InterlockedExchange ( &__SK_UpdateStatus, 0 );

	xor	eax, eax
	mov	ecx, OFFSET ?__SK_UpdateStatus@@3JC
	xchg	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@Update_Dlg
$LN7@Update_Dlg:

; 655  :   {
; 656  :     case WM_INITDIALOG:
; 657  :     {
; 658  :       InterlockedExchange ( &__SK_UpdateStatus, 0 );

	xor	eax, eax
	mov	ecx, OFFSET ?__SK_UpdateStatus@@3JC
	xchg	DWORD PTR [ecx], eax

; 659  : 
; 660  :       hWndUpdateDlg = hWndDlg;

	mov	eax, DWORD PTR _hWndDlg$[ebp]

; 661  : 
; 662  :       HWND hWndBackup =
; 663  :         GetDlgItem (hWndUpdateDlg, IDC_BACKUP_FILES);

	mov	esi, DWORD PTR __imp__GetDlgItem@8
	push	1008					; 000003f0H
	push	eax
	mov	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A, eax ; hWndUpdateDlg
	call	esi

; 664  : 
; 665  :       HWND hWndKeepDownloads =
; 666  :         GetDlgItem (hWndUpdateDlg, IDC_KEEP_DOWNLOADS);

	push	1005					; 000003edH
	push	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A	; hWndUpdateDlg
	mov	ebx, eax
	mov	DWORD PTR _hWndBackup$1$[ebp], ebx
	call	esi

; 667  : 
; 668  :       Button_SetCheck (hWndBackup,        update_dlg_backup);

	movzx	ecx, BYTE PTR ?update_dlg_backup@@3_NA	; update_dlg_backup
	mov	edi, eax
	push	0
	push	ecx
	push	241					; 000000f1H
	push	ebx
	mov	ebx, DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _hWndKeepDownloads$1$[ebp], edi
	call	ebx

; 669  :       Button_SetCheck (hWndKeepDownloads, update_dlg_keep);

	movzx	ecx, BYTE PTR ?update_dlg_keep@@3_NA	; update_dlg_keep
	push	0
	push	ecx
	push	241					; 000000f1H
	push	edi
	call	ebx

; 670  : 
; 671  :       HWND hWndProgress =
; 672  :         GetDlgItem (hWndUpdateDlg, IDC_UPDATE_PROGRESS);

	push	1006					; 000003eeH
	push	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A	; hWndUpdateDlg
	call	esi

; 673  : 
; 674  :       SendMessage (hWndProgress, PBM_SETRANGE, 0UL,         MAKEWPARAM (0, 1));

	push	65536					; 00010000H
	push	0
	mov	esi, eax
	push	1025					; 00000401H
	push	esi
	call	ebx

; 675  :       SendMessage (hWndProgress, PBM_SETPOS,   1,           0UL);

	push	0
	push	1
	push	1026					; 00000402H
	push	esi
	call	ebx

; 676  :       SendMessage (hWndProgress, PBM_SETSTATE, PBST_PAUSED, 0UL);

	push	0
	push	3
	push	1040					; 00000410H
	push	esi
	call	ebx

; 677  : 
; 678  :       uint64_t fsize = SK_GetFileSize (update_dlg_file);

	push	OFFSET ?update_dlg_file@@3PA_WA		; update_dlg_file
	call	?SK_GetFileSize@@YG_KPB_W@Z		; SK_GetFileSize
	mov	edi, eax
	mov	esi, edx

; 679  : 
; 680  :       std::vector <sk_file_entry_s> files =
; 681  :         SK_Get7ZFileContents (update_dlg_file);

	lea	eax, DWORD PTR _files$10[ebp]
	push	OFFSET ?update_dlg_file@@3PA_WA		; update_dlg_file
	push	eax
	call	?SK_Get7ZFileContents@@YA?AV?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@PB_W@Z ; SK_Get7ZFileContents

; 682  : 
; 683  :       wchar_t wszDownloadSize [32] = { },

	push	64					; 00000040H
	lea	eax, DWORD PTR _wszDownloadSize$5[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	push	eax
	call	_memset

; 684  :               wszBackupSize   [32] = { };

	push	64					; 00000040H
	lea	eax, DWORD PTR _wszBackupSize$4[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 32					; 00000020H

; 685  : 
; 686  :       swprintf ( wszDownloadSize, L"   1 File,  %5.2f MiB",

	mov	edx, esi
	mov	ecx, edi
	call	__ultod3
	mulsd	xmm0, QWORD PTR __real@3eb0000000000000
	lea	eax, DWORD PTR _wszDownloadSize$5[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG161705
	push	eax
	movsd	QWORD PTR tv917[ebp], xmm0
	call	?swprintf@@YAHQA_WQB_WZZ		; swprintf
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 42   : 		: _Ptr(_Parg)

	mov	esi, DWORD PTR _files$10[ebp+4]
	xorps	xmm0, xmm0
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 692  :       for ( auto& it : files )

	mov	eax, DWORD PTR _files$10[ebp]
	xor	edi, edi
	movlpd	QWORD PTR _backup_size$9[ebp], xmm0
	mov	ebx, DWORD PTR _backup_size$9[ebp+4]
	mov	DWORD PTR _backup_count$1$[ebp], edi
	cmp	eax, esi
	je	$LN283@Update_Dlg

; 655  :   {
; 656  :     case WM_INITDIALOG:
; 657  :     {
; 658  :       InterlockedExchange ( &__SK_UpdateStatus, 0 );

	lea	edi, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _backup_size$9[ebp]
	mov	DWORD PTR _backup_size$1$[ebp], eax
$LL6@Update_Dlg:

; 693  :       {
; 694  :         wchar_t wszFinalPath [MAX_PATH] = { };

	push	520					; 00000208H
	lea	eax, DWORD PTR _wszFinalPath$3[ebp]
	push	0
	push	eax
	call	_memset

; 695  :         wcscpy (wszFinalPath, SK_SYS_GetInstallPath ().c_str ());

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	?SK_SYS_GetInstallPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_SYS_GetInstallPath
	mov	ecx, eax
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN111@Update_Dlg
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN111@Update_Dlg:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 695  :         wcscpy (wszFinalPath, SK_SYS_GetInstallPath ().c_str ());

	lea	edx, DWORD PTR _wszFinalPath$3[ebp]
$LL26@Update_Dlg:
	movzx	eax, WORD PTR [ecx]
	lea	ecx, DWORD PTR [ecx+2]
	mov	WORD PTR [edx], ax
	lea	edx, DWORD PTR [edx+2]
	test	ax, ax
	jne	SHORT $LL26@Update_Dlg
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T6[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN121@Update_Dlg
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T6[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN121@Update_Dlg:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [edi+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN160@Update_Dlg
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN161@Update_Dlg
$LN160@Update_Dlg:
	mov	eax, edi
$LN161@Update_Dlg:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 697  :         lstrcatW (wszFinalPath, it.name.c_str ());

	push	eax
	lea	eax, DWORD PTR _wszFinalPath$3[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8

; 698  : 
; 699  :         // This function returns 0 if no file exists
; 700  :         uint64_t bsize =
; 701  :           SK_GetFileSize (wszFinalPath);

	lea	eax, DWORD PTR _wszFinalPath$3[ebp]
	push	eax
	call	?SK_GetFileSize@@YG_KPB_W@Z		; SK_GetFileSize

; 702  : 
; 703  :         if (bsize != 0)

	mov	ecx, eax
	or	ecx, edx

; 704  :         {
; 705  :           backup_size += bsize;

	mov	ecx, DWORD PTR _backup_size$1$[ebp]
	je	SHORT $LN4@Update_Dlg
	add	ecx, eax
	mov	DWORD PTR _backup_size$1$[ebp], ecx
	adc	ebx, edx

; 706  :           ++backup_count;

	inc	DWORD PTR _backup_count$1$[ebp]
$LN4@Update_Dlg:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 107  : 		++_Ptr;

	add	edi, 40					; 00000028H
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 692  :       for ( auto& it : files )

	lea	eax, DWORD PTR [edi-16]
	cmp	eax, esi
	jne	$LL6@Update_Dlg
	mov	edi, DWORD PTR _backup_count$1$[ebp]
	jmp	SHORT $LN5@Update_Dlg
$LN283@Update_Dlg:
	mov	ecx, DWORD PTR _backup_size$9[ebp]
$LN5@Update_Dlg:

; 707  :         }
; 708  :       }
; 709  : 
; 710  :       swprintf ( wszBackupSize, L"%4u Files, %5.2f MiB",

	mov	edx, ebx
	call	__ultod3
	mulsd	xmm0, QWORD PTR __real@3eb0000000000000
	lea	eax, DWORD PTR _wszBackupSize$4[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	edi
	push	OFFSET $SG161707
	push	eax
	call	?swprintf@@YAHQA_WQB_WZZ		; swprintf
	add	esp, 20					; 00000014H

; 711  :                    backup_count,
; 712  :                      (double)backup_size / (1024.0 * 1024.0) );
; 713  : 
; 714  :       HFONT header_font =
; 715  :         CreateFont ( 14,

	push	OFFSET $SG161708
	push	8
	push	6
	push	0
	push	0
	push	1
	push	0
	push	0
	push	0
	push	500					; 000001f4H
	push	0
	push	0
	push	0
	push	14					; 0000000eH
	call	DWORD PTR __imp__CreateFontW@56

; 716  :                        0, 0, 0,
; 717  :                          FW_MEDIUM,
; 718  :                            FALSE, FALSE, FALSE,
; 719  :                              DEFAULT_CHARSET,
; 720  :                                OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS,
; 721  :                                  CLEARTYPE_NATURAL_QUALITY,
; 722  :                                    MONO_FONT,
; 723  :                                      L"Consolas" );
; 724  : 
; 725  :       SetWindowFont  (GetDlgItem (hWndDlg, IDC_DOWNLOAD_SIZE), header_font, true);

	mov	edi, DWORD PTR _hWndDlg$[ebp]
	mov	esi, eax
	mov	ebx, DWORD PTR __imp__GetDlgItem@8
	push	1
	push	esi
	push	48					; 00000030H
	push	1012					; 000003f4H
	push	edi
	call	ebx
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 726  :       SetWindowFont  (GetDlgItem (hWndDlg, IDC_BACKUP_SIZE),   header_font, true);

	push	1
	push	esi
	push	48					; 00000030H
	push	1013					; 000003f5H
	push	edi
	call	ebx
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 727  : 
; 728  :       // Initiate the update automatically.
; 729  :       if (SK_IsHostAppSKIM ())

	call	?SK_IsHostAppSKIM@@YA_NXZ		; SK_IsHostAppSKIM
	test	al, al
	je	SHORT $LN9@Update_Dlg

; 730  :       {
; 731  :         ShowWindow (hWndBackup,                           SW_HIDE);

	mov	esi, DWORD PTR __imp__ShowWindow@8
	push	0
	push	DWORD PTR _hWndBackup$1$[ebp]
	call	esi

; 732  :         ShowWindow (hWndKeepDownloads,                    SW_HIDE);

	push	0
	push	DWORD PTR _hWndKeepDownloads$1$[ebp]
	call	esi

; 733  :         ShowWindow (GetDlgItem (hWndDlg, IDC_AUTO_CMD),   SW_HIDE);

	push	0
	push	1007					; 000003efH
	push	edi
	call	ebx
	push	eax
	call	esi

; 734  :         ShowWindow (GetDlgItem (hWndDlg, IDC_MANUAL_CMD), SW_HIDE);

	push	0
	push	1009					; 000003f1H
	push	edi
	call	ebx
	push	eax
	call	esi

; 735  : 
; 736  :         swprintf ( wszDownloadSize, L"Download:   %5.2f MiB",

	movsd	xmm0, QWORD PTR tv917[ebp]
	lea	eax, DWORD PTR _wszDownloadSize$5[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG161710
	push	eax
	call	?swprintf@@YAHQA_WQB_WZZ		; swprintf
	add	esp, 16					; 00000010H
$LN9@Update_Dlg:

; 737  :                      (double)fsize / (1024.0 * 1024.0) );
; 738  :       }
; 739  : 
; 740  :       Static_SetText (GetDlgItem (hWndDlg, IDC_DOWNLOAD_SIZE), wszDownloadSize);

	lea	eax, DWORD PTR _wszDownloadSize$5[ebp]
	push	eax
	push	1012					; 000003f4H
	push	edi
	call	ebx
	mov	esi, DWORD PTR __imp__SetWindowTextW@8
	push	eax
	call	esi

; 741  :       Static_SetText (GetDlgItem (hWndDlg, IDC_BACKUP_SIZE),   wszBackupSize);

	lea	eax, DWORD PTR _wszBackupSize$4[ebp]
	push	eax
	push	1013					; 000003f5H
	push	edi
	call	ebx
	push	eax
	call	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	eax, DWORD PTR _files$10[ebp]
	test	eax, eax
	je	$LN14@Update_Dlg
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<

	push	DWORD PTR $T11[ebp]
	lea	ecx, DWORD PTR _files$10[ebp]
	push	ecx
	push	DWORD PTR _files$10[ebp+4]
	push	eax
	call	??$_Destroy_range1@V?$allocator@Usk_file_entry_s@@@std@@PAUsk_file_entry_s@@@std@@YAXPAUsk_file_entry_s@@0AAU?$_Wrap_alloc@V?$allocator@Usk_file_entry_s@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<sk_file_entry_s>,sk_file_entry_s *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR _files$10[ebp+8]
	mov	eax, 1717986919				; 66666667H
	mov	esi, DWORD PTR _files$10[ebp]
	sub	ecx, esi
	imul	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	40					; 00000028H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	esi
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 28					; 0000001cH
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 743  :       return TRUE;

	jmp	$LN14@Update_Dlg
$LN27@Update_Dlg:

; 652  :   UNREFERENCED_PARAMETER (lParam);
; 653  : 
; 654  :   switch (uMsg)

	cmp	eax, 273				; 00000111H
	jne	$LN2@Update_Dlg

; 744  :     }
; 745  : 
; 746  :     case WM_COMMAND:
; 747  :     {
; 748  :       if (LOWORD (wParam) == IDC_MANUAL_CMD)

	mov	eax, DWORD PTR _wParam$[ebp]
	mov	ecx, 1009				; 000003f1H
	cmp	ax, cx
	jne	SHORT $LN11@Update_Dlg

; 749  :       {
; 750  :         ShellExecuteW ( nullptr,

	push	3
	push	0
	push	0
	push	OFFSET ?update_dlg_file@@3PA_WA		; update_dlg_file
	push	OFFSET $SG161714
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24

; 751  :                           L"OPEN",
; 752  :                             (wchar_t *)update_dlg_file,
; 753  :                               nullptr, nullptr,
; 754  :                                 SW_SHOWMAXIMIZED );
; 755  : 
; 756  :         InterlockedExchange ( &__SK_UpdateStatus, 1 );

	mov	eax, 1
	mov	ecx, OFFSET ?__SK_UpdateStatus@@3JC
	xchg	DWORD PTR [ecx], eax

; 757  :         EndDialog           (  hWndUpdateDlg,     0 );
; 758  :         hWndUpdateDlg = (HWND)INVALID_HANDLE_VALUE;
; 759  :       }
; 760  : 
; 761  :       if (LOWORD (wParam) == IDC_AUTO_CMD)

	jmp	$LN286@Update_Dlg
$LN11@Update_Dlg:
	mov	ecx, 1007				; 000003efH
	cmp	ax, cx
	jne	$LN14@Update_Dlg

; 762  :       {
; 763  :         InterlockedExchangeAcquire ( &__SK_UpdateStatus, 0 );

	xor	eax, eax
	mov	ebx, OFFSET ?__SK_UpdateStatus@@3JC
	xchg	DWORD PTR [ebx], eax

; 764  : 
; 765  :         update_dlg_backup =

	mov	esi, DWORD PTR __imp__GetDlgItem@8
	push	0
	push	0
	push	240					; 000000f0H
	push	1008					; 000003f0H
	push	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A	; hWndUpdateDlg
	call	esi
	mov	edi, DWORD PTR __imp__SendMessageW@16
	push	eax
	call	edi
	test	eax, eax

; 766  :           Button_GetCheck (GetDlgItem (hWndUpdateDlg, IDC_BACKUP_FILES)) != 0;
; 767  : 
; 768  :         if ( SUCCEEDED ( SK_Decompress7z (

	push	OFFSET ?DecompressionProgressCallback@@YGHHH@Z ; DecompressionProgressCallback
	setne	al
	mov	BYTE PTR ?update_dlg_backup@@3_NA, al	; update_dlg_backup
	movzx	eax, al
	push	eax
	push	OFFSET ?update_dlg_build@@3PA_WA	; update_dlg_build
	push	OFFSET ?update_dlg_file@@3PA_WA		; update_dlg_file
	call	?SK_Decompress7z@@YAJPB_W0_NP6GHHH@Z@Z	; SK_Decompress7z
	add	esp, 16					; 00000010H
	test	eax, eax
	js	$LN13@Update_Dlg

; 769  :                            update_dlg_file,
; 770  :                              update_dlg_build,
; 771  :                                update_dlg_backup,
; 772  :                                  DecompressionProgressCallback
; 773  :                          )
; 774  :              )
; 775  :            )
; 776  :         {
; 777  :           TASKDIALOGCONFIG task_cfg;
; 778  :           ZeroMemory (&task_cfg, sizeof TASKDIALOGCONFIG);

	push	96					; 00000060H
	lea	eax, DWORD PTR _task_cfg$7[ebp]
	push	0
	push	eax
	call	_memset

; 779  : 
; 780  :           task_cfg.cbSize = sizeof TASKDIALOGCONFIG;
; 781  : 
; 782  :           task_cfg.hwndParent         = hWndUpdateDlg;

	mov	eax, DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A ; hWndUpdateDlg
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _task_cfg$7[ebp], 96		; 00000060H
	mov	DWORD PTR _task_cfg$7[ebp+4], eax

; 783  :           task_cfg.hInstance          = SK_GetDLL ();

	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	mov	DWORD PTR _task_cfg$7[ebp+8], eax

; 784  : 
; 785  :           task_cfg.pszMainIcon        = TD_INFORMATION_ICON;

	mov	DWORD PTR _task_cfg$7[ebp+24], 65533	; 0000fffdH

; 786  :           task_cfg.dwFlags            = TDF_ENABLE_HYPERLINKS | TDF_USE_COMMAND_LINKS;

	mov	DWORD PTR _task_cfg$7[ebp+12], 17	; 00000011H

; 787  : 
; 788  :           TASKDIALOG_BUTTON buttons [2];
; 789  :           buttons [0].nButtonID       = IDOK;

	mov	DWORD PTR _buttons$8[ebp], 1

; 790  : 
; 791  :           if (! SK_IsHostAppSKIM ())

	call	?SK_IsHostAppSKIM@@YA_NXZ		; SK_IsHostAppSKIM
	test	al, al

; 792  :           {
; 793  :             buttons [0].pszButtonText = L"Finish Update\nThe game will automatically exit.";
; 794  :           }
; 795  : 
; 796  :           else
; 797  :           {
; 798  :             buttons [0].pszButtonText = L"Finish Install";
; 799  :           }
; 800  : 
; 801  :           buttons [1].nButtonID       = 0;

	mov	DWORD PTR _buttons$8[ebp+8], 0
	mov	edx, OFFSET $SG161721

; 802  :           buttons [1].pszButtonText   = L"View Release Notes";

	mov	DWORD PTR _buttons$8[ebp+12], OFFSET $SG161722
	mov	ecx, OFFSET $SG161720

; 803  : 
; 804  :           task_cfg.pButtons           = buttons;
; 805  :           task_cfg.cButtons           = 2;

	mov	DWORD PTR _task_cfg$7[ebp+36], 2
	cmovne	ecx, edx
	lea	eax, DWORD PTR _buttons$8[ebp]
	mov	DWORD PTR _buttons$8[ebp+4], ecx
	mov	DWORD PTR _task_cfg$7[ebp+40], eax

; 806  : 
; 807  :           // Regular Software Update
; 808  :           if (! SK_IsHostAppSKIM ())

	call	?SK_IsHostAppSKIM@@YA_NXZ		; SK_IsHostAppSKIM
	test	al, al
	jne	SHORT $LN17@Update_Dlg

; 809  :           {
; 810  :             task_cfg.pszWindowTitle     = L"Special K Software Update";

	mov	DWORD PTR _task_cfg$7[ebp+20], OFFSET $SG161725

; 811  :             task_cfg.pszMainInstruction = L"Software Update Successful";

	mov	DWORD PTR _task_cfg$7[ebp+28], OFFSET $SG161726

; 812  :           }
; 813  : 
; 814  :           // Software Installation
; 815  :           else

	jmp	SHORT $LN18@Update_Dlg
$LN17@Update_Dlg:

; 816  :           {
; 817  :             task_cfg.pszWindowTitle     = L"Special K Software Install";

	mov	DWORD PTR _task_cfg$7[ebp+20], OFFSET $SG161727

; 818  :             task_cfg.pszMainInstruction = L"Software Installation Successful";

	mov	DWORD PTR _task_cfg$7[ebp+28], OFFSET $SG161728
$LN18@Update_Dlg:

; 881  : 
; 882  :           wchar_t wszBackupMessage [4096] = { };

	push	8192					; 00002000H
	lea	eax, DWORD PTR _wszBackupMessage$2[ebp]

; 880  :             };

	mov	DWORD PTR _task_cfg$7[ebp+84], OFFSET ?<lambda_invoker_stdcall>@<lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>@@CGJPAUHWND__@@IIJJ@Z ; <lambda_eb230fb9e2a87b41cfe7a044e0da3d5f>::<lambda_invoker_stdcall>

; 881  : 
; 882  :           wchar_t wszBackupMessage [4096] = { };

	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 883  : 
; 884  :           extern bool config_files_changed;
; 885  : 
; 886  : 
; 887  :           if (! SK_IsHostAppSKIM ())

	call	?SK_IsHostAppSKIM@@YA_NXZ		; SK_IsHostAppSKIM
	test	al, al
	jne	SHORT $LN21@Update_Dlg

; 888  :           {
; 889  :             if (update_dlg_backup)

	cmp	BYTE PTR ?update_dlg_backup@@3_NA, al	; update_dlg_backup
	je	SHORT $LN20@Update_Dlg

; 890  :             {
; 891  :               swprintf ( wszBackupMessage,

	cmp	BYTE PTR ?config_files_changed@@3_NA, 0	; config_files_changed
	mov	ecx, OFFSET $SG161733
	mov	eax, OFFSET $SG161732
	cmove	eax, ecx
	push	eax
	push	OFFSET ?update_dlg_build@@3PA_WA	; update_dlg_build
	call	?SK_GetConfigPath@@YGPB_WXZ		; SK_GetConfigPath
	push	eax
	lea	eax, DWORD PTR _wszBackupMessage$2[ebp]
	push	OFFSET $SG161734
	push	eax
	call	?swprintf@@YAHQA_WQB_WZZ		; swprintf
	add	esp, 20					; 00000014H

; 892  :                            L"Your old files have been backed up "
; 893  :                            L"<a href=\"%s\\Version\\%s\\\">here.</a>\n\n%s",
; 894  :                              SK_GetConfigPath (),
; 895  :                                update_dlg_build,
; 896  :                                 config_files_changed ?
; 897  :                   L"Config files were altered, but your originals "
; 898  :                   L"have been backed up." :
; 899  :                     L"No config files were altered by this release."
; 900  :               );
; 901  :             }
; 902  : 
; 903  :             else

	jmp	SHORT $LN21@Update_Dlg
$LN20@Update_Dlg:

; 904  :             {
; 905  :               swprintf ( wszBackupMessage,

	cmp	BYTE PTR ?config_files_changed@@3_NA, 0	; config_files_changed
	mov	ecx, OFFSET $SG161736
	mov	eax, OFFSET $SG161735
	cmove	eax, ecx
	push	eax
	lea	eax, DWORD PTR _wszBackupMessage$2[ebp]
	push	OFFSET $SG161737
	push	eax
	call	?swprintf@@YAHQA_WQB_WZZ		; swprintf
	add	esp, 12					; 0000000cH
$LN21@Update_Dlg:

; 906  :                            L"Existing mod files were overwritten%s",
; 907  :                              config_files_changed ?
; 908  :                   L"; config files were altered, but your originals "
; 909  :                   L"have been backed up." :
; 910  :                     L"; no config files were altered." );
; 911  :             }
; 912  :           }
; 913  : 
; 914  :           task_cfg.pszContent = wszBackupMessage;
; 915  : 
; 916  :           TaskDialogIndirect ( &task_cfg, nullptr, nullptr, nullptr );

	push	0
	lea	eax, DWORD PTR _wszBackupMessage$2[ebp]
	push	0
	mov	DWORD PTR _task_cfg$7[ebp+32], eax
	lea	eax, DWORD PTR _task_cfg$7[ebp]
	push	0
	push	eax
	call	DWORD PTR __imp__TaskDialogIndirect@16

; 917  : 
; 918  :           update_dlg_keep =

	push	0
	push	0
	push	240					; 000000f0H
	push	1005					; 000003edH
	push	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A	; hWndUpdateDlg
	call	esi
	push	eax
	call	edi
	test	eax, eax
	setne	al
	mov	BYTE PTR ?update_dlg_keep@@3_NA, al	; update_dlg_keep

; 919  :             Button_GetCheck (GetDlgItem (hWndUpdateDlg, IDC_KEEP_DOWNLOADS)) != 0;
; 920  : 
; 921  :           if (! update_dlg_keep)

	test	al, al
	jne	SHORT $LN22@Update_Dlg

; 922  :             DeleteFileW (update_dlg_file);

	push	OFFSET ?update_dlg_file@@3PA_WA		; update_dlg_file
	call	DWORD PTR __imp__DeleteFileW@4
$LN22@Update_Dlg:

; 923  : 
; 924  :           // SUCCESS:
; 925  :           InterlockedExchange ( &__SK_UpdateStatus, 1 );

	mov	eax, 1
	xchg	DWORD PTR [ebx], eax

; 926  :           EndDialog           (  hWndUpdateDlg,     0 );
; 927  : 
; 928  :           hWndUpdateDlg =
; 929  :             static_cast <HWND> (INVALID_HANDLE_VALUE);
; 930  :         }
; 931  : 
; 932  :         else

	jmp	SHORT $LN286@Update_Dlg
$LN13@Update_Dlg:

; 933  :         {
; 934  :           // FAILURE:
; 935  :           InterlockedExchange ( &__SK_UpdateStatus, -1 );

	or	ecx, -1
	xchg	DWORD PTR [ebx], ecx
$LN286@Update_Dlg:

; 936  :           EndDialog           (  hWndUpdateDlg,      0 );

	push	0
	push	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A	; hWndUpdateDlg
	call	DWORD PTR __imp__EndDialog@8

; 937  : 
; 938  :           hWndUpdateDlg =

	mov	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A, -1 ; hWndUpdateDlg
$LN14@Update_Dlg:

; 957  :     } break;
; 958  :   }
; 959  : 
; 960  :   return 0;
; 961  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z$0:
	lea	ecx, DWORD PTR _files$10[ebp]
	jmp	??1?$vector@Usk_file_entry_s@@V?$allocator@Usk_file_entry_s@@@std@@@std@@QAE@XZ ; std::vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >::~vector<sk_file_entry_s,std::allocator<sk_file_entry_s> >
__ehhandler$?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z:
	mov	eax, OFFSET __ehfuncinfo$?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Update_DlgProc@@YGHPAUHWND__@@IIJ@Z ENDP		; Update_DlgProc
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
_TEXT	SEGMENT
_current$ = 8						; size = 4
_total$ = 12						; size = 4
?DecompressionProgressCallback@@YGHHH@Z PROC		; DecompressionProgressCallback

; 625  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi

; 626  :   static int last_total = 0;
; 627  : 
; 628  :   HWND hWndProgress =
; 629  :     GetDlgItem (hWndUpdateDlg, IDC_UPDATE_PROGRESS);

	push	1006					; 000003eeH
	push	DWORD PTR ?hWndUpdateDlg@@3PAUHWND__@@A	; hWndUpdateDlg
	call	DWORD PTR __imp__GetDlgItem@8

; 630  : 
; 631  :   if (total != last_total)

	mov	ebx, DWORD PTR _total$[ebp]
	mov	esi, eax
	mov	edi, DWORD PTR __imp__SendMessageW@16
	cmp	ebx, DWORD PTR ?last_total@?1??DecompressionProgressCallback@@YGHHH@Z@4HA
	je	SHORT $LN2@Decompress

; 632  :   {
; 633  :     SendMessage (hWndProgress, PBM_SETSTATE, PBST_NORMAL, 0UL);

	push	0
	push	1
	push	1040					; 00000410H
	push	esi
	call	edi

; 634  :     SendMessage (hWndProgress, PBM_SETRANGE, 0UL, MAKEWPARAM (0, total));

	movzx	eax, bx
	shl	eax, 16					; 00000010H
	push	eax
	push	0
	push	1025					; 00000401H
	push	esi
	call	edi
$LN2@Decompress:

; 635  :   }
; 636  : 
; 637  :   SendMessage (hWndProgress, PBM_SETPOS, current, 0UL);

	push	0
	push	DWORD PTR _current$[ebp]
	push	1026					; 00000402H
	push	esi
	call	edi
	pop	edi
	pop	esi

; 638  : 
; 639  :   return 0;

	xor	eax, eax
	pop	ebx

; 640  : }

	pop	ebp
	ret	8
?DecompressionProgressCallback@@YGHHH@Z ENDP		; DecompressionProgressCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_uNotification$ = 12					; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_dwRefData$ = 24					; size = 4
?DownloadDialogCallback@@YGJPAUHWND__@@IIJJ@Z PROC	; DownloadDialogCallback

; 493  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 494  :   auto* get =
; 495  :     reinterpret_cast <sk_internet_get_t *> (dwRefData);
; 496  : 
; 497  : 
; 498  :   // Don't allow this window to be used while the
; 499  :   //   reminder dialog is visible.
; 500  :   if (IsWindow (hWndRemind))

	push	DWORD PTR ?hWndRemind@@3PAUHWND__@@A	; hWndRemind
	call	DWORD PTR __imp__IsWindow@4
	test	eax, eax
	je	SHORT $LN2@DownloadDi

; 501  :     return S_FALSE;

	mov	eax, 1

; 616  : }

	pop	ebp
	ret	20					; 00000014H
$LN2@DownloadDi:

; 502  : 
; 503  : 
; 504  :   extern DWORD WINAPI SK_RealizeForegroundWindow (HWND);
; 505  : 
; 506  :   if (uNotification == TDN_TIMER)

	mov	eax, DWORD PTR _uNotification$[ebp]
	push	esi
	push	edi
	cmp	eax, 4
	jne	SHORT $LN4@DownloadDi

; 507  :   {
; 508  :     //SK_RealizeForegroundWindow (hWnd);
; 509  : 
; 510  :     if ( get->status == STATUS_UPDATED   ||
; 511  :          get->status == STATUS_CANCELLED ||

	mov	eax, DWORD PTR _dwRefData$[ebp]
	mov	eax, DWORD PTR [eax+5132]
	cmp	eax, 1
	je	SHORT $LN5@DownloadDi
	cmp	eax, 4
	je	SHORT $LN5@DownloadDi
	cmp	eax, 2
	jne	$LN14@DownloadDi
$LN5@DownloadDi:

; 512  :          get->status == STATUS_REMINDER )
; 513  :     {
; 514  :       EndDialog ( hWnd, 0 );

	push	0
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR __imp__EndDialog@8
	pop	edi

; 515  :       return S_OK;

	xor	eax, eax
	pop	esi

; 616  : }

	pop	ebp
	ret	20					; 00000014H
$LN4@DownloadDi:

; 516  :     }
; 517  :   }
; 518  : 
; 519  :   if (uNotification == TDN_HYPERLINK_CLICKED)

	cmp	eax, 3
	jne	SHORT $LN6@DownloadDi

; 520  :   {
; 521  :     ShellExecuteW (nullptr, L"open", (wchar_t *)lParam, nullptr, nullptr, SW_SHOWMAXIMIZED);

	push	eax
	push	0
	push	0
	push	DWORD PTR _lParam$[ebp]
	push	OFFSET $SG160594
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24
	pop	edi

; 522  : 
; 523  :     return S_OK;

	xor	eax, eax
	pop	esi

; 616  : }

	pop	ebp
	ret	20					; 00000014H
$LN6@DownloadDi:

; 524  :   }
; 525  : 
; 526  :   if (uNotification == TDN_DIALOG_CONSTRUCTED)

	cmp	eax, 7
	jne	$LN7@DownloadDi

; 527  :   {
; 528  :     BringWindowToTop    (hWnd);

	push	ebx
	mov	ebx, DWORD PTR _hWnd$[ebp]
	push	ebx
	call	DWORD PTR __imp__BringWindowToTop@4

; 529  :     SetForegroundWindow (hWnd);

	push	ebx
	call	DWORD PTR __imp__SetForegroundWindow@4

; 530  :     SetActiveWindow     (hWnd);

	push	ebx
	call	DWORD PTR __imp__SetActiveWindow@4

; 531  :     SetFocus            (hWnd);

	push	ebx
	call	DWORD PTR __imp__SetFocus@4

; 532  : 
; 533  :     SendMessage (hWnd, TDM_SET_PROGRESS_BAR_RANGE, 0L,          MAKEWPARAM (0, 1));

	mov	esi, DWORD PTR __imp__SendMessageW@16
	push	65536					; 00010000H
	push	0
	push	1129					; 00000469H
	push	ebx
	call	esi

; 534  :     SendMessage (hWnd, TDM_SET_PROGRESS_BAR_POS,   1,           0L);

	push	0
	push	1
	push	1130					; 0000046aH
	push	ebx
	call	esi

; 535  :     SendMessage (hWnd, TDM_SET_PROGRESS_BAR_STATE, PBST_PAUSED, 0L);

	push	0
	push	3
	push	1128					; 00000468H
	push	ebx
	call	esi

; 536  : 
; 537  :     LONG_PTR style    = GetWindowLongPtrW (hWnd, GWL_STYLE);

	mov	esi, DWORD PTR __imp__GetWindowLongW@8
	push	-16					; fffffff0H
	push	ebx
	call	esi

; 538  :     LONG_PTR style_ex = GetWindowLongPtrW (hWnd, GWL_EXSTYLE);

	push	-20					; ffffffecH
	push	ebx
	mov	edi, eax
	call	esi

; 539  : 
; 540  :     SetWindowLongPtrW (hWnd, GWL_STYLE,   style    | WS_POPUP);    

	mov	esi, DWORD PTR __imp__SetWindowLongW@12
	or	edi, -2147483648			; 80000000H
	push	edi
	mov	edi, DWORD PTR _hWnd$[ebp]
	mov	ebx, eax
	push	-16					; fffffff0H
	push	edi
	call	esi

; 541  :     SetWindowLongPtrW (hWnd, GWL_EXSTYLE, style_ex | WS_EX_TOPMOST | WS_EX_APPWINDOW);

	or	ebx, 262152				; 00040008H
	push	ebx
	push	-20					; ffffffecH
	push	edi
	call	esi

; 542  : 
; 543  :     SetWindowPos      ( hWnd, HWND_TOPMOST,

	push	17443					; 00004423H
	push	0
	push	0
	push	0
	push	0
	push	-1
	push	edi
	call	DWORD PTR __imp__SetWindowPos@28

; 544  :                           0, 0,
; 545  :                           0, 0,
; 546  :                             SWP_NOSENDCHANGING | SWP_ASYNCWINDOWPOS | SWP_FRAMECHANGED |
; 547  :                             SWP_NOMOVE         | SWP_NOSIZE );
; 548  : 
; 549  :     SK_RealizeForegroundWindow (hWnd);

	push	edi
	call	?SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z ; SK_RealizeForegroundWindow
	pop	ebx
	pop	edi

; 550  : 
; 551  :     return S_OK;

	xor	eax, eax
	pop	esi

; 616  : }

	pop	ebp
	ret	20					; 00000014H
$LN7@DownloadDi:

; 552  :   }
; 553  : 
; 554  :   if (uNotification == TDN_CREATED)

	test	eax, eax
	jne	SHORT $LN8@DownloadDi

; 555  :   {
; 556  :     SK_RealizeForegroundWindow (hWnd);

	push	DWORD PTR _hWnd$[ebp]
	call	?SK_RealizeForegroundWindow@@YGKPAUHWND__@@@Z ; SK_RealizeForegroundWindow
	pop	edi

; 557  : 
; 558  :     return S_OK;

	xor	eax, eax
	pop	esi

; 616  : }

	pop	ebp
	ret	20					; 00000014H
$LN8@DownloadDi:

; 559  :   }
; 560  : 
; 561  :   if (uNotification == TDN_BUTTON_CLICKED)

	cmp	eax, 2
	jne	$LN14@DownloadDi

; 562  :   {
; 563  :     if (wParam == ID_REMIND)

	mov	eax, DWORD PTR _wParam$[ebp]
	test	eax, eax
	jne	SHORT $LN10@DownloadDi

; 564  :     {
; 565  :       hWndRemind =

	push	eax
	push	OFFSET ?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z ; RemindMeLater_DlgProc
	push	DWORD PTR _hWnd$[ebp]
	push	106					; 0000006aH
	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	call	DWORD PTR __imp__CreateDialogParamW@20
	mov	DWORD PTR ?hWndRemind@@3PAUHWND__@@A, eax ; hWndRemind

; 566  :         CreateDialog ( SK_GetDLL (),
; 567  :                          MAKEINTRESOURCE (IDD_REMIND_ME_LATER),
; 568  :                            hWnd,
; 569  :                              RemindMeLater_DlgProc );
; 570  : 
; 571  :       get->status = STATUS_REMINDER;

	mov	eax, DWORD PTR _dwRefData$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+5132], 2

; 598  :     }
; 599  : 
; 600  :     else
; 601  :     {
; 602  :       //get->status = STATUS_CANCELLED;
; 603  :       //return S_OK;
; 604  :     }
; 605  :   }
; 606  : 
; 607  :   if (uNotification == TDN_DESTROYED)
; 608  :   {
; 609  :     //sk_internet_get_t* get =
; 610  :       //(sk_internet_get_t *)dwRefData;
; 611  : 
; 612  :     //delete get;
; 613  :   }
; 614  : 
; 615  :   return S_FALSE;

	mov	eax, 1

; 616  : }

	pop	ebp
	ret	20					; 00000014H
$LN10@DownloadDi:

; 572  :     }
; 573  : 
; 574  :     else if (wParam == IDYES)

	cmp	eax, 6
	jne	SHORT $LN12@DownloadDi

; 575  :     {
; 576  :       // Disable the button
; 577  :       SendMessage (hWnd, TDM_ENABLE_BUTTON, wParam, 0);

	mov	edi, DWORD PTR _hWnd$[ebp]
	mov	esi, DWORD PTR __imp__SendMessageW@16
	push	0
	push	eax
	push	1135					; 0000046fH
	push	edi
	call	esi

; 578  : 
; 579  :       // Also disable the remind me later button
; 580  :       SendMessage (hWnd, TDM_ENABLE_BUTTON, 0,      0);

	push	0
	push	0
	push	1135					; 0000046fH
	push	edi
	call	esi

; 581  : 
; 582  :       // Also disable the cancel button
; 583  :       SendMessage (hWnd, TDM_ENABLE_BUTTON, IDCANCEL, 0);

	push	0
	push	2
	push	1135					; 0000046fH
	push	edi
	call	esi

; 584  : 
; 585  :       get->hTaskDlg = hWnd;

	mov	eax, DWORD PTR _dwRefData$[ebp]

; 586  : 
; 587  :       CreateThread ( nullptr,

	push	0
	push	0
	push	eax
	push	OFFSET ?DownloadThread@@YGKPAX@Z	; DownloadThread
	push	0
	push	0
	mov	DWORD PTR [eax+5128], edi
	call	DWORD PTR __imp__CreateThread@24
	pop	edi

; 598  :     }
; 599  : 
; 600  :     else
; 601  :     {
; 602  :       //get->status = STATUS_CANCELLED;
; 603  :       //return S_OK;
; 604  :     }
; 605  :   }
; 606  : 
; 607  :   if (uNotification == TDN_DESTROYED)
; 608  :   {
; 609  :     //sk_internet_get_t* get =
; 610  :       //(sk_internet_get_t *)dwRefData;
; 611  : 
; 612  :     //delete get;
; 613  :   }
; 614  : 
; 615  :   return S_FALSE;

	mov	eax, 1
	pop	esi

; 616  : }

	pop	ebp
	ret	20					; 00000014H
$LN12@DownloadDi:

; 588  :                        0,
; 589  :                          DownloadThread,
; 590  :                            (LPVOID)get,
; 591  :                              0x00,
; 592  :                                nullptr );
; 593  :     }
; 594  : 
; 595  :     else if (wParam == IDCANCEL)

	cmp	eax, 2
	jne	SHORT $LN14@DownloadDi

; 596  :     {
; 597  :       get->status = STATUS_CANCELLED;

	mov	eax, DWORD PTR _dwRefData$[ebp]
	mov	DWORD PTR [eax+5132], 4
$LN14@DownloadDi:

; 598  :     }
; 599  : 
; 600  :     else
; 601  :     {
; 602  :       //get->status = STATUS_CANCELLED;
; 603  :       //return S_OK;
; 604  :     }
; 605  :   }
; 606  : 
; 607  :   if (uNotification == TDN_DESTROYED)
; 608  :   {
; 609  :     //sk_internet_get_t* get =
; 610  :       //(sk_internet_get_t *)dwRefData;
; 611  : 
; 612  :     //delete get;
; 613  :   }
; 614  : 
; 615  :   return S_FALSE;

	pop	edi
	mov	eax, 1
	pop	esi

; 616  : }

	pop	ebp
	ret	20					; 00000014H
?DownloadDialogCallback@@YGJPAUHWND__@@IIJJ@Z ENDP	; DownloadDialogCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
_TEXT	SEGMENT
_install_ini$2 = -152					; size = 68
$T3 = -84						; size = 24
$T4 = -60						; size = 24
_ftNow$5 = -36						; size = 8
_hWndNextCheck$1$ = -28					; size = 4
_ParameterFactory$6 = -24				; size = 12
__$EHRec$ = -12						; size = 12
_hWndDlg$ = 8						; size = 4
$T7 = 12						; size = 4
$T8 = 12						; size = 4
_uMsg$ = 12						; size = 4
_never$1$ = 15						; size = 1
_user_prefs$1$ = 16					; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z PROC	; RemindMeLater_DlgProc

; 329  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 140				; 0000008cH
	push	ebx
	push	esi
	push	edi

; 330  :   UNREFERENCED_PARAMETER (lParam);
; 331  : 
; 332  :   HWND hWndNextCheck =
; 333  :     GetDlgItem (hWndDlg, IDC_NEXT_VERSION_CHECK);

	push	1001					; 000003e9H
	push	DWORD PTR _hWndDlg$[ebp]
	call	DWORD PTR __imp__GetDlgItem@8
	mov	ebx, eax

; 334  : 
; 335  :   switch (uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR _hWndNextCheck$1$[ebp], ebx
	sub	eax, 272				; 00000110H
	je	$LN6@RemindMeLa
	sub	eax, 1
	jne	$LN273@RemindMeLa

; 359  : 
; 360  :       return 0;
; 361  :     } break;
; 362  : 
; 363  :     case WM_COMMAND:
; 364  :     {
; 365  :       if (LOWORD (wParam) == IDOK)

	cmp	WORD PTR _wParam$[ebp], 1
	jne	$LN273@RemindMeLa

; 366  :       {
; 367  :         srand (GetCurrentProcessId ());

	call	DWORD PTR __imp__GetCurrentProcessId@0
	push	eax
	call	DWORD PTR __imp__srand
	add	esp, 4

; 368  : 
; 369  :         if (! (rand () % 2))

	call	DWORD PTR __imp__rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN272@RemindMeLa
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN272@RemindMeLa:
	jne	SHORT $LN11@RemindMeLa

; 370  :           PlaySound ( (LPCWSTR)annoy_sound.buf,

	push	5
	push	0
	push	DWORD PTR ?annoy_sound@@3U<unnamed-type-annoy_sound>@@A+4
	call	DWORD PTR __imp__PlaySoundW@12
$LN11@RemindMeLa:

; 371  :                       nullptr,
; 372  :                         SND_ASYNC |
; 373  :                         SND_MEMORY );
; 374  : 
; 375  :         FILETIME                  ftNow;
; 376  :         GetSystemTimeAsFileTime (&ftNow);

	lea	eax, DWORD PTR _ftNow$5[ebp]
	push	eax
	call	DWORD PTR __imp__GetSystemTimeAsFileTime@4
	mov	edi, DWORD PTR _ftNow$5[ebp]
	mov	ebx, DWORD PTR _ftNow$5[ebp+4]

; 377  : 
; 378  :         ULARGE_INTEGER next_uli {
; 379  :           ftNow.dwLowDateTime, ftNow.dwHighDateTime
; 380  :         };
; 381  : 
; 382  :         ULONGLONG next =
; 383  :           next_uli.QuadPart;
; 384  : 
; 385  :         bool never = false;
; 386  : 
; 387  :         const ULONGLONG _Minute =   600000000ULL;
; 388  :         const ULONGLONG _Hour   = 36000000000ULL;
; 389  : 
; 390  :         switch (ComboBox_GetCurSel (hWndNextCheck))

	push	0
	push	0
	push	327					; 00000147H
	push	DWORD PTR _hWndNextCheck$1$[ebp]
	mov	BYTE PTR _never$1$[ebp], 0
	call	DWORD PTR __imp__SendMessageW@16
	dec	eax
	cmp	eax, 4
	ja	SHORT $LN12@RemindMeLa
	jmp	DWORD PTR $LN274@RemindMeLa[eax*4]
$LN13@RemindMeLa:

; 391  :         {
; 392  :           // Immediate
; 393  :           case 0:
; 394  :           default:
; 395  :             break;
; 396  : 
; 397  :           case 1:
; 398  :             next += (15 * _Minute);

	add	edi, 410065408				; 18711a00H
	adc	ebx, 2

; 399  :             break;

	jmp	SHORT $LN12@RemindMeLa
$LN14@RemindMeLa:

; 400  : 
; 401  :           case 2:
; 402  :             next += (1 * _Hour);

	add	edi, 1640261632				; 61c46800H
	adc	ebx, 8

; 403  :             break;

	jmp	SHORT $LN12@RemindMeLa
$LN15@RemindMeLa:

; 404  : 
; 405  :           case 3:
; 406  :             next += (12 * _Hour);

	add	edi, -1791696896			; 9534e000H
	adc	ebx, 100				; 00000064H

; 407  :             break;

	jmp	SHORT $LN12@RemindMeLa
$LN16@RemindMeLa:

; 408  : 
; 409  :           case 4:
; 410  :             next += (24 * _Hour);

	add	edi, 711573504				; 2a69c000H
	adc	ebx, 201				; 000000c9H

; 411  :             break;

	jmp	SHORT $LN12@RemindMeLa
$LN17@RemindMeLa:

; 412  : 
; 413  :           case 5:
; 414  :             next  = MAXULONGLONG;

	or	edi, -1

; 415  :             never = true;

	mov	BYTE PTR _never$1$[ebp], 1
	or	ebx, -1
$LN12@RemindMeLa:

; 419  :         iSK_INI install_ini (SK_Version_GetInstallIniPath ().c_str ());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?SK_Version_GetInstallIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_Version_GetInstallIniPath
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 419  :         iSK_INI install_ini (SK_Version_GetInstallIniPath ().c_str ());

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN50@RemindMeLa
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN50@RemindMeLa:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 419  :         iSK_INI install_ini (SK_Version_GetInstallIniPath ().c_str ());

	push	eax
	lea	ecx, DWORD PTR _install_ini$2[ebp]
	call	??0iSK_INI@@QAE@PB_W@Z			; iSK_INI::iSK_INI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T4[ebp+20]
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 419  :         iSK_INI install_ini (SK_Version_GetInstallIniPath ().c_str ());

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN59@RemindMeLa

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T4[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN59@RemindMeLa:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T4[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T4[ebp], ax
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 423  :         if (install_ini.get_sections ().empty ())

	lea	eax, DWORD PTR _install_ini$2[ebp]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T4[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 423  :         if (install_ini.get_sections ().empty ())

	call	?get_sections@iSK_INI@@UAGABV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@XZ ; iSK_INI::get_sections

; 426  :         iSK_INISection& user_prefs =

	push	OFFSET $SG160521
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1277 : 		return (this->_Mysize() == 0);

	mov	esi, DWORD PTR [eax+8]
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 426  :         iSK_INISection& user_prefs =

	lea	eax, DWORD PTR _install_ini$2[ebp]
	push	eax
	call	?get_section@iSK_INI@@UAGAAUiSK_INISection@@PB_W@Z ; iSK_INI::get_section
	mov	DWORD PTR _user_prefs$1$[ebp], eax
	test	esi, esi

; 427  :           install_ini.get_section (L"Update.User");
; 428  : 
; 429  :         if (empty)

	jne	SHORT $LN19@RemindMeLa

; 430  :           user_prefs.set_name (L"Update.User");

	mov	ecx, DWORD PTR [eax]
	push	OFFSET $SG160523
	push	eax
	call	DWORD PTR [ecx+16]
$LN19@RemindMeLa:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR _ParameterFactory$6[ebp], 0

; 477  : 		_Mylast(),

	mov	DWORD PTR _ParameterFactory$6[ebp+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR _ParameterFactory$6[ebp+8], 0
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 434  :         if (! never)

	cmp	BYTE PTR _never$1$[ebp], 0

; 435  :         {
; 436  :           auto* remind_time =
; 437  :             dynamic_cast <sk::ParameterInt64 *> (
; 438  :               ParameterFactory.create_parameter <int64_t> (L"Reminder")

	lea	ecx, DWORD PTR _ParameterFactory$6[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	0
	jne	SHORT $LN20@RemindMeLa
	push	OFFSET ??_R0?AVParameterInt64@sk@@@8
	push	OFFSET ??_R0?AViParameter@sk@@@8
	push	0
	push	OFFSET $SG160526
	call	??$create_parameter@_J@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z ; sk::ParameterFactory::create_parameter<__int64>
	push	eax
	call	___RTDynamicCast

; 439  :             );
; 440  : 
; 441  :           remind_time->register_to_ini (

	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T8[ebp], esp
	push	OFFSET $SG160527
	mov	esi, eax
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	sub	esp, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, esp
	push	OFFSET $SG160528
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	eax, DWORD PTR _install_ini$2[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	eax
	mov	ecx, esi
	call	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini

; 442  :             &install_ini,
; 443  :               L"Update.User",
; 444  :                 L"Reminder"
; 445  :           );
; 446  : 
; 447  :                  remind_time->store ((int64_t)next);

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	ebx
	push	edi
	call	DWORD PTR [eax+16]
	mov	ecx, esi
	call	??1iParameter@sk@@QAE@XZ
	push	80					; 00000050H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 448  :           delete remind_time;
; 449  :         }
; 450  : 
; 451  :         else

	jmp	$LN25@RemindMeLa
$LN20@RemindMeLa:

; 452  :         {
; 453  :           auto* frequency =
; 454  :             dynamic_cast <sk::ParameterStringW *> (
; 455  :               ParameterFactory.create_parameter <std::wstring> (

	push	OFFSET ??_R0?AVParameterStringW@sk@@@8
	push	OFFSET ??_R0?AViParameter@sk@@@8
	push	0
	push	OFFSET $SG160529
	call	??$create_parameter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z ; sk::ParameterFactory::create_parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	push	eax
	call	___RTDynamicCast

; 456  :                 L"Frequency"
; 457  :               )
; 458  :             );
; 459  : 
; 460  :           frequency->register_to_ini (

	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	push	OFFSET $SG160530
	mov	esi, eax
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	sub	esp, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, esp
	push	OFFSET $SG160531
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	eax, DWORD PTR _install_ini$2[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	eax
	mov	ecx, esi
	call	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini

; 461  :             &install_ini,
; 462  :               L"Update.User",
; 463  :                 L"Frequency"
; 464  :           );
; 465  : 
; 466  :           user_prefs.remove_key (L"Reminder");

	mov	ecx, DWORD PTR _user_prefs$1$[ebp]
	push	OFFSET $SG160532
	push	ecx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+28]

; 467  : 
; 468  :                  frequency->store (L"never");

	sub	esp, 24					; 00000018H
	mov	ecx, esp
	push	OFFSET $SG160533
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	call	DWORD PTR [eax+16]

; 469  :           delete frequency;

	push	1
	mov	ecx, esi
	call	??_GParameterStringW@sk@@QAEPAXI@Z
$LN25@RemindMeLa:

; 472  :         install_ini.write (SK_Version_GetInstallIniPath ().c_str ());

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?SK_Version_GetInstallIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_Version_GetInstallIniPath
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN136@RemindMeLa
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN136@RemindMeLa:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 472  :         install_ini.write (SK_Version_GetInstallIniPath ().c_str ());

	push	eax
	lea	eax, DWORD PTR _install_ini$2[ebp]
	push	eax
	call	?write@iSK_INI@@UAGXPB_W@Z		; iSK_INI::write
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T3[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN145@RemindMeLa
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T3[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN145@RemindMeLa:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 474  :         EndDialog (hWndDlg, 0);

	push	0
	push	DWORD PTR _hWndDlg$[ebp]
	call	DWORD PTR __imp__EndDialog@8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR _ParameterFactory$6[ebp]
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 475  :         hWndRemind = (HWND)INVALID_HANDLE_VALUE;

	mov	DWORD PTR ?hWndRemind@@3PAUHWND__@@A, -1 ; hWndRemind
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1949 : 		if (this->_Myfirst() != pointer())

	test	ecx, ecx
	je	SHORT $LN178@RemindMeLa

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR _ParameterFactory$6[ebp+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR _ParameterFactory$6[ebp], 0

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR _ParameterFactory$6[ebp+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR _ParameterFactory$6[ebp+8], 0
$LN178@RemindMeLa:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 477  :         return 0;

	lea	ecx, DWORD PTR _install_ini$2[ebp]
	call	??1iSK_INI@@QAE@XZ			; iSK_INI::~iSK_INI
	jmp	$LN273@RemindMeLa
$LN6@RemindMeLa:

; 336  :   {
; 337  :     case WM_INITDIALOG:
; 338  :     {
; 339  :       HRSRC   default_sound =
; 340  :         FindResource (SK_GetDLL (), MAKEINTRESOURCE (IDR_ANNOYING), L"WAVE");

	push	OFFSET $SG160502
	push	112					; 00000070H
	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	call	DWORD PTR __imp__FindResourceW@12

; 341  : 
; 342  :       if (default_sound != nullptr)

	test	eax, eax
	je	SHORT $LN8@RemindMeLa

; 343  :       {
; 344  :         annoy_sound.ref   =

	push	eax
	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	call	DWORD PTR __imp__LoadResource@8
	mov	DWORD PTR ?annoy_sound@@3U<unnamed-type-annoy_sound>@@A, eax

; 345  :           LoadResource (SK_GetDLL (), default_sound);
; 346  : 
; 347  :         if (annoy_sound.ref != nullptr)

	test	eax, eax
	je	SHORT $LN8@RemindMeLa

; 348  :           annoy_sound.buf = (uint8_t *)LockResource (annoy_sound.ref);

	push	eax
	call	DWORD PTR __imp__LockResource@4
	mov	DWORD PTR ?annoy_sound@@3U<unnamed-type-annoy_sound>@@A+4, eax
$LN8@RemindMeLa:

; 349  :       }
; 350  : 
; 351  :       ComboBox_InsertString (hWndNextCheck, 0, L"Next launch");

	mov	esi, DWORD PTR __imp__SendMessageW@16
	push	OFFSET $SG160505
	push	0
	push	330					; 0000014aH
	push	ebx
	call	esi

; 352  :       ComboBox_InsertString (hWndNextCheck, 1, L"After 15 Minutes");

	push	OFFSET $SG160506
	push	1
	push	330					; 0000014aH
	push	ebx
	call	esi

; 353  :       ComboBox_InsertString (hWndNextCheck, 2, L"After 1 Hour");

	push	OFFSET $SG160507
	push	2
	push	330					; 0000014aH
	push	ebx
	call	esi

; 354  :       ComboBox_InsertString (hWndNextCheck, 3, L"After 12 Hours");

	push	OFFSET $SG160508
	push	3
	push	330					; 0000014aH
	push	ebx
	call	esi

; 355  :       ComboBox_InsertString (hWndNextCheck, 4, L"Tomorrow");

	push	OFFSET $SG160509
	push	4
	push	330					; 0000014aH
	push	ebx
	call	esi

; 356  :       ComboBox_InsertString (hWndNextCheck, 5, L"Never");

	push	OFFSET $SG160510
	push	5
	push	330					; 0000014aH
	push	ebx
	call	esi

; 357  : 
; 358  :       ComboBox_SetCurSel (hWndNextCheck, 0);

	push	0
	push	0
	push	334					; 0000014eH
	push	ebx
	call	esi
$LN273@RemindMeLa:

; 478  :       }
; 479  :     } break;
; 480  :   }
; 481  : 
; 482  :   return 0;
; 483  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	xor	eax, eax
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN274@RemindMeLa:
	DD	$LN13@RemindMeLa
	DD	$LN14@RemindMeLa
	DD	$LN15@RemindMeLa
	DD	$LN16@RemindMeLa
	DD	$LN17@RemindMeLa
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$0:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$1:
	lea	ecx, DWORD PTR _install_ini$2[ebp]
	jmp	??1iSK_INI@@QAE@XZ			; iSK_INI::~iSK_INI
__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$2:
	lea	ecx, DWORD PTR _ParameterFactory$6[ebp]
	jmp	??1ParameterFactory@sk@@QAE@XZ
__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$3:
	mov	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z$5:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z:
	mov	eax, OFFSET __ehfuncinfo$?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemindMeLater_DlgProc@@YGHPAUHWND__@@IIJ@Z ENDP	; RemindMeLater_DlgProc
; Function compile flags: /Ogtp
;	COMDAT ??0<unnamed-type-annoy_sound>@@QAE@XZ
_TEXT	SEGMENT
??0<unnamed-type-annoy_sound>@@QAE@XZ PROC		; <unnamed-type-annoy_sound>::<unnamed-type-annoy_sound>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0<unnamed-type-annoy_sound>@@QAE@XZ ENDP		; <unnamed-type-annoy_sound>::<unnamed-type-annoy_sound>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ??0<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QAE@AAV<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@AAPAUsk_internet_get_t@@@Z
_TEXT	SEGMENT
_<TaskMsg>$ = 8						; size = 4
_<get>$ = 12						; size = 4
??0<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QAE@AAV<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@AAPAUsk_internet_get_t@@@Z PROC ; <lambda_5dd24a0d97655738306d6049fb2c96ad>::<lambda_5dd24a0d97655738306d6049fb2c96ad>, COMDAT
; _this$ = ecx

; 132  :     };

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _<TaskMsg>$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _<get>$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, ecx
	pop	ebp
	ret	8
??0<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QAE@AAV<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@AAPAUsk_internet_get_t@@@Z ENDP ; <lambda_5dd24a0d97655738306d6049fb2c96ad>::<lambda_5dd24a0d97655738306d6049fb2c96ad>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ??R<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QBEXXZ
_TEXT	SEGMENT
??R<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QBEXXZ PROC ; <lambda_5dd24a0d97655738306d6049fb2c96ad>::operator(), COMDAT
; _this$ = ecx

; 118  :     {

	npad	2
	push	esi

; 98   :         if (get->hTaskDlg != nullptr)

	mov	esi, DWORD PTR __imp__SendMessageW@16
	push	edi

; 118  :     {

	mov	edi, ecx

; 119  :       TaskMsg (TDM_SET_PROGRESS_BAR_STATE, PBST_NORMAL, 0L);

	mov	eax, DWORD PTR [edi]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN4@operator

; 99   :           return SendMessage ( get->hTaskDlg,

	push	0
	push	1
	push	1128					; 00000468H
	push	eax
	call	esi
$LN4@operator:

; 120  :       TaskMsg (TDM_SET_PROGRESS_BAR_RANGE, 0L,          MAKEWPARAM (0, 1));

	mov	eax, DWORD PTR [edi]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN7@operator

; 99   :           return SendMessage ( get->hTaskDlg,

	push	65536					; 00010000H
	push	0
	push	1129					; 00000469H
	push	eax
	call	esi
$LN7@operator:

; 121  :       TaskMsg (TDM_SET_PROGRESS_BAR_POS,   1,           0L);

	mov	eax, DWORD PTR [edi]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN10@operator

; 99   :           return SendMessage ( get->hTaskDlg,

	push	0
	push	1
	push	1130					; 0000046aH
	push	eax
	call	esi
$LN10@operator:

; 122  :       TaskMsg (TDM_SET_PROGRESS_BAR_STATE, PBST_ERROR,  0L);

	mov	eax, DWORD PTR [edi]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN13@operator

; 99   :           return SendMessage ( get->hTaskDlg,

	push	0
	push	2
	push	1128					; 00000468H
	push	eax
	call	esi
$LN13@operator:

; 123  : 
; 124  :       TaskMsg (TDM_ENABLE_BUTTON, IDYES,    1); // Re-enable the update button

	mov	eax, DWORD PTR [edi]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN16@operator

; 99   :           return SendMessage ( get->hTaskDlg,

	push	1
	push	6
	push	1135					; 0000046fH
	push	eax
	call	esi
$LN16@operator:

; 125  :       TaskMsg (TDM_ENABLE_BUTTON, 0,        1); // Re-enable remind me later button

	mov	eax, DWORD PTR [edi]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN19@operator

; 99   :           return SendMessage ( get->hTaskDlg,

	push	1
	push	0
	push	1135					; 0000046fH
	push	eax
	call	esi
$LN19@operator:

; 126  :       TaskMsg (TDM_ENABLE_BUTTON, IDCANCEL, 1); // Re-enable cancel button

	mov	eax, DWORD PTR [edi]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN22@operator

; 99   :           return SendMessage ( get->hTaskDlg,

	push	1
	push	2
	push	1135					; 0000046fH
	push	eax
	call	esi
$LN22@operator:

; 127  : 
; 128  :       // Re-name the update button from Yes to Retry
; 129  :       SetDlgItemTextW (get->hTaskDlg, IDYES, L"Retry");

	mov	eax, DWORD PTR [edi+4]
	push	OFFSET ??_C@_1M@BLGDOOIB@?$AAR?$AAe?$AAt?$AAr?$AAy?$AA?$AA@
	push	6
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+5128]
	call	DWORD PTR __imp__SetDlgItemTextW@12

; 130  : 
; 131  :       get->status = STATUS_FAILED;

	mov	eax, DWORD PTR [edi+4]
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+5132], 8

; 132  :     };

	ret	0
??R<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QBEXXZ ENDP ; <lambda_5dd24a0d97655738306d6049fb2c96ad>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
;	COMDAT ??$max@N@std@@YAABNABN0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@N@std@@YAABNABN0@Z PROC				; std::max<double>, COMDAT

; 3742 : 	{	// return larger of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Left$[ebp]
	movsd	xmm0, QWORD PTR [ecx]
	comisd	xmm0, QWORD PTR [eax]
	cmova	eax, ecx

; 3744 : 	}

	pop	ebp
	ret	0
??$max@N@std@@YAABNABN0@Z ENDP				; std::max<double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ??0<lambda_05debe83df55819ff665e8879a07fda3>@@QAE@AAV<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@@Z
_TEXT	SEGMENT
_<TaskMsg>$ = 8						; size = 4
??0<lambda_05debe83df55819ff665e8879a07fda3>@@QAE@AAV<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@@Z PROC ; <lambda_05debe83df55819ff665e8879a07fda3>::<lambda_05debe83df55819ff665e8879a07fda3>, COMDAT
; _this$ = ecx

; 114  :     };

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _<TaskMsg>$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??0<lambda_05debe83df55819ff665e8879a07fda3>@@QAE@AAV<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@@Z ENDP ; <lambda_05debe83df55819ff665e8879a07fda3>::<lambda_05debe83df55819ff665e8879a07fda3>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ??R<lambda_05debe83df55819ff665e8879a07fda3>@@QBEXNN@Z
_TEXT	SEGMENT
_cur$ = 8						; size = 8
_max$ = 16						; size = 8
??R<lambda_05debe83df55819ff665e8879a07fda3>@@QBEXNN@Z PROC ; <lambda_05debe83df55819ff665e8879a07fda3>::operator(), COMDAT
; _this$ = ecx

; 108  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 109  :       TaskMsg ( TDM_SET_PROGRESS_BAR_POS,

	mov	eax, DWORD PTR [ecx]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+5128]
	test	ecx, ecx
	je	SHORT $LN7@operator

; 109  :       TaskMsg ( TDM_SET_PROGRESS_BAR_POS,

	movsd	xmm0, QWORD PTR _max$[ebp]
	maxsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	xmm1, QWORD PTR _cur$[ebp]

; 99   :           return SendMessage ( get->hTaskDlg,

	push	0

; 109  :       TaskMsg ( TDM_SET_PROGRESS_BAR_POS,

	divsd	xmm1, xmm0
	mulsd	xmm1, QWORD PTR __real@40dfffc000000000
	cvttsd2si eax, xmm1
	cwde

; 99   :           return SendMessage ( get->hTaskDlg,

	push	eax
	push	1130					; 0000046aH
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN7@operator:

; 110  :                   static_cast <INT16> (
; 111  :                     static_cast <double> (MAXINT16) *
; 112  :                              ( cur / std::max (1.0, max) )
; 113  :                   ), 0L );
; 114  :     };

	pop	ebp
	ret	16					; 00000010H
??R<lambda_05debe83df55819ff665e8879a07fda3>@@QBEXNN@Z ENDP ; <lambda_05debe83df55819ff665e8879a07fda3>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ??0<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@QAE@AAPAUsk_internet_get_t@@@Z
_TEXT	SEGMENT
_<get>$ = 8						; size = 4
??0<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@QAE@AAPAUsk_internet_get_t@@@Z PROC ; <lambda_e07b7fc1149591c0aeab63d1f8c7e896>::<lambda_e07b7fc1149591c0aeab63d1f8c7e896>, COMDAT
; _this$ = ecx

; 104  :       };

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _<get>$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??0<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@QAE@AAPAUsk_internet_get_t@@@Z ENDP ; <lambda_e07b7fc1149591c0aeab63d1f8c7e896>::<lambda_e07b7fc1149591c0aeab63d1f8c7e896>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
;	COMDAT ??R<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@QBEJIIJ@Z
_TEXT	SEGMENT
_Msg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
??R<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@QBEJIIJ@Z PROC ; <lambda_e07b7fc1149591c0aeab63d1f8c7e896>::operator(), COMDAT
; _this$ = ecx

; 97   :       {

	npad	2
	push	ebp
	mov	ebp, esp

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN2@operator

; 99   :           return SendMessage ( get->hTaskDlg,

	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _Msg$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 104  :       };

	pop	ebp
	ret	12					; 0000000cH
$LN2@operator:

; 100  :                                  Msg,
; 101  :                                    wParam,
; 102  :                                      lParam );
; 103  :         return NULL;

	xor	eax, eax

; 104  :       };

	pop	ebp
	ret	12					; 0000000cH
??R<lambda_e07b7fc1149591c0aeab63d1f8c7e896>@@QBEJIIJ@Z ENDP ; <lambda_e07b7fc1149591c0aeab63d1f8c7e896>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
_TEXT	SEGMENT
_rgpszAcceptTypes$ = -60				; size = 8
_SetErrorState$ = -52					; size = 8
_dwWritten$1 = -44					; size = 4
_hInetHost$1$ = -40					; size = 4
_hInetRoot$1$ = -36					; size = 4
_dwContentLength_Len$2 = -32				; size = 4
_ulTimeout$ = -28					; size = 4
_dwInetCtx$ = -24					; size = 4
_hGetFile$1$ = -20					; size = 4
_SetProgress$ = -20					; size = 4
_dwSize$3 = -16						; size = 4
_dwTotalBytesDownloaded$1$ = -12			; size = 4
_dwRead$4 = -12						; size = 4
_dwContentLength$5 = -8					; size = 4
_TaskMsg$ = -4						; size = 4
_get$ = 8						; size = 4
_user$ = 8						; size = 4
?DownloadThread@@YGKPAX@Z PROC				; DownloadThread

; 90   : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 91   :   auto* get =
; 92   :     static_cast <sk_internet_get_t *> (user);

	mov	ecx, DWORD PTR _user$[ebp]

; 114  :     };

	lea	edx, DWORD PTR _TaskMsg$[ebp]
	push	ebx

; 98   :         if (get->hTaskDlg != nullptr)

	mov	ebx, DWORD PTR __imp__SendMessageW@16

; 104  :       };

	lea	eax, DWORD PTR _get$[ebp]

; 91   :   auto* get =
; 92   :     static_cast <sk_internet_get_t *> (user);

	mov	DWORD PTR _get$[ebp], ecx

; 104  :       };

	mov	DWORD PTR _TaskMsg$[ebp], eax

; 98   :         if (get->hTaskDlg != nullptr)

	mov	ecx, DWORD PTR [ecx+5128]

; 114  :     };

	mov	DWORD PTR _SetProgress$[ebp], edx

; 132  :     };

	mov	DWORD PTR _SetErrorState$[ebp], edx
	mov	edx, eax
	mov	DWORD PTR _SetErrorState$[ebp+4], edx
	push	esi
	push	edi

; 98   :         if (get->hTaskDlg != nullptr)

	test	ecx, ecx
	je	SHORT $LN29@DownloadTh

; 99   :           return SendMessage ( get->hTaskDlg,

	push	2147418112				; 7fff0000H
	push	0
	push	1129					; 00000469H
	push	ecx
	call	ebx
	mov	eax, DWORD PTR _TaskMsg$[ebp]
$LN29@DownloadTh:

; 98   :         if (get->hTaskDlg != nullptr)

	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+5128]
	test	ecx, ecx
	je	SHORT $LN32@DownloadTh

; 99   :           return SendMessage ( get->hTaskDlg,

	push	0
	push	1
	push	1128					; 00000468H
	push	ecx
	call	ebx
	mov	eax, DWORD PTR _TaskMsg$[ebp]
$LN32@DownloadTh:

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+5128]
	test	eax, eax
	je	SHORT $LN40@DownloadTh

; 99   :           return SendMessage ( get->hTaskDlg,

	push	0
	push	0
	push	1130					; 0000046aH
	push	eax
	call	ebx
$LN40@DownloadTh:

; 133  : 
; 134  :   TaskMsg (TDM_SET_PROGRESS_BAR_RANGE, 0L,          MAKEWPARAM (0, MAXINT16));
; 135  :   TaskMsg (TDM_SET_PROGRESS_BAR_STATE, PBST_NORMAL, 0L);
; 136  : 
; 137  :   SetProgress (0, 0);
; 138  : 
; 139  : 
; 140  :   HINTERNET hInetRoot =
; 141  :     InternetOpen (

	push	0
	push	0
	push	0
	push	1
	push	OFFSET $SG160330
	call	DWORD PTR __imp__InternetOpenW@20
	mov	ebx, eax
	mov	DWORD PTR _hInetRoot$1$[ebp], ebx

; 142  :       L"Special K Auto-Update",
; 143  :         INTERNET_OPEN_TYPE_DIRECT,
; 144  :           nullptr, nullptr,
; 145  :             0x00
; 146  :     );
; 147  : 
; 148  :   if (! hInetRoot)

	test	ebx, ebx
	je	SHORT $CLEANUP$56

; 149  :     goto CLEANUP;
; 150  : 
; 151  :   DWORD dwInetCtx;
; 152  : 
; 153  :   HINTERNET hInetHost =
; 154  :     InternetConnect ( hInetRoot,

	lea	eax, DWORD PTR _dwInetCtx$[ebp]
	push	eax
	push	0
	push	3
	push	0
	push	0
	push	80					; 00000050H
	push	DWORD PTR _get$[ebp]
	push	ebx
	call	DWORD PTR __imp__InternetConnectW@32
	mov	esi, eax
	mov	DWORD PTR _hInetHost$1$[ebp], esi

; 155  :                         get->wszHostName,
; 156  :                           INTERNET_DEFAULT_HTTP_PORT,
; 157  :                             nullptr, nullptr,
; 158  :                               INTERNET_SERVICE_HTTP,
; 159  :                                 0x00,
; 160  :                                   (DWORD_PTR)&dwInetCtx );
; 161  : 
; 162  :   if (! hInetHost)

	test	esi, esi
	jne	SHORT $LN6@DownloadTh

; 163  :   {
; 164  :     InternetCloseHandle (hInetRoot);

	push	ebx
	call	DWORD PTR __imp__InternetCloseHandle@4
$CLEANUP$56:

; 292  : 
; 293  :   goto END;
; 294  : 
; 295  : 
; 296  :   // (Cleanup On Error)
; 297  : CLEANUP:
; 298  :   SetErrorState ();

	lea	ecx, DWORD PTR _SetErrorState$[ebp]
	call	??R<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QBEXXZ ; <lambda_5dd24a0d97655738306d6049fb2c96ad>::operator()
$END$57:

; 299  : 
; 300  : 
; 301  : END:
; 302  :   //if (! get->hTaskDlg)
; 303  :     //delete get;
; 304  : 
; 305  :   CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	pop	edi
	pop	esi

; 306  : 
; 307  :   return 0;

	xor	eax, eax
	pop	ebx

; 308  : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@DownloadTh:

; 165  :     goto CLEANUP;
; 166  :   }
; 167  : 
; 168  :   PCWSTR rgpszAcceptTypes [] = { L"*/*", nullptr };
; 169  : 
; 170  :   HINTERNET hInetHTTPGetReq =
; 171  :     HttpOpenRequest ( hInetHost,

	lea	eax, DWORD PTR _dwInetCtx$[ebp]
	mov	DWORD PTR _rgpszAcceptTypes$[ebp], OFFSET $SG160335
	push	eax
	push	80000					; 00013880H
	lea	eax, DWORD PTR _rgpszAcceptTypes$[ebp]
	mov	DWORD PTR _rgpszAcceptTypes$[ebp+4], 0
	push	eax
	mov	eax, DWORD PTR _get$[ebp]
	push	0
	push	OFFSET $SG160336
	add	eax, 512				; 00000200H
	push	eax
	push	0
	push	esi
	call	DWORD PTR __imp__HttpOpenRequestW@32
	mov	edi, eax

; 172  :                         nullptr,
; 173  :                           get->wszHostPath,
; 174  :                             L"HTTP/1.1",
; 175  :                               nullptr,
; 176  :                                 rgpszAcceptTypes,
; 177  :                                                                     INTERNET_FLAG_IGNORE_CERT_DATE_INVALID |
; 178  :                                   INTERNET_FLAG_CACHE_IF_NET_FAIL | INTERNET_FLAG_IGNORE_CERT_CN_INVALID   |
; 179  :                                   INTERNET_FLAG_RESYNCHRONIZE     | INTERNET_FLAG_CACHE_ASYNC,
; 180  :                                     (DWORD_PTR)&dwInetCtx );
; 181  : 
; 182  : 
; 183  :   // Wait 2500 msecs for a dead connection, then give up
; 184  :   //
; 185  :   ULONG ulTimeout = 2500UL;

	mov	DWORD PTR _ulTimeout$[ebp], 2500	; 000009c4H

; 186  :   InternetSetOptionW ( hInetHTTPGetReq, INTERNET_OPTION_RECEIVE_TIMEOUT, &ulTimeout, sizeof ULONG );

	push	4
	lea	eax, DWORD PTR _ulTimeout$[ebp]
	push	eax
	push	6
	push	edi
	call	DWORD PTR __imp__InternetSetOptionW@16

; 187  : 
; 188  : 
; 189  :   if (! hInetHTTPGetReq)

	test	edi, edi
	jne	SHORT $LN8@DownloadTh

; 190  :   {
; 191  :     InternetCloseHandle (hInetHost);

	push	esi
	mov	esi, DWORD PTR __imp__InternetCloseHandle@4
	call	esi

; 192  :     InternetCloseHandle (hInetRoot);

	push	ebx
	call	esi
	jmp	SHORT $CLEANUP$56
$LN8@DownloadTh:

; 193  :     goto CLEANUP;
; 194  :   }
; 195  : 
; 196  :   if ( HttpSendRequestW ( hInetHTTPGetReq,

	push	0
	push	0
	push	0
	push	0
	push	edi
	call	DWORD PTR __imp__HttpSendRequestW@20
	test	eax, eax
	je	$LN10@DownloadTh

; 197  :                             nullptr,
; 198  :                               0,
; 199  :                                 nullptr,
; 200  :                                   0 ) )
; 201  :   {
; 202  : 
; 203  :     DWORD dwContentLength     = 0;
; 204  :     DWORD dwContentLength_Len = sizeof DWORD;
; 205  :     DWORD dwSize;
; 206  : 
; 207  :     HttpQueryInfo ( hInetHTTPGetReq,

	push	0
	lea	eax, DWORD PTR _dwContentLength_Len$2[ebp]
	mov	DWORD PTR _dwContentLength$5[ebp], 0
	push	eax
	lea	eax, DWORD PTR _dwContentLength$5[ebp]
	mov	DWORD PTR _dwContentLength_Len$2[ebp], 4
	push	eax
	push	536870917				; 20000005H
	push	edi
	call	DWORD PTR __imp__HttpQueryInfoW@20

; 208  :                       HTTP_QUERY_CONTENT_LENGTH | HTTP_QUERY_FLAG_NUMBER,
; 209  :                         &dwContentLength,
; 210  :                           &dwContentLength_Len,
; 211  :                             nullptr );
; 212  : 
; 213  :     SetProgress (0, dwContentLength);

	mov	eax, DWORD PTR _dwContentLength$5[ebp]
	lea	ecx, DWORD PTR _SetProgress$[ebp]
	sub	esp, 16					; 00000010H
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR [esp+8], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [esp], xmm0
	call	??R<lambda_05debe83df55819ff665e8879a07fda3>@@QBEXNN@Z ; <lambda_05debe83df55819ff665e8879a07fda3>::operator()

; 214  : 
; 215  :     DWORD dwTotalBytesDownloaded = 0UL;

	xor	esi, esi

; 216  : 
; 217  :     if ( InternetQueryDataAvailable ( hInetHTTPGetReq,

	lea	eax, DWORD PTR _dwSize$3[ebp]
	push	esi
	push	esi
	push	eax
	push	edi
	call	DWORD PTR __imp__InternetQueryDataAvailable@16
	test	eax, eax
	je	$LN17@DownloadTh

; 218  :                                         &dwSize,
; 219  :                                           0x00, NULL )
; 220  :       )
; 221  :     {
; 222  :       HANDLE hGetFile =
; 223  :         CreateFileW ( get->wszLocalPath,

	mov	eax, DWORD PTR _get$[ebp]
	push	esi
	push	134217856				; 08000080H
	push	2
	push	esi
	push	1
	push	1073741824				; 40000000H
	add	eax, 4608				; 00001200H
	push	eax
	call	DWORD PTR __imp__CreateFileW@28
	mov	DWORD PTR _hGetFile$1$[ebp], eax

; 224  :                         GENERIC_WRITE,
; 225  :                           FILE_SHARE_READ,
; 226  :                             nullptr,
; 227  :                               CREATE_ALWAYS,
; 228  :                                 FILE_ATTRIBUTE_NORMAL |
; 229  :                                 FILE_FLAG_SEQUENTIAL_SCAN,
; 230  :                                   nullptr );
; 231  : 
; 232  :       while (hGetFile != INVALID_HANDLE_VALUE && dwSize > 0)

	cmp	eax, -1
	je	$LN16@DownloadTh
	xor	ebx, ebx
	npad	5
$LL2@DownloadTh:
	mov	eax, DWORD PTR _dwSize$3[ebp]
	test	eax, eax
	je	$LN51@DownloadTh

; 233  :       {
; 234  :         DWORD  dwRead = 0;
; 235  :         auto  *pData  =
; 236  :           static_cast <uint8_t *> (malloc (dwSize));

	push	eax
	mov	DWORD PTR _dwRead$4[ebp], 0
	call	DWORD PTR __imp__malloc
	mov	esi, eax
	add	esp, 4

; 237  : 
; 238  :         if (! pData)

	test	esi, esi
	je	$LN51@DownloadTh

; 239  :           break;
; 240  : 
; 241  :         if ( InternetReadFile ( hInetHTTPGetReq,

	lea	eax, DWORD PTR _dwRead$4[ebp]
	push	eax
	push	DWORD PTR _dwSize$3[ebp]
	push	esi
	push	edi
	call	DWORD PTR __imp__InternetReadFile@16
	test	eax, eax
	je	SHORT $LN48@DownloadTh

; 242  :                                   pData,
; 243  :                                     dwSize,
; 244  :                                       &dwRead )
; 245  :           )
; 246  :         {
; 247  :           DWORD dwWritten;
; 248  : 
; 249  :           WriteFile ( hGetFile,

	push	0
	lea	eax, DWORD PTR _dwWritten$1[ebp]
	push	eax
	push	DWORD PTR _dwRead$4[ebp]
	push	esi
	push	DWORD PTR _hGetFile$1$[ebp]
	call	DWORD PTR __imp__WriteFile@20

; 250  :                         pData,
; 251  :                           dwRead,
; 252  :                             &dwWritten,
; 253  :                               nullptr );
; 254  : 
; 255  :           dwTotalBytesDownloaded += dwRead;
; 256  : 
; 257  :           SetProgress (dwTotalBytesDownloaded, dwContentLength);

	mov	eax, DWORD PTR _dwContentLength$5[ebp]
	add	ebx, DWORD PTR _dwRead$4[ebp]
	movd	xmm1, eax
	cvtdq2pd xmm1, xmm1
	shr	eax, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]

; 98   :         if (get->hTaskDlg != nullptr)

	mov	eax, DWORD PTR _TaskMsg$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+5128]
	test	ecx, ecx
	je	SHORT $LN48@DownloadTh

; 250  :                         pData,
; 251  :                           dwRead,
; 252  :                             &dwWritten,
; 253  :                               nullptr );
; 254  : 
; 255  :           dwTotalBytesDownloaded += dwRead;
; 256  : 
; 257  :           SetProgress (dwTotalBytesDownloaded, dwContentLength);

	maxsd	xmm1, QWORD PTR __real@3ff0000000000000
	movd	xmm0, ebx
	mov	eax, ebx
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH

; 99   :           return SendMessage ( get->hTaskDlg,

	push	0

; 250  :                         pData,
; 251  :                           dwRead,
; 252  :                             &dwWritten,
; 253  :                               nullptr );
; 254  : 
; 255  :           dwTotalBytesDownloaded += dwRead;
; 256  : 
; 257  :           SetProgress (dwTotalBytesDownloaded, dwContentLength);

	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]

; 109  :       TaskMsg ( TDM_SET_PROGRESS_BAR_POS,

	divsd	xmm0, xmm1
	mulsd	xmm0, QWORD PTR __real@40dfffc000000000
	cvttsd2si eax, xmm0
	cwde

; 99   :           return SendMessage ( get->hTaskDlg,

	push	eax
	push	1130					; 0000046aH
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN48@DownloadTh:

; 258  :         }
; 259  : 
; 260  :         free (pData);

	push	esi
	call	DWORD PTR __imp__free
	add	esp, 4

; 261  :         pData = nullptr;
; 262  : 
; 263  :         if (! InternetQueryDataAvailable ( hInetHTTPGetReq,

	lea	eax, DWORD PTR _dwSize$3[ebp]
	push	0
	push	0
	push	eax
	push	edi
	call	DWORD PTR __imp__InternetQueryDataAvailable@16
	test	eax, eax
	jne	$LL2@DownloadTh
$LN51@DownloadTh:

; 264  :                                              &dwSize,
; 265  :                                                0x00, NULL
; 266  :                                          )
; 267  :            ) break;
; 268  :       }
; 269  : 
; 270  :       if (hGetFile != INVALID_HANDLE_VALUE)
; 271  :         CloseHandle (hGetFile);

	push	DWORD PTR _hGetFile$1$[ebp]
	mov	DWORD PTR _dwTotalBytesDownloaded$1$[ebp], ebx
	call	DWORD PTR __imp__CloseHandle@4

; 272  : 
; 273  :       else

	mov	ebx, DWORD PTR _hInetRoot$1$[ebp]
	mov	esi, DWORD PTR _dwTotalBytesDownloaded$1$[ebp]
	jmp	SHORT $LN17@DownloadTh
$LN16@DownloadTh:

; 274  :         SetErrorState ();

	lea	ecx, DWORD PTR _SetErrorState$[ebp]
	call	??R<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QBEXXZ ; <lambda_5dd24a0d97655738306d6049fb2c96ad>::operator()
$LN17@DownloadTh:

; 275  :     }
; 276  : 
; 277  :     //HttpEndRequest ( hInetHTTPGetReq, nullptr, 0x00, 0 );
; 278  : 
; 279  :     if (dwTotalBytesDownloaded >= dwContentLength)

	cmp	esi, DWORD PTR _dwContentLength$5[ebp]
	jb	SHORT $LN10@DownloadTh

; 280  :       get->status = STATUS_UPDATED;

	mov	eax, DWORD PTR _get$[ebp]
	mov	DWORD PTR [eax+5132], 1

; 281  : 
; 282  :     else

	jmp	SHORT $LN11@DownloadTh
$LN10@DownloadTh:

; 283  :       SetErrorState ();
; 284  :   }
; 285  : 
; 286  :   else
; 287  :     SetErrorState ();

	lea	ecx, DWORD PTR _SetErrorState$[ebp]
	call	??R<lambda_5dd24a0d97655738306d6049fb2c96ad>@@QBEXXZ ; <lambda_5dd24a0d97655738306d6049fb2c96ad>::operator()
$LN11@DownloadTh:

; 288  : 
; 289  :   InternetCloseHandle (hInetHTTPGetReq);

	mov	esi, DWORD PTR __imp__InternetCloseHandle@4
	push	edi
	call	esi

; 290  :   InternetCloseHandle (hInetHost);

	push	DWORD PTR _hInetHost$1$[ebp]
	call	esi

; 291  :   InternetCloseHandle (hInetRoot);

	push	ebx
	call	esi
	jmp	$END$57
?DownloadThread@@YGKPAX@Z ENDP				; DownloadThread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
_TEXT	SEGMENT
_wszProduct$ = 8					; size = 4
?SK_UpdateSoftware@@YGJPB_W@Z PROC			; SK_UpdateSoftware

; 1357 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1358 :   HRESULT hr =SK_UpdateSoftware1 (wszProduct);

	push	0
	push	DWORD PTR _wszProduct$[ebp]
	call	?SK_UpdateSoftware1@@YGJPB_W_N@Z	; SK_UpdateSoftware1

; 1359 : 
; 1360 :   extern volatile LONG  SK_bypass_dialog_tid;
; 1361 :   InterlockedExchange (&SK_bypass_dialog_tid, 0);

	xor	ecx, ecx
	mov	edx, OFFSET ?SK_bypass_dialog_tid@@3JC	; SK_bypass_dialog_tid
	xchg	DWORD PTR [edx], ecx

; 1362 : 
; 1363 :   return hr;
; 1364 : }

	pop	ebp
	ret	4
?SK_UpdateSoftware@@YGJPB_W@Z ENDP			; SK_UpdateSoftware
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\update\network.cpp
_TEXT	SEGMENT
_wszFullDetails$ = -10436				; size = 8192
_wszUpdateFile$2 = -2244				; size = 520
_wszUpdateTempFile$3 = -1724				; size = 520
_wszCurrentBuild$ = -1204				; size = 256
_build$ = -948						; size = 520
_repo_ini$ = -428					; size = 68
_urlcomps$4 = -360					; size = 60
_install_ini$ = -300					; size = 68
_msg$5 = -232						; size = 28
$T6 = -228						; size = 24
_task_config$ = -204					; size = 96
_buttons$ = -104					; size = 24
$T7 = -80						; size = 24
$T8 = -80						; size = 24
$T9 = -56						; size = 4
_backup_pref$1$ = -52					; size = 4
_installed_ver$1$ = -48					; size = 4
$T10 = -44						; size = 24
$T11 = -44						; size = 24
$T12 = -44						; size = 24
$T13 = -44						; size = 24
_ParameterFactory$14 = -32				; size = 12
tv2157 = -20						; size = 4
$T15 = -16						; size = 4
$T16 = -16						; size = 4
_nButton$17 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
_keep_pref$1$ = 12					; size = 4
_archive$1$ = 12					; size = 4
$T18 = 12						; size = 4
_force$ = 12						; size = 1
?SK_UpdateSoftware1@@YGJPB_W_N@Z PROC			; SK_UpdateSoftware1

; 1020 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?SK_UpdateSoftware1@@YGJPB_W_N@Z
	push	eax
	mov	eax, 10424				; 000028b8H
	mov	DWORD PTR fs:0, esp
	call	__chkstk
	push	ebx
	push	esi
	push	edi

; 1021 : #define INJECTOR
; 1022 : #ifndef INJECTOR
; 1023 :   if ((! SK_IsInjected ()))
; 1024 :   {
; 1025 :     if (! lstrcmpW (wszProduct, L"SpecialK"))
; 1026 :     {
; 1027 :       return E_FAIL;
; 1028 :     }
; 1029 :   }
; 1030 : #endif
; 1031 : 
; 1032 :   TASKDIALOGCONFIG  task_config  = { };

	push	96					; 00000060H
	lea	eax, DWORD PTR _task_config$[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1033 : 
; 1034 :   task_config.cbSize             = sizeof          ( task_config );

	mov	DWORD PTR _task_config$[ebp], 96	; 00000060H

; 1035 :   task_config.hInstance          = GetModuleHandle (  nullptr    );

	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	mov	DWORD PTR _task_config$[ebp+8], eax

; 1036 :   task_config.hwndParent         = GetActiveWindow (             );

	call	DWORD PTR __imp__GetActiveWindow@0
	mov	DWORD PTR _task_config$[ebp+4], eax

; 1037 : 
; 1038 :   if (! SK_IsHostAppSKIM ())

	call	?SK_IsHostAppSKIM@@YA_NXZ		; SK_IsHostAppSKIM
	test	al, al

; 1039 :     task_config.pszWindowTitle   = L"Special K Auto-Update";
; 1040 :   else
; 1041 :     task_config.pszWindowTitle   = L"Special K Software Install";
; 1042 : 
; 1043 :   TASKDIALOG_BUTTON buttons [3];
; 1044 : 
; 1045 :   buttons [0].nButtonID     = IDYES;

	mov	DWORD PTR _buttons$[ebp], 6
	mov	edx, OFFSET $SG161863

; 1046 :   buttons [0].pszButtonText = L"Yes";

	mov	DWORD PTR _buttons$[ebp+4], OFFSET $SG161864
	mov	ecx, OFFSET $SG161862
	cmovne	ecx, edx
	mov	DWORD PTR _task_config$[ebp+20], ecx

; 1047 : 
; 1048 :   if (! SK_IsHostAppSKIM ())

	call	?SK_IsHostAppSKIM@@YA_NXZ		; SK_IsHostAppSKIM
	test	al, al
	jne	SHORT $LN8@SK_UpdateS

; 1049 :   {
; 1050 :     buttons [1].nButtonID     = 0;

	mov	DWORD PTR _buttons$[ebp+8], 0

; 1051 :     buttons [1].pszButtonText = L"Remind me later (or disable)";

	mov	DWORD PTR _buttons$[ebp+12], OFFSET $SG161867

; 1052 :   }
; 1053 : 
; 1054 :   else

	jmp	SHORT $LN9@SK_UpdateS
$LN8@SK_UpdateS:

; 1055 :   {
; 1056 :     buttons [1].nButtonID     = IDCANCEL;

	mov	DWORD PTR _buttons$[ebp+8], 2

; 1057 :     buttons [1].pszButtonText = L"No, I changed my mind...";

	mov	DWORD PTR _buttons$[ebp+12], OFFSET $SG161868
$LN9@SK_UpdateS:

; 1058 :   }
; 1059 : 
; 1060 : 
; 1061 :   task_config.pButtons           = buttons;

	lea	eax, DWORD PTR _buttons$[ebp]

; 1062 :   task_config.cButtons           = 2;

	mov	DWORD PTR _task_config$[ebp+36], 2
	mov	DWORD PTR _task_config$[ebp+40], eax

; 1063 :   task_config.dwCommonButtons    = 0x00;

	mov	DWORD PTR _task_config$[ebp+16], 0

; 1064 :   task_config.nDefaultButton     = IDYES;

	mov	DWORD PTR _task_config$[ebp+44], 6

; 1065 : 
; 1066 :   task_config.dwFlags            = TDF_ENABLE_HYPERLINKS | TDF_SHOW_PROGRESS_BAR   | TDF_SIZE_TO_CONTENT |

	mov	DWORD PTR _task_config$[ebp+12], 16784065 ; 01001ac1H

; 1067 :                                    TDF_CALLBACK_TIMER    | TDF_EXPANDED_BY_DEFAULT | TDF_EXPAND_FOOTER_AREA |
; 1068 :                                    TDF_POSITION_RELATIVE_TO_WINDOW;
; 1069 :   task_config.pfCallback         = DownloadDialogCallback;

	mov	DWORD PTR _task_config$[ebp+84], OFFSET ?DownloadDialogCallback@@YGJPAUHWND__@@IIJJ@Z ; DownloadDialogCallback

; 1070 : 
; 1071 :   if (! SK_IsHostAppSKIM ())

	call	?SK_IsHostAppSKIM@@YA_NXZ		; SK_IsHostAppSKIM

; 1072 :   {
; 1073 :     task_config.pszMainInstruction = L"Software Update Available for Download";
; 1074 :     task_config.pszMainIcon        = TD_INFORMATION_ICON;

	mov	DWORD PTR _task_config$[ebp+24], 65533	; 0000fffdH
	test	al, al
	jne	SHORT $LN10@SK_UpdateS

; 1075 : 
; 1076 :     task_config.pszContent         = L"Would you like to upgrade now?";

	mov	DWORD PTR _task_config$[ebp+28], OFFSET $SG161871
	mov	DWORD PTR _task_config$[ebp+32], OFFSET $SG161872

; 1077 :   }
; 1078 : 
; 1079 :   else

	jmp	SHORT $LN11@SK_UpdateS
$LN10@SK_UpdateS:

; 1080 :   {
; 1081 :     task_config.pszMainInstruction = L"Software Installation Ready to Download";

	mov	DWORD PTR _task_config$[ebp+28], OFFSET $SG161873

; 1082 :     task_config.pszMainIcon        = TD_INFORMATION_ICON;
; 1083 : 
; 1084 :     task_config.pszContent         = L"Would you like to begin installation now?";

	mov	DWORD PTR _task_config$[ebp+32], OFFSET $SG161874
$LN11@SK_UpdateS:

; 1087 :   iSK_INI install_ini (SK_Version_GetInstallIniPath ().c_str ());

	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	call	?SK_Version_GetInstallIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_Version_GetInstallIniPath
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1087 :   iSK_INI install_ini (SK_Version_GetInstallIniPath ().c_str ());

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN73@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN73@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1087 :   iSK_INI install_ini (SK_Version_GetInstallIniPath ().c_str ());

	push	eax
	lea	ecx, DWORD PTR _install_ini$[ebp]
	call	??0iSK_INI@@QAE@PB_W@Z			; iSK_INI::iSK_INI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T13[ebp+20]
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1087 :   iSK_INI install_ini (SK_Version_GetInstallIniPath ().c_str ());

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN82@SK_UpdateS

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;
; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));
; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T13[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN82@SK_UpdateS:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T13[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T13[ebp], ax
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1088 :   iSK_INI repo_ini    (SK_Version_GetRepoIniPath    ().c_str ());

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T13[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1088 :   iSK_INI repo_ini    (SK_Version_GetRepoIniPath    ().c_str ());

	call	?SK_Version_GetRepoIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_Version_GetRepoIniPath
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1088 :   iSK_INI repo_ini    (SK_Version_GetRepoIniPath    ().c_str ());

	mov	BYTE PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN122@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN122@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1088 :   iSK_INI repo_ini    (SK_Version_GetRepoIniPath    ().c_str ());

	push	eax
	lea	ecx, DWORD PTR _repo_ini$[ebp]
	call	??0iSK_INI@@QAE@PB_W@Z			; iSK_INI::iSK_INI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T8[ebp+20]
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1088 :   iSK_INI repo_ini    (SK_Version_GetRepoIniPath    ().c_str ());

	mov	BYTE PTR __$EHRec$[ebp+8], 5
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN131@SK_UpdateS

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;
; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));
; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T8[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN131@SK_UpdateS:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T8[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T8[ebp], ax
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1102 :   if (install_ini.get_sections ().empty ())

	lea	eax, DWORD PTR _install_ini$[ebp]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T8[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1102 :   if (install_ini.get_sections ().empty ())

	call	?get_sections@iSK_INI@@UAGABV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@XZ ; iSK_INI::get_sections

; 1103 :     empty = true;
; 1104 : 
; 1105 :   // Not exactly empty, but certainly not in a working state.
; 1106 :   if (! install_ini.contains_section (L"Version.Local"))

	push	OFFSET $SG161877
	cmp	DWORD PTR [eax+8], 0
	lea	eax, DWORD PTR _install_ini$[ebp]
	push	eax
	sete	bl
	call	?contains_section@iSK_INI@@UAG_NPB_W@Z	; iSK_INI::contains_section
	test	al, al
	movzx	ecx, bl
	mov	edx, 1

; 1107 :     empty = true;
; 1108 : 
; 1109 :   iSK_INISection& installed_ver =

	lea	eax, DWORD PTR _install_ini$[ebp]
	push	OFFSET $SG161878
	cmove	ecx, edx
	push	eax
	mov	DWORD PTR tv2157[ebp], ecx
	call	?get_section@iSK_INI@@UAGAAUiSK_INISection@@PB_W@Z ; iSK_INI::get_section

; 1110 :     install_ini.get_section (L"Version.Local");
; 1111 : 
; 1112 :   if (empty)

	cmp	BYTE PTR tv2157[ebp], 0
	mov	ebx, eax
	mov	DWORD PTR _installed_ver$1$[ebp], ebx
	je	SHORT $LN14@SK_UpdateS

; 1113 :   {
; 1114 :     installed_ver.set_name      (L"Version.Local");

	mov	ecx, DWORD PTR [ebx]
	push	OFFSET $SG161880
	push	ebx
	call	DWORD PTR [ecx+16]

; 1115 :     installed_ver.add_key_value (L"InstallPackage", L" ");

	mov	ecx, DWORD PTR [ebx]
	push	OFFSET $SG161881
	push	OFFSET $SG161882
	push	ebx
	call	DWORD PTR [ecx+24]

; 1116 :     installed_ver.add_key_value (L"Branch",         L"Latest");

	mov	eax, DWORD PTR [ebx]
	push	OFFSET $SG161883
	push	OFFSET $SG161884
	push	ebx
	call	DWORD PTR [eax+24]
$LN14@SK_UpdateS:

; 1117 :     // ^^^^ Add a key/value pair so that the section isn't purged on write
; 1118 :   }
; 1119 : 
; 1120 :   wchar_t wszCurrentBuild [128] = { };

	push	256					; 00000100H
	lea	eax, DWORD PTR _wszCurrentBuild$[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1121 : 
; 1122 :   if (empty)

	cmp	BYTE PTR tv2157[ebp], 0
	je	SHORT $LN15@SK_UpdateS

; 1123 :   {
; 1124 :     *wszCurrentBuild = L'\0';
; 1125 :     build.installed  = -1;
; 1126 :     wcscpy (build.branch, L"Latest");

	movq	xmm0, QWORD PTR $SG161887
	xor	eax, eax
	mov	WORD PTR _wszCurrentBuild$[ebp], ax
	mov	eax, DWORD PTR $SG161887+8
	mov	DWORD PTR _build$[ebp+12], eax
	mov	ax, WORD PTR $SG161887+12
	mov	DWORD PTR _build$[ebp], -1
	movq	QWORD PTR _build$[ebp+4], xmm0
	mov	WORD PTR _build$[ebp+16], ax

; 1127 :   }
; 1128 : 
; 1129 :   else

	jmp	SHORT $LN16@SK_UpdateS
$LN15@SK_UpdateS:

; 1131 :     swscanf ( installed_ver.get_value (L"InstallPackage").c_str (),

	mov	eax, DWORD PTR [ebx]
	push	OFFSET $SG161889
	push	ebx
	call	DWORD PTR [eax+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN186@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN186@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1131 :     swscanf ( installed_ver.get_value (L"InstallPackage").c_str (),

	lea	ecx, DWORD PTR _build$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _wszCurrentBuild$[ebp]
	push	ecx
	push	OFFSET $SG161888
	push	eax
	call	_swscanf

; 1135 :     wcscpy (build.branch, installed_ver.get_value (L"Branch").c_str ());

	mov	eax, DWORD PTR [ebx]
	add	esp, 16					; 00000010H
	push	OFFSET $SG161890
	push	ebx
	call	DWORD PTR [eax+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1834 : 		return (_Mypair._Get_second());

	mov	ecx, eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN205@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN205@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1135 :     wcscpy (build.branch, installed_ver.get_value (L"Branch").c_str ());

	lea	edx, DWORD PTR _build$[ebp+4]
	npad	7
$LL36@SK_UpdateS:
	movzx	eax, WORD PTR [ecx]
	lea	ecx, DWORD PTR [ecx+2]
	mov	WORD PTR [edx], ax
	lea	edx, DWORD PTR [edx+2]
	test	ax, ax
	jne	SHORT $LL36@SK_UpdateS
$LN16@SK_UpdateS:

; 1136 :   }
; 1137 : 
; 1138 :   // Set the reminder in case the update fails... we do not want
; 1139 :   //   the repository.ini file's updated timestamp to delay a second
; 1140 :   //     attempt by the user to upgrade.
; 1141 :   install_ini.import (L"[Update.User]\nReminder=0\n\n");

	push	OFFSET $SG161891
	lea	eax, DWORD PTR _install_ini$[ebp]
	push	eax
	call	?import@iSK_INI@@UAGXPB_W@Z		; iSK_INI::import

; 1142 :   install_ini.write  (SK_Version_GetInstallIniPath ().c_str ());

	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	call	?SK_Version_GetInstallIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_Version_GetInstallIniPath
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN224@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN224@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1142 :   install_ini.write  (SK_Version_GetInstallIniPath ().c_str ());

	push	eax
	lea	eax, DWORD PTR _install_ini$[ebp]
	push	eax
	call	?write@iSK_INI@@UAGXPB_W@Z		; iSK_INI::write
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T12[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN233@SK_UpdateS

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;
; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));
; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T12[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN233@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1144 :   iSK_INISection& latest_ver =

	lea	eax, DWORD PTR _build$[ebp+4]
	push	eax
	lea	eax, DWORD PTR _repo_ini$[ebp]
	push	OFFSET $SG161892
	push	eax
	call	?get_section_f@iSK_INI@@UAAAAUiSK_INISection@@QB_WZZ ; iSK_INI::get_section_f
	mov	edi, eax
	add	esp, 12					; 0000000cH

; 1148 :   swprintf ( wszFullDetails,

	mov	ecx, DWORD PTR [edi]
	push	OFFSET $SG161893
	push	edi
	call	DWORD PTR [ecx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1834 : 		return (_Mypair._Get_second());

	mov	DWORD PTR $T16[ebp], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN273@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T16[ebp], eax
$LN273@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1148 :   swprintf ( wszFullDetails,

	mov	eax, DWORD PTR [edi]
	push	OFFSET $SG161894
	push	edi
	call	DWORD PTR [eax+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1834 : 		return (_Mypair._Get_second());

	mov	esi, eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN292@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	esi, DWORD PTR [esi]
$LN292@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1148 :   swprintf ( wszFullDetails,

	mov	eax, DWORD PTR [edi]
	push	OFFSET $SG161895
	push	edi
	call	DWORD PTR [eax+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN311@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN311@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1148 :   swprintf ( wszFullDetails,

	push	DWORD PTR $T16[ebp]
	push	esi
	push	eax
	lea	eax, DWORD PTR _wszFullDetails$[ebp]
	push	OFFSET $SG161896
	push	eax
	call	?swprintf@@YAHQA_WQB_WZZ		; swprintf

; 1155 :   swscanf ( latest_ver.get_value (L"InstallPackage").c_str (),

	mov	eax, DWORD PTR [edi]
	add	esp, 20					; 00000014H
	push	OFFSET $SG161898
	push	edi
	call	DWORD PTR [eax+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN330@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN330@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1155 :   swscanf ( latest_ver.get_value (L"InstallPackage").c_str (),

	lea	ecx, DWORD PTR _build$[ebp+260]
	push	ecx
	lea	ecx, DWORD PTR _build$[ebp+264]
	push	ecx
	push	OFFSET $SG161897
	push	eax
	call	_swscanf

; 1160 :   wcscpy ( update_dlg_relnotes,

	mov	eax, DWORD PTR [edi]
	add	esp, 16					; 00000010H
	push	OFFSET $SG161899
	push	edi
	call	DWORD PTR [eax+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1834 : 		return (_Mypair._Get_second());

	mov	ecx, eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN349@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN349@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1160 :   wcscpy ( update_dlg_relnotes,

	mov	edx, OFFSET ?update_dlg_relnotes@@3PA_WA ; update_dlg_relnotes
	npad	6
$LL37@SK_UpdateS:
	movzx	eax, WORD PTR [ecx]
	lea	ecx, DWORD PTR [ecx+2]
	mov	WORD PTR [edx], ax
	lea	edx, DWORD PTR [edx+2]
	test	ax, ax
	jne	SHORT $LL37@SK_UpdateS

; 1161 :             latest_ver.get_value (L"ReleaseNotes").c_str () );
; 1162 : 
; 1163 :   if (build.latest.in_branch > build.installed || force)

	mov	eax, DWORD PTR _build$[ebp+260]
	cmp	eax, DWORD PTR _build$[ebp]
	jg	SHORT $LN18@SK_UpdateS
	cmp	BYTE PTR _force$[ebp], 0
	je	$LN20@SK_UpdateS
$LN18@SK_UpdateS:

; 1164 :   {
; 1165 :     iSK_INISection& archive =

	lea	eax, DWORD PTR _build$[ebp+264]
	push	eax
	lea	eax, DWORD PTR _repo_ini$[ebp]
	push	OFFSET $SG161902
	push	eax
	call	?get_section_f@iSK_INI@@UAAAAUiSK_INISection@@QB_WZZ ; iSK_INI::get_section_f

; 1166 :       repo_ini.get_section_f ( L"Archive.%s",
; 1167 :                                  build.latest.package );
; 1168 : 
; 1169 :     auto* get =
; 1170 :       new sk_internet_get_t { };

	push	5136					; 00001410H
	mov	DWORD PTR _archive$1$[ebp], eax
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	je	SHORT $LN38@SK_UpdateS
	push	512					; 00000200H
	xorps	xmm0, xmm0
	push	0
	push	esi
	movq	QWORD PTR [esi+5128], xmm0
	call	_memset
	push	4616					; 00001208H
	lea	eax, DWORD PTR [esi+512]
	push	0
	push	eax
	call	_memset
	add	esp, 24					; 00000018H
	jmp	SHORT $LN39@SK_UpdateS
$LN38@SK_UpdateS:
	xor	esi, esi
$LN39@SK_UpdateS:

; 1171 : 
; 1172 :     URL_COMPONENTSW    urlcomps;
; 1173 : 
; 1174 :     ZeroMemory (get,       sizeof *get);

	push	5136					; 00001410H
	push	0
	push	esi
	call	_memset

; 1175 :     ZeroMemory (&urlcomps, sizeof URL_COMPONENTSW);

	push	60					; 0000003cH
	lea	eax, DWORD PTR _urlcomps$4[ebp]
	push	0
	push	eax
	call	_memset

; 1185 :     if ( InternetCrackUrl (        archive.get_value (L"URL").c_str  (),

	mov	ecx, DWORD PTR _archive$1$[ebp]
	lea	eax, DWORD PTR [esi+512]
	add	esp, 24					; 00000018H
	mov	DWORD PTR _urlcomps$4[ebp], 60		; 0000003cH
	mov	DWORD PTR _urlcomps$4[ebp+16], esi
	mov	DWORD PTR _urlcomps$4[ebp+20], 256	; 00000100H
	mov	DWORD PTR _urlcomps$4[ebp+44], eax
	mov	DWORD PTR _urlcomps$4[ebp+48], 2048	; 00000800H
	mov	eax, DWORD PTR [ecx]
	push	OFFSET $SG161905
	push	ecx
	call	DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _archive$1$[ebp]
	push	OFFSET $SG161906
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3020 : 		return (this->_Mysize());

	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR $T15[ebp], eax
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1185 :     if ( InternetCrackUrl (        archive.get_value (L"URL").c_str  (),

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN380@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN380@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1185 :     if ( InternetCrackUrl (        archive.get_value (L"URL").c_str  (),

	lea	ecx, DWORD PTR _urlcomps$4[ebp]
	push	ecx
	push	0
	push	DWORD PTR $T15[ebp]
	push	eax
	call	DWORD PTR __imp__InternetCrackUrlW@16
	test	eax, eax
	je	$LN19@SK_UpdateS

; 1196 :       wcscpy (wszUpdateFile, SK_SYS_GetVersionPath ().c_str ());

	lea	eax, DWORD PTR $T11[ebp]
	mov	DWORD PTR _task_config$[ebp+88], esi
	push	eax
	call	?SK_SYS_GetVersionPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_SYS_GetVersionPath
	mov	ecx, eax
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN399@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN399@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1196 :       wcscpy (wszUpdateFile, SK_SYS_GetVersionPath ().c_str ());

	lea	edx, DWORD PTR _wszUpdateFile$2[ebp]
	npad	3
$LL40@SK_UpdateS:
	movzx	eax, WORD PTR [ecx]
	lea	ecx, DWORD PTR [ecx+2]
	lea	edx, DWORD PTR [edx+2]
	test	ax, ax
	jne	SHORT $LL40@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T11[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN408@SK_UpdateS

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;
; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));
; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T11[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN408@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1200 :       swprintf ( wszUpdateTempFile,

	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	?SK_SYS_GetVersionPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_SYS_GetVersionPath
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN448@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN448@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1200 :       swprintf ( wszUpdateTempFile,

	lea	ecx, DWORD PTR _build$[ebp+264]
	push	ecx
	push	eax
	lea	eax, DWORD PTR _wszUpdateTempFile$3[ebp]
	push	OFFSET $SG161907
	push	eax
	call	?swprintf@@YAHQA_WQB_WZZ		; swprintf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T10[ebp+20]
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1200 :       swprintf ( wszUpdateTempFile,

	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN457@SK_UpdateS

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;
; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));
; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T10[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN457@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1205 :       wcsncpy (get->wszLocalPath, wszUpdateTempFile, MAX_PATH - 1);

	push	259					; 00000103H
	lea	eax, DWORD PTR _wszUpdateTempFile$3[ebp]
	push	eax
	lea	eax, DWORD PTR [esi+4608]
	push	eax
	call	DWORD PTR __imp__wcsncpy

; 1206 : 
; 1207 :       task_config.pszExpandedInformation  = wszFullDetails;

	lea	eax, DWORD PTR _wszFullDetails$[ebp]

; 1208 : 
; 1209 :       task_config.pszExpandedControlText  = L"Hide Details";

	mov	DWORD PTR _task_config$[ebp+68], OFFSET $SG161908
	mov	DWORD PTR _task_config$[ebp+64], eax
	add	esp, 12					; 0000000cH

; 1210 :       task_config.pszCollapsedControlText = L"Show More Details";
; 1211 : 
; 1212 :       int nButton = 0;
; 1213 : 
; 1214 :       extern HWND SK_bypass_dialog_hwnd;
; 1215 :       while (SK_bypass_dialog_hwnd != nullptr && IsWindow (SK_bypass_dialog_hwnd))

	mov	eax, DWORD PTR ?SK_bypass_dialog_hwnd@@3PAUHWND__@@A ; SK_bypass_dialog_hwnd
	mov	DWORD PTR _task_config$[ebp+72], OFFSET $SG161909
	mov	DWORD PTR _nButton$17[ebp], 0
	test	eax, eax
	je	SHORT $LN580@SK_UpdateS
$LL2@SK_UpdateS:
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	test	eax, eax
	je	SHORT $LN580@SK_UpdateS

; 1216 :       {
; 1217 :         MSG  msg;
; 1218 :         BOOL bRet;
; 1219 : 
; 1220 :         if ((bRet = GetMessage (&msg, nullptr, 0, 0)) != 0)

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$5[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageW@16
	test	eax, eax
	je	SHORT $LN21@SK_UpdateS

; 1221 :         {
; 1222 :           if (bRet == -1)

	cmp	eax, -1
	je	SHORT $LN580@SK_UpdateS

; 1223 :             break;
; 1224 : 
; 1225 :           TranslateMessage (&msg);

	lea	eax, DWORD PTR _msg$5[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4

; 1226 :           DispatchMessage  (&msg);

	lea	eax, DWORD PTR _msg$5[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageW@4
$LN21@SK_UpdateS:

; 1210 :       task_config.pszCollapsedControlText = L"Show More Details";
; 1211 : 
; 1212 :       int nButton = 0;
; 1213 : 
; 1214 :       extern HWND SK_bypass_dialog_hwnd;
; 1215 :       while (SK_bypass_dialog_hwnd != nullptr && IsWindow (SK_bypass_dialog_hwnd))

	mov	eax, DWORD PTR ?SK_bypass_dialog_hwnd@@3PAUHWND__@@A ; SK_bypass_dialog_hwnd
	test	eax, eax
	jne	SHORT $LL2@SK_UpdateS
$LN580@SK_UpdateS:

; 1227 :         }
; 1228 :       }
; 1229 : 
; 1230 :       extern volatile LONG SK_bypass_dialog_tid;
; 1231 :       InterlockedExchange  (&SK_bypass_dialog_tid, GetCurrentThreadId ());

	call	DWORD PTR __imp__GetCurrentThreadId@0
	mov	ecx, OFFSET ?SK_bypass_dialog_tid@@3JC	; SK_bypass_dialog_tid
	xchg	DWORD PTR [ecx], eax

; 1232 :       InterlockedDecrement (&SK_bypass_dialog_active);

	lock	 dec	 DWORD PTR ?SK_bypass_dialog_active@@3JC

; 1233 : 
; 1234 :       if (SUCCEEDED (TaskDialogIndirect (&task_config, &nButton, nullptr, nullptr)))

	push	0
	push	0
	lea	eax, DWORD PTR _nButton$17[ebp]
	push	eax
	lea	eax, DWORD PTR _task_config$[ebp]
	push	eax
	call	DWORD PTR __imp__TaskDialogIndirect@16
	test	eax, eax
	js	$LN34@SK_UpdateS

; 1235 :       {
; 1236 :         if (get->status == STATUS_UPDATED)

	mov	eax, DWORD PTR [esi+5132]
	cmp	eax, 1
	jne	$LN24@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR _ParameterFactory$14[ebp], 0

; 477  : 		_Mylast(),

	mov	DWORD PTR _ParameterFactory$14[ebp+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR _ParameterFactory$14[ebp+8], 0
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1242 :               ParameterFactory.create_parameter <bool> (L"BackupFiles")

	push	0
	push	OFFSET ??_R0?AVParameterBool@sk@@@8
	push	OFFSET ??_R0?AViParameter@sk@@@8
	push	0
	push	OFFSET $SG161915
	lea	ecx, DWORD PTR _ParameterFactory$14[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	call	??$create_parameter@_N@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z ; sk::ParameterFactory::create_parameter<bool>
	push	eax
	call	___RTDynamicCast

; 1243 :             );
; 1244 : 
; 1245 :           backup_pref->register_to_ini (

	push	ecx
	mov	esi, eax
	mov	DWORD PTR $T18[ebp], esp
	mov	ecx, esp
	mov	DWORD PTR _backup_pref$1$[ebp], esi
	push	OFFSET $SG161916
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	sub	esp, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, esp
	push	OFFSET $SG161917
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	eax, DWORD PTR _install_ini$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	eax
	mov	ecx, esi
	call	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini

; 1246 :             &install_ini,
; 1247 :               L"Update.User",
; 1248 :                 L"BackupFiles" );
; 1249 : 
; 1250 :           auto* keep_pref =
; 1251 :             dynamic_cast <sk::ParameterBool *> (
; 1252 :               ParameterFactory.create_parameter <bool> (L"KeepDownloads")

	push	0
	push	OFFSET ??_R0?AVParameterBool@sk@@@8
	push	OFFSET ??_R0?AViParameter@sk@@@8
	push	0
	push	OFFSET $SG161918
	lea	ecx, DWORD PTR _ParameterFactory$14[ebp]
	call	??$create_parameter@_N@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z ; sk::ParameterFactory::create_parameter<bool>
	push	eax
	call	___RTDynamicCast

; 1253 :             );
; 1254 : 
; 1255 :           keep_pref->register_to_ini (

	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T9[ebp], esp
	push	OFFSET $SG161919
	mov	DWORD PTR _keep_pref$1$[ebp], eax
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	sub	esp, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, esp
	push	OFFSET $SG161920
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR _keep_pref$1$[ebp]
	lea	eax, DWORD PTR _install_ini$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	call	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini

; 1256 :             &install_ini,
; 1257 :               L"Update.User",
; 1258 :                 L"KeepDownloads" );
; 1259 : 
; 1260 :           if (! backup_pref->load (update_dlg_backup))

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	OFFSET ?update_dlg_backup@@3_NA		; update_dlg_backup
	mov	eax, DWORD PTR [eax+24]
	call	eax

; 1261 :             update_dlg_backup = false;
; 1262 : 
; 1263 :           if (! keep_pref->load (update_dlg_keep))

	mov	ecx, DWORD PTR _keep_pref$1$[ebp]
	neg	al
	push	OFFSET ?update_dlg_keep@@3_NA		; update_dlg_keep
	sbb	al, al
	and	BYTE PTR ?update_dlg_backup@@3_NA, al	; update_dlg_backup
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	call	eax
	movzx	ecx, BYTE PTR ?update_dlg_keep@@3_NA	; update_dlg_keep
	test	al, al
	mov	eax, 1
	cmove	ecx, eax

; 1264 :             update_dlg_keep = true;
; 1265 : 
; 1266 :           wcsncpy ( update_dlg_file,  wszUpdateTempFile, MAX_PATH - 1 );

	lea	eax, DWORD PTR _wszUpdateTempFile$3[ebp]
	push	259					; 00000103H
	push	eax
	push	OFFSET ?update_dlg_file@@3PA_WA		; update_dlg_file
	mov	BYTE PTR ?update_dlg_keep@@3_NA, cl	; update_dlg_keep
	call	DWORD PTR __imp__wcsncpy

; 1267 :           wcsncpy ( update_dlg_build, wszCurrentBuild,   127          );

	push	127					; 0000007fH
	lea	eax, DWORD PTR _wszCurrentBuild$[ebp]
	push	eax
	push	OFFSET ?update_dlg_build@@3PA_WA	; update_dlg_build
	call	DWORD PTR __imp__wcsncpy
	add	esp, 24					; 00000018H

; 1268 : 
; 1269 :           InterlockedExchangeAcquire ( &__SK_UpdateStatus, 0 );

	xor	eax, eax
	mov	ecx, OFFSET ?__SK_UpdateStatus@@3JC
	xchg	DWORD PTR [ecx], eax

; 1270 : 
; 1271 :           if (SK_IsInjected ())

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	je	SHORT $LN28@SK_UpdateS

; 1272 :           {
; 1273 :             SK_Inject_Stop ();

	call	?SK_Inject_Stop@@YAXXZ			; SK_Inject_Stop
$LN28@SK_UpdateS:

; 1274 :           }
; 1275 : 
; 1276 :           CreateThread ( nullptr,

	push	0
	push	0
	push	0
	push	OFFSET ?UpdateDlg_Thread@@YGKPAX@Z	; UpdateDlg_Thread
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24

; 1277 :                            0,
; 1278 :                              UpdateDlg_Thread,
; 1279 :                                nullptr,
; 1280 :                                  0x00,
; 1281 :                                    nullptr );
; 1282 : 
; 1283 :           LONG status = 0;
; 1284 : 
; 1285 :           while ( ( status =
; 1286 :                       InterlockedCompareExchange ( &__SK_UpdateStatus,
; 1287 :                                                      0,
; 1288 :                                                        0 )
; 1289 :                   ) == 0

	xor	ecx, ecx
	xor	eax, eax
	mov	edx, OFFSET ?__SK_UpdateStatus@@3JC
	lock	 cmpxchg DWORD PTR [edx], ecx
	test	eax, eax
	jne	SHORT $LN5@SK_UpdateS
	mov	esi, DWORD PTR __imp__SleepEx@8
	mov	ebx, edx
$LL4@SK_UpdateS:

; 1290 :                 )
; 1291 :             SleepEx (15, TRUE);

	push	1
	push	15					; 0000000fH
	call	esi
	xor	ecx, ecx
	xor	eax, eax
	lock	 cmpxchg DWORD PTR [ebx], ecx
	test	eax, eax
	je	SHORT $LL4@SK_UpdateS
	mov	ebx, DWORD PTR _installed_ver$1$[ebp]
	mov	edx, OFFSET ?__SK_UpdateStatus@@3JC
	mov	esi, DWORD PTR _backup_pref$1$[ebp]
$LN5@SK_UpdateS:

; 1292 : 
; 1293 :           if ( InterlockedCompareExchange ( &__SK_UpdateStatus, 0, 0 ) == 1 )

	xor	ecx, ecx
	xor	eax, eax
	lock	 cmpxchg DWORD PTR [edx], ecx
	cmp	eax, 1
	jne	$LN29@SK_UpdateS

; 1294 :           {
; 1295 :             if (empty)

	cmp	BYTE PTR tv2157[ebp], 0
	je	SHORT $LN31@SK_UpdateS

; 1296 :             {
; 1297 :               install_ini.import ( L"[Version.Local]\n"

	push	OFFSET $SG161927
	lea	eax, DWORD PTR _install_ini$[ebp]
	push	eax
	call	?import@iSK_INI@@UAGXPB_W@Z		; iSK_INI::import
$LN31@SK_UpdateS:

; 1298 :                                    L"Branch=Latest\n"
; 1299 :                                    L"InstallPackage= \n\n"
; 1300 : 
; 1301 :                                    L"[Update.User]\n"
; 1302 :                                    L"Frequency=6h\n"
; 1303 :                                    L"BackupFiles=false\n"
; 1304 :                                    L"KeepDownloads=true\n\n" );
; 1305 :             }
; 1306 : 
; 1307 :             keep_pref->store      (update_dlg_keep);

	mov	ecx, DWORD PTR _keep_pref$1$[ebp]
	movzx	eax, BYTE PTR ?update_dlg_keep@@3_NA	; update_dlg_keep
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+16]

; 1308 :             backup_pref->store    (update_dlg_backup);

	mov	edx, DWORD PTR [esi]
	mov	ecx, esi
	movzx	eax, BYTE PTR ?update_dlg_backup@@3_NA	; update_dlg_backup
	push	eax
	call	DWORD PTR [edx+16]

; 1309 : 
; 1310 :             installed_ver.get_value (L"InstallPackage") =

	mov	eax, DWORD PTR [edi]
	push	OFFSET $SG161929
	push	edi
	call	DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ebx]
	mov	esi, eax
	push	OFFSET $SG161928
	push	ebx
	call	DWORD PTR [ecx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2223 : 		if (this != _STD addressof(_Right))

	cmp	eax, esi
	je	SHORT $LN496@SK_UpdateS

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	esi
	mov	ecx, eax
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN496@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1314 :             install_ini.get_section (L"Update.User").remove_key (L"Reminder");

	push	OFFSET $SG161930
	lea	eax, DWORD PTR _install_ini$[ebp]
	push	eax
	call	?get_section@iSK_INI@@UAGAAUiSK_INISection@@PB_W@Z ; iSK_INI::get_section
	push	OFFSET $SG161931
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+28]

; 1315 :             install_ini.write       (SK_Version_GetInstallIniPath ().c_str ());

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?SK_Version_GetInstallIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_Version_GetInstallIniPath
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN551@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN551@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1315 :             install_ini.write       (SK_Version_GetInstallIniPath ().c_str ());

	push	eax
	lea	eax, DWORD PTR _install_ini$[ebp]
	push	eax
	call	?write@iSK_INI@@UAGXPB_W@Z		; iSK_INI::write
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 1316 : 
; 1317 :             if (SK_IsInjected ())

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	je	SHORT $LN32@SK_UpdateS

; 1318 :             {
; 1319 :               SK_Inject_Start ();

	call	?SK_Inject_Start@@YAXXZ			; SK_Inject_Start
$LN32@SK_UpdateS:

; 1320 :             }
; 1321 : 
; 1322 :             if (! SK_IsSuperSpecialK ())

	call	?SK_IsSuperSpecialK@@YA_NXZ		; SK_IsSuperSpecialK
	test	al, al
	jne	SHORT $LN33@SK_UpdateS

; 1323 :               SK_RestartGame ();

	push	0
	call	?SK_RestartGame@@YAXPB_W@Z		; SK_RestartGame
	add	esp, 4
$LN33@SK_UpdateS:

; 1324 : 
; 1325 :             return S_OK;
; 1326 :           }
; 1327 : 
; 1328 :           // Update Failed
; 1329 :           else {
; 1330 :             return E_FAIL;

	lea	ecx, DWORD PTR _ParameterFactory$14[ebp]
	xor	esi, esi
	call	??1ParameterFactory@sk@@QAE@XZ
	jmp	SHORT $LN58@SK_UpdateS
$LN29@SK_UpdateS:
	lea	ecx, DWORD PTR _ParameterFactory$14[ebp]
	mov	esi, -2147467259			; 80004005H
	call	??1ParameterFactory@sk@@QAE@XZ
	jmp	SHORT $LN58@SK_UpdateS
$LN24@SK_UpdateS:

; 1331 :           }
; 1332 :         }
; 1333 : 
; 1334 :         else if (get->status == STATUS_CANCELLED)

	cmp	eax, 4
	jne	SHORT $LN34@SK_UpdateS

; 1336 :           DeleteFileW (SK_Version_GetInstallIniPath ().c_str ());

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	?SK_Version_GetInstallIniPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_Version_GetInstallIniPath
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN570@SK_UpdateS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN570@SK_UpdateS:
; File c:\users\andon\source\repos\specialk\src\update\network.cpp

; 1336 :           DeleteFileW (SK_Version_GetInstallIniPath ().c_str ());

	push	eax
	call	DWORD PTR __imp__DeleteFileW@4
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	jmp	SHORT $LN594@SK_UpdateS
$LN34@SK_UpdateS:

; 1337 :           return E_FAIL;
; 1338 :         }
; 1339 :       }
; 1340 : 
; 1341 :       delete get;

	push	5136					; 00001410H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN20@SK_UpdateS:

; 1348 :     }
; 1349 :   }
; 1350 : 
; 1351 :   return S_FALSE;

	mov	esi, 1
	jmp	SHORT $LN58@SK_UpdateS
$LN19@SK_UpdateS:

; 1342 :     }
; 1343 : 
; 1344 :     else
; 1345 :     {
; 1346 :       delete get;

	push	5136					; 00001410H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN594@SK_UpdateS:

; 1347 :       return E_FAIL;

	mov	esi, -2147467259			; 80004005H
$LN58@SK_UpdateS:

; 1348 :     }
; 1349 :   }
; 1350 : 
; 1351 :   return S_FALSE;

	lea	ecx, DWORD PTR _repo_ini$[ebp]
	call	??1iSK_INI@@QAE@XZ			; iSK_INI::~iSK_INI
	lea	ecx, DWORD PTR _install_ini$[ebp]
	call	??1iSK_INI@@QAE@XZ			; iSK_INI::~iSK_INI

; 1352 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$0:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$1:
	lea	ecx, DWORD PTR _install_ini$[ebp]
	jmp	??1iSK_INI@@QAE@XZ			; iSK_INI::~iSK_INI
__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$2:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$3:
	lea	ecx, DWORD PTR _repo_ini$[ebp]
	jmp	??1iSK_INI@@QAE@XZ			; iSK_INI::~iSK_INI
__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$7:
	lea	ecx, DWORD PTR _ParameterFactory$14[ebp]
	jmp	??1ParameterFactory@sk@@QAE@XZ
__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$8:
	mov	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_UpdateSoftware1@@YGJPB_W_N@Z$10:
	mov	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?SK_UpdateSoftware1@@YGJPB_W_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?SK_UpdateSoftware1@@YGJPB_W_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_UpdateSoftware1@@YGJPB_W_N@Z ENDP			; SK_UpdateSoftware1
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ??_Gsk_file_entry_s@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gsk_file_entry_s@@QAEPAXI@Z PROC			; sk_file_entry_s::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+36]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN11@scalar
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+16]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN11@scalar:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+32], 0
	test	BYTE PTR ___flags$[ebp], 1

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+36], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+16], ax
	je	SHORT $LN37@scalar
	push	40					; 00000028H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN37@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gsk_file_entry_s@@QAEPAXI@Z ENDP			; sk_file_entry_s::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ??1sk_file_entry_s@@QAE@XZ
_TEXT	SEGMENT
??1sk_file_entry_s@@QAE@XZ PROC				; sk_file_entry_s::~sk_file_entry_s, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+36]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN7@sk_file_en
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+16]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN7@sk_file_en:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+32], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+36], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+16], ax
	pop	esi
	ret	0
??1sk_file_entry_s@@QAE@XZ ENDP				; sk_file_entry_s::~sk_file_entry_s
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??1ParameterFactory@sk@@QAE@XZ
_TEXT	SEGMENT
??1ParameterFactory@sk@@QAE@XZ PROC			; sk::ParameterFactory::~ParameterFactory, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN7@ParameterF

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN7@ParameterF:
	pop	esi
	ret	0
??1ParameterFactory@sk@@QAE@XZ ENDP			; sk::ParameterFactory::~ParameterFactory
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0ParameterFactory@sk@@QAE@XZ
_TEXT	SEGMENT
??0ParameterFactory@sk@@QAE@XZ PROC			; sk::ParameterFactory::ParameterFactory, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0
	ret	0
??0ParameterFactory@sk@@QAE@XZ ENDP			; sk::ParameterFactory::ParameterFactory
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Tidy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXXZ PROC ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Tidy, COMDAT
; _this$ = ecx

; 1946 : 		{	// free all storage

	npad	2
	push	esi
	mov	esi, ecx

; 1947 : 		this->_Orphan_all();
; 1948 : 
; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Tidy

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:
	pop	esi

; 1957 : 			}
; 1958 : 		}

	ret	0
?_Tidy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXXZ ENDP ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z PROC ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Destroy, COMDAT
; _this$ = ecx

; 1885 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1886 : 		}

	ret	8
?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z ENDP ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??1?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ PROC ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::~vector<sk::iParameter *,std::allocator<sk::iParameter *> >, COMDAT
; _this$ = ecx

; 891  : 		{	// destroy the object

	npad	2
	push	esi
	mov	esi, ecx

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN4@vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi

; 892  : 		_Tidy();
; 893  : 		}

	ret	0
??1?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ENDP ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::~vector<sk::iParameter *,std::allocator<sk::iParameter *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ PROC ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::vector<sk::iParameter *,std::allocator<sk::iParameter *> >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 723  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 723  : 		}

	ret	0
??0?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ENDP ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::vector<sk::iParameter *,std::allocator<sk::iParameter *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<sk::iParameter *> >::_Vector_val<std::_Simple_types<sk::iParameter *> >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 480  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<sk::iParameter *> >::_Vector_val<std::_Simple_types<sk::iParameter *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myend, COMDAT
; _this$ = ecx

; 671  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 672  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Mylast, COMDAT
; _this$ = ecx

; 661  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 662  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myfirst, COMDAT
; _this$ = ecx

; 651  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 652  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Get_data, COMDAT
; _this$ = ecx

; 641  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 642  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Getal, COMDAT
; _this$ = ecx

; 631  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 632  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 621  : 		_Get_data()._Orphan_all();
; 622  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 509  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 509  : 		}

	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAEXPAPAViParameter@sk@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAEXPAPAViParameter@sk@@I@Z PROC ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAEXPAPAViParameter@sk@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::_Wrap_alloc<std::allocator<sk::iParameter *> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::_Wrap_alloc<std::allocator<sk::iParameter *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAViParameter@sk@@@std@@QAEXPAPAViParameter@sk@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAViParameter@sk@@@std@@QAEXPAPAViParameter@sk@@I@Z PROC ; std::allocator<sk::iParameter *>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@PAViParameter@sk@@@std@@QAEXPAPAViParameter@sk@@I@Z ENDP ; std::allocator<sk::iParameter *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@PAViParameter@sk@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAViParameter@sk@@@std@@QAE@XZ PROC	; std::allocator<sk::iParameter *>::allocator<sk::iParameter *>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@PAViParameter@sk@@@std@@QAE@XZ ENDP	; std::allocator<sk::iParameter *>::allocator<sk::iParameter *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ??_GParameterStringW@sk@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GParameterStringW@sk@@QAEPAXI@Z PROC			; sk::ParameterStringW::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+80]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN14@scalar
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+60]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN14@scalar:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+76], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+80], 7
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+60], ax
	call	??1iParameter@sk@@QAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN40@scalar
	push	88					; 00000058H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN40@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GParameterStringW@sk@@QAEPAXI@Z ENDP			; sk::ParameterStringW::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ??1ParameterStringW@sk@@QAE@XZ
_TEXT	SEGMENT
??1ParameterStringW@sk@@QAE@XZ PROC			; sk::ParameterStringW::~ParameterStringW, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+80]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN10@ParameterS
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+60]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN10@ParameterS:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+76], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+80], 7
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+60], ax
	pop	esi
	jmp	??1iParameter@sk@@QAE@XZ
??1ParameterStringW@sk@@QAE@XZ ENDP			; sk::ParameterStringW::~ParameterStringW
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ??1?$Parameter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@sk@@QAE@XZ
_TEXT	SEGMENT
??1?$Parameter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@sk@@QAE@XZ PROC ; sk::Parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~Parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+80]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN7@Parameter
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+60]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN7@Parameter:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+76], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+80], 7
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+60], ax
	pop	esi
	jmp	??1iParameter@sk@@QAE@XZ
??1?$Parameter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@sk@@QAE@XZ ENDP ; sk::Parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~Parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GParameterInt64@sk@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GParameterInt64@sk@@QAEPAXI@Z PROC			; sk::ParameterInt64::`scalar deleting destructor', COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1iParameter@sk@@QAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN10@scalar
	push	80					; 00000050H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN10@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GParameterInt64@sk@@QAEPAXI@Z ENDP			; sk::ParameterInt64::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1ParameterInt64@sk@@QAE@XZ
_TEXT	SEGMENT
??1ParameterInt64@sk@@QAE@XZ PROC			; sk::ParameterInt64::~ParameterInt64, COMDAT
; _this$ = ecx
	jmp	??1iParameter@sk@@QAE@XZ
??1ParameterInt64@sk@@QAE@XZ ENDP			; sk::ParameterInt64::~ParameterInt64
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$Parameter@_J@sk@@QAE@XZ
_TEXT	SEGMENT
??1?$Parameter@_J@sk@@QAE@XZ PROC			; sk::Parameter<__int64>::~Parameter<__int64>, COMDAT
; _this$ = ecx
	jmp	??1iParameter@sk@@QAE@XZ
??1?$Parameter@_J@sk@@QAE@XZ ENDP			; sk::Parameter<__int64>::~Parameter<__int64>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ??1iParameter@sk@@QAE@XZ
_TEXT	SEGMENT
??1iParameter@sk@@QAE@XZ PROC				; sk::iParameter::~iParameter, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+56]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN7@iParameter
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+36]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN7@iParameter:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+52], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+56], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+36], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+32]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN37@iParameter
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+12]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN37@iParameter:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+28], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+32], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+12], ax
	pop	esi
	ret	0
??1iParameter@sk@@QAE@XZ ENDP				; sk::iParameter::~iParameter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h
;	COMDAT ?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
_section$ = 12						; size = 24
_key$ = 36						; size = 24
?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z PROC ; sk::iParameter::register_to_ini, COMDAT
; _this$ = ecx

; 67   :   {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, ecx

; 68   :     ini         = file;

	mov	eax, DWORD PTR _file$[ebp]

; 69   :     ini_section = section;

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2223 : 		if (this != _STD addressof(_Right))

	lea	eax, DWORD PTR _section$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h

; 67   :   {

	mov	DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2223 : 		if (this != _STD addressof(_Right))

	cmp	ecx, eax
	je	SHORT $LN6@register_t

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN6@register_t:
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h

; 70   :     ini_key     = key;

	lea	ecx, DWORD PTR [esi+36]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2223 : 		if (this != _STD addressof(_Right))

	lea	eax, DWORD PTR _key$[ebp]
	cmp	ecx, eax
	je	SHORT $LN48@register_t

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN48@register_t:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _section$[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN93@register_t
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR _section$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN93@register_t:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _section$[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR _section$[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _key$[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _section$[ebp+20], 7

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN123@register_t
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR _key$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN123@register_t:
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h

; 71   :   }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	52					; 00000034H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z$0:
	lea	ecx, DWORD PTR _key$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z$1:
	lea	ecx, DWORD PTR _section$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z:
	mov	eax, OFFSET __ehfuncinfo$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ENDP ; sk::iParameter::register_to_ini
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?empty@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@V?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@V?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@$0A@@std@@@std@@QBE_NXZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,iSK_INISection,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> >,0> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1277 : 		return (this->_Mysize() == 0);

	cmp	DWORD PTR [ecx+8], 0
	sete	al
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 398  : 		}

	ret	0
?empty@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@V?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@$0A@@std@@@std@@QBE_NXZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,iSK_INISection,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> >,0> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?empty@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@QBE_NXZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > >::empty, COMDAT
; _this$ = ecx

; 1276 : 		{	// test if sequence is empty

	cmp	DWORD PTR [ecx+4], 0
	sete	al

; 1277 : 		return (this->_Mysize() == 0);
; 1278 : 		}

	ret	0
?empty@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@QBE_NXZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > >::empty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,void *> > >,std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@@std@@QBEABIXZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > > >::_Mysize, COMDAT
; _this$ = ecx

; 813  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 814  : 		}

	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@@std@@QBEABIXZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > > >::_Get_data, COMDAT
; _this$ = ecx

; 793  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 794  : 		}

	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@2@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UiSK_INISection@@@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,iSK_INISection> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT

; 3646 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset, COMDAT
; _this$ = ecx

; 3629 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Off$[ebp]
	jb	SHORT $LN14@Check_offs

; 3633 : 			}
; 3634 : 		}

	pop	ebp
	ret	4
$LN14@Check_offs:

; 3631 : 			{
; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN16@Check_offs:
$LN13@Check_offs:
	int	3
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 3625 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3602 : 		}

	ret	0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx

; 3588 : 		{	// test if _Ptr points inside string

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@Inside
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN14@Inside
$LN13@Inside:
	mov	edx, ecx
$LN14@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	cmp	edx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	eax, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	al, 1

; 3592 : 		}

	pop	ebp
	ret	4
$LN3@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	xor	al, al

; 3592 : 		}

	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx

; 3572 : 		{	// ensure buffer is big enough

	npad	2
	push	ebp
	mov	ebp, esp

; 3573 : 		if (_Newsize == 0)

	mov	eax, DWORD PTR __Newsize$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Grow

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN16@Grow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN16@Grow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3576 : 			return (false);

	xor	al, al

; 3585 : 		}

	pop	ebp
	ret	4
$LN2@Grow:

; 3577 : 			}
; 3578 : 
; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [ecx+20], eax
	jae	SHORT $LN3@Grow

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	eax
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN3@Grow:

; 3582 : 			}
; 3583 : 
; 3584 : 		return (true);	// return true only if more work to do

	mov	al, 1

; 3585 : 		}

	pop	ebp
	ret	4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx

; 3566 : 		{	// set new length and null terminator

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3567 : 		auto& _My_data = this->_Get_data();
; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Eos
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
$LN11@Eos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx+edx*2], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Oldres$ = -28						; size = 4
_this$ = -24						; size = 4
__Ptr$1$ = -20						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newres$ = 8						; size = 4
__Newsize$ = 8						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx

; 3514 : 		{	// reallocate to new buffer of at least _Newsize, copying existing elements there

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 3515 : 		const auto _Max = max_size();
; 3516 : 		if (_Newsize > _Max)

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	eax, 2147483646				; 7ffffffeH
	jbe	SHORT $LN2@Copy

; 3517 : 			{	// too long
; 3518 : 			_Xlen();

	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN102@Copy:
$LN2@Copy:

; 3519 : 			}
; 3520 : 
; 3521 : 		auto& _My_data = this->_Get_data();
; 3522 : 		const size_type _Oldres = _My_data._Myres;

	mov	ebx, DWORD PTR [esi+20]

; 3523 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	edi, eax
	or	edi, 7
	mov	DWORD PTR __Oldres$[ebp], ebx

; 3524 : 		if (_Max < _Newres)

	cmp	edi, 2147483646				; 7ffffffeH
	jbe	SHORT $LN3@Copy

; 3525 : 			{
; 3526 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	edi, eax
	jmp	SHORT $LN8@Copy
$LN3@Copy:

; 3527 : 			}
; 3528 : 		else if (_Oldres / 2 <= _Newres / 3)

	mov	eax, -1431655765			; aaaaaaabH
	mov	ecx, ebx
	mul	edi
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN8@Copy

; 3529 : 			;
; 3530 : 		else if (_Oldres <= _Max - _Oldres / 2)

	mov	eax, 2147483646				; 7ffffffeH

; 3531 : 			{
; 3532 : 			_Newres = _Oldres + _Oldres / 2;	// grow exponentially if possible

	lea	edi, DWORD PTR [ecx+ebx]
	sub	eax, ecx
	cmp	ebx, eax
	jbe	SHORT $LN8@Copy

; 3533 : 			}
; 3534 : 		else
; 3535 : 			{
; 3536 : 			_Newres = _Max;	// settle for max_size()

	mov	edi, 2147483646				; 7ffffffeH
$LN8@Copy:

; 3537 : 			}
; 3538 : 
; 3539 : 		auto& _Al = this->_Getal();
; 3540 : 		pointer _Ptr;
; 3541 : 		_TRY_BEGIN
; 3542 : 			_Ptr = _Al.allocate(_Newres + 1);

	lea	eax, DWORD PTR [edi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	mov	ecx, esi
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
	jmp	SHORT $LN100@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0:

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	mov	ecx, DWORD PTR _this$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	DWORD PTR __Newres$[ebp], eax

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	mov	DWORD PTR __Ptr$[ebp], eax

; 3546 : 		_CATCH_END

	mov	eax, $LN97@Copy
	ret	0
$LN97@Copy:
	mov	esi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR __Oldres$[ebp]
	mov	edi, DWORD PTR __Newres$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN100@Copy:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3546 : 		_CATCH_END

	mov	DWORD PTR __Ptr$1$[ebp], ecx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [eax*2+2]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3550 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN10@Copy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	DWORD PTR [esi]
	push	ecx
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3553 : 			_Al.deallocate(_My_data._Bx._Ptr, _Oldres + 1);

	lea	eax, DWORD PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3556 : 		else

	jmp	SHORT $LN101@Copy
$LN10@Copy:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	esi
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN101@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3563 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3562 : 		_My_data._Myres = _Newres;

	mov	DWORD PTR [esi+20], edi

; 3563 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN99@Copy:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 3410 : 		{	// trims _Size to the longest it can be assuming a string at/after _Off

	npad	2
	push	ebp
	mov	ebp, esp

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	mov	ecx, DWORD PTR [ecx+16]
	sub	ecx, DWORD PTR __Off$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	ecx, eax
	cmovb	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3412 : 		}

	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 3030 : 		const size_type _Num = this->_Getal().max_size();
; 3031 : 		return (_Num <= 1 ? 1 : _Num - 1);

	mov	eax, 2147483646				; 7ffffffeH

; 3032 : 		}

	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length, COMDAT
; _this$ = ecx

; 3020 : 		return (this->_Mysize());

	mov	eax, DWORD PTR [ecx+16]

; 3021 : 		}

	ret	0
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@c_str

; 3003 : 		return (this->_Myptr());

	mov	eax, DWORD PTR [ecx]

; 3004 : 		}

	ret	0
$LN13@c_str:

; 3003 : 		return (this->_Myptr());

	mov	eax, ecx

; 3004 : 		}

	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	push	ebx
	push	esi

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	mov	esi, ecx
	push	edi

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edi, DWORD PTR [esi+16]
	cmp	edi, edx
	jb	$LN97@erase

; 2593 : 		_Check_offset(_Off);
; 2594 : 		if (this->_Mysize() - _Off <= _Count)

	mov	ebx, DWORD PTR __Count$[ebp]
	mov	eax, edi
	sub	eax, edx
	cmp	eax, ebx
	ja	SHORT $LN2@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN38@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN38@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2607 : 		}

	pop	ebp
	ret	8
$LN2@erase:

; 2595 : 			{
; 2596 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 2597 : 			}
; 2598 : 		else if (_Count != 0)

	test	ebx, ebx
	je	SHORT $LN94@erase

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN57@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN58@erase
$LN57@erase:
	mov	eax, esi
$LN58@erase:

; 2599 : 			{	// move elements down
; 2600 : 			value_type *_Ptr = this->_Myptr() + _Off;

	lea	ecx, DWORD PTR [eax+edx*2]

; 2601 : 			size_type _Newsize = this->_Mysize() - _Count;

	sub	edi, ebx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, edi
	sub	eax, edx
	add	eax, eax
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2602 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	lea	eax, DWORD PTR [ecx+ebx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN87@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN87@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
$LN94@erase:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN97@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN99@erase:
$LN96@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2585 : 		{	// erase elements [_Off, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR __Off$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jb	SHORT $LN36@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN26@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN26@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	edx, ecx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN36@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN38@erase:
$LN35@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2428 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2428 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL6@assign:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL6@assign
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2430 : 		}

	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2412 : 		{	// assign [_Ptr, _Ptr + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN17@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN18@assign
$LN17@assign:
	mov	edx, esi
$LN18@assign:

; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	mov	edi, DWORD PTR __Ptr$[ebp]
	cmp	edx, edi
	ja	SHORT $LN2@assign
	mov	eax, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	edi, eax
	jae	SHORT $LN2@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN33@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN34@assign
$LN33@assign:
	mov	eax, esi
$LN34@assign:

; 2413 : 		if (_Inside(_Ptr))
; 2414 : 			{
; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]
	sub	edi, eax
	mov	ecx, esi
	sar	edi, 1
	push	edi
	push	esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN2@assign:
	push	ebx

; 3573 : 		if (_Newsize == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	jne	SHORT $LN40@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN53@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN53@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	pop	esi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
$LN40@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	ecx, ebx
	jae	SHORT $LN41@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	ebx
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN41@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN81@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN82@assign
$LN81@assign:
	mov	eax, esi
$LN82@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	ecx, DWORD PTR [ebx+ebx]
	push	ecx
	push	edi
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN102@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN102@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
	pop	ebx
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	mov	esi, ecx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR __Roff$[ebp]
	push	edi
	mov	eax, DWORD PTR [ebx+16]
	cmp	eax, ecx
	jb	$LN161@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	cmp	eax, edi
	cmovb	edi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2382 : 		if (this == _STD addressof(_Right))

	cmp	esi, ebx
	jne	SHORT $LN2@assign

; 2383 : 			{	// substring
; 2384 : 			erase(_Roff + _Count);

	lea	eax, DWORD PTR [ecx+edi]

; 3630 : 		if (this->_Mysize() < _Off)

	cmp	DWORD PTR [esi+16], eax
	jb	$LN163@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN62@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN63@assign
$LN62@assign:
	mov	edx, esi
$LN63@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	push	ecx
	push	edi
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx+eax*2], di
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	pop	edi

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@assign:

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN72@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN85@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN85@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN72@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], edi
	jae	SHORT $LN73@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	mov	ecx, DWORD PTR __Roff$[ebp]
$LN73@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN113@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN113@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN129@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN130@assign
$LN129@assign:
	mov	edx, esi
$LN130@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [edi+edi]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2389 : 			_Traits::copy(this->_Myptr(), _Right._Myptr() + _Roff, _Count);

	lea	eax, DWORD PTR [ebx+ecx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN150@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN150@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN161@assign:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN164@assign:
$LN163@assign:
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN165@assign:
$LN160@assign:
	int	3
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 2222 : 		{	// assign _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2223 : 		if (this != _STD addressof(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	esi
	mov	esi, ecx
	cmp	esi, eax
	je	SHORT $LN43@operator

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN43@operator:

; 2224 : 			{	// different, assign it
; 2225 : #pragma warning(push)
; 2226 : #pragma warning(disable: 4127)	// conditional expression is constant
; 2227 : 			if (_Alty::propagate_on_container_copy_assignment::value
; 2228 : 				&& this->_Getal() != _Right._Getal())
; 2229 : 				{	// change allocator before copying
; 2230 : 				_Tidy_deallocate();
; 2231 : 				}
; 2232 : #pragma warning(pop)
; 2233 : 
; 2234 : 			this->_Copy_alloc(_Right._Getal());
; 2235 : 
; 2236 : 			_Assign_lv_contents(_Right);
; 2237 : 			}
; 2238 : 
; 2239 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2240 : 		}

	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents, COMDAT
; _this$ = ecx

; 2172 : 		{	// assign by copying the data stored in _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2173 : 			// pre: *this is in a valid but unspecified state
; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	DWORD PTR __Right$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2175 : 		}

	pop	ebp
	ret	4
?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1980 : 		{	// construct from [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]

; 326  : 		_Left = _Right;

	xor	eax, eax
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1980 : 		{	// construct from [_Ptr, <null>)

	mov	esi, ecx
	push	edi

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, edx
	lea	edi, DWORD PTR [eax+2]
$LL25@basic_stri:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL25@basic_stri
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi

; 1981 : 		_Tidy_init();
; 1982 : 		assign(_Ptr);
; 1983 : 		}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT
; _this$ = ecx

; 1849 : 		return (_Get_data()._Myres);

	lea	eax, DWORD PTR [ecx+20]

; 1850 : 		}

	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1844 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1845 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1839 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1840 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1834 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1835 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1824 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1825 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc, COMDAT
; _this$ = ecx

; 1709 : 		_Pocca(_Getal(), _Al);
; 1710 : 		}

	ret	4
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1697 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1697 : 		}

	ret	0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1691 : 		}

	ret	0
$LN11@Myptr:

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1691 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1686 : 		}

	ret	0
$LN11@Myptr:

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1686 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 1634 : 			{	// user-provided, for fancy pointers
; 1635 : 			}

	mov	eax, ecx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 8
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
$LN3@Myptr:

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
$LN3@Myptr:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1598 : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+20], 0
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 2147483647				; 7fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 2147483647				; 7fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 2147483647				; 7fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	add	eax, eax

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 96   : 	{	// deallocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 97   :  #if defined(_M_IX86) || defined(_M_X64)
; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	mov	ecx, DWORD PTR __Count$[ebp]
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	ecx, eax
	jbe	SHORT $LN2@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 99   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	al, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jb	SHORT $LN5@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jae	SHORT $LN6@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN9@Deallocate:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN3@Deallocate:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 	}

	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 50   : 	{	// allocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 51   : 	void *_Ptr = 0;
; 52   : 
; 53   : 	if (_Count == 0)

	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate

; 54   : 		return (_Ptr);

	xor	eax, eax
$LN1@Allocate:

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN2@Allocate:

; 55   : 
; 56   : 	// check overflow of multiply
; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN3@Allocate

; 58   : 		_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	BYTE PTR __Try_aligned_allocation$[ebp], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	eax, DWORD PTR [ecx+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	eax, ecx
	ja	SHORT $LN6@Allocate

; 69   : 			_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN7@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN4@Allocate:

; 76   : 
; 77   :  #ifdef _DEBUG
; 78   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 79   :  #endif /* _DEBUG */
; 80   : 		}
; 81   : 	else
; 82   :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 83   : 	static_cast<void>(_Try_aligned_allocation);
; 84   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 85   : 
; 86   : 		{	// allocate normal block
; 87   : 		_Ptr = ::operator new(_User_size);

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN1@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 75   : 		}

	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 64   : 		}

	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 325  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 326  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cx, WORD PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	WORD PTR [eax], cx

; 327  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 314  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	mov	DWORD PTR __Count$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 316  : 		}

	pop	ebp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 294  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	push	eax
	push	DWORD PTR __First2$[ebp]
	push	DWORD PTR __First1$[ebp]
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 296  : 		}

	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?length@?$char_traits@_W@std@@SAIQB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIQB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 288  : 		{	// find length of null-terminated sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+2]
	npad	5
$LL3@length:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL3@length
	sub	eax, edx
	sar	eax, 1

; 290  : 		}

	pop	ebp
	ret	0
?length@?$char_traits@_W@std@@SAIQB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 91   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 94   :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT

; 244  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 248  :         #pragma warning(pop)
; 249  :     }

	pop	ebp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 231  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 235  :         #pragma warning(pop)
; 236  :     }

	pop	ebp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	jmp	_memcpy
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<wchar_t const * const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

	ret	0
??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<wchar_t const * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_wstdio.h
;	COMDAT ?swprintf@@YAHQA_WQB_WZZ
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
?swprintf@@YAHQA_WQB_WZZ PROC				; swprintf, COMDAT

; 1824 :         {

	npad	2
	push	ebp
	mov	ebp, esp

; 1825 :             int _Result;
; 1826 :             va_list _ArgList;
; 1827 :             __crt_va_start(_ArgList, _Format);
; 1828 :             #pragma warning(suppress: 28719)
; 1829 :             _Result = vswprintf(_Buffer, _CRT_INT_MAX, _Format, _ArgList);       

	lea	eax, DWORD PTR __Format$[ebp+4]
	push	eax
	push	DWORD PTR __Format$[ebp]
	push	2147483647				; 7fffffffH
	push	DWORD PTR __Buffer$[ebp]
	call	_vswprintf
	add	esp, 16					; 00000010H

; 1830 :             __crt_va_end(_ArgList);
; 1831 :             return _Result;
; 1832 :         }

	pop	ebp
	ret	0
?swprintf@@YAHQA_WQB_WZZ ENDP				; swprintf
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___n$[ebp]
	test	esi, esi
	je	SHORT $LN6@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	edi
	mov	edi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, edi
	call	ebx
	add	edi, DWORD PTR ___s$[ebp]
	sub	esi, 1
	jne	SHORT $LL2@vector
	pop	edi
	pop	ebx
$LN6@vector:
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
