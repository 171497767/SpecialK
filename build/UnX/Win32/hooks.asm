; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\hooks.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG115875 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H, ' ', 00H
	DB	'[', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H, '0', 00H, '4', 00H
	DB	'p', 00H, 'h', 00H, ']', 00H, '!', 00H, ' ', 00H, ' ', 00H, '('
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H
	DB	':', 00H, ' ', 00H, '"', 00H, '%', 00H, 'h', 00H, 's', 00H, '"'
	DB	00H, ')', 00H, 00H, 00H
$SG115879 DB	'[', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'E', 00H
	DB	'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'e', 00H, ']', 00H, ' '
	DB	00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'r', 00H, 'r'
	DB	00H, 'u', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, ' ', 00H, 's', 00H, 'o', 00H, 'f'
	DB	00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'i', 00H, 's', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'b'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 'g', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't', 00H, 'o'
	DB	00H, ' ', 00H, 'e', 00H, 'x', 00H, 'p', 00H, 'l', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '!', 00H, 00H, 00H
$SG115880 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'i'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H
	DB	'''', 00H, ' ', 00H, '[', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'0', 00H, '4', 00H, 'p', 00H, 'h', 00H, ']', 00H, '!', 00H, ' '
	DB	00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%', 00H, 'h'
	DB	00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG115891 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, '(', 00H, 'i', 00H, 'd'
	DB	00H, 'x', 00H, '=', 00H, '%', 00H, 'l', 00H, 'u', 00H, ')', 00H
	DB	' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '''', 00H, '%'
	DB	00H, 's', 00H, '''', 00H, ' ', 00H, '[', 00H, 'A', 00H, 'd', 00H
	DB	'd', 00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, '0', 00H, '4', 00H, 'p', 00H, 'h', 00H, ']', 00H
	DB	'!', 00H, ' ', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H
	DB	'%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG115895 DB	'[', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'E', 00H
	DB	'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'e', 00H, ']', 00H, ' '
	DB	00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'r', 00H, 'r'
	DB	00H, 'u', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, ' ', 00H, 's', 00H, 'o', 00H, 'f'
	DB	00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'i', 00H, 's', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'b'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 'g', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't', 00H, 'o'
	DB	00H, ' ', 00H, 'e', 00H, 'x', 00H, 'p', 00H, 'l', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '!', 00H, 00H, 00H
$SG115896 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'i'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H
	DB	'''', 00H, ' ', 00H, '[', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'0', 00H, '4', 00H, 'p', 00H, 'h', 00H, ']', 00H, '!', 00H, ' '
	DB	00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%', 00H, 'h'
	DB	00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
$SG115918 DB	'Ordinal', 00H
	ORG $+4
$SG115919 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'W', 00H, 'A', 00H, 'R', 00H, 'N', 00H, 'I', 00H, 'N', 00H
	DB	'G', 00H, ':', 00H, ' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k'
	DB	00H, ' ', 00H, 'A', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, 'y', 00H, ' ', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	':', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H, 's', 00H, ''''
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '''', 00H, '%', 00H
	DB	's', 00H, '''', 00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H
	DB	'"', 00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H
	DB	00H
	ORG $+4
$SG115922 DB	'[', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'E', 00H
	DB	'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'e', 00H, ']', 00H, ' '
	DB	00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'r', 00H, 'r'
	DB	00H, 'u', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H, 's', 00H
	DB	'''', 00H, '.', 00H, '.', 00H, '.', 00H, ' ', 00H, 's', 00H, 'o'
	DB	00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o'
	DB	00H, 'b', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'y', 00H, ' ', 00H
	DB	'g', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'd', 00H, 'e', 00H, '!', 00H, 00H, 00H
	ORG $+6
$SG115923 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'i'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, '''', 00H, ' ', 00H, '[', 00H, 'A', 00H, 'd', 00H, 'd'
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ':', 00H, ' ', 00H
	DB	'%', 00H, '0', 00H, '4', 00H, 'p', 00H, 'h', 00H, ']', 00H, '!'
	DB	00H, ' ', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%'
	DB	00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG115924 DB	'Ordinal', 00H
$SG115925 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ':', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H, 's', 00H
	DB	'''', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '''', 00H, '%'
	DB	00H, 's', 00H, '''', 00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' '
	DB	00H, '"', 00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H
	DB	00H, 00H
$SG115950 DB	'Ordinal', 00H
$SG115951 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'W', 00H, 'A', 00H, 'R', 00H, 'N', 00H, 'I', 00H, 'N', 00H
	DB	'G', 00H, ':', 00H, ' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k'
	DB	00H, ' ', 00H, 'A', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, 'y', 00H, ' ', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	':', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H, 's', 00H, ''''
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '''', 00H, '%', 00H
	DB	's', 00H, '''', 00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H
	DB	'"', 00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H
	DB	00H
	ORG $+4
$SG115954 DB	'[', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'E', 00H
	DB	'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'e', 00H, ']', 00H, ' '
	DB	00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'r', 00H, 'r'
	DB	00H, 'u', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H, 's', 00H
	DB	'''', 00H, '.', 00H, '.', 00H, '.', 00H, ' ', 00H, 's', 00H, 'o'
	DB	00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o'
	DB	00H, 'b', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'y', 00H, ' ', 00H
	DB	'g', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'd', 00H, 'e', 00H, '!', 00H, 00H, 00H
	ORG $+6
$SG115955 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'i'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, '''', 00H, ' ', 00H, '[', 00H, 'A', 00H, 'd', 00H, 'd'
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ':', 00H, ' ', 00H
	DB	'%', 00H, '0', 00H, '4', 00H, 'p', 00H, 'h', 00H, ']', 00H, '!'
	DB	00H, ' ', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%'
	DB	00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG115956 DB	'Ordinal', 00H
$SG115957 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ':', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H, 's', 00H
	DB	'''', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '''', 00H, '%'
	DB	00H, 's', 00H, '''', 00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' '
	DB	00H, '"', 00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H
	DB	00H, 00H
$SG115982 DB	'Ordinal', 00H
$SG115983 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'W', 00H, 'A', 00H, 'R', 00H, 'N', 00H, 'I', 00H, 'N', 00H
	DB	'G', 00H, ':', 00H, ' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k'
	DB	00H, ' ', 00H, 'A', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, 'y', 00H, ' ', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	':', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H, 's', 00H, ''''
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '''', 00H, '%', 00H
	DB	's', 00H, '''', 00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H
	DB	'"', 00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H
	DB	00H
$SG115984 DB	'Ordinal', 00H
	ORG $+4
$SG115985 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ':', 00H, ' ', 00H, '''', 00H, '%', 00H, 'h', 00H, 's', 00H
	DB	'''', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '''', 00H, '%'
	DB	00H, 's', 00H, '''', 00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' '
	DB	00H, '"', 00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H
	DB	00H, 00H
$SG115997 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H, ' ', 00H
	DB	'[', 00H, 'V', 00H, 'F', 00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ':', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H, ']'
	DB	00H, '!', 00H, ' ', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"'
	DB	00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
$SG116018 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H, ' ', 00H
	DB	'[', 00H, 'V', 00H, 'F', 00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ':', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H, ']'
	DB	00H, '!', 00H, ' ', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"'
	DB	00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
$SG116024 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'e', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 's', 00H, '!', 00H
	DB	' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u'
	DB	00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG116032 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 't', 00H, 'h'
	DB	00H, ' ', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H, 'p', 00H, 'h'
	DB	00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%'
	DB	00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG116033 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'A', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 's'
	DB	00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%'
	DB	00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG116042 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, ' ', 00H, '(', 00H, 'I', 00H, 'd', 00H, 'x'
	DB	00H, '=', 00H, '%', 00H, 'l', 00H, 'u', 00H, ')', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 't', 00H, 'h', 00H, ' ', 00H, 'A', 00H, 'd'
	DB	00H, 'd', 00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ':', 00H
	DB	' ', 00H, '%', 00H, '0', 00H, '4', 00H, 'p', 00H, 'h', 00H, '!'
	DB	00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%', 00H, 'h'
	DB	00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG116043 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'A', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, '(', 00H, 'I', 00H, 'd', 00H, 'x', 00H, '='
	DB	00H, '%', 00H, 'l', 00H, 'u', 00H, ')', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, 's', 00H, '!', 00H, ' ', 00H, '('
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H
	DB	':', 00H, ' ', 00H, '"', 00H, '%', 00H, 'h', 00H, 's', 00H, '"'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG116051 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 's'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'H', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 't'
	DB	00H, 'h', 00H, ' ', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H, 'p'
	DB	00H, 'h', 00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"'
	DB	00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG116052 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 's'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k'
	DB	00H, 's', 00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"'
	DB	00H, '%', 00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG116058 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 'm'
	DB	00H, 'o', 00H, 'v', 00H, 'e', 00H, ' ', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 't', 00H, 'h'
	DB	00H, ' ', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H, 'p', 00H, 'h'
	DB	00H, '!', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%'
	DB	00H, 'h', 00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG116069 DB	'[', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n'
	DB	00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'L', 00H
	DB	'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 'y', 00H, '!'
	DB	00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'u', 00H, 's', 00H, ':', 00H, ' ', 00H, '"', 00H, '%', 00H, 'h'
	DB	00H, 's', 00H, '"', 00H, ')', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?SK_CreateFuncHook@@YG?AW4MH_STATUS@@PB_WPAX1PAPAX@Z ; SK_CreateFuncHook
PUBLIC	?SK_CreateFuncHookEx@@YG?AW4MH_STATUS@@PB_WPAX1PAPAXI@Z ; SK_CreateFuncHookEx
PUBLIC	?SK_CreateDLLHook@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook
PUBLIC	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
PUBLIC	?SK_CreateDLLHook3@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook3
PUBLIC	?SK_CreateVFTableHook@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1@Z ; SK_CreateVFTableHook
PUBLIC	?SK_CreateVFTableHookEx@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1I@Z ; SK_CreateVFTableHookEx
PUBLIC	?SK_CreateVFTableHook2@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1@Z ; SK_CreateVFTableHook2
PUBLIC	?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ	; SK_ApplyQueuedHooks
PUBLIC	?SK_EnableHook@@YG?AW4MH_STATUS@@PAX@Z		; SK_EnableHook
PUBLIC	?SK_EnableHookEx@@YG?AW4MH_STATUS@@PAXI@Z	; SK_EnableHookEx
PUBLIC	?SK_DisableHook@@YG?AW4MH_STATUS@@PAX@Z		; SK_DisableHook
PUBLIC	?SK_RemoveHook@@YG?AW4MH_STATUS@@PAX@Z		; SK_RemoveHook
PUBLIC	?SK_Init_MinHook@@YG?AW4MH_STATUS@@XZ		; SK_Init_MinHook
PUBLIC	?SK_UnInit_MinHook@@YG?AW4MH_STATUS@@XZ		; SK_UnInit_MinHook
EXTRN	__imp__GetModuleHandleExW@12:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryW@4:PROC
EXTRN	_MH_Initialize@0:PROC
EXTRN	_MH_Uninitialize@0:PROC
EXTRN	_MH_CreateHook@12:PROC
EXTRN	_MH_CreateHookEx@16:PROC
EXTRN	_MH_RemoveHook@4:PROC
EXTRN	_MH_RemoveHookEx@8:PROC
EXTRN	_MH_EnableHook@4:PROC
EXTRN	_MH_EnableHookEx@8:PROC
EXTRN	_MH_DisableHook@4:PROC
EXTRN	_MH_QueueEnableHook@4:PROC
EXTRN	_MH_ApplyQueued@0:PROC
EXTRN	_MH_StatusToString@4:PROC
EXTRN	_SH_Introspect@12:PROC
EXTRN	?Log@iSK_Logger@@UAAXQB_WZZ:PROC		; iSK_Logger::Log
EXTRN	?dll_log@@3UiSK_Logger@@A:BYTE			; dll_log
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
?SK_UnInit_MinHook@@YG?AW4MH_STATUS@@XZ PROC		; SK_UnInit_MinHook

; 653  : {

	npad	2
	push	esi

; 654  :   MH_STATUS status;
; 655  : 
; 656  :   if ((status = MH_Uninitialize ()) != MH_OK)

	call	_MH_Uninitialize@0
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN2@SK_UnInit_

; 657  :   {
; 658  :     dll_log.Log ( L"[ Min Hook ] Failed to Uninitialize MinHook Library! "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	OFFSET $SG116069
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 659  :                   L"(Status: \"%hs\")",
; 660  :                     MH_StatusToString (status) );
; 661  :   }
; 662  : 
; 663  :   return status;

	mov	eax, esi
$LN2@SK_UnInit_:
	pop	esi

; 664  : }

	ret	0
?SK_UnInit_MinHook@@YG?AW4MH_STATUS@@XZ ENDP		; SK_UnInit_MinHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
?SK_Init_MinHook@@YG?AW4MH_STATUS@@XZ PROC		; SK_Init_MinHook

; 636  :   MH_STATUS status;
; 637  : 
; 638  :   if ((status = MH_Initialize ()) != MH_OK)

	jmp	_MH_Initialize@0
?SK_Init_MinHook@@YG?AW4MH_STATUS@@XZ ENDP		; SK_Init_MinHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pTarget$ = 8						; size = 4
?SK_RemoveHook@@YG?AW4MH_STATUS@@PAX@Z PROC		; SK_RemoveHook

; 617  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 618  :   MH_STATUS status =
; 619  :     MH_RemoveHook (pTarget);

	push	DWORD PTR _pTarget$[ebp]
	call	_MH_RemoveHook@4
	mov	esi, eax

; 620  : 
; 621  :   if (status != MH_OK)

	test	esi, esi
	je	SHORT $LN2@SK_RemoveH

; 622  :   {
; 623  :     dll_log.Log ( L"[ Min Hook ] Failed to Remove Hook with Address: %ph! "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	DWORD PTR _pTarget$[ebp]
	push	OFFSET $SG116058
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 624  :                   L"(Status: \"%hs\")",
; 625  :                     pTarget,
; 626  :                       MH_StatusToString (status) );
; 627  :   }
; 628  : 
; 629  :   return status;

	mov	eax, esi
$LN2@SK_RemoveH:
	pop	esi

; 630  : }

	pop	ebp
	ret	4
?SK_RemoveHook@@YG?AW4MH_STATUS@@PAX@Z ENDP		; SK_RemoveHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pTarget$ = 8						; size = 4
?SK_DisableHook@@YG?AW4MH_STATUS@@PAX@Z PROC		; SK_DisableHook

; 589  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi

; 590  :   MH_STATUS status =
; 591  :     MH_DisableHook (pTarget);

	mov	edi, DWORD PTR _pTarget$[ebp]
	push	edi
	call	_MH_DisableHook@4
	mov	esi, eax

; 592  : 
; 593  :   if (status != MH_OK && status != MH_ERROR_DISABLED)

	test	esi, esi
	je	SHORT $LN4@SK_Disable
	cmp	esi, 6
	je	SHORT $LN4@SK_Disable

; 594  :   {
; 595  :     if (pTarget != MH_ALL_HOOKS)
; 596  :     {
; 597  :       dll_log.Log ( L"[ Min Hook ] Failed to Disable Hook with Address: %ph!"

	push	esi
	call	_MH_StatusToString@4
	push	eax
	test	edi, edi
	je	SHORT $LN3@SK_Disable
	push	edi
	push	OFFSET $SG116051
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 606  :                     L"(Status: \"%hs\")",
; 607  :                       MH_StatusToString (status) );
; 608  :     }
; 609  :   }
; 610  : 
; 611  :   return status;

	mov	eax, esi
	pop	edi
	pop	esi

; 612  : }

	pop	ebp
	ret	4
$LN3@SK_Disable:

; 598  :                     L" (Status: \"%hs\")",
; 599  :                       pTarget,
; 600  :                         MH_StatusToString (status) );
; 601  :     }
; 602  : 
; 603  :     else
; 604  :     {
; 605  :       dll_log.Log ( L"[ Min Hook ] Failed to Disable All Hooks! "

	push	OFFSET $SG116052
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 606  :                     L"(Status: \"%hs\")",
; 607  :                       MH_StatusToString (status) );
; 608  :     }
; 609  :   }
; 610  : 
; 611  :   return status;

	mov	eax, esi
$LN4@SK_Disable:
	pop	edi
	pop	esi

; 612  : }

	pop	ebp
	ret	4
?SK_DisableHook@@YG?AW4MH_STATUS@@PAX@Z ENDP		; SK_DisableHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pTarget$ = 8						; size = 4
_idx$ = 12						; size = 4
?SK_EnableHookEx@@YG?AW4MH_STATUS@@PAXI@Z PROC		; SK_EnableHookEx

; 559  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 560  :   MH_STATUS status =
; 561  :     MH_EnableHookEx (pTarget, idx);

	mov	ebx, DWORD PTR _idx$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _pTarget$[ebp]
	push	ebx
	push	edi
	call	_MH_EnableHookEx@8
	mov	esi, eax

; 562  : 
; 563  :   if (status != MH_OK && status != MH_ERROR_ENABLED)

	test	esi, esi
	je	SHORT $LN4@SK_EnableH
	cmp	esi, 5
	je	SHORT $LN4@SK_EnableH

; 564  :   {
; 565  :     if (pTarget != MH_ALL_HOOKS)
; 566  :     {
; 567  :       dll_log.Log ( L"[ Min Hook ] Failed to Enable Hook (Idx=%lu) with "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	test	edi, edi
	je	SHORT $LN3@SK_EnableH
	push	edi
	push	ebx
	push	OFFSET $SG116042
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 577  :                     L"(Status: \"%hs\")",
; 578  :                       idx,
; 579  :                         MH_StatusToString (status) );
; 580  :     }
; 581  :   }
; 582  : 
; 583  :   return status;

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 584  : }

	pop	ebp
	ret	8
$LN3@SK_EnableH:

; 568  :                     L"Address: %04ph! (Status: \"%hs\")",
; 569  :                     idx,
; 570  :                       pTarget,
; 571  :                         MH_StatusToString (status) );
; 572  :     }
; 573  : 
; 574  :     else
; 575  :     {
; 576  :       dll_log.Log ( L"[ Min Hook ] Failed to Enable All (Idx=%lu) Hooks! "

	push	ebx
	push	OFFSET $SG116043
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 577  :                     L"(Status: \"%hs\")",
; 578  :                       idx,
; 579  :                         MH_StatusToString (status) );
; 580  :     }
; 581  :   }
; 582  : 
; 583  :   return status;

	mov	eax, esi
$LN4@SK_EnableH:
	pop	edi
	pop	esi
	pop	ebx

; 584  : }

	pop	ebp
	ret	8
?SK_EnableHookEx@@YG?AW4MH_STATUS@@PAXI@Z ENDP		; SK_EnableHookEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pTarget$ = 8						; size = 4
?SK_EnableHook@@YG?AW4MH_STATUS@@PAX@Z PROC		; SK_EnableHook

; 531  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi

; 532  :   MH_STATUS status =
; 533  :     MH_EnableHook (pTarget);

	mov	edi, DWORD PTR _pTarget$[ebp]
	push	edi
	call	_MH_EnableHook@4
	mov	esi, eax

; 534  : 
; 535  :   if (status != MH_OK && status != MH_ERROR_ENABLED)

	test	esi, esi
	je	SHORT $LN4@SK_EnableH
	cmp	esi, 5
	je	SHORT $LN4@SK_EnableH

; 536  :   {
; 537  :     if (pTarget != MH_ALL_HOOKS)
; 538  :     {
; 539  :       dll_log.Log(L"[ Min Hook ] Failed to Enable Hook with Address: %ph!"

	push	esi
	call	_MH_StatusToString@4
	push	eax
	test	edi, edi
	je	SHORT $LN3@SK_EnableH
	push	edi
	push	OFFSET $SG116032
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 548  :                     L"(Status: \"%hs\")",
; 549  :                       MH_StatusToString (status) );
; 550  :     }
; 551  :   }
; 552  : 
; 553  :   return status;

	mov	eax, esi
	pop	edi
	pop	esi

; 554  : }

	pop	ebp
	ret	4
$LN3@SK_EnableH:

; 540  :                   L" (Status: \"%hs\")",
; 541  :                     pTarget,
; 542  :                       MH_StatusToString (status) );
; 543  :     }
; 544  : 
; 545  :     else
; 546  :     {
; 547  :       dll_log.Log ( L"[ Min Hook ] Failed to Enable All Hooks! "

	push	OFFSET $SG116033
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 548  :                     L"(Status: \"%hs\")",
; 549  :                       MH_StatusToString (status) );
; 550  :     }
; 551  :   }
; 552  : 
; 553  :   return status;

	mov	eax, esi
$LN4@SK_EnableH:
	pop	edi
	pop	esi

; 554  : }

	pop	ebp
	ret	4
?SK_EnableHook@@YG?AW4MH_STATUS@@PAX@Z ENDP		; SK_EnableHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ PROC		; SK_ApplyQueuedHooks

; 514  : {

	npad	2
	push	esi

; 515  :   MH_STATUS status =
; 516  :     MH_ApplyQueued ();

	call	_MH_ApplyQueued@0
	mov	esi, eax

; 517  : 
; 518  :   if (status != MH_OK)

	test	esi, esi
	je	SHORT $LN2@SK_ApplyQu

; 519  :   {
; 520  :     dll_log.Log(L"[ Min Hook ] Failed to Enable Deferred Hooks!"

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	OFFSET $SG116024
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 521  :                   L" (Status: \"%hs\")",
; 522  :                       MH_StatusToString (status) );
; 523  :   }
; 524  : 
; 525  :   return status;

	mov	eax, esi
$LN2@SK_ApplyQu:
	pop	esi

; 526  : }

	ret	0
?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ ENDP		; SK_ApplyQueuedHooks
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pwszFuncName$ = 8					; size = 4
_ppVFTable$ = 12					; size = 4
_dwOffset$ = 16						; size = 4
_pDetour$ = 20						; size = 4
_ppOriginal$ = 24					; size = 4
?SK_CreateVFTableHook2@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1@Z PROC ; SK_CreateVFTableHook2

; 489  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 490  :   MH_STATUS ret =
; 491  :     SK_CreateFuncHook (

	mov	eax, DWORD PTR _ppVFTable$[ebp]
	push	ebx
	push	esi
	push	edi
	push	DWORD PTR _ppOriginal$[ebp]
	mov	edi, DWORD PTR _dwOffset$[ebp]
	push	DWORD PTR _pDetour$[ebp]
	lea	ebx, DWORD PTR [eax+edi*4]
	push	DWORD PTR [ebx]
	push	DWORD PTR _pwszFuncName$[ebp]
	call	?SK_CreateFuncHook@@YG?AW4MH_STATUS@@PB_WPAX1PAPAX@Z ; SK_CreateFuncHook
	mov	esi, eax

; 492  :       pwszFuncName,
; 493  :         ppVFTable [dwOffset],
; 494  :           pDetour,
; 495  :             ppOriginal );
; 496  : 
; 497  :   if (ret == MH_OK)

	test	esi, esi
	jne	SHORT $LN2@SK_CreateV

; 498  :     ret = MH_QueueEnableHook (ppVFTable [dwOffset]);

	push	DWORD PTR [ebx]
	call	_MH_QueueEnableHook@4
	pop	edi
	pop	esi
	pop	ebx

; 509  : }

	pop	ebp
	ret	20					; 00000014H
$LN2@SK_CreateV:

; 499  : 
; 500  :   else
; 501  :     dll_log.Log ( L"[ Min Hook ] Failed to Install Hook for '%s' "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	edi
	push	DWORD PTR _pwszFuncName$[ebp]
	push	OFFSET $SG116018
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 502  :                   L"[VFTable Index: %lu]!  (Status: \"%hs\")",
; 503  :                     pwszFuncName,
; 504  :                       dwOffset,
; 505  :                         MH_StatusToString (ret) );
; 506  : 
; 507  : 
; 508  :   return ret;

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 509  : }

	pop	ebp
	ret	20					; 00000014H
?SK_CreateVFTableHook2@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1@Z ENDP ; SK_CreateVFTableHook2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pwszFuncName$ = 8					; size = 4
_ppVFTable$ = 12					; size = 4
_dwOffset$ = 16						; size = 4
_pDetour$ = 20						; size = 4
_ppOriginal$ = 24					; size = 4
_idx$ = 28						; size = 4
?SK_CreateVFTableHookEx@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1I@Z PROC ; SK_CreateVFTableHookEx

; 467  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 468  :   MH_STATUS ret =
; 469  :     SK_CreateFuncHookEx (

	mov	ecx, DWORD PTR _dwOffset$[ebp]
	mov	eax, DWORD PTR _ppVFTable$[ebp]
	push	esi
	push	DWORD PTR _idx$[ebp]
	lea	esi, DWORD PTR [eax+ecx*4]
	push	DWORD PTR _ppOriginal$[ebp]
	push	DWORD PTR _pDetour$[ebp]
	push	DWORD PTR [esi]
	push	DWORD PTR _pwszFuncName$[ebp]
	call	?SK_CreateFuncHookEx@@YG?AW4MH_STATUS@@PB_WPAX1PAPAXI@Z ; SK_CreateFuncHookEx

; 470  :       pwszFuncName,
; 471  :         ppVFTable [dwOffset],
; 472  :           pDetour,
; 473  :             ppOriginal,
; 474  :               idx );
; 475  : 
; 476  :   if (ret == MH_OK)

	test	eax, eax
	jne	SHORT $LN2@SK_CreateV

; 477  :     ret = SK_EnableHookEx (ppVFTable [dwOffset], idx);

	push	DWORD PTR _idx$[ebp]
	push	DWORD PTR [esi]
	call	?SK_EnableHookEx@@YG?AW4MH_STATUS@@PAXI@Z ; SK_EnableHookEx
$LN2@SK_CreateV:
	pop	esi

; 478  : 
; 479  :   return ret;
; 480  : }

	pop	ebp
	ret	24					; 00000018H
?SK_CreateVFTableHookEx@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1I@Z ENDP ; SK_CreateVFTableHookEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pwszFuncName$ = 8					; size = 4
_ppVFTable$ = 12					; size = 4
_dwOffset$ = 16						; size = 4
_pDetour$ = 20						; size = 4
_ppOriginal$ = 24					; size = 4
?SK_CreateVFTableHook@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1@Z PROC ; SK_CreateVFTableHook

; 438  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 439  :   MH_STATUS ret =
; 440  :     SK_CreateFuncHook (

	mov	eax, DWORD PTR _ppVFTable$[ebp]
	push	ebx
	push	esi
	push	edi
	push	DWORD PTR _ppOriginal$[ebp]
	mov	edi, DWORD PTR _dwOffset$[ebp]
	push	DWORD PTR _pDetour$[ebp]
	lea	ebx, DWORD PTR [eax+edi*4]
	push	DWORD PTR [ebx]
	push	DWORD PTR _pwszFuncName$[ebp]
	call	?SK_CreateFuncHook@@YG?AW4MH_STATUS@@PB_WPAX1PAPAX@Z ; SK_CreateFuncHook
	mov	esi, eax

; 441  :       pwszFuncName,
; 442  :         ppVFTable [dwOffset],
; 443  :           pDetour,
; 444  :             ppOriginal );
; 445  : 
; 446  :   if (ret == MH_OK)

	test	esi, esi
	jne	SHORT $LN2@SK_CreateV

; 447  :     ret = SK_EnableHook (ppVFTable [dwOffset]);

	push	DWORD PTR [ebx]
	call	?SK_EnableHook@@YG?AW4MH_STATUS@@PAX@Z	; SK_EnableHook
	pop	edi
	pop	esi
	pop	ebx

; 457  : }

	pop	ebp
	ret	20					; 00000014H
$LN2@SK_CreateV:

; 448  : 
; 449  :   else
; 450  :     dll_log.Log ( L"[ Min Hook ] Failed to Install Hook for '%s' "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	edi
	push	DWORD PTR _pwszFuncName$[ebp]
	push	OFFSET $SG115997
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 451  :                   L"[VFTable Index: %lu]!  (Status: \"%hs\")",
; 452  :                     pwszFuncName,
; 453  :                       dwOffset,
; 454  :                         MH_StatusToString (ret) );
; 455  : 
; 456  :   return ret;

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 457  : }

	pop	ebp
	ret	20					; 00000014H
?SK_CreateVFTableHook@@YG?AW4MH_STATUS@@PB_WPAPAXKPAX1@Z ENDP ; SK_CreateVFTableHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_hMod$ = -4						; size = 4
_pwszModule$ = 8					; size = 4
_pszProcName$ = 12					; size = 4
_pDetour$ = 16						; size = 4
_ppOriginal$ = 20					; size = 4
_ppFuncAddr$ = 24					; size = 4
?SK_CreateDLLHook3@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z PROC ; SK_CreateDLLHook3

; 354  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi

; 355  :   HMODULE hMod = nullptr;
; 356  : 
; 357  :   if (! GetModuleHandleExW (GET_MODULE_HANDLE_EX_FLAG_PIN, pwszModule, &hMod))

	mov	esi, DWORD PTR _pwszModule$[ebp]
	lea	eax, DWORD PTR _hMod$[ebp]
	push	edi
	mov	edi, DWORD PTR __imp__GetModuleHandleExW@12
	push	eax
	push	esi
	push	1
	mov	DWORD PTR _hMod$[ebp], 0
	call	edi
	test	eax, eax
	jne	SHORT $LN3@SK_CreateD

; 358  :   {
; 359  :     // In the future, establish queueing capabilities, for now, just pull the DLL in.
; 360  :     //
; 361  :     //  >> Pass the library load through the original (now hooked) function so that
; 362  :     //       anything else that hooks this DLL on-load does not miss its initial load.
; 363  :     //
; 364  :     if (LoadLibraryW (pwszModule))

	push	esi
	call	DWORD PTR __imp__LoadLibraryW@4
	test	eax, eax
	je	SHORT $LN3@SK_CreateD

; 365  :       GetModuleHandleExW (GET_MODULE_HANDLE_EX_FLAG_PIN, pwszModule, &hMod);

	lea	eax, DWORD PTR _hMod$[ebp]
	push	eax
	push	esi
	push	1
	call	edi
$LN3@SK_CreateD:

; 366  :   }
; 367  : 
; 368  :   void      *pFuncAddr = nullptr;
; 369  :   MH_STATUS  status    = MH_OK;
; 370  : 
; 371  :   if (hMod == nullptr)

	mov	eax, DWORD PTR _hMod$[ebp]
	mov	edi, DWORD PTR _pszProcName$[ebp]
	test	eax, eax
	jne	SHORT $LN4@SK_CreateD

; 372  :     status = MH_ERROR_MODULE_NOT_FOUND;

	mov	ebx, 11					; 0000000bH

; 373  : 
; 374  :   else {

	jmp	$LN11@SK_CreateD
$LN4@SK_CreateD:

; 375  :     pFuncAddr =

	push	edi
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8

; 376  :       GetProcAddress (hMod, pszProcName);
; 377  : 
; 378  :     status =

	push	DWORD PTR _ppOriginal$[ebp]
	mov	edi, eax
	push	DWORD PTR _pDetour$[ebp]
	push	edi
	call	_MH_CreateHook@12
	mov	ebx, eax

; 379  :       MH_CreateHook ( pFuncAddr,
; 380  :                         pDetour,
; 381  :                           ppOriginal );
; 382  :   }
; 383  : 
; 384  :   if (status != MH_OK)

	test	ebx, ebx
	je	$LN6@SK_CreateD

; 385  :   {
; 386  :     // Silently ignore this problem
; 387  :     if (status == MH_ERROR_ALREADY_CREATED && ppOriginal != nullptr)

	cmp	ebx, 3
	jne	SHORT $LN17@SK_CreateD
	cmp	DWORD PTR _ppOriginal$[ebp], 0
	je	SHORT $LN16@SK_CreateD

; 388  :     {
; 389  :       if (ppFuncAddr != nullptr)

	mov	eax, DWORD PTR _ppFuncAddr$[ebp]
	test	eax, eax
	je	SHORT $LN9@SK_CreateD

; 390  :          *ppFuncAddr  = pFuncAddr;

	mov	DWORD PTR [eax], edi
$LN9@SK_CreateD:
	pop	edi
	pop	esi

; 391  : 
; 392  :       return MH_OK;

	xor	eax, eax
	pop	ebx

; 429  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN16@SK_CreateD:

; 393  :     }
; 394  : 
; 395  :     if (status == MH_ERROR_ALREADY_CREATED)
; 396  :     {
; 397  :       if (ppOriginal == nullptr)
; 398  :       {
; 399  :         SH_Introspect ( pFuncAddr,

	push	0
	push	1
	push	edi
	call	_SH_Introspect@12

; 400  :                           SH_TRAMPOLINE,
; 401  :                             ppOriginal );
; 402  : 
; 403  :         dll_log.Log ( L"[ Min Hook ] WARNING: Hook Already Exists for: '%hs' in '%s'! "

	push	3
	call	_MH_StatusToString@4
	cmp	DWORD PTR _pszProcName$[ebp], 65536	; 00010000H
	push	eax
	push	esi
	mov	eax, OFFSET $SG115982
	cmova	eax, DWORD PTR _pszProcName$[ebp]
	push	eax
	push	OFFSET $SG115983
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 404  :                       L"(Status: \"%hs\")",
; 405  :                         (uintptr_t)pszProcName > 65536 ? pszProcName : "Ordinal",
; 406  :                           pwszModule,
; 407  :                             MH_StatusToString (status) );
; 408  : 
; 409  :         return status;

	mov	eax, 3
	pop	edi
	pop	esi
	pop	ebx

; 429  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN17@SK_CreateD:
	mov	edi, DWORD PTR _pszProcName$[ebp]
$LN11@SK_CreateD:

; 410  :       }
; 411  :     }
; 412  : 
; 413  :     dll_log.Log ( L"[ Min Hook ] Failed to Install Hook for: '%hs' in '%s'! "

	push	ebx
	call	_MH_StatusToString@4
	push	eax
	cmp	edi, 65536				; 00010000H
	mov	eax, OFFSET $SG115984
	push	esi
	cmova	eax, edi
	push	eax
	push	OFFSET $SG115985
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 426  :   }
; 427  : 
; 428  :   return status;

	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx

; 429  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN6@SK_CreateD:

; 414  :                   L"(Status: \"%hs\")",
; 415  :                     (uintptr_t)pszProcName > 65536 ? pszProcName : "Ordinal",
; 416  :                       pwszModule,
; 417  :                         MH_StatusToString (status) );
; 418  :   }
; 419  : 
; 420  :   else
; 421  :   {
; 422  :     if (ppFuncAddr != nullptr)

	mov	eax, DWORD PTR _ppFuncAddr$[ebp]
	test	eax, eax
	je	SHORT $LN12@SK_CreateD

; 423  :       *ppFuncAddr = pFuncAddr;

	mov	DWORD PTR [eax], edi
$LN12@SK_CreateD:

; 424  : 
; 425  :     MH_QueueEnableHook (pFuncAddr);

	push	edi
	call	_MH_QueueEnableHook@4
	pop	edi
	pop	esi

; 426  :   }
; 427  : 
; 428  :   return status;

	mov	eax, ebx
	pop	ebx

; 429  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?SK_CreateDLLHook3@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ENDP ; SK_CreateDLLHook3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_hMod$ = -4						; size = 4
_pFuncAddr$1$ = 8					; size = 4
_pwszModule$ = 8					; size = 4
_pszProcName$ = 12					; size = 4
_pDetour$ = 16						; size = 4
_ppOriginal$ = 20					; size = 4
_ppFuncAddr$ = 24					; size = 4
?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z PROC ; SK_CreateDLLHook2

; 261  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 262  :   HMODULE hMod = nullptr;
; 263  : 
; 264  :   if (! GetModuleHandleExW (GET_MODULE_HANDLE_EX_FLAG_PIN, pwszModule, &hMod))

	mov	ebx, DWORD PTR _pwszModule$[ebp]
	lea	eax, DWORD PTR _hMod$[ebp]
	push	esi
	mov	esi, DWORD PTR __imp__GetModuleHandleExW@12
	push	edi
	push	eax
	push	ebx
	push	1
	mov	DWORD PTR _hMod$[ebp], 0
	call	esi
	test	eax, eax
	jne	SHORT $LN3@SK_CreateD

; 265  :   {
; 266  :     // In the future, establish queueing capabilities, for now, just pull the DLL in.
; 267  :     //
; 268  :     //  >> Pass the library load through the original (now hooked) function so that
; 269  :     //       anything else that hooks this DLL on-load does not miss its initial load.
; 270  :     //
; 271  :     if (LoadLibraryW (pwszModule))

	push	ebx
	call	DWORD PTR __imp__LoadLibraryW@4
	test	eax, eax
	je	SHORT $LN3@SK_CreateD

; 272  :       GetModuleHandleExW (GET_MODULE_HANDLE_EX_FLAG_PIN, pwszModule, &hMod);

	lea	eax, DWORD PTR _hMod$[ebp]
	push	eax
	push	ebx
	push	1
	call	esi
$LN3@SK_CreateD:

; 273  :   }
; 274  : 
; 275  :   void      *pFuncAddr = nullptr;
; 276  :   MH_STATUS  status    = MH_OK;
; 277  : 
; 278  :   if (hMod == nullptr)

	mov	eax, DWORD PTR _hMod$[ebp]
	mov	edi, DWORD PTR _pszProcName$[ebp]
	test	eax, eax
	jne	SHORT $LN4@SK_CreateD

; 279  :     status = MH_ERROR_MODULE_NOT_FOUND;

	mov	esi, 11					; 0000000bH

; 280  : 
; 281  :   else

	jmp	$LN12@SK_CreateD
$LN4@SK_CreateD:

; 282  :   {
; 283  :     pFuncAddr =

	push	edi
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8

; 284  :       GetProcAddress (hMod, pszProcName);
; 285  : 
; 286  :     status =

	push	DWORD PTR _ppOriginal$[ebp]
	mov	DWORD PTR _pFuncAddr$1$[ebp], eax
	push	DWORD PTR _pDetour$[ebp]
	push	eax
	call	_MH_CreateHook@12
	mov	esi, eax

; 287  :       MH_CreateHook ( pFuncAddr,
; 288  :                         pDetour,
; 289  :                           ppOriginal );
; 290  :   }
; 291  : 
; 292  :   if (status != MH_OK)

	test	esi, esi
	je	$LN6@SK_CreateD

; 293  :   {
; 294  :     if (status == MH_ERROR_ALREADY_CREATED)

	cmp	esi, 3
	jne	$LN12@SK_CreateD

; 295  :     {
; 296  :       if (ppOriginal == nullptr)

	cmp	DWORD PTR _ppOriginal$[ebp], 0
	jne	SHORT $LN9@SK_CreateD

; 297  :       {
; 298  :         SH_Introspect ( pFuncAddr,

	push	0
	push	1
	push	DWORD PTR _pFuncAddr$1$[ebp]
	call	_SH_Introspect@12

; 299  :                           SH_TRAMPOLINE,
; 300  :                             ppOriginal );
; 301  : 
; 302  :         dll_log.Log ( L"[ Min Hook ] WARNING: Hook Already Exists for: '%hs' in '%s'! "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	cmp	edi, 65536				; 00010000H
	mov	eax, OFFSET $SG115950
	push	ebx
	cmova	eax, edi
	push	eax
	push	OFFSET $SG115951
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 303  :                       L"(Status: \"%hs\")",
; 304  :                         (uintptr_t)pszProcName > 65536 ? pszProcName : "Ordinal",
; 305  :                           pwszModule,
; 306  :                             MH_StatusToString (status) );
; 307  : 
; 308  :         return status;

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 347  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN9@SK_CreateD:

; 309  :       }
; 310  : 
; 311  :       else if (MH_OK == (status = MH_RemoveHook (pFuncAddr)))

	push	DWORD PTR _pFuncAddr$1$[ebp]
	call	_MH_RemoveHook@4
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN11@SK_CreateD

; 312  :       {
; 313  :         dll_log.Log ( L"[HookEngine] Removing Corrupted Hook for '%hs'... software "

	push	edi
	push	OFFSET $SG115954
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 314  :                       L"is probably going to explode!", pszProcName );
; 315  : 
; 316  :         return SK_CreateDLLHook2 (pwszModule, pszProcName, pDetour, ppOriginal, ppFuncAddr);

	push	DWORD PTR _ppFuncAddr$[ebp]
	push	DWORD PTR _ppOriginal$[ebp]
	push	DWORD PTR _pDetour$[ebp]
	push	edi
	push	ebx
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	pop	edi
	pop	esi
	pop	ebx

; 347  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN11@SK_CreateD:

; 317  :       }
; 318  : 
; 319  :       else
; 320  :       {
; 321  :         dll_log.Log ( L"[ Min Hook ] Failed to Uninstall Hook for '%hs' "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	DWORD PTR _pFuncAddr$1$[ebp]
	push	edi
	push	OFFSET $SG115955
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H
$LN12@SK_CreateD:

; 322  :                       L"[Address: %04ph]!  (Status: \"%hs\")",
; 323  :                         pszProcName,
; 324  :                           pFuncAddr,
; 325  :                             MH_StatusToString (status) );
; 326  :       }
; 327  :     }
; 328  : 
; 329  :     dll_log.Log ( L"[ Min Hook ] Failed to Install Hook for: '%hs' in '%s'! "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	cmp	edi, 65536				; 00010000H
	mov	eax, OFFSET $SG115956
	push	ebx
	cmova	eax, edi
	push	eax
	push	OFFSET $SG115957
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 330  :                   L"(Status: \"%hs\")",
; 331  :                     (uintptr_t)pszProcName > 65536 ? pszProcName : "Ordinal",
; 332  :                       pwszModule,
; 333  :                         MH_StatusToString (status) );
; 334  : 
; 335  :     if (ppFuncAddr != nullptr)

	mov	eax, DWORD PTR _ppFuncAddr$[ebp]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN7@SK_CreateD

; 336  :       *ppFuncAddr = nullptr;

	pop	edi
	mov	DWORD PTR [eax], 0

; 344  :   }
; 345  : 
; 346  :   return status;

	mov	eax, esi
	pop	esi
	pop	ebx

; 347  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN6@SK_CreateD:

; 337  :   }
; 338  : 
; 339  :   else {
; 340  :     if (ppFuncAddr != nullptr)

	mov	ecx, DWORD PTR _ppFuncAddr$[ebp]

; 341  :       *ppFuncAddr = pFuncAddr;

	mov	eax, DWORD PTR _pFuncAddr$1$[ebp]
	test	ecx, ecx
	je	SHORT $LN14@SK_CreateD
	mov	DWORD PTR [ecx], eax
$LN14@SK_CreateD:

; 342  : 
; 343  :     MH_QueueEnableHook (pFuncAddr);

	push	eax
	call	_MH_QueueEnableHook@4
$LN7@SK_CreateD:

; 344  :   }
; 345  : 
; 346  :   return status;

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 347  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ENDP ; SK_CreateDLLHook2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_hMod$ = -4						; size = 4
_pFuncAddr$1$ = 8					; size = 4
_pwszModule$ = 8					; size = 4
_pszProcName$ = 12					; size = 4
_pDetour$ = 16						; size = 4
_ppOriginal$ = 20					; size = 4
_ppFuncAddr$ = 24					; size = 4
?SK_CreateDLLHook@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z PROC ; SK_CreateDLLHook

; 169  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 170  :   HMODULE hMod = nullptr;
; 171  : 
; 172  :   if (! GetModuleHandleExW (GET_MODULE_HANDLE_EX_FLAG_PIN, pwszModule, &hMod))

	mov	ebx, DWORD PTR _pwszModule$[ebp]
	lea	eax, DWORD PTR _hMod$[ebp]
	push	esi
	mov	esi, DWORD PTR __imp__GetModuleHandleExW@12
	push	edi
	push	eax
	push	ebx
	push	1
	mov	DWORD PTR _hMod$[ebp], 0
	call	esi
	test	eax, eax
	jne	SHORT $LN3@SK_CreateD

; 173  :   {
; 174  :     // In the future, establish queueing capabilities, for now, just pull the DLL in.
; 175  :     //
; 176  :     //  >> Pass the library load through the original (now hooked) function so that
; 177  :     //       anything else that hooks this DLL on-load does not miss its initial load.
; 178  :     //
; 179  :     //if (LoadLibraryW (pwszModule))
; 180  :     //  GetModuleHandleExW (GET_MODULE_HANDLE_EX_FLAG_PIN, pwszModule, &hMod);
; 181  :     if (LoadLibraryW (pwszModule))

	push	ebx
	call	DWORD PTR __imp__LoadLibraryW@4
	test	eax, eax
	je	SHORT $LN3@SK_CreateD

; 182  :       GetModuleHandleExW (GET_MODULE_HANDLE_EX_FLAG_PIN, pwszModule, &hMod);

	lea	eax, DWORD PTR _hMod$[ebp]
	push	eax
	push	ebx
	push	1
	call	esi
$LN3@SK_CreateD:

; 183  :   }
; 184  : 
; 185  :   void      *pFuncAddr = nullptr;
; 186  :   MH_STATUS  status    = MH_OK;
; 187  : 
; 188  :   if (hMod == nullptr)

	mov	eax, DWORD PTR _hMod$[ebp]
	mov	edi, DWORD PTR _pszProcName$[ebp]
	test	eax, eax
	jne	SHORT $LN4@SK_CreateD

; 189  :     status = MH_ERROR_MODULE_NOT_FOUND;

	mov	esi, 11					; 0000000bH

; 190  : 
; 191  :   else

	jmp	$LN12@SK_CreateD
$LN4@SK_CreateD:

; 192  :   {
; 193  :     pFuncAddr =

	push	edi
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8

; 194  :       GetProcAddress (hMod, pszProcName);
; 195  : 
; 196  :     status =

	push	DWORD PTR _ppOriginal$[ebp]
	mov	DWORD PTR _pFuncAddr$1$[ebp], eax
	push	DWORD PTR _pDetour$[ebp]
	push	eax
	call	_MH_CreateHook@12
	mov	esi, eax

; 197  :       MH_CreateHook ( pFuncAddr,
; 198  :                         pDetour,
; 199  :                           ppOriginal );
; 200  :   }
; 201  : 
; 202  :   if (status != MH_OK)

	test	esi, esi
	je	$LN6@SK_CreateD

; 203  :   {
; 204  :     if (status == MH_ERROR_ALREADY_CREATED)

	cmp	esi, 3
	jne	$LN12@SK_CreateD

; 205  :     {
; 206  :       if (ppOriginal == nullptr)

	cmp	DWORD PTR _ppOriginal$[ebp], 0
	jne	SHORT $LN9@SK_CreateD

; 207  :       {
; 208  :         SH_Introspect ( pFuncAddr,

	push	0
	push	1
	push	DWORD PTR _pFuncAddr$1$[ebp]
	call	_SH_Introspect@12

; 209  :                           SH_TRAMPOLINE,
; 210  :                             ppOriginal );
; 211  : 
; 212  :         dll_log.Log ( L"[ Min Hook ] WARNING: Hook Already Exists for: '%hs' in '%s'! "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	cmp	edi, 65536				; 00010000H
	mov	eax, OFFSET $SG115918
	push	ebx
	cmova	eax, edi
	push	eax
	push	OFFSET $SG115919
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 213  :                       L"(Status: \"%hs\")",
; 214  :                         reinterpret_cast <uintptr_t> (pszProcName) > 65536 ? pszProcName : "Ordinal",
; 215  :                           pwszModule,
; 216  :                             MH_StatusToString (status) );
; 217  : 
; 218  :         return status;

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN9@SK_CreateD:

; 219  :       }
; 220  : 
; 221  :       else if (MH_OK == (status = MH_RemoveHook (pFuncAddr)))

	push	DWORD PTR _pFuncAddr$1$[ebp]
	call	_MH_RemoveHook@4
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN11@SK_CreateD

; 222  :       {
; 223  :         dll_log.Log ( L"[HookEngine] Removing Corrupted Hook for '%hs'... software "

	push	edi
	push	OFFSET $SG115922
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 224  :                       L"is probably going to explode!", pszProcName );
; 225  : 
; 226  :         return SK_CreateDLLHook (pwszModule, pszProcName, pDetour, ppOriginal, ppFuncAddr);

	push	DWORD PTR _ppFuncAddr$[ebp]
	push	DWORD PTR _ppOriginal$[ebp]
	push	DWORD PTR _pDetour$[ebp]
	push	edi
	push	ebx
	call	?SK_CreateDLLHook@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook
	pop	edi
	pop	esi
	pop	ebx

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN11@SK_CreateD:

; 227  :       }
; 228  : 
; 229  :       else
; 230  :       {
; 231  :         dll_log.Log ( L"[ Min Hook ] Failed to Uninstall Hook for '%hs' "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	DWORD PTR _pFuncAddr$1$[ebp]
	push	edi
	push	OFFSET $SG115923
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H
$LN12@SK_CreateD:

; 232  :                       L"[Address: %04ph]!  (Status: \"%hs\")",
; 233  :                         pszProcName,
; 234  :                           pFuncAddr,
; 235  :                             MH_StatusToString (status) );
; 236  :       }
; 237  :     }
; 238  : 
; 239  :     dll_log.Log ( L"[ Min Hook ] Failed to Install Hook for: '%hs' in '%s'! "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	cmp	edi, 65536				; 00010000H
	mov	eax, OFFSET $SG115924
	push	ebx
	cmova	eax, edi
	push	eax
	push	OFFSET $SG115925
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 240  :                   L"(Status: \"%hs\")",
; 241  :                     reinterpret_cast <uintptr_t> (pszProcName) > 65536 ? pszProcName : "Ordinal",
; 242  :                       pwszModule,
; 243  :                         MH_StatusToString (status) );
; 244  : 
; 245  :     if (ppFuncAddr != nullptr)

	mov	eax, DWORD PTR _ppFuncAddr$[ebp]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN15@SK_CreateD

; 246  :       *ppFuncAddr = nullptr;

	pop	edi
	mov	DWORD PTR [eax], 0

; 252  : 
; 253  :   return status;

	mov	eax, esi
	pop	esi
	pop	ebx

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN6@SK_CreateD:

; 247  :   }
; 248  :   else if (ppFuncAddr != nullptr)

	mov	ecx, DWORD PTR _ppFuncAddr$[ebp]
	test	ecx, ecx
	je	SHORT $LN14@SK_CreateD

; 249  :     *ppFuncAddr = pFuncAddr;

	mov	eax, DWORD PTR _pFuncAddr$1$[ebp]
	pop	edi
	mov	DWORD PTR [ecx], eax

; 252  : 
; 253  :   return status;

	mov	eax, esi
	pop	esi
	pop	ebx

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN14@SK_CreateD:

; 250  :   else
; 251  :     SK_EnableHook (pFuncAddr);

	push	DWORD PTR _pFuncAddr$1$[ebp]
	call	?SK_EnableHook@@YG?AW4MH_STATUS@@PAX@Z	; SK_EnableHook
$LN15@SK_CreateD:

; 252  : 
; 253  :   return status;

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?SK_CreateDLLHook@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ENDP ; SK_CreateDLLHook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pwszFuncName$ = 8					; size = 4
_pTarget$ = 12						; size = 4
_pDetour$ = 16						; size = 4
_ppOriginal$ = 20					; size = 4
_idx$ = 24						; size = 4
?SK_CreateFuncHookEx@@YG?AW4MH_STATUS@@PB_WPAX1PAPAXI@Z PROC ; SK_CreateFuncHookEx

; 128  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _idx$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _pTarget$[ebp]
	npad	2
$LL8@SK_CreateF:

; 129  :   MH_STATUS status =
; 130  :     MH_CreateHookEx ( pTarget,

	push	ebx
	push	DWORD PTR _ppOriginal$[ebp]
	push	DWORD PTR _pDetour$[ebp]
	push	edi
	call	_MH_CreateHookEx@16
	mov	esi, eax

; 131  :                         pDetour,
; 132  :                           ppOriginal,
; 133  :                             idx );
; 134  : 
; 135  :   if (status != MH_OK && status != MH_ERROR_ALREADY_CREATED)

	test	esi, esi
	je	SHORT $LN14@SK_CreateF
	cmp	esi, 3
	jne	SHORT $LN10@SK_CreateF

; 138  :                   L"for '%s' [Address: %04ph]!  (Status: \"%hs\")",
; 139  :                     idx,
; 140  :                       pwszFuncName,
; 141  :                         pTarget,
; 142  :                           MH_StatusToString (status) );
; 143  :   }
; 144  : 
; 145  :   else if (status == MH_ERROR_ALREADY_CREATED)
; 146  :   {
; 147  :     if (MH_OK == (status = MH_RemoveHookEx (pTarget, idx)))

	push	ebx
	push	edi
	call	_MH_RemoveHookEx@8
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN5@SK_CreateF

; 148  :     {
; 149  :       dll_log.Log ( L"[HookEngine] Removing Corrupted Hook for '%s'... software "

	push	DWORD PTR _pwszFuncName$[ebp]
	push	OFFSET $SG115895
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 150  :                     L"is probably going to explode!", pwszFuncName );
; 151  : 
; 152  :       return SK_CreateFuncHookEx (pwszFuncName, pTarget, pDetour, ppOriginal, idx);

	jmp	SHORT $LL8@SK_CreateF
$LN5@SK_CreateF:

; 153  :     } else
; 154  :       dll_log.Log ( L"[ Min Hook ] Failed to Uninstall Hook for '%s' "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	edi
	push	DWORD PTR _pwszFuncName$[ebp]
	push	OFFSET $SG115896
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 155  :                     L"[Address: %04ph]!  (Status: \"%hs\")",
; 156  :                       pwszFuncName,
; 157  :                         pTarget,
; 158  :                           MH_StatusToString (status) );
; 159  :   }
; 160  : 
; 161  :   return status;

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 162  : }

	pop	ebp
	ret	20					; 00000014H
$LN10@SK_CreateF:

; 136  :   {
; 137  :     dll_log.Log ( L"[ Min Hook ] Failed to Install Hook (idx=%lu) "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	edi
	push	DWORD PTR _pwszFuncName$[ebp]
	push	ebx
	push	OFFSET $SG115891
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 24					; 00000018H
$LN14@SK_CreateF:

; 155  :                     L"[Address: %04ph]!  (Status: \"%hs\")",
; 156  :                       pwszFuncName,
; 157  :                         pTarget,
; 158  :                           MH_StatusToString (status) );
; 159  :   }
; 160  : 
; 161  :   return status;

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 162  : }

	pop	ebp
	ret	20					; 00000014H
?SK_CreateFuncHookEx@@YG?AW4MH_STATUS@@PB_WPAX1PAPAXI@Z ENDP ; SK_CreateFuncHookEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\hooks.cpp
_TEXT	SEGMENT
_pwszFuncName$ = 8					; size = 4
_pTarget$ = 12						; size = 4
_pDetour$ = 16						; size = 4
_ppOriginal$ = 20					; size = 4
?SK_CreateFuncHook@@YG?AW4MH_STATUS@@PB_WPAX1PAPAX@Z PROC ; SK_CreateFuncHook

; 87   : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _pwszFuncName$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _pTarget$[ebp]
	npad	2
$LL8@SK_CreateF:

; 88   :   MH_STATUS status =
; 89   :     MH_CreateHook ( pTarget,

	push	DWORD PTR _ppOriginal$[ebp]
	push	DWORD PTR _pDetour$[ebp]
	push	edi
	call	_MH_CreateHook@12
	mov	esi, eax

; 90   :                       pDetour,
; 91   :                         ppOriginal );
; 92   : 
; 93   :   if (status != MH_OK && status != MH_ERROR_ALREADY_CREATED)

	test	esi, esi
	je	SHORT $LN14@SK_CreateF
	cmp	esi, 3
	jne	SHORT $LN10@SK_CreateF

; 96   :                   L"[Address: %04ph]!  (Status: \"%hs\")",
; 97   :                     pwszFuncName,
; 98   :                       pTarget,
; 99   :                         MH_StatusToString (status) );
; 100  :   }
; 101  : 
; 102  :   else if (status == MH_ERROR_ALREADY_CREATED)
; 103  :   {
; 104  :     if (MH_OK == (status = MH_RemoveHook (pTarget)))

	push	edi
	call	_MH_RemoveHook@4
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN5@SK_CreateF

; 105  :     {
; 106  :       dll_log.Log ( L"[HookEngine] Removing Corrupted Hook for '%s'... software "

	push	ebx
	push	OFFSET $SG115879
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 107  :                     L"is probably going to explode!", pwszFuncName );
; 108  : 
; 109  :       return SK_CreateFuncHook (pwszFuncName, pTarget, pDetour, ppOriginal);

	jmp	SHORT $LL8@SK_CreateF
$LN5@SK_CreateF:

; 110  :     } else
; 111  :       dll_log.Log ( L"[ Min Hook ] Failed to Uninstall Hook for '%s' "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	edi
	push	ebx
	push	OFFSET $SG115880
	jmp	SHORT $LN15@SK_CreateF
$LN10@SK_CreateF:

; 94   :   {
; 95   :     dll_log.Log ( L"[ Min Hook ] Failed to Install Hook for '%s' "

	push	esi
	call	_MH_StatusToString@4
	push	eax
	push	edi
	push	ebx
	push	OFFSET $SG115875
$LN15@SK_CreateF:
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H
$LN14@SK_CreateF:

; 112  :                     L"[Address: %04ph]!  (Status: \"%hs\")",
; 113  :                       pwszFuncName,
; 114  :                         pTarget,
; 115  :                           MH_StatusToString (status) );
; 116  :   }
; 117  : 
; 118  :   return status;

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 119  : }

	pop	ebp
	ret	16					; 00000010H
?SK_CreateFuncHook@@YG?AW4MH_STATUS@@PB_WPAX1PAPAX@Z ENDP ; SK_CreateFuncHook
_TEXT	ENDS
END
