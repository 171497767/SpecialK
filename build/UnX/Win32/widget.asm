; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\widgets\widget.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG142605 DB	'T', 00H, 'o', 00H, 'g', 00H, 'g', 00H, 'l', 00H, 'e', 00H
	DB	'K', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG142606 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
$SG148102 DB	00H
	ORG $+1
$SG142607 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'T', 00H, 'o', 00H, 'g', 00H, 'g', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'b', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'h', 00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG142608 DB	'V', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG142609 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142610 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, '(', 00H, '%', 00H, 'h', 00H, 's', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG142611 DB	'M', 00H, 'o', 00H, 'v', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG142612 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142613 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'M', 00H, 'o', 00H, 'v', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, '(', 00H, '%', 00H, 'h', 00H, 's', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG142614 DB	'R', 00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'a', 00H
	DB	'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG142615 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142616 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '(', 00H, '%', 00H
	DB	'h', 00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG142617 DB	'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'F', 00H, 'i', 00H
	DB	't', 00H, 00H, 00H
$SG142618 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142619 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'F', 00H, 'i'
	DB	00H, 't', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'h', 00H, 's', 00H, ')', 00H, 00H, 00H
$SG142620 DB	'B', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG142621 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142622 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 's', 00H, ' '
	DB	00H, 'B', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, '(', 00H, '%', 00H, 'h', 00H, 's', 00H, ')', 00H, 00H
	DB	00H
$SG142623 DB	'C', 00H, 'l', 00H, 'i', 00H, 'c', 00H, 'k', 00H, 'T', 00H
	DB	'h', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'g', 00H, 'h', 00H, 00H
	DB	00H
	ORG $+2
$SG142624 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142625 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'I', 00H, 'g', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'e'
	DB	00H, 's', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'k', 00H, 's', 00H, ' ', 00H, '(', 00H, '%', 00H, 'h', 00H, 's'
	DB	00H, ')', 00H, 00H, 00H
$SG142626 DB	'D', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 00H
	DB	00H
	ORG $+2
$SG142627 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142628 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 's', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, '.', 00H, '.', 00H, '.', 00H, ' ', 00H
	DB	'(', 00H, '%', 00H, 'h', 00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG142629 DB	'M', 00H, 'i', 00H, 'n', 00H, 'S', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 00H, 00H
$SG142630 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142631 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, ' ', 00H, '(', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, ')', 00H, 00H, 00H
$SG142632 DB	'M', 00H, 'a', 00H, 'x', 00H, 'S', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 00H, 00H
$SG142633 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142634 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'M', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, ' ', 00H, '(', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, ')', 00H, 00H, 00H
$SG142635 DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG142636 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142637 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'h', 00H, 's', 00H, ')', 00H, 00H, 00H
$SG142638 DB	'P', 00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG142639 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'.', 00H, '%', 00H, 'h', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142640 DB	'W', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'P', 00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, ' ', 00H, '(', 00H, '%', 00H, 'h', 00H
	DB	's', 00H, ')', 00H, 00H, 00H
$SG147870 DB	'###Widget_%s', 00H
	ORG $+3
$SG148077 DB	'Movable', 00H
$SG148079 DB	'Resizable', 00H
	ORG $+2
$SG148083 DB	'Auto-Fit', 00H
	ORG $+3
$SG148086 DB	'Click-Through', 00H
	ORG $+2
$SG148088 DB	'Draw Border', 00H
$SG148089 DB	'Undocked', 00H, 'North', 00H, 'South', 00H, 00H, 00H
	ORG $+1
$SG148094 DB	'Vertical Docking Anchor', 00H
$SG148095 DB	'Undocked', 00H, 'West', 00H, 'East', 00H, 00H, 00H
	ORG $+3
$SG148100 DB	'Horizonal Docking Anchor', 00H
	ORG $+3
$SG148101 DB	'Key Bindings', 00H
	ORG $+3
$SG148104 DB	'Widget Toggle', 00H
	ORG $+2
$SG148106 DB	'Widget Focus', 00H
	ORG $+3
$SG148109 DB	'%.3f', 00H
	ORG $+3
$SG148110 DB	'Widget Scale', 00H
	ORG $+3
$SG148111 DB	'  Save  ', 00H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0ImVec2@@QAE@XZ				; ImVec2::ImVec2
PUBLIC	??0ImVec2@@QAE@MM@Z				; ImVec2::ImVec2
PUBLIC	??0ImVec4@@QAE@XZ				; ImVec4::ImVec4
PUBLIC	??0?$ImVector@D@@QAE@XZ				; ImVector<char>::ImVector<char>
PUBLIC	??1?$ImVector@D@@QAE@XZ				; ImVector<char>::~ImVector<char>
PUBLIC	??0ImColor@@QAE@MMMM@Z				; ImColor::ImColor
PUBLIC	??0ImColor@@QAE@ABUImVec4@@@Z			; ImColor::ImColor
PUBLIC	??BImColor@@QBEIXZ				; ImColor::operator unsigned int
PUBLIC	??BImColor@@QBE?AUImVec4@@XZ			; ImColor::operator ImVec4
PUBLIC	?HSV@ImColor@@SA?AU1@MMMM@Z			; ImColor::HSV
PUBLIC	??0?$ImVector@G@@QAE@XZ				; ImVector<unsigned short>::ImVector<unsigned short>
PUBLIC	??1?$ImVector@G@@QAE@XZ				; ImVector<unsigned short>::~ImVector<unsigned short>
PUBLIC	??0?$ImVector@M@@QAE@XZ				; ImVector<float>::ImVector<float>
PUBLIC	??1?$ImVector@M@@QAE@XZ				; ImVector<float>::~ImVector<float>
PUBLIC	_floorf
PUBLIC	?floor@@YAMM@Z					; floor
PUBLIC	?_Hash_seq@std@@YAIPBEI@Z			; std::_Hash_seq
PUBLIC	_wmemcmp
PUBLIC	_wmemcpy
PUBLIC	_wmemmove
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?compare@?$char_traits@_W@std@@SAHQB_W0I@Z	; std::char_traits<wchar_t>::compare
PUBLIC	?length@?$char_traits@_W@std@@SAIQB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?length@?$char_traits@D@std@@SAIQBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADQADQBDI@Z	; std::char_traits<char>::copy
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ ; std::_Iterator_base0::_Getcont
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv_contents_with_alloc_always_equal
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NQBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	??0?$allocator@_W@std@@QAE@ABV01@@Z		; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	??4?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::operator=
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc
PUBLIC	?_Move_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Move_alloc
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?_Assign_rv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents
PUBLIC	?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents_with_alloc_always_equal
PUBLIC	?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
PUBLIC	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini
PUBLIC	??0?$allocator@PAViParameter@sk@@@std@@QAE@XZ	; std::allocator<sk::iParameter *>::allocator<sk::iParameter *>
PUBLIC	?deallocate@?$allocator@PAViParameter@sk@@@std@@QAEXPAPAViParameter@sk@@I@Z ; std::allocator<sk::iParameter *>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::_Wrap_alloc<std::allocator<sk::iParameter *> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAEXPAPAViParameter@sk@@I@Z ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::deallocate
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<sk::iParameter *> >::_Vector_val<std::_Simple_types<sk::iParameter *> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_second
PUBLIC	??0?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::vector<sk::iParameter *,std::allocator<sk::iParameter *> >
PUBLIC	??1?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::~vector<sk::iParameter *,std::allocator<sk::iParameter *> >
PUBLIC	?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Destroy
PUBLIC	?_Tidy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXXZ ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Tidy
PUBLIC	??0ParameterFactory@sk@@QAE@XZ			; sk::ParameterFactory::ParameterFactory
PUBLIC	??1ParameterFactory@sk@@QAE@XZ			; sk::ParameterFactory::~ParameterFactory
PUBLIC	?DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z ; SK_ImGui_WidgetRegistry::DispatchKeybinds
PUBLIC	?SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ	; SK_ImGui_WidgetRegistry::SaveConfig
PUBLIC	?run_base@SK_Widget@@QAEXXZ			; SK_Widget::run_base
PUBLIC	?draw_base@SK_Widget@@QAEXXZ			; SK_Widget::draw_base
PUBLIC	?config_base@SK_Widget@@QAEXXZ			; SK_Widget::config_base
PUBLIC	?setVisible@SK_Widget@@QAEAAV1@_N@Z		; SK_Widget::setVisible
PUBLIC	?setActive@SK_Widget@@QAEAAV1@_N@Z		; SK_Widget::setActive
PUBLIC	?setMovable@SK_Widget@@QAEAAV1@_N@Z		; SK_Widget::setMovable
PUBLIC	?setResizable@SK_Widget@@QAEAAV1@_N@Z		; SK_Widget::setResizable
PUBLIC	?setAutoFit@SK_Widget@@QAEAAV1@_N@Z		; SK_Widget::setAutoFit
PUBLIC	?setBorder@SK_Widget@@QAEAAV1@_N@Z		; SK_Widget::setBorder
PUBLIC	?setClickThrough@SK_Widget@@QAEAAV1@_N@Z	; SK_Widget::setClickThrough
PUBLIC	?setPos@SK_Widget@@QAEAAV1@AAUImVec2@@@Z	; SK_Widget::setPos
PUBLIC	?isVisible@SK_Widget@@QBE_NXZ			; SK_Widget::isVisible
PUBLIC	?isMovable@SK_Widget@@QBE_NXZ			; SK_Widget::isMovable
PUBLIC	?getSize@SK_Widget@@QBEABUImVec2@@XZ		; SK_Widget::getSize
PUBLIC	?getPos@SK_Widget@@QBEABUImVec2@@XZ		; SK_Widget::getPos
PUBLIC	?getDockingPoint@SK_Widget@@QBEABW4DockAnchor@1@XZ ; SK_Widget::getDockingPoint
PUBLIC	?getToggleKey@SK_Widget@@QBEABUSK_Keybind@@XZ	; SK_Widget::getToggleKey
PUBLIC	?load@SK_Widget@@IAEXPAUiSK_INI@@@Z		; SK_Widget::load
PUBLIC	?save@SK_Widget@@IAEXPAUiSK_INI@@@Z		; SK_Widget::save
PUBLIC	??0ImRect@@QAE@XZ				; ImRect::ImRect
PUBLIC	??0ImRect@@QAE@ABUImVec2@@0@Z			; ImRect::ImRect
PUBLIC	??0ImRect@@QAE@ABUImVec4@@@Z			; ImRect::ImRect
PUBLIC	??0ImRect@@QAE@MMMM@Z				; ImRect::ImRect
PUBLIC	?GetCenter@ImRect@@QBE?AUImVec2@@XZ		; ImRect::GetCenter
PUBLIC	?GetSize@ImRect@@QBE?AUImVec2@@XZ		; ImRect::GetSize
PUBLIC	?GetWidth@ImRect@@QBEMXZ			; ImRect::GetWidth
PUBLIC	?GetHeight@ImRect@@QBEMXZ			; ImRect::GetHeight
PUBLIC	?GetTL@ImRect@@QBE?AUImVec2@@XZ			; ImRect::GetTL
PUBLIC	?GetTR@ImRect@@QBE?AUImVec2@@XZ			; ImRect::GetTR
PUBLIC	?GetBL@ImRect@@QBE?AUImVec2@@XZ			; ImRect::GetBL
PUBLIC	?GetBR@ImRect@@QBE?AUImVec2@@XZ			; ImRect::GetBR
PUBLIC	?Contains@ImRect@@QBE_NABUImVec2@@@Z		; ImRect::Contains
PUBLIC	?Contains@ImRect@@QBE_NABU1@@Z			; ImRect::Contains
PUBLIC	?Overlaps@ImRect@@QBE_NABU1@@Z			; ImRect::Overlaps
PUBLIC	?Add@ImRect@@QAEXABUImVec2@@@Z			; ImRect::Add
PUBLIC	?Add@ImRect@@QAEXABU1@@Z			; ImRect::Add
PUBLIC	?Expand@ImRect@@QAEXM@Z				; ImRect::Expand
PUBLIC	?Expand@ImRect@@QAEXABUImVec2@@@Z		; ImRect::Expand
PUBLIC	?Translate@ImRect@@QAEXABUImVec2@@@Z		; ImRect::Translate
PUBLIC	?Clip@ImRect@@QBEXAAU1@@Z			; ImRect::Clip
PUBLIC	?Floor@ImRect@@QAEXXZ				; ImRect::Floor
PUBLIC	?GetClosestPoint@ImRect@@QBE?AUImVec2@@U2@_N@Z	; ImRect::GetClosestPoint
PUBLIC	??4ImRect@@QAEAAU0@ABU0@@Z			; ImRect::operator=
PUBLIC	??4ImRect@@QAEAAU0@$$QAU0@@Z			; ImRect::operator=
PUBLIC	??4ImGuiSimpleColumns@@QAEAAU0@ABU0@@Z		; ImGuiSimpleColumns::operator=
PUBLIC	??4ImGuiSimpleColumns@@QAEAAU0@$$QAU0@@Z	; ImGuiSimpleColumns::operator=
PUBLIC	??0ImGuiTextEditState@@QAE@XZ			; ImGuiTextEditState::ImGuiTextEditState
PUBLIC	?CursorAnimReset@ImGuiTextEditState@@QAEXXZ	; ImGuiTextEditState::CursorAnimReset
PUBLIC	?CursorClamp@ImGuiTextEditState@@QAEXXZ		; ImGuiTextEditState::CursorClamp
PUBLIC	?HasSelection@ImGuiTextEditState@@QBE_NXZ	; ImGuiTextEditState::HasSelection
PUBLIC	?ClearSelection@ImGuiTextEditState@@QAEXXZ	; ImGuiTextEditState::ClearSelection
PUBLIC	?SelectAll@ImGuiTextEditState@@QAEXXZ		; ImGuiTextEditState::SelectAll
PUBLIC	??1ImGuiTextEditState@@QAE@XZ			; ImGuiTextEditState::~ImGuiTextEditState
PUBLIC	??4ImGuiTextEditState@@QAEAAU0@ABU0@@Z		; ImGuiTextEditState::operator=
PUBLIC	??4ImGuiTextEditState@@QAEAAU0@$$QAU0@@Z	; ImGuiTextEditState::operator=
PUBLIC	??0?$ImVector@PAUImGuiWindow@@@@QAE@XZ		; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
PUBLIC	??1?$ImVector@PAUImGuiWindow@@@@QAE@XZ		; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
PUBLIC	??0?$ImVector@H@@QAE@XZ				; ImVector<int>::ImVector<int>
PUBLIC	??1?$ImVector@H@@QAE@XZ				; ImVector<int>::~ImVector<int>
PUBLIC	??0?$ImVector@UImGuiGroupData@@@@QAE@XZ		; ImVector<ImGuiGroupData>::ImVector<ImGuiGroupData>
PUBLIC	??1?$ImVector@UImGuiGroupData@@@@QAE@XZ		; ImVector<ImGuiGroupData>::~ImVector<ImGuiGroupData>
PUBLIC	??0?$ImVector@UImGuiColumnData@@@@QAE@XZ	; ImVector<ImGuiColumnData>::ImVector<ImGuiColumnData>
PUBLIC	??1?$ImVector@UImGuiColumnData@@@@QAE@XZ	; ImVector<ImGuiColumnData>::~ImVector<ImGuiColumnData>
PUBLIC	??0ImGuiDrawContext@@QAE@XZ			; ImGuiDrawContext::ImGuiDrawContext
PUBLIC	??1ImGuiDrawContext@@QAE@XZ			; ImGuiDrawContext::~ImGuiDrawContext
PUBLIC	??4ImGuiDrawContext@@QAEAAU0@ABU0@@Z		; ImGuiDrawContext::operator=
PUBLIC	??4ImGuiDrawContext@@QAEAAU0@$$QAU0@@Z		; ImGuiDrawContext::operator=
PUBLIC	?Rect@ImGuiWindow@@QBE?AUImRect@@XZ		; ImGuiWindow::Rect
PUBLIC	?CalcFontSize@ImGuiWindow@@QBEMXZ		; ImGuiWindow::CalcFontSize
PUBLIC	?TitleBarHeight@ImGuiWindow@@QBEMXZ		; ImGuiWindow::TitleBarHeight
PUBLIC	?TitleBarRect@ImGuiWindow@@QBE?AUImRect@@XZ	; ImGuiWindow::TitleBarRect
PUBLIC	?MenuBarHeight@ImGuiWindow@@QBEMXZ		; ImGuiWindow::MenuBarHeight
PUBLIC	?MenuBarRect@ImGuiWindow@@QBE?AUImRect@@XZ	; ImGuiWindow::MenuBarRect
PUBLIC	??4ImGuiWindow@@QAEAAU0@ABU0@@Z			; ImGuiWindow::operator=
PUBLIC	?GetCurrentWindow@ImGui@@YAPAUImGuiWindow@@XZ	; ImGui::GetCurrentWindow
PUBLIC	?SK_Widget_CalcClipRect@@YAXPAVSK_Widget@@_N111AAUImVec2@@2@Z ; SK_Widget_CalcClipRect
PUBLIC	??$min@M@std@@YAABMABM0@Z			; std::min<float>
PUBLIC	??$max@M@std@@YAABMABM0@Z			; std::max<float>
PUBLIC	?SK_Widget_ProcessDocking@@YAXPAVSK_Widget@@_N111@Z ; SK_Widget_ProcessDocking
PUBLIC	??0?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QAE@U?$hash@PAVSK_Widget@@@1@U?$equal_to@PAVSK_Widget@@@1@@Z ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >
PUBLIC	??R?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEIABQAVSK_Widget@@@Z ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::operator()
PUBLIC	??R?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBE_NABQAVSK_Widget@@0@Z ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::operator()
PUBLIC	?_Gethash@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABU?$hash@PAVSK_Widget@@@2@XZ ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Gethash
PUBLIC	?_Getkeyeq@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABU?$equal_to@PAVSK_Widget@@@2@XZ ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Getkeyeq
PUBLIC	?_Get_max_bucket_size@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QAEAAMXZ ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Get_max_bucket_size
PUBLIC	?_Get_max_bucket_size@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABMXZ ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Get_max_bucket_size
PUBLIC	??R?$equal_to@PAVSK_Widget@@@std@@QBE_NABQAVSK_Widget@@0@Z ; std::equal_to<SK_Widget *>::operator()
PUBLIC	??R?$_Bitwise_hash@PAVSK_Widget@@@std@@QBEIABQAVSK_Widget@@@Z ; std::_Bitwise_hash<SK_Widget *>::operator()
PUBLIC	?_Get_first@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QBEABU?$equal_to@PAVSK_Widget@@@2@XZ ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QAEAAMXZ ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QBEABMXZ ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_second
PUBLIC	?_Get_first@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QBEABU?$hash@PAVSK_Widget@@@2@XZ ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@XZ ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@XZ ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_second
PUBLIC	??0?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@@Z ; std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>
PUBLIC	?_Kfn@?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@SAABQAVSK_Widget@@ABQAV3@@Z ; std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>::_Kfn
PUBLIC	??0?$allocator@PAVSK_Widget@@@std@@QAE@XZ	; std::allocator<SK_Widget *>::allocator<SK_Widget *>
PUBLIC	?deallocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ; std::allocator<std::_List_node<SK_Widget *,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ; std::allocator<std::_List_node<SK_Widget *,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<SK_Widget *,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::max_size
PUBLIC	?_Nextnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Prevnode
PUBLIC	?_Myval@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAVSK_Widget@@PAU?$_List_node@PAVSK_Widget@@PAX@2@@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myval
PUBLIC	??1?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::~_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >
PUBLIC	?_Buyheadnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Getal
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Getal
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Get_data
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Get_data
PUBLIC	?_Myhead@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myhead
PUBLIC	?_Myhead@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABQAU?$_List_node@PAVSK_Widget@@PAX@2@XZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myhead
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Mysize
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABIXZ ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Mysize
PUBLIC	??0?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_List_val<std::_List_simple_types<SK_Widget *> >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAVSK_Widget@@PAU?$_List_node@PAVSK_Widget@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Myval
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_second
PUBLIC	?_Freenode@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@@Z ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Freenode
PUBLIC	??1?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::~_List_buy<SK_Widget *,std::allocator<SK_Widget *> >
PUBLIC	??0?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::list<SK_Widget *,std::allocator<SK_Widget *> >
PUBLIC	??1?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::~list<SK_Widget *,std::allocator<SK_Widget *> >
PUBLIC	?begin@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::begin
PUBLIC	?end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::end
PUBLIC	?_Unchecked_begin@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_end
PUBLIC	?_Unchecked_end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Make_iter
PUBLIC	?_Make_iter@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Make_iter
PUBLIC	?size@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBEIXZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::size
PUBLIC	?max_size@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBEIXZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::max_size
PUBLIC	?front@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEAAPAVSK_Widget@@XZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::front
PUBLIC	?_Unlinknode@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unlinknode
PUBLIC	?erase@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::erase
PUBLIC	?clear@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXXZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::clear
PUBLIC	?_Unchecked_splice@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_splice
PUBLIC	?_Tidy@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXXZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Tidy
PUBLIC	?_Incsize@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXI@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Incsize
PUBLIC	??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
PUBLIC	??1?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::~_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
PUBLIC	?end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::end
PUBLIC	?_Unchecked_begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_end
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_end
PUBLIC	?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Make_iter
PUBLIC	?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Make_iter
PUBLIC	?size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::size
PUBLIC	?bucket_count@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::bucket_count
PUBLIC	?load_factor@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::load_factor
PUBLIC	?max_load_factor@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::max_load_factor
PUBLIC	?erase@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::erase
PUBLIC	?count@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIABQAVSK_Widget@@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::count
PUBLIC	?equal_range@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@2@ABQAVSK_Widget@@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Destroy_if_not_nil
PUBLIC	?_Vec_lo@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_lo
PUBLIC	?_Vec_lo@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_lo
PUBLIC	?_Vec_hi@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_hi
PUBLIC	?_Vec_hi@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_hi
PUBLIC	?_Begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Begin
PUBLIC	?_Begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Begin
PUBLIC	?_End@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_End
PUBLIC	?_End@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_End
PUBLIC	?_Erase_bucket@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Erase_bucket
PUBLIC	?_Insert_bucket@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@0I@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert_bucket
PUBLIC	?_Hashval@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEIABQAVSK_Widget@@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hashval
PUBLIC	?_Init@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Init
PUBLIC	?_Check_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Check_size
PUBLIC	?_Reinsert@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Reinsert
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Max_bucket_size
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEABMXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Max_bucket_size
PUBLIC	??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::deallocate
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocate
PUBLIC	?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABU01@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::max_size
PUBLIC	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_second
PUBLIC	??0?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
PUBLIC	??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::~vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
PUBLIC	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::assign
PUBLIC	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
PUBLIC	?reserve@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::reserve
PUBLIC	?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::size
PUBLIC	?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::capacity
PUBLIC	??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@I@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::operator[]
PUBLIC	??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@I@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::operator[]
PUBLIC	?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@PAV32@IABV32@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Ufill
PUBLIC	?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@ABEII@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Calculate_growth
PUBLIC	?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Buy
PUBLIC	?_Change_array@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@II@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Change_array
PUBLIC	?_Tidy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Xlength
PUBLIC	??0?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@QAE@XZ ; std::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >
PUBLIC	??1?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@QAE@XZ ; std::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >::~unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >
PUBLIC	??$emplace@QAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@$$QBQAVSK_Widget@@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::emplace<SK_Widget * const>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABQAVSK_Widget@@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator--
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator!=
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >
PUBLIC	?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_Unchecked
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBEABQAVSK_Widget@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator!=
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?begin@?$array@PAVSK_Widget@@$04@std@@QAE?AV?$_Array_iterator@PAVSK_Widget@@$04@2@XZ ; std::array<SK_Widget *,5>::begin
PUBLIC	?end@?$array@PAVSK_Widget@@$04@std@@QAE?AV?$_Array_iterator@PAVSK_Widget@@$04@2@XZ ; std::array<SK_Widget *,5>::end
PUBLIC	??0?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QAE@PBQAVSK_Widget@@I@Z ; std::_Array_const_iterator<SK_Widget *,5>::_Array_const_iterator<SK_Widget *,5>
PUBLIC	??D?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBEABQAVSK_Widget@@XZ ; std::_Array_const_iterator<SK_Widget *,5>::operator*
PUBLIC	??E?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QAEAAV01@XZ ; std::_Array_const_iterator<SK_Widget *,5>::operator++
PUBLIC	??8?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBE_NABV01@@Z ; std::_Array_const_iterator<SK_Widget *,5>::operator==
PUBLIC	??9?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBE_NABV01@@Z ; std::_Array_const_iterator<SK_Widget *,5>::operator!=
PUBLIC	??0?$_Array_iterator@PAVSK_Widget@@$04@std@@QAE@PAPAVSK_Widget@@I@Z ; std::_Array_iterator<SK_Widget *,5>::_Array_iterator<SK_Widget *,5>
PUBLIC	??D?$_Array_iterator@PAVSK_Widget@@$04@std@@QBEAAPAVSK_Widget@@XZ ; std::_Array_iterator<SK_Widget *,5>::operator*
PUBLIC	??E?$_Array_iterator@PAVSK_Widget@@$04@std@@QAEAAV01@XZ ; std::_Array_iterator<SK_Widget *,5>::operator++
PUBLIC	??$addressof@PAVSK_Widget@@@std@@YAPAPAVSK_Widget@@AAPAV1@@Z ; std::addressof<SK_Widget *>
PUBLIC	??$distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@0@Z ; std::distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >
PUBLIC	??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
PUBLIC	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V01@X$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@1@0@Z ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,void,0>
PUBLIC	??$?0ABV?$allocator@PAVSK_Widget@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > ><std::allocator<SK_Widget *> const &>
PUBLIC	??$?0AAU?$hash@PAVSK_Widget@@@std@@U_One_then_variadic_args_t@1@AAU?$equal_to@PAVSK_Widget@@@1@M@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$hash@PAVSK_Widget@@@1@$$QAU21@AAU?$equal_to@PAVSK_Widget@@@1@$$QAM@Z ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1><std::hash<SK_Widget *> &,std::_One_then_variadic_args_t,std::equal_to<SK_Widget *> &,float>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1><>
PUBLIC	??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
PUBLIC	??$_Pocma@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z		; std::addressof<wchar_t *>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &,void>
PUBLIC	??$?0ABV?$allocator@PAVSK_Widget@@@std@@X@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_List_buy<SK_Widget *,std::allocator<SK_Widget *> ><std::allocator<SK_Widget *> const &,void>
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBEAAPAVSK_Widget@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator*
PUBLIC	??$_Destroy_range@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<sk::iParameter *>,sk::iParameter * *>
PUBLIC	??$_Unfancy@_W@std@@YAPA_WPA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>
PUBLIC	??$_Fill_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ; std::_Fill_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$addressof@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVSK_Widget@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<SK_Widget *,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<std::_List_node<SK_Widget *,void *> *>
PUBLIC	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<SK_Widget *> > const >
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >
PUBLIC	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
PUBLIC	??$destroy@PAVSK_Widget@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAVSK_Widget@@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<SK_Widget *>
PUBLIC	??$addressof@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<SK_Widget *> > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
PUBLIC	??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
PUBLIC	??$forward@QAVSK_Widget@@@std@@YA$$QBQAVSK_Widget@@ABQAV1@@Z ; std::forward<SK_Widget * const>
PUBLIC	??$emplace_front@QAVSK_Widget@@@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEX$$QBQAVSK_Widget@@@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::emplace_front<SK_Widget * const>
PUBLIC	??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$_Distance1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >
PUBLIC	??$forward@ABV?$allocator@PAVSK_Widget@@@std@@@std@@YAABV?$allocator@PAVSK_Widget@@@0@ABV10@@Z ; std::forward<std::allocator<SK_Widget *> const &>
PUBLIC	??$?0PAVSK_Widget@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> ><SK_Widget *>
PUBLIC	??$forward@AAU?$hash@PAVSK_Widget@@@std@@@std@@YAAAU?$hash@PAVSK_Widget@@@0@AAU10@@Z ; std::forward<std::hash<SK_Widget *> &>
PUBLIC	??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_One_then_variadic_args_t>
PUBLIC	??$forward@AAU?$equal_to@PAVSK_Widget@@@std@@@std@@YAAAU?$equal_to@PAVSK_Widget@@@0@AAU10@@Z ; std::forward<std::equal_to<SK_Widget *> &>
PUBLIC	??$forward@M@std@@YA$$QAMAAM@Z			; std::forward<float>
PUBLIC	??$?0AAU?$equal_to@PAVSK_Widget@@@std@@M@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$equal_to@PAVSK_Widget@@@1@$$QAM@Z ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Compressed_pair<std::equal_to<SK_Widget *>,float,1><std::equal_to<SK_Widget *> &,float>
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> >
PUBLIC	??$_Pocma@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0U?$integral_constant@_N$00@0@@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@0@ABU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>
PUBLIC	??$?0ABV?$allocator@PAVSK_Widget@@@std@@X@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > ><std::allocator<SK_Widget *> const &,void>
PUBLIC	??$_Destroy_range1@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<sk::iParameter *>,sk::iParameter * *>
PUBLIC	??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>
PUBLIC	??$_Fill_memset_is_safe@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@ABV20@@Z ; std::_Fill_memset_is_safe<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<std::_List_node<SK_Widget *,void *> *>
PUBLIC	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z		; std::forward<wchar_t * &>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$_Unfancy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unfancy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
PUBLIC	??$destroy@PAVSK_Widget@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAVSK_Widget@@@Z ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<SK_Widget *>
PUBLIC	??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>
PUBLIC	??$_Ptr_move_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Ptr_move_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$move@AAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> &>
PUBLIC	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
PUBLIC	??$?0U?$integral_constant@_N$0A@@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$0A@@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,0> >
PUBLIC	??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > &>
PUBLIC	??$_Insert@QAVSK_Widget@@@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QBQAVSK_Widget@@@Z ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Insert<SK_Widget * const>
PUBLIC	??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool>::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool><std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool,void,0>
PUBLIC	??$forward@AAPAVSK_Widget@@@std@@YAAAPAVSK_Widget@@AAPAV1@@Z ; std::forward<SK_Widget * &>
PUBLIC	??$_Buynode_if_nil@AAPAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@AAPAVSK_Widget@@V21@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Buynode_if_nil<SK_Widget * &>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>
PUBLIC	??$?0ABV?$allocator@PAVSK_Widget@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1><std::allocator<SK_Widget *> const &>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z ; std::allocator<std::_List_node<SK_Widget *,void *> >::destroy<std::_List_node<SK_Widget *,void *> *>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>
PUBLIC	??$destroy@PAVSK_Widget@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAVSK_Widget@@@Z ; std::allocator<std::_List_node<SK_Widget *,void *> >::destroy<SK_Widget *>
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z ; std::_Traits_equal<std::char_traits<wchar_t> >
PUBLIC	??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>
PUBLIC	??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$_Buynode@QAVSK_Widget@@@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@1@PAU21@0$$QBQAVSK_Widget@@@Z ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Buynode<SK_Widget * const>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$?0ABV?$allocator@PAVSK_Widget@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > ><std::allocator<SK_Widget *> const &>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>
PUBLIC	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$forward@AAPAU?$_List_node@PAVSK_Widget@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVSK_Widget@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<SK_Widget *,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>
PUBLIC	??$forward@ABQAVSK_Widget@@@std@@YAABQAVSK_Widget@@ABQAV1@@Z ; std::forward<SK_Widget * const &>
PUBLIC	??$_Buynode_if_nil@ABQAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVSK_Widget@@V21@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Buynode_if_nil<SK_Widget * const &>
PUBLIC	??$construct@PAVSK_Widget@@QAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAVSK_Widget@@$$QBQAV2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<SK_Widget *,SK_Widget * const>
PUBLIC	??$?0PAVSK_Widget@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::allocator<std::_List_node<SK_Widget *,void *> >::allocator<std::_List_node<SK_Widget *,void *> ><SK_Widget *>
PUBLIC	??$_Destroy1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@U?$integral_constant@_N$00@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Destroy1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV41@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>
PUBLIC	??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV41@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
PUBLIC	??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<SK_Widget *,void *> >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>
PUBLIC	??$construct@PAVSK_Widget@@QAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAVSK_Widget@@$$QBQAV3@@Z ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<SK_Widget *,SK_Widget * const>
PUBLIC	??$construct@PAVSK_Widget@@QAV1@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAVSK_Widget@@$$QBQAV2@@Z ; std::allocator<std::_List_node<SK_Widget *,void *> >::construct<SK_Widget *,SK_Widget * const>
PUBLIC	??_R0?AViParameter@sk@@@8			; sk::iParameter `RTTI Type Descriptor'
PUBLIC	?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A ; SK_Widget_ParameterFactory
PUBLIC	??_R0?AVParameterStringW@sk@@@8			; sk::ParameterStringW `RTTI Type Descriptor'
PUBLIC	??_R0?AVParameterBool@sk@@@8			; sk::ParameterBool `RTTI Type Descriptor'
PUBLIC	??_R0?AVParameterInt@sk@@@8			; sk::ParameterInt `RTTI Type Descriptor'
PUBLIC	??_R0?AVParameterVec2f@sk@@@8			; sk::ParameterVec2f `RTTI Type Descriptor'
PUBLIC	??_C@_03OIJOKPOL@?$CD?$CD?$CD?$AA@		; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	__real@3b03126f
PUBLIC	__real@3b83126f
PUBLIC	__real@3e257eaa
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fd54fdf3b645a1d
PUBLIC	__real@433e0000
PUBLIC	__real@43d20000
PUBLIC	__real@4b000000
PUBLIC	__real@80000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__memmove:PROC
EXTRN	?GetIO@ImGui@@YAAAUImGuiIO@@XZ:PROC		; ImGui::GetIO
EXTRN	?GetStyle@ImGui@@YAAAUImGuiStyle@@XZ:PROC	; ImGui::GetStyle
EXTRN	?Begin@ImGui@@YA_NPBDPA_NH@Z:PROC		; ImGui::Begin
EXTRN	?End@ImGui@@YAXXZ:PROC				; ImGui::End
EXTRN	?GetWindowDrawList@ImGui@@YAPAUImDrawList@@XZ:PROC ; ImGui::GetWindowDrawList
EXTRN	?GetWindowPos@ImGui@@YA?AUImVec2@@XZ:PROC	; ImGui::GetWindowPos
EXTRN	?GetWindowSize@ImGui@@YA?AUImVec2@@XZ:PROC	; ImGui::GetWindowSize
EXTRN	?GetWindowWidth@ImGui@@YAMXZ:PROC		; ImGui::GetWindowWidth
EXTRN	?SetWindowFontScale@ImGui@@YAXM@Z:PROC		; ImGui::SetWindowFontScale
EXTRN	?SetNextWindowPos@ImGui@@YAXABUImVec2@@H@Z:PROC	; ImGui::SetNextWindowPos
EXTRN	?SetNextWindowSize@ImGui@@YAXABUImVec2@@H@Z:PROC ; ImGui::SetNextWindowSize
EXTRN	?SetWindowPos@ImGui@@YAXABUImVec2@@H@Z:PROC	; ImGui::SetWindowPos
EXTRN	?SetWindowFocus@ImGui@@YAXXZ:PROC		; ImGui::SetWindowFocus
EXTRN	?PushFont@ImGui@@YAXPAUImFont@@@Z:PROC		; ImGui::PushFont
EXTRN	?PopFont@ImGui@@YAXXZ:PROC			; ImGui::PopFont
EXTRN	?GetFont@ImGui@@YAPAUImFont@@XZ:PROC		; ImGui::GetFont
EXTRN	?PushItemWidth@ImGui@@YAXM@Z:PROC		; ImGui::PushItemWidth
EXTRN	?PopItemWidth@ImGui@@YAXXZ:PROC			; ImGui::PopItemWidth
EXTRN	?Separator@ImGui@@YAXXZ:PROC			; ImGui::Separator
EXTRN	?SameLine@ImGui@@YAXMM@Z:PROC			; ImGui::SameLine
EXTRN	?BeginGroup@ImGui@@YAXXZ:PROC			; ImGui::BeginGroup
EXTRN	?EndGroup@ImGui@@YAXXZ:PROC			; ImGui::EndGroup
EXTRN	?Text@ImGui@@YAXPBDZZ:PROC			; ImGui::Text
EXTRN	?Button@ImGui@@YA_NPBDABUImVec2@@@Z:PROC	; ImGui::Button
EXTRN	?Checkbox@ImGui@@YA_NPBDPA_N@Z:PROC		; ImGui::Checkbox
EXTRN	?Combo@ImGui@@YA_NPBDPAH0H@Z:PROC		; ImGui::Combo
EXTRN	?SliderFloat@ImGui@@YA_NPBDPAMMM0M@Z:PROC	; ImGui::SliderFloat
EXTRN	?TreePush@ImGui@@YAXPBD@Z:PROC			; ImGui::TreePush
EXTRN	?TreePop@ImGui@@YAXXZ:PROC			; ImGui::TreePop
EXTRN	?Selectable@ImGui@@YA_NPBD_NHABUImVec2@@@Z:PROC	; ImGui::Selectable
EXTRN	?OpenPopup@ImGui@@YAXPBD@Z:PROC			; ImGui::OpenPopup
EXTRN	?IsWindowFocused@ImGui@@YA_NXZ:PROC		; ImGui::IsWindowFocused
EXTRN	?IsWindowHovered@ImGui@@YA_NXZ:PROC		; ImGui::IsWindowHovered
EXTRN	?ColorConvertFloat4ToU32@ImGui@@YAIABUImVec4@@@Z:PROC ; ImGui::ColorConvertFloat4ToU32
EXTRN	?ColorConvertHSVtoRGB@ImGui@@YAXMMMAAM00@Z:PROC	; ImGui::ColorConvertHSVtoRGB
EXTRN	?IsMouseDragging@ImGui@@YA_NHM@Z:PROC		; ImGui::IsMouseDragging
EXTRN	?IsMouseHoveringRect@ImGui@@YA_NABUImVec2@@0_N@Z:PROC ; ImGui::IsMouseHoveringRect
EXTRN	?IsNavDragging@ImGui@@YA_NHM@Z:PROC		; ImGui::IsNavDragging
EXTRN	?MemFree@ImGui@@YAXPAX@Z:PROC			; ImGui::MemFree
EXTRN	?GetCurrentContext@ImGui@@YAPAUImGuiContext@@XZ:PROC ; ImGui::GetCurrentContext
EXTRN	?PushClipRectFullScreen@ImDrawList@@QAEXXZ:PROC	; ImDrawList::PushClipRectFullScreen
EXTRN	?PopClipRect@ImDrawList@@QAEXXZ:PROC		; ImDrawList::PopClipRect
EXTRN	?AddRect@ImDrawList@@QAEXABUImVec2@@0IMHM@Z:PROC ; ImDrawList::AddRect
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	?parse@SK_Keybind@@QAEXXZ:PROC			; SK_Keybind::parse
EXTRN	??$create_parameter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z:PROC ; sk::ParameterFactory::create_parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
EXTRN	??$create_parameter@_N@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z:PROC ; sk::ParameterFactory::create_parameter<bool>
EXTRN	??$create_parameter@H@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z:PROC ; sk::ParameterFactory::create_parameter<int>
EXTRN	??$create_parameter@UImVec2@@@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z:PROC ; sk::ParameterFactory::create_parameter<ImVec2>
EXTRN	?SK_WideCharToUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z:PROC ; SK_WideCharToUTF8
EXTRN	?SK_FormatString@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBDZZ:PROC ; SK_FormatString
EXTRN	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ:PROC ; SK_FormatStringW
EXTRN	?SK_ImGui_IsWindowRightClicked@@YA_NAAUImGuiIO@@@Z:PROC ; SK_ImGui_IsWindowRightClicked
EXTRN	?SK_ImGui_KeybindDialog@@YGXPAUSK_Keybind@@@Z:PROC ; SK_ImGui_KeybindDialog
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?SK_ImGui_Visible@@3_NA:BYTE			; SK_ImGui_Visible
EXTRN	?SK_ReShade_Visible@@3_NA:BYTE			; SK_ReShade_Visible
EXTRN	?nav_usable@@3_NA:BYTE				; nav_usable
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?SK_ImGui_Widgets@@3USK_ImGui_WidgetRegistry@@A:BYTE ; SK_ImGui_Widgets
EXTRN	?osd_ini@@3PAUiSK_INI@@A:DWORD			; osd_ini
EXTRN	?GImGui@@3PAUImGuiContext@@A:DWORD		; GImGui
EXTRN	?SK_ControlPanel_Activated@@3_NA:BYTE		; SK_ControlPanel_Activated
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A DB 0cH DUP (?) ; SK_Widget_ParameterFactory
_BSS	ENDS
;	COMDAT ?initialized@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A
_BSS	SEGMENT
?initialized@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A DB 020H DUP (?) ; `SK_Widget::draw_base'::`2'::initialized
_BSS	ENDS
;	COMDAT ?$TSS0@?1??draw_base@SK_Widget@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??draw_base@SK_Widget@@QAEXXZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',SK_Widget::raw_base,unsigned char * const,void,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?last_state_was_config@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A
_BSS	SEGMENT
?last_state_was_config@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A DB 020H DUP (?) ; `SK_Widget::draw_base'::`2'::last_state_was_config
_BSS	ENDS
;	COMDAT ?$TSS1@?1??draw_base@SK_Widget@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS1@?1??draw_base@SK_Widget@@QAEXXZ@4HA DD 01H DUP (?) ; TSS1<`template-parameter-2',SK_Widget::raw_base,unsigned char * const,void,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?focus_widget@?1??draw_base@SK_Widget@@QAEXXZ@4PAV2@A
_BSS	SEGMENT
?focus_widget@?1??draw_base@SK_Widget@@QAEXXZ@4PAV2@A DD 01H DUP (?) ; `SK_Widget::draw_base'::`2'::focus_widget
_BSS	ENDS
;	COMDAT ?dwLastWrite@?1??save@SK_Widget@@IAEXPAUiSK_INI@@@Z@4KA
_BSS	SEGMENT
?dwLastWrite@?1??save@SK_Widget@@IAEXPAUiSK_INI@@@Z@4KA DD 01H DUP (?) ; `SK_Widget::save'::`2'::dwLastWrite
_BSS	ENDS
;	COMDAT ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA
_BSS	SEGMENT
?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA DB 01H DUP (?) ; `SK_Widget::config_base'::`2'::changed
_BSS	ENDS
;	COMDAT ?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A
_BSS	SEGMENT
?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A DB 014H DUP (?) ; `SK_ImGui_WidgetRegistry::DispatchKeybinds'::`2'::widgets
_BSS	ENDS
;	COMDAT ?$TSS0@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',SK_ImGui_WidgetRegistry::spatchKeybinds,unsigned char * const,int,int,int,int,unsigned char>
_BSS	ENDS
;	COMDAT ?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A
_BSS	SEGMENT
?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A DB 014H DUP (?) ; `SK_ImGui_WidgetRegistry::SaveConfig'::`2'::widgets
_BSS	ENDS
;	COMDAT ?$TSS0@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',SK_ImGui_WidgetRegistry::eConfig,unsigned char * const,int,void,int, ?? &>
_BSS	ENDS
CRT$XCU	SEGMENT
?SK_Widget_ParameterFactory$initializer$@@3P6AXXZA DD FLAT:??__ESK_Widget_ParameterFactory@@YAXXZ ; SK_Widget_ParameterFactory$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@80000000
CONST	SEGMENT
__real@80000000 DD 080000000r			; -0
CONST	ENDS
;	COMDAT __real@4b000000
CONST	SEGMENT
__real@4b000000 DD 04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT __real@43d20000
CONST	SEGMENT
__real@43d20000 DD 043d20000r			; 420
CONST	ENDS
;	COMDAT __real@433e0000
CONST	SEGMENT
__real@433e0000 DD 0433e0000r			; 190
CONST	ENDS
;	COMDAT __real@3fd54fdf3b645a1d
CONST	SEGMENT
__real@3fd54fdf3b645a1d DQ 03fd54fdf3b645a1dr	; 0.333
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e257eaa
CONST	SEGMENT
__real@3e257eaa DD 03e257eaar			; 0.161616
CONST	ENDS
;	COMDAT __real@3b83126f
CONST	SEGMENT
__real@3b83126f DD 03b83126fr			; 0.004
CONST	ENDS
;	COMDAT __real@3b03126f
CONST	SEGMENT
__real@3b03126f DD 03b03126fr			; 0.002
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OIJOKPOL@?$CD?$CD?$CD?$AA@
CONST	SEGMENT
??_C@_03OIJOKPOL@?$CD?$CD?$CD?$AA@ DB '###', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R0?AVParameterVec2f@sk@@@8
data$r	SEGMENT
??_R0?AVParameterVec2f@sk@@@8 DD FLAT:??_7type_info@@6B@ ; sk::ParameterVec2f `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParameterVec2f@sk@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVParameterInt@sk@@@8
data$r	SEGMENT
??_R0?AVParameterInt@sk@@@8 DD FLAT:??_7type_info@@6B@	; sk::ParameterInt `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParameterInt@sk@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVParameterBool@sk@@@8
data$r	SEGMENT
??_R0?AVParameterBool@sk@@@8 DD FLAT:??_7type_info@@6B@	; sk::ParameterBool `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParameterBool@sk@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVParameterStringW@sk@@@8
data$r	SEGMENT
??_R0?AVParameterStringW@sk@@@8 DD FLAT:??_7type_info@@6B@ ; sk::ParameterStringW `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParameterStringW@sk@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AViParameter@sk@@@8
data$r	SEGMENT
??_R0?AViParameter@sk@@@8 DD FLAT:??_7type_info@@6B@	; sk::iParameter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AViParameter@sk@@', 00H
data$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z$91 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z$2
__tryblocktable$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z$91
__unwindtable$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z$91 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z$2
__tryblocktable$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z$91
__unwindtable$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z$3
__ehfuncinfo$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z$49 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z$0
__unwindtable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z$49
__ehfuncinfo$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ImGuiDrawContext@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1ImGuiDrawContext@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__unwindtable$??1ImGuiDrawContext@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ImVector@UImGuiColumnData@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ImVector@UImGuiGroupData@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ImVector@H@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ImVector@PAUImGuiWindow@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ImGuiTextEditState@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1ImGuiTextEditState@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ImGuiTextEditState@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z$0
__unwindtable$?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z$0
__unwindtable$?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z$0
__unwindtable$?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z$0
__unwindtable$?draw_base@SK_Widget@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?draw_base@SK_Widget@@QAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?draw_base@SK_Widget@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?draw_base@SK_Widget@@QAEXXZ$2
__ehfuncinfo$?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?draw_base@SK_Widget@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?draw_base@SK_Widget@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?run_base@SK_Widget@@QAEXXZ DD 019930522H
	DD	018H
	DD	FLAT:__unwindtable$?run_base@SK_Widget@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?run_base@SK_Widget@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$16
	DD	010H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$17
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$18
	DD	012H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$19
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$20
	DD	014H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$21
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$22
	DD	016H
	DD	FLAT:__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$23
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z$1
__ehfuncinfo$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z$0
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z$18
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ImVector@M@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ImVector@G@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ImVector@D@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAVSK_Widget@@QAV1@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAVSK_Widget@@$$QBQAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVSK_Widget@@QAV1@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAVSK_Widget@@$$QBQAV2@@Z PROC ; std::allocator<std::_List_node<SK_Widget *,void *> >::construct<SK_Widget *,SK_Widget * const>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAVSK_Widget@@QAV1@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAVSK_Widget@@$$QBQAV2@@Z ENDP ; std::allocator<std::_List_node<SK_Widget *,void *> >::construct<SK_Widget *,SK_Widget * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAVSK_Widget@@QAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAVSK_Widget@@$$QBQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVSK_Widget@@QAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAVSK_Widget@@$$QBQAV3@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<SK_Widget *,SK_Widget * const>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAVSK_Widget@@QAV1@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAVSK_Widget@@$$QBQAV3@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<SK_Widget *,SK_Widget * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<SK_Widget *,void *> >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<SK_Widget *,void *> >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV41@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV41@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 709  : 		{	// construct _Ty(_Types...) at _Ptr, default version

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Construct1
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@Construct1:

; 711  : 			_Ty(_STD forward<_Types>(_Args)...);
; 712  : 		}

	pop	ebp
	ret	0
??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV41@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV41@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV41@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>, COMDAT

; 709  : 		{	// construct _Ty(_Types...) at _Ptr, default version

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Construct1
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@Construct1:

; 711  : 			_Ty(_STD forward<_Types>(_Args)...);
; 712  : 		}

	pop	ebp
	ret	0
??$_Construct1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXU?$integral_constant@_N$00@1@AAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV41@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Construct1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@U?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Destroy1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@U?$integral_constant@_N$00@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Destroy1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 734  : 		_Ptr->~_Ty();
; 735  : 		}

	ret	0
??$_Destroy1@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@U?$integral_constant@_N$00@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Destroy1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0PAVSK_Widget@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAVSK_Widget@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::allocator<std::_List_node<SK_Widget *,void *> >::allocator<std::_List_node<SK_Widget *,void *> ><SK_Widget *>, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0PAVSK_Widget@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::allocator<std::_List_node<SK_Widget *,void *> >::allocator<std::_List_node<SK_Widget *,void *> ><SK_Widget *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAVSK_Widget@@QAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAVSK_Widget@@$$QBQAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVSK_Widget@@QAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAVSK_Widget@@$$QBQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<SK_Widget *,SK_Widget * const>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAVSK_Widget@@QAV1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAVSK_Widget@@$$QBQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<SK_Widget *,SK_Widget * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Buynode_if_nil@ABQAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVSK_Widget@@V21@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
__Plist$ = 16						; size = 4
??$_Buynode_if_nil@ABQAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVSK_Widget@@V21@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Buynode_if_nil<SK_Widget * const &>, COMDAT
; _this$ = ecx

; 738  : 		{	// node exists, just return it

	npad	2
	push	ebp
	mov	ebp, esp

; 739  : 		return (_Plist);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx

; 740  : 		}

	pop	ebp
	ret	12					; 0000000cH
??$_Buynode_if_nil@ABQAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABQAVSK_Widget@@V21@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Buynode_if_nil<SK_Widget * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABQAVSK_Widget@@@std@@YAABQAVSK_Widget@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVSK_Widget@@@std@@YAABQAVSK_Widget@@ABQAV1@@Z PROC ; std::forward<SK_Widget * const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABQAVSK_Widget@@@std@@YAABQAVSK_Widget@@ABQAV1@@Z ENDP ; std::forward<SK_Widget * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@PAVSK_Widget@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVSK_Widget@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@PAVSK_Widget@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVSK_Widget@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<SK_Widget *,void *> * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@PAVSK_Widget@@PAX@std@@@std@@YAAAPAU?$_List_node@PAVSK_Widget@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<SK_Widget *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 726  : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 727  : 		_Construct1(_Uses_default_construct_t<_Unwrap_alloc_t<_Alloc>, _Ty *, _Types...>(),
; 728  : 			_Al, _Ptr, _STD forward<_Types>(_Args)...);
; 729  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z PROC ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ENDP ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>, COMDAT

; 726  : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 727  : 		_Construct1(_Uses_default_construct_t<_Unwrap_alloc_t<_Alloc>, _Ty *, _Types...>(),
; 728  : 			_Al, _Ptr, _STD forward<_Types>(_Args)...);
; 729  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 746  : 		_Destroy1(_Al, _Ptr, _Uses_default_destroy_t<_Unwrap_alloc_t<_Alloc>, _Ty *>());
; 747  : 		}

	ret	0
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABV?$allocator@PAVSK_Widget@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > ><std::allocator<SK_Widget *> const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > ><std::allocator<SK_Widget *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$_Buynode@QAVSK_Widget@@@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@1@PAU21@0$$QBQAVSK_Widget@@@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
??$_Buynode@QAVSK_Widget@@@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@1@PAU21@0$$QBQAVSK_Widget@@@Z PROC ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Buynode<SK_Widget * const>, COMDAT
; _this$ = ecx

; 847  : 		{	// allocate a node and set links and value

	npad	2
	push	ebp
	mov	ebp, esp

; 848  : 		_Nodeptr _Pnode = this->_Buynode0(_Next, _Prev);

	push	DWORD PTR __Prev$[ebp]
	push	DWORD PTR __Next$[ebp]
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	edx, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	edx, edx
	je	SHORT $LN36@Buynode
	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], ecx
$LN36@Buynode:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 860  : 		}

	pop	ebp
	ret	12					; 0000000cH
??$_Buynode@QAVSK_Widget@@@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@1@PAU21@0$$QBQAVSK_Widget@@@Z ENDP ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Buynode<SK_Widget * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Plist$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T2 = 8							; size = 4
___$ReturnUdt$ = 8					; size = 4
tv1489 = 12						; size = 4
$T3 = 12						; size = 4
__Val$ = 12						; size = 4
__Pnode$ = 16						; size = 4
??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 761  : 		{	// try to insert existing node with value _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edi, DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 761  : 		{	// try to insert existing node with value _Val

	mov	ebx, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ebx

; 762  : 		size_type _Bucket;
; 763  : 		_Unchecked_iterator _Where;
; 764  : 
; 765  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi]
	xor	eax, -2128831035			; 811c9dc5H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	esi, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+2]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edi+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [ebx+24]
	and	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [esi+ecx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	edx, DWORD PTR [ecx*8]
	mov	DWORD PTR tv1489[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN43@Insert

; 847  : 			return (_Unchecked_end());

	mov	esi, DWORD PTR [ebx+4]
	jmp	SHORT $LN44@Insert
$LN43@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [esi+edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	esi, DWORD PTR [esi]
$LN44@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	je	SHORT $LN3@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [edi]
	npad	1
$LL2@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	esi, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	cmp	ecx, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 772  : 			if (_Traitsobj(_Traits::_Kfn(_Val),

	je	SHORT $LN6@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	jne	SHORT $LL2@Insert
$LN3@Insert:

; 739  : 		return (_Plist);

	mov	edi, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Plist$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [edi]

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 799  : 		if (_Where != ++_Next)	// move element into place

	je	SHORT $LN10@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edi+4]

; 1910 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =

	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [eax+4]

; 1912 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =

	mov	DWORD PTR [ecx], esi

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [esi+4]

; 1914 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =

	mov	DWORD PTR [ecx], edi

; 1915 : 			_First._Mynode();
; 1916 : 
; 1917 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	mov	edx, DWORD PTR [esi+4]

; 1918 : 		this->_Prevnode(_Where._Mynode()) =

	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], ecx

; 1919 : 			this->_Prevnode(_Last._Mynode());
; 1920 : 		this->_Prevnode(_Last._Mynode()) =

	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx

; 1921 : 			this->_Prevnode(_First._Mynode());
; 1922 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	mov	DWORD PTR [edi+4], edx
	mov	edx, DWORD PTR tv1489[ebp]
$LN10@Insert:

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR [ebx+12]
	add	ecx, edx
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 883  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN453@Insert

; 884  : 			{	// make bucket non-empty
; 885  : 			_Vec_lo(_Bucket) = _Plist;

	mov	DWORD PTR [ecx], edi

; 886  : 			_Vec_hi(_Bucket) = _Plist;

	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [eax+edx+4], edi

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jmp	SHORT $LN457@Insert
$LN6@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 96   : 		return (_Ptr);

	mov	edx, DWORD PTR __Pnode$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edx+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN453@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jne	SHORT $LN455@Insert

; 889  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	DWORD PTR [ecx], edi

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	jmp	SHORT $LN457@Insert
$LN455@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	je	SHORT $LN457@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx+edx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+edx+4], eax
$LN457@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 805  : 		_Check_size();

	mov	ecx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Check_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Check_size
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z$2:

; 806  : 		_CATCH_ALL
; 807  : 		erase(_Make_iter(_Plist));

	push	DWORD PTR __Plist$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Make_iter
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?erase@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::erase

; 808  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN639@Insert:
$LN638@Insert:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_List_node@PAVSK_Widget@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::construct<std::_List_node<SK_Widget *,void *> *,std::_List_node<SK_Widget *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z PROC ; std::_Traits_equal<std::char_traits<wchar_t> >, COMDAT

; 24   : 	{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	esi, DWORD PTR __Left_size$[ebp]
	cmp	esi, DWORD PTR __Right_size$[ebp]
	jne	SHORT $LN3@Traits_equ
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Left$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN19@Traits_equ
$LL11@Traits_equ:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	jne	SHORT $LN15@Traits_equ

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	edx, 2
	add	ecx, 2
	sub	esi, 1
	jne	SHORT $LL11@Traits_equ
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	al, 1
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
$LN15@Traits_equ:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	movzx	eax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	jne	SHORT $LN3@Traits_equ
$LN19@Traits_equ:
	mov	al, 1
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
$LN3@Traits_equ:

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	xor	al, al
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z ENDP ; std::_Traits_equal<std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAVSK_Widget@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAVSK_Widget@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAVSK_Widget@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAVSK_Widget@@@Z PROC ; std::allocator<std::_List_node<SK_Widget *,void *> >::destroy<SK_Widget *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAVSK_Widget@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAVSK_Widget@@@Z ENDP ; std::allocator<std::_List_node<SK_Widget *,void *> >::destroy<SK_Widget *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 710  : 		::new (static_cast<void *>(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z PROC ; std::allocator<std::_List_node<SK_Widget *,void *> >::destroy<std::_List_node<SK_Widget *,void *> *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<SK_Widget *,void *> >::destroy<std::_List_node<SK_Widget *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABV?$allocator@PAVSK_Widget@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1><std::allocator<SK_Widget *> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 524  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0ABV?$allocator@PAVSK_Widget@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1><std::allocator<SK_Widget *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Buynode_if_nil@AAPAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@AAPAVSK_Widget@@V21@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
__Plist$ = 16						; size = 4
??$_Buynode_if_nil@AAPAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@AAPAVSK_Widget@@V21@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Buynode_if_nil<SK_Widget * &>, COMDAT
; _this$ = ecx

; 738  : 		{	// node exists, just return it

	npad	2
	push	ebp
	mov	ebp, esp

; 739  : 		return (_Plist);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx

; 740  : 		}

	pop	ebp
	ret	12					; 0000000cH
??$_Buynode_if_nil@AAPAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@AAPAVSK_Widget@@V21@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Buynode_if_nil<SK_Widget * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAVSK_Widget@@@std@@YAAAPAVSK_Widget@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVSK_Widget@@@std@@YAAAPAVSK_Widget@@AAPAV1@@Z PROC ; std::forward<SK_Widget * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAVSK_Widget@@@std@@YAAAPAVSK_Widget@@AAPAV1@@Z ENDP ; std::forward<SK_Widget * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool>::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool><std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool>::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool><std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$_Insert@QAVSK_Widget@@@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QBQAVSK_Widget@@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Insert@QAVSK_Widget@@@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QBQAVSK_Widget@@@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Insert<SK_Widget * const>, COMDAT
; _this$ = ecx

; 1082 : 		{	// insert element at _Where

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	esi, DWORD PTR __Where$[ebp]
	push	edi

; 1083 : 		_Nodeptr _Pnode = _Where._Mynode();
; 1084 : 		_Nodeptr _Newnode =
; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_0>$[ebp]
	mov	edi, ecx
	push	DWORD PTR [esi+4]
	push	esi
	call	??$_Buynode@QAVSK_Widget@@@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@1@PAU21@0$$QBQAVSK_Widget@@@Z ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Buynode<SK_Widget * const>
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [edi+4]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN13@Insert

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN66@Insert:
$LN13@Insert:

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [edi+4], eax

; 1086 : 				_STD forward<_Valty>(_Val)...);
; 1087 : 		_Incsize(1);
; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [esi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]
	pop	edi
	pop	esi

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 1090 : 		}

	pop	ebp
	ret	8
$LN65@Insert:
??$_Insert@QAVSK_Widget@@@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@$$QBQAVSK_Widget@@@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Insert<SK_Widget * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>, COMDAT

; 480  : 	{	// reset checked from unchecked, generic

	npad	2
	push	ebp
	mov	ebp, esp

; 481  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 482  : 	return (_Dest);
; 483  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$0A@@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$0A@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$integral_constant@_N$0A@@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$0A@@1@@Z PROC ; std::_Any_tag::_Any_tag<std::integral_constant<bool,0> >, COMDAT
; _this$ = ecx

; 556  : 		constexpr _Any_tag(_Ty&&) _NOEXCEPT {}

	mov	eax, ecx
	ret	4
??$?0U?$integral_constant@_N$0A@@std@@@_Any_tag@std@@QAE@$$QAU?$integral_constant@_N$0A@@1@@Z ENDP ; std::_Any_tag::_Any_tag<std::integral_constant<bool,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >, COMDAT

; 135  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 139  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	mov	eax, DWORD PTR __Dest$[ebp]
	xor	ecx, ecx
	push	esi
	mov	esi, DWORD PTR __Last$[ebp]
	xor	edx, edx
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
	sub	esi, edi
	add	esi, 3
	shr	esi, 2
	cmp	edi, DWORD PTR __Last$[ebp]
	cmova	esi, ecx
	test	esi, esi
	je	SHORT $LN3@Uninitiali
	sub	edi, eax
$LL4@Uninitiali:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 710  : 		::new (static_cast<void *>(_Ptr))

	test	eax, eax
	je	SHORT $LN2@Uninitiali
	mov	ecx, DWORD PTR [edi+eax]
	mov	DWORD PTR [eax], ecx
$LN2@Uninitiali:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 139  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	inc	edx
	add	eax, 4
	cmp	edx, esi
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:
	pop	edi
	pop	esi

; 140  : 		{
; 141  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));
; 142  : 		}
; 143  : 
; 144  : 	_CATCH_ALL
; 145  : 	_Destroy_range(_Next, _Dest, _Al);
; 146  : 	_RERAISE;
; 147  : 	_CATCH_END
; 148  : 
; 149  : 	return (_Dest);
; 150  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z PROC ; std::move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ENDP ; std::move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Ptr_move_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_move_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0@Z PROC ; std::_Ptr_move_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 892  : 	{	// return pointer move optimization category for pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 893  : 	return {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 894  : 	}

	pop	ebp
	ret	0
??$_Ptr_move_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0@Z ENDP ; std::_Ptr_move_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z PROC ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>, COMDAT

; 450  : 	{	// construct unchecked from checked, generic

	npad	2
	push	ebp
	mov	ebp, esp

; 451  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 452  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ENDP ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAVSK_Widget@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAVSK_Widget@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAVSK_Widget@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAVSK_Widget@@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<SK_Widget *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAVSK_Widget@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAVSK_Widget@@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<SK_Widget *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >, COMDAT

; 184  : 	{	// copy _Count copies of _Val to raw _First, using _Al, no special optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 188  : 	for (; 0 < _Count; --_Count, (void)++_First)

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	test	edx, edx
	je	SHORT $LN3@Uninit_all
	push	esi
	mov	esi, DWORD PTR __Val$[ebp]
$LL4@Uninit_all:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 710  : 		::new (static_cast<void *>(_Ptr))

	test	eax, eax
	je	SHORT $LN2@Uninit_all
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
$LN2@Uninit_all:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 188  : 	for (; 0 < _Count; --_Count, (void)++_First)

	add	eax, 4
	sub	edx, 1
	jne	SHORT $LL4@Uninit_all
	pop	esi
$LN3@Uninit_all:

; 189  : 		{
; 190  : 		_Al.construct(_Unfancy(_First), _Val);
; 191  : 		}
; 192  : 
; 193  : 	_CATCH_ALL
; 194  : 	_Destroy_range(_Next, _First, _Al);
; 195  : 	_RERAISE;
; 196  : 	_CATCH_END
; 197  : 
; 198  : 	return (_First);
; 199  : 	}

	pop	ebp
	ret	0
??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z PROC ; std::_Unfancy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ENDP ; std::_Unfancy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z PROC		; std::forward<wchar_t * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<std::_List_node<SK_Widget *,void *> *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@1@PAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<std::_List_node<SK_Widget *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
tv278 = 12						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 2688 : 	{	// copy _Val through [_First, _Last), no special optimization

	npad	2
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR __Last$[ebp]
	xor	edx, edx
	push	ebx
	mov	ebx, DWORD PTR __First$[ebp]
	sub	ecx, ebx
	add	ecx, 3
	shr	ecx, 2
	push	esi
	xor	esi, esi
	cmp	ebx, DWORD PTR __Last$[ebp]
	cmova	ecx, esi
	mov	DWORD PTR tv278[ebp], ecx

; 2689 : 	for (; _First != _Last; ++_First)

	test	ecx, ecx
	je	SHORT $LN3@Fill_unche

; 2690 : 		*_First = _Val;

	mov	esi, DWORD PTR __Val$[ebp]
	push	edi
	cmp	ecx, 4
	jb	SHORT $LN9@Fill_unche
	mov	edi, DWORD PTR [esi]
	cmp	ebx, esi
	ja	SHORT $LN10@Fill_unche
	lea	eax, DWORD PTR [ebx-4]
	lea	eax, DWORD PTR [eax+ecx*4]
	cmp	eax, esi
	jae	SHORT $LN9@Fill_unche
$LN10@Fill_unche:
	and	ecx, -4					; fffffffcH
$LL4@Fill_unche:

; 2689 : 	for (; _First != _Last; ++_First)

	add	edx, 4
	cmp	edx, ecx
	jne	SHORT $LL4@Fill_unche

; 2690 : 		*_First = _Val;

	lea	esi, DWORD PTR [ecx+3]
	mov	eax, edi
	and	esi, -4					; fffffffcH
	mov	edi, ebx
	shl	esi, 2
	mov	ecx, esi
	shr	ecx, 2
	add	ebx, esi
	mov	esi, DWORD PTR __Val$[ebp]
	rep stosd
	mov	ecx, DWORD PTR tv278[ebp]
$LN9@Fill_unche:

; 2689 : 	for (; _First != _Last; ++_First)

	pop	edi
	cmp	edx, ecx
	je	SHORT $LN3@Fill_unche
	npad	6
$LL8@Fill_unche:

; 2690 : 		*_First = _Val;

	mov	eax, DWORD PTR [esi]
	lea	ebx, DWORD PTR [ebx+4]
	inc	edx
	mov	DWORD PTR [ebx-4], eax
	cmp	edx, ecx
	jne	SHORT $LL8@Fill_unche
$LN3@Fill_unche:
	pop	esi
	pop	ebx

; 2691 : 	}

	pop	ebp
	ret	0
??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_memset_is_safe@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@ABV20@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Fill_memset_is_safe@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@ABV20@@Z PROC ; std::_Fill_memset_is_safe<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 2682 : 	return {};

	xor	al, al

; 2683 : 	}

	ret	0
??$_Fill_memset_is_safe@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU?$integral_constant@_N$0A@@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@ABV20@@Z ENDP ; std::_Fill_memset_is_safe<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>, COMDAT

; 1200 : 	for (; _First != _Last; ++_First)
; 1201 : 		_Al.destroy(_Unfancy(_First));
; 1202 : 	}

	ret	0
??$_Destroy_range1@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<sk::iParameter *>,sk::iParameter * *>, COMDAT

; 1208 : 		// nothing to do
; 1209 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<sk::iParameter *>,sk::iParameter * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$?0ABV?$allocator@PAVSK_Widget@@@std@@X@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@X@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > ><std::allocator<SK_Widget *> const &,void>, COMDAT
; _this$ = ecx

; 605  : 		{	// construct head node, allocator from _Al

	npad	2
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 607  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@X@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > ><std::allocator<SK_Widget *> const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@0@ABU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@YAABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@0@ABU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1139 : 	}

	ret	0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Pocma@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Pocma@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0U?$integral_constant@_N$00@0@@Z PROC ; std::_Pocma<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1152 : 	_Left = _STD move(_Right);
; 1153 : 	}

	ret	0
??$_Pocma@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0U?$integral_constant@_N$00@0@@Z ENDP ; std::_Pocma<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0AAU?$equal_to@PAVSK_Widget@@@std@@M@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$equal_to@PAVSK_Widget@@@1@$$QAM@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0AAU?$equal_to@PAVSK_Widget@@@std@@M@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$equal_to@PAVSK_Widget@@@1@$$QAM@Z PROC ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Compressed_pair<std::equal_to<SK_Widget *>,float,1><std::equal_to<SK_Widget *> &,float>, COMDAT
; _this$ = ecx

; 312  : 		{	// construct from forwarded values

	npad	2
	push	ebp
	mov	ebp, esp

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 313  : 		}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??$?0AAU?$equal_to@PAVSK_Widget@@@std@@M@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$equal_to@PAVSK_Widget@@@1@$$QAM@Z ENDP ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Compressed_pair<std::equal_to<SK_Widget *>,float,1><std::equal_to<SK_Widget *> &,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@M@std@@YA$$QAMAAM@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@M@std@@YA$$QAMAAM@Z PROC			; std::forward<float>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@M@std@@YA$$QAMAAM@Z ENDP			; std::forward<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$equal_to@PAVSK_Widget@@@std@@@std@@YAAAU?$equal_to@PAVSK_Widget@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$equal_to@PAVSK_Widget@@@std@@@std@@YAAAU?$equal_to@PAVSK_Widget@@@0@AAU10@@Z PROC ; std::forward<std::equal_to<SK_Widget *> &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$equal_to@PAVSK_Widget@@@std@@@std@@YAAAU?$equal_to@PAVSK_Widget@@@0@AAU10@@Z ENDP ; std::forward<std::equal_to<SK_Widget *> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_One_then_variadic_args_t>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_One_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$hash@PAVSK_Widget@@@std@@@std@@YAAAU?$hash@PAVSK_Widget@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$hash@PAVSK_Widget@@@std@@@std@@YAAAU?$hash@PAVSK_Widget@@@0@AAU10@@Z PROC ; std::forward<std::hash<SK_Widget *> &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$hash@PAVSK_Widget@@@std@@@std@@YAAAU?$hash@PAVSK_Widget@@@0@AAU10@@Z ENDP ; std::forward<std::hash<SK_Widget *> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0PAVSK_Widget@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAVSK_Widget@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> ><SK_Widget *>, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0PAVSK_Widget@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> ><SK_Widget *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@PAVSK_Widget@@@std@@@std@@YAABV?$allocator@PAVSK_Widget@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@PAVSK_Widget@@@std@@@std@@YAABV?$allocator@PAVSK_Widget@@@0@ABV10@@Z PROC ; std::forward<std::allocator<SK_Widget *> const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$allocator@PAVSK_Widget@@@std@@@std@@YAABV?$allocator@PAVSK_Widget@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<SK_Widget *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Distance1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Distance1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >, COMDAT

; 1094 : 	{	// return distance between iterators; input

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __First$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR __Last$[ebp]
	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN3@Distance1
$LL4@Distance1:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	DWORD PTR __First$[ebp], ecx

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL4@Distance1
$LN3@Distance1:

; 1098 : 
; 1099 : 	return (_Off);
; 1100 : 	}

	pop	ebp
	ret	0
??$_Distance1@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3823 : 	{	// test for string equality

	npad	2
	push	ebp
	mov	ebp, esp

; 3824 : 	return (_Left._Equal(_Right));

	push	DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal

; 3825 : 	}

	pop	ebp
	ret	0
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Plist$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T2 = 8							; size = 4
___$ReturnUdt$ = 8					; size = 4
tv1489 = 12						; size = 4
$T3 = 12						; size = 4
__Val$ = 12						; size = 4
__Pnode$ = 16						; size = 4
??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 761  : 		{	// try to insert existing node with value _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edi, DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 761  : 		{	// try to insert existing node with value _Val

	mov	ebx, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ebx

; 762  : 		size_type _Bucket;
; 763  : 		_Unchecked_iterator _Where;
; 764  : 
; 765  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi]
	xor	eax, -2128831035			; 811c9dc5H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	esi, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+2]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edi+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [ebx+24]
	and	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [esi+ecx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	edx, DWORD PTR [ecx*8]
	mov	DWORD PTR tv1489[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN43@Insert

; 847  : 			return (_Unchecked_end());

	mov	esi, DWORD PTR [ebx+4]
	jmp	SHORT $LN44@Insert
$LN43@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [esi+edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	esi, DWORD PTR [esi]
$LN44@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	je	SHORT $LN3@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	ecx, DWORD PTR [edi]
	npad	1
$LL2@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	esi, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	cmp	ecx, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 772  : 			if (_Traitsobj(_Traits::_Kfn(_Val),

	je	SHORT $LN6@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 768  : 		for (; _Where != _Begin(_Bucket); )

	jne	SHORT $LL2@Insert
$LN3@Insert:

; 739  : 		return (_Plist);

	mov	edi, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Plist$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [edi]

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 799  : 		if (_Where != ++_Next)	// move element into place

	je	SHORT $LN10@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edi+4]

; 1910 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =

	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [eax+4]

; 1912 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =

	mov	DWORD PTR [ecx], esi

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [esi+4]

; 1914 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =

	mov	DWORD PTR [ecx], edi

; 1915 : 			_First._Mynode();
; 1916 : 
; 1917 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	mov	edx, DWORD PTR [esi+4]

; 1918 : 		this->_Prevnode(_Where._Mynode()) =

	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], ecx

; 1919 : 			this->_Prevnode(_Last._Mynode());
; 1920 : 		this->_Prevnode(_Last._Mynode()) =

	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx

; 1921 : 			this->_Prevnode(_First._Mynode());
; 1922 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	mov	DWORD PTR [edi+4], edx
	mov	edx, DWORD PTR tv1489[ebp]
$LN10@Insert:

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR [ebx+12]
	add	ecx, edx
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 883  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN453@Insert

; 884  : 			{	// make bucket non-empty
; 885  : 			_Vec_lo(_Bucket) = _Plist;

	mov	DWORD PTR [ecx], edi

; 886  : 			_Vec_hi(_Bucket) = _Plist;

	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [eax+edx+4], edi

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jmp	SHORT $LN457@Insert
$LN6@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 96   : 		return (_Ptr);

	mov	edx, DWORD PTR __Pnode$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	ecx, DWORD PTR [edx+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN453@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jne	SHORT $LN455@Insert

; 889  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	DWORD PTR [ecx], edi

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	jmp	SHORT $LN457@Insert
$LN455@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	je	SHORT $LN457@Insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ebx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx+edx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+edx+4], eax
$LN457@Insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 805  : 		_Check_size();

	mov	ecx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Check_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Check_size
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 812  : 		}

	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z$2:

; 806  : 		_CATCH_ALL
; 807  : 		erase(_Make_iter(_Plist));

	push	DWORD PTR __Plist$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Make_iter
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?erase@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::erase

; 808  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN639@Insert:
$LN638@Insert:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$emplace_front@QAVSK_Widget@@@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEX$$QBQAVSK_Widget@@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$emplace_front@QAVSK_Widget@@@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEX$$QBQAVSK_Widget@@@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::emplace_front<SK_Widget * const>, COMDAT
; _this$ = ecx

; 1055 : 		{	// insert element at beginning

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_0>$[ebp]

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [esi]

; 96   : 		return (_Ptr);

	mov	edi, DWORD PTR [eax]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@QAVSK_Widget@@@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@1@PAU21@0$$QBQAVSK_Widget@@@Z ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Buynode<SK_Widget * const>
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [esi+4]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN48@emplace_fr

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN102@emplace_fr:
$LN48@emplace_fr:

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [esi+4], eax

; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]
	pop	edi
	pop	esi

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 1056 : 		_Insert(_Unchecked_begin(), _STD forward<_Valty>(_Val)...);
; 1057 : 		}

	pop	ebp
	ret	4
$LN101@emplace_fr:
??$emplace_front@QAVSK_Widget@@@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEX$$QBQAVSK_Widget@@@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::emplace_front<SK_Widget * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@QAVSK_Widget@@@std@@YA$$QBQAVSK_Widget@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@QAVSK_Widget@@@std@@YA$$QBQAVSK_Widget@@ABQAV1@@Z PROC ; std::forward<SK_Widget * const>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@QAVSK_Widget@@@std@@YA$$QBQAVSK_Widget@@ABQAV1@@Z ENDP ; std::forward<SK_Widget * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >, COMDAT

; 166  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 167  : 		// note: only called internally from elsewhere in the STL, debug checks
; 168  : 		// and deprecation warnings omitted
; 169  : 	const auto _UFirst = _Unchecked(_First);
; 170  : 	const auto _ULast = _Unchecked(_Last);
; 171  : 	const auto _UDest = _Unchecked(_Dest);
; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Al$[ebp]
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
	add	esp, 24					; 00000018H

; 173  : 		_Uninitialized_move_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 174  : 			_Ptr_move_cat(_UFirst, _UDest),
; 175  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(_STD move(*_UFirst))>())));
; 176  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >, COMDAT

; 622  : 		return (_Al.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 623  : 		}

	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<SK_Widget *> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<SK_Widget *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAVSK_Widget@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAVSK_Widget@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAVSK_Widget@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAVSK_Widget@@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<SK_Widget *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAVSK_Widget@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAVSK_Widget@@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<SK_Widget *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >, COMDAT

; 216  : 	{	// copy _Count copies of _Val to raw _First, using _Al

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Al$[ebp]
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
	add	esp, 20					; 00000014H

; 218  : 		_Conjunction_t<decltype(_Fill_memset_is_safe(_First, _Val)),
; 219  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First)), decltype(_Val)>>()));
; 220  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 125  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<SK_Widget *> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<SK_Widget *> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<std::_List_node<SK_Widget *,void *> *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PAVSK_Widget@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::destroy<std::_List_node<SK_Widget *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVSK_Widget@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVSK_Widget@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<SK_Widget *,void *> *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@PAVSK_Widget@@PAX@std@@@std@@YAPAPAU?$_List_node@PAVSK_Widget@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<SK_Widget *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Fill_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z PROC ; std::_Fill_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT

; 2703 : 	{	// copy _Val through [_First, _Last), choose optimization

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 2682 : 	return {};

	mov	BYTE PTR $T1[ebp], 0

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
	add	esp, 16					; 00000010H

; 2705 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fill_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ENDP ; std::_Fill_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>, COMDAT

; 1215 : 		// note that this is an optimization for debug mode codegen;
; 1216 : 		// in release mode the BE removes all of this
; 1217 : 	typedef typename _Alloc::value_type _Val;
; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1219 : 		is_trivially_destructible<_Val>,
; 1220 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1221 : 	}

	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 22   : 	{	// return smaller of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	cmovb	eax, edx

; 24   : 	}

	pop	ebp
	ret	0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@_W@std@@YAPA_WPA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@_W@std@@YAPA_WPA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<sk::iParameter *>,sk::iParameter * *>, COMDAT

; 1215 : 		// note that this is an optimization for debug mode codegen;
; 1216 : 		// in release mode the BE removes all of this
; 1217 : 	typedef typename _Alloc::value_type _Val;
; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1219 : 		is_trivially_destructible<_Val>,
; 1220 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1221 : 	}

	ret	0
??$_Destroy_range@V?$allocator@PAViParameter@sk@@@std@@PAPAViParameter@sk@@@std@@YAXPAPAViParameter@sk@@0AAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<sk::iParameter *>,sk::iParameter * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBEAAPAVSK_Widget@@XZ
_TEXT	SEGMENT
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBEAAPAVSK_Widget@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 362  : 		return ((reference)**(_Mybase *)this);
; 363  : 		}

	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBEAAPAVSK_Widget@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >, COMDAT
; _this$ = ecx

; 344  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 345  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??$?0ABV?$allocator@PAVSK_Widget@@@std@@X@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@X@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_List_buy<SK_Widget *,std::allocator<SK_Widget *> ><std::allocator<SK_Widget *> const &,void>, COMDAT
; _this$ = ecx

; 841  : 		{	// construct from allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 841  : 		{	// construct from allocator

	mov	DWORD PTR _this$[ebp], esi

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 842  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@X@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_List_buy<SK_Widget *,std::allocator<SK_Widget *> ><std::allocator<SK_Widget *> const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &,void>, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 517  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 517  : 		}

	ret	4
??$?0ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > ><std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > const &,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z PROC		; std::addressof<wchar_t *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z ENDP		; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1144 : 	typename _Alty::propagate_on_container_copy_assignment _Tag;
; 1145 : 	_Pocca(_Left, _Right, _Tag);
; 1146 : 	}

	ret	0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@ABU10@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Pocma@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z PROC ; std::_Pocma<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1163 : 	typename _Alty::propagate_on_container_move_assignment _Tag;
; 1164 : 	_Pocma(_Left, _Right, _Tag);
; 1165 : 	}

	ret	0
??$_Pocma@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ENDP ; std::_Pocma<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAV?$allocator@_W@1@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAV?$allocator@_W@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0AAU?$hash@PAVSK_Widget@@@std@@U_One_then_variadic_args_t@1@AAU?$equal_to@PAVSK_Widget@@@1@M@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$hash@PAVSK_Widget@@@1@$$QAU21@AAU?$equal_to@PAVSK_Widget@@@1@$$QAM@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
_<_Val2_1>$ = 20					; size = 4
_<_Val2_2>$ = 24					; size = 4
??$?0AAU?$hash@PAVSK_Widget@@@std@@U_One_then_variadic_args_t@1@AAU?$equal_to@PAVSK_Widget@@@1@M@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$hash@PAVSK_Widget@@@1@$$QAU21@AAU?$equal_to@PAVSK_Widget@@@1@$$QAM@Z PROC ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1><std::hash<SK_Widget *> &,std::_One_then_variadic_args_t,std::equal_to<SK_Widget *> &,float>, COMDAT
; _this$ = ecx

; 312  : 		{	// construct from forwarded values

	npad	2
	push	ebp
	mov	ebp, esp

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	eax, DWORD PTR _<_Val2_2>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 313  : 		}

	mov	eax, ecx
	pop	ebp
	ret	20					; 00000014H
??$?0AAU?$hash@PAVSK_Widget@@@std@@U_One_then_variadic_args_t@1@AAU?$equal_to@PAVSK_Widget@@@1@M@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@AAU?$hash@PAVSK_Widget@@@1@$$QAU21@AAU?$equal_to@PAVSK_Widget@@@1@$$QAM@Z ENDP ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1><std::hash<SK_Widget *> &,std::_One_then_variadic_args_t,std::equal_to<SK_Widget *> &,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0ABV?$allocator@PAVSK_Widget@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > ><std::allocator<SK_Widget *> const &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0ABV?$allocator@PAVSK_Widget@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > ><std::allocator<SK_Widget *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V01@X$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V01@X$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V01@X$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1705 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1705 : 		}

	ret	4
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1705 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1705 : 		}

	ret	4
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >, COMDAT

; 1112 : 	{	// return distance between iterators

	npad	2
	push	ebp
	mov	ebp, esp

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	ecx, DWORD PTR __First$[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR __Last$[ebp]
	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN5@distance
$LL6@distance:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL6@distance
$LN5@distance:

; 1114 : 	}

	pop	ebp
	ret	0
??$distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@@std@@YAHV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAVSK_Widget@@@std@@YAPAPAVSK_Widget@@AAPAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAVSK_Widget@@@std@@YAPAPAVSK_Widget@@AAPAV1@@Z PROC ; std::addressof<SK_Widget *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAVSK_Widget@@@std@@YAPAPAVSK_Widget@@AAPAV1@@Z ENDP ; std::addressof<SK_Widget *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??__FSK_Widget_ParameterFactory@@YAXXZ
text$yd	SEGMENT
??__FSK_Widget_ParameterFactory@@YAXXZ PROC		; `dynamic atexit destructor for 'SK_Widget_ParameterFactory'', COMDAT

; 1947 : 		this->_Orphan_all();

	mov	ecx, OFFSET ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A ; SK_Widget_ParameterFactory
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Orphan_all

; 1948 : 
; 1949 : 		if (this->_Myfirst() != pointer())

	mov	eax, DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A
	test	eax, eax
	je	SHORT $LN10@dynamic

; 1950 : 			{	// destroy and deallocate old array
; 1951 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	push	DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A+4
	mov	ecx, OFFSET ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A ; SK_Widget_ParameterFactory
	push	eax
	call	?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Destroy

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A+8
	mov	ecx, DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A, 0

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A+4, 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A+8, 0
$LN10@dynamic:
	ret	0
??__FSK_Widget_ParameterFactory@@YAXXZ ENDP		; `dynamic atexit destructor for 'SK_Widget_ParameterFactory''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
;	COMDAT ??__ESK_Widget_ParameterFactory@@YAXXZ
text$di	SEGMENT
??__ESK_Widget_ParameterFactory@@YAXXZ PROC		; `dynamic initializer for 'SK_Widget_ParameterFactory'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 302  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, OFFSET ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A ; SK_Widget_ParameterFactory
	call	??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::_Wrap_alloc<std::allocator<sk::iParameter *> >
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 709  : sk::ParameterFactory SK_Widget_ParameterFactory;

	push	OFFSET ??__FSK_Widget_ParameterFactory@@YAXXZ ; `dynamic atexit destructor for 'SK_Widget_ParameterFactory''
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A, 0

; 477  : 		_Mylast(),

	mov	DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A+4, 0

; 478  : 		_Myend()

	mov	DWORD PTR ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A+8, 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 709  : sk::ParameterFactory SK_Widget_ParameterFactory;

	call	_atexit
	pop	ecx
	ret	0
??__ESK_Widget_ParameterFactory@@YAXXZ ENDP		; `dynamic initializer for 'SK_Widget_ParameterFactory''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??E?$_Array_iterator@PAVSK_Widget@@$04@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Array_iterator@PAVSK_Widget@@$04@std@@QAEAAV01@XZ PROC ; std::_Array_iterator<SK_Widget *,5>::operator++, COMDAT
; _this$ = ecx

; 1596 : 		++_Ptr;

	add	DWORD PTR [ecx], 4

; 1962 : 		++*(_Mybase *)this;
; 1963 : 		return (*this);

	mov	eax, ecx

; 1964 : 		}

	ret	0
??E?$_Array_iterator@PAVSK_Widget@@$04@std@@QAEAAV01@XZ ENDP ; std::_Array_iterator<SK_Widget *,5>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??D?$_Array_iterator@PAVSK_Widget@@$04@std@@QBEAAPAVSK_Widget@@XZ
_TEXT	SEGMENT
??D?$_Array_iterator@PAVSK_Widget@@$04@std@@QBEAAPAVSK_Widget@@XZ PROC ; std::_Array_iterator<SK_Widget *,5>::operator*, COMDAT
; _this$ = ecx

; 1952 : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 1953 : 		}

	ret	0
??D?$_Array_iterator@PAVSK_Widget@@$04@std@@QBEAAPAVSK_Widget@@XZ ENDP ; std::_Array_iterator<SK_Widget *,5>::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??0?$_Array_iterator@PAVSK_Widget@@$04@std@@QAE@PAPAVSK_Widget@@I@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Off$ = 12						; size = 4
??0?$_Array_iterator@PAVSK_Widget@@$04@std@@QAE@PAPAVSK_Widget@@I@Z PROC ; std::_Array_iterator<SK_Widget *,5>::_Array_iterator<SK_Widget *,5>, COMDAT
; _this$ = ecx

; 1934 : 		{	// construct with pointer and offset

	npad	2
	push	ebp
	mov	ebp, esp

; 1567 : 		: _Ptr(_Parg + _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR __Parg$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax

; 1935 : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Array_iterator@PAVSK_Widget@@$04@std@@QAE@PAPAVSK_Widget@@I@Z ENDP ; std::_Array_iterator<SK_Widget *,5>::_Array_iterator<SK_Widget *,5>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??9?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBE_NABV01@@Z PROC ; std::_Array_const_iterator<SK_Widget *,5>::operator!=, COMDAT
; _this$ = ecx

; 1659 : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 1660 : 		return (!(*this == _Right));
; 1661 : 		}

	pop	ebp
	ret	4
??9?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBE_NABV01@@Z ENDP ; std::_Array_const_iterator<SK_Widget *,5>::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??8?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBE_NABV01@@Z PROC ; std::_Array_const_iterator<SK_Widget *,5>::operator==, COMDAT
; _this$ = ecx

; 1654 : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 1655 : 		return (_Ptr == _Right._Ptr);
; 1656 : 		}

	pop	ebp
	ret	4
??8?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBE_NABV01@@Z ENDP ; std::_Array_const_iterator<SK_Widget *,5>::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??E?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QAEAAV01@XZ PROC ; std::_Array_const_iterator<SK_Widget *,5>::operator++, COMDAT
; _this$ = ecx

; 1596 : 		++_Ptr;

	add	DWORD PTR [ecx], 4

; 1597 : 		return (*this);

	mov	eax, ecx

; 1598 : 		}

	ret	0
??E?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QAEAAV01@XZ ENDP ; std::_Array_const_iterator<SK_Widget *,5>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??D?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBEABQAVSK_Widget@@XZ
_TEXT	SEGMENT
??D?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBEABQAVSK_Widget@@XZ PROC ; std::_Array_const_iterator<SK_Widget *,5>::operator*, COMDAT
; _this$ = ecx

; 1586 : 		return (*_Ptr);

	mov	eax, DWORD PTR [ecx]

; 1587 : 		}

	ret	0
??D?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QBEABQAVSK_Widget@@XZ ENDP ; std::_Array_const_iterator<SK_Widget *,5>::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??0?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QAE@PBQAVSK_Widget@@I@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Off$ = 12						; size = 4
??0?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QAE@PBQAVSK_Widget@@I@Z PROC ; std::_Array_const_iterator<SK_Widget *,5>::_Array_const_iterator<SK_Widget *,5>, COMDAT
; _this$ = ecx

; 1568 : 		{	// construct with pointer and offset

	npad	2
	push	ebp
	mov	ebp, esp

; 1567 : 		: _Ptr(_Parg + _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR __Parg$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax

; 1569 : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Array_const_iterator@PAVSK_Widget@@$04@std@@QAE@PBQAVSK_Widget@@I@Z ENDP ; std::_Array_const_iterator<SK_Widget *,5>::_Array_const_iterator<SK_Widget *,5>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\array
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\array
;	COMDAT ?end@?$array@PAVSK_Widget@@$04@std@@QAE?AV?$_Array_iterator@PAVSK_Widget@@$04@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$array@PAVSK_Widget@@$04@std@@QAE?AV?$_Array_iterator@PAVSK_Widget@@$04@2@XZ PROC ; std::array<SK_Widget *,5>::end, COMDAT
; _this$ = ecx

; 69   : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1567 : 		: _Ptr(_Parg + _Off)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	ecx, 20					; 00000014H
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\array

; 71   : 		}

	pop	ebp
	ret	4
?end@?$array@PAVSK_Widget@@$04@std@@QAE?AV?$_Array_iterator@PAVSK_Widget@@$04@2@XZ ENDP ; std::array<SK_Widget *,5>::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\array
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\array
;	COMDAT ?begin@?$array@PAVSK_Widget@@$04@std@@QAE?AV?$_Array_iterator@PAVSK_Widget@@$04@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$array@PAVSK_Widget@@$04@std@@QAE?AV?$_Array_iterator@PAVSK_Widget@@$04@2@XZ PROC ; std::array<SK_Widget *,5>::begin, COMDAT
; _this$ = ecx

; 59   : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1567 : 		: _Ptr(_Parg + _Off)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\array

; 61   : 		}

	pop	ebp
	ret	4
?begin@?$array@PAVSK_Widget@@$04@std@@QAE?AV?$_Array_iterator@PAVSK_Widget@@$04@2@XZ ENDP ; std::array<SK_Widget *,5>::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3853 : 	{	// test for string inequality

	npad	2
	push	ebp
	mov	ebp, esp

; 3824 : 	return (_Left._Equal(_Right));

	push	DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
	test	al, al
	sete	al

; 3854 : 	return (!(_Left == _Right));
; 3855 : 	}

	pop	ebp
	ret	0
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 3802 : 	{	// return string + NTCTS

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, edx
	push	esi
	mov	DWORD PTR $T1[ebp], 0
	lea	esi, DWORD PTR [eax+1]
$LL71@operator:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL71@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, DWORD PTR __Left$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	sub	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1595 : 		_Mysize(0),

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi
	mov	DWORD PTR [ecx+16], 0

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3803 : 	return (_STD move(_Left.append(_Right)));

	mov	eax, ecx

; 3804 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
;	COMDAT ??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z
_TEXT	SEGMENT
$T2 = -92						; size = 24
_label$ = -68						; size = 24
_original_binding$ = -44				; size = 24
$T3 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_binding$ = 8						; size = 4
_param$ = 12						; size = 4
??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z PROC ; <lambda_322f41118d6d58482108aceb62769a04>::operator(), COMDAT
; _this$ = ecx

; 582  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi

; 583  :       std::string label  = SK_WideCharToUTF8 (binding->human_readable) + "###";

	mov	esi, DWORD PTR _binding$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 582  :     {

	push	edi

; 583  :       std::string label  = SK_WideCharToUTF8 (binding->human_readable) + "###";

	push	OFFSET ??_C@_03OIJOKPOL@?$CD?$CD?$CD?$AA@
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	lea	edi, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	eax

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7

; 2174 : 		assign(_Right, 0, npos);

	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 583  :       std::string label  = SK_WideCharToUTF8 (binding->human_readable) + "###";

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?SK_WideCharToUTF8@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; SK_WideCharToUTF8
	add	esp, 28					; 0000001cH
	push	eax
	lea	eax, DWORD PTR _label$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 583  :       std::string label  = SK_WideCharToUTF8 (binding->human_readable) + "###";

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN55@operator

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN55@operator:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 584  :                   label += binding->bind_name;

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T2[ebp+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T2[ebp+20], 15		; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR $T2[ebp], 0

; 480  : 		return (_CSTD strlen(_First));

	lea	ebx, DWORD PTR [ecx+1]
$LL255@operator:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL255@operator
	sub	ecx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	lea	ecx, DWORD PTR _label$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR _label$[ebp+20], 16		; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 586  :       if (ImGui::Selectable (label.c_str (), false))

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	lea	eax, DWORD PTR _label$[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T3[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	eax, DWORD PTR _label$[ebp]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 586  :       if (ImGui::Selectable (label.c_str (), false))

	push	0
	push	eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T3[ebp+4], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 586  :       if (ImGui::Selectable (label.c_str (), false))

	call	?Selectable@ImGui@@YA_NPBD_NHABUImVec2@@@Z ; ImGui::Selectable
	add	esp, 16					; 00000010H
	test	al, al
	je	SHORT $LN2@operator

; 587  :       {
; 588  :         ImGui::OpenPopup (binding->bind_name);

	push	DWORD PTR [esi]
	call	?OpenPopup@ImGui@@YAXPBD@Z		; ImGui::OpenPopup
	add	esp, 4
$LN2@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _original_binding$[ebp+16], 0

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	eax
	push	edi
	lea	ecx, DWORD PTR _original_binding$[ebp]

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _original_binding$[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR _original_binding$[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 594  :       SK_ImGui_KeybindDialog (binding);

	push	esi
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	?SK_ImGui_KeybindDialog@@YGXPAUSK_Keybind@@@Z ; SK_ImGui_KeybindDialog
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3824 : 	return (_Left._Equal(_Right));

	push	edi
	lea	ecx, DWORD PTR _original_binding$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal

; 3854 : 	return (!(_Left == _Right));

	test	al, al
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 596  :       if (original_binding != binding->human_readable)

	jne	SHORT $LN3@operator

; 598  :         param->store         (binding->human_readable);

	sub	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 598  :         param->store         (binding->human_readable);

	mov	ecx, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	eax

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7

; 2174 : 		assign(_Right, 0, npos);

	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 598  :         param->store         (binding->human_readable);

	mov	ecx, DWORD PTR _param$[ebp]
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 599  : 
; 600  :         extern iSK_INI* osd_ini;
; 601  : 
; 602  :         osd_ini->write (osd_ini->get_filename ());

	mov	eax, DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	push	eax
	mov	esi, DWORD PTR [eax]
	call	DWORD PTR [esi+44]
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	call	DWORD PTR [esi+20]
	mov	bl, 1
	jmp	SHORT $LN10@operator
$LN3@operator:

; 603  : 
; 604  :         return true;
; 605  :       }
; 606  : 
; 607  :       return false;

	xor	bl, bl
$LN10@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _original_binding$[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN199@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR _original_binding$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN199@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR _label$[ebp+20]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _original_binding$[ebp+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _original_binding$[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR _original_binding$[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN256@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	ecx
	push	DWORD PTR _label$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN256@operator:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 608  :     };

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	al, bl
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z$2:
	lea	ecx, DWORD PTR _label$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z$3:
	lea	ecx, DWORD PTR _original_binding$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z ENDP ; <lambda_322f41118d6d58482108aceb62769a04>::operator()
; Function compile flags: /Ogtp
;	COMDAT ??__Flast_state_was_config@?1??draw_base@SK_Widget@@QAEXXZ@YAXXZ
text$yd	SEGMENT
??__Flast_state_was_config@?1??draw_base@SK_Widget@@QAEXXZ@YAXXZ PROC ; `SK_Widget::draw_base'::`2'::`dynamic atexit destructor for 'last_state_was_config'', COMDAT
	mov	ecx, OFFSET ?last_state_was_config@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A
	jmp	??1?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::~_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
??__Flast_state_was_config@?1??draw_base@SK_Widget@@QAEXXZ@YAXXZ ENDP ; `SK_Widget::draw_base'::`2'::`dynamic atexit destructor for 'last_state_was_config''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator!=, COMDAT
; _this$ = ecx

; 301  : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 302  : 		return (!(*this == _Right));
; 303  : 		}

	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator==, COMDAT
; _this$ = ecx

; 286  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 287  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 288  : 		if (this->_Getcont() != _Right._Getcont())
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("list iterators incompatible");
; 291  : 			}
; 292  : 
; 293  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 294  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 295  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 296  : 
; 297  : 		return (this->_Ptr == _Right._Ptr);
; 298  : 		}

	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator++, COMDAT
; _this$ = ecx

; 247  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 248  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 249  : 		++*this;
; 250  : 		return (_Tmp);
; 251  : 		}

	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator++, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 226  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 227  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 228  : 		if (_Mycont == 0
; 229  : 			|| this->_Ptr == nullptr_t{}
; 230  : 			|| this->_Ptr == _Mycont->_Myhead)
; 231  : 			{	// report error
; 232  : 			_DEBUG_ERROR("list iterator not incrementable");
; 233  : 			}
; 234  : 
; 235  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 236  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 237  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 238  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 239  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 240  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 241  : 
; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 243  : 		return (*this);

	mov	eax, ecx

; 244  : 		}

	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBEABQAVSK_Widget@@XZ
_TEXT	SEGMENT
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBEABQAVSK_Widget@@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 207  : 		if (_Mycont == 0
; 208  : 			|| this->_Ptr == nullptr_t{}
; 209  : 			|| this->_Ptr == _Mycont->_Myhead)
; 210  : 			{	// report error
; 211  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 216  : 		const auto _Mycont = static_cast<const _Mylist *>(this->_Getcont());
; 217  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 218  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 219  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 220  : 
; 221  : 		return (_Mylist::_Myval(this->_Ptr));
; 222  : 		}

	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBEABQAVSK_Widget@@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_Unchecked, COMDAT
; _this$ = ecx

; 199  : 		{	// make an unchecked iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 200  : 		return (_Unchecked_type(this->_Ptr, static_cast<const _Mylist *>(this->_Getcont())));
; 201  : 		}

	pop	ebp
	ret	4
?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >, COMDAT
; _this$ = ecx

; 187  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 188  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 97   : 		}

	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator!=, COMDAT
; _this$ = ecx

; 90   : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 91   : 		return (!(*this == _Right));
; 92   : 		}

	pop	ebp
	ret	4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator==, COMDAT
; _this$ = ecx

; 85   : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 86   : 		return (_Ptr == _Right._Ptr);
; 87   : 		}

	pop	ebp
	ret	4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], eax

; 74   : 		return (*this);

	mov	eax, ecx

; 75   : 		}

	ret	0
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 61   : 		return (*this);

	mov	eax, ecx

; 62   : 		}

	ret	0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABQAVSK_Widget@@XZ
_TEXT	SEGMENT
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABQAVSK_Widget@@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 50   : 		return (_Mylist::_Myval(_Ptr));
; 51   : 		}

	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABQAVSK_Widget@@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 45   : 		this->_Adopt(_Plist);
; 46   : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PAVSK_Widget@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		: _Ptr()

	mov	DWORD PTR [ecx], 0

; 40   : 		}

	mov	eax, ecx
	ret	0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??$emplace@QAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@$$QBQAVSK_Widget@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Val_0>$ = 12						; size = 4
??$emplace@QAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@$$QBQAVSK_Widget@@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::emplace<SK_Widget * const>, COMDAT
; _this$ = ecx

; 294  : 		{	// try to insert value_type(_Val...)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, ecx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR _<_Val_0>$[ebp]

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ebx+4]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	lea	ecx, DWORD PTR [ebx+4]

; 96   : 		return (_Ptr);

	mov	edi, DWORD PTR [eax]

; 1085 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),

	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@QAVSK_Widget@@@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@1@PAU21@0$$QBQAVSK_Widget@@@Z ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Buynode<SK_Widget * const>
	mov	edx, eax

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [ebx+8]
	sub	ecx, eax
	cmp	ecx, 1
	jae	SHORT $LN53@emplace

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN181@emplace:
$LN53@emplace:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1952 : 		this->_Mysize() += _Count;

	inc	eax
	mov	DWORD PTR [ebx+8], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	mov	ecx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1088 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi+4], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]

; 1089 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	DWORD PTR [eax], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 347  : 		return (_List._Unchecked_begin());

	mov	eax, DWORD PTR [eax]

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	add	eax, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 296  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	push	eax
	push	esi
	call	??$_Insert@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@AAPAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 297  : 		}

	pop	ebp
	ret	8
$LN180@emplace:
??$emplace@QAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@$$QBQAVSK_Widget@@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::emplace<SK_Widget * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Finitialized@?1??draw_base@SK_Widget@@QAEXXZ@YAXXZ
text$yd	SEGMENT
??__Finitialized@?1??draw_base@SK_Widget@@QAEXXZ@YAXXZ PROC ; `SK_Widget::draw_base'::`2'::`dynamic atexit destructor for 'initialized'', COMDAT
	mov	ecx, OFFSET ?initialized@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A
	jmp	??1?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::~_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
??__Finitialized@?1??draw_base@SK_Widget@@QAEXXZ@YAXXZ ENDP ; `SK_Widget::draw_base'::`2'::`dynamic atexit destructor for 'initialized''
text$yd	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@QAE@XZ PROC ; std::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >::~unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >, COMDAT
; _this$ = ecx
	jmp	??1?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::~_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
??1?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@QAE@XZ ENDP ; std::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >::~unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
;	COMDAT ??0?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -8						; size = 4
$T2 = -1						; size = 1
??0?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@QAE@XZ PROC ; std::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >, COMDAT
; _this$ = ecx

; 91   : 		{	// construct empty set from defaults

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 90   : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T2[ebp]

; 91   : 		{	// construct empty set from defaults

	mov	esi, ecx
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _this$[ebp], esi
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T1[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	call	??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >

; 92   : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@QAE@XZ ENDP ; std::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >::unordered_set<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *>,std::allocator<SK_Widget *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Xlength, COMDAT

; 1962 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlength:
$LN3@Xlength:
	int	3
?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Tidy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1946 : 		{	// free all storage

	npad	2
	push	esi
	mov	esi, ecx

; 1947 : 		this->_Orphan_all();
; 1948 : 
; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Tidy

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:
	pop	esi

; 1957 : 			}
; 1958 : 		}

	ret	0
?_Tidy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Change_array@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@II@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Change_array, COMDAT
; _this$ = ecx

; 1931 : 		{	// orphan all iterators, discard old array, acquire new array

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx

; 1932 : 		this->_Orphan_all();
; 1933 : 
; 1934 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Change_arr

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Change_arr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1940 : 		this->_Myfirst() = _Newvec;

	mov	ecx, DWORD PTR __Newvec$[ebp]

; 1941 : 		this->_Mylast() = _Newvec + _Newsize;

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [esi], ecx
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+4], eax

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 1943 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Change_array@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@II@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Buy, COMDAT
; _this$ = ecx

; 1908 : 		{	// allocate array with _Newcapacity elements

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1909 : 		this->_Myfirst() = pointer();
; 1910 : 		this->_Mylast() = pointer();
; 1911 : 		this->_Myend() = pointer();
; 1912 : 
; 1913 : 		if (_Newcapacity == 0)

	mov	edi, DWORD PTR __Newcapacity$[ebp]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	test	edi, edi
	jne	SHORT $LN2@Buy

; 1914 : 			{
; 1915 : 			return (false);

	pop	edi
	xor	al, al
	pop	esi

; 1928 : 		}

	pop	ebp
	ret	4
$LN2@Buy:

; 1916 : 			}
; 1917 : 
; 1918 : 		if (_Newcapacity > max_size())

	cmp	edi, 1073741823				; 3fffffffH
	ja	SHORT $LN115@Buy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	edi
	call	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1923 : 		this->_Myfirst() = this->_Getal().allocate(_Newcapacity);

	mov	DWORD PTR [esi], eax

; 1924 : 		this->_Mylast() = this->_Myfirst();

	mov	DWORD PTR [esi+4], eax

; 1925 : 		this->_Myend() = this->_Myfirst() + _Newcapacity;

	mov	eax, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+8], eax

; 1926 : 
; 1927 : 		return (true);

	mov	al, 1
	pop	edi
	pop	esi

; 1928 : 		}

	pop	ebp
	ret	4
$LN115@Buy:

; 1919 : 			{
; 1920 : 			_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Xlength
$LN117@Buy:
$LN114@Buy:
	int	3
?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Buy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@ABEII@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@ABEII@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1889 : 		{	// given _Oldcapacity and _Newsize, calculate geometric growth

	npad	2
	push	ebp
	mov	ebp, esp

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	edx, DWORD PTR [ecx+8]

; 1890 : 		const size_type _Oldcapacity = capacity();
; 1891 : 
; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	eax, 1073741823				; 3fffffffH

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sub	edx, DWORD PTR [ecx]
	sar	edx, 2

; 1890 : 		const size_type _Oldcapacity = capacity();
; 1891 : 
; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	ecx, edx
	shr	ecx, 1
	sub	eax, ecx
	cmp	edx, eax
	jbe	SHORT $LN2@Calculate_

; 1893 : 			{
; 1894 : 			return (_Newsize);	// geometric growth would overflow

	mov	eax, DWORD PTR __Newsize$[ebp]

; 1900 : 			{
; 1901 : 			return (_Newsize);	// geometric growth would be insufficient
; 1902 : 			}
; 1903 : 
; 1904 : 		return (_Geometric);	// geometric growth is sufficient
; 1905 : 		}

	pop	ebp
	ret	4
$LN2@Calculate_:

; 1895 : 			}
; 1896 : 
; 1897 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [ecx+edx]

; 1898 : 
; 1899 : 		if (_Geometric < _Newsize)

	cmp	eax, DWORD PTR __Newsize$[ebp]
	cmovb	eax, DWORD PTR __Newsize$[ebp]

; 1900 : 			{
; 1901 : 			return (_Newsize);	// geometric growth would be insufficient
; 1902 : 			}
; 1903 : 
; 1904 : 		return (_Geometric);	// geometric growth is sufficient
; 1905 : 		}

	pop	ebp
	ret	4
?_Calculate_growth@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@ABEII@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@0@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1885 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1886 : 		}

	ret	8
?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@0@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept, COMDAT
; _this$ = ecx

; 1878 : 		{	// move_if_noexcept [_First, _Last) to raw _Dest, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1881 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Umove_if_noexcept@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T1 = 16						; size = 1
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept1, COMDAT
; _this$ = ecx

; 1868 : 		{	// move [_First, _Last) to raw _Dest, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Dest$[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1870 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Umove_if_noexcept1@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@PAV32@IABV32@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
$T1 = 16						; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@PAV32@IABV32@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Ufill, COMDAT
; _this$ = ecx

; 1852 : 		{	// fill raw _Dest with _Count copies of _Val, using allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T1[ebp]
	push	ecx
	push	DWORD PTR __Val$[ebp]
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Dest$[ebp]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1854 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@PAV32@IABV32@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Ufill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@I@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::operator[], COMDAT
; _this$ = ecx

; 1750 : 		{	// subscript nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 1751 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1752 : 		if (size() <= _Pos)
; 1753 : 			{	// report error
; 1754 : 			_DEBUG_ERROR("vector subscript out of range");
; 1755 : 			}
; 1756 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1757 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1758 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1759 : 
; 1760 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 1761 : 		}

	pop	ebp
	ret	4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@I@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@I@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::operator[], COMDAT
; _this$ = ecx

; 1736 : 		{	// subscript mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 1737 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1738 : 		if (size() <= _Pos)
; 1739 : 			{	// report error
; 1740 : 			_DEBUG_ERROR("vector subscript out of range");
; 1741 : 			}
; 1742 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1743 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1744 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1745 : 
; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 1747 : 		}

	pop	ebp
	ret	4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@I@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::capacity, COMDAT
; _this$ = ecx

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1721 : 		}

	ret	0
?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size, COMDAT
; _this$ = ecx

; 1715 : 		return (this->_Getal().max_size());

	mov	eax, 1073741823				; 3fffffffH

; 1716 : 		}

	ret	0
?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::size, COMDAT
; _this$ = ecx

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1711 : 		}

	ret	0
?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?reserve@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?reserve@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::reserve, COMDAT
; _this$ = ecx

; 1528 : 		{	// increase capacity to _Newcapacity (without geometric growth), provide strong guarantee

	npad	2
	push	ebp
	mov	ebp, esp

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]

; 1529 : 		if (_Newcapacity > capacity())

	mov	edx, DWORD PTR __Newcapacity$[ebp]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sar	eax, 2

; 1529 : 		if (_Newcapacity > capacity())

	cmp	edx, eax
	jbe	SHORT $LN2@reserve

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())

	cmp	edx, 1073741823				; 3fffffffH
	ja	SHORT $LN55@reserve

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	mov	DWORD PTR __Newcapacity$[ebp], edx

; 1537 : 			}
; 1538 : 		}

	pop	ebp

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	jmp	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
$LN2@reserve:

; 1537 : 			}
; 1538 : 		}

	pop	ebp
	ret	4
$LN55@reserve:

; 1532 : 				{
; 1533 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Xlength
$LN57@reserve:
$LN54@reserve:
	int	3
?reserve@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::reserve
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Newvec$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T2 = 8							; size = 1
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1511 : 		{	// set capacity to _Newcapacity (without geometric growth), provide strong guarantee

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	DWORD PTR __Newcapacity$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	ebx, DWORD PTR [esi+4]
	sub	ebx, DWORD PTR [esi]

; 1511 : 		{	// set capacity to _Newcapacity (without geometric growth), provide strong guarantee

	mov	DWORD PTR _this$[ebp], esi

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sar	ebx, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	call	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	ecx
	push	DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1514 : 		const pointer _Newvec = this->_Getal().allocate(_Newcapacity);

	mov	edi, eax

; 1515 : 
; 1516 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	esi
	push	edi
	push	DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1514 : 		const pointer _Newvec = this->_Getal().allocate(_Newcapacity);

	mov	DWORD PTR __Newvec$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	push	DWORD PTR [esi]
	call	??$_Uninitialized_move_al_unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1934 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 172  : 	return (_Rechecked(_Dest,

	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1934 : 		if (this->_Myfirst() != pointer())

	test	ecx, ecx
	je	SHORT $LN83@Reallocate

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1937 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN83@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1524 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]

; 1941 : 		this->_Mylast() = _Newvec + _Newsize;

	lea	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], eax

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]

; 1524 : 		}

	pop	edi

; 1942 : 		this->_Myend() = _Newvec + _Newcapacity;

	mov	DWORD PTR [esi+8], eax

; 1524 : 		}

	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z$0:

; 1517 : 		_Umove_if_noexcept(this->_Myfirst(), this->_Mylast(), _Newvec);
; 1518 : 		_CATCH_ALL
; 1519 : 		this->_Getal().deallocate(_Newvec, _Newcapacity);

	push	DWORD PTR __Newcapacity$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR __Newvec$[ebp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::deallocate

; 1520 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN180@Reallocate:
$LN179@Reallocate:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
__Oldsize$1$ = -4					; size = 4
$T1 = 8							; size = 1
__Newsize$ = 8						; size = 4
$T2 = 12						; size = 1
$T3 = 12						; size = 1
__Val$ = 12						; size = 4
?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::assign, COMDAT
; _this$ = ecx

; 1287 : 		{	// assign _Newsize * _Val

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	esi
	push	edi

; 1288 : 		this->_Orphan_all();
; 1289 : 
; 1290 : 		const size_type _Oldsize = size();
; 1291 : 		const size_type _Oldcapacity = capacity();
; 1292 : 
; 1293 : 		if (_Newsize > _Oldcapacity)

	mov	edi, DWORD PTR __Newsize$[ebp]

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	edx, DWORD PTR [ebx]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	ecx, DWORD PTR [ebx+8]

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	mov	eax, DWORD PTR [ebx+4]

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sub	ecx, edx

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sub	eax, edx

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	sar	ecx, 2

; 1710 : 		return (this->_Mylast() - this->_Myfirst());

	sar	eax, 2
	mov	DWORD PTR __Oldsize$1$[ebp], eax

; 1288 : 		this->_Orphan_all();
; 1289 : 
; 1290 : 		const size_type _Oldsize = size();
; 1291 : 		const size_type _Oldcapacity = capacity();
; 1292 : 
; 1293 : 		if (_Newsize > _Oldcapacity)

	cmp	edi, ecx
	jbe	SHORT $LN2@assign

; 1294 : 			{	// reallocate
; 1295 : 			if (_Newsize > max_size())

	cmp	edi, 1073741823				; 3fffffffH
	ja	$LN297@assign

; 1892 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

	mov	esi, ecx
	mov	eax, 1073741823				; 3fffffffH
	shr	esi, 1
	sub	eax, esi
	cmp	ecx, eax
	jbe	SHORT $LN79@assign

; 1893 : 			{
; 1894 : 			return (_Newsize);	// geometric growth would overflow

	mov	esi, edi
	jmp	SHORT $LN80@assign
$LN79@assign:

; 1895 : 			}
; 1896 : 
; 1897 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	add	esi, ecx

; 1898 : 
; 1899 : 		if (_Geometric < _Newsize)

	cmp	esi, edi
	cmovb	esi, edi
$LN80@assign:

; 1298 : 				}
; 1299 : 
; 1300 : 			const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1301 : 
; 1302 : 			if (this->_Myfirst() != pointer())

	test	edx, edx
	je	SHORT $LN5@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	ecx
	push	edx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN5@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1308 : 			_Buy(_Newcapacity);

	push	esi
	mov	ecx, ebx
	call	?_Buy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAE_NI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Buy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T3[ebp]
	push	ebx
	push	DWORD PTR __Val$[ebp]
	push	edi
	push	DWORD PTR [ebx]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1310 : 			this->_Mylast() = _Ufill(this->_Myfirst(), _Newsize, _Val);

	mov	DWORD PTR [ebx+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2682 : 	return {};

	mov	BYTE PTR $T1[ebp], 0

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR $T1[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1312 : 		else if (_Newsize > _Oldsize)

	cmp	edi, eax
	jbe	SHORT $LN6@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	mov	esi, DWORD PTR __Val$[ebp]
	push	esi
	push	DWORD PTR [ebx+4]
	push	edx
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1315 : 			this->_Mylast() = _Ufill(this->_Mylast(), _Newsize - _Oldsize, _Val);

	sub	edi, DWORD PTR __Oldsize$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 217  : 	return (_Uninit_alloc_fill_n1(_First, _Count, _Val, _Al,

	push	ebx
	push	esi
	push	edi
	push	DWORD PTR [ebx+4]
	call	??$_Uninit_alloc_fill_n1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@PAV10@IABV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Uninit_alloc_fill_n1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,unsigned int,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
	add	esp, 36					; 00000024H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1315 : 			this->_Mylast() = _Ufill(this->_Mylast(), _Newsize - _Oldsize, _Val);

	mov	DWORD PTR [ebx+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	DWORD PTR __Val$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1319 : 			const pointer _Newlast = this->_Myfirst() + _Newsize;

	lea	esi, DWORD PTR [edx+edi*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2704 : 	_Fill_unchecked1(_First, _Last, _Val, _Fill_memset_is_safe(_First, _Val));

	push	esi
	push	edx
	call	??$_Fill_unchecked1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@0@0ABV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Fill_unchecked1<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1322 : 			this->_Mylast() = _Newlast;

	mov	DWORD PTR [ebx+4], esi
	pop	edi
	pop	esi
	pop	ebx

; 1323 : 			}
; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN297@assign:

; 1296 : 				{
; 1297 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Xlength
$LN299@assign:
$LN296@assign:
	int	3
?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::~vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx

; 891  : 		{	// destroy the object

	npad	2
	push	esi
	mov	esi, ecx

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN4@vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi

; 892  : 		_Tidy();
; 893  : 		}

	ret	0
??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::~vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 728  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 728  : 		}

	ret	4
??0?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 480  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myend, COMDAT
; _this$ = ecx

; 676  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 677  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myend, COMDAT
; _this$ = ecx

; 671  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 672  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Mylast, COMDAT
; _this$ = ecx

; 666  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 667  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Mylast, COMDAT
; _this$ = ecx

; 661  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 662  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myfirst, COMDAT
; _this$ = ecx

; 656  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 657  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myfirst, COMDAT
; _this$ = ecx

; 651  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 652  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Get_data, COMDAT
; _this$ = ecx

; 646  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 647  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Get_data, COMDAT
; _this$ = ecx

; 641  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 642  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Getal, COMDAT
; _this$ = ecx

; 636  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 637  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Getal, COMDAT
; _this$ = ecx

; 631  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 632  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Orphan_all, COMDAT
; _this$ = ecx

; 621  : 		_Get_data()._Orphan_all();
; 622  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 1073741823				; 3fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocate
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size, COMDAT

; 751  : 		return (_Alloc_max_size::_Fn(0, _Al));

	mov	eax, 1073741823				; 3fffffffH

; 752  : 		}

	ret	0
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 1073741823				; 3fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABU01@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >, COMDAT
; _this$ = ecx

; 1043 : 		}

	mov	eax, ecx
	ret	4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@ABU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEABMXZ
_TEXT	SEGMENT
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEABMXZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 960  : 		return (_Traitsobj._Get_max_bucket_size());

	mov	eax, ecx

; 961  : 		}

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEABMXZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAMXZ
_TEXT	SEGMENT
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAMXZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 955  : 		return (_Traitsobj._Get_max_bucket_size());

	mov	eax, ecx

; 956  : 		}

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAMXZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Reinsert@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
?_Reinsert@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 940  : 		{	// insert elements in [begin(), end())

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, ecx

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [eax], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 942  : 		if (_Unchecked_begin() != _Last)

	je	SHORT $LN115@Reinsert
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	edi, DWORD PTR [eax+4]
$LL2@Reinsert:

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	mov	ecx, ebx

; 347  : 		return (_List._Unchecked_begin());

	mov	esi, DWORD PTR [esi]

; 947  : 				_Insert(*_First, _First);

	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 948  : 				if (_Done)

	jne	SHORT $LL2@Reinsert
	pop	edi
	pop	esi
$LN115@Reinsert:
	pop	ebx

; 949  : 					break;
; 950  : 				}
; 951  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Reinsert@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Reinsert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Check_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
?_Check_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Check_size, COMDAT
; _this$ = ecx

; 924  : 		{	// grow table as needed

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, ecx

; 494  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [ebx+28]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	eax, ecx
	shr	eax, 31					; 0000001fH
	cvtpd2ps xmm1, xmm0
	movd	xmm0, ecx
	cvtdq2pd xmm0, xmm0
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	divss	xmm1, xmm0

; 925  : 		if (max_load_factor() < load_factor())

	comiss	xmm1, DWORD PTR [ebx]
	jbe	SHORT $LN187@Check_size

; 926  : 
; 927  : 			{	// rehash to bigger table
; 928  : 			size_type _Newsize = bucket_count();
; 929  : 
; 930  : 			if (_Newsize < 512)

	cmp	ecx, 512				; 00000200H
	jae	SHORT $LN3@Check_size

; 931  : 				_Newsize *= 8;	// multiply by 8

	shl	ecx, 3
	jmp	SHORT $LN5@Check_size
$LN3@Check_size:

; 932  : 			else if (_Newsize < _Vec.max_size() / 2)

	cmp	ecx, 536870911				; 1fffffffH
	jae	SHORT $LN5@Check_size

; 933  : 				_Newsize *= 2;	// multiply safely by 2

	add	ecx, ecx
$LN5@Check_size:
	push	edi

; 934  : 			_Init(_Newsize);

	push	ecx
	mov	ecx, ebx
	call	?_Init@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Init

; 357  : 		return (_List._Unchecked_end());

	mov	edi, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edi], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 942  : 		if (_Unchecked_begin() != _Last)

	je	SHORT $LN190@Check_size
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	edi, DWORD PTR [edi+4]
	push	esi
$LL74@Check_size:

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	mov	ecx, ebx

; 347  : 		return (_List._Unchecked_begin());

	mov	esi, DWORD PTR [esi]

; 947  : 				_Insert(*_First, _First);

	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	lea	eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 947  : 				_Insert(*_First, _First);

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@ABQAVSK_Widget@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert<SK_Widget * const &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	esi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 948  : 				if (_Done)

	jne	SHORT $LL74@Check_size
	pop	esi
$LN190@Check_size:
	pop	edi
$LN187@Check_size:
	pop	ebx

; 935  : 			_Reinsert();
; 936  : 			}
; 937  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Check_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Init@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXI@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Init, COMDAT
; _this$ = ecx

; 916  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	esi

; 917  : 		_Vec.reserve(2 * _Buckets);	// avoid curdling _Vec if exception occurs

	mov	esi, DWORD PTR __Buckets$[ebp]
	add	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [ebx+20]
	sub	eax, DWORD PTR [ebx+12]
	sar	eax, 2
	push	edi

; 1529 : 		if (_Newcapacity > capacity())

	cmp	esi, eax
	jbe	SHORT $LN4@Init

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())

	cmp	esi, 1073741823				; 3fffffffH
	ja	SHORT $LN85@Init

; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	push	esi
	lea	ecx, DWORD PTR [ebx+12]
	call	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
$LN4@Init:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR [ebx+4]

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	ecx, DWORD PTR [ebx+12]

; 357  : 		return (_List._Unchecked_end());

	mov	DWORD PTR $T1[ebp], eax

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	esi
	call	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::assign

; 919  : 		_Mask = _Buckets - 1;

	mov	ecx, DWORD PTR __Buckets$[ebp]
	pop	edi
	pop	esi

; 920  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [ebx+28], ecx
	lea	eax, DWORD PTR [ecx-1]
	mov	DWORD PTR [ebx+24], eax
	pop	ebx

; 921  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN85@Init:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1533 : 				_Xlength();

	call	?_Xlength@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Xlength
$LN87@Init:
$LN84@Init:
	int	3
?_Init@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXI@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Hashval@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEIABQAVSK_Widget@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Hashval@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEIABQAVSK_Widget@@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hashval, COMDAT
; _this$ = ecx

; 911  : 		{	// return hash value, masked to current table size

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	esi, DWORD PTR __Keyval$[ebp]
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 911  : 		{	// return hash value, masked to current table size

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [esi]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [esi+1]
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+2]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [esi+3]
	imul	ecx, edx, 16777619
	xor	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	eax, DWORD PTR [edi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, ecx, 16777619
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	and	eax, ecx

; 913  : 		}

	pop	ebp
	ret	4
?_Hashval@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEIABQAVSK_Widget@@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hashval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Insert_bucket@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@0I@Z
_TEXT	SEGMENT
__Plist$ = 8						; size = 4
__Where$ = 12						; size = 4
__Bucket$ = 16						; size = 4
?_Insert_bucket@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@0I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert_bucket, COMDAT
; _this$ = ecx

; 882  : 		{	// fix iterators after inserting _Plist before _Where

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	eax, DWORD PTR __Bucket$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR [ecx+12]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	lea	esi, DWORD PTR [eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [edx+esi]
	add	edx, esi
	cmp	eax, DWORD PTR [ecx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 883  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN2@Insert_buc

; 884  : 			{	// make bucket non-empty
; 885  : 			_Vec_lo(_Bucket) = _Plist;

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [edx], eax

; 886  : 			_Vec_hi(_Bucket) = _Plist;

	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [esi+ecx+4], eax
	pop	esi

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@Insert_buc:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR __Where$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 888  : 		else if (_Vec_lo(_Bucket) == _Where)

	jne	SHORT $LN4@Insert_buc

; 889  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [edx], eax
	pop	esi

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN4@Insert_buc:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edx+4]

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], eax

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 890  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	je	SHORT $LN6@Insert_buc
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR [ecx+esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi+4], eax
$LN6@Insert_buc:
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 892  : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Insert_bucket@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@0I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Insert_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Erase_bucket@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
__Plist_arg$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Erase_bucket@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Erase_bucket, COMDAT
; _this$ = ecx

; 866  : 		{	// fix iterators before erasing _Plist before _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	mov	eax, DWORD PTR __Bucket$[ebp]
	push	esi
	mov	esi, ecx
	push	edi
	lea	edi, DWORD PTR [eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __Plist_arg$[ebp]
	mov	edx, DWORD PTR [esi+12]
	add	edx, edi
	cmp	DWORD PTR [edx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	jne	SHORT $LN2@Erase_buck
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 869  : 			if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN4@Erase_buck

; 870  : 				{	// make bucket empty
; 871  : 				_Vec_lo(_Bucket) = _Unchecked_end();

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx], eax

; 872  : 				_Vec_hi(_Bucket) = _Unchecked_end();

	mov	ecx, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+ecx+4], eax
	pop	edi
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
$LN4@Erase_buck:

; 873  : 				}
; 874  : 			else
; 875  : 				_Vec_hi(_Bucket) = --_Plist;	// move end back one element

	mov	eax, DWORD PTR [eax+4]
	pop	edi
	mov	DWORD PTR [edx+4], eax
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
$LN2@Erase_buck:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN6@Erase_buck

; 877  : 			_Vec_lo(_Bucket) = ++_Plist;	// move beginning up one element

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN6@Erase_buck:
	pop	edi
	pop	esi

; 878  : 		}

	pop	ebp
	ret	8
?_Erase_bucket@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Erase_bucket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_End@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_End@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_End, COMDAT
; _this$ = ecx

; 855  : 		{	// return end iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*8]
	cmp	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 856  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	je	SHORT $LN89@End
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 861  : 			return (++_Ans);

	mov	ecx, DWORD PTR [eax]
$LN89@End:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 862  : 			}
; 863  : 		}

	pop	ebp
	ret	8
?_End@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_End
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_End@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_End@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_End, COMDAT
; _this$ = ecx

; 845  : 		{	// return end iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*8]
	cmp	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 846  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	je	SHORT $LN93@End
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 851  : 			return (++_Ans);

	mov	ecx, DWORD PTR [eax]
$LN93@End:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 852  : 			}
; 853  : 		}

	pop	ebp
	ret	8
?_End@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_End
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Begin, COMDAT
; _this$ = ecx

; 840  : 		{	// return begin iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp

; 841  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 842  : 		}

	pop	ebp
	ret	8
?_Begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Begin, COMDAT
; _this$ = ecx

; 835  : 		{	// return begin iterator for bucket _Bucket

	npad	2
	push	ebp
	mov	ebp, esp

; 836  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 837  : 		}

	pop	ebp
	ret	8
?_Begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_hi@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_hi, COMDAT
; _this$ = ecx

; 830  : 		{	// return reference to end()-1 for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1760 : 		return (this->_Myfirst()[_Pos]);

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [eax*8+4]
	add	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 832  : 		}

	pop	ebp
	ret	4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_hi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_hi@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_hi, COMDAT
; _this$ = ecx

; 825  : 		{	// return reference to end()-1 for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	eax, DWORD PTR __Bucket$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [eax*8+4]
	add	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 827  : 		}

	pop	ebp
	ret	4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_hi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_lo@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_lo, COMDAT
; _this$ = ecx

; 820  : 		{	// return reference to begin() for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1760 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 822  : 		}

	pop	ebp
	ret	4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IBEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_lo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Vec_lo@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
__Bucket$ = 8						; size = 4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_lo, COMDAT
; _this$ = ecx

; 815  : 		{	// return reference to begin() for _Bucket

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1746 : 		return (this->_Myfirst()[_Pos]);

	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 817  : 		}

	pop	ebp
	ret	4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Vec_lo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Destroy_if_not_nil@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
__Plist$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 750  : 		{	// node exists, destroy it

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 96   : 		return (_Ptr);

	mov	esi, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [esi+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edx], eax

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ecx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 752  : 		}

	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@IAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?equal_range@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@2@ABQAVSK_Widget@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
tv897 = 12						; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@2@ABQAVSK_Widget@@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::equal_range, COMDAT
; _this$ = ecx

; 703  : 		{	// find range equivalent to _Keyval in nonmutable hash table

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	ebx, DWORD PTR __Keyval$[ebp]
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 703  : 		{	// find range equivalent to _Keyval in nonmutable hash table

	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [ebx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1760 : 		return (this->_Myfirst()[_Pos]);

	mov	esi, DWORD PTR [edi+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	xor	edx, eax
	movzx	eax, BYTE PTR [ebx+2]

; 347  : 		_Val *= _FNV_prime;

	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [ebx+3]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [edi+24]
	and	ecx, eax

; 841  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR [esi+ecx*8]

; 821  : 		return ((_Unchecked_const_iterator&)_Vec[2 * _Bucket]);

	lea	edx, DWORD PTR [ecx+ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1183 : 		return (_Unchecked_const_iterator(this->_Myhead(),

	mov	ecx, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1760 : 		return (this->_Myfirst()[_Pos]);

	lea	edi, DWORD PTR [esi+edx*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ebx, DWORD PTR [esi+edx*4]
	mov	esi, DWORD PTR __Keyval$[ebp]
	npad	7
$LL4@equal_rang:
	cmp	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 856  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN49@equal_rang

; 857  : 			return (_Unchecked_end());

	mov	edx, ecx
	jmp	SHORT $LN50@equal_rang
$LN49@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 861  : 			return (++_Ans);

	mov	edx, DWORD PTR [edx]
$LN50@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 706  : 			_Where != _End(_Bucket); ++_Where)

	je	SHORT $LN3@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 707  : 			if (!_Traitsobj(_Traits::_Kfn(*_Where), _Keyval))

	je	SHORT $LN399@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LL4@equal_rang
$LN399@equal_rang:
	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 709  : 				_Unchecked_const_iterator _First = _Where;

	mov	edx, eax
	mov	DWORD PTR tv897[ebp], esi
$LL7@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 856  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	jne	SHORT $LN164@equal_rang

; 857  : 			return (_Unchecked_end());

	mov	esi, ecx
	jmp	SHORT $LN165@equal_rang
$LN164@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 861  : 			return (++_Ans);

	mov	esi, DWORD PTR [esi]
$LN165@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 710  : 				for (; _Where != _End(_Bucket); ++_Where)

	je	SHORT $LN400@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 220  : 		return (_Left == _Right);

	mov	esi, DWORD PTR tv897[ebp]
	cmp	esi, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 711  : 					if (_Traitsobj(_Keyval, _Traits::_Kfn(*_Where)))

	jne	SHORT $LN400@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LL7@equal_rang
$LN400@equal_rang:

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 713  : 				if (_First == _Where)

	je	SHORT $LN3@equal_rang
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [ecx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 715  : 				return (_Paircc(_Make_iter(_First),

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [ecx], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 719  : 		}

	pop	ebp
	ret	8
$LN3@equal_rang:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 719  : 		}

	pop	ebp
	ret	8
?equal_range@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@2@ABQAVSK_Widget@@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?count@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIABQAVSK_Widget@@@Z
_TEXT	SEGMENT
__Ans$ = -8						; size = 8
__Keyval$ = 8						; size = 4
?count@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIABQAVSK_Widget@@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::count, COMDAT
; _this$ = ecx

; 634  : 		{	// count all elements that match _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@2@ABQAVSK_Widget@@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	ecx, DWORD PTR __Ans$[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	edx, DWORD PTR __Ans$[ebp+4]
	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN7@count
$LL8@count:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	ecx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL8@count
$LN7@count:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?count@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIABQAVSK_Widget@@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?erase@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Plist$ = 12						; size = 4
?erase@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::erase, COMDAT
; _this$ = ecx

; 586  : 		{	// erase element at _Plist

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	edi, DWORD PTR __Plist$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 586  : 		{	// erase element at _Plist

	mov	ebx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [edi+8]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	movzx	eax, BYTE PTR [edi+9]
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+10]
	imul	edx, edx, 16777619
	xor	edx, eax
	movzx	eax, BYTE PTR [edi+11]
	imul	ecx, edx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 912  : 		return (_Traitsobj(_Keyval) & _Mask);

	mov	ecx, DWORD PTR [ebx+24]
	and	ecx, eax

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	lea	edx, DWORD PTR [ecx*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR [ebx+12]
	add	ecx, edx
	cmp	DWORD PTR [ecx+4], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 868  : 		if (_Vec_hi(_Bucket) == _Plist)

	jne	SHORT $LN49@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [ecx], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 869  : 			if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN51@erase

; 870  : 				{	// make bucket empty
; 871  : 				_Vec_lo(_Bucket) = _Unchecked_end();

	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [ecx], eax

; 872  : 				_Vec_hi(_Bucket) = _Unchecked_end();

	mov	ecx, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [edx+ecx+4], eax

; 873  : 				}
; 874  : 			else

	jmp	SHORT $LN350@erase
$LN51@erase:

; 875  : 				_Vec_hi(_Bucket) = --_Plist;	// move end back one element

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], eax

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jmp	SHORT $LN350@erase
$LN49@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 86   : 		return (_Ptr == _Right._Ptr);

	cmp	DWORD PTR [ecx], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 876  : 		else if (_Vec_lo(_Bucket) == _Plist)

	jne	SHORT $LN53@erase

; 877  : 			_Vec_lo(_Bucket) = ++_Plist;	// move beginning up one element

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [ecx], eax
$LN350@erase:
	mov	edi, DWORD PTR __Plist$[ebp]
$LN53@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi+4]

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	esi, DWORD PTR [edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	DWORD PTR [eax], esi

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	DWORD PTR [ecx+4], eax

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ebx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 590  : 		return (_List.erase(_Plist));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 590  : 		return (_List.erase(_Plist));

	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx

; 591  : 		}

	pop	ebp
	ret	8
?erase@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?max_load_factor@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
?max_load_factor@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::max_load_factor, COMDAT
; _this$ = ecx

; 499  : 		return (_Max_bucket_size());

	fld	DWORD PTR [ecx]

; 500  : 		}

	ret	0
?max_load_factor@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::max_load_factor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?load_factor@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
?load_factor@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::load_factor, COMDAT
; _this$ = ecx

; 493  : 		{	// return elements per bucket

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 494  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ecx+8]
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	eax, DWORD PTR [ecx+28]
	cvtpd2ps xmm1, xmm0
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	divss	xmm1, xmm0
	movss	DWORD PTR tv72[ebp], xmm1
	fld	DWORD PTR tv72[ebp]

; 495  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?load_factor@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::load_factor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?bucket_count@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?bucket_count@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::bucket_count, COMDAT
; _this$ = ecx

; 421  : 		return (_Maxidx);

	mov	eax, DWORD PTR [ecx+28]

; 422  : 		}

	ret	0
?bucket_count@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::bucket_count
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::size, COMDAT
; _this$ = ecx

; 387  : 		return (_List.size());

	mov	eax, DWORD PTR [ecx+8]

; 388  : 		}

	ret	0
?size@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 371  : 		{	// make iterator from const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 372  : 		return (_List._Make_iter(_Where));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 373  : 		}

	pop	ebp
	ret	8
?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V32@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 366  : 		{	// make iterator from _Unchecked_const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 367  : 		return (_List._Make_iter(_Where));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 368  : 		}

	pop	ebp
	ret	8
?_Make_iter@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 361  : 		{	// return iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 363  : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 356  : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx

; 358  : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Unchecked_begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 346  : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 347  : 		return (_List._Unchecked_begin());

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 348  : 		}

	pop	ebp
	ret	4
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::end, COMDAT
; _this$ = ecx

; 341  : 		{	// return iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 343  : 		}

	pop	ebp
	ret	4
?end@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??1?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::~_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >, COMDAT
; _this$ = ecx

; 307  : 		{	// destroy hash table

	npad	2
	push	edi
	mov	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [edi+12]
	test	ecx, ecx
	je	SHORT $LN7@Hash

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [edi+20]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [edi+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [edi+16], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [edi+20], 0
$LN7@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi+4]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	ecx, DWORD PTR [eax]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR [edi+4]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+8], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	ecx, DWORD PTR [edi+4]
	je	SHORT $LN109@Hash
	push	esi
	npad	1
$LL110@Hash:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	ecx, esi
	cmp	esi, DWORD PTR [edi+4]
	jne	SHORT $LL110@Hash
	pop	esi
$LN109@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR [edi+4]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 309  : 		}

	ret	0
??1?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::~_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_this$ = 8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >, COMDAT
; _this$ = ecx

; 197  : 		{	// construct empty hash table

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	lea	ebx, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 36   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR __Parg$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	mov	ecx, ebx
	push	edi
	push	0
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 36   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 195  : 			_List(_Al),

	mov	DWORD PTR _this$[ebp], ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ebx], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [ebx+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [ebx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 195  : 			_List(_Al),

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [esi+12], 0

; 477  : 		_Mylast(),

	mov	DWORD PTR [esi+16], 0

; 478  : 		_Myend()

	mov	DWORD PTR [esi+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 198  : 		_Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [esi], 1065353216		; 3f800000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1720 : 		return (this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+20]
	sub	eax, DWORD PTR [esi+12]
	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 196  : 			_Vec(_Al)

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1529 : 		if (_Newcapacity > capacity())

	cmp	eax, 16					; 00000010H
	jae	SHORT $LN69@Hash

; 1530 : 			{	// something to do (reserve() never shrinks)
; 1531 : 			if (_Newcapacity > max_size())
; 1532 : 				{
; 1533 : 				_Xlength();
; 1534 : 				}
; 1535 : 
; 1536 : 			_Reallocate_exactly(_Newcapacity);

	push	16					; 00000010H
	lea	ecx, DWORD PTR [esi+12]
	call	?_Reallocate_exactly@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@AAEXI@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::_Reallocate_exactly
$LN69@Hash:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 357  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR [ebx]

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	ecx, DWORD PTR [esi+12]

; 357  : 		return (_List._Unchecked_end());

	mov	DWORD PTR $T2[ebp], eax

; 918  : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	push	16					; 00000010H
	call	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::assign

; 199  : 		_Init();
; 200  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	edi

; 919  : 		_Mask = _Buckets - 1;

	mov	DWORD PTR [esi+24], 7

; 920  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [esi+28], 8
	pop	esi
	pop	ebx

; 199  : 		_Init();
; 200  : 		}

	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::~list<SK_Widget *,std::allocator<SK_Widget *> >
__unwindfunclet$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >::~vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<SK_Widget *> >,std::_Iterator_base0> > > >
__ehhandler$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Incsize@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Incsize@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXI@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Incsize, COMDAT
; _this$ = ecx

; 1949 : 		{	// alter element count, with checking

	npad	2
	push	ebp
	mov	ebp, esp

; 1950 : 		if (max_size() - this->_Mysize() - 1 < _Count)

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, 357913940				; 15555554H
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
	sub	eax, edx
	cmp	eax, esi
	jae	SHORT $LN2@Incsize

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN42@Incsize:
$LN2@Incsize:

; 1952 : 		this->_Mysize() += _Count;

	lea	eax, DWORD PTR [edx+esi]
	mov	DWORD PTR [ecx+4], eax
	pop	esi

; 1953 : 		}

	pop	ebp
	ret	4
$LN41@Incsize:
?_Incsize@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXI@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Incsize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Tidy@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXXZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Tidy, COMDAT
; _this$ = ecx

; 1926 : 		{	// free all storage

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	eax, DWORD PTR [edx]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx], edx

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	edx, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx+4], edx

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN5@Tidy
	push	esi
	npad	4
$LL6@Tidy:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	eax, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL6@Tidy
	pop	esi
$LN5@Tidy:
	pop	edi

; 1927 : 		clear();
; 1928 : 		}

	ret	0
?_Tidy@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXXZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_splice@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?_Unchecked_splice@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_splice, COMDAT
; _this$ = ecx

; 1909 : 		{	// splice [_First, _Last) before _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1910 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1911 : 			_Last._Mynode();
; 1912 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [ecx], eax

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, DWORD PTR [eax+4]

; 1913 : 			_Where._Mynode();
; 1914 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	ecx, DWORD PTR __Where$[ebp]

; 1915 : 			_First._Mynode();
; 1916 : 
; 1917 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());
; 1918 : 		this->_Prevnode(_Where._Mynode()) =

	mov	eax, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], eax

; 1919 : 			this->_Prevnode(_Last._Mynode());
; 1920 : 		this->_Prevnode(_Last._Mynode()) =

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1921 : 			this->_Prevnode(_First._Mynode());
; 1922 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax+4], edx

; 1923 : 		}

	pop	ebp
	ret	12					; 0000000cH
?_Unchecked_splice@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_splice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?clear@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXXZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::clear, COMDAT
; _this$ = ecx

; 1534 : 		{	// erase all

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	edx, DWORD PTR [edi]

; 1535 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1536 : 
; 1537 : 		this->_Orphan_ptr(nullptr);
; 1538 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	eax, DWORD PTR [edx]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx], edx

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	edx, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [edx+4], edx

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN3@clear
	push	esi
	npad	4
$LL4@clear:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	eax, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL4@clear
	pop	esi
$LN3@clear:
	pop	edi

; 1547 : 			this->_Freenode(_Pnode);
; 1548 : 			}
; 1549 : 		}

	ret	0
?clear@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXXZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?erase@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::erase, COMDAT
; _this$ = ecx

; 1500 : 		{	// erase element at _Where

	npad	2
	push	ebp
	mov	ebp, esp

; 248  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	edi

; 1500 : 		{	// erase element at _Where

	mov	edi, ecx

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Where$[ebp], edx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [eax+4]

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	DWORD PTR [esi], edx

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	DWORD PTR [edx+4], ecx

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR __Where$[ebp]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 1501 : 		_Nodeptr _Pnode = _Unlinknode(_Where++);
; 1502 : 		this->_Freenode(_Pnode);
; 1503 : 		return (_Make_iter(_Where));
; 1504 : 		}

	pop	ebp
	ret	8
?erase@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unlinknode@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Unlinknode@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unlinknode, COMDAT
; _this$ = ecx

; 1475 : 		{	// unlink node at _Where from the list

	npad	2
	push	ebp
	mov	ebp, esp

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR __Where$[ebp]
	push	esi

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	esi, DWORD PTR [eax+4]

; 1476 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1477 : 		if (_Where._Getcont() != _STD addressof(this->_Get_data())
; 1478 : 			|| _Where._Ptr == this->_Myhead())
; 1479 : 			{
; 1480 : 			_DEBUG_ERROR("list erase iterator outside range");
; 1481 : 			}
; 1482 : 
; 1483 : 		_Nodeptr _Pnode = (_Where)._Mynode();
; 1484 : 		_Orphan_ptr(_Pnode);
; 1485 : 
; 1486 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1487 : 		_Nodeptr _Pnode = (_Where)._Mynode();
; 1488 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1489 : 
; 1490 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi], edx

; 1491 : 			this->_Nextnode(_Pnode);
; 1492 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =

	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], edx

; 1493 : 			this->_Prevnode(_Pnode);
; 1494 : 
; 1495 : 		--this->_Mysize();

	dec	DWORD PTR [ecx+4]
	pop	esi

; 1496 : 		return (_Pnode);
; 1497 : 		}

	pop	ebp
	ret	4
?_Unlinknode@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unlinknode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?front@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEAAPAVSK_Widget@@XZ
_TEXT	SEGMENT
?front@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEAAPAVSK_Widget@@XZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::front, COMDAT
; _this$ = ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [eax]

; 540  : 		return ((reference)_Pnode->_Myval);

	add	eax, 8

; 1288 : 		return (*begin());
; 1289 : 		}

	ret	0
?front@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEAAPAVSK_Widget@@XZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::front
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?max_size@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBEIXZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::max_size, COMDAT
; _this$ = ecx

; 1272 : 		return (this->_Getal().max_size());

	mov	eax, 357913941				; 15555555H

; 1273 : 		}

	ret	0
?max_size@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBEIXZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?size@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBEIXZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::size, COMDAT
; _this$ = ecx

; 1267 : 		return (this->_Mysize());

	mov	eax, DWORD PTR [ecx+4]

; 1268 : 		}

	ret	0
?size@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBEIXZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Make_iter@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Make_iter, COMDAT
; _this$ = ecx

; 1193 : 		{	// make iterator from _Unchecked_const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 1194 : 		return (iterator(_Where._Ptr, _STD addressof(this->_Get_data())));
; 1195 : 		}

	pop	ebp
	ret	8
?_Make_iter@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Make_iter@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Make_iter, COMDAT
; _this$ = ecx

; 1188 : 		{	// make iterator from const_iterator

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx

; 1189 : 		return (iterator(_Where._Ptr, _STD addressof(this->_Get_data())));
; 1190 : 		}

	pop	ebp
	ret	8
?_Make_iter@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1182 : 		{	// return unchecked iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1183 : 		return (_Unchecked_const_iterator(this->_Myhead(),
; 1184 : 			_STD addressof(this->_Get_data())));
; 1185 : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1177 : 		{	// return unchecked iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1178 : 		return (_Unchecked_iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1179 : 		}

	pop	ebp
	ret	4
?_Unchecked_end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Unchecked_begin@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 1165 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1166 : 		return (_Unchecked_iterator(this->_Nextnode(this->_Myhead()),
; 1167 : 			_STD addressof(this->_Get_data())));
; 1168 : 		}

	pop	ebp
	ret	4
?_Unchecked_begin@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::end, COMDAT
; _this$ = ecx

; 1160 : 		{	// return iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1161 : 		return (const_iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1162 : 		}

	pop	ebp
	ret	4
?end@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?begin@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::begin, COMDAT
; _this$ = ecx

; 1143 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1144 : 		return (iterator(this->_Nextnode(this->_Myhead()),
; 1145 : 			_STD addressof(this->_Get_data())));
; 1146 : 		}

	pop	ebp
	ret	4
?begin@?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@2@XZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??1?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::~list<SK_Widget *,std::allocator<SK_Widget *> >, COMDAT
; _this$ = ecx

; 1118 : 		{	// destroy the object

	npad	2
	push	edi
	mov	edi, ecx

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR [edi]

; 1539 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead());

	mov	edx, DWORD PTR [eax]

; 1540 : 		this->_Nextnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax], eax

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR [edi]

; 1541 : 		this->_Prevnode(this->_Myhead()) = this->_Myhead();

	mov	DWORD PTR [eax+4], eax

; 1542 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	cmp	edx, DWORD PTR [edi]
	je	SHORT $LN7@list
	push	esi
	npad	4
$LL8@list:

; 1545 : 			{	// delete an element
; 1546 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	esi, DWORD PTR [edx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1544 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead(); _Pnode = _Pnext)

	mov	edx, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL8@list
	pop	esi
$LN7@list:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR [edi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 1120 : 		}

	ret	0
??1?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::~list<SK_Widget *,std::allocator<SK_Widget *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z PROC ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::list<SK_Widget *,std::allocator<SK_Widget *> >, COMDAT
; _this$ = ecx

; 914  : 		{	// construct empty list, allocator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0

; 914  : 		{	// construct empty list, allocator

	mov	DWORD PTR _this$[ebp], esi

; 523  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 524  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0

; 606  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR [esi], eax

; 915  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@ABV?$allocator@PAVSK_Widget@@@1@@Z ENDP ; std::list<SK_Widget *,std::allocator<SK_Widget *> >::list<SK_Widget *,std::allocator<SK_Widget *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??1?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ PROC ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::~_List_buy<SK_Widget *,std::allocator<SK_Widget *> >, COMDAT
; _this$ = ecx

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	ret	0
??1?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAE@XZ ENDP ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::~_List_buy<SK_Widget *,std::allocator<SK_Widget *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Freenode@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@@Z PROC ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Freenode, COMDAT
; _this$ = ecx

; 864  : 		{	// give node back

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 872  : 		}

	pop	ebp
	ret	4
?_Freenode@?$_List_buy@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@@Z ENDP ; std::_List_buy<SK_Widget *,std::allocator<SK_Widget *> >::_Freenode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >,std::_List_val<std::_List_simple_types<SK_Widget *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAVSK_Widget@@PAU?$_List_node@PAVSK_Widget@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAVSK_Widget@@PAU?$_List_node@PAVSK_Widget@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Myval, COMDAT

; 539  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 541  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAVSK_Widget@@PAU?$_List_node@PAVSK_Widget@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Prevnode, COMDAT

; 534  : 		{	// return reference to predecessor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 536  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Nextnode, COMDAT

; 529  : 		{	// return reference to successor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 531  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_List_val<std::_List_simple_types<SK_Widget *> >, COMDAT
; _this$ = ecx

; 523  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0

; 526  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<SK_Widget *> >::_List_val<std::_List_simple_types<SK_Widget *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABIXZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Mysize, COMDAT
; _this$ = ecx

; 813  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 814  : 		}

	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABIXZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAIXZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Mysize, COMDAT
; _this$ = ecx

; 808  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 809  : 		}

	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myhead@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABQAU?$_List_node@PAVSK_Widget@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABQAU?$_List_node@PAVSK_Widget@@PAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myhead, COMDAT
; _this$ = ecx

; 803  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 804  : 		}

	ret	0
?_Myhead@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABQAU?$_List_node@PAVSK_Widget@@PAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myhead@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myhead, COMDAT
; _this$ = ecx

; 798  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 799  : 		}

	ret	0
?_Myhead@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Get_data, COMDAT
; _this$ = ecx

; 793  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 794  : 		}

	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Get_data, COMDAT
; _this$ = ecx

; 788  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 789  : 		}

	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Getal, COMDAT
; _this$ = ecx

; 783  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 784  : 		}

	ret	0
?_Getal@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Getal, COMDAT
; _this$ = ecx

; 778  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 779  : 		}

	ret	0
?_Getal@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0, COMDAT
; _this$ = ecx

; 745  : 		{	// allocate a node and set links

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN26@Buynode0
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN98@Buynode0:
$LN26@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 748  : 		if (_Next == _Nodeptr())

	mov	ecx, DWORD PTR __Next$[ebp]
	test	ecx, ecx
	jne	SHORT $LN95@Buynode0

; 749  : 			{	// point at self
; 750  : 			_Next = _Pnode;

	mov	ecx, eax

; 751  : 			_Prev = _Pnode;

	mov	edx, eax
	jmp	SHORT $LN2@Buynode0
$LN95@Buynode0:
	mov	edx, DWORD PTR __Prev$[ebp]
$LN2@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	lea	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN4@Buynode0
	mov	DWORD PTR [ecx], edx
$LN4@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 764  : 		}

	pop	ebp
	ret	8
$LN97@Buynode0:
?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Freeheadnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 735  : 		{	// free head node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 741  : 		}

	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Buyheadnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ
_TEXT	SEGMENT
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 731  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buynode0

; 732  : 		}

	ret	0
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ??1?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::~_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 612  : 		}

	ret	0
??1?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::~_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Myval@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAVSK_Widget@@PAU?$_List_node@PAVSK_Widget@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAVSK_Widget@@PAU?$_List_node@PAVSK_Widget@@PAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myval, COMDAT

; 589  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 540  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 590  : 		return (_List_val<_Val_types>::_Myval(_Pnode));
; 591  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAVSK_Widget@@PAU?$_List_node@PAVSK_Widget@@PAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Prevnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Prevnode, COMDAT

; 584  : 		{	// return reference to predecessor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 535  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 585  : 		return (_List_val<_Val_types>::_Prevnode(_Pnode));
; 586  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
;	COMDAT ?_Nextnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Nextnode, COMDAT

; 579  : 		{	// return reference to successor pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 580  : 		return (_List_val<_Val_types>::_Nextnode(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]

; 581  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_alloc@U?$_List_base_types@PAVSK_Widget@@V?$allocator@PAVSK_Widget@@@std@@@std@@@std@@SAAAPAU?$_List_node@PAVSK_Widget@@PAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<SK_Widget *,std::allocator<SK_Widget *> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 357913941				; 15555555H

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ; std::allocator<std::_List_node<SK_Widget *,void *> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<SK_Widget *,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 357913941				; 15555555H

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<SK_Widget *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<SK_Widget *,void *> >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 357913941				; 15555555H

; 852  : 		}

	ret	0
?max_size@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<SK_Widget *,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<SK_Widget *,void *> >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 357913941				; 15555555H
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<SK_Widget *,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<SK_Widget *,void *> >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	12					; 0000000cH
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@PAVSK_Widget@@PAX@std@@@std@@QAEXPAU?$_List_node@PAVSK_Widget@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<SK_Widget *,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@PAVSK_Widget@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVSK_Widget@@@std@@QAE@XZ PROC		; std::allocator<SK_Widget *>::allocator<SK_Widget *>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@PAVSK_Widget@@@std@@QAE@XZ ENDP		; std::allocator<SK_Widget *>::allocator<SK_Widget *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
;	COMDAT ?_Kfn@?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@SAABQAVSK_Widget@@ABQAV3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@SAABQAVSK_Widget@@ABQAV3@@Z PROC ; std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>::_Kfn, COMDAT

; 43   : 		{	// return entire value as key

	npad	2
	push	ebp
	mov	ebp, esp

; 44   : 		return (_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 45   : 		}

	pop	ebp
	ret	0
?_Kfn@?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@SAABQAVSK_Widget@@ABQAV3@@Z ENDP ; std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>::_Kfn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
;	COMDAT ??0?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@@Z
_TEXT	SEGMENT
__Traits$ = 8						; size = 4
??0?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@@Z PROC ; std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>, COMDAT
; _this$ = ecx

; 37   : 		{	// construct with specified comparator

	npad	2
	push	ebp
	mov	ebp, esp

; 36   : 		: _Tr(_Traits)

	mov	eax, DWORD PTR __Traits$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 38   : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@@Z ENDP ; std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@XZ PROC ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@XZ ENDP ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@XZ PROC ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@XZ ENDP ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QBEABU?$hash@PAVSK_Widget@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QBEABU?$hash@PAVSK_Widget@@@2@XZ PROC ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$hash@PAVSK_Widget@@@std@@V?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@2@$00@std@@QBEABU?$hash@PAVSK_Widget@@@2@XZ ENDP ; std::_Compressed_pair<std::hash<SK_Widget *>,std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QBEABMXZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QBEABMXZ PROC ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QBEABMXZ ENDP ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QAEAAMXZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QAEAAMXZ PROC ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QAEAAMXZ ENDP ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QBEABU?$equal_to@PAVSK_Widget@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QBEABU?$equal_to@PAVSK_Widget@@@2@XZ PROC ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$equal_to@PAVSK_Widget@@@std@@M$00@std@@QBEABU?$equal_to@PAVSK_Widget@@@2@XZ ENDP ; std::_Compressed_pair<std::equal_to<SK_Widget *>,float,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$_Bitwise_hash@PAVSK_Widget@@@std@@QBEIABQAVSK_Widget@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??R?$_Bitwise_hash@PAVSK_Widget@@@std@@QBEIABQAVSK_Widget@@@Z PROC ; std::_Bitwise_hash<SK_Widget *>::operator(), COMDAT
; _this$ = ecx

; 360  : 		{	// hash _Keyval to size_t value by pseudorandomizing transform

	npad	2
	push	ebp
	mov	ebp, esp

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edx, DWORD PTR __Keyval$[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, eax, 16777619
	movzx	eax, BYTE PTR [edx+1]
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619

; 361  : 		return (_Hash_seq((const unsigned char *)&_Keyval, sizeof (_Kty)));
; 362  : 		}

	pop	ebp
	ret	4
??R?$_Bitwise_hash@PAVSK_Widget@@@std@@QBEIABQAVSK_Widget@@@Z ENDP ; std::_Bitwise_hash<SK_Widget *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$equal_to@PAVSK_Widget@@@std@@QBE_NABQAVSK_Widget@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$equal_to@PAVSK_Widget@@@std@@QBE_NABQAVSK_Widget@@0@Z PROC ; std::equal_to<SK_Widget *>::operator(), COMDAT
; _this$ = ecx

; 219  : 		{	// apply operator== to operands

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 220  : 		return (_Left == _Right);
; 221  : 		}

	pop	ebp
	ret	8
??R?$equal_to@PAVSK_Widget@@@std@@QBE_NABQAVSK_Widget@@0@Z ENDP ; std::equal_to<SK_Widget *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Get_max_bucket_size@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABMXZ
_TEXT	SEGMENT
?_Get_max_bucket_size@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABMXZ PROC ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Get_max_bucket_size, COMDAT
; _this$ = ecx

; 138  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 139  : 		}

	ret	0
?_Get_max_bucket_size@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABMXZ ENDP ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Get_max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Get_max_bucket_size@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QAEAAMXZ
_TEXT	SEGMENT
?_Get_max_bucket_size@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QAEAAMXZ PROC ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Get_max_bucket_size, COMDAT
; _this$ = ecx

; 133  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 134  : 		}

	ret	0
?_Get_max_bucket_size@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QAEAAMXZ ENDP ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Get_max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Getkeyeq@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABU?$equal_to@PAVSK_Widget@@@2@XZ
_TEXT	SEGMENT
?_Getkeyeq@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABU?$equal_to@PAVSK_Widget@@@2@XZ PROC ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Getkeyeq, COMDAT
; _this$ = ecx

; 128  : 		return (_Mypair._Get_second()._Get_first());

	mov	eax, ecx

; 129  : 		}

	ret	0
?_Getkeyeq@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABU?$equal_to@PAVSK_Widget@@@2@XZ ENDP ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Getkeyeq
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ?_Gethash@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABU?$hash@PAVSK_Widget@@@2@XZ
_TEXT	SEGMENT
?_Gethash@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABU?$hash@PAVSK_Widget@@@2@XZ PROC ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Gethash, COMDAT
; _this$ = ecx

; 123  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 124  : 		}

	ret	0
?_Gethash@?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEABU?$hash@PAVSK_Widget@@@2@XZ ENDP ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Gethash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??R?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBE_NABQAVSK_Widget@@0@Z
_TEXT	SEGMENT
__Keyval1$ = 8						; size = 4
__Keyval2$ = 12						; size = 4
??R?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBE_NABQAVSK_Widget@@0@Z PROC ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::operator(), COMDAT
; _this$ = ecx

; 117  : 		{	// test if _Keyval1 NOT equal to _Keyval2

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Keyval1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Keyval2$[ebp]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 118  : 		return (!_Getkeyeq()(_Keyval1, _Keyval2));
; 119  : 		}

	pop	ebp
	ret	8
??R?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBE_NABQAVSK_Widget@@0@Z ENDP ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??R?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEIABQAVSK_Widget@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??R?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEIABQAVSK_Widget@@@Z PROC ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::operator(), COMDAT
; _this$ = ecx

; 112  : 		{	// hash _Keyval to size_t value

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 346  : 		_Val ^= (size_t)_First[_Next];

	mov	edx, DWORD PTR __Keyval$[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, -2128831035			; 811c9dc5H

; 347  : 		_Val *= _FNV_prime;

	imul	ecx, eax, 16777619
	movzx	eax, BYTE PTR [edx+1]
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	movzx	eax, BYTE PTR [edx+3]
	imul	ecx, ecx, 16777619
	xor	ecx, eax
	imul	eax, ecx, 16777619
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 114  : 		}

	pop	ebp
	ret	4
??R?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QBEIABQAVSK_Widget@@@Z ENDP ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
;	COMDAT ??0?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QAE@U?$hash@PAVSK_Widget@@@1@U?$equal_to@PAVSK_Widget@@@1@@Z
_TEXT	SEGMENT
__Hasharg$ = 8						; size = 1
__Keyeqarg$ = 12					; size = 1
??0?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QAE@U?$hash@PAVSK_Widget@@@1@U?$equal_to@PAVSK_Widget@@@1@@Z PROC ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 109  : 		}

	mov	eax, ecx
	ret	8
??0?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@QAE@U?$hash@PAVSK_Widget@@@1@U?$equal_to@PAVSK_Widget@@@1@@Z ENDP ; std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
$T1 = -52						; size = 16
_col$2 = -52						; size = 16
_xy0$3 = -36						; size = 8
_xy1$4 = -28						; size = 8
_pos$ = -20						; size = 8
$T5 = -12						; size = 8
$T6 = -12						; size = 8
$T7 = -12						; size = 8
$T8 = -12						; size = 8
_size$ = -12						; size = 8
_b$9 = -8						; size = 4
_draw_vert_ruler$1$ = -1				; size = 1
_g$1$ = 8						; size = 4
_g$10 = 8						; size = 4
_pWidget$ = 8						; size = 4
tv493 = 12						; size = 4
tv406 = 12						; size = 4
_r$11 = 12						; size = 4
$T12 = 12						; size = 4
$T13 = 12						; size = 4
_n$ = 12						; size = 1
_s$ = 16						; size = 1
tv447 = 20						; size = 4
_e$ = 20						; size = 1
_w$ = 24						; size = 1
?SK_Widget_ProcessDocking@@YAXPAVSK_Widget@@_N111@Z PROC ; SK_Widget_ProcessDocking

; 196  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	ebx
	push	esi
	push	edi

; 197  :   ImGuiIO& io (ImGui::GetIO ());

	call	?GetIO@ImGui@@YAAAUImGuiIO@@XZ		; ImGui::GetIO
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 138  :   const ImVec2&      getPos          (void) const { return    pos;            }

	mov	esi, DWORD PTR _pWidget$[ebp]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 197  :   ImGuiIO& io (ImGui::GetIO ());

	mov	edi, eax

; 198  : 
; 199  :   // Docking alignment visualiztion
; 200  :   bool draw_horz_ruler = false;
; 201  :   bool draw_vert_ruler = false;

	xor	al, al
	xor	bh, bh
	mov	BYTE PTR _draw_vert_ruler$1$[ebp], al
	movss	xmm0, DWORD PTR [esi+216]

; 202  : 
; 203  :   ImVec2 pos  = pWidget->getPos  ();
; 204  :   ImVec2 size = pWidget->getSize ();

	mov	ecx, DWORD PTR [esi+208]
	mov	eax, DWORD PTR [esi+212]
	movss	DWORD PTR _pos$[ebp], xmm0
	movss	xmm0, DWORD PTR [esi+220]
	movss	DWORD PTR _pos$[ebp+4], xmm0
	mov	DWORD PTR _size$[ebp], ecx
	mov	DWORD PTR _size$[ebp+4], eax

; 205  : 
; 206  :   ImGuiContext& g = *ImGui::GetCurrentContext ();

	call	?GetCurrentContext@ImGui@@YAPAUImGuiContext@@XZ ; ImGui::GetCurrentContext

; 207  : 
; 208  :   if (n || s)

	mov	bl, BYTE PTR _s$[ebp]
	mov	DWORD PTR _g$1$[ebp], eax
	cmp	BYTE PTR _n$[ebp], bh
	jne	SHORT $LN3@SK_Widget_
	test	bl, bl
	je	$LN8@SK_Widget_
$LN3@SK_Widget_:

; 210  :     if (pWidget->isMovable () && ( ( ImGui::IsMouseDragging (0) && ImGui::IsWindowHovered () ) ||

	cmp	BYTE PTR [esi+188], 0
	je	SHORT $LN4@SK_Widget_
	push	ecx
	mov	DWORD PTR [esp], -1082130432		; bf800000H
	push	0
	call	?IsMouseDragging@ImGui@@YA_NHM@Z	; ImGui::IsMouseDragging
	add	esp, 8
	test	al, al
	je	SHORT $LN6@SK_Widget_
	call	?IsWindowHovered@ImGui@@YA_NXZ		; ImGui::IsWindowHovered
	test	al, al
	jne	SHORT $LN5@SK_Widget_
$LN6@SK_Widget_:
	push	ecx
	mov	DWORD PTR [esp], -1082130432		; bf800000H
	push	1
	call	?IsNavDragging@ImGui@@YA_NHM@Z		; ImGui::IsNavDragging
	add	esp, 8
	test	al, al
	je	SHORT $LN4@SK_Widget_
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 793  :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->Accessed = true; return g.CurrentWindow; }

	mov	ecx, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	mov	eax, DWORD PTR [ecx+6240]
	mov	BYTE PTR [eax+134], 1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 210  :     if (pWidget->isMovable () && ( ( ImGui::IsMouseDragging (0) && ImGui::IsWindowHovered () ) ||

	mov	eax, DWORD PTR _g$1$[ebp]
	mov	eax, DWORD PTR [eax+6432]
	cmp	eax, DWORD PTR [ecx+6240]
	jne	SHORT $LN4@SK_Widget_
$LN5@SK_Widget_:

; 211  :                                    ( ImGui::IsNavDragging   ( ) && g.NavWindowingTarget == ImGui::GetCurrentWindow () ) ))
; 212  :     {
; 213  :       draw_horz_ruler = true;

	mov	bh, 1
$LN4@SK_Widget_:

; 214  :     }
; 215  : 
; 216  :     if (n)

	cmp	BYTE PTR _n$[ebp], 0
	je	SHORT $LN111@SK_Widget_

; 217  :       pos.y = 0.0;

	mov	DWORD PTR _pos$[ebp+4], 0
$LN111@SK_Widget_:

; 218  : 
; 219  :     if (s)

	test	bl, bl
	je	SHORT $LN8@SK_Widget_

; 220  :       pos.y = io.DisplaySize.y - size.y;

	movss	xmm0, DWORD PTR [edi+4]
	subss	xmm0, DWORD PTR _size$[ebp+4]
	movss	DWORD PTR _pos$[ebp+4], xmm0
$LN8@SK_Widget_:

; 221  :   }
; 222  : 
; 223  : 
; 224  :   if (e || w)

	mov	bl, BYTE PTR _e$[ebp]
	test	bl, bl
	jne	SHORT $LN10@SK_Widget_
	cmp	BYTE PTR _w$[ebp], bl
	jne	SHORT $LN10@SK_Widget_

; 236  :       pos.x = 0.0;

	movss	xmm2, DWORD PTR _pos$[ebp]
	jmp	$LN116@SK_Widget_
$LN10@SK_Widget_:

; 226  :     if (pWidget->isMovable () && ( ( ImGui::IsMouseDragging (0) && ImGui::IsWindowHovered () ) ||

	cmp	BYTE PTR [esi+188], 0
	je	SHORT $LN113@SK_Widget_
	push	ecx
	mov	DWORD PTR [esp], -1082130432		; bf800000H
	push	0
	call	?IsMouseDragging@ImGui@@YA_NHM@Z	; ImGui::IsMouseDragging
	add	esp, 8
	test	al, al
	je	SHORT $LN13@SK_Widget_
	call	?IsWindowHovered@ImGui@@YA_NXZ		; ImGui::IsWindowHovered
	test	al, al
	jne	SHORT $LN12@SK_Widget_
$LN13@SK_Widget_:
	push	ecx
	mov	DWORD PTR [esp], -1082130432		; bf800000H
	push	1
	call	?IsNavDragging@ImGui@@YA_NHM@Z		; ImGui::IsNavDragging
	add	esp, 8
	test	al, al
	je	SHORT $LN113@SK_Widget_
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 793  :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->Accessed = true; return g.CurrentWindow; }

	mov	ecx, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	mov	eax, DWORD PTR [ecx+6240]
	mov	BYTE PTR [eax+134], 1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 226  :     if (pWidget->isMovable () && ( ( ImGui::IsMouseDragging (0) && ImGui::IsWindowHovered () ) ||

	mov	eax, DWORD PTR _g$1$[ebp]
	mov	eax, DWORD PTR [eax+6432]
	cmp	eax, DWORD PTR [ecx+6240]
	jne	SHORT $LN113@SK_Widget_
$LN12@SK_Widget_:

; 227  :                                    ( ImGui::IsNavDragging   ( ) && g.NavWindowingTarget == ImGui::GetCurrentWindow () ) ))
; 228  :     {
; 229  :       draw_vert_ruler = true;

	mov	al, 1
	mov	BYTE PTR _draw_vert_ruler$1$[ebp], al
$LN113@SK_Widget_:

; 230  :     }
; 231  : 
; 232  :     if (e)

	test	bl, bl
	je	SHORT $LN114@SK_Widget_

; 233  :       pos.x = io.DisplaySize.x - size.x;

	movss	xmm2, DWORD PTR [edi]
	subss	xmm2, DWORD PTR _size$[ebp]
	movss	DWORD PTR _pos$[ebp], xmm2
	jmp	SHORT $LN14@SK_Widget_
$LN114@SK_Widget_:
	movss	xmm2, DWORD PTR _pos$[ebp]
$LN14@SK_Widget_:

; 234  : 
; 235  :     if (w)

	cmp	BYTE PTR _w$[ebp], 0
	je	SHORT $LN116@SK_Widget_

; 236  :       pos.x = 0.0;

	xorps	xmm2, xmm2
	movss	DWORD PTR _pos$[ebp], xmm2
$LN116@SK_Widget_:

; 237  :   }
; 238  : 
; 239  : 
; 240  :   if (                   size.x > 0 &&                    size.y > 0 &&
; 241  :       io.DisplaySize.x - size.x > 0 && io.DisplaySize.y - size.y > 0)

	movss	xmm5, DWORD PTR _size$[ebp]
	xorps	xmm3, xmm3
	comiss	xmm5, xmm3
	jbe	$LN16@SK_Widget_
	movss	xmm4, DWORD PTR _size$[ebp+4]
	comiss	xmm4, xmm3
	jbe	SHORT $LN16@SK_Widget_
	movss	xmm1, DWORD PTR [edi]
	subss	xmm1, xmm5
	comiss	xmm1, xmm3
	jbe	SHORT $LN16@SK_Widget_
	movss	xmm0, DWORD PTR [edi+4]
	subss	xmm0, xmm4
	comiss	xmm0, xmm3
	jbe	SHORT $LN16@SK_Widget_
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	comiss	xmm2, xmm1
	lea	eax, DWORD PTR $T13[ebp]
	lea	ecx, DWORD PTR _pos$[ebp]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 243  :     pos.x = std::max (0.0f, std::min (pos.x, io.DisplaySize.x - size.x));

	movss	DWORD PTR $T13[ebp], xmm1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	cmovbe	eax, ecx

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, xmm3
	ja	SHORT $LN119@SK_Widget_
	movss	xmm2, xmm3
	jmp	SHORT $LN120@SK_Widget_
$LN119@SK_Widget_:
	movss	xmm2, xmm0
$LN120@SK_Widget_:

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	lea	eax, DWORD PTR $T12[ebp]
	lea	ecx, DWORD PTR _pos$[ebp+4]
	movss	xmm0, DWORD PTR _pos$[ebp+4]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 243  :     pos.x = std::max (0.0f, std::min (pos.x, io.DisplaySize.x - size.x));

	movss	DWORD PTR _pos$[ebp], xmm2

; 244  :     pos.y = std::max (0.0f, std::min (pos.y, io.DisplaySize.y - size.y));

	movss	xmm1, DWORD PTR [edi+4]
	subss	xmm1, xmm4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	comiss	xmm0, xmm1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 244  :     pos.y = std::max (0.0f, std::min (pos.y, io.DisplaySize.y - size.y));

	movss	DWORD PTR $T12[ebp], xmm1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	cmovbe	eax, ecx

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, xmm3
	ja	SHORT $LN121@SK_Widget_
	movss	xmm0, xmm3
	jmp	SHORT $LN122@SK_Widget_
$LN121@SK_Widget_:
	movss	xmm0, xmm0
$LN122@SK_Widget_:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 244  :     pos.y = std::max (0.0f, std::min (pos.y, io.DisplaySize.y - size.y));

	movss	DWORD PTR _pos$[ebp+4], xmm0
$LN16@SK_Widget_:

; 245  :   }
; 246  : 
; 247  : 
; 248  :   if (pWidget->getDockingPoint () != SK_Widget::DockAnchor::None)

	cmp	DWORD PTR [esi+224], 0
	je	SHORT $LN17@SK_Widget_

; 249  :   {
; 250  :         pWidget->setPos (pos);
; 251  :     ImGui::SetWindowPos (pos, ImGuiSetCond_Always);

	movss	xmm0, DWORD PTR _pos$[ebp+4]
	lea	eax, DWORD PTR _pos$[ebp]
	push	1
	push	eax
	movss	DWORD PTR [esi+216], xmm2
	movss	DWORD PTR [esi+220], xmm0
	call	?SetWindowPos@ImGui@@YAXABUImVec2@@H@Z	; ImGui::SetWindowPos
	movss	xmm5, DWORD PTR _size$[ebp]
	add	esp, 8
$LN17@SK_Widget_:

; 252  :   }
; 253  : 
; 254  : 
; 255  :   if (draw_horz_ruler ^ draw_vert_ruler)

	mov	al, BYTE PTR _draw_vert_ruler$1$[ebp]
	cmp	al, bh
	je	$LN18@SK_Widget_

; 256  :   {
; 257  :     ImVec2 horz_pos       = ImVec2 (       e ? io.DisplaySize.x - size.x : size.x, 0.0f );

	test	bl, bl
	je	SHORT $LN22@SK_Widget_
	movss	xmm0, DWORD PTR [edi]
	subss	xmm0, xmm5
	jmp	SHORT $LN23@SK_Widget_
$LN22@SK_Widget_:
	movaps	xmm0, xmm5
$LN23@SK_Widget_:

; 258  :     ImVec2 vert_pos       = ImVec2 ( 0.0f, s ? io.DisplaySize.y - size.y : size.y       );

	cmp	BYTE PTR _s$[ebp], 0
	je	SHORT $LN24@SK_Widget_
	movss	xmm1, DWORD PTR [edi+4]
	subss	xmm1, DWORD PTR _size$[ebp+4]
	jmp	SHORT $LN25@SK_Widget_
$LN24@SK_Widget_:
	movss	xmm1, DWORD PTR _size$[ebp+4]
$LN25@SK_Widget_:
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 97   :     ImVec2() { x = y = 0.0f; }

	mov	DWORD PTR _xy0$3[ebp+4], 0
	mov	DWORD PTR _xy0$3[ebp], 0
	mov	DWORD PTR _xy1$4[ebp+4], 0
	mov	DWORD PTR _xy1$4[ebp], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 262  :     if (draw_vert_ruler)

	test	al, al
	je	SHORT $LN19@SK_Widget_
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T8[ebp], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 264  :       xy0 = ImVec2 ( horz_pos.x, 0.0f             );

	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR _xy0$3[ebp], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T8[ebp+4], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 264  :       xy0 = ImVec2 ( horz_pos.x, 0.0f             );

	mov	eax, DWORD PTR $T8[ebp+4]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T7[ebp], xmm0
	movss	xmm0, DWORD PTR [edi+4]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 264  :       xy0 = ImVec2 ( horz_pos.x, 0.0f             );

	mov	DWORD PTR _xy0$3[ebp+4], eax

; 265  :       xy1 = ImVec2 ( horz_pos.x, io.DisplaySize.y );

	mov	eax, DWORD PTR $T7[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T7[ebp+4], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 265  :       xy1 = ImVec2 ( horz_pos.x, io.DisplaySize.y );

	mov	DWORD PTR _xy1$4[ebp], eax
	mov	eax, DWORD PTR $T7[ebp+4]
	mov	DWORD PTR _xy1$4[ebp+4], eax
$LN19@SK_Widget_:

; 266  :     }
; 267  : 
; 268  :     if (draw_horz_ruler)

	test	bh, bh
	je	SHORT $LN20@SK_Widget_
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	xmm0, DWORD PTR [edi]
	mov	DWORD PTR $T6[ebp], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 270  :       xy0 = ImVec2 ( 0.0f,             vert_pos.y );

	mov	eax, DWORD PTR $T6[ebp]
	mov	DWORD PTR _xy0$3[ebp], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T6[ebp+4], xmm1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 270  :       xy0 = ImVec2 ( 0.0f,             vert_pos.y );

	mov	eax, DWORD PTR $T6[ebp+4]
	mov	DWORD PTR _xy0$3[ebp+4], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T5[ebp], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 271  :       xy1 = ImVec2 ( io.DisplaySize.x, vert_pos.y );

	mov	eax, DWORD PTR $T5[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T5[ebp+4], xmm1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 271  :       xy1 = ImVec2 ( io.DisplaySize.x, vert_pos.y );

	mov	DWORD PTR _xy1$4[ebp], eax
	mov	eax, DWORD PTR $T5[ebp+4]
	mov	DWORD PTR _xy1$4[ebp+4], eax
$LN20@SK_Widget_:

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	mov	esi, DWORD PTR __imp__timeGetTime@0
	call	esi
	xor	edx, edx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h

; 672  :         return (float)floor(_X);

	movss	xmm2, DWORD PTR __real@80000000
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	mov	edi, 500				; 000001f4H
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h

; 672  :         return (float)floor(_X);

	movss	xmm1, DWORD PTR __real@4b000000
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	div	edi
	movd	xmm0, edx
	cvtdq2pd xmm0, xmm0
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	cvtpd2ps xmm3, xmm0
	mulss	xmm3, DWORD PTR __real@3b03126f
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h

; 672  :         return (float)floor(_X);

	andps	xmm2, xmm3
	movaps	xmm0, xmm3
	xorps	xmm0, xmm2
	movaps	xmm4, xmm3
	cmpltss	xmm0, xmm1
	andps	xmm1, xmm0
	orps	xmm1, xmm2
	addss	xmm4, xmm1
	subss	xmm4, xmm1
	movss	xmm1, DWORD PTR __real@3f800000
	movaps	xmm0, xmm4
	subss	xmm0, xmm3
	cmpnless xmm0, xmm2
	andps	xmm0, xmm1
	subss	xmm4, xmm0
	movss	DWORD PTR tv406[ebp], xmm4
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	call	esi
	xor	edx, edx
	div	edi
	movd	xmm0, edx
	cvtdq2pd xmm0, xmm0
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	cvtpd2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR __real@3b03126f
	cvtps2pd xmm1, xmm0
	movss	xmm0, DWORD PTR tv406[ebp]
	addsd	xmm1, QWORD PTR __real@3fd54fdf3b645a1d
	cvtps2pd xmm0, xmm0
	subsd	xmm1, xmm0
	cvtpd2ps xmm0, xmm1
	movss	DWORD PTR tv447[ebp], xmm0
	call	esi
	xor	edx, edx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h

; 672  :         return (float)floor(_X);

	movss	xmm4, DWORD PTR __real@80000000
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	mov	edi, 250				; 000000faH
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h

; 672  :         return (float)floor(_X);

	movss	xmm3, DWORD PTR __real@4b000000
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	div	edi
	movd	xmm0, edx
	cvtdq2pd xmm0, xmm0
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	cvtpd2ps xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@3b83126f
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h

; 672  :         return (float)floor(_X);

	andps	xmm4, xmm1
	movaps	xmm0, xmm1
	xorps	xmm0, xmm4
	movaps	xmm2, xmm1
	cmpltss	xmm0, xmm3
	andps	xmm3, xmm0
	orps	xmm3, xmm4
	addss	xmm2, xmm3
	subss	xmm2, xmm3
	movaps	xmm0, xmm2
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR __real@3f800000
	cmpnless xmm0, xmm4
	andps	xmm0, xmm1
	subss	xmm2, xmm0
	movss	DWORD PTR tv493[ebp], xmm2
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	call	esi
	xor	edx, edx
	div	edi
	movd	xmm0, edx
	cvtdq2pd xmm0, xmm0
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	cvtpd2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR __real@3b83126f
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 1133 :     static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }

	lea	eax, DWORD PTR _b$9[ebp]
	push	eax
	movss	xmm1, DWORD PTR tv447[ebp]
	lea	eax, DWORD PTR _g$10[ebp]
	minss	xmm1, DWORD PTR __real@3f800000
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	addss	xmm0, DWORD PTR __real@3e257eaa
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 1133 :     static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }

	push	eax
	lea	eax, DWORD PTR _r$11[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 274  :     ImVec4 col = ImColor::HSV ( 0.133333f, 

	subss	xmm0, DWORD PTR tv493[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 1133 :     static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }

	movss	DWORD PTR [esp+8], xmm1
	minss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp+4], xmm0
	mov	DWORD PTR [esp], 1040746610		; 3e088872H
	call	?ColorConvertHSVtoRGB@ImGui@@YAXMMMAAM00@Z ; ImGui::ColorConvertHSVtoRGB

; 1129 :     inline operator ImVec4() const                                  { return Value; }

	movss	xmm0, DWORD PTR _r$11[ebp]

; 1128 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	eax, DWORD PTR $T1[ebp]

; 1129 :     inline operator ImVec4() const                                  { return Value; }

	movss	DWORD PTR _col$2[ebp], xmm0
	movss	xmm0, DWORD PTR _g$10[ebp]
	movss	DWORD PTR _col$2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _b$9[ebp]
	movss	DWORD PTR _col$2[ebp+8], xmm0
	mov	DWORD PTR _col$2[ebp+12], 1065353216	; 3f800000H

; 1127 :     ImColor(const ImVec4& col)                                      { Value = col; }

	movups	xmm0, XMMWORD PTR _col$2[ebp]

; 1128 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	push	eax

; 1127 :     ImColor(const ImVec4& col)                                      { Value = col; }

	movups	XMMWORD PTR $T1[ebp], xmm0

; 1128 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	call	?ColorConvertFloat4ToU32@ImGui@@YAIABUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
	add	esp, 28					; 0000001cH
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 280  :       ImColor (col);

	mov	esi, eax

; 281  :     
; 282  :     ImDrawList* draw_list =
; 283  :       ImGui::GetWindowDrawList ();

	call	?GetWindowDrawList@ImGui@@YAPAUImDrawList@@XZ ; ImGui::GetWindowDrawList
	mov	edi, eax

; 284  :     
; 285  :     draw_list->PushClipRectFullScreen (                                   );

	mov	ecx, edi
	call	?PushClipRectFullScreen@ImDrawList@@QAEXXZ ; ImDrawList::PushClipRectFullScreen

; 286  :     draw_list->AddRect                ( xy0, xy1, col32, 0.0f, 0x00, 2.5f );

	push	ecx
	mov	DWORD PTR [esp], 1075838976		; 40200000H
	lea	eax, DWORD PTR _xy1$4[ebp]
	push	0
	push	ecx
	mov	DWORD PTR [esp], 0
	mov	ecx, edi
	push	esi
	push	eax
	lea	eax, DWORD PTR _xy0$3[ebp]
	push	eax
	call	?AddRect@ImDrawList@@QAEXABUImVec2@@0IMHM@Z ; ImDrawList::AddRect

; 287  :     draw_list->PopClipRect            (                                   );

	mov	ecx, edi
	call	?PopClipRect@ImDrawList@@QAEXXZ		; ImDrawList::PopClipRect
$LN18@SK_Widget_:
	pop	edi
	pop	esi
	pop	ebx

; 288  :   }
; 289  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_Widget_ProcessDocking@@YAXPAVSK_Widget@@_N111@Z ENDP ; SK_Widget_ProcessDocking
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
;	COMDAT ??$max@M@std@@YAABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YAABMABM0@Z PROC				; std::max<float>, COMDAT

; 3742 : 	{	// return larger of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Left$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	comiss	xmm0, DWORD PTR [eax]
	cmova	eax, ecx

; 3744 : 	}

	pop	ebp
	ret	0
??$max@M@std@@YAABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
;	COMDAT ??$min@M@std@@YAABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YAABMABM0@Z PROC				; std::min<float>, COMDAT

; 3778 : 	{	// return smaller of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx]
	cmova	eax, ecx

; 3780 : 	}

	pop	ebp
	ret	0
??$min@M@std@@YAABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
$T2 = -12						; size = 8
$T3 = -12						; size = 8
$T4 = -12						; size = 8
_size$ = -12						; size = 8
_draw_horz_ruler$1$ = -1				; size = 1
_g$1$ = 8						; size = 4
_pWidget$ = 8						; size = 4
_n$ = 12						; size = 1
_s$ = 16						; size = 1
_e$ = 20						; size = 1
_w$ = 24						; size = 1
_min$ = 28						; size = 4
_max$ = 32						; size = 4
?SK_Widget_CalcClipRect@@YAXPAVSK_Widget@@_N111AAUImVec2@@2@Z PROC ; SK_Widget_CalcClipRect

; 124  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi

; 125  :   ImGuiIO& io (ImGui::GetIO ());

	call	?GetIO@ImGui@@YAAAUImGuiIO@@XZ		; ImGui::GetIO

; 126  : 
; 127  :   // Docking alignment visualiztion
; 128  :   bool draw_horz_ruler = false;
; 129  :   bool draw_vert_ruler = false;
; 130  : 
; 131  :   ImVec2 pos  = pWidget->getPos  ();
; 132  :   ImVec2 size = pWidget->getSize ();

	mov	esi, DWORD PTR _pWidget$[ebp]
	mov	edi, eax
	mov	BYTE PTR _draw_horz_ruler$1$[ebp], 0
	xor	bh, bh
	mov	ecx, DWORD PTR [esi+208]
	mov	DWORD PTR _size$[ebp], ecx
	mov	ecx, DWORD PTR [esi+212]
	mov	DWORD PTR _size$[ebp+4], ecx

; 133  : 
; 134  :   ImGuiContext& g = *ImGui::GetCurrentContext ();

	call	?GetCurrentContext@ImGui@@YAPAUImGuiContext@@XZ ; ImGui::GetCurrentContext
	mov	DWORD PTR _g$1$[ebp], eax

; 135  : 
; 136  :   if (n || s)

	cmp	BYTE PTR _n$[ebp], bh
	jne	SHORT $LN3@SK_Widget_
	cmp	BYTE PTR _s$[ebp], bh
	je	SHORT $LN4@SK_Widget_
$LN3@SK_Widget_:

; 138  :     if (pWidget->isMovable () && ( ( ImGui::IsMouseDragging (0) && ImGui::IsWindowHovered () ) ||

	cmp	BYTE PTR [esi+188], 0
	je	SHORT $LN4@SK_Widget_
	push	ecx
	mov	DWORD PTR [esp], -1082130432		; bf800000H
	push	0
	call	?IsMouseDragging@ImGui@@YA_NHM@Z	; ImGui::IsMouseDragging
	add	esp, 8
	test	al, al
	je	SHORT $LN6@SK_Widget_
	call	?IsWindowHovered@ImGui@@YA_NXZ		; ImGui::IsWindowHovered
	test	al, al
	jne	SHORT $LN5@SK_Widget_
$LN6@SK_Widget_:
	push	ecx
	mov	DWORD PTR [esp], -1082130432		; bf800000H
	push	1
	call	?IsNavDragging@ImGui@@YA_NHM@Z		; ImGui::IsNavDragging
	add	esp, 8
	test	al, al
	je	SHORT $LN4@SK_Widget_
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 793  :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->Accessed = true; return g.CurrentWindow; }

	mov	ecx, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	mov	eax, DWORD PTR [ecx+6240]
	mov	BYTE PTR [eax+134], 1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 138  :     if (pWidget->isMovable () && ( ( ImGui::IsMouseDragging (0) && ImGui::IsWindowHovered () ) ||

	mov	eax, DWORD PTR _g$1$[ebp]
	mov	eax, DWORD PTR [eax+6432]
	cmp	eax, DWORD PTR [ecx+6240]
	jne	SHORT $LN4@SK_Widget_
$LN5@SK_Widget_:

; 139  :                                    ( ImGui::IsNavDragging   ( ) && g.NavWindowingTarget == ImGui::GetCurrentWindow () ) ))
; 140  :     {
; 141  :       draw_horz_ruler = true;

	mov	BYTE PTR _draw_horz_ruler$1$[ebp], 1
$LN4@SK_Widget_:

; 142  :     }
; 143  : 
; 144  :     if (n)
; 145  :       pos.y = 0.0;
; 146  : 
; 147  :     if (s)
; 148  :       pos.y = io.DisplaySize.y - size.y;
; 149  :   }
; 150  : 
; 151  : 
; 152  :   if (e || w)

	mov	bl, BYTE PTR _e$[ebp]
	test	bl, bl
	jne	SHORT $LN10@SK_Widget_
	cmp	BYTE PTR _w$[ebp], bl
	je	SHORT $LN11@SK_Widget_
$LN10@SK_Widget_:

; 154  :     if (pWidget->isMovable () && ( ( ImGui::IsMouseDragging (0) && ImGui::IsWindowHovered () ) ||

	cmp	BYTE PTR [esi+188], 0
	je	SHORT $LN11@SK_Widget_
	push	ecx
	mov	DWORD PTR [esp], -1082130432		; bf800000H
	push	0
	call	?IsMouseDragging@ImGui@@YA_NHM@Z	; ImGui::IsMouseDragging
	add	esp, 8
	test	al, al
	je	SHORT $LN13@SK_Widget_
	call	?IsWindowHovered@ImGui@@YA_NXZ		; ImGui::IsWindowHovered
	test	al, al
	jne	SHORT $LN12@SK_Widget_
$LN13@SK_Widget_:
	push	ecx
	mov	DWORD PTR [esp], -1082130432		; bf800000H
	push	1
	call	?IsNavDragging@ImGui@@YA_NHM@Z		; ImGui::IsNavDragging
	add	esp, 8
	test	al, al
	je	SHORT $LN11@SK_Widget_
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 793  :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->Accessed = true; return g.CurrentWindow; }

	mov	ecx, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	mov	eax, DWORD PTR [ecx+6240]
	mov	BYTE PTR [eax+134], 1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 154  :     if (pWidget->isMovable () && ( ( ImGui::IsMouseDragging (0) && ImGui::IsWindowHovered () ) ||

	mov	eax, DWORD PTR _g$1$[ebp]
	mov	eax, DWORD PTR [eax+6432]
	cmp	eax, DWORD PTR [ecx+6240]
	jne	SHORT $LN11@SK_Widget_
$LN12@SK_Widget_:

; 155  :                                    ( ImGui::IsNavDragging   ( ) && g.NavWindowingTarget == ImGui::GetCurrentWindow () ) ))
; 156  :     {
; 157  :       draw_vert_ruler = true;

	mov	bh, 1
$LN11@SK_Widget_:
	mov	al, BYTE PTR _draw_horz_ruler$1$[ebp]
	cmp	bh, al

; 158  :     }
; 159  : 
; 160  :     if (e)
; 161  :       pos.x = io.DisplaySize.x - size.x;
; 162  : 
; 163  :     if (w)
; 164  :       pos.x = 0.0;
; 165  :   }
; 166  : 
; 167  : 
; 168  :   if (                   size.x > 0 &&                    size.y > 0 &&
; 169  :       io.DisplaySize.x - size.x > 0 && io.DisplaySize.y - size.y > 0)
; 170  :   {
; 171  :     pos.x = std::max (0.0f, std::min (pos.x, io.DisplaySize.x - size.x));
; 172  :     pos.y = std::max (0.0f, std::min (pos.y, io.DisplaySize.y - size.y));
; 173  :   }
; 174  : 
; 175  :   if (draw_horz_ruler ^ draw_vert_ruler)

	je	$LN19@SK_Widget_

; 176  :   {
; 177  :     ImVec2 horz_pos       = ImVec2 (       e ? io.DisplaySize.x - size.x : size.x, 0.0f );

	test	bl, bl
	je	SHORT $LN21@SK_Widget_
	movss	xmm2, DWORD PTR [edi]
	subss	xmm2, DWORD PTR _size$[ebp]
	jmp	SHORT $LN22@SK_Widget_
$LN21@SK_Widget_:
	movss	xmm2, DWORD PTR _size$[ebp]
$LN22@SK_Widget_:

; 178  :     ImVec2 vert_pos       = ImVec2 ( 0.0f, s ? io.DisplaySize.y - size.y : size.y       );

	cmp	BYTE PTR _s$[ebp], 0
	je	SHORT $LN23@SK_Widget_
	movss	xmm1, DWORD PTR [edi+4]
	subss	xmm1, DWORD PTR _size$[ebp+4]
	jmp	SHORT $LN24@SK_Widget_
$LN23@SK_Widget_:
	movss	xmm1, DWORD PTR _size$[ebp+4]
$LN24@SK_Widget_:

; 179  : 
; 180  :     if (draw_vert_ruler)

	mov	ecx, DWORD PTR _max$[ebp]
	mov	edx, DWORD PTR _min$[ebp]
	test	bh, bh
	je	SHORT $LN18@SK_Widget_
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T4[ebp], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 182  :       min = ImVec2 ( 0.0f,       0.0f             );

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [edx], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T4[ebp+4], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 182  :       min = ImVec2 ( 0.0f,       0.0f             );

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [edx+4], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	xmm0, DWORD PTR [edi+4]
	movss	DWORD PTR $T3[ebp], xmm2
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 183  :       max = ImVec2 ( horz_pos.x, io.DisplaySize.y );

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 183  :       max = ImVec2 ( horz_pos.x, io.DisplaySize.y );

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	al, BYTE PTR _draw_horz_ruler$1$[ebp]
$LN18@SK_Widget_:

; 184  :     }
; 185  : 
; 186  :     if (draw_horz_ruler)

	test	al, al
	je	SHORT $LN19@SK_Widget_
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 188  :       min = ImVec2 ( 0.0f,             0          );

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 188  :       min = ImVec2 ( 0.0f,             0          );

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [edx+4], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	xmm0, DWORD PTR [edi]
	movss	DWORD PTR $T1[ebp], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 189  :       max = ImVec2 ( io.DisplaySize.x, vert_pos.y );

	mov	eax, DWORD PTR $T1[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T1[ebp+4], xmm1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 189  :       max = ImVec2 ( io.DisplaySize.x, vert_pos.y );

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN19@SK_Widget_:
	pop	edi
	pop	esi
	pop	ebx

; 190  :     }
; 191  :   }
; 192  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_Widget_CalcClipRect@@YAXPAVSK_Widget@@_N111AAUImVec2@@2@Z ENDP ; SK_Widget_CalcClipRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetCurrentWindow@ImGui@@YAPAUImGuiWindow@@XZ
_TEXT	SEGMENT
?GetCurrentWindow@ImGui@@YAPAUImGuiWindow@@XZ PROC	; ImGui::GetCurrentWindow, COMDAT

; 793  :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->Accessed = true; return g.CurrentWindow; }

	mov	ecx, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	mov	eax, DWORD PTR [ecx+6240]
	mov	BYTE PTR [eax+134], 1
	mov	eax, DWORD PTR [ecx+6240]
	ret	0
?GetCurrentWindow@ImGui@@YAPAUImGuiWindow@@XZ ENDP	; ImGui::GetCurrentWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImGuiWindow@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImGuiWindow@@QAEAAU0@ABU0@@Z PROC			; ImGuiWindow::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___that$[ebp]
	mov	eax, ecx
	push	edi
	mov	ecx, 167				; 000000a7H
	mov	edi, eax
	rep movsd
	pop	edi
	pop	esi
	pop	ebp
	ret	4
??4ImGuiWindow@@QAEAAU0@ABU0@@Z ENDP			; ImGuiWindow::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?MenuBarRect@ImGuiWindow@@QBE?AUImRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?MenuBarRect@ImGuiWindow@@QBE?AUImRect@@XZ PROC		; ImGuiWindow::MenuBarRect, COMDAT
; _this$ = ecx

; 778  :     ImRect      MenuBarRect() const                     { float y1 = Pos.y + TitleBarHeight(); return ImRect(Pos.x, y1, Pos.x + SizeFull.x, y1 + MenuBarHeight()); }

	npad	2
	push	ebp
	mov	ebp, esp

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	mov	edx, DWORD PTR [ecx+8]
	xorps	xmm2, xmm2
	mov	eax, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	test	dl, 1
	je	SHORT $LN5@MenuBarRec
	xorps	xmm1, xmm1
	jmp	SHORT $LN6@MenuBarRec
$LN5@MenuBarRec:
	movss	xmm0, DWORD PTR [eax+5360]

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	movss	xmm1, DWORD PTR [eax+6176]

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	addss	xmm0, xmm0

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	mulss	xmm1, DWORD PTR [ecx+620]

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	addss	xmm1, xmm0
$LN6@MenuBarRec:

; 778  :     ImRect      MenuBarRect() const                     { float y1 = Pos.y + TitleBarHeight(); return ImRect(Pos.x, y1, Pos.x + SizeFull.x, y1 + MenuBarHeight()); }

	movss	xmm3, DWORD PTR [ecx+28]
	addss	xmm3, xmm1

; 777  :     float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuBar) ? CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f : 0.0f; }

	test	edx, 1024				; 00000400H
	je	SHORT $LN11@MenuBarRec
	movss	xmm0, DWORD PTR [eax+5360]

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	movss	xmm2, DWORD PTR [eax+6176]

; 777  :     float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuBar) ? CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f : 0.0f; }

	addss	xmm0, xmm0

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	mulss	xmm2, DWORD PTR [ecx+620]

; 777  :     float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuBar) ? CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f : 0.0f; }

	addss	xmm2, xmm0
$LN11@MenuBarRec:

; 778  :     ImRect      MenuBarRect() const                     { float y1 = Pos.y + TitleBarHeight(); return ImRect(Pos.x, y1, Pos.x + SizeFull.x, y1 + MenuBarHeight()); }

	movss	xmm0, DWORD PTR [ecx+24]
	addss	xmm2, xmm3
	movss	xmm1, DWORD PTR [ecx+40]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 778  :     ImRect      MenuBarRect() const                     { float y1 = Pos.y + TitleBarHeight(); return ImRect(Pos.x, y1, Pos.x + SizeFull.x, y1 + MenuBarHeight()); }

	addss	xmm1, xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR [eax], xmm0
	movss	DWORD PTR [eax+4], xmm3
	movss	DWORD PTR [eax+8], xmm1
	movss	DWORD PTR [eax+12], xmm2
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 778  :     ImRect      MenuBarRect() const                     { float y1 = Pos.y + TitleBarHeight(); return ImRect(Pos.x, y1, Pos.x + SizeFull.x, y1 + MenuBarHeight()); }

	pop	ebp
	ret	4
?MenuBarRect@ImGuiWindow@@QBE?AUImRect@@XZ ENDP		; ImGuiWindow::MenuBarRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?MenuBarHeight@ImGuiWindow@@QBEMXZ
_TEXT	SEGMENT
tv74 = -4						; size = 4
?MenuBarHeight@ImGuiWindow@@QBEMXZ PROC			; ImGuiWindow::MenuBarHeight, COMDAT
; _this$ = ecx

; 777  :     float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuBar) ? CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f : 0.0f; }

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	test	DWORD PTR [ecx+8], 1024			; 00000400H
	je	SHORT $LN3@MenuBarHei
	mov	eax, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	movss	xmm1, DWORD PTR [eax+5360]

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	movss	xmm0, DWORD PTR [eax+6176]

; 777  :     float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuBar) ? CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f : 0.0f; }

	addss	xmm1, xmm1

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	mulss	xmm0, DWORD PTR [ecx+620]

; 777  :     float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuBar) ? CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f : 0.0f; }

	addss	xmm0, xmm1
	movss	DWORD PTR tv74[ebp], xmm0
	fld	DWORD PTR tv74[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@MenuBarHei:
	mov	DWORD PTR tv74[ebp], 0
	fld	DWORD PTR tv74[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?MenuBarHeight@ImGuiWindow@@QBEMXZ ENDP			; ImGuiWindow::MenuBarHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?TitleBarRect@ImGuiWindow@@QBE?AUImRect@@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
?TitleBarRect@ImGuiWindow@@QBE?AUImRect@@XZ PROC	; ImGuiWindow::TitleBarRect, COMDAT
; _this$ = ecx

; 776  :     ImRect      TitleBarRect() const                    { return ImRect(Pos, ImVec2(Pos.x + SizeFull.x, Pos.y + TitleBarHeight())); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, ecx
	sub	esp, 8

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	test	BYTE PTR [edx+8], 1
	je	SHORT $LN5@TitleBarRe
	xorps	xmm1, xmm1
	jmp	SHORT $LN6@TitleBarRe
$LN5@TitleBarRe:
	mov	eax, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	movss	xmm0, DWORD PTR [eax+5360]

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	movss	xmm1, DWORD PTR [eax+6176]

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	addss	xmm0, xmm0

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	mulss	xmm1, DWORD PTR [edx+620]

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	addss	xmm1, xmm0
$LN6@TitleBarRe:

; 776  :     ImRect      TitleBarRect() const                    { return ImRect(Pos, ImVec2(Pos.x + SizeFull.x, Pos.y + TitleBarHeight())); }

	movss	xmm0, DWORD PTR [edx+40]
	addss	xmm0, DWORD PTR [edx+24]

; 240  :     ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                            {}

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [edx+24]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T1[ebp], xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 776  :     ImRect      TitleBarRect() const                    { return ImRect(Pos, ImVec2(Pos.x + SizeFull.x, Pos.y + TitleBarHeight())); }

	movss	xmm0, DWORD PTR [edx+28]
	addss	xmm0, xmm1

; 240  :     ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                            {}

	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax+8], ecx
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 240  :     ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                            {}

	mov	ecx, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [eax+12], ecx

; 776  :     ImRect      TitleBarRect() const                    { return ImRect(Pos, ImVec2(Pos.x + SizeFull.x, Pos.y + TitleBarHeight())); }

	mov	esp, ebp
	pop	ebp
	ret	4
?TitleBarRect@ImGuiWindow@@QBE?AUImRect@@XZ ENDP	; ImGuiWindow::TitleBarRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?TitleBarHeight@ImGuiWindow@@QBEMXZ
_TEXT	SEGMENT
tv74 = -4						; size = 4
?TitleBarHeight@ImGuiWindow@@QBEMXZ PROC		; ImGuiWindow::TitleBarHeight, COMDAT
; _this$ = ecx

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	test	BYTE PTR [ecx+8], 1
	je	SHORT $LN3@TitleBarHe
	mov	DWORD PTR tv74[ebp], 0
	fld	DWORD PTR tv74[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@TitleBarHe:
	mov	eax, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	movss	xmm1, DWORD PTR [eax+5360]

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	movss	xmm0, DWORD PTR [eax+6176]

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	addss	xmm1, xmm1

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	mulss	xmm0, DWORD PTR [ecx+620]

; 775  :     float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }

	addss	xmm0, xmm1
	movss	DWORD PTR tv74[ebp], xmm0
	fld	DWORD PTR tv74[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?TitleBarHeight@ImGuiWindow@@QBEMXZ ENDP		; ImGuiWindow::TitleBarHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?CalcFontSize@ImGuiWindow@@QBEMXZ
_TEXT	SEGMENT
?CalcFontSize@ImGuiWindow@@QBEMXZ PROC			; ImGuiWindow::CalcFontSize, COMDAT
; _this$ = ecx

; 774  :     float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }

	mov	eax, DWORD PTR ?GImGui@@3PAUImGuiContext@@A ; GImGui
	fld	DWORD PTR [eax+6176]
	fmul	DWORD PTR [ecx+620]
	ret	0
?CalcFontSize@ImGuiWindow@@QBEMXZ ENDP			; ImGuiWindow::CalcFontSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Rect@ImGuiWindow@@QBE?AUImRect@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?Rect@ImGuiWindow@@QBE?AUImRect@@XZ PROC		; ImGuiWindow::Rect, COMDAT
; _this$ = ecx

; 773  :     ImRect      Rect() const                            { return ImRect(Pos.x, Pos.y, Pos.x+Size.x, Pos.y+Size.y); }

	npad	2
	push	ebp
	mov	ebp, esp
	movss	xmm3, DWORD PTR [ecx+28]
	movss	xmm0, DWORD PTR [ecx+24]
	movss	xmm2, DWORD PTR [ecx+32]
	movss	xmm1, DWORD PTR [ecx+36]
	addss	xmm2, xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 773  :     ImRect      Rect() const                            { return ImRect(Pos.x, Pos.y, Pos.x+Size.x, Pos.y+Size.y); }

	addss	xmm1, xmm3
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR [eax], xmm0
	movss	DWORD PTR [eax+4], xmm3
	movss	DWORD PTR [eax+8], xmm2
	movss	DWORD PTR [eax+12], xmm1
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 773  :     ImRect      Rect() const                            { return ImRect(Pos.x, Pos.y, Pos.x+Size.x, Pos.y+Size.y); }

	pop	ebp
	ret	4
?Rect@ImGuiWindow@@QBE?AUImRect@@XZ ENDP		; ImGuiWindow::Rect
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImGuiDrawContext@@QAEAAU0@$$QAU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImGuiDrawContext@@QAEAAU0@$$QAU0@@Z PROC		; ImGuiDrawContext::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+28], eax
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+36], eax
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+44], eax
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR [ecx+48], eax
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR [ecx+52], eax
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx+56], eax
	movups	xmm0, XMMWORD PTR [edx+60]
	movups	XMMWORD PTR [ecx+60], xmm0
	movzx	eax, BYTE PTR [edx+76]
	mov	BYTE PTR [ecx+76], al
	movzx	eax, BYTE PTR [edx+77]
	mov	BYTE PTR [ecx+77], al
	movzx	eax, BYTE PTR [edx+78]
	mov	BYTE PTR [ecx+78], al
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR [ecx+84], eax
	mov	eax, DWORD PTR [edx+88]
	mov	DWORD PTR [ecx+88], eax
	movzx	eax, BYTE PTR [edx+92]
	mov	BYTE PTR [ecx+92], al
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR [ecx+96], eax
	movq	xmm0, QWORD PTR [edx+100]
	movq	QWORD PTR [ecx+100], xmm0
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR [ecx+108], eax
	mov	eax, DWORD PTR [edx+112]
	mov	DWORD PTR [ecx+112], eax
	mov	eax, DWORD PTR [edx+116]
	mov	DWORD PTR [ecx+116], eax
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR [ecx+120], eax
	mov	eax, DWORD PTR [edx+124]
	mov	DWORD PTR [ecx+124], eax
	mov	eax, DWORD PTR [edx+128]
	mov	DWORD PTR [ecx+128], eax
	movq	xmm0, QWORD PTR [edx+132]
	movq	QWORD PTR [ecx+132], xmm0
	mov	eax, DWORD PTR [edx+140]
	mov	DWORD PTR [ecx+140], eax
	movq	xmm0, QWORD PTR [edx+144]
	movq	QWORD PTR [ecx+144], xmm0
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR [ecx+152], eax
	movq	xmm0, QWORD PTR [edx+156]
	movq	QWORD PTR [ecx+156], xmm0
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR [ecx+164], eax
	movq	xmm0, QWORD PTR [edx+168]
	movq	QWORD PTR [ecx+168], xmm0
	mov	eax, DWORD PTR [edx+176]
	mov	DWORD PTR [ecx+176], eax
	mov	eax, DWORD PTR [edx+180]
	mov	DWORD PTR [ecx+180], eax
	mov	eax, DWORD PTR [edx+184]
	mov	DWORD PTR [ecx+184], eax
	mov	eax, DWORD PTR [edx+188]
	mov	DWORD PTR [ecx+188], eax
	mov	eax, DWORD PTR [edx+192]
	mov	DWORD PTR [ecx+192], eax
	mov	eax, DWORD PTR [edx+196]
	mov	DWORD PTR [ecx+196], eax
	mov	eax, DWORD PTR [edx+200]
	mov	DWORD PTR [ecx+200], eax
	mov	eax, DWORD PTR [edx+204]
	mov	DWORD PTR [ecx+204], eax
	mov	eax, DWORD PTR [edx+208]
	mov	DWORD PTR [ecx+208], eax
	mov	eax, DWORD PTR [edx+212]
	mov	DWORD PTR [ecx+212], eax
	mov	eax, DWORD PTR [edx+216]
	mov	DWORD PTR [ecx+216], eax
	mov	eax, DWORD PTR [edx+220]
	mov	DWORD PTR [ecx+220], eax
	mov	eax, DWORD PTR [edx+224]
	mov	DWORD PTR [ecx+224], eax
	mov	eax, DWORD PTR [edx+228]
	mov	DWORD PTR [ecx+228], eax
	mov	eax, DWORD PTR [edx+232]
	mov	DWORD PTR [ecx+232], eax
	mov	eax, DWORD PTR [edx+236]
	mov	DWORD PTR [ecx+236], eax
	mov	eax, DWORD PTR [edx+240]
	mov	DWORD PTR [ecx+240], eax
	mov	eax, DWORD PTR [edx+244]
	mov	DWORD PTR [ecx+244], eax
	movzx	eax, BYTE PTR [edx+248]
	mov	BYTE PTR [ecx+248], al
	mov	eax, DWORD PTR [edx+252]
	mov	DWORD PTR [ecx+252], eax
	movq	xmm0, QWORD PTR [edx+256]
	movq	QWORD PTR [ecx+256], xmm0
	mov	eax, DWORD PTR [edx+264]
	mov	DWORD PTR [ecx+264], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??4ImGuiDrawContext@@QAEAAU0@$$QAU0@@Z ENDP		; ImGuiDrawContext::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImGuiDrawContext@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImGuiDrawContext@@QAEAAU0@ABU0@@Z PROC		; ImGuiDrawContext::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___that$[ebp]
	mov	eax, ecx
	push	edi
	mov	ecx, 67					; 00000043H
	mov	edi, eax
	rep movsd
	pop	edi
	pop	esi
	pop	ebp
	ret	4
??4ImGuiDrawContext@@QAEAAU0@ABU0@@Z ENDP		; ImGuiDrawContext::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1ImGuiDrawContext@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1ImGuiDrawContext@@QAE@XZ PROC			; ImGuiDrawContext::~ImGuiDrawContext, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1ImGuiDrawContext@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	mov	eax, DWORD PTR [esi+264]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN4@ImGuiDrawC
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN4@ImGuiDrawC:
	mov	eax, DWORD PTR [esi+176]
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	eax, eax
	je	SHORT $LN8@ImGuiDrawC
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN8@ImGuiDrawC:
	mov	eax, DWORD PTR [esi+164]
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	test	eax, eax
	je	SHORT $LN12@ImGuiDrawC
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN12@ImGuiDrawC:
	mov	eax, DWORD PTR [esi+152]
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	test	eax, eax
	je	SHORT $LN16@ImGuiDrawC
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN16@ImGuiDrawC:
	mov	eax, DWORD PTR [esi+140]
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	test	eax, eax
	je	SHORT $LN20@ImGuiDrawC
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN20@ImGuiDrawC:
	mov	eax, DWORD PTR [esi+108]
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	test	eax, eax
	je	SHORT $LN24@ImGuiDrawC
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN24@ImGuiDrawC:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ImGuiDrawContext@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1ImGuiDrawContext@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ImGuiDrawContext@@QAE@XZ ENDP			; ImGuiDrawContext::~ImGuiDrawContext
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ??0ImGuiDrawContext@@QAE@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
_this$ = -4						; size = 4
??0ImGuiDrawContext@@QAE@XZ PROC			; ImGuiDrawContext::ImGuiDrawContext, COMDAT
; _this$ = ecx

; 662  :     ImGuiDrawContext()

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	edx, ecx
	xorps	xmm0, xmm0
	mov	DWORD PTR _this$[ebp], edx
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 664  :         CursorPos = CursorPosPrevLine = CursorStartPos = CursorMaxPos = ImVec2(0.0f, 0.0f);

	mov	ecx, DWORD PTR $T1[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 97   :     ImVec2() { x = y = 0.0f; }

	mov	DWORD PTR [edx+4], 0
	mov	DWORD PTR [edx], 0
	mov	DWORD PTR [edx+12], 0
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR [edx+20], 0
	mov	DWORD PTR [edx+16], 0
	mov	DWORD PTR [edx+28], 0
	mov	DWORD PTR [edx+24], 0

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR [edx+60], 2139095039		; 7f7fffffH
	mov	DWORD PTR [edx+64], 2139095039		; 7f7fffffH
	mov	DWORD PTR [edx+68], -8388609		; ff7fffffH
	mov	DWORD PTR [edx+72], -8388609		; ff7fffffH

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [edx+104], 0
	mov	DWORD PTR [edx+100], 0
	mov	DWORD PTR [edx+108], 0
	mov	DWORD PTR [edx+136], 0
	mov	DWORD PTR [edx+132], 0
	mov	DWORD PTR [edx+140], 0
	mov	DWORD PTR [edx+148], 0
	mov	DWORD PTR [edx+144], 0
	mov	DWORD PTR [edx+152], 0
	mov	DWORD PTR [edx+160], 0
	mov	DWORD PTR [edx+156], 0
	mov	DWORD PTR [edx+164], 0
	mov	DWORD PTR [edx+172], 0
	mov	DWORD PTR [edx+168], 0
	mov	DWORD PTR [edx+176], 0
	mov	DWORD PTR [edx+260], 0
	mov	DWORD PTR [edx+256], 0
	mov	DWORD PTR [edx+264], 0

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 664  :         CursorPos = CursorPosPrevLine = CursorStartPos = CursorMaxPos = ImVec2(0.0f, 0.0f);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [edx+28], eax
	mov	DWORD PTR [edx+20], eax
	mov	DWORD PTR [edx+12], eax
	mov	DWORD PTR [edx+4], eax

; 665  :         CurrentLineHeight = PrevLineHeight = 0.0f;
; 666  :         CurrentLineTextBaseOffset = PrevLineTextBaseOffset = 0.0f;
; 667  :         LogLinePosY = -1.0f;
; 668  :         TreeDepth = 0;
; 669  :         LastItemId = 0;
; 670  :         LastItemRect = ImRect(0.0f,0.0f,0.0f,0.0f);
; 671  :         LastItemHoveredAndUsable = LastItemHoveredRect = false;
; 672  :         NavHasScroll = false;
; 673  :         NavLayerActiveFlags = NavLayerActiveFlagsNext = 0x00;
; 674  :         NavLayerCurrent = 0;
; 675  :         MenuBarAppending = false;
; 676  :         MenuBarOffsetX = 0.0f;
; 677  :         StateStorage = NULL;
; 678  :         LayoutType = ImGuiLayoutType_Vertical;
; 679  :         ItemWidth = 0.0f;
; 680  :         ItemFlags = ImGuiItemFlags_Default_;
; 681  :         TextWrapPos = -1.0f;
; 682  :         ColorEditMode = ImGuiColorEditMode_RGB;
; 683  :         memset(StackSizesBackup, 0, sizeof(StackSizesBackup));
; 684  : 
; 685  :         IndentX = 0.0f;
; 686  :         GroupOffsetX = 0.0f;
; 687  :         ColumnsOffsetX = 0.0f;
; 688  :         ColumnsCurrent = 0;
; 689  :         ColumnsCount = 1;
; 690  :         ColumnsMinX = ColumnsMaxX = 0.0f;
; 691  :         ColumnsStartPosY = 0.0f;
; 692  :         ColumnsCellMinY = ColumnsCellMaxY = 0.0f;
; 693  :         ColumnsShowBorders = true;
; 694  :         ColumnsSetId = 0;
; 695  :     }

	mov	eax, edx
	mov	DWORD PTR [edx+24], ecx
	mov	DWORD PTR [edx+16], ecx
	mov	DWORD PTR [edx+8], ecx
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+40], 0
	mov	DWORD PTR [edx+32], 0
	mov	DWORD PTR [edx+44], 0
	mov	DWORD PTR [edx+36], 0
	mov	DWORD PTR [edx+48], -1082130432		; bf800000H
	mov	DWORD PTR [edx+52], 0
	mov	DWORD PTR [edx+56], 0
	movups	XMMWORD PTR [edx+60], xmm0
	mov	WORD PTR [edx+76], 0
	mov	BYTE PTR [edx+78], 0
	mov	DWORD PTR [edx+88], 0
	mov	DWORD PTR [edx+84], 0
	mov	DWORD PTR [edx+80], 0
	mov	BYTE PTR [edx+92], 0
	mov	DWORD PTR [edx+96], 0
	mov	DWORD PTR [edx+112], 0
	mov	DWORD PTR [edx+116], 0
	mov	DWORD PTR [edx+124], 0
	mov	DWORD PTR [edx+120], 3
	mov	DWORD PTR [edx+128], -1082130432	; bf800000H
	mov	DWORD PTR [edx+180], 0
	movups	XMMWORD PTR [edx+184], xmm0
	movq	QWORD PTR [edx+200], xmm0
	mov	DWORD PTR [edx+208], 0
	mov	DWORD PTR [edx+212], 0
	mov	DWORD PTR [edx+216], 0
	mov	DWORD PTR [edx+220], 0
	mov	DWORD PTR [edx+224], 1
	mov	DWORD PTR [edx+232], 0
	mov	DWORD PTR [edx+228], 0
	mov	DWORD PTR [edx+236], 0
	mov	DWORD PTR [edx+244], 0
	mov	DWORD PTR [edx+240], 0
	mov	BYTE PTR [edx+248], 1
	mov	DWORD PTR [edx+252], 0
	mov	esp, ebp
	pop	ebp
	ret	0
??0ImGuiDrawContext@@QAE@XZ ENDP			; ImGuiDrawContext::ImGuiDrawContext
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1?$ImVector@UImGuiColumnData@@@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ImVector@UImGuiColumnData@@@@QAE@XZ PROC		; ImVector<ImGuiColumnData>::~ImVector<ImGuiColumnData>, COMDAT
; _this$ = ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$ImVector@UImGuiColumnData@@@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN2@ImVector
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN2@ImVector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ImVector@UImGuiColumnData@@@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$ImVector@UImGuiColumnData@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ImVector@UImGuiColumnData@@@@QAE@XZ ENDP		; ImVector<ImGuiColumnData>::~ImVector<ImGuiColumnData>
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0?$ImVector@UImGuiColumnData@@@@QAE@XZ
_TEXT	SEGMENT
??0?$ImVector@UImGuiColumnData@@@@QAE@XZ PROC		; ImVector<ImGuiColumnData>::ImVector<ImGuiColumnData>, COMDAT
; _this$ = ecx

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$ImVector@UImGuiColumnData@@@@QAE@XZ ENDP		; ImVector<ImGuiColumnData>::ImVector<ImGuiColumnData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1?$ImVector@UImGuiGroupData@@@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ImVector@UImGuiGroupData@@@@QAE@XZ PROC		; ImVector<ImGuiGroupData>::~ImVector<ImGuiGroupData>, COMDAT
; _this$ = ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$ImVector@UImGuiGroupData@@@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN2@ImVector
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN2@ImVector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ImVector@UImGuiGroupData@@@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$ImVector@UImGuiGroupData@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ImVector@UImGuiGroupData@@@@QAE@XZ ENDP		; ImVector<ImGuiGroupData>::~ImVector<ImGuiGroupData>
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0?$ImVector@UImGuiGroupData@@@@QAE@XZ
_TEXT	SEGMENT
??0?$ImVector@UImGuiGroupData@@@@QAE@XZ PROC		; ImVector<ImGuiGroupData>::ImVector<ImGuiGroupData>, COMDAT
; _this$ = ecx

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$ImVector@UImGuiGroupData@@@@QAE@XZ ENDP		; ImVector<ImGuiGroupData>::ImVector<ImGuiGroupData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1?$ImVector@H@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ImVector@H@@QAE@XZ PROC				; ImVector<int>::~ImVector<int>, COMDAT
; _this$ = ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$ImVector@H@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN2@ImVector
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN2@ImVector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ImVector@H@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$ImVector@H@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ImVector@H@@QAE@XZ ENDP				; ImVector<int>::~ImVector<int>
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0?$ImVector@H@@QAE@XZ
_TEXT	SEGMENT
??0?$ImVector@H@@QAE@XZ PROC				; ImVector<int>::ImVector<int>, COMDAT
; _this$ = ecx

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$ImVector@H@@QAE@XZ ENDP				; ImVector<int>::ImVector<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1?$ImVector@PAUImGuiWindow@@@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ImVector@PAUImGuiWindow@@@@QAE@XZ PROC		; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>, COMDAT
; _this$ = ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$ImVector@PAUImGuiWindow@@@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN2@ImVector
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN2@ImVector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ImVector@PAUImGuiWindow@@@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$ImVector@PAUImGuiWindow@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ImVector@PAUImGuiWindow@@@@QAE@XZ ENDP		; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0?$ImVector@PAUImGuiWindow@@@@QAE@XZ
_TEXT	SEGMENT
??0?$ImVector@PAUImGuiWindow@@@@QAE@XZ PROC		; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>, COMDAT
; _this$ = ecx

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$ImVector@PAUImGuiWindow@@@@QAE@XZ ENDP		; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImGuiTextEditState@@QAEAAU0@$$QAU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImGuiTextEditState@@QAEAAU0@$$QAU0@@Z PROC		; ImGuiTextEditState::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR ___that$[ebp]
	push	ebx
	mov	ebx, ecx
	mov	ecx, 805				; 00000325H
	push	esi
	mov	eax, DWORD PTR [edx]
	lea	esi, DWORD PTR [edx+56]
	push	edi
	mov	DWORD PTR [ebx], eax
	lea	edi, DWORD PTR [ebx+56]
	movq	xmm0, QWORD PTR [edx+4]
	movq	QWORD PTR [ebx+4], xmm0
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ebx+12], eax
	movq	xmm0, QWORD PTR [edx+16]
	movq	QWORD PTR [ebx+16], xmm0
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ebx+24], eax
	movq	xmm0, QWORD PTR [edx+28]
	movq	QWORD PTR [ebx+28], xmm0
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ebx+36], eax
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ebx+40], eax
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ebx+44], eax
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR [ebx+48], eax
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR [ebx+52], eax
	rep movsd
	mov	eax, DWORD PTR [edx+3276]
	mov	DWORD PTR [ebx+3276], eax
	movzx	eax, BYTE PTR [edx+3280]
	mov	BYTE PTR [ebx+3280], al
	movzx	eax, BYTE PTR [edx+3281]
	pop	edi
	mov	BYTE PTR [ebx+3281], al
	mov	eax, ebx
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
??4ImGuiTextEditState@@QAEAAU0@$$QAU0@@Z ENDP		; ImGuiTextEditState::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImGuiTextEditState@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImGuiTextEditState@@QAEAAU0@ABU0@@Z PROC		; ImGuiTextEditState::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___that$[ebp]
	mov	eax, ecx
	push	edi
	mov	ecx, 821				; 00000335H
	mov	edi, eax
	rep movsd
	pop	edi
	pop	esi
	pop	ebp
	ret	4
??4ImGuiTextEditState@@QAEAAU0@ABU0@@Z ENDP		; ImGuiTextEditState::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1ImGuiTextEditState@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1ImGuiTextEditState@@QAE@XZ PROC			; ImGuiTextEditState::~ImGuiTextEditState, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1ImGuiTextEditState@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN4@ImGuiTextE
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN4@ImGuiTextE:
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	eax, eax
	je	SHORT $LN8@ImGuiTextE
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN8@ImGuiTextE:
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	test	eax, eax
	je	SHORT $LN12@ImGuiTextE
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN12@ImGuiTextE:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ImGuiTextEditState@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1ImGuiTextEditState@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ImGuiTextEditState@@QAE@XZ ENDP			; ImGuiTextEditState::~ImGuiTextEditState
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?SelectAll@ImGuiTextEditState@@QAEXXZ
_TEXT	SEGMENT
?SelectAll@ImGuiTextEditState@@QAEXXZ PROC		; ImGuiTextEditState::SelectAll, COMDAT
; _this$ = ecx

; 346  :     void                SelectAll()                 { StbState.select_start = 0; StbState.select_end = CurLenW; StbState.cursor = StbState.select_end; StbState.has_preferred_x = false; }

	mov	eax, DWORD PTR [ecx+44]
	mov	DWORD PTR [ecx+60], 0
	mov	DWORD PTR [ecx+64], eax
	mov	DWORD PTR [ecx+56], eax
	mov	BYTE PTR [ecx+71], 0
	ret	0
?SelectAll@ImGuiTextEditState@@QAEXXZ ENDP		; ImGuiTextEditState::SelectAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?ClearSelection@ImGuiTextEditState@@QAEXXZ
_TEXT	SEGMENT
?ClearSelection@ImGuiTextEditState@@QAEXXZ PROC		; ImGuiTextEditState::ClearSelection, COMDAT
; _this$ = ecx

; 345  :     void                ClearSelection()            { StbState.select_start = StbState.select_end = StbState.cursor; }

	mov	eax, DWORD PTR [ecx+56]
	mov	DWORD PTR [ecx+64], eax
	mov	DWORD PTR [ecx+60], eax
	ret	0
?ClearSelection@ImGuiTextEditState@@QAEXXZ ENDP		; ImGuiTextEditState::ClearSelection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?HasSelection@ImGuiTextEditState@@QBE_NXZ
_TEXT	SEGMENT
?HasSelection@ImGuiTextEditState@@QBE_NXZ PROC		; ImGuiTextEditState::HasSelection, COMDAT
; _this$ = ecx

; 344  :     bool                HasSelection() const        { return StbState.select_start != StbState.select_end; }

	mov	eax, DWORD PTR [ecx+60]
	cmp	eax, DWORD PTR [ecx+64]
	setne	al
	ret	0
?HasSelection@ImGuiTextEditState@@QBE_NXZ ENDP		; ImGuiTextEditState::HasSelection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?CursorClamp@ImGuiTextEditState@@QAEXXZ
_TEXT	SEGMENT
?CursorClamp@ImGuiTextEditState@@QAEXXZ PROC		; ImGuiTextEditState::CursorClamp, COMDAT
; _this$ = ecx

; 343  :     void                CursorClamp()               { StbState.cursor = ImMin(StbState.cursor, CurLenW); StbState.select_start = ImMin(StbState.select_start, CurLenW); StbState.select_end = ImMin(StbState.select_end, CurLenW); }

	npad	2
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, DWORD PTR [edi+44]

; 125  : static inline int    ImMin(int lhs, int rhs)                                    { return lhs < rhs ? lhs : rhs; }

	mov	edx, esi
	cmp	DWORD PTR [edi+56], esi
	mov	ecx, esi
	cmovl	edx, DWORD PTR [edi+56]
	cmp	DWORD PTR [edi+60], esi

; 343  :     void                CursorClamp()               { StbState.cursor = ImMin(StbState.cursor, CurLenW); StbState.select_start = ImMin(StbState.select_start, CurLenW); StbState.select_end = ImMin(StbState.select_end, CurLenW); }

	mov	DWORD PTR [edi+56], edx

; 125  : static inline int    ImMin(int lhs, int rhs)                                    { return lhs < rhs ? lhs : rhs; }

	cmovl	ecx, DWORD PTR [edi+60]
	cmp	DWORD PTR [edi+64], esi

; 343  :     void                CursorClamp()               { StbState.cursor = ImMin(StbState.cursor, CurLenW); StbState.select_start = ImMin(StbState.select_start, CurLenW); StbState.select_end = ImMin(StbState.select_end, CurLenW); }

	mov	DWORD PTR [edi+60], ecx

; 125  : static inline int    ImMin(int lhs, int rhs)                                    { return lhs < rhs ? lhs : rhs; }

	cmovl	esi, DWORD PTR [edi+64]

; 343  :     void                CursorClamp()               { StbState.cursor = ImMin(StbState.cursor, CurLenW); StbState.select_start = ImMin(StbState.select_start, CurLenW); StbState.select_end = ImMin(StbState.select_end, CurLenW); }

	mov	DWORD PTR [edi+64], esi
	pop	edi
	pop	esi
	ret	0
?CursorClamp@ImGuiTextEditState@@QAEXXZ ENDP		; ImGuiTextEditState::CursorClamp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?CursorAnimReset@ImGuiTextEditState@@QAEXXZ
_TEXT	SEGMENT
?CursorAnimReset@ImGuiTextEditState@@QAEXXZ PROC	; ImGuiTextEditState::CursorAnimReset, COMDAT
; _this$ = ecx

; 342  :     void                CursorAnimReset()           { CursorAnim = -0.30f; }                                   // After a user-input the cursor stays on for a while without blinking

	mov	DWORD PTR [ecx+3276], -1097229926	; be99999aH
	ret	0
?CursorAnimReset@ImGuiTextEditState@@QAEXXZ ENDP	; ImGuiTextEditState::CursorAnimReset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ??0ImGuiTextEditState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ImGuiTextEditState@@QAE@XZ PROC			; ImGuiTextEditState::ImGuiTextEditState, COMDAT
; _this$ = ecx

; 341  :     ImGuiTextEditState()                            { memset(this, 0, sizeof(*this)); }

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	push	3284					; 00000cd4H
	push	0
	push	esi
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+24], 0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 341  :     ImGuiTextEditState()                            { memset(this, 0, sizeof(*this)); }

	mov	DWORD PTR _this$[ebp], esi
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [esi+32], 0
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [esi+36], 0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 341  :     ImGuiTextEditState()                            { memset(this, 0, sizeof(*this)); }

	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0ImGuiTextEditState@@QAE@XZ ENDP			; ImGuiTextEditState::ImGuiTextEditState
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImGuiSimpleColumns@@QAEAAU0@$$QAU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImGuiSimpleColumns@@QAEAAU0@$$QAU0@@Z PROC		; ImGuiSimpleColumns::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+28], eax
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+36], eax
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+44], eax
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR [ecx+48], eax
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR [ecx+52], eax
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx+56], eax
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR [ecx+64], eax
	mov	eax, DWORD PTR [edx+68]
	mov	DWORD PTR [ecx+68], eax
	mov	eax, DWORD PTR [edx+72]
	mov	DWORD PTR [ecx+72], eax
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+76], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??4ImGuiSimpleColumns@@QAEAAU0@$$QAU0@@Z ENDP		; ImGuiSimpleColumns::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImGuiSimpleColumns@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImGuiSimpleColumns@@QAEAAU0@ABU0@@Z PROC		; ImGuiSimpleColumns::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	xmm0, XMMWORD PTR [eax+64]
	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	pop	ebp
	ret	4
??4ImGuiSimpleColumns@@QAEAAU0@ABU0@@Z ENDP		; ImGuiSimpleColumns::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImRect@@QAEAAU0@$$QAU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImRect@@QAEAAU0@$$QAU0@@Z PROC			; ImRect::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??4ImRect@@QAEAAU0@$$QAU0@@Z ENDP			; ImRect::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4ImRect@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ImRect@@QAEAAU0@ABU0@@Z PROC				; ImRect::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm0
	pop	ebp
	ret	4
??4ImRect@@QAEAAU0@ABU0@@Z ENDP				; ImRect::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetClosestPoint@ImRect@@QBE?AUImVec2@@U2@_N@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_p$ = 12						; size = 8
_on_edge$ = 20						; size = 1
?GetClosestPoint@ImRect@@QBE?AUImVec2@@U2@_N@Z PROC	; ImRect::GetClosestPoint, COMDAT
; _this$ = ecx

; 263  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 264  :         if (!on_edge && Contains(p))

	cmp	BYTE PTR _on_edge$[ebp], 0
	movss	xmm2, DWORD PTR _p$[ebp+4]
	movss	xmm1, DWORD PTR _p$[ebp]
	jne	SHORT $LN2@GetClosest

; 252  :     bool        Contains(const ImVec2& p) const { return p.x >= Min.x     && p.y >= Min.y     && p.x < Max.x     && p.y < Max.y; }

	comiss	xmm1, DWORD PTR [ecx]
	jb	SHORT $LN2@GetClosest
	comiss	xmm2, DWORD PTR [ecx+4]
	jb	SHORT $LN2@GetClosest
	movss	xmm0, DWORD PTR [ecx+8]
	comiss	xmm0, xmm1
	jbe	SHORT $LN2@GetClosest
	movss	xmm0, DWORD PTR [ecx+12]
	comiss	xmm0, xmm2
	ja	SHORT $LN8@GetClosest
$LN2@GetClosest:

; 265  :             return p;
; 266  :         if (p.x > Max.x) p.x = Max.x;

	movss	xmm0, DWORD PTR [ecx+8]
	comiss	xmm1, xmm0
	ja	SHORT $LN15@GetClosest

; 267  :         else if (p.x < Min.x) p.x = Min.x;

	movss	xmm0, DWORD PTR [ecx]
	comiss	xmm0, xmm1
	jbe	SHORT $LN5@GetClosest
$LN15@GetClosest:
	movss	DWORD PTR _p$[ebp], xmm0
$LN5@GetClosest:

; 268  :         if (p.y > Max.y) p.y = Max.y;

	movss	xmm0, DWORD PTR [ecx+12]
	comiss	xmm2, xmm0
	ja	SHORT $LN16@GetClosest

; 269  :         else if (p.y < Min.y) p.y = Min.y;

	movss	xmm0, DWORD PTR [ecx+4]
	comiss	xmm0, xmm2
	jbe	SHORT $LN8@GetClosest
$LN16@GetClosest:
	movss	DWORD PTR _p$[ebp+4], xmm0
$LN8@GetClosest:

; 270  :         return p;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _p$[ebp+4]
	mov	DWORD PTR [eax+4], ecx

; 271  :     }

	pop	ebp
	ret	16					; 00000010H
?GetClosestPoint@ImRect@@QBE?AUImVec2@@U2@_N@Z ENDP	; ImRect::GetClosestPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Floor@ImRect@@QAEXXZ
_TEXT	SEGMENT
?Floor@ImRect@@QAEXXZ PROC				; ImRect::Floor, COMDAT
; _this$ = ecx

; 261  :     void        Floor()                         { Min.x = (float)(int)Min.x; Min.y = (float)(int)Min.y; Max.x = (float)(int)Max.x; Max.y = (float)(int)Max.y; }

	cvttss2si eax, DWORD PTR [ecx]
	movd	xmm0, eax
	cvttss2si eax, DWORD PTR [ecx+4]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, eax
	cvttss2si eax, DWORD PTR [ecx+8]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, eax
	cvttss2si eax, DWORD PTR [ecx+12]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	ret	0
?Floor@ImRect@@QAEXXZ ENDP				; ImRect::Floor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Clip@ImRect@@QBEXAAU1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
?Clip@ImRect@@QBEXAAU1@@Z PROC				; ImRect::Clip, COMDAT
; _this$ = ecx

; 260  :     void        Clip(ImRect& r) const           { r.Min.x = ImClamp(r.Min.x, Min.x, Max.x); r.Min.y = ImClamp(r.Min.y, Min.y, Max.y); r.Max.x = ImClamp(r.Max.x, Min.x, Max.x); r.Max.y = ImClamp(r.Max.y, Min.y, Max.y); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _r$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	movss	xmm1, DWORD PTR [eax]

; 132  : static inline float  ImClamp(float v, float mn, float mx)                       { return (v < mn) ? mn : (v > mx) ? mx : v; }

	comiss	xmm0, xmm1
	ja	SHORT $LN8@Clip
	movss	xmm0, DWORD PTR [ecx+8]
	minss	xmm0, xmm1
$LN8@Clip:

; 260  :     void        Clip(ImRect& r) const           { r.Min.x = ImClamp(r.Min.x, Min.x, Max.x); r.Min.y = ImClamp(r.Min.y, Min.y, Max.y); r.Max.x = ImClamp(r.Max.x, Min.x, Max.x); r.Max.y = ImClamp(r.Max.y, Min.y, Max.y); }

	movss	xmm1, DWORD PTR [eax+4]
	movss	DWORD PTR [eax], xmm0
	movss	xmm0, DWORD PTR [ecx+4]

; 132  : static inline float  ImClamp(float v, float mn, float mx)                       { return (v < mn) ? mn : (v > mx) ? mx : v; }

	comiss	xmm0, xmm1
	ja	SHORT $LN14@Clip
	movss	xmm0, DWORD PTR [ecx+12]
	minss	xmm0, xmm1
$LN14@Clip:

; 260  :     void        Clip(ImRect& r) const           { r.Min.x = ImClamp(r.Min.x, Min.x, Max.x); r.Min.y = ImClamp(r.Min.y, Min.y, Max.y); r.Max.x = ImClamp(r.Max.x, Min.x, Max.x); r.Max.y = ImClamp(r.Max.y, Min.y, Max.y); }

	movss	xmm1, DWORD PTR [eax+8]
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR [ecx]

; 132  : static inline float  ImClamp(float v, float mn, float mx)                       { return (v < mn) ? mn : (v > mx) ? mx : v; }

	comiss	xmm0, xmm1
	ja	SHORT $LN20@Clip
	movss	xmm0, DWORD PTR [ecx+8]
	minss	xmm0, xmm1
$LN20@Clip:

; 260  :     void        Clip(ImRect& r) const           { r.Min.x = ImClamp(r.Min.x, Min.x, Max.x); r.Min.y = ImClamp(r.Min.y, Min.y, Max.y); r.Max.x = ImClamp(r.Max.x, Min.x, Max.x); r.Max.y = ImClamp(r.Max.y, Min.y, Max.y); }

	movss	xmm1, DWORD PTR [eax+12]
	movss	DWORD PTR [eax+8], xmm0
	movss	xmm0, DWORD PTR [ecx+4]

; 132  : static inline float  ImClamp(float v, float mn, float mx)                       { return (v < mn) ? mn : (v > mx) ? mx : v; }

	comiss	xmm0, xmm1
	ja	SHORT $LN27@Clip
	movss	xmm0, DWORD PTR [ecx+12]
	minss	xmm0, xmm1
$LN27@Clip:

; 260  :     void        Clip(ImRect& r) const           { r.Min.x = ImClamp(r.Min.x, Min.x, Max.x); r.Min.y = ImClamp(r.Min.y, Min.y, Max.y); r.Max.x = ImClamp(r.Max.x, Min.x, Max.x); r.Max.y = ImClamp(r.Max.y, Min.y, Max.y); }

	movss	DWORD PTR [eax+12], xmm0
	pop	ebp
	ret	4
?Clip@ImRect@@QBEXAAU1@@Z ENDP				; ImRect::Clip
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Translate@ImRect@@QAEXABUImVec2@@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
?Translate@ImRect@@QAEXABUImVec2@@@Z PROC		; ImRect::Translate, COMDAT
; _this$ = ecx

; 259  :     void        Translate(const ImVec2& v)      { Min.x += v.x; Min.y += v.y; Max.x += v.x; Max.y += v.y; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx+8]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+12]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	4
?Translate@ImRect@@QAEXABUImVec2@@@Z ENDP		; ImRect::Translate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Expand@ImRect@@QAEXABUImVec2@@@Z
_TEXT	SEGMENT
_amount$ = 8						; size = 4
?Expand@ImRect@@QAEXABUImVec2@@@Z PROC			; ImRect::Expand, COMDAT
; _this$ = ecx

; 258  :     void        Expand(const ImVec2& amount)    { Min.x -= amount.x; Min.y -= amount.y; Max.x += amount.x; Max.y += amount.y; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _amount$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx+8]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+12]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	4
?Expand@ImRect@@QAEXABUImVec2@@@Z ENDP			; ImRect::Expand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Expand@ImRect@@QAEXM@Z
_TEXT	SEGMENT
_amount$ = 8						; size = 4
?Expand@ImRect@@QAEXM@Z PROC				; ImRect::Expand, COMDAT
; _this$ = ecx

; 257  :     void        Expand(const float amount)      { Min.x -= amount;   Min.y -= amount;   Max.x += amount;   Max.y += amount; }

	npad	2
	push	ebp
	mov	ebp, esp
	movss	xmm1, DWORD PTR _amount$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR [ecx+12]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	4
?Expand@ImRect@@QAEXM@Z ENDP				; ImRect::Expand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Add@ImRect@@QAEXABU1@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?Add@ImRect@@QAEXABU1@@Z PROC				; ImRect::Add, COMDAT
; _this$ = ecx

; 256  :     void        Add(const ImRect& rhs)          { if (Min.x > rhs.Min.x) Min.x = rhs.Min.x; if (Min.y > rhs.Min.y) Min.y = rhs.Min.y; if (Max.x < rhs.Max.x) Max.x = rhs.Max.x; if (Max.y < rhs.Max.y) Max.y = rhs.Max.y; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	movss	xmm1, DWORD PTR [eax]
	comiss	xmm0, xmm1
	jbe	SHORT $LN2@Add
	movss	DWORD PTR [ecx], xmm1
$LN2@Add:
	movss	xmm1, DWORD PTR [eax+4]
	movss	xmm0, DWORD PTR [ecx+4]
	comiss	xmm0, xmm1
	jbe	SHORT $LN3@Add
	movss	DWORD PTR [ecx+4], xmm1
$LN3@Add:
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR [ecx+8]
	jbe	SHORT $LN4@Add
	movss	DWORD PTR [ecx+8], xmm0
$LN4@Add:
	movss	xmm0, DWORD PTR [eax+12]
	comiss	xmm0, DWORD PTR [ecx+12]
	jbe	SHORT $LN5@Add
	movss	DWORD PTR [ecx+12], xmm0
$LN5@Add:
	pop	ebp
	ret	4
?Add@ImRect@@QAEXABU1@@Z ENDP				; ImRect::Add
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Add@ImRect@@QAEXABUImVec2@@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?Add@ImRect@@QAEXABUImVec2@@@Z PROC			; ImRect::Add, COMDAT
; _this$ = ecx

; 255  :     void        Add(const ImVec2& rhs)          { if (Min.x > rhs.x)     Min.x = rhs.x;     if (Min.y > rhs.y) Min.y = rhs.y;         if (Max.x < rhs.x) Max.x = rhs.x;         if (Max.y < rhs.y) Max.y = rhs.y; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	movss	xmm1, DWORD PTR [eax]
	comiss	xmm0, xmm1
	jbe	SHORT $LN2@Add
	movss	DWORD PTR [ecx], xmm1
$LN2@Add:
	movss	xmm1, DWORD PTR [eax+4]
	movss	xmm0, DWORD PTR [ecx+4]
	comiss	xmm0, xmm1
	jbe	SHORT $LN3@Add
	movss	DWORD PTR [ecx+4], xmm1
$LN3@Add:
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx+8]
	jbe	SHORT $LN4@Add
	movss	DWORD PTR [ecx+8], xmm0
$LN4@Add:
	movss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR [ecx+12]
	jbe	SHORT $LN5@Add
	movss	DWORD PTR [ecx+12], xmm0
$LN5@Add:
	pop	ebp
	ret	4
?Add@ImRect@@QAEXABUImVec2@@@Z ENDP			; ImRect::Add
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Overlaps@ImRect@@QBE_NABU1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
?Overlaps@ImRect@@QBE_NABU1@@Z PROC			; ImRect::Overlaps, COMDAT
; _this$ = ecx

; 254  :     bool        Overlaps(const ImRect& r) const { return r.Min.y < Max.y  && r.Max.y > Min.y  && r.Min.x < Max.x && r.Max.x > Min.x; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _r$[ebp]
	movss	xmm0, DWORD PTR [ecx+12]
	comiss	xmm0, DWORD PTR [eax+4]
	jbe	SHORT $LN3@Overlaps
	movss	xmm0, DWORD PTR [eax+12]
	comiss	xmm0, DWORD PTR [ecx+4]
	jbe	SHORT $LN3@Overlaps
	movss	xmm0, DWORD PTR [ecx+8]
	comiss	xmm0, DWORD PTR [eax]
	jbe	SHORT $LN3@Overlaps
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR [ecx]
	jbe	SHORT $LN3@Overlaps
	mov	al, 1
	pop	ebp
	ret	4
$LN3@Overlaps:
	xor	al, al
	pop	ebp
	ret	4
?Overlaps@ImRect@@QBE_NABU1@@Z ENDP			; ImRect::Overlaps
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Contains@ImRect@@QBE_NABU1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
?Contains@ImRect@@QBE_NABU1@@Z PROC			; ImRect::Contains, COMDAT
; _this$ = ecx

; 253  :     bool        Contains(const ImRect& r) const { return r.Min.x >= Min.x && r.Min.y >= Min.y && r.Max.x < Max.x && r.Max.y < Max.y; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _r$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx]
	jb	SHORT $LN3@Contains
	movss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR [ecx+4]
	jb	SHORT $LN3@Contains
	movss	xmm0, DWORD PTR [ecx+8]
	comiss	xmm0, DWORD PTR [eax+8]
	jbe	SHORT $LN3@Contains
	movss	xmm0, DWORD PTR [ecx+12]
	comiss	xmm0, DWORD PTR [eax+12]
	jbe	SHORT $LN3@Contains
	mov	al, 1
	pop	ebp
	ret	4
$LN3@Contains:
	xor	al, al
	pop	ebp
	ret	4
?Contains@ImRect@@QBE_NABU1@@Z ENDP			; ImRect::Contains
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?Contains@ImRect@@QBE_NABUImVec2@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Contains@ImRect@@QBE_NABUImVec2@@@Z PROC		; ImRect::Contains, COMDAT
; _this$ = ecx

; 252  :     bool        Contains(const ImVec2& p) const { return p.x >= Min.x     && p.y >= Min.y     && p.x < Max.x     && p.y < Max.y; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _p$[ebp]
	movss	xmm2, DWORD PTR [eax]
	comiss	xmm2, DWORD PTR [ecx]
	jb	SHORT $LN3@Contains
	movss	xmm1, DWORD PTR [eax+4]
	comiss	xmm1, DWORD PTR [ecx+4]
	jb	SHORT $LN3@Contains
	movss	xmm0, DWORD PTR [ecx+8]
	comiss	xmm0, xmm2
	jbe	SHORT $LN3@Contains
	movss	xmm0, DWORD PTR [ecx+12]
	comiss	xmm0, xmm1
	jbe	SHORT $LN3@Contains
	mov	al, 1
	pop	ebp
	ret	4
$LN3@Contains:
	xor	al, al
	pop	ebp
	ret	4
?Contains@ImRect@@QBE_NABUImVec2@@@Z ENDP		; ImRect::Contains
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetBR@ImRect@@QBE?AUImVec2@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetBR@ImRect@@QBE?AUImVec2@@XZ PROC			; ImRect::GetBR, COMDAT
; _this$ = ecx

; 251  :     ImVec2      GetBR() const                   { return Max; }                   // Bottom-right

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	pop	ebp
	ret	4
?GetBR@ImRect@@QBE?AUImVec2@@XZ ENDP			; ImRect::GetBR
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetBL@ImRect@@QBE?AUImVec2@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetBL@ImRect@@QBE?AUImVec2@@XZ PROC			; ImRect::GetBL, COMDAT
; _this$ = ecx

; 250  :     ImVec2      GetBL() const                   { return ImVec2(Min.x, Max.y); }  // Bottom-left

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 250  :     ImVec2      GetBL() const                   { return ImVec2(Min.x, Max.y); }  // Bottom-left

	pop	ebp
	ret	4
?GetBL@ImRect@@QBE?AUImVec2@@XZ ENDP			; ImRect::GetBL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetTR@ImRect@@QBE?AUImVec2@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetTR@ImRect@@QBE?AUImVec2@@XZ PROC			; ImRect::GetTR, COMDAT
; _this$ = ecx

; 249  :     ImVec2      GetTR() const                   { return ImVec2(Max.x, Min.y); }  // Top-right

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 249  :     ImVec2      GetTR() const                   { return ImVec2(Max.x, Min.y); }  // Top-right

	pop	ebp
	ret	4
?GetTR@ImRect@@QBE?AUImVec2@@XZ ENDP			; ImRect::GetTR
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetTL@ImRect@@QBE?AUImVec2@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetTL@ImRect@@QBE?AUImVec2@@XZ PROC			; ImRect::GetTL, COMDAT
; _this$ = ecx

; 248  :     ImVec2      GetTL() const                   { return Min; }                   // Top-left

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	pop	ebp
	ret	4
?GetTL@ImRect@@QBE?AUImVec2@@XZ ENDP			; ImRect::GetTL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetHeight@ImRect@@QBEMXZ
_TEXT	SEGMENT
?GetHeight@ImRect@@QBEMXZ PROC				; ImRect::GetHeight, COMDAT
; _this$ = ecx

; 247  :     float       GetHeight() const               { return Max.y-Min.y; }

	fld	DWORD PTR [ecx+12]
	fsub	DWORD PTR [ecx+4]
	ret	0
?GetHeight@ImRect@@QBEMXZ ENDP				; ImRect::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetWidth@ImRect@@QBEMXZ
_TEXT	SEGMENT
?GetWidth@ImRect@@QBEMXZ PROC				; ImRect::GetWidth, COMDAT
; _this$ = ecx

; 246  :     float       GetWidth() const                { return Max.x-Min.x; }

	fld	DWORD PTR [ecx+8]
	fsub	DWORD PTR [ecx]
	ret	0
?GetWidth@ImRect@@QBEMXZ ENDP				; ImRect::GetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetSize@ImRect@@QBE?AUImVec2@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetSize@ImRect@@QBE?AUImVec2@@XZ PROC			; ImRect::GetSize, COMDAT
; _this$ = ecx

; 245  :     ImVec2      GetSize() const                 { return ImVec2(Max.x-Min.x, Max.y-Min.y); }

	npad	2
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, DWORD PTR [ecx]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movss	DWORD PTR [eax], xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 245  :     ImVec2      GetSize() const                 { return ImVec2(Max.x-Min.x, Max.y-Min.y); }

	movss	xmm0, DWORD PTR [ecx+12]
	subss	xmm0, DWORD PTR [ecx+4]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR [eax+4], xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 245  :     ImVec2      GetSize() const                 { return ImVec2(Max.x-Min.x, Max.y-Min.y); }

	pop	ebp
	ret	4
?GetSize@ImRect@@QBE?AUImVec2@@XZ ENDP			; ImRect::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ?GetCenter@ImRect@@QBE?AUImVec2@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetCenter@ImRect@@QBE?AUImVec2@@XZ PROC		; ImRect::GetCenter, COMDAT
; _this$ = ecx

; 244  :     ImVec2      GetCenter() const               { return ImVec2((Min.x+Max.x)*0.5f, (Min.y+Max.y)*0.5f); }

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	xmm0, DWORD PTR [ecx+8]
	addss	xmm0, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 244  :     ImVec2      GetCenter() const               { return ImVec2((Min.x+Max.x)*0.5f, (Min.y+Max.y)*0.5f); }

	mulss	xmm0, DWORD PTR __real@3f000000
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR [eax], xmm0
	movss	xmm0, DWORD PTR [ecx+12]
	addss	xmm0, DWORD PTR [ecx+4]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 244  :     ImVec2      GetCenter() const               { return ImVec2((Min.x+Max.x)*0.5f, (Min.y+Max.y)*0.5f); }

	mulss	xmm0, DWORD PTR __real@3f000000
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR [eax+4], xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 244  :     ImVec2      GetCenter() const               { return ImVec2((Min.x+Max.x)*0.5f, (Min.y+Max.y)*0.5f); }

	pop	ebp
	ret	4
?GetCenter@ImRect@@QBE?AUImVec2@@XZ ENDP		; ImRect::GetCenter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ??0ImRect@@QAE@MMMM@Z
_TEXT	SEGMENT
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
??0ImRect@@QAE@MMMM@Z PROC				; ImRect::ImRect, COMDAT
; _this$ = ecx

; 242  :     ImRect(float x1, float y1, float x2, float y2)  : Min(x1, y1), Max(x2, y2)                      {}

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	xmm0, DWORD PTR _x1$[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 242  :     ImRect(float x1, float y1, float x2, float y2)  : Min(x1, y1), Max(x2, y2)                      {}

	mov	eax, ecx
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 242  :     ImRect(float x1, float y1, float x2, float y2)  : Min(x1, y1), Max(x2, y2)                      {}

	pop	ebp
	ret	16					; 00000010H
??0ImRect@@QAE@MMMM@Z ENDP				; ImRect::ImRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ??0ImRect@@QAE@ABUImVec4@@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??0ImRect@@QAE@ABUImVec4@@@Z PROC			; ImRect::ImRect, COMDAT
; _this$ = ecx

; 241  :     ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)                  {}

	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	movss	DWORD PTR [ecx+4], xmm0
	mov	eax, DWORD PTR [edx+8]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 241  :     ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)                  {}

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR [ecx+8], eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 241  :     ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)                  {}

	mov	eax, ecx
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR [ecx+12], xmm0
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 241  :     ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)                  {}

	pop	ebp
	ret	4
??0ImRect@@QAE@ABUImVec4@@@Z ENDP			; ImRect::ImRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ??0ImRect@@QAE@ABUImVec2@@0@Z
_TEXT	SEGMENT
_min$ = 8						; size = 4
_max$ = 12						; size = 4
??0ImRect@@QAE@ABUImVec2@@0@Z PROC			; ImRect::ImRect, COMDAT
; _this$ = ecx

; 240  :     ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                            {}

	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _min$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _max$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, ecx
	pop	ebp
	ret	8
??0ImRect@@QAE@ABUImVec2@@0@Z ENDP			; ImRect::ImRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
;	COMDAT ??0ImRect@@QAE@XZ
_TEXT	SEGMENT
??0ImRect@@QAE@XZ PROC					; ImRect::ImRect, COMDAT
; _this$ = ecx
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR [ecx], 2139095039		; 7f7fffffH
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 239  :     ImRect()                                        : Min(FLT_MAX,FLT_MAX), Max(-FLT_MAX,-FLT_MAX)  {}

	mov	eax, ecx
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR [ecx+4], 2139095039		; 7f7fffffH
	mov	DWORD PTR [ecx+8], -8388609		; ff7fffffH
	mov	DWORD PTR [ecx+12], -8388609		; ff7fffffH
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h

; 239  :     ImRect()                                        : Min(FLT_MAX,FLT_MAX), Max(-FLT_MAX,-FLT_MAX)  {}

	ret	0
??0ImRect@@QAE@XZ ENDP					; ImRect::ImRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
_TEXT	SEGMENT
_v$ = 8							; size = 4
tv67 = 12						; size = 4
_mn$ = 12						; size = 4
_mx$ = 16						; size = 4
?ImClamp@@YAMMMM@Z PROC					; ImClamp

; 132  : static inline float  ImClamp(float v, float mn, float mx)                       { return (v < mn) ? mn : (v > mx) ? mx : v; }

	npad	2
	push	ebp
	mov	ebp, esp
	movss	xmm1, DWORD PTR _mn$[ebp]
	movss	xmm0, DWORD PTR _v$[ebp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN5@ImClamp
	movss	DWORD PTR tv67[ebp], xmm1
	fld	DWORD PTR tv67[ebp]
	pop	ebp
	ret	0
$LN5@ImClamp:
	minss	xmm0, DWORD PTR _mx$[ebp]
	movss	DWORD PTR tv67[ebp], xmm0
	fld	DWORD PTR tv67[ebp]
	pop	ebp
	ret	0
?ImClamp@@YAMMMM@Z ENDP					; ImClamp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui_internal.h
_TEXT	SEGMENT
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
?ImMin@@YAHHH@Z PROC					; ImMin

; 125  : static inline int    ImMin(int lhs, int rhs)                                    { return lhs < rhs ? lhs : rhs; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	cmp	DWORD PTR _lhs$[ebp], eax
	cmovl	eax, DWORD PTR _lhs$[ebp]
	pop	ebp
	ret	0
?ImMin@@YAHHH@Z ENDP					; ImMin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
_TEXT	SEGMENT
$T2 = -24						; size = 8
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_piv2Val$ = 8						; size = 4
_ini_file$ = 12						; size = 4
_wszDesc$ = 16						; size = 4
_sec_name$ = 20						; size = 4
_key_name$ = 24						; size = 4
?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z PROC ; LoadWidgetVec2

; 296  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi

; 299  :     (SK_Widget_ParameterFactory.create_parameter <ImVec2> (wszDesc));

	push	0
	push	OFFSET ??_R0?AVParameterVec2f@sk@@@8
	push	OFFSET ??_R0?AViParameter@sk@@@8
	push	0
	push	DWORD PTR _wszDesc$[ebp]
	mov	ecx, OFFSET ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A ; SK_Widget_ParameterFactory
	call	??$create_parameter@UImVec2@@@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z ; sk::ParameterFactory::create_parameter<ImVec2>
	push	eax
	call	___RTDynamicCast
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edi, DWORD PTR _key_name$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 299  :     (SK_Widget_ParameterFactory.create_parameter <ImVec2> (wszDesc));

	mov	esi, eax

; 301  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	push	ecx
	mov	edx, esp
	mov	DWORD PTR $T3[ebp], esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edi

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ebx, DWORD PTR [ecx+2]

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax
$LL54@LoadWidget:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL54@LoadWidget
	sub	ecx, ebx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edi, DWORD PTR _sec_name$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 301  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	sub	esp, 24					; 00000018H
	mov	edx, esp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edi

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ebx, DWORD PTR [ecx+2]

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax
$LL55@LoadWidget:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL55@LoadWidget
	sub	ecx, ebx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 301  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	push	DWORD PTR _ini_file$[ebp]
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini

; 302  : 
; 303  :   if (! ret->load (*piv2Val))

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	mov	edi, DWORD PTR _piv2Val$[ebp]
	push	edi
	mov	eax, DWORD PTR [eax+24]
	call	eax
	test	al, al
	jne	SHORT $LN2@LoadWidget

; 304  :   {
; 305  :     ret->store    (*piv2Val);

	push	DWORD PTR [edi+4]
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	DWORD PTR [edi]
	call	DWORD PTR [eax+16]
$LN2@LoadWidget:

; 306  :   }
; 307  : 
; 308  :   *piv2Val = ret->get_value ();

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edi], ecx
	mov	eax, DWORD PTR [eax+4]

; 309  : 
; 310  :   return ret;
; 311  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [edi+4], eax
	mov	eax, esi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z$0:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z:
	mov	eax, OFFSET __ehfuncinfo$?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z ENDP ; LoadWidgetVec2
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdaVal$ = 8						; size = 4
_ini_file$ = 12						; size = 4
_wszDesc$ = 16						; size = 4
_sec_name$ = 20						; size = 4
_key_name$ = 24						; size = 4
?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z PROC ; LoadWidgetDocking

; 275  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi

; 278  :     (SK_Widget_ParameterFactory.create_parameter <int> (wszDesc));

	push	0
	push	OFFSET ??_R0?AVParameterInt@sk@@@8
	push	OFFSET ??_R0?AViParameter@sk@@@8
	push	0
	push	DWORD PTR _wszDesc$[ebp]
	mov	ecx, OFFSET ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A ; SK_Widget_ParameterFactory
	call	??$create_parameter@H@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z ; sk::ParameterFactory::create_parameter<int>
	push	eax
	call	___RTDynamicCast
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edi, DWORD PTR _key_name$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 278  :     (SK_Widget_ParameterFactory.create_parameter <int> (wszDesc));

	mov	esi, eax

; 280  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	push	ecx
	mov	edx, esp
	mov	DWORD PTR $T2[ebp], esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edi

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ebx, DWORD PTR [ecx+2]

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax
$LL54@LoadWidget:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL54@LoadWidget
	sub	ecx, ebx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edi, DWORD PTR _sec_name$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 280  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	sub	esp, 24					; 00000018H
	mov	edx, esp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edi

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ebx, DWORD PTR [ecx+2]

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax
$LL55@LoadWidget:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL55@LoadWidget
	sub	ecx, ebx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 280  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	push	DWORD PTR _ini_file$[ebp]
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini

; 281  : 
; 282  :   if (! ret->load (*(int *)pdaVal))

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	mov	edi, DWORD PTR _pdaVal$[ebp]
	push	edi
	mov	eax, DWORD PTR [eax+24]
	call	eax
	test	al, al
	jne	SHORT $LN2@LoadWidget

; 283  :   {
; 284  :     ret->store    (*(int *)pdaVal);

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	DWORD PTR [edi]
	call	DWORD PTR [eax+16]
$LN2@LoadWidget:

; 285  :   }
; 286  : 
; 287  :   *(int *)pdaVal = ret->get_value ();

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	call	DWORD PTR [eax+8]

; 288  : 
; 289  :   return ret;
; 290  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [edi], eax
	mov	eax, esi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z$0:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z:
	mov	eax, OFFSET __ehfuncinfo$?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z ENDP ; LoadWidgetDocking
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pbVal$ = 8						; size = 4
_ini_file$ = 12						; size = 4
_wszDesc$ = 16						; size = 4
_sec_name$ = 20						; size = 4
_key_name$ = 24						; size = 4
?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z PROC ; LoadWidgetBool

; 254  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi

; 257  :     (SK_Widget_ParameterFactory.create_parameter <bool> (wszDesc));

	push	0
	push	OFFSET ??_R0?AVParameterBool@sk@@@8
	push	OFFSET ??_R0?AViParameter@sk@@@8
	push	0
	push	DWORD PTR _wszDesc$[ebp]
	mov	ecx, OFFSET ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A ; SK_Widget_ParameterFactory
	call	??$create_parameter@_N@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z ; sk::ParameterFactory::create_parameter<bool>
	push	eax
	call	___RTDynamicCast
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edi, DWORD PTR _key_name$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 257  :     (SK_Widget_ParameterFactory.create_parameter <bool> (wszDesc));

	mov	esi, eax

; 259  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	push	ecx
	mov	edx, esp
	mov	DWORD PTR $T2[ebp], esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edi

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ebx, DWORD PTR [ecx+2]

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax
$LL54@LoadWidget:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL54@LoadWidget
	sub	ecx, ebx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edi, DWORD PTR _sec_name$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 259  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	sub	esp, 24					; 00000018H
	mov	edx, esp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edi

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ebx, DWORD PTR [ecx+2]

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax
$LL55@LoadWidget:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL55@LoadWidget
	sub	ecx, ebx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 259  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	push	DWORD PTR _ini_file$[ebp]
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini

; 260  : 
; 261  :   if (! ret->load (*pbVal))

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	mov	edi, DWORD PTR _pbVal$[ebp]
	push	edi
	mov	eax, DWORD PTR [eax+24]
	call	eax
	test	al, al
	jne	SHORT $LN2@LoadWidget

; 262  :   {
; 263  :     ret->store    (*pbVal);

	mov	edx, DWORD PTR [esi]
	mov	ecx, esi
	movzx	eax, BYTE PTR [edi]
	push	eax
	call	DWORD PTR [edx+16]
$LN2@LoadWidget:

; 264  :   }
; 265  : 
; 266  :   *pbVal = ret->get_value ();

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	mov	eax, DWORD PTR [eax+8]
	call	eax

; 267  : 
; 268  :   return ret;
; 269  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	BYTE PTR [edi], al
	mov	eax, esi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z$0:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z:
	mov	eax, OFFSET __ehfuncinfo$?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z ENDP ; LoadWidgetBool
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
_TEXT	SEGMENT
$T2 = -48						; size = 24
$T3 = -24						; size = 4
_ret$1$ = -20						; size = 4
tv781 = -16						; size = 4
tv778 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_binding$ = 8						; size = 4
_ini_file$ = 12						; size = 4
_wszDesc$ = 16						; size = 4
_sec_name$ = 20						; size = 4
_key_name$ = 24						; size = 4
?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z PROC ; LoadWidgetKeybind

; 231  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 36					; 00000024H
	push	esi
	push	edi

; 234  :     (SK_Widget_ParameterFactory.create_parameter <std::wstring> (wszDesc));

	push	0
	push	OFFSET ??_R0?AVParameterStringW@sk@@@8
	push	OFFSET ??_R0?AViParameter@sk@@@8
	push	0
	push	DWORD PTR _wszDesc$[ebp]
	mov	ecx, OFFSET ?SK_Widget_ParameterFactory@@3VParameterFactory@sk@@A ; SK_Widget_ParameterFactory
	call	??$create_parameter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@ParameterFactory@sk@@QAEPAViParameter@1@PB_W@Z ; sk::ParameterFactory::create_parameter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	push	eax
	call	___RTDynamicCast
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	esi, DWORD PTR _key_name$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 234  :     (SK_Widget_ParameterFactory.create_parameter <std::wstring> (wszDesc));

	mov	edi, eax

; 236  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	push	ecx
	mov	edx, esp
	mov	DWORD PTR _ret$1$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, esi
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 236  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	mov	DWORD PTR $T3[ebp], esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	eax, DWORD PTR [ecx+2]
	mov	DWORD PTR tv778[ebp], eax
	npad	7
$LL205@LoadWidget:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL205@LoadWidget
	sub	ecx, DWORD PTR tv778[ebp]
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	esi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	esi, DWORD PTR _sec_name$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 236  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	sub	esp, 24					; 00000018H
	mov	edx, esp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, esi

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	eax, DWORD PTR [ecx+2]
	mov	DWORD PTR tv781[ebp], eax
$LL206@LoadWidget:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL206@LoadWidget
	sub	ecx, DWORD PTR tv781[ebp]
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	esi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 236  :   ret->register_to_ini ( ini_file, sec_name, key_name );

	push	DWORD PTR _ini_file$[ebp]
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ; sk::iParameter::register_to_ini

; 237  : 
; 238  :   if (! ret->load (binding->human_readable))

	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	mov	esi, DWORD PTR _binding$[ebp]
	add	esi, 4
	push	esi
	mov	eax, DWORD PTR [eax+24]
	call	eax
	test	al, al
	jne	SHORT $LN2@LoadWidget

; 239  :   {
; 240  :     binding->parse  ();

	mov	ecx, DWORD PTR _binding$[ebp]
	call	?parse@SK_Keybind@@QAEXXZ		; SK_Keybind::parse

; 241  :     ret->store      (binding->human_readable);

	sub	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 241  :     ret->store      (binding->human_readable);

	mov	ecx, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	eax

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7

; 2174 : 		assign(_Right, 0, npos);

	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 241  :     ret->store      (binding->human_readable);

	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	call	DWORD PTR [eax+16]
$LN2@LoadWidget:

; 242  :   }
; 243  : 
; 244  :   binding->human_readable = ret->get_value ();

	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, edi
	mov	eax, DWORD PTR [eax+8]
	call	eax
	mov	edi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2076 : 		if (this != _STD addressof(_Right))

	cmp	esi, edi
	je	SHORT $LN173@LoadWidget

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN104@LoadWidget
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN104@LoadWidget:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	movups	xmm0, XMMWORD PTR [edi]
	movups	XMMWORD PTR [esi], xmm0
	movq	xmm0, QWORD PTR [edi+16]
	movq	QWORD PTR [esi+16], xmm0

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edi+16], eax

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edi], ax
$LN173@LoadWidget:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN179@LoadWidget
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN179@LoadWidget:
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 245  :   binding->parse  ();

	mov	ecx, DWORD PTR _binding$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T2[ebp+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T2[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T2[ebp], ax
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 245  :   binding->parse  ();

	call	?parse@SK_Keybind@@QAEXXZ		; SK_Keybind::parse

; 246  : 
; 247  :   return ret;
; 248  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, DWORD PTR _ret$1$[ebp]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z$0:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z:
	mov	eax, OFFSET __ehfuncinfo$?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z ENDP ; LoadWidgetKeybind
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
_ini$ = 8						; size = 4
?save@SK_Widget@@IAEXPAUiSK_INI@@@Z PROC		; SK_Widget::save
; _this$ = ecx

; 448  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, ecx

; 449  :   OnConfig (ConfigEvent::SaveStart);

	push	2
	mov	eax, DWORD PTR [ebx]
	call	DWORD PTR [eax+8]

; 450  : 
; 451  :   if (param_visible)

	mov	ecx, DWORD PTR [ebx+108]
	test	ecx, ecx
	je	$LN2@save

; 452  :   {
; 453  :     param_visible->store (visible);

	mov	edx, DWORD PTR [ecx]
	movzx	eax, BYTE PTR [ebx+184]
	push	eax
	call	DWORD PTR [edx+16]

; 454  :   }
; 455  : 
; 456  :   else
; 457  :     return;
; 458  : 
; 459  :   param_movable->store      (     movable      );

	mov	ecx, DWORD PTR [ebx+112]
	movzx	eax, BYTE PTR [ebx+188]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+16]

; 460  :   param_border->store       (     border       );

	mov	ecx, DWORD PTR [ebx+124]
	movzx	eax, BYTE PTR [ebx+190]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+16]

; 461  :   param_clickthrough->store (     click_through);

	mov	ecx, DWORD PTR [ebx+128]
	movzx	eax, BYTE PTR [ebx+191]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+16]

; 462  :   param_autofit->store      (     autofit      );

	mov	ecx, DWORD PTR [ebx+116]
	movzx	eax, BYTE PTR [ebx+187]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+16]

; 463  :   param_resizable->store    (     resizable    );

	mov	ecx, DWORD PTR [ebx+120]
	movzx	eax, BYTE PTR [ebx+189]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+16]

; 464  :   param_docking->store      ((int)docking      );

	mov	ecx, DWORD PTR [ebx+148]
	push	DWORD PTR [ebx+224]
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 465  :   param_minsize->store      (     min_size     );

	mov	ecx, DWORD PTR [ebx+132]
	push	DWORD PTR [ebx+196]
	push	DWORD PTR [ebx+192]
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 466  :   param_maxsize->store      (     max_size     );

	mov	ecx, DWORD PTR [ebx+136]
	push	DWORD PTR [ebx+204]
	push	DWORD PTR [ebx+200]
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 467  :   param_size->store         (     size         );

	mov	ecx, DWORD PTR [ebx+140]
	push	DWORD PTR [ebx+212]
	push	DWORD PTR [ebx+208]
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 468  :   param_pos->store          (     pos          );

	mov	ecx, DWORD PTR [ebx+144]
	push	DWORD PTR [ebx+220]
	push	DWORD PTR [ebx+216]
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 469  : 
; 470  :   static DWORD dwLastWrite = 0;
; 471  : 
; 472  :   if (dwLastWrite < timeGetTime () - 250)

	call	DWORD PTR __imp__timeGetTime@0
	sub	eax, 250				; 000000faH
	cmp	DWORD PTR ?dwLastWrite@?1??save@SK_Widget@@IAEXPAUiSK_INI@@@Z@4KA, eax
	jae	SHORT $LN4@save

; 473  :   {
; 474  :     ini->write (ini->get_filename ());

	push	esi
	mov	esi, DWORD PTR _ini$[ebp]
	push	edi
	push	esi
	mov	edi, DWORD PTR [esi]
	call	DWORD PTR [edi+44]
	push	eax
	push	esi
	call	DWORD PTR [edi+20]

; 475  :     dwLastWrite = timeGetTime ();

	call	DWORD PTR __imp__timeGetTime@0
	pop	edi
	mov	DWORD PTR ?dwLastWrite@?1??save@SK_Widget@@IAEXPAUiSK_INI@@@Z@4KA, eax
	pop	esi
$LN4@save:

; 476  :   }
; 477  : 
; 478  :   OnConfig (ConfigEvent::SaveComplete);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, ebx
	push	3
	call	DWORD PTR [eax+8]
$LN2@save:
	pop	ebx

; 479  : }

	pop	ebp
	ret	4
?save@SK_Widget@@IAEXPAUiSK_INI@@@Z ENDP		; SK_Widget::save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?load@SK_Widget@@IAEXPAUiSK_INI@@@Z PROC		; SK_Widget::load
; _this$ = ecx

; 660  : {

	npad	2
	push	esi
	mov	esi, ecx

; 661  :   OnConfig (ConfigEvent::LoadStart);

	push	0
	mov	eax, DWORD PTR [esi]
	call	DWORD PTR [eax+8]

; 662  :   // ...
; 663  :   OnConfig (ConfigEvent::LoadComplete);

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	1
	call	DWORD PTR [eax+8]
	pop	esi

; 664  : }

	ret	4
?load@SK_Widget@@IAEXPAUiSK_INI@@@Z ENDP		; SK_Widget::load
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?getToggleKey@SK_Widget@@QBEABUSK_Keybind@@XZ
_TEXT	SEGMENT
?getToggleKey@SK_Widget@@QBEABUSK_Keybind@@XZ PROC	; SK_Widget::getToggleKey, COMDAT
; _this$ = ecx

; 141  :   const SK_Keybind&  getToggleKey    (void) const { return    toggle_key;     }

	lea	eax, DWORD PTR [ecx+4]
	ret	0
?getToggleKey@SK_Widget@@QBEABUSK_Keybind@@XZ ENDP	; SK_Widget::getToggleKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?getDockingPoint@SK_Widget@@QBEABW4DockAnchor@1@XZ
_TEXT	SEGMENT
?getDockingPoint@SK_Widget@@QBEABW4DockAnchor@1@XZ PROC	; SK_Widget::getDockingPoint, COMDAT
; _this$ = ecx

; 139  :   const DockAnchor&  getDockingPoint (void) const { return    docking;        }

	lea	eax, DWORD PTR [ecx+224]
	ret	0
?getDockingPoint@SK_Widget@@QBEABW4DockAnchor@1@XZ ENDP	; SK_Widget::getDockingPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?getPos@SK_Widget@@QBEABUImVec2@@XZ
_TEXT	SEGMENT
?getPos@SK_Widget@@QBEABUImVec2@@XZ PROC		; SK_Widget::getPos, COMDAT
; _this$ = ecx

; 138  :   const ImVec2&      getPos          (void) const { return    pos;            }

	lea	eax, DWORD PTR [ecx+216]
	ret	0
?getPos@SK_Widget@@QBEABUImVec2@@XZ ENDP		; SK_Widget::getPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?getSize@SK_Widget@@QBEABUImVec2@@XZ
_TEXT	SEGMENT
?getSize@SK_Widget@@QBEABUImVec2@@XZ PROC		; SK_Widget::getSize, COMDAT
; _this$ = ecx

; 137  :   const ImVec2&      getSize         (void) const { return    size;           }

	lea	eax, DWORD PTR [ecx+208]
	ret	0
?getSize@SK_Widget@@QBEABUImVec2@@XZ ENDP		; SK_Widget::getSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?isMovable@SK_Widget@@QBE_NXZ
_TEXT	SEGMENT
?isMovable@SK_Widget@@QBE_NXZ PROC			; SK_Widget::isMovable, COMDAT
; _this$ = ecx

; 130  :         bool         isMovable       (void) const { return    movable;        }

	mov	al, BYTE PTR [ecx+188]
	ret	0
?isMovable@SK_Widget@@QBE_NXZ ENDP			; SK_Widget::isMovable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?isVisible@SK_Widget@@QBE_NXZ
_TEXT	SEGMENT
?isVisible@SK_Widget@@QBE_NXZ PROC			; SK_Widget::isVisible, COMDAT
; _this$ = ecx

; 127  :         bool         isVisible       (void) const { return    visible &&

	cmp	BYTE PTR [ecx+184], 0
	je	SHORT $LN3@isVisible
	cmp	BYTE PTR ?SK_ImGui_Widgets@@3USK_ImGui_WidgetRegistry@@A+32, 0
	jne	SHORT $LN3@isVisible
	mov	al, 1

; 128  :                                                (! SK_ImGui_Widgets.hide_all); }

	ret	0
$LN3@isVisible:

; 127  :         bool         isVisible       (void) const { return    visible &&

	xor	al, al

; 128  :                                                (! SK_ImGui_Widgets.hide_all); }

	ret	0
?isVisible@SK_Widget@@QBE_NXZ ENDP			; SK_Widget::isVisible
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?setPos@SK_Widget@@QAEAAV1@AAUImVec2@@@Z
_TEXT	SEGMENT
_iv2Pos$ = 8						; size = 4
?setPos@SK_Widget@@QAEAAV1@AAUImVec2@@@Z PROC		; SK_Widget::setPos, COMDAT
; _this$ = ecx

; 121  :   SK_Widget& setPos          (ImVec2&     iv2Pos)        { pos           = iv2Pos;        return *this; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _iv2Pos$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+216], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+220], eax
	mov	eax, ecx
	pop	ebp
	ret	4
?setPos@SK_Widget@@QAEAAV1@AAUImVec2@@@Z ENDP		; SK_Widget::setPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?setClickThrough@SK_Widget@@QAEAAV1@_N@Z
_TEXT	SEGMENT
_bClickthrough$ = 8					; size = 1
?setClickThrough@SK_Widget@@QAEAAV1@_N@Z PROC		; SK_Widget::setClickThrough, COMDAT
; _this$ = ecx

; 117  :   SK_Widget& setClickThrough (bool        bClickthrough) { click_through = bClickthrough; return *this; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _bClickthrough$[ebp]
	mov	BYTE PTR [ecx+191], al
	mov	eax, ecx
	pop	ebp
	ret	4
?setClickThrough@SK_Widget@@QAEAAV1@_N@Z ENDP		; SK_Widget::setClickThrough
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?setBorder@SK_Widget@@QAEAAV1@_N@Z
_TEXT	SEGMENT
_bBorder$ = 8						; size = 1
?setBorder@SK_Widget@@QAEAAV1@_N@Z PROC			; SK_Widget::setBorder, COMDAT
; _this$ = ecx

; 116  :   SK_Widget& setBorder       (bool        bBorder)       { border        = bBorder;       return *this; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _bBorder$[ebp]
	mov	BYTE PTR [ecx+190], al
	mov	eax, ecx
	pop	ebp
	ret	4
?setBorder@SK_Widget@@QAEAAV1@_N@Z ENDP			; SK_Widget::setBorder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?setAutoFit@SK_Widget@@QAEAAV1@_N@Z
_TEXT	SEGMENT
_bAutofit$ = 8						; size = 1
?setAutoFit@SK_Widget@@QAEAAV1@_N@Z PROC		; SK_Widget::setAutoFit, COMDAT
; _this$ = ecx

; 115  :   SK_Widget& setAutoFit      (bool        bAutofit)      { autofit       = bAutofit;      return *this; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _bAutofit$[ebp]
	mov	BYTE PTR [ecx+187], al
	mov	eax, ecx
	pop	ebp
	ret	4
?setAutoFit@SK_Widget@@QAEAAV1@_N@Z ENDP		; SK_Widget::setAutoFit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?setResizable@SK_Widget@@QAEAAV1@_N@Z
_TEXT	SEGMENT
_bResizable$ = 8					; size = 1
?setResizable@SK_Widget@@QAEAAV1@_N@Z PROC		; SK_Widget::setResizable, COMDAT
; _this$ = ecx

; 114  :   SK_Widget& setResizable    (bool        bResizable)    { resizable     = bResizable;    return *this; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _bResizable$[ebp]
	mov	BYTE PTR [ecx+189], al
	mov	eax, ecx
	pop	ebp
	ret	4
?setResizable@SK_Widget@@QAEAAV1@_N@Z ENDP		; SK_Widget::setResizable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?setMovable@SK_Widget@@QAEAAV1@_N@Z
_TEXT	SEGMENT
_bMovable$ = 8						; size = 1
?setMovable@SK_Widget@@QAEAAV1@_N@Z PROC		; SK_Widget::setMovable, COMDAT
; _this$ = ecx

; 113  :   SK_Widget& setMovable      (bool        bMovable)      { movable       = bMovable;      return *this; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _bMovable$[ebp]
	mov	BYTE PTR [ecx+188], al
	mov	eax, ecx
	pop	ebp
	ret	4
?setMovable@SK_Widget@@QAEAAV1@_N@Z ENDP		; SK_Widget::setMovable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?setActive@SK_Widget@@QAEAAV1@_N@Z
_TEXT	SEGMENT
_bActive$ = 8						; size = 1
?setActive@SK_Widget@@QAEAAV1@_N@Z PROC			; SK_Widget::setActive, COMDAT
; _this$ = ecx

; 111  :   SK_Widget& setActive       (bool        bActive)       { active        = bActive;       return *this; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _bActive$[ebp]
	mov	BYTE PTR [ecx+185], al
	mov	eax, ecx
	pop	ebp
	ret	4
?setActive@SK_Widget@@QAEAAV1@_N@Z ENDP			; SK_Widget::setActive
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?setVisible@SK_Widget@@QAEAAV1@_N@Z
_TEXT	SEGMENT
_bVisible$ = 8						; size = 1
?setVisible@SK_Widget@@QAEAAV1@_N@Z PROC		; SK_Widget::setVisible, COMDAT
; _this$ = ecx

; 102  :   SK_Widget& setVisible      (bool        bVisible)      { visible       = bVisible;

	npad	2
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _bVisible$[ebp]
	push	esi
	mov	esi, ecx
	mov	BYTE PTR [esi+184], dl

; 103  :                                                            if (visible)

	test	dl, dl
	je	SHORT $LN2@setVisible

; 111  :   SK_Widget& setActive       (bool        bActive)       { active        = bActive;       return *this; }

	mov	BYTE PTR [esi+185], dl
$LN2@setVisible:

; 104  :                                                              setActive (visible);
; 105  : 
; 106  :                                                            if (param_visible != nullptr)

	mov	ecx, DWORD PTR [esi+108]
	test	ecx, ecx
	je	SHORT $LN7@setVisible

; 107  :                                                            {
; 108  :                                                              param_visible->store (visible);

	mov	eax, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR [eax+16]
$LN7@setVisible:

; 109  :                                                            }
; 110  :                                                                                           return *this; }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
?setVisible@SK_Widget@@QAEAAV1@_N@Z ENDP		; SK_Widget::setVisible
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 8
tv195 = -12						; size = 4
_dock$ = -8						; size = 4
_Keybinding$ = -1					; size = 1
?config_base@SK_Widget@@QAEXXZ PROC			; SK_Widget::config_base
; _this$ = ecx

; 483  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 484  :   static bool changed = false;
; 485  : 
; 486  :   const  float font_size           =             ImGui::GetFont  ()->FontSize;//                        * scale;//io.FontGlobalScale;

	call	?GetFont@ImGui@@YAPAUImFont@@XZ		; ImGui::GetFont

; 487  :   const  float font_size_multiline = font_size + ImGui::GetStyle ().ItemSpacing.y + ImGui::GetStyle ().ItemInnerSpacing.y;

	call	?GetStyle@ImGui@@YAAAUImGuiStyle@@XZ	; ImGui::GetStyle
	call	?GetStyle@ImGui@@YAAAUImGuiStyle@@XZ	; ImGui::GetStyle

; 488  : 
; 489  :   if (ImGui::Checkbox ("Movable", &movable))

	lea	eax, DWORD PTR [edi+188]
	push	eax
	push	OFFSET $SG148077
	call	?Checkbox@ImGui@@YA_NPBDPA_N@Z		; ImGui::Checkbox
	movzx	ecx, BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA
	test	al, al
	mov	ebx, 1

; 490  :   {
; 491  :     setMovable (movable);
; 492  :     changed = true;
; 493  :   }
; 494  : 
; 495  :   ImGui::SameLine ();

	mov	DWORD PTR [esp+4], -1082130432		; bf800000H
	cmovne	ecx, ebx
	mov	DWORD PTR [esp], 0
	mov	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, cl
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine

; 496  :   if (ImGui::Checkbox ("Resizable", &resizable))

	lea	esi, DWORD PTR [edi+189]
	push	esi
	push	OFFSET $SG148079
	call	?Checkbox@ImGui@@YA_NPBDPA_N@Z		; ImGui::Checkbox
	movzx	ecx, BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA
	add	esp, 16					; 00000010H
	test	al, al
	cmovne	ecx, ebx

; 497  :   {
; 498  :     setResizable (resizable);
; 499  :     changed = true;
; 500  :   }
; 501  : 
; 502  :   if (! resizable)

	cmp	BYTE PTR [esi], 0
	mov	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, cl
	jne	SHORT $LN4@config_bas

; 503  :   {
; 504  :     ImGui::SameLine ();

	sub	esp, 8
	mov	DWORD PTR [esp+4], -1082130432		; bf800000H
	mov	DWORD PTR [esp], 0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine

; 505  :     if (ImGui::Checkbox ("Auto-Fit", &autofit))

	lea	eax, DWORD PTR [edi+187]
	push	eax
	push	OFFSET $SG148083
	call	?Checkbox@ImGui@@YA_NPBDPA_N@Z		; ImGui::Checkbox
	add	esp, 16					; 00000010H
	test	al, al
	je	SHORT $LN7@config_bas

; 506  :     {
; 507  :       setAutoFit (autofit);
; 508  :       changed = true;

	mov	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, bl

; 509  :     }
; 510  :   }

	jmp	SHORT $LN7@config_bas
$LN4@config_bas:

; 511  : 
; 512  :   else if (changed)

	test	cl, cl
	je	SHORT $LN7@config_bas
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 115  :   SK_Widget& setAutoFit      (bool        bAutofit)      { autofit       = bAutofit;      return *this; }

	mov	BYTE PTR [edi+187], 0
$LN7@config_bas:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 515  :   ImGui::SameLine ();

	sub	esp, 8
	mov	DWORD PTR [esp+4], -1082130432		; bf800000H
	mov	DWORD PTR [esp], 0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine

; 516  :   if (ImGui::Checkbox ("Click-Through", &click_through))

	lea	eax, DWORD PTR [edi+191]
	push	eax
	push	OFFSET $SG148086
	call	?Checkbox@ImGui@@YA_NPBDPA_N@Z		; ImGui::Checkbox
	movzx	ecx, BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA
	test	al, al

; 517  :   {
; 518  :     setClickThrough (click_through);
; 519  :     changed = true;
; 520  :   }
; 521  : 
; 522  :   ImGui::SameLine ();

	mov	DWORD PTR [esp+12], -1082130432		; bf800000H
	cmovne	ecx, ebx
	mov	DWORD PTR [esp+8], 0
	add	esp, 8
	mov	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, cl
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine

; 523  :   if (ImGui::Checkbox ("Draw Border", &border))

	lea	eax, DWORD PTR [edi+190]
	push	eax
	push	OFFSET $SG148088
	call	?Checkbox@ImGui@@YA_NPBDPA_N@Z		; ImGui::Checkbox
	movzx	ecx, BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA
	add	esp, 16					; 00000010H
	test	al, al

; 531  :        e = static_cast <int> (docking) & static_cast <int> (DockAnchor::East),

	mov	eax, DWORD PTR [edi+224]
	cmovne	ecx, ebx

; 532  :        w = static_cast <int> (docking) & static_cast <int> (DockAnchor::West);

	mov	ebx, eax
	mov	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, cl
	mov	ecx, eax
	shr	ecx, 4
	and	ecx, -255				; ffffff01H
	shr	ebx, 5
	mov	DWORD PTR tv195[ebp], ecx
	and	bl, 1

; 533  : 
; 534  :   const char* anchors = "Undocked\0North\0South\0\0";
; 535  : 
; 536  :   int dock = 0;

	xor	ecx, ecx
	lea	esi, DWORD PTR [ecx+2]
	test	al, 1

; 537  : 
; 538  :        if (n) dock = 1;

	je	SHORT $LN10@config_bas
	mov	DWORD PTR _dock$[ebp], 1
	jmp	SHORT $LN12@config_bas
$LN10@config_bas:

; 524  :   {
; 525  :     setBorder (border);
; 526  :     changed = true;
; 527  :   }
; 528  : 
; 529  :   bool n = static_cast <int> (docking) & static_cast <int> (DockAnchor::North),
; 530  :        s = static_cast <int> (docking) & static_cast <int> (DockAnchor::South),

	shr	eax, 1
	test	al, 1

; 539  :   else if (s) dock = 2;

	cmovne	ecx, esi
	mov	DWORD PTR _dock$[ebp], ecx
$LN12@config_bas:

; 540  : 
; 541  :   if (ImGui::Combo ("Vertical Docking Anchor", &dock, anchors, 3))

	push	3
	push	OFFSET $SG148089
	lea	eax, DWORD PTR _dock$[ebp]
	push	eax
	push	OFFSET $SG148094
	call	?Combo@ImGui@@YA_NPBDPAH0H@Z		; ImGui::Combo
	add	esp, 16					; 00000010H
	test	al, al
	je	SHORT $LN13@config_bas

; 542  :   {
; 543  :     int mask = (dock == 1 ? static_cast <int> (DockAnchor::North) : 0x0) |

	mov	ecx, DWORD PTR _dock$[ebp]
	xor	edx, edx
	cmp	ecx, esi

; 544  :                (dock == 2 ? static_cast <int> (DockAnchor::South) : 0x0);
; 545  : 
; 546  :     docking = static_cast <DockAnchor> (
; 547  :                  mask | static_cast <int>     (docking) & ~(
; 548  :                             static_cast <int> (DockAnchor::North) |
; 549  :                             static_cast <int> (DockAnchor::South)
; 550  :                                                            )
; 551  :               );
; 552  : 
; 553  :     changed = true;

	mov	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, 1
	cmove	edx, esi
	xor	eax, eax
	cmp	ecx, 1
	sete	al
	or	edx, eax
	mov	eax, DWORD PTR [edi+224]
	and	eax, -4					; fffffffcH
	or	edx, eax
	mov	DWORD PTR [edi+224], edx
$LN13@config_bas:

; 554  :   }
; 555  : 
; 556  :   anchors = "Undocked\0West\0East\0\0";
; 557  : 
; 558  :   dock = 0;

	xor	eax, eax

; 559  : 
; 560  :        if (w) dock = 1;

	test	bl, bl
	je	SHORT $LN14@config_bas
	mov	DWORD PTR _dock$[ebp], 1
	jmp	SHORT $LN16@config_bas
$LN14@config_bas:

; 561  :   else if (e) dock = 2;

	cmp	BYTE PTR tv195[ebp], al
	cmovne	eax, esi
	mov	DWORD PTR _dock$[ebp], eax
$LN16@config_bas:

; 562  : 
; 563  :   if (ImGui::Combo ("Horizonal Docking Anchor", &dock, anchors, 3))

	push	3
	push	OFFSET $SG148095
	lea	eax, DWORD PTR _dock$[ebp]
	push	eax
	push	OFFSET $SG148100
	call	?Combo@ImGui@@YA_NPBDPAH0H@Z		; ImGui::Combo
	add	esp, 16					; 00000010H
	test	al, al
	je	SHORT $LN17@config_bas

; 564  :   {
; 565  :     int mask = (dock == 1 ? static_cast <int> (DockAnchor::West) : 0x0) |

	mov	ecx, DWORD PTR _dock$[ebp]
	xor	edx, edx
	cmp	ecx, 1

; 566  :                (dock == 2 ? static_cast <int> (DockAnchor::East) : 0x0);
; 567  : 
; 568  :     docking = static_cast <DockAnchor> (
; 569  :                  mask | static_cast <int>     (docking) & ~(
; 570  :                             static_cast <int> (DockAnchor::West) |
; 571  :                             static_cast <int> (DockAnchor::East)
; 572  :                                                            )
; 573  :               );
; 574  : 
; 575  :     changed = true;

	mov	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, 1
	mov	eax, 32					; 00000020H
	mov	esi, 16					; 00000010H
	cmove	edx, eax
	xor	eax, eax
	cmp	ecx, 2
	cmove	eax, esi
	or	edx, eax
	mov	eax, DWORD PTR [edi+224]
	and	eax, -49				; ffffffcfH
	or	edx, eax
	mov	DWORD PTR [edi+224], edx
$LN17@config_bas:

; 576  :   }
; 577  : 
; 578  :   ImGui::Separator ();

	call	?Separator@ImGui@@YAXXZ			; ImGui::Separator

; 579  : 
; 580  :   auto Keybinding = [](SK_Keybind* binding, sk::ParameterStringW* param) ->
; 581  :     auto
; 582  :     {
; 583  :       std::string label  = SK_WideCharToUTF8 (binding->human_readable) + "###";
; 584  :                   label += binding->bind_name;
; 585  : 
; 586  :       if (ImGui::Selectable (label.c_str (), false))
; 587  :       {
; 588  :         ImGui::OpenPopup (binding->bind_name);
; 589  :       }
; 590  : 
; 591  :       std::wstring original_binding = binding->human_readable;
; 592  : 
; 593  :       extern void __stdcall SK_ImGui_KeybindDialog (SK_Keybind* keybind);
; 594  :       SK_ImGui_KeybindDialog (binding);
; 595  : 
; 596  :       if (original_binding != binding->human_readable)
; 597  :       {
; 598  :         param->store         (binding->human_readable);
; 599  : 
; 600  :         extern iSK_INI* osd_ini;
; 601  : 
; 602  :         osd_ini->write (osd_ini->get_filename ());
; 603  : 
; 604  :         return true;
; 605  :       }
; 606  : 
; 607  :       return false;
; 608  :     };
; 609  : 
; 610  :   ImGui::Text       ("Key Bindings");

	push	OFFSET $SG148101
	call	?Text@ImGui@@YAXPBDZZ			; ImGui::Text

; 611  :   ImGui::TreePush   ("");

	push	OFFSET $SG148102
	call	?TreePush@ImGui@@YAXPBD@Z		; ImGui::TreePush
	add	esp, 8

; 612  : 
; 613  :   ImGui::BeginGroup (  );

	call	?BeginGroup@ImGui@@YAXXZ		; ImGui::BeginGroup

; 614  :   if (toggle_key_val != nullptr)

	cmp	DWORD PTR [edi+100], 0
	je	SHORT $LN18@config_bas

; 615  :     ImGui::Text       ("Widget Toggle");

	push	OFFSET $SG148104
	call	?Text@ImGui@@YAXPBDZZ			; ImGui::Text
	add	esp, 4
$LN18@config_bas:

; 616  :   if (focus_key_val != nullptr)

	cmp	DWORD PTR [edi+104], 0
	je	SHORT $LN19@config_bas

; 617  :     ImGui::Text       ("Widget Focus");

	push	OFFSET $SG148106
	call	?Text@ImGui@@YAXPBDZZ			; ImGui::Text
	add	esp, 4
$LN19@config_bas:

; 618  :   ImGui::EndGroup   (  );

	call	?EndGroup@ImGui@@YAXXZ			; ImGui::EndGroup

; 619  : 
; 620  :   ImGui::SameLine   (  );

	sub	esp, 8
	mov	DWORD PTR [esp+4], -1082130432		; bf800000H
	mov	DWORD PTR [esp], 0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
	add	esp, 8

; 621  : 
; 622  :   ImGui::BeginGroup (  );

	call	?BeginGroup@ImGui@@YAXXZ		; ImGui::BeginGroup

; 623  :   if (toggle_key_val != nullptr)

	mov	eax, DWORD PTR [edi+100]
	test	eax, eax
	je	SHORT $LN20@config_bas

; 624  :     Keybinding        (&toggle_key, toggle_key_val);

	push	eax
	lea	eax, DWORD PTR [edi+4]
	push	eax
	lea	ecx, DWORD PTR _Keybinding$[ebp]
	call	??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z ; <lambda_322f41118d6d58482108aceb62769a04>::operator()
$LN20@config_bas:

; 625  :   if (focus_key_val != nullptr)

	mov	eax, DWORD PTR [edi+104]
	test	eax, eax
	je	SHORT $LN21@config_bas

; 626  :     Keybinding        (&focus_key,  focus_key_val);

	push	eax
	lea	eax, DWORD PTR [edi+52]
	push	eax
	lea	ecx, DWORD PTR _Keybinding$[ebp]
	call	??R<lambda_322f41118d6d58482108aceb62769a04>@@QBE_NPAUSK_Keybind@@PAVParameterStringW@sk@@@Z ; <lambda_322f41118d6d58482108aceb62769a04>::operator()
$LN21@config_bas:

; 627  :   ImGui::EndGroup   (  );

	call	?EndGroup@ImGui@@YAXXZ			; ImGui::EndGroup

; 628  : 
; 629  :   ImGui::TreePop    (  );

	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop

; 630  : 
; 631  :   ImGui::Separator ();

	call	?Separator@ImGui@@YAXXZ			; ImGui::Separator

; 632  : 
; 633  :   ImGui::SliderFloat ("Widget Scale", &scale, 0.25f, 2.0f);

	push	ecx
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	lea	eax, DWORD PTR [edi+180]
	push	OFFSET $SG148109
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1073741824		; 40000000H
	mov	DWORD PTR [esp], 1048576000		; 3e800000H
	push	eax
	push	OFFSET $SG148110
	call	?SliderFloat@ImGui@@YA_NPBDPAMMM0M@Z	; ImGui::SliderFloat

; 634  : 
; 635  :   ImGui::Separator ();

	call	?Separator@ImGui@@YAXXZ			; ImGui::Separator

; 639  :   done |= ImGui::Button ("  Save  ");

	lea	eax, DWORD PTR $T1[ebp]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 639  :   done |= ImGui::Button ("  Save  ");

	push	eax
	push	OFFSET $SG148111
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 639  :   done |= ImGui::Button ("  Save  ");

	call	?Button@ImGui@@YA_NPBDABUImVec2@@@Z	; ImGui::Button
	add	esp, 32					; 00000020H

; 640  : 
; 641  :   if (done)

	test	al, al
	je	SHORT $LN22@config_bas

; 642  :   {
; 643  :     if (changed)

	cmp	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, 0
	je	SHORT $LN23@config_bas

; 644  :     {
; 645  :       extern iSK_INI* osd_ini;
; 646  : 
; 647  :       save (osd_ini);

	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	mov	ecx, edi
	call	?save@SK_Widget@@IAEXPAUiSK_INI@@@Z	; SK_Widget::save

; 648  : 
; 649  :       changed = false;

	mov	BYTE PTR ?changed@?1??config_base@SK_Widget@@QAEXXZ@4_NA, 0
$LN23@config_bas:

; 650  :     }
; 651  : 
; 652  :     state__ = 0;

	mov	DWORD PTR [edi+236], 0
$LN22@config_bas:
	pop	edi
	pop	esi
	pop	ebx

; 653  :   }
; 654  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?config_base@SK_Widget@@QAEXXZ ENDP			; SK_Widget::config_base
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
$T2 = -84						; size = 24
$T3 = -60						; size = 8
$T4 = -60						; size = 8
_min$5 = -52						; size = 8
_fScale$1$ = -44					; size = 4
__Ans$6 = -40						; size = 8
$T7 = -40						; size = 8
$T8 = -40						; size = 8
$T9 = -40						; size = 8
$T10 = -40						; size = 8
$T11 = -40						; size = 8
_n$ = -36						; size = 1
_max$12 = -32						; size = 8
_s$ = -28						; size = 1
_w$ = -24						; size = 1
$T13 = -24						; size = 4
_e$ = -20						; size = 1
tv1201 = -20						; size = 4
$T14 = -20						; size = 4
$T15 = -20						; size = 4
$T16 = -20						; size = 4
$T17 = -20						; size = 4
$T18 = -20						; size = 4
$T19 = -13						; size = 1
$T20 = -13						; size = 1
__$EHRec$ = -12						; size = 12
?draw_base@SK_Widget@@QAEXXZ PROC			; SK_Widget::draw_base
; _this$ = ecx

; 293  : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?draw_base@SK_Widget@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 72					; 00000048H

; 294  :   if (SK_ImGui_Widgets.hide_all)

	cmp	BYTE PTR ?SK_ImGui_Widgets@@3USK_ImGui_WidgetRegistry@@A+32, 0
	push	esi
	mov	esi, ecx
	jne	$LN1@draw_base

; 295  :     return;
; 296  : 
; 297  :   if (! ImGui::GetFont ())

	call	?GetFont@ImGui@@YAPAUImFont@@XZ		; ImGui::GetFont
	test	eax, eax
	je	$LN1@draw_base

; 298  :     return;
; 299  : 
; 300  : 
; 301  :   float fScale = 
; 302  :     ImGui::GetFont ()->Scale;

	push	ebx
	call	?GetFont@ImGui@@YAPAUImFont@@XZ		; ImGui::GetFont
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR _fScale$1$[ebp], xmm0

; 303  : 
; 304  :                    ImGui::GetFont ()->Scale = scale;

	movss	xmm0, DWORD PTR [esi+180]
	movss	DWORD PTR tv1201[ebp], xmm0
	call	?GetFont@ImGui@@YAPAUImFont@@XZ		; ImGui::GetFont
	movss	xmm0, DWORD PTR tv1201[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 305  :   ImGui::PushFont (ImGui::GetFont ());

	call	?GetFont@ImGui@@YAPAUImFont@@XZ		; ImGui::GetFont
	push	eax
	call	?PushFont@ImGui@@YAXPAUImFont@@@Z	; ImGui::PushFont

; 307  :   static std::unordered_set <SK_Widget *> initialized;

	mov	eax, DWORD PTR fs:__tls_array
	add	esp, 4
	mov	ecx, DWORD PTR __tls_index
	mov	ebx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?1??draw_base@SK_Widget@@QAEXXZ@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ebx]
	jle	SHORT $LN2@draw_base
	push	OFFSET ?$TSS0@?1??draw_base@SK_Widget@@QAEXXZ@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??draw_base@SK_Widget@@QAEXXZ@4HA, -1
	jne	SHORT $LN2@draw_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T20[ebp]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 307  :   static std::unordered_set <SK_Widget *> initialized;

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	push	eax
	lea	eax, DWORD PTR $T15[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T15[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	push	eax
	mov	ecx, OFFSET ?initialized@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A
	call	??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 307  :   static std::unordered_set <SK_Widget *> initialized;

	push	OFFSET ??__Finitialized@?1??draw_base@SK_Widget@@QAEXXZ@YAXXZ ; `SK_Widget::draw_base'::`2'::`dynamic atexit destructor for 'initialized''
	call	_atexit
	push	OFFSET ?$TSS0@?1??draw_base@SK_Widget@@QAEXXZ@4HA
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	__Init_thread_footer
	add	esp, 8
$LN2@draw_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	lea	eax, DWORD PTR $T18[ebp]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 309  :   if (! initialized.count (this))

	mov	DWORD PTR $T18[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xhash

; 635  : 		_Paircc _Ans = equal_range(_Keyval);

	push	eax
	lea	eax, DWORD PTR __Ans$6[ebp]
	mov	ecx, OFFSET ?initialized@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A
	push	eax
	call	?equal_range@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QBE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@V12@@2@ABQAVSK_Widget@@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::equal_range
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	eax, DWORD PTR __Ans$6[ebp]

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR __Ans$6[ebp+4]
	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN245@draw_base
$LL65@draw_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 242  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR [eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1097 : 		++_Off;

	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list

; 297  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL65@draw_base
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 309  :   if (! initialized.count (this))

	test	edx, edx
	jne	$LN6@draw_base
$LN245@draw_base:

; 310  :   {
; 311  :     setVisible (visible).setAutoFit      (autofit      ).setResizable (resizable).

	mov	dl, BYTE PTR [esi+184]
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 103  :                                                            if (visible)

	test	dl, dl
	je	SHORT $LN76@draw_base

; 111  :   SK_Widget& setActive       (bool        bActive)       { active        = bActive;       return *this; }

	mov	BYTE PTR [esi+185], dl
$LN76@draw_base:

; 106  :                                                            if (param_visible != nullptr)

	mov	ecx, DWORD PTR [esi+108]
	test	ecx, ecx
	je	SHORT $LN77@draw_base

; 107  :                                                            {
; 108  :                                                              param_visible->store (visible);

	mov	eax, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR [eax+16]
$LN77@draw_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	movss	xmm0, DWORD PTR [esi+196]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 314  :     ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	eax, DWORD PTR [esi+196]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [esi+212]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 314  :     ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	ecx, DWORD PTR [esi+212]
	lea	edx, DWORD PTR [esi+204]
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	movss	xmm0, DWORD PTR [edx]

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	cmova	ecx, eax
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 314  :     ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	eax, DWORD PTR [esi+192]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [ecx]

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	movss	xmm0, DWORD PTR [eax]

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	cmova	edx, ecx
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 314  :     ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	ecx, DWORD PTR [esi+208]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [ecx]

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	movss	xmm0, DWORD PTR [esi+200]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 314  :     ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	movss	xmm1, DWORD PTR [edx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	cmova	ecx, eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T11[ebp+4], xmm1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 314  :     ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	eax, DWORD PTR [esi+200]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [ecx]
	cmova	eax, ecx
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 314  :     ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	movss	xmm0, DWORD PTR [eax]
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T11[ebp], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 314  :     ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	call	?SetNextWindowSize@ImGui@@YAXABUImVec2@@H@Z ; ImGui::SetNextWindowSize

; 315  :                                        std::min ( max_size.y, std::max ( size.y, min_size.y ) ) ) );
; 316  :     ImGui::SetNextWindowPos  (pos);

	lea	eax, DWORD PTR [esi+216]
	push	0
	push	eax
	call	?SetNextWindowPos@ImGui@@YAXABUImVec2@@H@Z ; ImGui::SetNextWindowPos
	add	esp, 16					; 00000010H

; 317  : 
; 318  :     initialized.emplace (this);

	mov	DWORD PTR $T17[ebp], esi
	lea	eax, DWORD PTR $T17[ebp]
	mov	ecx, OFFSET ?initialized@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A
	push	eax
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??$emplace@QAVSK_Widget@@@?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAVSK_Widget@@@std@@@std@@@std@@_N@1@$$QBQAVSK_Widget@@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::emplace<SK_Widget * const>
$LN6@draw_base:

; 335  :   if (click_through && (! SK_ImGui_Active ()) && state__ != 1)

	cmp	BYTE PTR [esi+190], 0
	mov	ecx, 4521				; 000011a9H
	mov	eax, 4393				; 00001129H
	cmovne	eax, ecx
	mov	ecx, eax
	or	ecx, 64					; 00000040H
	cmp	BYTE PTR [esi+187], 0
	push	edi
	cmove	ecx, eax
	mov	eax, ecx
	or	eax, 4
	cmp	BYTE PTR [esi+188], 0
	cmovne	eax, ecx
	mov	ecx, eax
	or	ecx, 2
	cmp	BYTE PTR [esi+189], 0
	cmovne	ecx, eax
	cmp	BYTE PTR [esi+191], 0
	mov	edi, ecx
	je	SHORT $LN10@draw_base
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 1466 : static inline bool SK_ImGui_Active (void) { return SK_ImGui_Visible || SK_ReShade_Visible; };

	cmp	BYTE PTR ?SK_ImGui_Visible@@3_NA, 0	; SK_ImGui_Visible
	jne	SHORT $LN10@draw_base
	cmp	BYTE PTR ?SK_ReShade_Visible@@3_NA, 0	; SK_ReShade_Visible
	jne	SHORT $LN10@draw_base
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 335  :   if (click_through && (! SK_ImGui_Active ()) && state__ != 1)

	cmp	DWORD PTR [esi+236], 1
	je	SHORT $LN10@draw_base

; 336  :     flags |= ImGuiWindowFlags_NoInputs | ImGuiWindowFlags_NoMove | ImGuiWindowFlags_NoResize;

	or	edi, 518				; 00000206H
$LN10@draw_base:

; 339  :   static  std::unordered_set <SK_Widget *> last_state_was_config;

	mov	eax, DWORD PTR ?$TSS1@?1??draw_base@SK_Widget@@QAEXXZ@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ebx]
	jle	SHORT $LN249@draw_base
	push	OFFSET ?$TSS1@?1??draw_base@SK_Widget@@QAEXXZ@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS1@?1??draw_base@SK_Widget@@QAEXXZ@4HA, -1
	jne	SHORT $LN249@draw_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	lea	eax, DWORD PTR $T19[ebp]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 339  :   static  std::unordered_set <SK_Widget *> last_state_was_config;

	mov	DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	push	eax
	lea	eax, DWORD PTR $T14[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 311  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	DWORD PTR $T14[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\unordered_set

; 90   : 		: _Mybase(key_compare(), allocator_type())

	push	eax
	mov	ecx, OFFSET ?last_state_was_config@?1??draw_base@SK_Widget@@QAEXXZ@4V?$unordered_set@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@V?$allocator@PAVSK_Widget@@@3@@std@@A
	call	??0?$_Hash@V?$_Uset_traits@PAVSK_Widget@@V?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@std@@V?$allocator@PAVSK_Widget@@@3@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@PAVSK_Widget@@U?$hash@PAVSK_Widget@@@std@@U?$equal_to@PAVSK_Widget@@@3@@1@ABV?$allocator@PAVSK_Widget@@@1@@Z ; std::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >::_Hash<std::_Uset_traits<SK_Widget *,std::_Uhash_compare<SK_Widget *,std::hash<SK_Widget *>,std::equal_to<SK_Widget *> >,std::allocator<SK_Widget *>,0> >
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 339  :   static  std::unordered_set <SK_Widget *> last_state_was_config;

	push	OFFSET ??__Flast_state_was_config@?1??draw_base@SK_Widget@@QAEXXZ@YAXXZ ; `SK_Widget::draw_base'::`2'::`dynamic atexit destructor for 'last_state_was_config''
	call	_atexit
	push	OFFSET ?$TSS1@?1??draw_base@SK_Widget@@QAEXXZ@4HA
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	__Init_thread_footer
	add	esp, 8
$LN249@draw_base:

; 340  : 
; 341  :   // Modal State:  Config
; 342  :   if (state__ == 1)

	cmp	DWORD PTR [esi+236], 1
	jne	$LN11@draw_base

; 347  :     ImGui::SetNextWindowSize (ImVec2 (std::max (size.x, 420.0f), std::max (size.y, 190.0f)));

	movss	xmm0, DWORD PTR __real@433e0000
	lea	eax, DWORD PTR [esi+212]
	movss	xmm1, DWORD PTR __real@43d20000
	lea	ecx, DWORD PTR [esi+208]
	or	edi, 66					; 00000042H
	mov	DWORD PTR $T13[ebp], 1137836032		; 43d20000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [eax]
	lea	edx, DWORD PTR $T16[ebp]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 347  :     ImGui::SetNextWindowSize (ImVec2 (std::max (size.x, 420.0f), std::max (size.y, 190.0f)));

	mov	DWORD PTR $T16[ebp], 1128136704		; 433e0000H
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	cmovbe	edx, eax
	lea	eax, DWORD PTR $T13[ebp]
	comiss	xmm1, DWORD PTR [ecx]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 347  :     ImGui::SetNextWindowSize (ImVec2 (std::max (size.x, 420.0f), std::max (size.y, 190.0f)));

	movss	xmm1, DWORD PTR [edx]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T9[ebp+4], xmm1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	cmovbe	eax, ecx
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 347  :     ImGui::SetNextWindowSize (ImVec2 (std::max (size.x, 420.0f), std::max (size.y, 190.0f)));

	movss	xmm0, DWORD PTR [eax]
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T9[ebp], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 347  :     ImGui::SetNextWindowSize (ImVec2 (std::max (size.x, 420.0f), std::max (size.y, 190.0f)));

	call	?SetNextWindowSize@ImGui@@YAXABUImVec2@@H@Z ; ImGui::SetNextWindowSize
	add	esp, 8
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 1466 : static inline bool SK_ImGui_Active (void) { return SK_ImGui_Visible || SK_ReShade_Visible; };

	cmp	BYTE PTR ?SK_ImGui_Visible@@3_NA, 0	; SK_ImGui_Visible
	jne	$LN15@draw_base
	cmp	BYTE PTR ?SK_ReShade_Visible@@3_NA, 0	; SK_ReShade_Visible
	jne	$LN15@draw_base
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 350  :       nav_usable = true;

	mov	BYTE PTR ?nav_usable@@3_NA, 1		; nav_usable

; 351  :   }
; 352  : 
; 353  :   else

	jmp	$LN15@draw_base
$LN11@draw_base:
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 1466 : static inline bool SK_ImGui_Active (void) { return SK_ImGui_Visible || SK_ReShade_Visible; };

	cmp	BYTE PTR ?SK_ImGui_Visible@@3_NA, 0	; SK_ImGui_Visible
	jne	SHORT $LN14@draw_base
	movzx	eax, BYTE PTR ?nav_usable@@3_NA		; nav_usable
	xor	ecx, ecx
	cmp	BYTE PTR ?SK_ReShade_Visible@@3_NA, cl	; SK_ReShade_Visible
	cmove	eax, ecx
	mov	BYTE PTR ?nav_usable@@3_NA, al		; nav_usable
$LN14@draw_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 358  :     if ((! autofit) && (! resizable))

	cmp	BYTE PTR [esi+187], 0
	jne	$LN15@draw_base
	cmp	BYTE PTR [esi+189], 0
	jne	SHORT $LN15@draw_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	movss	xmm0, DWORD PTR [esi+196]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 360  :       ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	eax, DWORD PTR [esi+196]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [esi+212]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 360  :       ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	ecx, DWORD PTR [esi+212]
	lea	edx, DWORD PTR [esi+204]
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	movss	xmm0, DWORD PTR [edx]

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	cmova	ecx, eax
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 360  :       ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	eax, DWORD PTR [esi+192]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [ecx]

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	movss	xmm0, DWORD PTR [eax]

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	cmova	edx, ecx
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 360  :       ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	ecx, DWORD PTR [esi+208]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [ecx]

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	movss	xmm0, DWORD PTR [esi+200]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 360  :       ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	movss	xmm1, DWORD PTR [edx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3743 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	cmova	ecx, eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T8[ebp+4], xmm1
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 360  :       ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	lea	eax, DWORD PTR [esi+200]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\algorithm

; 3779 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	comiss	xmm0, DWORD PTR [ecx]
	cmova	eax, ecx
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 360  :       ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	movss	xmm0, DWORD PTR [eax]
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T8[ebp], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 360  :       ImGui::SetNextWindowSize (ImVec2 ( std::min ( max_size.x, std::max ( size.x, min_size.x ) ),

	call	?SetNextWindowSize@ImGui@@YAXABUImVec2@@H@Z ; ImGui::SetNextWindowSize
	add	esp, 8
$LN15@draw_base:

; 361  :                                          std::min ( max_size.y, std::max ( size.y, min_size.y ) ) ) );
; 362  :     }
; 363  :   }
; 364  : 
; 365  : 
; 366  :   bool n = static_cast <int> (docking) & static_cast <int> (DockAnchor::North),

	mov	al, BYTE PTR [esi+224]

; 367  :        s = static_cast <int> (docking) & static_cast <int> (DockAnchor::South),

	mov	ecx, DWORD PTR [esi+224]
	and	al, 1
	mov	BYTE PTR _n$[ebp], al
	mov	eax, ecx
	shr	eax, 1
	and	al, 1
	mov	BYTE PTR _s$[ebp], al

; 368  :        e = static_cast <int> (docking) & static_cast <int> (DockAnchor::East),

	mov	eax, ecx
	shr	eax, 4
	and	al, 1

; 369  :        w = static_cast <int> (docking) & static_cast <int> (DockAnchor::West);

	shr	ecx, 5
	mov	BYTE PTR _e$[ebp], al
	and	cl, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+176], 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 343  : 		return (_Myval2);

	lea	eax, DWORD PTR [esi+156]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 369  :        w = static_cast <int> (docking) & static_cast <int> (DockAnchor::West);

	mov	BYTE PTR _w$[ebp], cl
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN180@draw_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN180@draw_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 371  :   ImGui::Begin           ( SK_FormatString ("###Widget_%s", name.c_str ()).c_str (),

	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	OFFSET $SG147870
	push	eax
	call	?SK_FormatString@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBDZZ ; SK_FormatString
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 371  :   ImGui::Begin           ( SK_FormatString ("###Widget_%s", name.c_str ()).c_str (),

	mov	DWORD PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN199@draw_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN199@draw_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 371  :   ImGui::Begin           ( SK_FormatString ("###Widget_%s", name.c_str ()).c_str (),

	push	edi
	push	0
	push	eax
	call	?Begin@ImGui@@YA_NPBDPA_NH@Z		; ImGui::Begin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 371  :   ImGui::Begin           ( SK_FormatString ("###Widget_%s", name.c_str ()).c_str (),

	add	esp, 12					; 0000000cH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN209@draw_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN209@draw_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 375  :   ImGui::SetWindowFontScale (SK_ImGui_Widgets.scale);

	movss	xmm0, DWORD PTR ?SK_ImGui_Widgets@@3USK_ImGui_WidgetRegistry@@A+36
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SetWindowFontScale@ImGui@@YAXM@Z	; ImGui::SetWindowFontScale
	add	esp, 4

; 376  : 
; 377  :   static SK_Widget* focus_widget = nullptr;
; 378  : 
; 379  :   bool focus_change = false;

	xor	bl, bl

; 380  : 
; 381  :   if (ImGui::IsWindowFocused () && focus_widget != this)

	call	?IsWindowFocused@ImGui@@YA_NXZ		; ImGui::IsWindowFocused
	test	al, al
	je	SHORT $LN16@draw_base
	cmp	DWORD PTR ?focus_widget@?1??draw_base@SK_Widget@@QAEXXZ@4PAV2@A, esi
	je	SHORT $LN16@draw_base

; 382  :   {
; 383  :     focus_widget = this;

	mov	DWORD PTR ?focus_widget@?1??draw_base@SK_Widget@@QAEXXZ@4PAV2@A, esi

; 384  :     focus_change = true;

	mov	bl, 1
$LN16@draw_base:

; 385  :   }
; 386  : 
; 387  :   ImGui::PushItemWidth (0.5f * ImGui::GetWindowWidth ());

	call	?GetWindowWidth@ImGui@@YAMXZ		; ImGui::GetWindowWidth
	fmul	DWORD PTR __real@3f000000
	push	ecx
	fstp	DWORD PTR [esp]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth
	add	esp, 4

; 388  : 
; 389  :   // Modal State:  Normal drawing
; 390  :   if (state__ == 0)
; 391  :   {
; 392  :     draw ();

	mov	ecx, esi
	cmp	DWORD PTR [esi+236], 0
	jne	SHORT $LN17@draw_base
	mov	eax, DWORD PTR [esi]
	call	DWORD PTR [eax+4]

; 393  :   }
; 394  : 
; 395  :   // Modal State:  Config
; 396  :   else

	jmp	SHORT $LN18@draw_base
$LN17@draw_base:

; 397  :   {
; 398  :     config_base ();

	call	?config_base@SK_Widget@@QAEXXZ		; SK_Widget::config_base
$LN18@draw_base:

; 399  :   }
; 400  : 
; 401  :   ImGui::PopItemWidth ();

	call	?PopItemWidth@ImGui@@YAXXZ		; ImGui::PopItemWidth

; 402  : 
; 403  :   bool right_clicked =
; 404  :     SK_ImGui_IsWindowRightClicked ();

	call	?GetIO@ImGui@@YAAAUImGuiIO@@XZ		; ImGui::GetIO
	push	eax
	call	?SK_ImGui_IsWindowRightClicked@@YA_NAAUImGuiIO@@@Z ; SK_ImGui_IsWindowRightClicked
	mov	bh, al

; 405  : 
; 406  :   pos  = ImGui::GetWindowPos  ();

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?GetWindowPos@ImGui@@YA?AUImVec2@@XZ	; ImGui::GetWindowPos
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+216], ecx
	mov	ecx, DWORD PTR [eax+4]

; 407  :   size = ImGui::GetWindowSize ();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	DWORD PTR [esi+220], ecx
	call	?GetWindowSize@ImGui@@YA?AUImVec2@@XZ	; ImGui::GetWindowSize

; 408  : 
; 409  :   SK_Widget_ProcessDocking (this, n, s, e, w);

	push	DWORD PTR _w$[ebp]
	push	DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR _s$[ebp]
	mov	DWORD PTR [esi+208], ecx
	push	DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [eax+4]
	push	esi
	mov	DWORD PTR [esi+212], eax
	call	?SK_Widget_ProcessDocking@@YAXPAVSK_Widget@@_N111@Z ; SK_Widget_ProcessDocking
	add	esp, 32					; 00000020H

; 410  : 
; 411  :   if (right_clicked || focus_change)

	test	bh, bh
	jne	SHORT $LN20@draw_base
	test	bl, bl
	je	$LN23@draw_base
$LN20@draw_base:

; 418  :     if (SK_ControlPanel_Activated)

	cmp	BYTE PTR ?SK_ControlPanel_Activated@@3_NA, 0 ; SK_ControlPanel_Activated
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	xmm2, DWORD PTR [esi+216]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 414  :     ImVec2 max (pos.x + size.x, pos.y + size.y);

	movss	xmm0, DWORD PTR [esi+208]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	xmm1, DWORD PTR [esi+220]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 414  :     ImVec2 max (pos.x + size.x, pos.y + size.y);

	addss	xmm0, xmm2
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR _min$5[ebp], xmm2
	movss	DWORD PTR _min$5[ebp+4], xmm1
	movss	DWORD PTR _max$12[ebp], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 414  :     ImVec2 max (pos.x + size.x, pos.y + size.y);

	movss	xmm0, DWORD PTR [esi+212]
	addss	xmm0, xmm1
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR _max$12[ebp+4], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 418  :     if (SK_ControlPanel_Activated)

	je	SHORT $LN22@draw_base

; 419  :     {
; 420  :       if (! ImGui::IsMouseHoveringRect (min, max)/* && ImGui::IsWindowFocused ()*/)

	push	1
	lea	eax, DWORD PTR _max$12[ebp]
	push	eax
	lea	eax, DWORD PTR _min$5[ebp]
	push	eax
	call	?IsMouseHoveringRect@ImGui@@YA_NABUImVec2@@0_N@Z ; ImGui::IsMouseHoveringRect
	add	esp, 12					; 0000000cH
	test	al, al
	jne	SHORT $LN22@draw_base

; 421  :       {
; 422  :         ImGui::GetIO ().WantMoveMouse = true;

	call	?GetIO@ImGui@@YAAAUImGuiIO@@XZ		; ImGui::GetIO
	mov	BYTE PTR [eax+843], 1

; 424  :         ImGui::GetIO ().MousePos =

	movss	xmm0, DWORD PTR [esi+208]
	mulss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR [esi+216]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T7[ebp], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 424  :         ImGui::GetIO ().MousePos =

	movss	xmm0, DWORD PTR [esi+212]
	mulss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR [esi+220]
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	movss	DWORD PTR $T7[ebp+4], xmm0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 424  :         ImGui::GetIO ().MousePos =

	call	?GetIO@ImGui@@YAAAUImGuiIO@@XZ		; ImGui::GetIO
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR [eax+204], ecx
	mov	ecx, DWORD PTR $T7[ebp+4]
	mov	DWORD PTR [eax+208], ecx
$LN22@draw_base:

; 425  :           ImVec2 ( pos.x + size.x / 2.0f,
; 426  :                    pos.y + size.y / 2.0f );
; 427  :       }
; 428  :     }
; 429  : 
; 430  :     ImGui::SetWindowFocus ();

	call	?SetWindowFocus@ImGui@@YAXXZ		; ImGui::SetWindowFocus

; 431  : 
; 432  :     if (right_clicked)

	test	bh, bh
	je	SHORT $LN23@draw_base

; 433  :       state__ = 1;

	mov	DWORD PTR [esi+236], 1
$LN23@draw_base:

; 434  :   }
; 435  : 
; 436  :   ImGui::End         ();

	call	?End@ImGui@@YAXXZ			; ImGui::End

; 437  : 
; 438  :   ImGui::PopFont ();

	call	?PopFont@ImGui@@YAXXZ			; ImGui::PopFont

; 439  :   ImGui::GetFont ()->Scale = fScale;

	call	?GetFont@ImGui@@YAPAUImFont@@XZ		; ImGui::GetFont
	movss	xmm0, DWORD PTR _fScale$1$[ebp]
	pop	ebx
	movss	DWORD PTR [eax+4], xmm0
$LN1@draw_base:

; 440  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?draw_base@SK_Widget@@QAEXXZ$0:
	push	OFFSET ?$TSS0@?1??draw_base@SK_Widget@@QAEXXZ@4HA
	call	__Init_thread_abort
	pop	ecx
	ret	0
__unwindfunclet$?draw_base@SK_Widget@@QAEXXZ$1:
	push	OFFSET ?$TSS1@?1??draw_base@SK_Widget@@QAEXXZ@4HA
	call	__Init_thread_abort
	pop	ecx
	ret	0
__unwindfunclet$?draw_base@SK_Widget@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?draw_base@SK_Widget@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?draw_base@SK_Widget@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?draw_base@SK_Widget@@QAEXXZ ENDP			; SK_Widget::draw_base
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
$T2 = -108						; size = 24
$T3 = -84						; size = 24
$T4 = -84						; size = 24
$T5 = -84						; size = 24
$T6 = -84						; size = 24
$T7 = -84						; size = 24
$T8 = -84						; size = 24
$T9 = -84						; size = 24
$T10 = -84						; size = 24
$T11 = -84						; size = 24
$T12 = -84						; size = 24
$T13 = -84						; size = 24
$T14 = -60						; size = 24
$T15 = -36						; size = 24
$T16 = -36						; size = 24
$T17 = -36						; size = 24
$T18 = -36						; size = 24
$T19 = -36						; size = 24
$T20 = -36						; size = 24
$T21 = -36						; size = 24
$T22 = -36						; size = 24
$T23 = -36						; size = 24
$T24 = -36						; size = 24
$T25 = -36						; size = 24
__$EHRec$ = -12						; size = 12
?run_base@SK_Widget@@QAEXXZ PROC			; SK_Widget::run_base
; _this$ = ecx

; 37   : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?run_base@SK_Widget@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 96					; 00000060H
	push	edi
	mov	edi, ecx

; 38   :   if (! run_once__)

	cmp	BYTE PTR [edi+244], 0
	jne	$LN2@run_base
	push	ebx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 343  : 		return (_Myval2);

	lea	esi, DWORD PTR [edi+156]
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 40   :     run_once__ = true;

	mov	BYTE PTR [edi+244], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN41@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN42@run_base
$LN41@run_base:
	mov	eax, esi
$LN42@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 42   :     toggle_key_val =

	push	eax
	lea	eax, DWORD PTR $T13[ebp]
	push	OFFSET $SG142606
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 42   :     toggle_key_val =

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN79@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN80@run_base
$LN79@run_base:
	mov	eax, esi
$LN80@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 42   :     toggle_key_val =

	push	eax
	lea	eax, DWORD PTR $T25[ebp]
	push	OFFSET $SG142607
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 42   :     toggle_key_val =

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN60@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN60@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN98@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN98@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 42   :     toggle_key_val =

	push	OFFSET $SG142605
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+4]
	push	eax
	call	?LoadWidgetKeybind@@YAPAVParameterStringW@sk@@PAUSK_Keybind@@PAUiSK_INI@@PB_W22@Z ; LoadWidgetKeybind
	mov	DWORD PTR [edi+100], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T25[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN108@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T25[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN108@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T25[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T25[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T13[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T25[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 42   :     toggle_key_val =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN138@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T13[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN138@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN177@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN178@run_base
$LN177@run_base:
	mov	eax, esi
$LN178@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 48   :     param_visible =

	push	eax
	lea	eax, DWORD PTR $T12[ebp]
	push	OFFSET $SG142609
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 48   :     param_visible =

	mov	DWORD PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN215@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN216@run_base
$LN215@run_base:
	mov	eax, esi
$LN216@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 48   :     param_visible =

	push	eax
	lea	eax, DWORD PTR $T24[ebp]
	push	OFFSET $SG142610
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 48   :     param_visible =

	mov	BYTE PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN196@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN196@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN234@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN234@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 48   :     param_visible =

	push	OFFSET $SG142608
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+184]
	push	eax
	call	?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z ; LoadWidgetBool
	mov	DWORD PTR [edi+108], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T24[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN244@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T24[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN244@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T24[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T24[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T12[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T24[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 48   :     param_visible =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN274@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T12[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN274@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN313@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN314@run_base
$LN313@run_base:
	mov	eax, esi
$LN314@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 54   :     param_movable =

	push	eax
	lea	eax, DWORD PTR $T11[ebp]
	push	OFFSET $SG142612
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 54   :     param_movable =

	mov	DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN351@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN352@run_base
$LN351@run_base:
	mov	eax, esi
$LN352@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 54   :     param_movable =

	push	eax
	lea	eax, DWORD PTR $T23[ebp]
	push	OFFSET $SG142613
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 54   :     param_movable =

	mov	BYTE PTR __$EHRec$[ebp+8], 5
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN332@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN332@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN370@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN370@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 54   :     param_movable =

	push	OFFSET $SG142611
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+188]
	push	eax
	call	?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z ; LoadWidgetBool
	mov	DWORD PTR [edi+112], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T23[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN380@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T23[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN380@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T23[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T23[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T11[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T23[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 54   :     param_movable =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN410@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T11[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN410@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN449@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN450@run_base
$LN449@run_base:
	mov	eax, esi
$LN450@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 60   :     param_resizable =

	push	eax
	lea	eax, DWORD PTR $T10[ebp]
	push	OFFSET $SG142615
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 60   :     param_resizable =

	mov	DWORD PTR __$EHRec$[ebp+8], 6
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN487@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN488@run_base
$LN487@run_base:
	mov	eax, esi
$LN488@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 60   :     param_resizable =

	push	eax
	lea	eax, DWORD PTR $T22[ebp]
	push	OFFSET $SG142616
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 60   :     param_resizable =

	mov	BYTE PTR __$EHRec$[ebp+8], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN468@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN468@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN506@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN506@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 60   :     param_resizable =

	push	OFFSET $SG142614
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+189]
	push	eax
	call	?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z ; LoadWidgetBool
	mov	DWORD PTR [edi+120], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T22[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN516@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T22[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN516@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T22[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T22[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T10[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T22[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 60   :     param_resizable =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN546@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T10[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN546@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN585@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN586@run_base
$LN585@run_base:
	mov	eax, esi
$LN586@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 66   :     param_autofit =

	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	OFFSET $SG142618
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 66   :     param_autofit =

	mov	DWORD PTR __$EHRec$[ebp+8], 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN623@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN624@run_base
$LN623@run_base:
	mov	eax, esi
$LN624@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 66   :     param_autofit =

	push	eax
	lea	eax, DWORD PTR $T21[ebp]
	push	OFFSET $SG142619
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 66   :     param_autofit =

	mov	BYTE PTR __$EHRec$[ebp+8], 9
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN604@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN604@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN642@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN642@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 66   :     param_autofit =

	push	OFFSET $SG142617
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+187]
	push	eax
	call	?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z ; LoadWidgetBool
	mov	DWORD PTR [edi+116], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T21[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN652@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T21[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN652@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T21[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T21[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T9[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T21[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 66   :     param_autofit =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN682@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T9[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN682@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN721@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN722@run_base
$LN721@run_base:
	mov	eax, esi
$LN722@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 72   :     param_border =

	push	eax
	lea	eax, DWORD PTR $T8[ebp]
	push	OFFSET $SG142621
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 72   :     param_border =

	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN759@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN760@run_base
$LN759@run_base:
	mov	eax, esi
$LN760@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 72   :     param_border =

	push	eax
	lea	eax, DWORD PTR $T20[ebp]
	push	OFFSET $SG142622
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 72   :     param_border =

	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN740@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN740@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN778@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN778@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 72   :     param_border =

	push	OFFSET $SG142620
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+190]
	push	eax
	call	?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z ; LoadWidgetBool
	mov	DWORD PTR [edi+124], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T20[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN788@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T20[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN788@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T20[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T20[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T8[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T20[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 72   :     param_border =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN818@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T8[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN818@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN857@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN858@run_base
$LN857@run_base:
	mov	eax, esi
$LN858@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 78   :     param_clickthrough =

	push	eax
	lea	eax, DWORD PTR $T7[ebp]
	push	OFFSET $SG142624
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 78   :     param_clickthrough =

	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN895@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN896@run_base
$LN895@run_base:
	mov	eax, esi
$LN896@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 78   :     param_clickthrough =

	push	eax
	lea	eax, DWORD PTR $T19[ebp]
	push	OFFSET $SG142625
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 78   :     param_clickthrough =

	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN876@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN876@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN914@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN914@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 78   :     param_clickthrough =

	push	OFFSET $SG142623
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+191]
	push	eax
	call	?LoadWidgetBool@@YAPAVParameterBool@sk@@PA_NPAUiSK_INI@@PB_W22@Z ; LoadWidgetBool
	mov	DWORD PTR [edi+128], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T19[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN924@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T19[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN924@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T19[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T19[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T7[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T19[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 78   :     param_clickthrough =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN954@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T7[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN954@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN993@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN994@run_base
$LN993@run_base:
	mov	eax, esi
$LN994@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 84   :     param_docking =

	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	OFFSET $SG142627
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 84   :     param_docking =

	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1031@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN1032@run_base
$LN1031@run_base:
	mov	eax, esi
$LN1032@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 84   :     param_docking =

	push	eax
	lea	eax, DWORD PTR $T18[ebp]
	push	OFFSET $SG142628
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 84   :     param_docking =

	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1012@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN1012@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1050@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN1050@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 84   :     param_docking =

	push	OFFSET $SG142626
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+224]
	push	eax
	call	?LoadWidgetDocking@@YAPAVParameterInt@sk@@PAW4DockAnchor@SK_Widget@@PAUiSK_INI@@PB_W22@Z ; LoadWidgetDocking
	mov	DWORD PTR [edi+148], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T18[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1060@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T18[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1060@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T18[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T18[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T6[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T18[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 84   :     param_docking =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1090@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T6[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1090@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1129@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN1130@run_base
$LN1129@run_base:
	mov	eax, esi
$LN1130@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 90   :     param_minsize =

	push	eax
	lea	eax, DWORD PTR $T5[ebp]
	push	OFFSET $SG142630
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 90   :     param_minsize =

	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1167@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN1168@run_base
$LN1167@run_base:
	mov	eax, esi
$LN1168@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 90   :     param_minsize =

	push	eax
	lea	eax, DWORD PTR $T17[ebp]
	push	OFFSET $SG142631
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 90   :     param_minsize =

	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1148@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN1148@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1186@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN1186@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 90   :     param_minsize =

	push	OFFSET $SG142629
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+192]
	push	eax
	call	?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z ; LoadWidgetVec2
	mov	DWORD PTR [edi+132], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T17[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1196@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T17[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1196@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T17[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T17[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T5[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T17[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 90   :     param_minsize =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1226@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T5[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1226@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1265@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN1266@run_base
$LN1265@run_base:
	mov	eax, esi
$LN1266@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 96   :     param_maxsize =

	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	OFFSET $SG142633
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 96   :     param_maxsize =

	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1303@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN1304@run_base
$LN1303@run_base:
	mov	eax, esi
$LN1304@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 96   :     param_maxsize =

	push	eax
	lea	eax, DWORD PTR $T16[ebp]
	push	OFFSET $SG142634
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 96   :     param_maxsize =

	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1284@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN1284@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1322@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN1322@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 96   :     param_maxsize =

	push	OFFSET $SG142632
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+200]
	push	eax
	call	?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z ; LoadWidgetVec2
	mov	DWORD PTR [edi+136], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T16[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1332@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T16[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1332@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T16[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T16[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T4[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T16[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 96   :     param_maxsize =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1362@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T4[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1362@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1401@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN1402@run_base
$LN1401@run_base:
	mov	eax, esi
$LN1402@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 102  :     param_size =

	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	OFFSET $SG142636
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 102  :     param_size =

	mov	DWORD PTR __$EHRec$[ebp+8], 20		; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1439@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN1440@run_base
$LN1439@run_base:
	mov	eax, esi
$LN1440@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 102  :     param_size =

	push	eax
	lea	eax, DWORD PTR $T15[ebp]
	push	OFFSET $SG142637
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 102  :     param_size =

	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1420@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN1420@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1458@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN1458@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 102  :     param_size =

	push	OFFSET $SG142635
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+208]
	push	eax
	call	?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z ; LoadWidgetVec2
	mov	DWORD PTR [edi+140], eax
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T15[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1468@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T15[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1468@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T15[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T15[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T3[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T15[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 102  :     param_size =

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1498@run_base

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T3[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1498@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1537@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN1538@run_base
$LN1537@run_base:
	mov	eax, esi
$LN1538@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 108  :     param_pos =

	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	OFFSET $SG142639
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 108  :     param_pos =

	mov	DWORD PTR __$EHRec$[ebp+8], 22		; 00000016H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1575@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	esi, DWORD PTR [esi]
$LN1575@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 108  :     param_pos =

	push	esi
	lea	eax, DWORD PTR $T14[ebp]
	push	OFFSET $SG142640
	push	eax
	call	?SK_FormatStringW@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QB_WZZ ; SK_FormatStringW
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 108  :     param_pos =

	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1556@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN1556@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1594@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN1594@run_base:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 108  :     param_pos =

	push	OFFSET $SG142638
	push	ebx
	push	eax
	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	lea	eax, DWORD PTR [edi+216]
	push	eax
	call	?LoadWidgetVec2@@YAPAVParameterVec2f@sk@@PAUImVec2@@PAUiSK_INI@@PB_W22@Z ; LoadWidgetVec2
	add	esp, 20					; 00000014H
	mov	DWORD PTR [edi+144], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T14[ebp+20]
	pop	esi
	pop	ebx
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1604@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T14[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1604@run_base:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T14[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T14[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T14[ebp+20], 7

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1@run_base
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	edi
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 118  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@run_base:

; 109  :       LoadWidgetVec2 ( &pos, osd_ini,
; 110  :                          SK_FormatStringW   (L"Widget Position (%hs)", name.c_str ()).c_str (),
; 111  :                            SK_FormatStringW (L"Widget.%hs",            name.c_str ()).c_str (),
; 112  :                              L"Position" );
; 113  : 
; 114  :     return;
; 115  :   }
; 116  : 
; 117  :   run ();

	mov	eax, DWORD PTR [edi]
	call	DWORD PTR [eax]
$LN1@run_base:

; 118  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T25[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$4:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$5:
	lea	ecx, DWORD PTR $T23[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$6:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$7:
	lea	ecx, DWORD PTR $T22[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$8:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$9:
	lea	ecx, DWORD PTR $T21[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$10:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$11:
	lea	ecx, DWORD PTR $T20[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$12:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$13:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$14:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$15:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$16:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$17:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$18:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$19:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$20:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$21:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$22:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_base@SK_Widget@@QAEXXZ$23:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?run_base@SK_Widget@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?run_base@SK_Widget@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_base@SK_Widget@@QAEXXZ ENDP			; SK_Widget::run_base
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
?SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ PROC	; SK_ImGui_WidgetRegistry::SaveConfig
; _this$ = ecx

; 696  :   static std::array <SK_Widget *, 5> widgets { frame_pacing, volume_control, gpu_monitor, cpu_monitor, d3d11_pipeline };

	mov	eax, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR __tls_index
	push	ebx
	push	esi
	push	edi
	mov	edx, DWORD PTR [eax+edx*4]
	mov	esi, ecx
	mov	eax, DWORD PTR ?$TSS0@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jg	SHORT $LN44@SaveConfig
$LN2@SaveConfig:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1567 : 		: _Ptr(_Parg + _Off)

	mov	esi, OFFSET ?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A
	xor	edi, edi
	mov	eax, OFFSET ?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A+20
	cmp	eax, esi
	sbb	ebx, ebx
	and	ebx, -5					; fffffffbH
	add	ebx, 5
$LL5@SaveConfig:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 698  :   for (auto widget : widgets)

	mov	ecx, DWORD PTR [esi]

; 699  :   {
; 700  :     if (widget)

	test	ecx, ecx
	je	SHORT $LN3@SaveConfig

; 701  :     {
; 702  :       widget->save (osd_ini);

	push	DWORD PTR ?osd_ini@@3PAUiSK_INI@@A	; osd_ini
	call	?save@SK_Widget@@IAEXPAUiSK_INI@@@Z	; SK_Widget::save
$LN3@SaveConfig:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1596 : 		++_Ptr;

	inc	edi
	add	esi, 4
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 698  :   for (auto widget : widgets)

	cmp	edi, ebx
	jne	SHORT $LL5@SaveConfig

; 703  :     }
; 704  :   }
; 705  : 
; 706  :   return TRUE;

	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx

; 707  : }

	ret	0
$LN44@SaveConfig:

; 696  :   static std::array <SK_Widget *, 5> widgets { frame_pacing, volume_control, gpu_monitor, cpu_monitor, d3d11_pipeline };

	push	OFFSET ?$TSS0@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4HA, -1
	jne	SHORT $LN2@SaveConfig
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR ?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A, eax
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR ?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A+4, eax
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR ?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A+8, eax
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR ?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A+12, eax
	mov	eax, DWORD PTR [esi+20]
	push	OFFSET ?$TSS0@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4HA
	mov	DWORD PTR ?widgets@?1??SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ@4V?$array@PAVSK_Widget@@$04@std@@A+16, eax
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN2@SaveConfig
?SaveConfig@SK_ImGui_WidgetRegistry@@QAEHXZ ENDP	; SK_ImGui_WidgetRegistry::SaveConfig
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp
_TEXT	SEGMENT
_Control$ = 8						; size = 4
_Shift$ = 12						; size = 4
_Alt$ = 16						; size = 4
_vkCode$ = 20						; size = 1
?DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z PROC ; SK_ImGui_WidgetRegistry::DispatchKeybinds
; _this$ = ecx

; 674  : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _Shift$[ebp]
	push	esi
	mov	esi, DWORD PTR _Alt$[ebp]
	neg	esi
	push	edi
	sbb	esi, esi
	mov	edi, ecx

; 675  :   auto uiMaskedKeyCode =
; 676  :     SK_MakeKeyMask (vkCode, Control, Shift, Alt);
; 677  : 
; 678  :   static std::array <SK_Widget *, 5> widgets { frame_pacing, volume_control, gpu_monitor, cpu_monitor, d3d11_pipeline };

	mov	ecx, DWORD PTR __tls_index
	and	esi, 2048				; 00000800H
	neg	eax
	sbb	eax, eax
	and	eax, 1024				; 00000400H
	or	esi, eax
	mov	eax, DWORD PTR _Control$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 512				; 00000200H
	or	esi, eax
	movzx	eax, BYTE PTR _vkCode$[ebp]
	or	esi, eax
	mov	eax, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jg	SHORT $LN58@DispatchKe
$LN2@DispatchKe:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1567 : 		: _Ptr(_Parg + _Off)

	mov	eax, OFFSET ?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A
	npad	7
$LL5@DispatchKe:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 682  :     if (widget && uiMaskedKeyCode == widget->getToggleKey ().masked_code)

	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@DispatchKe
	cmp	esi, DWORD PTR [ecx+48]
	je	SHORT $LN53@DispatchKe
$LN3@DispatchKe:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1596 : 		++_Ptr;

	add	eax, 4

; 1655 : 		return (_Ptr == _Right._Ptr);

	cmp	eax, OFFSET ?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A+20
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 680  :   for (auto&& widget : widgets)

	jne	SHORT $LL5@DispatchKe

; 687  :     }
; 688  :   }
; 689  : 
; 690  :   return FALSE;

	pop	edi
	xor	eax, eax
	pop	esi

; 691  : }

	pop	ebp
	ret	16					; 00000010H
$LN53@DispatchKe:
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 127  :         bool         isVisible       (void) const { return    visible &&

	cmp	BYTE PTR [ecx+184], 0
	je	SHORT $LN44@DispatchKe
	cmp	BYTE PTR ?SK_ImGui_Widgets@@3USK_ImGui_WidgetRegistry@@A+32, 0
	jne	SHORT $LN44@DispatchKe
	mov	eax, 1
	jmp	SHORT $LN45@DispatchKe
$LN44@DispatchKe:
	xor	eax, eax
$LN45@DispatchKe:
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 684  :       widget->setVisible (! widget->isVisible ());

	test	al, al
	sete	dl
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h

; 102  :   SK_Widget& setVisible      (bool        bVisible)      { visible       = bVisible;

	mov	BYTE PTR [ecx+184], dl

; 103  :                                                            if (visible)

	test	dl, dl
	je	SHORT $LN47@DispatchKe

; 111  :   SK_Widget& setActive       (bool        bActive)       { active        = bActive;       return *this; }

	mov	BYTE PTR [ecx+185], dl
$LN47@DispatchKe:

; 106  :                                                            if (param_visible != nullptr)

	mov	ecx, DWORD PTR [ecx+108]
	test	ecx, ecx
	je	SHORT $LN48@DispatchKe

; 107  :                                                            {
; 108  :                                                              param_visible->store (visible);

	mov	eax, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR [eax+16]
$LN48@DispatchKe:
	pop	edi
; File c:\users\andon\source\repos\specialk\src\widgets\widget.cpp

; 686  :       return TRUE;

	mov	eax, 1
	pop	esi

; 691  : }

	pop	ebp
	ret	16					; 00000010H
$LN58@DispatchKe:

; 675  :   auto uiMaskedKeyCode =
; 676  :     SK_MakeKeyMask (vkCode, Control, Shift, Alt);
; 677  : 
; 678  :   static std::array <SK_Widget *, 5> widgets { frame_pacing, volume_control, gpu_monitor, cpu_monitor, d3d11_pipeline };

	push	OFFSET ?$TSS0@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4HA, -1
	jne	$LN2@DispatchKe
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR ?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A, eax
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR ?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A+4, eax
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR ?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A+8, eax
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR ?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A+12, eax
	mov	eax, DWORD PTR [edi+20]
	push	OFFSET ?$TSS0@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4HA
	mov	DWORD PTR ?widgets@?1??DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z@4V?$array@PAVSK_Widget@@$04@std@@A+16, eax
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN2@DispatchKe
?DispatchKeybinds@SK_ImGui_WidgetRegistry@@QAEHHHHE@Z ENDP ; SK_ImGui_WidgetRegistry::DispatchKeybinds
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??1ParameterFactory@sk@@QAE@XZ
_TEXT	SEGMENT
??1ParameterFactory@sk@@QAE@XZ PROC			; sk::ParameterFactory::~ParameterFactory, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN7@ParameterF

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN7@ParameterF:
	pop	esi
	ret	0
??1ParameterFactory@sk@@QAE@XZ ENDP			; sk::ParameterFactory::~ParameterFactory
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0ParameterFactory@sk@@QAE@XZ
_TEXT	SEGMENT
??0ParameterFactory@sk@@QAE@XZ PROC			; sk::ParameterFactory::ParameterFactory, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0
	ret	0
??0ParameterFactory@sk@@QAE@XZ ENDP			; sk::ParameterFactory::ParameterFactory
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Tidy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXXZ PROC ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Tidy, COMDAT
; _this$ = ecx

; 1946 : 		{	// free all storage

	npad	2
	push	esi
	mov	esi, ecx

; 1947 : 		this->_Orphan_all();
; 1948 : 
; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Tidy

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:
	pop	esi

; 1957 : 			}
; 1958 : 		}

	ret	0
?_Tidy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXXZ ENDP ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z PROC ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Destroy, COMDAT
; _this$ = ecx

; 1885 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1886 : 		}

	ret	8
?_Destroy@?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@AAEXPAPAViParameter@sk@@0@Z ENDP ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??1?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ PROC ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::~vector<sk::iParameter *,std::allocator<sk::iParameter *> >, COMDAT
; _this$ = ecx

; 891  : 		{	// destroy the object

	npad	2
	push	esi
	mov	esi, ecx

; 1949 : 		if (this->_Myfirst() != pointer())

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN4@vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1952 : 			this->_Getal().deallocate(this->_Myfirst(), this->_Myend() - this->_Myfirst());

	sar	eax, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	ecx
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1954 : 			this->_Myfirst() = pointer();

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector

; 1955 : 			this->_Mylast() = pointer();

	mov	DWORD PTR [esi+4], 0

; 1956 : 			this->_Myend() = pointer();

	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi

; 892  : 		_Tidy();
; 893  : 		}

	ret	0
??1?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ENDP ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::~vector<sk::iParameter *,std::allocator<sk::iParameter *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ PROC ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::vector<sk::iParameter *,std::allocator<sk::iParameter *> >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 723  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 723  : 		}

	ret	0
??0?$vector@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ENDP ; std::vector<sk::iParameter *,std::allocator<sk::iParameter *> >::vector<sk::iParameter *,std::allocator<sk::iParameter *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<sk::iParameter *> >,std::_Vector_val<std::_Simple_types<sk::iParameter *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<sk::iParameter *> >::_Vector_val<std::_Simple_types<sk::iParameter *> >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 480  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<sk::iParameter *> >::_Vector_val<std::_Simple_types<sk::iParameter *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myend, COMDAT
; _this$ = ecx

; 671  : 		return (_Get_data()._Myend);

	lea	eax, DWORD PTR [ecx+8]

; 672  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Mylast, COMDAT
; _this$ = ecx

; 661  : 		return (_Get_data()._Mylast);

	lea	eax, DWORD PTR [ecx+4]

; 662  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myfirst, COMDAT
; _this$ = ecx

; 651  : 		return (_Get_data()._Myfirst);

	mov	eax, ecx

; 652  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAPAPAViParameter@sk@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Get_data, COMDAT
; _this$ = ecx

; 641  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 642  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAViParameter@sk@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Getal, COMDAT
; _this$ = ecx

; 631  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 632  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 621  : 		_Get_data()._Orphan_all();
; 622  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >, COMDAT
; _this$ = ecx

; 476  : 		: _Myfirst(),

	mov	DWORD PTR [ecx], 0

; 509  : 		}

	mov	eax, ecx

; 477  : 		_Mylast(),

	mov	DWORD PTR [ecx+4], 0

; 478  : 		_Myend()

	mov	DWORD PTR [ecx+8], 0

; 509  : 		}

	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@PAViParameter@sk@@V?$allocator@PAViParameter@sk@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >::_Vector_alloc<std::_Vec_base_types<sk::iParameter *,std::allocator<sk::iParameter *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAEXPAPAViParameter@sk@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAEXPAPAViParameter@sk@@I@Z PROC ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAEXPAPAViParameter@sk@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::_Wrap_alloc<std::allocator<sk::iParameter *> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAViParameter@sk@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<sk::iParameter *> >::_Wrap_alloc<std::allocator<sk::iParameter *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAViParameter@sk@@@std@@QAEXPAPAViParameter@sk@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAViParameter@sk@@@std@@QAEXPAPAViParameter@sk@@I@Z PROC ; std::allocator<sk::iParameter *>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@PAViParameter@sk@@@std@@QAEXPAPAViParameter@sk@@I@Z ENDP ; std::allocator<sk::iParameter *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@PAViParameter@sk@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAViParameter@sk@@@std@@QAE@XZ PROC	; std::allocator<sk::iParameter *>::allocator<sk::iParameter *>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@PAViParameter@sk@@@std@@QAE@XZ ENDP	; std::allocator<sk::iParameter *>::allocator<sk::iParameter *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h
;	COMDAT ?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
_section$ = 12						; size = 24
_key$ = 36						; size = 24
?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z PROC ; sk::iParameter::register_to_ini, COMDAT
; _this$ = ecx

; 67   :   {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, ecx

; 68   :     ini         = file;

	mov	eax, DWORD PTR _file$[ebp]

; 69   :     ini_section = section;

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2223 : 		if (this != _STD addressof(_Right))

	lea	eax, DWORD PTR _section$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h

; 67   :   {

	mov	DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2223 : 		if (this != _STD addressof(_Right))

	cmp	ecx, eax
	je	SHORT $LN6@register_t

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN6@register_t:
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h

; 70   :     ini_key     = key;

	lea	ecx, DWORD PTR [esi+36]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2223 : 		if (this != _STD addressof(_Right))

	lea	eax, DWORD PTR _key$[ebp]
	cmp	ecx, eax
	je	SHORT $LN48@register_t

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN48@register_t:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _section$[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN93@register_t
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR _section$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN93@register_t:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _section$[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR _section$[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _key$[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _section$[ebp+20], 7

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN123@register_t
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR _key$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN123@register_t:
; File c:\users\andon\source\repos\specialk\include\specialk\parameter.h

; 71   :   }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	52					; 00000034H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z$0:
	lea	ecx, DWORD PTR _key$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z$1:
	lea	ecx, DWORD PTR _section$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z:
	mov	eax, OFFSET __ehfuncinfo$?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?register_to_ini@iParameter@sk@@QAEXPAUiSK_INI@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1@Z ENDP ; sk::iParameter::register_to_ini
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT

; 3646 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset, COMDAT
; _this$ = ecx

; 3629 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Off$[ebp]
	jb	SHORT $LN14@Check_offs

; 3633 : 			}
; 3634 : 		}

	pop	ebp
	ret	4
$LN14@Check_offs:

; 3631 : 			{
; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN16@Check_offs:
$LN13@Check_offs:
	int	3
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 3625 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3602 : 		}

	ret	0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx

; 3588 : 		{	// test if _Ptr points inside string

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@Inside
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN14@Inside
$LN13@Inside:
	mov	edx, ecx
$LN14@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	cmp	edx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	eax, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	al, 1

; 3592 : 		}

	pop	ebp
	ret	4
$LN3@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	xor	al, al

; 3592 : 		}

	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx

; 3572 : 		{	// ensure buffer is big enough

	npad	2
	push	ebp
	mov	ebp, esp

; 3573 : 		if (_Newsize == 0)

	mov	eax, DWORD PTR __Newsize$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Grow

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN16@Grow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN16@Grow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3576 : 			return (false);

	xor	al, al

; 3585 : 		}

	pop	ebp
	ret	4
$LN2@Grow:

; 3577 : 			}
; 3578 : 
; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [ecx+20], eax
	jae	SHORT $LN3@Grow

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	eax
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN3@Grow:

; 3582 : 			}
; 3583 : 
; 3584 : 		return (true);	// return true only if more work to do

	mov	al, 1

; 3585 : 		}

	pop	ebp
	ret	4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx

; 3566 : 		{	// set new length and null terminator

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3567 : 		auto& _My_data = this->_Get_data();
; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Eos
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
$LN11@Eos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx+edx*2], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Oldres$ = -28						; size = 4
_this$ = -24						; size = 4
__Ptr$1$ = -20						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newres$ = 8						; size = 4
__Newsize$ = 8						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx

; 3514 : 		{	// reallocate to new buffer of at least _Newsize, copying existing elements there

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 3515 : 		const auto _Max = max_size();
; 3516 : 		if (_Newsize > _Max)

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	eax, 2147483646				; 7ffffffeH
	jbe	SHORT $LN2@Copy

; 3517 : 			{	// too long
; 3518 : 			_Xlen();

	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN102@Copy:
$LN2@Copy:

; 3519 : 			}
; 3520 : 
; 3521 : 		auto& _My_data = this->_Get_data();
; 3522 : 		const size_type _Oldres = _My_data._Myres;

	mov	ebx, DWORD PTR [esi+20]

; 3523 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	edi, eax
	or	edi, 7
	mov	DWORD PTR __Oldres$[ebp], ebx

; 3524 : 		if (_Max < _Newres)

	cmp	edi, 2147483646				; 7ffffffeH
	jbe	SHORT $LN3@Copy

; 3525 : 			{
; 3526 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	edi, eax
	jmp	SHORT $LN8@Copy
$LN3@Copy:

; 3527 : 			}
; 3528 : 		else if (_Oldres / 2 <= _Newres / 3)

	mov	eax, -1431655765			; aaaaaaabH
	mov	ecx, ebx
	mul	edi
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN8@Copy

; 3529 : 			;
; 3530 : 		else if (_Oldres <= _Max - _Oldres / 2)

	mov	eax, 2147483646				; 7ffffffeH

; 3531 : 			{
; 3532 : 			_Newres = _Oldres + _Oldres / 2;	// grow exponentially if possible

	lea	edi, DWORD PTR [ecx+ebx]
	sub	eax, ecx
	cmp	ebx, eax
	jbe	SHORT $LN8@Copy

; 3533 : 			}
; 3534 : 		else
; 3535 : 			{
; 3536 : 			_Newres = _Max;	// settle for max_size()

	mov	edi, 2147483646				; 7ffffffeH
$LN8@Copy:

; 3537 : 			}
; 3538 : 
; 3539 : 		auto& _Al = this->_Getal();
; 3540 : 		pointer _Ptr;
; 3541 : 		_TRY_BEGIN
; 3542 : 			_Ptr = _Al.allocate(_Newres + 1);

	lea	eax, DWORD PTR [edi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	mov	ecx, esi
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
	jmp	SHORT $LN100@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0:

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	mov	ecx, DWORD PTR _this$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	DWORD PTR __Newres$[ebp], eax

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	mov	DWORD PTR __Ptr$[ebp], eax

; 3546 : 		_CATCH_END

	mov	eax, $LN97@Copy
	ret	0
$LN97@Copy:
	mov	esi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR __Oldres$[ebp]
	mov	edi, DWORD PTR __Newres$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN100@Copy:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3546 : 		_CATCH_END

	mov	DWORD PTR __Ptr$1$[ebp], ecx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [eax*2+2]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3550 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN10@Copy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	DWORD PTR [esi]
	push	ecx
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3553 : 			_Al.deallocate(_My_data._Bx._Ptr, _Oldres + 1);

	lea	eax, DWORD PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3556 : 		else

	jmp	SHORT $LN101@Copy
$LN10@Copy:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	esi
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN101@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3563 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3562 : 		_My_data._Myres = _Newres;

	mov	DWORD PTR [esi+20], edi

; 3563 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN99@Copy:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal, COMDAT
; _this$ = ecx

; 3415 : 		{	// compare [0, _Mysize()) with _Right for equality

	npad	2
	push	ebp
	mov	ebp, esp

; 1844 : 		return (_Get_data()._Mysize);

	mov	edx, DWORD PTR __Right$[ebp]

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [edx+20], 8

; 1844 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [edx+16]

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN22@Equal
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [edx]
$LN22@Equal:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8
	push	esi

; 1844 : 		return (_Get_data()._Mysize);

	lea	esi, DWORD PTR [ecx+16]

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN47@Equal
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN47@Equal:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3416 : 		return (_Traits_equal<_Traits>(this->_Myptr(), this->_Mysize(), _Right._Myptr(), _Right._Mysize()));

	mov	esi, DWORD PTR [esi]

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN55@Equal
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN72@Equal
	npad	7
$LL64@Equal:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [ecx]
	cmp	ax, WORD PTR [edx]
	jne	SHORT $LN73@Equal

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	ecx, 2
	add	edx, 2
	sub	esi, 1
	jne	SHORT $LL64@Equal
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	al, 1
	pop	esi

; 3417 : 		}

	pop	ebp
	ret	4
$LN73@Equal:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	jne	SHORT $LN55@Equal
$LN72@Equal:
	mov	al, 1
	pop	esi

; 3417 : 		}

	pop	ebp
	ret	4
$LN55@Equal:

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	xor	al, al
	pop	esi

; 3417 : 		}

	pop	ebp
	ret	4
?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 3410 : 		{	// trims _Size to the longest it can be assuming a string at/after _Off

	npad	2
	push	ebp
	mov	ebp, esp

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	mov	ecx, DWORD PTR [ecx+16]
	sub	ecx, DWORD PTR __Off$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	ecx, eax
	cmovb	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3412 : 		}

	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 3030 : 		const size_type _Num = this->_Getal().max_size();
; 3031 : 		return (_Num <= 1 ? 1 : _Num - 1);

	mov	eax, 2147483646				; 7ffffffeH

; 3032 : 		}

	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@c_str

; 3003 : 		return (this->_Myptr());

	mov	eax, DWORD PTR [ecx]

; 3004 : 		}

	ret	0
$LN13@c_str:

; 3003 : 		return (this->_Myptr());

	mov	eax, ecx

; 3004 : 		}

	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	push	ebx
	push	esi

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	mov	esi, ecx
	push	edi

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edi, DWORD PTR [esi+16]
	cmp	edi, edx
	jb	$LN97@erase

; 2593 : 		_Check_offset(_Off);
; 2594 : 		if (this->_Mysize() - _Off <= _Count)

	mov	ebx, DWORD PTR __Count$[ebp]
	mov	eax, edi
	sub	eax, edx
	cmp	eax, ebx
	ja	SHORT $LN2@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN38@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN38@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2607 : 		}

	pop	ebp
	ret	8
$LN2@erase:

; 2595 : 			{
; 2596 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 2597 : 			}
; 2598 : 		else if (_Count != 0)

	test	ebx, ebx
	je	SHORT $LN94@erase

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN57@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN58@erase
$LN57@erase:
	mov	eax, esi
$LN58@erase:

; 2599 : 			{	// move elements down
; 2600 : 			value_type *_Ptr = this->_Myptr() + _Off;

	lea	ecx, DWORD PTR [eax+edx*2]

; 2601 : 			size_type _Newsize = this->_Mysize() - _Count;

	sub	edi, ebx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, edi
	sub	eax, edx
	add	eax, eax
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2602 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	lea	eax, DWORD PTR [ecx+ebx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN87@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN87@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
$LN94@erase:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN97@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN99@erase:
$LN96@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2585 : 		{	// erase elements [_Off, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR __Off$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jb	SHORT $LN36@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN26@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN26@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	edx, ecx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN36@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN38@erase:
$LN35@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2428 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2428 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL6@assign:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL6@assign
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2430 : 		}

	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2412 : 		{	// assign [_Ptr, _Ptr + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN17@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN18@assign
$LN17@assign:
	mov	edx, esi
$LN18@assign:

; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	mov	edi, DWORD PTR __Ptr$[ebp]
	cmp	edx, edi
	ja	SHORT $LN2@assign
	mov	eax, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	edi, eax
	jae	SHORT $LN2@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN33@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN34@assign
$LN33@assign:
	mov	eax, esi
$LN34@assign:

; 2413 : 		if (_Inside(_Ptr))
; 2414 : 			{
; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]
	sub	edi, eax
	mov	ecx, esi
	sar	edi, 1
	push	edi
	push	esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN2@assign:
	push	ebx

; 3573 : 		if (_Newsize == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	jne	SHORT $LN40@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN53@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN53@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	pop	esi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
$LN40@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	ecx, ebx
	jae	SHORT $LN41@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	ebx
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN41@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN81@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN82@assign
$LN81@assign:
	mov	eax, esi
$LN82@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	ecx, DWORD PTR [ebx+ebx]
	push	ecx
	push	edi
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN102@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN102@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
	pop	ebx
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	mov	esi, ecx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR __Roff$[ebp]
	push	edi
	mov	eax, DWORD PTR [ebx+16]
	cmp	eax, ecx
	jb	$LN161@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	cmp	eax, edi
	cmovb	edi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2382 : 		if (this == _STD addressof(_Right))

	cmp	esi, ebx
	jne	SHORT $LN2@assign

; 2383 : 			{	// substring
; 2384 : 			erase(_Roff + _Count);

	lea	eax, DWORD PTR [ecx+edi]

; 3630 : 		if (this->_Mysize() < _Off)

	cmp	DWORD PTR [esi+16], eax
	jb	$LN163@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN62@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN63@assign
$LN62@assign:
	mov	edx, esi
$LN63@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	push	ecx
	push	edi
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx+eax*2], di
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	pop	edi

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@assign:

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN72@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN85@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN85@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN72@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], edi
	jae	SHORT $LN73@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	mov	ecx, DWORD PTR __Roff$[ebp]
$LN73@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN113@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN113@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN129@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN130@assign
$LN129@assign:
	mov	edx, esi
$LN130@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [edi+edi]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2389 : 			_Traits::copy(this->_Myptr(), _Right._Myptr() + _Roff, _Count);

	lea	eax, DWORD PTR [ebx+ecx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN150@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN150@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN161@assign:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN164@assign:
$LN163@assign:
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN165@assign:
$LN160@assign:
	int	3
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 2222 : 		{	// assign _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2223 : 		if (this != _STD addressof(_Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	esi
	mov	esi, ecx
	cmp	esi, eax
	je	SHORT $LN43@operator

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN43@operator:

; 2224 : 			{	// different, assign it
; 2225 : #pragma warning(push)
; 2226 : #pragma warning(disable: 4127)	// conditional expression is constant
; 2227 : 			if (_Alty::propagate_on_container_copy_assignment::value
; 2228 : 				&& this->_Getal() != _Right._Getal())
; 2229 : 				{	// change allocator before copying
; 2230 : 				_Tidy_deallocate();
; 2231 : 				}
; 2232 : #pragma warning(pop)
; 2233 : 
; 2234 : 			this->_Copy_alloc(_Right._Getal());
; 2235 : 
; 2236 : 			_Assign_lv_contents(_Right);
; 2237 : 			}
; 2238 : 
; 2239 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2240 : 		}

	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents, COMDAT
; _this$ = ecx

; 2172 : 		{	// assign by copying the data stored in _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2173 : 			// pre: *this is in a valid but unspecified state
; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	DWORD PTR __Right$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2175 : 		}

	pop	ebp
	ret	4
?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents_with_alloc_always_equal, COMDAT
; _this$ = ecx

; 2122 : 		{	// assign by stealing _Right's buffer, memcpy optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 2123 : 			// pre: this != &_Right
; 2124 : 			// pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2125 : 			// pre: *this owns no memory, iterators orphaned (note: _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2126 : 		auto& _Right_data = _Right._Get_data();
; 2127 : 
; 2128 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2129 : 		if (_Right_data._Large_string_engaged())
; 2130 : 			{	// take ownership of _Right's iterators along with its buffer
; 2131 : 			this->_Swap_all(_Right);
; 2132 : 			}
; 2133 : 		else
; 2134 : 			{
; 2135 : 			_Right._Orphan_all();
; 2136 : 			}
; 2137 : #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 2138 : 
; 2139 : 		const auto _My_data_mem = reinterpret_cast<unsigned char *>(_STD addressof(this->_Get_data()))
; 2140 : 			+ _Memcpy_move_offset;
; 2141 : 		const auto _Right_data_mem = reinterpret_cast<unsigned char *>(_STD addressof(_Right_data))
; 2142 : 			+ _Memcpy_move_offset;
; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	mov	eax, DWORD PTR __Right$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2145 : 		}

	pop	ebp
	ret	8
?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents_with_alloc_always_equal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Assign_rv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents, COMDAT
; _this$ = ecx

; 2098 : 		{	// assign either as an rvalue or as an lvalue copy, allocators always equal optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	mov	eax, DWORD PTR __Right$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2103 : 		}

	pop	ebp
	ret	8
?_Assign_rv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 2075 : 		{	// assign by moving _Right

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi

; 2076 : 		if (this != _STD addressof(_Right))

	mov	edi, DWORD PTR __Right$[ebp]
	mov	esi, ecx
	cmp	esi, edi
	je	SHORT $LN79@operator

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN8@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	movups	xmm0, XMMWORD PTR [edi]
	movups	XMMWORD PTR [esi], xmm0
	movq	xmm0, QWORD PTR [edi+16]
	movq	QWORD PTR [esi+16], xmm0

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edi+16], eax

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edi], ax
$LN79@operator:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2087 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2088 : 		}

	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1980 : 		{	// construct from [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]

; 326  : 		_Left = _Right;

	xor	eax, eax
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1980 : 		{	// construct from [_Ptr, <null>)

	mov	esi, ecx
	push	edi

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, edx
	lea	edi, DWORD PTR [eax+2]
$LL25@basic_stri:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL25@basic_stri
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi

; 1981 : 		_Tidy_init();
; 1982 : 		assign(_Ptr);
; 1983 : 		}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1925 : 		{	// construct by copying _Right

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	eax
	push	DWORD PTR __Right$[ebp]

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 1926 : 		_Tidy_init();
; 1927 : 		_Assign_lv_contents(_Right);
; 1928 : 		}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT
; _this$ = ecx

; 1849 : 		return (_Get_data()._Myres);

	lea	eax, DWORD PTR [ecx+20]

; 1850 : 		}

	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1844 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1845 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1839 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1840 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1834 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1835 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1824 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1825 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Move_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?_Move_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Move_alloc, COMDAT
; _this$ = ecx

; 1714 : 		_Pocma(_Getal(), _Al);
; 1715 : 		}

	ret	4
?_Move_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Move_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc, COMDAT
; _this$ = ecx

; 1709 : 		_Pocca(_Getal(), _Al);
; 1710 : 		}

	ret	4
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1697 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1697 : 		}

	ret	0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1691 : 		}

	ret	0
$LN11@Myptr:

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1691 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1686 : 		}

	ret	0
$LN11@Myptr:

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1686 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 1634 : 			{	// user-provided, for fancy pointers
; 1635 : 			}

	mov	eax, ecx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 8
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
$LN3@Myptr:

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
$LN3@Myptr:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1598 : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+20], 0
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 2147483647				; 7fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??4?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEAAU01@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEAAU01@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 1064 : 		_Mybase::operator=(_STD move(_Right));
; 1065 : 		return (*this);

	mov	eax, ecx

; 1066 : 		}

	ret	4
??4?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEAAU01@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1048 : 		}

	mov	eax, ecx
	ret	4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 1
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 1013 : 		{	// get allocator to use

	npad	2
	push	ebp
	mov	ebp, esp

; 1014 : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1015 : 		}

	pop	ebp
	ret	8
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT

; 975  : 		{	// get allocator to use

	npad	2
	push	ebp
	mov	ebp, esp

; 976  : 		return (_Al);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 977  : 		}

	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 2147483647				; 7fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 2147483647				; 7fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	add	eax, eax

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@_W@std@@QAE@ABV01@@Z PROC		; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@_W@std@@QAE@ABV01@@Z ENDP		; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT

; 3646 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT
; _this$ = ecx

; 3629 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Off$[ebp]
	jb	SHORT $LN14@Check_offs

; 3633 : 			}
; 3634 : 		}

	pop	ebp
	ret	4
$LN14@Check_offs:

; 3631 : 			{
; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN16@Check_offs:
$LN13@Check_offs:
	int	3
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 3625 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT
; _this$ = ecx

; 3596 : 		auto& _My_data = this->_Get_data();
; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3602 : 		}

	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NQBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NQBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 3588 : 		{	// test if _Ptr points inside string

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@Inside
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN14@Inside
$LN13@Inside:
	mov	edx, ecx
$LN14@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	cmp	edx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	eax, DWORD PTR [ecx+16]
	add	eax, edx
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	al, 1

; 3592 : 		}

	pop	ebp
	ret	4
$LN3@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	xor	al, al

; 3592 : 		}

	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NQBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 3572 : 		{	// ensure buffer is big enough

	npad	2
	push	ebp
	mov	ebp, esp

; 3573 : 		if (_Newsize == 0)

	mov	eax, DWORD PTR __Newsize$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Grow

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN16@Grow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN16@Grow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3576 : 			return (false);

	xor	al, al

; 3585 : 		}

	pop	ebp
	ret	4
$LN2@Grow:

; 3577 : 			}
; 3578 : 
; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [ecx+20], eax
	jae	SHORT $LN3@Grow

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	eax
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
$LN3@Grow:

; 3582 : 			}
; 3583 : 
; 3584 : 		return (true);	// return true only if more work to do

	mov	al, 1

; 3585 : 		}

	pop	ebp
	ret	4
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 3566 : 		{	// set new length and null terminator

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 3567 : 		auto& _My_data = this->_Get_data();
; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Eos
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
$LN11@Eos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx+edx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Oldres$ = -28						; size = 4
_this$ = -24						; size = 4
__Ptr$1$ = -20						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newres$ = 8						; size = 4
__Newsize$ = 8						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 3514 : 		{	// reallocate to new buffer of at least _Newsize, copying existing elements there

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 3515 : 		const auto _Max = max_size();
; 3516 : 		if (_Newsize > _Max)

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	eax, -2					; fffffffeH
	jbe	SHORT $LN2@Copy

; 3517 : 			{	// too long
; 3518 : 			_Xlen();

	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN94@Copy:
$LN2@Copy:

; 3519 : 			}
; 3520 : 
; 3521 : 		auto& _My_data = this->_Get_data();
; 3522 : 		const size_type _Oldres = _My_data._Myres;

	mov	ebx, DWORD PTR [esi+20]

; 3523 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	edi, eax
	or	edi, 15					; 0000000fH
	mov	DWORD PTR __Oldres$[ebp], ebx

; 3524 : 		if (_Max < _Newres)

	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN3@Copy

; 3525 : 			{
; 3526 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	edi, eax
	jmp	SHORT $LN8@Copy
$LN3@Copy:

; 3527 : 			}
; 3528 : 		else if (_Oldres / 2 <= _Newres / 3)

	mov	eax, -1431655765			; aaaaaaabH
	mov	ecx, ebx
	mul	edi
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN8@Copy

; 3529 : 			;
; 3530 : 		else if (_Oldres <= _Max - _Oldres / 2)

	mov	eax, -2					; fffffffeH

; 3531 : 			{
; 3532 : 			_Newres = _Oldres + _Oldres / 2;	// grow exponentially if possible

	lea	edi, DWORD PTR [ecx+ebx]
	sub	eax, ecx
	cmp	ebx, eax
	jbe	SHORT $LN8@Copy

; 3533 : 			}
; 3534 : 		else
; 3535 : 			{
; 3536 : 			_Newres = _Max;	// settle for max_size()

	mov	edi, -2					; fffffffeH
$LN8@Copy:

; 3537 : 			}
; 3538 : 
; 3539 : 		auto& _Al = this->_Getal();
; 3540 : 		pointer _Ptr;
; 3541 : 		_TRY_BEGIN
; 3542 : 			_Ptr = _Al.allocate(_Newres + 1);

	lea	eax, DWORD PTR [edi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	eax
	mov	ecx, esi
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	ecx, eax
	jmp	SHORT $LN92@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z$0:

; 3543 : 		_CATCH_ALL
; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	inc	eax
	push	eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 3546 : 		_CATCH_END

	mov	eax, $LN89@Copy
	ret	0
$LN89@Copy:
	mov	esi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR __Oldres$[ebp]
	mov	edi, DWORD PTR __Newres$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN92@Copy:

; 3551 : 			{	// copy and deallocate old buffer
; 3552 : 			_Traits::copy(_Unfancy(_Ptr), _Unfancy(_My_data._Bx._Ptr), _My_data._Mysize + 1);

	mov	eax, DWORD PTR [esi+16]
	inc	eax
	mov	DWORD PTR __Ptr$1$[ebp], ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3550 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN10@Copy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	DWORD PTR [esi]
	push	ecx
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3553 : 			_Al.deallocate(_My_data._Bx._Ptr, _Oldres + 1);

	lea	eax, DWORD PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3556 : 		else

	jmp	SHORT $LN93@Copy
$LN10@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	esi
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN93@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3563 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3562 : 		_My_data._Myres = _Newres;

	mov	DWORD PTR [esi+20], edi

; 3563 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN91@Copy:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 3410 : 		{	// trims _Size to the longest it can be assuming a string at/after _Off

	npad	2
	push	ebp
	mov	ebp, esp

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	mov	ecx, DWORD PTR [ecx+16]
	sub	ecx, DWORD PTR __Off$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	ecx, eax
	cmovb	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3412 : 		}

	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 3030 : 		const size_type _Num = this->_Getal().max_size();
; 3031 : 		return (_Num <= 1 ? 1 : _Num - 1);

	mov	eax, -2					; fffffffeH

; 3032 : 		}

	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@c_str

; 3003 : 		return (this->_Myptr());

	mov	eax, DWORD PTR [ecx]

; 3004 : 		}

	ret	0
$LN13@c_str:

; 3003 : 		return (this->_Myptr());

	mov	eax, ecx

; 3004 : 		}

	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 2343 : 		{	// append [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2343 : 		{	// append [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	lea	edi, DWORD PTR [eax+1]
$LL6@append:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL6@append
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
	push	eax
	push	edx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi

; 2345 : 		}

	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 2321 : 		{	// append [_Ptr, _Ptr + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	edx, DWORD PTR [esi+20]
	cmp	edx, 16					; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN19@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [esi]
$LN19@append:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	mov	ebx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, ebx
	ja	SHORT $LN2@append
	mov	eax, DWORD PTR [esi+16]
	add	eax, ecx
	cmp	ebx, eax
	jae	SHORT $LN2@append

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	edx, 16					; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN34@append

; 2324 : 			return (append(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2324 : 			return (append(*this, _Ptr - this->_Myptr(), _Count));	// substring

	mov	ecx, esi
	sub	ebx, eax
	push	ebx
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	esi
	pop	ebx

; 2340 : 		}

	pop	ebp
	ret	8
$LN34@append:

; 2324 : 			return (append(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi

; 2324 : 			return (append(*this, _Ptr - this->_Myptr(), _Count));	// substring

	mov	ecx, esi
	sub	ebx, eax
	push	ebx
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	esi
	pop	ebx

; 2340 : 		}

	pop	ebp
	ret	8
$LN2@append:

; 2325 : 			}
; 2326 : 
; 2327 : 		if (npos - this->_Mysize() <= _Count)

	mov	ecx, DWORD PTR __Count$[ebp]
	push	edi
	mov	edi, DWORD PTR [esi+16]
	mov	eax, edi
	not	eax
	cmp	eax, ecx
	jbe	SHORT $LN140@append

; 2330 : 			}
; 2331 : 
; 2332 : 		const size_type _Num = this->_Mysize() + _Count;

	add	edi, ecx

; 2333 : 		if (_Count != 0 && _Grow(_Num))

	test	ecx, ecx
	je	SHORT $LN135@append

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN59@append

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	edx, 16					; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN72@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2339 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2340 : 		}

	pop	ebp
	ret	8
$LN72@append:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2340 : 		}

	pop	ebp
	ret	8
$LN59@append:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	edx, edi
	jae	SHORT $LN60@append

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ecx, DWORD PTR __Count$[ebp]
$LN60@append:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN100@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN101@append
$LN100@append:
	mov	edx, esi
$LN101@append:

; 2335 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

	mov	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2335 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

	add	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN128@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2339 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2340 : 		}

	pop	ebp
	ret	8
$LN128@append:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
$LN135@append:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2339 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2340 : 		}

	pop	ebp
	ret	8
$LN140@append:

; 2328 : 			{
; 2329 : 			_Xlen();	// result too long

	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN142@append:
$LN139@append:
	int	3
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
tv502 = 16						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 2288 : 		{	// append _Right [_Roff, _Roff + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Roff$[ebp]
	push	ebx
	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi
	push	edi

; 2288 : 		{	// append _Right [_Roff, _Roff + _Count)

	mov	esi, ecx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ebx+16]
	cmp	eax, edx
	jb	$LN148@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	ecx, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	eax, edx

; 2291 : 		if (npos - this->_Mysize() <= _Count)

	mov	edi, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	cmp	eax, ecx
	cmovb	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2291 : 		if (npos - this->_Mysize() <= _Count)

	mov	eax, edi
	not	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	DWORD PTR __Count$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2291 : 		if (npos - this->_Mysize() <= _Count)

	cmp	eax, ecx
	jbe	$LN150@append

; 2294 : 			}
; 2295 : 
; 2296 : 		const size_type _Num = this->_Mysize() + _Count;

	add	edi, ecx

; 2297 : 		if (_Count != 0 && _Grow(_Num))

	test	ecx, ecx
	je	$LN144@append

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN52@append

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN65@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2302 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2303 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN65@append:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2303 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN52@append:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], edi
	jae	SHORT $LN53@append

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Roff$[ebp]
$LN53@append:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN93@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN93@append:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN109@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR tv502[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN110@append
$LN109@append:
	mov	DWORD PTR tv502[ebp], esi
$LN110@append:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2299 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Right._Myptr() + _Roff, _Count);

	lea	eax, DWORD PTR [ebx+edx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2299 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Right._Myptr() + _Roff, _Count);

	mov	eax, DWORD PTR [esi+16]
	add	eax, DWORD PTR tv502[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN137@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2302 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2303 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN137@append:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
$LN144@append:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2302 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2303 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN148@append:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN151@append:
$LN150@append:

; 2292 : 			{
; 2293 : 			_Xlen();	// result too long

	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN152@append:
$LN147@append:
	int	3
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 2272 : 		{	// append [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2272 : 		{	// append [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	lea	edi, DWORD PTR [eax+1]
$LL8@operator:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL8@operator
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
	push	eax
	push	edx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi

; 2273 : 		return (append(_Ptr));
; 2274 : 		}

	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv_contents_with_alloc_always_equal, COMDAT
; _this$ = ecx

; 2122 : 		{	// assign by stealing _Right's buffer, memcpy optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 2123 : 			// pre: this != &_Right
; 2124 : 			// pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2125 : 			// pre: *this owns no memory, iterators orphaned (note: _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2126 : 		auto& _Right_data = _Right._Get_data();
; 2127 : 
; 2128 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2129 : 		if (_Right_data._Large_string_engaged())
; 2130 : 			{	// take ownership of _Right's iterators along with its buffer
; 2131 : 			this->_Swap_all(_Right);
; 2132 : 			}
; 2133 : 		else
; 2134 : 			{
; 2135 : 			_Right._Orphan_all();
; 2136 : 			}
; 2137 : #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 2138 : 
; 2139 : 		const auto _My_data_mem = reinterpret_cast<unsigned char *>(_STD addressof(this->_Get_data()))
; 2140 : 			+ _Memcpy_move_offset;
; 2141 : 		const auto _Right_data_mem = reinterpret_cast<unsigned char *>(_STD addressof(_Right_data))
; 2142 : 			+ _Memcpy_move_offset;
; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	mov	eax, DWORD PTR __Right$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2145 : 		}

	pop	ebp
	ret	8
?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv_contents_with_alloc_always_equal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2054 : 		{	// construct by moving _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	mov	eax, DWORD PTR __Right$[ebp]

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2056 : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT
; _this$ = ecx

; 1849 : 		return (_Get_data()._Myres);

	lea	eax, DWORD PTR [ecx+20]

; 1850 : 		}

	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 1844 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1845 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 1839 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1840 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 1834 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1835 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 1824 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1825 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1691 : 		}

	ret	0
$LN11@Myptr:

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1691 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1686 : 		}

	ret	0
$LN11@Myptr:

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1686 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 1634 : 			{	// user-provided, for fancy pointers
; 1635 : 			}

	mov	eax, ecx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
$LN3@Myptr:

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
$LN3@Myptr:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1598 : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+20], 0
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	or	eax, -1

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN6@allocate
$LN15@allocate:

; 1077 : 		return (_Mybase::allocate(_Count));
; 1078 : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN8@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN10@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN18@allocate:
$LN10@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN11@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN19@allocate:
$LN11@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 1077 : 		return (_Mybase::allocate(_Count));
; 1078 : 		}

	pop	ebp
	ret	4
$LN8@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN15@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN20@allocate:
$LN17@allocate:
	int	3
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 1048 : 		}

	mov	eax, ecx
	ret	4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	or	eax, -1

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 852  : 		}

	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN16@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 96   : 	{	// deallocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 97   :  #if defined(_M_IX86) || defined(_M_X64)
; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	mov	ecx, DWORD PTR __Count$[ebp]
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	ecx, eax
	jbe	SHORT $LN2@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 99   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	al, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jb	SHORT $LN5@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jae	SHORT $LN6@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN9@Deallocate:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN3@Deallocate:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 	}

	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 50   : 	{	// allocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 51   : 	void *_Ptr = 0;
; 52   : 
; 53   : 	if (_Count == 0)

	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate

; 54   : 		return (_Ptr);

	xor	eax, eax
$LN1@Allocate:

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN2@Allocate:

; 55   : 
; 56   : 	// check overflow of multiply
; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN3@Allocate

; 58   : 		_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	BYTE PTR __Try_aligned_allocation$[ebp], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	eax, DWORD PTR [ecx+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	eax, ecx
	ja	SHORT $LN6@Allocate

; 69   : 			_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN7@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN4@Allocate:

; 76   : 
; 77   :  #ifdef _DEBUG
; 78   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 79   :  #endif /* _DEBUG */
; 80   : 		}
; 81   : 	else
; 82   :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 83   : 	static_cast<void>(_Try_aligned_allocation);
; 84   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 85   : 
; 86   : 		{	// allocate normal block
; 87   : 		_Ptr = ::operator new(_User_size);

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN1@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ
_TEXT	SEGMENT
?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ PROC ; std::_Iterator_base0::_Getcont, COMDAT
; _this$ = ecx

; 79   : 		return (0);

	xor	eax, eax

; 80   : 		}

	ret	0
?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ ENDP ; std::_Iterator_base0::_Getcont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 75   : 		}

	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 64   : 		}

	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 516  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 517  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [eax], cl

; 518  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADQADQBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 485  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __First2$[ebp]
	push	DWORD PTR __First1$[ebp]
	call	_memcpy
	add	esp, 12					; 0000000cH

; 487  : 		}

	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADQADQBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIQBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIQBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 479  : 		{	// find length of null-terminated string

	npad	2
	push	ebp
	mov	ebp, esp

; 480  : 		return (_CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+1]
	npad	5
$LL3@length:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx

; 481  : 		}

	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIQBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 325  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 326  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cx, WORD PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	WORD PTR [eax], cx

; 327  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 314  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	mov	DWORD PTR __Count$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 316  : 		}

	pop	ebp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 294  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	push	eax
	push	DWORD PTR __First2$[ebp]
	push	DWORD PTR __First1$[ebp]
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 296  : 		}

	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?length@?$char_traits@_W@std@@SAIQB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIQB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 288  : 		{	// find length of null-terminated sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+2]
	npad	5
$LL3@length:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL3@length
	sub	eax, edx
	sar	eax, 1

; 290  : 		}

	pop	ebp
	ret	0
?length@?$char_traits@_W@std@@SAIQB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?compare@?$char_traits@_W@std@@SAHQB_W0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@_W@std@@SAHQB_W0I@Z PROC		; std::char_traits<wchar_t>::compare, COMDAT

; 283  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	mov	edx, DWORD PTR __First2$[ebp]
	mov	eax, DWORD PTR __First1$[ebp]
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN5@compare
$LL6@compare:

; 217  :             if (*_S1 != *_S2)

	mov	cx, WORD PTR [eax]
	cmp	cx, WORD PTR [edx]
	jne	SHORT $LN14@compare

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	eax, 2
	add	edx, 2
	sub	esi, 1
	jne	SHORT $LL6@compare
$LN5@compare:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	xor	eax, eax
	pop	esi

; 285  : 		}

	pop	ebp
	ret	0
$LN14@compare:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	sbb	eax, eax
	and	eax, -2					; fffffffeH
	inc	eax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 285  : 		}

	pop	ebp
	ret	0
?compare@?$char_traits@_W@std@@SAHQB_W0I@Z ENDP		; std::char_traits<wchar_t>::compare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 91   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 94   :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT

; 244  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 248  :         #pragma warning(pop)
; 249  :     }

	pop	ebp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 231  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 235  :         #pragma warning(pop)
; 236  :     }

	pop	ebp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	jmp	_memcpy
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemcmp
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcmp PROC						; COMDAT

; 215  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	mov	esi, DWORD PTR __N$[ebp]
	test	esi, esi
	je	SHORT $LN3@wmemcmp
	mov	ecx, DWORD PTR __S2$[ebp]
	mov	edx, DWORD PTR __S1$[ebp]
$LL4@wmemcmp:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	jne	SHORT $LN8@wmemcmp

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	edx, 2
	add	ecx, 2
	sub	esi, 1
	jne	SHORT $LL4@wmemcmp
$LN3@wmemcmp:

; 219  : 
; 220  :         return 0;

	xor	eax, eax
	pop	esi

; 221  :     }

	pop	ebp
	ret	0
$LN8@wmemcmp:

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	movzx	eax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	pop	esi
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	inc	eax

; 221  :     }

	pop	ebp
	ret	0
_wmemcmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ?_Hash_seq@std@@YAIPBEI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
?_Hash_seq@std@@YAIPBEI@Z PROC				; std::_Hash_seq, COMDAT

; 331  : 	{	// FNV-1a hash function for bytes in [_First, _First + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 332  :  #if defined(_WIN64)
; 333  : 	static_assert(sizeof(size_t) == 8, "This code is for 64-bit size_t.");
; 334  : 	const size_t _FNV_offset_basis = 14695981039346656037ULL;
; 335  : 	const size_t _FNV_prime = 1099511628211ULL;
; 336  : 
; 337  :  #else /* defined(_WIN64) */
; 338  : 	static_assert(sizeof(size_t) == 4, "This code is for 32-bit size_t.");
; 339  : 	const size_t _FNV_offset_basis = 2166136261U;
; 340  : 	const size_t _FNV_prime = 16777619U;
; 341  :  #endif /* defined(_WIN64) */
; 342  : 
; 343  : 	size_t _Val = _FNV_offset_basis;
; 344  : 	for (size_t _Next = 0; _Next < _Count; ++_Next)

	mov	esi, DWORD PTR __Count$[ebp]
	xor	ecx, ecx
	mov	edx, -2128831035			; 811c9dc5H
	test	esi, esi
	je	SHORT $LN12@Hash_seq
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
$LL8@Hash_seq:

; 345  : 		{	// fold in another byte
; 346  : 		_Val ^= (size_t)_First[_Next];

	movzx	eax, BYTE PTR [ecx+edi]
	inc	ecx
	xor	eax, edx

; 347  : 		_Val *= _FNV_prime;

	imul	edx, eax, 16777619
	cmp	ecx, esi
	jb	SHORT $LL8@Hash_seq
	pop	edi
$LN12@Hash_seq:

; 348  : 		}
; 349  : 	return (_Val);

	mov	eax, edx
	pop	esi

; 350  : 	}

	pop	ebp
	ret	0
?_Hash_seq@std@@YAIPBEI@Z ENDP				; std::_Hash_seq
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\cmath
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\cmath
;	COMDAT ?floor@@YAMM@Z
_TEXT	SEGMENT
tv186 = 8						; size = 4
__Xx$ = 8						; size = 4
?floor@@YAMM@Z PROC					; floor, COMDAT

; 114  : 	{

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h

; 672  :         return (float)floor(_X);

	movss	xmm3, DWORD PTR __Xx$[ebp]
	movss	xmm4, DWORD PTR __real@80000000
	movaps	xmm0, xmm3
	movss	xmm2, DWORD PTR __real@4b000000
	andps	xmm4, xmm3
	xorps	xmm0, xmm4
	movss	xmm5, DWORD PTR __real@3f800000
	cmpltss	xmm0, xmm2
	movaps	xmm1, xmm3
	andps	xmm2, xmm0
	orps	xmm2, xmm4
	addss	xmm1, xmm2
	subss	xmm1, xmm2
	movaps	xmm0, xmm1
	subss	xmm0, xmm3
	cmpnless xmm0, xmm4
	andps	xmm0, xmm5
	subss	xmm1, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\cmath

; 115  : 	return (_CSTD floorf(_Xx));

	movss	DWORD PTR tv186[ebp], xmm1
	fld	DWORD PTR tv186[ebp]

; 116  : 	}

	pop	ebp
	ret	0
?floor@@YAMM@Z ENDP					; floor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
;	COMDAT _floorf
_TEXT	SEGMENT
tv186 = 8						; size = 4
__X$ = 8						; size = 4
_floorf	PROC						; COMDAT

; 671  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 672  :         return (float)floor(_X);

	movss	xmm3, DWORD PTR __X$[ebp]
	movss	xmm4, DWORD PTR __real@80000000
	movaps	xmm0, xmm3
	movss	xmm2, DWORD PTR __real@4b000000
	andps	xmm4, xmm3
	xorps	xmm0, xmm4
	movss	xmm5, DWORD PTR __real@3f800000
	cmpltss	xmm0, xmm2
	movaps	xmm1, xmm3
	andps	xmm2, xmm0
	orps	xmm2, xmm4
	addss	xmm1, xmm2
	subss	xmm1, xmm2
	movaps	xmm0, xmm1
	subss	xmm0, xmm3
	cmpnless xmm0, xmm4
	andps	xmm0, xmm5
	subss	xmm1, xmm0
	movss	DWORD PTR tv186[ebp], xmm1
	fld	DWORD PTR tv186[ebp]

; 673  :     }

	pop	ebp
	ret	0
_floorf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
_TEXT	SEGMENT
?SK_ImGui_Active@@YA_NXZ PROC				; SK_ImGui_Active

; 1466 : static inline bool SK_ImGui_Active (void) { return SK_ImGui_Visible || SK_ReShade_Visible; };

	cmp	BYTE PTR ?SK_ImGui_Visible@@3_NA, 0	; SK_ImGui_Visible
	jne	SHORT $LN3@SK_ImGui_A
	cmp	BYTE PTR ?SK_ReShade_Visible@@3_NA, 0	; SK_ReShade_Visible
	jne	SHORT $LN3@SK_ImGui_A
	xor	al, al
	ret	0
$LN3@SK_ImGui_A:
	mov	al, 1
	ret	0
?SK_ImGui_Active@@YA_NXZ ENDP				; SK_ImGui_Active
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1?$ImVector@M@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ImVector@M@@QAE@XZ PROC				; ImVector<float>::~ImVector<float>, COMDAT
; _this$ = ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$ImVector@M@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN2@ImVector
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN2@ImVector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ImVector@M@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$ImVector@M@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ImVector@M@@QAE@XZ ENDP				; ImVector<float>::~ImVector<float>
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0?$ImVector@M@@QAE@XZ
_TEXT	SEGMENT
??0?$ImVector@M@@QAE@XZ PROC				; ImVector<float>::ImVector<float>, COMDAT
; _this$ = ecx

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$ImVector@M@@QAE@XZ ENDP				; ImVector<float>::ImVector<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1?$ImVector@G@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ImVector@G@@QAE@XZ PROC				; ImVector<unsigned short>::~ImVector<unsigned short>, COMDAT
; _this$ = ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$ImVector@G@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN2@ImVector
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN2@ImVector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ImVector@G@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$ImVector@G@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ImVector@G@@QAE@XZ ENDP				; ImVector<unsigned short>::~ImVector<unsigned short>
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0?$ImVector@G@@QAE@XZ
_TEXT	SEGMENT
??0?$ImVector@G@@QAE@XZ PROC				; ImVector<unsigned short>::ImVector<unsigned short>, COMDAT
; _this$ = ecx

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$ImVector@G@@QAE@XZ ENDP				; ImVector<unsigned short>::ImVector<unsigned short>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ?HSV@ImColor@@SA?AU1@MMMM@Z
_TEXT	SEGMENT
_b$ = -12						; size = 4
_g$ = -8						; size = 4
_r$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_h$ = 12						; size = 4
_s$ = 16						; size = 4
_v$ = 20						; size = 4
_a$ = 24						; size = 4
?HSV@ImColor@@SA?AU1@MMMM@Z PROC			; ImColor::HSV, COMDAT

; 1133 :     static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	movss	xmm0, DWORD PTR _v$[ebp]
	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	lea	eax, DWORD PTR _g$[ebp]
	push	eax
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _h$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?ColorConvertHSVtoRGB@ImGui@@YAXMMMAAM00@Z ; ImGui::ColorConvertHSVtoRGB

; 1126 :     ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; Value.z = b; Value.w = a; }

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1133 :     static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }

	add	esp, 24					; 00000018H

; 1126 :     ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; Value.z = b; Value.w = a; }

	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [eax], xmm0
	movss	xmm0, DWORD PTR _g$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR _b$[ebp]
	movss	DWORD PTR [eax+8], xmm0
	movss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR [eax+12], xmm0

; 1133 :     static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }

	mov	esp, ebp
	pop	ebp
	ret	0
?HSV@ImColor@@SA?AU1@MMMM@Z ENDP			; ImColor::HSV
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??BImColor@@QBE?AUImVec4@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??BImColor@@QBE?AUImVec4@@XZ PROC			; ImColor::operator ImVec4, COMDAT
; _this$ = ecx

; 1129 :     inline operator ImVec4() const                                  { return Value; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	xmm0, XMMWORD PTR [ecx]
	movups	XMMWORD PTR [eax], xmm0
	pop	ebp
	ret	4
??BImColor@@QBE?AUImVec4@@XZ ENDP			; ImColor::operator ImVec4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??BImColor@@QBEIXZ
_TEXT	SEGMENT
??BImColor@@QBEIXZ PROC					; ImColor::operator unsigned int, COMDAT
; _this$ = ecx

; 1128 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	npad	2
	push	ecx
	call	?ColorConvertFloat4ToU32@ImGui@@YAIABUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
	add	esp, 4
	ret	0
??BImColor@@QBEIXZ ENDP					; ImColor::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0ImColor@@QAE@ABUImVec4@@@Z
_TEXT	SEGMENT
_col$ = 8						; size = 4
??0ImColor@@QAE@ABUImVec4@@@Z PROC			; ImColor::ImColor, COMDAT
; _this$ = ecx

; 1127 :     ImColor(const ImVec4& col)                                      { Value = col; }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _col$[ebp]

; 108  :     ImVec4() { x = y = z = w = 0.0f; }

	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx], 0

; 1127 :     ImColor(const ImVec4& col)                                      { Value = col; }

	movups	xmm0, XMMWORD PTR [eax]
	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm0
	pop	ebp
	ret	4
??0ImColor@@QAE@ABUImVec4@@@Z ENDP			; ImColor::ImColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0ImColor@@QAE@MMMM@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_g$ = 12						; size = 4
_b$ = 16						; size = 4
_a$ = 20						; size = 4
??0ImColor@@QAE@MMMM@Z PROC				; ImColor::ImColor, COMDAT
; _this$ = ecx

; 1126 :     ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; Value.z = b; Value.w = a; }

	npad	2
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _r$[ebp]
	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR _g$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR _b$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??0ImColor@@QAE@MMMM@Z ENDP				; ImColor::ImColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??1?$ImVector@D@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ImVector@D@@QAE@XZ PROC				; ImVector<char>::~ImVector<char>, COMDAT
; _this$ = ecx

; 906  :     ~ImVector()                 { if (Data) ImGui::MemFree(Data); }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$ImVector@D@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN2@ImVector
	push	eax
	call	?MemFree@ImGui@@YAXPAX@Z		; ImGui::MemFree
	add	esp, 4
$LN2@ImVector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ImVector@D@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$ImVector@D@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ImVector@D@@QAE@XZ ENDP				; ImVector<char>::~ImVector<char>
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0?$ImVector@D@@QAE@XZ
_TEXT	SEGMENT
??0?$ImVector@D@@QAE@XZ PROC				; ImVector<char>::ImVector<char>, COMDAT
; _this$ = ecx

; 905  :     ImVector()                  { Size = Capacity = 0; Data = NULL; }

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$ImVector@D@@QAE@XZ ENDP				; ImVector<char>::ImVector<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0ImVec4@@QAE@XZ
_TEXT	SEGMENT
??0ImVec4@@QAE@XZ PROC					; ImVec4::ImVec4, COMDAT
; _this$ = ecx

; 108  :     ImVec4() { x = y = z = w = 0.0f; }

	mov	DWORD PTR [ecx+12], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx], 0
	ret	0
??0ImVec4@@QAE@XZ ENDP					; ImVec4::ImVec4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0ImVec2@@QAE@MM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0ImVec2@@QAE@MM@Z PROC				; ImVec2::ImVec2, COMDAT
; _this$ = ecx

; 98   :     ImVec2(float _x, float _y) { x = _x; y = _y; }

	npad	2
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??0ImVec2@@QAE@MM@Z ENDP				; ImVec2::ImVec2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
;	COMDAT ??0ImVec2@@QAE@XZ
_TEXT	SEGMENT
??0ImVec2@@QAE@XZ PROC					; ImVec2::ImVec2, COMDAT
; _this$ = ecx

; 97   :     ImVec2() { x = y = 0.0f; }

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx], 0
	ret	0
??0ImVec2@@QAE@XZ ENDP					; ImVec2::ImVec2
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___n$[ebp]
	test	esi, esi
	je	SHORT $LN6@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	edi
	mov	edi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, edi
	call	ebx
	add	edi, DWORD PTR ___s$[ebp]
	sub	esi, 1
	jne	SHORT $LL2@vector
	pop	edi
	pop	ebx
$LN6@vector:
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
