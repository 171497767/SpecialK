; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\core.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_IID_IInternalConnection
PUBLIC	?SK_bypass_dialog_tid@@3JC			; SK_bypass_dialog_tid
PUBLIC	?SK_bypass_dialog_active@@3JC			; SK_bypass_dialog_active
PUBLIC	?__SK_Init@@3JC					; __SK_Init
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QB_WB			; ATL::szStringVal
PUBLIC	?multiszStringVal@ATL@@3QB_WB			; ATL::multiszStringVal
PUBLIC	?szDwordVal@ATL@@3QB_WB				; ATL::szDwordVal
PUBLIC	?szBinaryVal@ATL@@3QB_WB			; ATL::szBinaryVal
PUBLIC	?szValToken@ATL@@3QB_WB				; ATL::szValToken
PUBLIC	?szForceRemove@ATL@@3QB_WB			; ATL::szForceRemove
PUBLIC	?szNoRemove@ATL@@3QB_WB				; ATL::szNoRemove
PUBLIC	?szDelete@ATL@@3QB_WB				; ATL::szDelete
PUBLIC	_CLSID_Registrar
PUBLIC	?dll_role@@3W4DLL_ROLE@@A			; dll_role
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?hInitThread@@3RAXA				; hInitThread
PUBLIC	?hPumpThread@@3PAXA				; hPumpThread
PUBLIC	?sli_state@@3UNV_GET_CURRENT_SLI_STATE_V2@@A	; sli_state
PUBLIC	?__SK_DLL_Backend@@3PB_WB			; __SK_DLL_Backend
PUBLIC	?SK_RootPath@@3PA_WA				; SK_RootPath
PUBLIC	?SK_ConfigPath@@3PA_WA				; SK_ConfigPath
PUBLIC	?SK_Backend@@3PA_WA				; SK_Backend
PUBLIC	?frames_drawn@@3JC				; frames_drawn
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ATLLib
PUBLIC	?poll_interval@@3_KA				; poll_interval
PUBLIC	?g_iRenderDevice@@3PAUIUnknown@@A		; g_iRenderDevice
PUBLIC	?g_iSwapChain@@3PAUIUnknown@@A			; g_iSwapChain
PUBLIC	?osd_shutdown@@3PAXA				; osd_shutdown
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?backend_dll@@3PAUHINSTANCE__@@A		; backend_dll
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?nvapi_init@@3HA				; nvapi_init
PUBLIC	_IID_IAxWinAmbientDispatchEx
_BSS	SEGMENT
?SK_bypass_dialog_tid@@3JC DD 01H DUP (?)		; SK_bypass_dialog_tid
?SK_bypass_dialog_active@@3JC DD 01H DUP (?)		; SK_bypass_dialog_active
?__SK_Init@@3JC DD 01H DUP (?)				; __SK_Init
?dll_role@@3W4DLL_ROLE@@A DD 01H DUP (?)		; dll_role
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
_BSS	SEGMENT
?sli_state@@3UNV_GET_CURRENT_SLI_STATE_V2@@A DB 020H DUP (?) ; sli_state
?SK_RootPath@@3PA_WA DW 0106H DUP (?)			; SK_RootPath
?SK_ConfigPath@@3PA_WA DW 0106H DUP (?)			; SK_ConfigPath
?SK_Backend@@3PA_WA DW 080H DUP (?)			; SK_Backend
?frames_drawn@@3JC DD 01H DUP (?)			; frames_drawn
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	8

?poll_interval@@3_KA DQ 01H DUP (?)			; poll_interval
?g_iRenderDevice@@3PAUIUnknown@@A DD 01H DUP (?)	; g_iRenderDevice
?g_iSwapChain@@3PAUIUnknown@@A DD 01H DUP (?)		; g_iSwapChain
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
_BSS	SEGMENT
?backend_dll@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; backend_dll
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
_BSS	SEGMENT
?nvapi_init@@3HA DD 01H DUP (?)				; nvapi_init
_BSS	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
_DATA	SEGMENT
?hInitThread@@3RAXA DD 0ffffffffH			; hInitThread
?hPumpThread@@3PAXA DD 0ffffffffH			; hPumpThread
?__SK_DLL_Backend@@3PB_WB DD FLAT:$SG427485		; __SK_DLL_Backend
?osd_shutdown@@3PAXA DD 0ffffffffH			; osd_shutdown
_DATA	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QB_WB
CONST	SEGMENT
?szDelete@ATL@@3QB_WB DD FLAT:$SG189610			; ATL::szDelete
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QB_WB
CONST	SEGMENT
?szNoRemove@ATL@@3QB_WB DD FLAT:$SG189608		; ATL::szNoRemove
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QB_WB
CONST	SEGMENT
?szForceRemove@ATL@@3QB_WB DD FLAT:$SG189606		; ATL::szForceRemove
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QB_WB
CONST	SEGMENT
?szValToken@ATL@@3QB_WB DD FLAT:$SG189604		; ATL::szValToken
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QB_WB
CONST	SEGMENT
?szBinaryVal@ATL@@3QB_WB DD FLAT:$SG189602		; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QB_WB
CONST	SEGMENT
?szDwordVal@ATL@@3QB_WB DD FLAT:$SG189600		; ATL::szDwordVal
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QB_WB
CONST	SEGMENT
?multiszStringVal@ATL@@3QB_WB DD FLAT:$SG189598		; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QB_WB
CONST	SEGMENT
?szStringVal@ATL@@3QB_WB DD FLAT:$SG189596		; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
CONST	SEGMENT
$SG178176 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG428047 DB	00H
$SG428085 DB	00H
$SG428048 DB	'mem', 00H
$SG428049 DB	'%c %lx %s', 00H
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
$SG427975 DB	00H
$SG428053 DB	'%cx', 00H
$SG428054 DB	'%u', 00H
	ORG $+1
$SG428055 DB	'mem', 00H
$SG428058 DB	'%hx', 00H
$SG428059 DB	'%u', 00H
	ORG $+1
$SG428060 DB	'mem', 00H
$SG428063 DB	'%x', 00H
	ORG $+1
$SG428064 DB	'%u', 00H
	ORG $+1
$SG428065 DB	'mem', 00H
$SG428068 DB	'%llx', 00H
	ORG $+3
$SG428069 DB	'%llu', 00H
	ORG $+3
$SG428070 DB	'mem', 00H
$SG428073 DB	'%lf', 00H
$SG428074 DB	'%f', 00H
	ORG $+1
$SG428075 DB	'mem', 00H
$SG428078 DB	'%f', 00H
	ORG $+1
$SG428079 DB	'%f', 00H
	ORG $+1
$SG178223 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG428080 DB	'mem', 00H
$SG428083 DB	'%s', 00H
	ORG $+1
$SG428084 DB	'mem', 00H
$SG428086 DB	'mem', 00H
$SG428125 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'z', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 'N', 00H, 'V', 00H, 'I', 00H, 'D', 00H, 'I', 00H, 'A', 00H
	DB	' ', 00H, 'A', 00H, 'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, '(', 00H, 'N', 00H, 'v', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, ')', 00H, '.', 00H, '.', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG428126 DB	'S', 00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 00H, 00H
$SG178270 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG428127 DB	'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 00H, 00H
$SG428128 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 'N', 00H, 'v', 00H, 'A', 00H, 'P', 00H, 'I', 00H, ' ', 00H
	DB	'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	'{', 00H, ' ', 00H, '%', 00H, 's', 00H, ' ', 00H, '}', 00H, 00H
	DB	00H
$SG428131 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, '>', 00H, '>', 00H, ' ', 00H, 'N', 00H, 'V', 00H, 'I', 00H
	DB	'D', 00H, 'I', 00H, 'A', 00H, ' ', 00H, 'D', 00H, 'r', 00H, 'i'
	DB	00H, 'v', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'V', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, 's', 00H, 00H, 00H
$SG428140 DB	'O', 00H, 'P', 00H, 'E', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG428132 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'N', 00H, 'u', 00H, 'm', 00H
	DB	'b', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' '
	DB	00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'N', 00H, 'V', 00H, 'I'
	DB	00H, 'D', 00H, 'I', 00H, 'A', 00H, ' ', 00H, 'G', 00H, 'P', 00H
	DB	'U', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H, 'i', 00H, ' '
	DB	00H, ' ', 00H, '{', 00H, ' ', 00H, 'S', 00H, 'L', 00H, 'I', 00H
	DB	':', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H, ' '
	DB	00H, '}', 00H, 00H, 00H
	ORG $+2
$SG428133 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'N', 00H, 'u', 00H, 'm', 00H
	DB	'b', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' '
	DB	00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'N', 00H, 'V', 00H, 'I'
	DB	00H, 'D', 00H, 'I', 00H, 'A', 00H, ' ', 00H, 'G', 00H, 'P', 00H
	DB	'U', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H, 'i', 00H, ' '
	DB	00H, ' ', 00H, '{', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H
	DB	'''', 00H, ' ', 00H, '}', 00H, 00H, 00H
$SG428148 DB	'NvOptimusEnablement', 00H
$SG428135 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'S', 00H, 'L', 00H
	DB	'I', 00H, ' ', 00H, 'G', 00H, 'P', 00H, 'U', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG428139 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, '>', 00H, '>', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, 'p', 00H
	DB	'p', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 'N', 00H, 'V', 00H, 'I'
	DB	00H, 'D', 00H, 'I', 00H, 'A', 00H, ' ', 00H, 'd', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H
	DB	' ', 00H, '<', 00H, '<', 00H, 00H, 00H
$SG428151 DB	'M', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'P', 00H, 'e', 00H
	DB	'r', 00H, 'f', 00H, '.', 00H, 00H, 00H
$SG428141 DB	'[', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, 'L', 00H, 'i', 00H, 'b', 00H, ']', 00H, ' '
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'z', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 'A', 00H, 'M', 00H, 'D', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	's', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, ' ', 00H, 'L'
	DB	00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 'y', 00H
	DB	' ', 00H, '(', 00H, 'A', 00H, 'D', 00H, 'L', 00H, ')', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG428142 DB	'S', 00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 00H, 00H
$SG428143 DB	'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 00H, 00H
$SG428144 DB	'[', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, 'L', 00H, 'i', 00H, 'b', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 'A', 00H, 'D', 00H, 'L', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	'{', 00H, ' ', 00H, '%', 00H, 's', 00H, ' ', 00H, '}', 00H, 00H
	DB	00H
$SG428146 DB	'[', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, 'L', 00H, 'i', 00H, 'b', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'N', 00H, 'u', 00H, 'm', 00H
	DB	'b', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' '
	DB	00H, 'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'A', 00H, 'M', 00H, 'D', 00H, ' '
	DB	00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H, 'i', 00H, ' '
	DB	00H, '(', 00H, '%', 00H, 'i', 00H, ' ', 00H, 'a', 00H, 'c', 00H
	DB	't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, ')', 00H, 00H, 00H
$SG428152 DB	'D', 00H, 'o', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG428153 DB	'[', 00H, 'H', 00H, 'y', 00H, 'b', 00H, 'r', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'G', 00H, 'P', 00H, 'U', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, 'N', 00H, 'v', 00H, 'O', 00H, 'p', 00H, 't', 00H
	DB	'i', 00H, 'm', 00H, 'u', 00H, 's', 00H, 'E', 00H, 'n', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, ':'
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, '0', 00H, '2', 00H
	DB	'X', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG189596 DB	'S', 00H, 00H, 00H
$SG428154 DB	'[', 00H, 'H', 00H, 'y', 00H, 'b', 00H, 'r', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'G', 00H, 'P', 00H, 'U', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, 'N', 00H, 'v', 00H, 'O', 00H, 'p', 00H, 't', 00H
	DB	'i', 00H, 'm', 00H, 'u', 00H, 's', 00H, 'E', 00H, 'n', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, ':'
	DB	00H, ' ', 00H, 'U', 00H, 'N', 00H, 'D', 00H, 'E', 00H, 'F', 00H
	DB	'I', 00H, 'N', 00H, 'E', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG428155 DB	'AmdPowerXpressRequestHighPerformance', 00H
	ORG $+3
$SG428158 DB	'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'P', 00H
	DB	'e', 00H, 'r', 00H, 'f', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG428159 DB	'D', 00H, 'o', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG428160 DB	'[', 00H, 'H', 00H, 'y', 00H, 'b', 00H, 'r', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'G', 00H, 'P', 00H, 'U', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, 'A', 00H, 'm', 00H, 'd', 00H, 'P', 00H, 'o', 00H
	DB	'w', 00H, 'e', 00H, 'r', 00H, 'X', 00H, 'p', 00H, 'r', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'R', 00H, 'e', 00H, 'q', 00H, 'u', 00H
	DB	'e', 00H, 's', 00H, 't', 00H, 'H', 00H, 'i', 00H, 'g', 00H, 'h'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, '.', 00H, ':'
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, '0', 00H, '2', 00H
	DB	'X', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG189598 DB	'M', 00H, 00H, 00H
$SG428161 DB	'[', 00H, 'H', 00H, 'y', 00H, 'b', 00H, 'r', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'G', 00H, 'P', 00H, 'U', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, 'A', 00H, 'm', 00H, 'd', 00H, 'P', 00H, 'o', 00H
	DB	'w', 00H, 'e', 00H, 'r', 00H, 'X', 00H, 'p', 00H, 'r', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'R', 00H, 'e', 00H, 'q', 00H, 'u', 00H
	DB	'e', 00H, 's', 00H, 't', 00H, 'H', 00H, 'i', 00H, 'g', 00H, 'h'
	DB	00H, 'P', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, '.', 00H, ':'
	DB	00H, ' ', 00H, 'U', 00H, 'N', 00H, 'D', 00H, 'E', 00H, 'F', 00H
	DB	'I', 00H, 'N', 00H, 'E', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG178317 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG189600 DB	'D', 00H, 00H, 00H
$SG189602 DB	'B', 00H, 00H, 00H
$SG428194 DB	'[', 00H, ' ', 00H, 'M', 00H, 'u', 00H, 'l', 00H, 't', 00H
	DB	'i', 00H, 'T', 00H, 'h', 00H, 'r', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'I', 00H, 'n', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'B', 00H, 'y', 00H, 'p'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, ' ', 00H, 'A', 00H, 'c'
	DB	00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, ' ', 00H, '(', 00H
	DB	't', 00H, 'i', 00H, 'd', 00H, '=', 00H, '%', 00H, 'x', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG189604 DB	'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG189606 DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG189608 DB	'N', 00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG189610 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG431288 DB	'D', 00H, '3', 00H, 'D', 00H, '9', 00H, 'E', 00H, 'x', 00H
	DB	00H, 00H
	ORG $+2
$SG431291 DB	'D', 00H, '3', 00H, 'D', 00H, '9', 00H, ' ', 00H, ' ', 00H
	DB	00H, 00H
	ORG $+2
$SG178364 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG431299 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'4', 00H, 00H, 00H
$SG431302 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'4', 00H, 00H, 00H
$SG431305 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'3', 00H, 00H, 00H
$SG431308 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'2', 00H, 00H, 00H
$SG431311 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'1', 00H, 00H, 00H
$SG431312 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, ' ', 00H
	DB	00H, 00H
	ORG $+2
$SG431315 DB	'D', 00H, '3', 00H, 'D', 00H, '8', 00H, 00H, 00H
	ORG $+2
$SG431317 DB	'D', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 00H, 00H
$SG431322 DB	'U', 00H, 'N', 00H, 'K', 00H, 'N', 00H, 'O', 00H, 'W', 00H
	DB	'N', 00H, 00H, 00H
$SG431324 DB	'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H
	DB	00H, 00H
	ORG $+2
$SG431328 DB	't', 00H, 'z', 00H, 'f', 00H, 'i', 00H, 'x', 00H, '.', 00H
	DB	'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG431329 DB	't', 00H, 'b', 00H, 'f', 00H, 'i', 00H, 'x', 00H, '.', 00H
	DB	'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG178411 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm'
	DB	00H, 'p', 00H, 'l', 00H, 00H, 00H
$SG430324 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'D', 00H, 'u', 00H, 'm'
	DB	00H, 'm', 00H, 'y', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG431352 DB	'runas', 00H
	ORG $+2
$SG430328 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'D', 00H, 'u', 00H, 'm'
	DB	00H, 'm', 00H, 'y', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG430329 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'D', 00H, 'u', 00H, 'm'
	DB	00H, 'm', 00H, 'y', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG430330 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'D', 00H, 'u', 00H, 'm'
	DB	00H, 'm', 00H, 'y', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG428296 DB	'R', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	'3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG430332 DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	' ', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	'!', 00H, 00H, 00H
$SG431359 DB	'open', 00H
	ORG $+3
$SG428299 DB	'S', 00H, 'K', 00H, 'I', 00H, '*', 00H, '.', 00H, 't', 00H
	DB	'm', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG428300 DB	'*', 00H, '.', 00H, 'o', 00H, 'l', 00H, 'd', 00H, 00H, 00H
$SG428301 DB	'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 00H, 00H
$SG428304 DB	'VRAM.Purge', 00H
	ORG $+1
$SG428302 DB	'[', 00H, ' ', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, '=', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 's', 00H, 'h', 00H, 'e'
	DB	00H, 'd', 00H, '!', 00H, ' ', 00H, '=', 00H, '=', 00H, '=', 00H
	DB	00H, 00H
$SG428306 DB	'GPU.StatPollFreq', 00H
	ORG $+3
$SG428308 DB	'ImGui.FontScale', 00H
$SG428309 DB	'mem', 00H
$SG428310 DB	'GetUpdate', 00H
	ORG $+2
$SG428312 DB	'T', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H
	DB	'o', 00H, 'f', 00H, ' ', 00H, 'Z', 00H, 'e', 00H, 's', 00H, 't'
	DB	00H, 'i', 00H, 'r', 00H, 'i', 00H, 'a', 00H, '.', 00H, 'e', 00H
	DB	'x', 00H, 'e', 00H, 00H, 00H
$SG428313 DB	'TargetFPS %f', 00H
	ORG $+3
$SG178458 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG428316 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG428319 DB	'O', 00H, 'S', 00H, 'D', 00H, ' ', 00H, 'P', 00H, 'u', 00H
	DB	'm', 00H, 'p', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'u', 00H, 't'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 00H, 00H
$SG428324 DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	'!', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG428320 DB	'[', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, 'O', 00H, 'S', 00H, 'D', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'p', 00H, 'a', 00H, 'w', 00H, 'n', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'P', 00H, 'u', 00H, 'm', 00H, 'p'
	DB	00H, ' ', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, '.', 00H, '.', 00H, '.', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG428323 DB	't', 00H, 'i', 00H, 'd', 00H, '=', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, '0', 00H, '4', 00H, 'x', 00H, ',', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'a', 00H
	DB	'l', 00H, '=', 00H, '%', 00H, '0', 00H, '4', 00H, '.', 00H, '0'
	DB	00H, '1', 00H, 'f', 00H, ' ', 00H, 'm', 00H, 's', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+2
$SG430378 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'K', 00H, ' ', 00H, 'D', 00H, 'u', 00H, 'm'
	DB	00H, 'm', 00H, 'y', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG428336 DB	'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, '\', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 00H, 00H
$SG428338 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG428340 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG178505 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG428376 DB	'\', 00H, 'M', 00H, 'y', 00H, ' ', 00H, 'M', 00H, 'o', 00H
	DB	'd', 00H, 's', 00H, '\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG428377 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, '3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG178552 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG428417 DB	'\', 00H, 'M', 00H, 'y', 00H, ' ', 00H, 'M', 00H, 'o', 00H
	DB	'd', 00H, 's', 00H, '\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, 00H, 00H
$SG428418 DB	'\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG428421 DB	'\', 00H, 00H, 00H
$SG428422 DB	'\', 00H, 00H, 00H
$SG178599 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e'
	DB	00H, 00H, 00H
?IID_ID3D11Device2@@3U_GUID@@B DD 09d06dffaH		; IID_ID3D11Device2
	DW	0d1e5H
	DW	04d07H
	DB	083H
	DB	0a8H
	DB	01bH
	DB	0b1H
	DB	023H
	DB	0f2H
	DB	0f8H
	DB	041H
?IID_ID3D11Device3@@3U_GUID@@B DD 0a05c8c37H		; IID_ID3D11Device3
	DW	0d2c6H
	DW	04732H
	DB	0b3H
	DB	0a0H
	DB	09cH
	DB	0e0H
	DB	0b0H
	DB	0dcH
	DB	09aH
	DB	0e6H
?IID_ID3D11Device4@@3U_GUID@@B DD 08992ab71H		; IID_ID3D11Device4
	DW	02e6H
	DW	04b8dH
	DB	0baH
	DB	048H
	DB	0b0H
	DB	056H
	DB	0dcH
	DB	0daH
	DB	042H
	DB	0c4H
?IID_ID3D11Device5@@3U_GUID@@B DD 08ffde202H		; IID_ID3D11Device5
	DW	0a0e7H
	DW	045dfH
	DB	09eH
	DB	01H
	DB	0e8H
	DB	037H
	DB	080H
	DB	01bH
	DB	05eH
	DB	0a0H
$SG178646 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG427485 DB	'I', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H
	DB	'D', 00H, 00H, 00H
$SG178693 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG178740 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H
$SG178745 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG430685 DB	'[', 00H, ' ', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, '*', 00H, '*', 00H, '*', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, ' ', 00H, 'D', 00H, 'L', 00H, 'L', 00H, ' ', 00H
	DB	'S', 00H, 'h', 00H, 'u', 00H, 't', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'n', 00H, ' ', 00H, '*', 00H, '*', 00H, '*', 00H, 00H, 00H
	ORG $+2
$SG430689 DB	'D', 00H, 'a', 00H, 'r', 00H, 'k', 00H, 'S', 00H, 'o', 00H
	DB	'u', 00H, 'l', 00H, 's', 00H, 'I', 00H, 'I', 00H, 'I', 00H, '.'
	DB	00H, 'e', 00H, 'x', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG430690 DB	'F', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, '4', 00H, '.', 00H, 'e', 00H, 'x', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG430691 DB	'F', 00H, 'F', 00H, 'X', 00H, '.', 00H, 'e', 00H, 'x', 00H
	DB	'e', 00H, 00H, 00H
$SG430692 DB	'F', 00H, 'F', 00H, 'X', 00H, '-', 00H, '2', 00H, '.', 00H
	DB	'e', 00H, 'x', 00H, 'e', 00H, 00H, 00H
$SG430693 DB	'd', 00H, 'i', 00H, 's', 00H, '1', 00H, '_', 00H, 's', 00H
	DB	't', 00H, '.', 00H, 'e', 00H, 'x', 00H, 'e', 00H, 00H, 00H
$SG430694 DB	'[', 00H, ' ', 00H, 'G', 00H, 'P', 00H, 'U', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'a', 00H, 't', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'h', 00H, 'u', 00H, 't', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n'
	DB	00H, ' ', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'n', 00H
	DB	'o', 00H, 's', 00H, 't', 00H, 'i', 00H, 'c', 00H, 's', 00H, ' '
	DB	00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	00H, 00H
	ORG $+2
$SG428646 DB	's', 00H, 't', 00H, 'e', 00H, 'a', 00H, 'm', 00H, '_', 00H
	DB	'a', 00H, 'p', 00H, 'i', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H
$SG430695 DB	'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, ' ', 00H
	DB	'(', 00H, '%', 00H, '4', 00H, 'u', 00H, ' ', 00H, 'm', 00H, 's'
	DB	00H, ')', 00H, 0aH, 00H, 00H, 00H
$SG178792 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG430697 DB	'[', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, 'O', 00H, 'S', 00H, 'D', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'h', 00H, 'u', 00H, 't', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n'
	DB	00H, ' ', 00H, 'P', 00H, 'u', 00H, 'm', 00H, 'p', 00H, ' ', 00H
	DB	'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG430698 DB	'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+2
$SG430699 DB	'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG430700 DB	'C', 00H, 'P', 00H, 'U', 00H, ' ', 00H, 'M', 00H, 'o', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG430701 DB	'D', 00H, 'i', 00H, 's', 00H, 'k', 00H, ' ', 00H, 'M', 00H
	DB	'o', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H
	DB	00H
	ORG $+2
$SG430702 DB	'P', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG430704 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG430706 DB	'd', 00H, 's', 00H, '3', 00H, 't', 00H, '.', 00H, 'e', 00H
	DB	'x', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG430707 DB	'[', 00H, ' ', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'a', 00H, 'v', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'p'
	DB	00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 'c', 00H, 'e', 00H, 's', 00H, ' ', 00H, 't', 00H, 'o'
	DB	00H, ' ', 00H, '%', 00H, '1', 00H, '0', 00H, 's', 00H, '.', 00H
	DB	'i', 00H, 'n', 00H, 'i', 00H, '.', 00H, '.', 00H, '.', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+2
$SG430708 DB	'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, ' ', 00H
	DB	'(', 00H, '%', 00H, '4', 00H, 'u', 00H, ' ', 00H, 'm', 00H, 's'
	DB	00H, ')', 00H, 0aH, 00H, 00H, 00H
$SG178839 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H
	DB	00H
	ORG $+2
$SG430709 DB	'[', 00H, ' ', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'h', 00H, 'u', 00H, 't', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n'
	DB	00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, '.', 00H, '.', 00H, '.', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	00H, 00H
	ORG $+2
$SG430710 DB	'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, ' ', 00H
	DB	'(', 00H, '%', 00H, '4', 00H, 'u', 00H, ' ', 00H, 'm', 00H, 's'
	DB	00H, ')', 00H, 0aH, 00H, 00H, 00H
$SG430711 DB	'[', 00H, ' ', 00H, 'W', 00H, 'M', 00H, 'I', 00H, ' ', 00H
	DB	'P', 00H, 'e', 00H, 'r', 00H, 'f', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'h', 00H, 'u', 00H, 't', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n'
	DB	00H, ' ', 00H, 'W', 00H, 'M', 00H, 'I', 00H, ' ', 00H, 'W', 00H
	DB	'b', 00H, 'e', 00H, 'm', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '.', 00H, '.', 00H, '.', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	00H, 00H
	ORG $+2
$SG430712 DB	'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, ' ', 00H
	DB	'(', 00H, '%', 00H, '4', 00H, 'u', 00H, ' ', 00H, 'm', 00H, 's'
	DB	00H, ')', 00H, 0aH, 00H, 00H, 00H
$SG430714 DB	'[', 00H, ' ', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'C', 00H, 'u', 00H, 's', 00H, 't', 00H, 'o', 00H, 'm', 00H
	DB	' ', 00H, '%', 00H, 's', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, ' ', 00H, 'D', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'c', 00H
	DB	'h', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '(', 00H, 'p', 00H, 'i'
	DB	00H, 'd', 00H, '=', 00H, '0', 00H, 'x', 00H, '%', 00H, '0', 00H
	DB	'4', 00H, 'x', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG427688 DB	'S', 00H, '_', 00H, 'O', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG427690 DB	'S', 00H, '_', 00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H
	DB	'E', 00H, 00H, 00H
$SG427692 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'D', 00H, 'E'
	DB	00H, 'V', 00H, 'I', 00H, 'C', 00H, 'E', 00H, '_', 00H, 'H', 00H
	DB	'U', 00H, 'N', 00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG427694 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'D', 00H, 'E'
	DB	00H, 'V', 00H, 'I', 00H, 'C', 00H, 'E', 00H, '_', 00H, 'R', 00H
	DB	'E', 00H, 'M', 00H, 'O', 00H, 'V', 00H, 'E', 00H, 'D', 00H, 00H
	DB	00H
$SG427696 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'D', 00H, 'E'
	DB	00H, 'V', 00H, 'I', 00H, 'C', 00H, 'E', 00H, '_', 00H, 'R', 00H
	DB	'E', 00H, 'S', 00H, 'E', 00H, 'T', 00H, 00H, 00H
$SG428721 DB	'\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'K', 00H, '.', 00H, 'c', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG427698 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'D', 00H, 'R'
	DB	00H, 'I', 00H, 'V', 00H, 'E', 00H, 'R', 00H, '_', 00H, 'I', 00H
	DB	'N', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'N', 00H, 'A', 00H, 'L'
	DB	00H, '_', 00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG427704 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'I', 00H, 'N'
	DB	00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H, '_', 00H
	DB	'C', 00H, 'A', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG428730 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '\', 00H, 00H, 00H
$SG427700 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'F', 00H, 'R'
	DB	00H, 'A', 00H, 'M', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H
	DB	'A', 00H, 'T', 00H, 'I', 00H, 'S', 00H, 'T', 00H, 'I', 00H, 'C'
	DB	00H, 'S', 00H, '_', 00H, 'D', 00H, 'I', 00H, 'S', 00H, 'J', 00H
	DB	'O', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG428726 DB	'\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'K', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG427706 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'M', 00H, 'O'
	DB	00H, 'R', 00H, 'E', 00H, '_', 00H, 'D', 00H, 'A', 00H, 'T', 00H
	DB	'A', 00H, 00H, 00H
	ORG $+2
$SG427702 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'G', 00H, 'R'
	DB	00H, 'A', 00H, 'P', 00H, 'H', 00H, 'I', 00H, 'C', 00H, 'S', 00H
	DB	'_', 00H, 'V', 00H, 'I', 00H, 'D', 00H, 'P', 00H, 'N', 00H, '_'
	DB	00H, 'S', 00H, 'O', 00H, 'U', 00H, 'R', 00H, 'C', 00H, 'E', 00H
	DB	'_', 00H, 'I', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E'
	DB	00H, 00H, 00H
$SG428727 DB	'\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'K', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG428731 DB	'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '\', 00H, 00H, 00H
$SG428732 DB	'R', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	'3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG427708 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'N', 00H, 'O'
	DB	00H, 'N', 00H, 'E', 00H, 'X', 00H, 'C', 00H, 'L', 00H, 'U', 00H
	DB	'S', 00H, 'I', 00H, 'V', 00H, 'E', 00H, 00H, 00H
$SG427710 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'N', 00H, 'O'
	DB	00H, 'T', 00H, '_', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'R', 00H
	DB	'E', 00H, 'N', 00H, 'T', 00H, 'L', 00H, 'Y', 00H, '_', 00H, 'A'
	DB	00H, 'V', 00H, 'A', 00H, 'I', 00H, 'L', 00H, 'A', 00H, 'B', 00H
	DB	'L', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG427712 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'N', 00H, 'O'
	DB	00H, 'T', 00H, '_', 00H, 'F', 00H, 'O', 00H, 'U', 00H, 'N', 00H
	DB	'D', 00H, 00H, 00H
	ORG $+2
$SG428737 DB	'w', 00H, 00H, 00H
$SG428738 DB	'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, '/', 00H, 'g', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, '_', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, '.', 00H, 'l', 00H, 'o', 00H
	DB	'g', 00H, 00H, 00H
	ORG $+2
$SG428739 DB	'I', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H
	DB	'D', 00H, 00H, 00H
$SG428740 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG427714 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'R', 00H, 'E'
	DB	00H, 'M', 00H, 'O', 00H, 'T', 00H, 'E', 00H, '_', 00H, 'C', 00H
	DB	'L', 00H, 'I', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'D'
	DB	00H, 'I', 00H, 'S', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 'N', 00H
	DB	'E', 00H, 'C', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 00H, 00H
$SG427716 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'R', 00H, 'E'
	DB	00H, 'M', 00H, 'O', 00H, 'T', 00H, 'E', 00H, '_', 00H, 'O', 00H
	DB	'U', 00H, 'T', 00H, 'O', 00H, 'F', 00H, 'M', 00H, 'E', 00H, 'M'
	DB	00H, 'O', 00H, 'R', 00H, 'Y', 00H, 00H, 00H
$SG428741 DB	'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, '/', 00H, '%', 00H
	DB	's', 00H, '.', 00H, 'l', 00H, 'o', 00H, 'g', 00H, 00H, 00H
$SG428742 DB	'w', 00H, 00H, 00H
$SG427718 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'W', 00H, 'A'
	DB	00H, 'S', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'I', 00H, 'L', 00H
	DB	'L', 00H, '_', 00H, 'D', 00H, 'R', 00H, 'A', 00H, 'W', 00H, 'I'
	DB	00H, 'N', 00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG178886 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, 00H, 00H
$SG428743 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG428744 DB	'%', 00H, 's', 00H, '.', 00H, 'l', 00H, 'o', 00H, 'g', 00H
	DB	' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG427720 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'U', 00H, 'N'
	DB	00H, 'S', 00H, 'U', 00H, 'P', 00H, 'P', 00H, 'O', 00H, 'R', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG428746 DB	'w', 00H, 00H, 00H
$SG427722 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'A', 00H, 'C'
	DB	00H, 'C', 00H, 'E', 00H, 'S', 00H, 'S', 00H, '_', 00H, 'L', 00H
	DB	'O', 00H, 'S', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG428747 DB	'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, '\', 00H, 'd', 00H
	DB	'x', 00H, 'g', 00H, 'i', 00H, '_', 00H, 'b', 00H, 'u', 00H, 'd'
	DB	00H, 'g', 00H, 'e', 00H, 't', 00H, '.', 00H, 'l', 00H, 'o', 00H
	DB	'g', 00H, 00H, 00H
	ORG $+2
$SG428748 DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG427724 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'W', 00H, 'A'
	DB	00H, 'I', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M', 00H
	DB	'E', 00H, 'O', 00H, 'U', 00H, 'T', 00H, 00H, 00H
$SG428749 DB	'>', 00H, '>', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H
	DB	')', 00H, ' ', 00H, '[', 00H, '%', 00H, 's', 00H, ']', 00H, ' '
	DB	00H, '<', 00H, '<', 00H, 00H, 00H
$SG428751 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG427726 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'S', 00H, 'E'
	DB	00H, 'S', 00H, 'S', 00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H
	DB	'D', 00H, 'I', 00H, 'S', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 'N'
	DB	00H, 'E', 00H, 'C', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 00H, 00H
$SG177870 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG428752 DB	'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'p', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'f'
	DB	00H, 'r', 00H, 'o', 00H, 'm', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	'.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG428756 DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	'!', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG427728 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'R', 00H, 'E'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'_', 00H, 'T', 00H, 'O', 00H, '_', 00H, 'O', 00H, 'U', 00H, 'T'
	DB	00H, 'P', 00H, 'U', 00H, 'T', 00H, '_', 00H, 'S', 00H, 'T', 00H
	DB	'A', 00H, 'L', 00H, 'E', 00H, 00H, 00H
$SG427730 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'C', 00H, 'A'
	DB	00H, 'N', 00H, 'N', 00H, 'O', 00H, 'T', 00H, '_', 00H, 'P', 00H
	DB	'R', 00H, 'O', 00H, 'T', 00H, 'E', 00H, 'C', 00H, 'T', 00H, '_'
	DB	00H, 'C', 00H, 'O', 00H, 'N', 00H, 'T', 00H, 'E', 00H, 'N', 00H
	DB	'T', 00H, 00H, 00H
$SG428755 DB	'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+2
$SG427732 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'A', 00H, 'C'
	DB	00H, 'C', 00H, 'E', 00H, 'S', 00H, 'S', 00H, '_', 00H, 'D', 00H
	DB	'E', 00H, 'N', 00H, 'I', 00H, 'E', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG428757 DB	'd', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, '_', 00H, 00H, 00H
	ORG $+2
$SG428758 DB	'.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG427734 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'N', 00H, 'A'
	DB	00H, 'M', 00H, 'E', 00H, '_', 00H, 'A', 00H, 'L', 00H, 'R', 00H
	DB	'E', 00H, 'A', 00H, 'D', 00H, 'Y', 00H, '_', 00H, 'E', 00H, 'X'
	DB	00H, 'I', 00H, 'S', 00H, 'T', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG428760 DB	'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u'
	DB	00H, 'l', 00H, 't', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'e', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'o', 00H, 'm', 00H
	DB	' ', 00H, '%', 00H, 's', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'i'
	DB	00H, '.', 00H, '.', 00H, '.', 00H, ' ', 00H, 00H, 00H
$SG427736 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'S', 00H, 'D'
	DB	00H, 'K', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H
	DB	'O', 00H, 'N', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'M'
	DB	00H, 'I', 00H, 'S', 00H, 'S', 00H, 'I', 00H, 'N', 00H, 'G', 00H
	DB	00H, 00H
	ORG $+2
$SG427738 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'D', 00H
	DB	'D', 00H, 'I', 00H, '_', 00H, 'E', 00H, 'R', 00H, 'R', 00H, '_'
	DB	00H, 'W', 00H, 'A', 00H, 'S', 00H, 'S', 00H, 'T', 00H, 'I', 00H
	DB	'L', 00H, 'L', 00H, 'D', 00H, 'R', 00H, 'A', 00H, 'W', 00H, 'I'
	DB	00H, 'N', 00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG428763 DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	'!', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG428764 DB	'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+2
$SG427740 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'D', 00H
	DB	'D', 00H, 'I', 00H, '_', 00H, 'E', 00H, 'R', 00H, 'R', 00H, '_'
	DB	00H, 'U', 00H, 'N', 00H, 'S', 00H, 'U', 00H, 'P', 00H, 'P', 00H
	DB	'O', 00H, 'R', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG428765 DB	' ', 00H, ' ', 00H, '>', 00H, '>', 00H, ' ', 00H, 'W', 00H
	DB	'r', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'I', 00H
	DB	'N', 00H, 'I', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, ',', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'c', 00H, 'a', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n'
	DB	00H, 'e', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'e', 00H, 'd', 00H, '.', 00H, '.', 00H, '.', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+2
$SG428766 DB	'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+2
$SG427742 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'D', 00H
	DB	'D', 00H, 'I', 00H, '_', 00H, 'E', 00H, 'R', 00H, 'R', 00H, '_'
	DB	00H, 'N', 00H, 'O', 00H, 'N', 00H, 'E', 00H, 'X', 00H, 'C', 00H
	DB	'L', 00H, 'U', 00H, 'S', 00H, 'I', 00H, 'V', 00H, 'E', 00H, 00H
	DB	00H
$SG427744 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'O'
	DB	00H, 'C', 00H, 'C', 00H, 'L', 00H, 'U', 00H, 'D', 00H, 'E', 00H
	DB	'D', 00H, 00H, 00H
	ORG $+2
$SG427746 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'U'
	DB	00H, 'N', 00H, 'O', 00H, 'C', 00H, 'C', 00H, 'L', 00H, 'U', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG427748 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'C'
	DB	00H, 'L', 00H, 'I', 00H, 'P', 00H, 'P', 00H, 'E', 00H, 'D', 00H
	DB	00H, 00H
$SG427750 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'N'
	DB	00H, 'O', 00H, '_', 00H, 'R', 00H, 'E', 00H, 'D', 00H, 'I', 00H
	DB	'R', 00H, 'E', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'O', 00H, 'N'
	DB	00H, 00H, 00H
	ORG $+2
$SG427752 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'N'
	DB	00H, 'O', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'S', 00H, 'K', 00H
	DB	'T', 00H, 'O', 00H, 'P', 00H, '_', 00H, 'A', 00H, 'C', 00H, 'C'
	DB	00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
$SG428778 DB	'%', 00H, 's', 00H, '\', 00H, 'M', 00H, 'y', 00H, ' ', 00H
	DB	'M', 00H, 'o', 00H, 'd', 00H, 's', 00H, '\', 00H, 'S', 00H, 'p'
	DB	00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H
	DB	'\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a'
	DB	00H, 'l', 00H, 'K', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG427758 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'M'
	DB	00H, 'O', 00H, 'D', 00H, 'E', 00H, '_', 00H, 'C', 00H, 'H', 00H
	DB	'A', 00H, 'N', 00H, 'G', 00H, 'E', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG427754 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'G'
	DB	00H, 'R', 00H, 'A', 00H, 'P', 00H, 'H', 00H, 'I', 00H, 'C', 00H
	DB	'S', 00H, '_', 00H, 'V', 00H, 'I', 00H, 'D', 00H, 'P', 00H, 'N'
	DB	00H, '_', 00H, 'S', 00H, 'O', 00H, 'U', 00H, 'R', 00H, 'C', 00H
	DB	'E', 00H, '_', 00H, 'I', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S'
	DB	00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG430831 DB	'%', 00H, 's', 00H, 'C', 00H, 'E', 00H, 'G', 00H, 'U', 00H
	DB	'I', 00H, '\', 00H, 'b', 00H, 'i', 00H, 'n', 00H, '\', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, '3', 00H, '2', 00H, 00H, 00H
$SG427756 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'D'
	DB	00H, 'D', 00H, 'A', 00H, '_', 00H, 'W', 00H, 'A', 00H, 'S', 00H
	DB	'_', 00H, 'S', 00H, 'T', 00H, 'I', 00H, 'L', 00H, 'L', 00H, '_'
	DB	00H, 'D', 00H, 'R', 00H, 'A', 00H, 'W', 00H, 'I', 00H, 'N', 00H
	DB	'G', 00H, 00H, 00H
$SG428787 DB	'\', 00H, 'M', 00H, 'y', 00H, ' ', 00H, 'M', 00H, 'o', 00H
	DB	'd', 00H, 's', 00H, '\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, 00H, 00H
$SG428782 DB	'[', 00H, 'D', 00H, 'L', 00H, 'L', 00H, ' ', 00H, 'L', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, 'M', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 'b', 00H, 'o'
	DB	00H, 'o', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'S', 00H
	DB	't', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, ':', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H
	DB	00H, 00H
$SG430837 DB	'\', 00H, 'C', 00H, 'E', 00H, 'G', 00H, 'U', 00H, 'I', 00H
	DB	'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, '-', 00H, '0', 00H, '.'
	DB	00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG428783 DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG428784 DB	'%', 00H, 's', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG430836 DB	'C', 00H, 'E', 00H, 'G', 00H, 'U', 00H, 'I', 00H, '_', 00H
	DB	'P', 00H, 'A', 00H, 'R', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_'
	DB	00H, 'D', 00H, 'I', 00H, 'R', 00H, '=', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
$SG428790 DB	'\', 00H, 'M', 00H, 'y', 00H, ' ', 00H, 'M', 00H, 'o', 00H
	DB	'd', 00H, 's', 00H, '\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, 00H, 00H
$SG427760 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'A', 00H, 'T', 00H, 'U', 00H, 'S', 00H, '_', 00H, 'M'
	DB	00H, 'O', 00H, 'D', 00H, 'E', 00H, '_', 00H, 'C', 00H, 'H', 00H
	DB	'A', 00H, 'N', 00H, 'G', 00H, 'E', 00H, '_', 00H, 'I', 00H, 'N'
	DB	00H, '_', 00H, 'P', 00H, 'R', 00H, 'O', 00H, 'G', 00H, 'R', 00H
	DB	'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
$SG430834 DB	'%', 00H, 's', 00H, '\', 00H, 'M', 00H, 'y', 00H, ' ', 00H
	DB	'M', 00H, 'o', 00H, 'd', 00H, 's', 00H, '\', 00H, 'S', 00H, 'p'
	DB	00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H
	DB	'\', 00H, 'C', 00H, 'E', 00H, 'G', 00H, 'U', 00H, 'I', 00H, '\'
	DB	00H, 'b', 00H, 'i', 00H, 'n', 00H, '\', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, '3', 00H, '2', 00H, 00H, 00H
$SG427762 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '_', 00H
	DB	'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'F'
	DB	00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'N', 00H, 'O', 00H
	DB	'T', 00H, '_', 00H, 'F', 00H, 'O', 00H, 'U', 00H, 'N', 00H, 'D'
	DB	00H, 00H, 00H
	ORG $+2
$SG430835 DB	'C', 00H, 'E', 00H, 'G', 00H, 'U', 00H, 'I', 00H, '_', 00H
	DB	'P', 00H, 'A', 00H, 'R', 00H, 'E', 00H, 'N', 00H, 'T', 00H, '_'
	DB	00H, 'D', 00H, 'I', 00H, 'R', 00H, '=', 00H, '%', 00H, 's', 00H
	DB	'\', 00H, 'M', 00H, 'y', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'd'
	DB	00H, 's', 00H, '\', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'K', 00H, '\', 00H, 00H, 00H
$SG430840 DB	'k', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'e', 00H, 'l', 00H
	DB	'3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG428788 DB	'%', 00H, 's', 00H, '\', 00H, 'P', 00H, 'l', 00H, 'u', 00H
	DB	'g', 00H, 'I', 00H, 'n', 00H, 's', 00H, '\', 00H, 'T', 00H, 'h'
	DB	00H, 'i', 00H, 'r', 00H, 'd', 00H, 'P', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'd', 00H, 'g', 00H, 'V', 00H, 'o'
	DB	00H, 'o', 00H, 'd', 00H, 'o', 00H, 'o', 00H, '\', 00H, 'd', 00H
	DB	'3', 00H, 'd', 00H, '8', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H
$SG427764 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '_', 00H
	DB	'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'T'
	DB	00H, 'O', 00H, 'O', 00H, '_', 00H, 'M', 00H, 'A', 00H, 'N', 00H
	DB	'Y', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'I', 00H, 'Q', 00H, 'U'
	DB	00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'T', 00H
	DB	'E', 00H, '_', 00H, 'O', 00H, 'B', 00H, 'J', 00H, 'E', 00H, 'C'
	DB	00H, 'T', 00H, 'S', 00H, 00H, 00H
$SG430841 DB	'RemoveDllDirectory', 00H
	ORG $+1
$SG427766 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '_', 00H
	DB	'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'T'
	DB	00H, 'O', 00H, 'O', 00H, '_', 00H, 'M', 00H, 'A', 00H, 'N', 00H
	DB	'Y', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'I', 00H, 'Q', 00H, 'U'
	DB	00H, 'E', 00H, '_', 00H, 'V', 00H, 'I', 00H, 'E', 00H, 'W', 00H
	DB	'_', 00H, 'O', 00H, 'B', 00H, 'J', 00H, 'E', 00H, 'C', 00H, 'T'
	DB	00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG430839 DB	'AddDllDirectory', 00H
$SG430842 DB	'k', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'e', 00H, 'l', 00H
	DB	'3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG428791 DB	'%', 00H, 's', 00H, '\', 00H, 'P', 00H, 'l', 00H, 'u', 00H
	DB	'g', 00H, 'I', 00H, 'n', 00H, 's', 00H, '\', 00H, 'T', 00H, 'h'
	DB	00H, 'i', 00H, 'r', 00H, 'd', 00H, 'P', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'd', 00H, 'g', 00H, 'V', 00H, 'o'
	DB	00H, 'o', 00H, 'd', 00H, 'o', 00H, 'o', 00H, '\', 00H, 'd', 00H
	DB	'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, '.', 00H, 'd', 00H, 'l'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG428794 DB	'\', 00H, 00H, 00H
$SG428792 DB	' ', 00H, 'W', 00H, 'o', 00H, 'r', 00H, 'k', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, ':', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG427768 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, '_', 00H
	DB	'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'D'
	DB	00H, 'E', 00H, 'F', 00H, 'E', 00H, 'R', 00H, 'R', 00H, 'E', 00H
	DB	'D', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 'T', 00H, 'E'
	DB	00H, 'X', 00H, 'T', 00H, '_', 00H, 'M', 00H, 'A', 00H, 'P', 00H
	DB	'_', 00H, 'W', 00H, 'I', 00H, 'T', 00H, 'H', 00H, 'O', 00H, 'U'
	DB	00H, 'T', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'I', 00H, 'T', 00H
	DB	'I', 00H, 'A', 00H, 'L', 00H, '_', 00H, 'D', 00H, 'I', 00H, 'S'
	DB	00H, 'C', 00H, 'A', 00H, 'R', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG427770 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'W', 00H, 'R', 00H, 'O', 00H, 'N', 00H, 'G', 00H, 'T'
	DB	00H, 'E', 00H, 'X', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H
	DB	'F', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, 00H
	DB	00H
$SG428793 DB	' ', 00H, 'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, ':', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG430843 DB	'SetDefaultDllDirectories', 00H
	ORG $+3
$SG428795 DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG430844 DB	'k', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'e', 00H, 'l', 00H
	DB	'3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG430847 DB	'C', 00H, 'E', 00H, 'G', 00H, 'U', 00H, 'I', 00H, '_', 00H
	DB	'M', 00H, 'O', 00H, 'D', 00H, 'U', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'D', 00H, 'I', 00H, 'R', 00H, '=', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
$SG428803 DB	' ', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'a'
	DB	00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	'.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, 00H
	DB	00H
$SG427772 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'U', 00H, 'N', 00H, 'S', 00H, 'U', 00H, 'P', 00H, 'P'
	DB	00H, 'O', 00H, 'R', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 'C', 00H
	DB	'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'O', 00H, 'P', 00H, 'E'
	DB	00H, 'R', 00H, 'A', 00H, 'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H
	DB	00H, 00H
	ORG $+2
$SG430849 DB	'CEGUIBase-0.dll', 00H
$SG427780 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'T', 00H, 'O', 00H, 'O', 00H, 'M', 00H, 'A', 00H, 'N'
	DB	00H, 'Y', 00H, 'O', 00H, 'P', 00H, 'E', 00H, 'R', 00H, 'A', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG430846 DB	'[', 00H, ' ', 00H, ' ', 00H, 'C', 00H, 'E', 00H, 'G', 00H
	DB	'U', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'C', 00H, 'E', 00H, 'G', 00H, 'U'
	DB	00H, 'I', 00H, ':', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H
	DB	')', 00H, 00H, 00H
$SG427774 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'U', 00H, 'N', 00H, 'S', 00H, 'U', 00H, 'P', 00H, 'P'
	DB	00H, 'O', 00H, 'R', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 'C', 00H
	DB	'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'A', 00H, 'R', 00H, 'G'
	DB	00H, 00H, 00H
	ORG $+2
$SG430853 DB	'CEGUIOpenGLRenderer-0.dll', 00H
	ORG $+2
$SG427776 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'U', 00H, 'N', 00H, 'S', 00H, 'U', 00H, 'P', 00H, 'P'
	DB	00H, 'O', 00H, 'R', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 'A', 00H
	DB	'L', 00H, 'P', 00H, 'H', 00H, 'A', 00H, 'O', 00H, 'P', 00H, 'E'
	DB	00H, 'R', 00H, 'A', 00H, 'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H
	DB	00H, 00H
	ORG $+2
$SG428801 DB	' ', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'x'
	DB	00H, 'y', 00H, ' ', 00H, '%', 00H, 's', 00H, '.', 00H, 'd', 00H
	DB	'l', 00H, 'l', 00H, ':', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+2
$SG427778 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'U', 00H, 'N', 00H, 'S', 00H, 'U', 00H, 'P', 00H, 'P'
	DB	00H, 'O', 00H, 'R', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 'A', 00H
	DB	'L', 00H, 'P', 00H, 'H', 00H, 'A', 00H, 'A', 00H, 'R', 00H, 'G'
	DB	00H, 00H, 00H
	ORG $+2
$SG427784 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'U', 00H, 'N', 00H, 'S', 00H, 'U', 00H, 'P', 00H, 'P'
	DB	00H, 'O', 00H, 'R', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 'F', 00H
	DB	'A', 00H, 'C', 00H, 'T', 00H, 'O', 00H, 'R', 00H, 'V', 00H, 'A'
	DB	00H, 'L', 00H, 'U', 00H, 'E', 00H, 00H, 00H
$SG427782 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 'F', 00H, 'L', 00H, 'I'
	DB	00H, 'C', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'G', 00H, 'T', 00H
	DB	'E', 00H, 'X', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, 'F'
	DB	00H, 'I', 00H, 'L', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 00H, 00H
$SG428808 DB	' ', 00H, '(', 00H, '%', 00H, 's', 00H, ')', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+2
$SG428809 DB	' ', 00H, 'F', 00H, 'A', 00H, 'I', 00H, 'L', 00H, 'E', 00H
	DB	'D', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H, ')', 00H, '!'
	DB	00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG427786 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 'F', 00H, 'L', 00H, 'I'
	DB	00H, 'C', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'G', 00H, 'R', 00H
	DB	'E', 00H, 'N', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'S', 00H, 'T'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, 00H, 00H
$SG430859 DB	'CEGUIDirect3D9Renderer-0.dll', 00H
	ORG $+3
$SG430863 DB	'CEGUIDirect3D11Renderer-0.dll', 00H
	ORG $+2
$SG428816 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG428811 DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG430865 DB	't', 00H, 'b', 00H, 'f', 00H, 'i', 00H, 'x', 00H, '.', 00H
	DB	'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG427788 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'U', 00H, 'N', 00H, 'S', 00H, 'U', 00H, 'P', 00H, 'P'
	DB	00H, 'O', 00H, 'R', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 'T', 00H
	DB	'E', 00H, 'X', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, 'F'
	DB	00H, 'I', 00H, 'L', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 00H, 00H
$SG427790 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 'F', 00H, 'L', 00H, 'I'
	DB	00H, 'C', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'G', 00H, 'T', 00H
	DB	'E', 00H, 'X', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, 'P'
	DB	00H, 'A', 00H, 'L', 00H, 'E', 00H, 'T', 00H, 'T', 00H, 'E', 00H
	DB	00H, 00H
	ORG $+2
$SG427792 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'D', 00H, 'R', 00H, 'I', 00H, 'V', 00H, 'E', 00H, 'R'
	DB	00H, 'I', 00H, 'N', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'N', 00H
	DB	'A', 00H, 'L', 00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R'
	DB	00H, 00H, 00H
	ORG $+2
$SG428817 DB	'.', 00H, 'l', 00H, 'o', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG427794 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'N', 00H, 'O', 00H, 'T', 00H, 'F', 00H, 'O', 00H, 'U'
	DB	00H, 'N', 00H, 'D', 00H, 00H, 00H
$SG430867 DB	'First-frame Done', 00H
	ORG $+3
$SG427796 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'M', 00H, 'O', 00H, 'R', 00H, 'E', 00H, 'D', 00H, 'A'
	DB	00H, 'T', 00H, 'A', 00H, 00H, 00H
$SG177941 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H
$SG427798 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'D', 00H, 'E', 00H, 'V', 00H, 'I', 00H, 'C', 00H, 'E'
	DB	00H, 'L', 00H, 'O', 00H, 'S', 00H, 'T', 00H, 00H, 00H
$SG427800 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'D', 00H, 'E', 00H, 'V', 00H, 'I', 00H, 'C', 00H, 'E'
	DB	00H, 'N', 00H, 'O', 00H, 'T', 00H, 'R', 00H, 'E', 00H, 'S', 00H
	DB	'E', 00H, 'T', 00H, 00H, 00H
$SG427802 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'N', 00H, 'O', 00H, 'T', 00H, 'A', 00H, 'V', 00H, 'A'
	DB	00H, 'I', 00H, 'L', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H
	DB	00H, 00H
$SG427804 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'O', 00H, 'U', 00H, 'T', 00H, 'O', 00H, 'F', 00H, 'V'
	DB	00H, 'I', 00H, 'D', 00H, 'E', 00H, 'O', 00H, 'M', 00H, 'E', 00H
	DB	'M', 00H, 'O', 00H, 'R', 00H, 'Y', 00H, 00H, 00H
$SG427806 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'I', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I'
	DB	00H, 'D', 00H, 'D', 00H, 'E', 00H, 'V', 00H, 'I', 00H, 'C', 00H
	DB	'E', 00H, 00H, 00H
	ORG $+2
$SG427808 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'I', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I'
	DB	00H, 'D', 00H, 'C', 00H, 'A', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG427810 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'D', 00H, 'R', 00H, 'I', 00H, 'V', 00H, 'E', 00H, 'R'
	DB	00H, 'I', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H
	DB	'D', 00H, 'C', 00H, 'A', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG427812 DB	'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'R', 00H, 'R', 00H
	DB	'_', 00H, 'W', 00H, 'A', 00H, 'S', 00H, 'S', 00H, 'T', 00H, 'I'
	DB	00H, 'L', 00H, 'L', 00H, 'D', 00H, 'R', 00H, 'A', 00H, 'W', 00H
	DB	'I', 00H, 'N', 00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG427814 DB	'D', 00H, '3', 00H, 'D', 00H, 'O', 00H, 'K', 00H, '_', 00H
	DB	'N', 00H, 'O', 00H, 'A', 00H, 'U', 00H, 'T', 00H, 'O', 00H, 'G'
	DB	00H, 'E', 00H, 'N', 00H, 00H, 00H
$SG427816 DB	'E', 00H, '_', 00H, 'F', 00H, 'A', 00H, 'I', 00H, 'L', 00H
	DB	00H, 00H
	ORG $+2
$SG427818 DB	'E', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'V', 00H, 'A', 00H
	DB	'L', 00H, 'I', 00H, 'D', 00H, 'A', 00H, 'R', 00H, 'G', 00H, 00H
	DB	00H
	ORG $+2
$SG427820 DB	'E', 00H, '_', 00H, 'O', 00H, 'U', 00H, 'T', 00H, 'O', 00H
	DB	'F', 00H, 'M', 00H, 'E', 00H, 'M', 00H, 'O', 00H, 'R', 00H, 'Y'
	DB	00H, 00H, 00H
$SG427822 DB	'E', 00H, '_', 00H, 'P', 00H, 'O', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, 'E', 00H, 'R', 00H, 00H, 00H
$SG427824 DB	'E', 00H, '_', 00H, 'A', 00H, 'C', 00H, 'C', 00H, 'E', 00H
	DB	'S', 00H, 'S', 00H, 'D', 00H, 'E', 00H, 'N', 00H, 'I', 00H, 'E'
	DB	00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG427826 DB	'E', 00H, '_', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'D', 00H
	DB	'L', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG427828 DB	'E', 00H, '_', 00H, 'N', 00H, 'O', 00H, 'T', 00H, 'I', 00H
	DB	'M', 00H, 'P', 00H, 'L', 00H, 00H, 00H
$SG427830 DB	'E', 00H, '_', 00H, 'N', 00H, 'O', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, 'E', 00H, 'R', 00H, 'F', 00H, 'A', 00H, 'C', 00H, 'E'
	DB	00H, 00H, 00H
$SG427832 DB	'E', 00H, '_', 00H, 'A', 00H, 'B', 00H, 'O', 00H, 'R', 00H
	DB	'T', 00H, 00H, 00H
$SG427834 DB	'E', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'E', 00H, 'X', 00H
	DB	'P', 00H, 'E', 00H, 'C', 00H, 'T', 00H, 'E', 00H, 'D', 00H, 00H
	DB	00H
	ORG $+2
$SG427836 DB	' ', 00H, '*', 00H, '*', 00H, '*', 00H, ' ', 00H, 'E', 00H
	DB	'n', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'u', 00H, 'n', 00H
	DB	'k', 00H, 'n', 00H, 'o', 00H, 'w', 00H, 'n', 00H, ' ', 00H, 'H'
	DB	00H, 'R', 00H, 'E', 00H, 'S', 00H, 'U', 00H, 'L', 00H, 'T', 00H
	DB	':', 00H, ' ', 00H, '(', 00H, '0', 00H, 'x', 00H, '%', 00H, '0'
	DB	00H, '8', 00H, 'X', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG427837 DB	'U', 00H, 'N', 00H, 'K', 00H, 'N', 00H, 'O', 00H, 'W', 00H
	DB	'N', 00H, 00H, 00H
$SG177988 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H
	ORG $+2
$SG190286 DB	'A', 00H, 'p', 00H, 'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG190287 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG190288 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG190289 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG190290 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG190291 DB	'H', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG190292 DB	'M', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG190293 DB	'S', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG190294 DB	'S', 00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H
	DB	'T', 00H, 'Y', 00H, 00H, 00H
	ORG $+2
$SG190295 DB	'S', 00H, 'Y', 00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H
	DB	00H, 00H
	ORG $+2
$SG190296 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG190297 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 00H, 00H
$SG427887 DB	'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	'!', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG427883 DB	'[', 00H, ' ', 00H, 'W', 00H, 'M', 00H, 'I', 00H, ' ', 00H
	DB	'P', 00H, 'e', 00H, 'r', 00H, 'f', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'p', 00H, 'a', 00H, 'w', 00H, 'n', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, ' ', 00H, 'M', 00H, 'o', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, 'o', 00H, 'r', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG427886 DB	't', 00H, 'i', 00H, 'd', 00H, '=', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, '0', 00H, '4', 00H, 'x', 00H, 0aH, 00H, 00H, 00H
$SG427891 DB	'[', 00H, ' ', 00H, 'W', 00H, 'M', 00H, 'I', 00H, ' ', 00H
	DB	'P', 00H, 'e', 00H, 'r', 00H, 'f', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'p', 00H, 'a', 00H, 'w', 00H, 'n', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'C', 00H, 'P', 00H, 'U', 00H, ' '
	DB	00H, 'M', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '.', 00H, '.', 00H, '.', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG178035 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H
$SG427894 DB	't', 00H, 'i', 00H, 'd', 00H, '=', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, '0', 00H, '4', 00H, 'x', 00H, 0aH, 00H, 00H, 00H
$SG427895 DB	'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	'!', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG427898 DB	'[', 00H, ' ', 00H, 'W', 00H, 'M', 00H, 'I', 00H, ' ', 00H
	DB	'P', 00H, 'e', 00H, 'r', 00H, 'f', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'p', 00H, 'a', 00H, 'w', 00H, 'n', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'k'
	DB	00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '.', 00H, '.', 00H, '.', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG427901 DB	't', 00H, 'i', 00H, 'd', 00H, '=', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, '0', 00H, '4', 00H, 'x', 00H, 0aH, 00H, 00H, 00H
$SG427902 DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	'!', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG427908 DB	't', 00H, 'i', 00H, 'd', 00H, '=', 00H, '0', 00H, 'x', 00H
	DB	'%', 00H, '0', 00H, '4', 00H, 'x', 00H, 0aH, 00H, 00H, 00H
$SG427909 DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	'!', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG427905 DB	'[', 00H, ' ', 00H, 'W', 00H, 'M', 00H, 'I', 00H, ' ', 00H
	DB	'P', 00H, 'e', 00H, 'r', 00H, 'f', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'S', 00H, 'p', 00H, 'a', 00H, 'w', 00H, 'n', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'P', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'M', 00H
	DB	'o', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'o', 00H, 'r', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG178082 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG427973 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG427974 DB	'S', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG427976 DB	'Manual update initiated...', 00H
	ORG $+1
$SG178129 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	__InlineInterlockedCompareExchangePointer
PUBLIC	_ReadAcquire
PUBLIC	_ReadNoFence
PUBLIC	_ReadAcquire64
PUBLIC	_ReadPointerAcquire
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	?_InterlockedCompareExchange@@YAKPCKKK@Z	; _InterlockedCompareExchange
PUBLIC	?swprintf@@YAHQA_WQB_WZZ			; swprintf
PUBLIC	??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ ; __vcrt_va_start_verify_argument_type<wchar_t const * const>
PUBLIC	_wmemcmp
PUBLIC	_wmemcpy
PUBLIC	_wmemmove
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?compare@?$char_traits@_W@std@@SAHQB_W0I@Z	; std::char_traits<wchar_t>::compare
PUBLIC	?length@?$char_traits@_W@std@@SAIQB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?length@?$char_traits@D@std@@SAIQBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADQADQBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADQADQBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z	; std::_Container_base12::_Swap_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?WaitForInit@@YAXXZ				; WaitForInit
PUBLIC	?SK_InitCore@@YGXPB_WPAX@Z			; SK_InitCore
PUBLIC	?SK_StartupCore@@YG_NPB_WPAX@Z			; SK_StartupCore
PUBLIC	?SK_ShutdownCore@@YG_NPB_W@Z			; SK_ShutdownCore
PUBLIC	?SK_BeginBufferSwap@@YGXXZ			; SK_BeginBufferSwap
PUBLIC	?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z		; SK_EndBufferSwap
PUBLIC	?SK_DescribeHRESULT@@YGPB_WJ@Z			; SK_DescribeHRESULT
PUBLIC	?SK_SetConfigPath@@YGXPB_W@Z			; SK_SetConfigPath
PUBLIC	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ		; SK_GetDLLRole
PUBLIC	?SK_SetDLLRole@@YAXW4DLL_ROLE@@@Z		; SK_SetDLLRole
PUBLIC	?SK_HasGlobalInjector@@YG_NXZ			; SK_HasGlobalInjector
PUBLIC	?SK_GetFramesDrawn@@YGKXZ			; SK_GetFramesDrawn
PUBLIC	?SK_Win32_CreateDummyWindow@@YAPAUHWND__@@XZ	; SK_Win32_CreateDummyWindow
PUBLIC	?SK_Win32_CleanupDummyWindow@@YAXXZ		; SK_Win32_CleanupDummyWindow
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NQBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	??0?$allocator@_W@std@@QAE@ABV01@@Z		; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents_with_alloc_always_equal
PUBLIC	?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
PUBLIC	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
PUBLIC	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?capacity@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::capacity
PUBLIC	?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
PUBLIC	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
PUBLIC	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	??1AutoClose@iSK_Logger@@QAE@XZ			; iSK_Logger::AutoClose::~AutoClose
PUBLIC	??0AutoClose@iSK_Logger@@IAE@PAU1@@Z		; iSK_Logger::AutoClose::AutoClose
PUBLIC	?auto_close@iSK_Logger@@QAE?AVAutoClose@1@XZ	; iSK_Logger::auto_close
PUBLIC	?SK_GetRootPath@@YGPB_WXZ			; SK_GetRootPath
PUBLIC	?lock@SK_Thread_CriticalSection@@QAEXXZ		; SK_Thread_CriticalSection::lock
PUBLIC	?unlock@SK_Thread_CriticalSection@@QAEXXZ	; SK_Thread_CriticalSection::unlock
PUBLIC	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
PUBLIC	??1SK_ICommandResult@@QAE@XZ			; SK_ICommandResult::~SK_ICommandResult
PUBLIC	?getHelp@SK_ICommand@@UAEPBDXZ			; SK_ICommand::getHelp
PUBLIC	?getNumArgs@SK_ICommand@@UAEHXZ			; SK_ICommand::getNumArgs
PUBLIC	?getNumOptionalArgs@SK_ICommand@@UAEHXZ		; SK_ICommand::getNumOptionalArgs
PUBLIC	?getNumRequiredArgs@SK_ICommand@@UAEHXZ		; SK_ICommand::getNumRequiredArgs
PUBLIC	??0SK_ICommand@@QAE@XZ				; SK_ICommand::SK_ICommand
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Init@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QAEXXZ			; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QAEXXZ			; ATL::CAtlWinModule::Term
PUBLIC	?SK_GetNaiveConfigPath@@YGPB_WXZ		; SK_GetNaiveConfigPath
PUBLIC	??0SK_ImGui_WidgetRegistry@@QAE@XZ		; SK_ImGui_WidgetRegistry::SK_ImGui_WidgetRegistry
PUBLIC	?isActive@SK_Widget@@QBE_NXZ			; SK_Widget::isActive
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
PUBLIC	??0?$allocator@K@std@@QAE@ABV01@@Z		; std::allocator<unsigned long>::allocator<unsigned long>
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
PUBLIC	?max_size@?$allocator@K@std@@QBEIXZ		; std::allocator<unsigned long>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z ; std::allocator_traits<std::allocator<unsigned long> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@K@std@@@std@@SA?AV?$allocator@K@2@ABV32@@Z ; std::allocator_traits<std::allocator<unsigned long> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBE?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
PUBLIC	??4?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::operator=
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::max_size
PUBLIC	?deallocate@?$allocator@PAK@std@@QAEXPAPAKI@Z	; std::allocator<unsigned long *>::deallocate
PUBLIC	?allocate@?$allocator@PAK@std@@QAEPAPAKI@Z	; std::allocator<unsigned long *>::allocate
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEPAPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEXPAPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long *> >::deallocate
PUBLIC	?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEII@Z ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getblock
PUBLIC	??0?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::~_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
PUBLIC	?_Move_alloc@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@@Z ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Move_alloc
PUBLIC	?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all
PUBLIC	?_Swap_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Swap_all
PUBLIC	?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
PUBLIC	?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
PUBLIC	?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data
PUBLIC	?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data
PUBLIC	?_Map@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAPAKXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Map
PUBLIC	?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mapsize
PUBLIC	?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff
PUBLIC	?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff
PUBLIC	?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize
PUBLIC	?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize
PUBLIC	??0?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Deque_val<std::_Deque_simple_types<unsigned long> >
PUBLIC	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Getblock
PUBLIC	??1?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::~_Deque_val<std::_Deque_simple_types<unsigned long> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>
PUBLIC	??0?$deque@KV?$allocator@K@std@@@std@@QAE@XZ	; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
PUBLIC	??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
PUBLIC	??4?$deque@KV?$allocator@K@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::operator=
PUBLIC	?_Assign_rv@?$deque@KV?$allocator@K@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Assign_rv
PUBLIC	??1?$deque@KV?$allocator@K@std@@@std@@QAE@XZ	; std::deque<unsigned long,std::allocator<unsigned long> >::~deque<unsigned long,std::allocator<unsigned long> >
PUBLIC	?begin@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ ; std::deque<unsigned long,std::allocator<unsigned long> >::begin
PUBLIC	?end@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ ; std::deque<unsigned long,std::allocator<unsigned long> >::end
PUBLIC	?max_size@?$deque@KV?$allocator@K@std@@@std@@QBEIXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::max_size
PUBLIC	?empty@?$deque@KV?$allocator@K@std@@@std@@QBE_NXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::empty
PUBLIC	?pop_back@?$deque@KV?$allocator@K@std@@@std@@QAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::pop_back
PUBLIC	?_Xlen@?$deque@KV?$allocator@K@std@@@std@@IBEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
PUBLIC	?_Growmap@?$deque@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
PUBLIC	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
PUBLIC	??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??1?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::~queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@ABV01@@Z ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::operator=
PUBLIC	??0init_params_t@@QAE@XZ			; init_params_t::init_params_t
PUBLIC	?SK_GetBackend@@YGPB_WXZ			; SK_GetBackend
PUBLIC	?osd_pump@@YGKPAX@Z				; osd_pump
PUBLIC	?SK_StartPerfMonThreads@@YGXXZ			; SK_StartPerfMonThreads
PUBLIC	?execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z ; skMemCmd::execute
PUBLIC	?getNumArgs@skMemCmd@@UAEHXZ			; skMemCmd::getNumArgs
PUBLIC	?getNumOptionalArgs@skMemCmd@@UAEHXZ		; skMemCmd::getNumOptionalArgs
PUBLIC	?getNumRequiredArgs@skMemCmd@@UAEHXZ		; skMemCmd::getNumRequiredArgs
PUBLIC	??0skMemCmd@@QAE@XZ				; skMemCmd::skMemCmd
PUBLIC	?execute@skUpdateCmd@@UAE?AUSK_ICommandResult@@PBD@Z ; skUpdateCmd::execute
PUBLIC	?getNumArgs@skUpdateCmd@@UAEHXZ			; skUpdateCmd::getNumArgs
PUBLIC	?getNumOptionalArgs@skUpdateCmd@@UAEHXZ		; skUpdateCmd::getNumOptionalArgs
PUBLIC	?getNumRequiredArgs@skUpdateCmd@@UAEHXZ		; skUpdateCmd::getNumRequiredArgs
PUBLIC	??0skUpdateCmd@@QAE@XZ				; skUpdateCmd::skUpdateCmd
PUBLIC	?CheckVersionThread@@YGKPAX@Z			; CheckVersionThread
PUBLIC	?SK_InitFinishCallback@@YGXXZ			; SK_InitFinishCallback
PUBLIC	?DllThread@@YGKPAX@Z				; DllThread
PUBLIC	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0sk_user_profile_s@@QAE@XZ			; sk_user_profile_s::sk_user_profile_s
PUBLIC	?SK_EstablishRootPath@@YGXXZ			; SK_EstablishRootPath
PUBLIC	?SK_ReenterCore@@YGXXZ				; SK_ReenterCore
PUBLIC	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$pair@V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@H@std@@QAE@XZ ; std::pair<std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >,int>::~pair<std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >,int>
PUBLIC	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Kfn@?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@SAABQAUHWND__@@ABQAU3@@Z ; std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0>::_Kfn
PUBLIC	??0?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<HWND__ *,void *> >::allocator<std::_Tree_node<HWND__ *,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ; std::allocator<std::_Tree_node<HWND__ *,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ; std::allocator<std::_Tree_node<HWND__ *,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<HWND__ *,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::max_size
PUBLIC	?_Color@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Color
PUBLIC	?_Isnil@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Isnil
PUBLIC	?_Left@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Left
PUBLIC	?_Parent@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Parent
PUBLIC	?_Right@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Right
PUBLIC	?_Myval@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myval
PUBLIC	?_Max@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Max
PUBLIC	?_Min@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Min
PUBLIC	??0?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABU?$less@PAUHWND__@@@1@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >
PUBLIC	?_Construct@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Construct
PUBLIC	??1?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::~_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >
PUBLIC	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Freeheadnode
PUBLIC	?_Buynode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode0
PUBLIC	?_Freenode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Freenode0
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAU?$less@PAUHWND__@@@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getcomp
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABU?$less@PAUHWND__@@@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getal
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getal
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Get_data
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Get_data
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myhead
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABQAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myhead
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Mysize
PUBLIC	??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::less<HWND__ *>::operator()
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Tree_val<std::_Tree_simple_types<HWND__ *> >
PUBLIC	?_Color@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Color
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Isnil
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Right
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Myval
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Min
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_second
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAUHWND__@@@2@XZ ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAUHWND__@@@2@XZ ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_second
PUBLIC	??0?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABU?$less@PAUHWND__@@@1@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >
PUBLIC	??1?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::~_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >
PUBLIC	?begin@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::end
PUBLIC	?max_size@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::max_size
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEIABQAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::clear
PUBLIC	?equal_range@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Destroy_if_not_nil
PUBLIC	?_Erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Erase
PUBLIC	?_Lmost@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lmost
PUBLIC	?_Lrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lrotate
PUBLIC	?_Rmost@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Root
PUBLIC	?_Rrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rrotate
PUBLIC	?_Tidy@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tidy
PUBLIC	?_Kfn@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABQAUHWND__@@ABQAU3@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABQAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Key
PUBLIC	??0?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ ; std::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >
PUBLIC	??1?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ ; std::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >::~set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >
PUBLIC	??$emplace@AAPAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::emplace<HWND__ * &>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@PAUHWND__@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator--
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@PAUHWND__@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEABQAUHWND__@@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator*
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator++
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator++
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator--
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator!=
PUBLIC	??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?DoKeyboard@@YAXXZ				; DoKeyboard
PUBLIC	??0?$CComPtrBase@UIDirect3DDevice9@@@ATL@@IAE@PAUIDirect3DDevice9@@@Z ; ATL::CComPtrBase<IDirect3DDevice9>::CComPtrBase<IDirect3DDevice9>
PUBLIC	??1?$CComPtrBase@UIDirect3DDevice9@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDirect3DDevice9>::~CComPtrBase<IDirect3DDevice9>
PUBLIC	??I?$CComPtrBase@UIDirect3DDevice9@@@ATL@@QAEPAPAUIDirect3DDevice9@@XZ ; ATL::CComPtrBase<IDirect3DDevice9>::operator&
PUBLIC	??0?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@PAUIDirect3DDevice9@@@Z ; ATL::CComPtr<IDirect3DDevice9>::CComPtr<IDirect3DDevice9>
PUBLIC	??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ	; ATL::CComPtr<IDirect3DDevice9>::~CComPtr<IDirect3DDevice9>
PUBLIC	??0?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@IAE@PAUIDirect3DDevice9Ex@@@Z ; ATL::CComPtrBase<IDirect3DDevice9Ex>::CComPtrBase<IDirect3DDevice9Ex>
PUBLIC	??1?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDirect3DDevice9Ex>::~CComPtrBase<IDirect3DDevice9Ex>
PUBLIC	??I?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@QAEPAPAUIDirect3DDevice9Ex@@XZ ; ATL::CComPtrBase<IDirect3DDevice9Ex>::operator&
PUBLIC	??0?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@PAUIDirect3DDevice9Ex@@@Z ; ATL::CComPtr<IDirect3DDevice9Ex>::CComPtr<IDirect3DDevice9Ex>
PUBLIC	??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ	; ATL::CComPtr<IDirect3DDevice9Ex>::~CComPtr<IDirect3DDevice9Ex>
PUBLIC	??0?$CComPtrBase@UID3D11Device@@@ATL@@IAE@PAUID3D11Device@@@Z ; ATL::CComPtrBase<ID3D11Device>::CComPtrBase<ID3D11Device>
PUBLIC	??1?$CComPtrBase@UID3D11Device@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ID3D11Device>::~CComPtrBase<ID3D11Device>
PUBLIC	??I?$CComPtrBase@UID3D11Device@@@ATL@@QAEPAPAUID3D11Device@@XZ ; ATL::CComPtrBase<ID3D11Device>::operator&
PUBLIC	??0?$CComPtr@UID3D11Device@@@ATL@@QAE@PAUID3D11Device@@@Z ; ATL::CComPtr<ID3D11Device>::CComPtr<ID3D11Device>
PUBLIC	??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ	; ATL::CComPtr<ID3D11Device>::~CComPtr<ID3D11Device>
PUBLIC	??$QueryInterface@UIDirect3DDevice9Ex@@@IUnknown@@QAGJPAPAUIDirect3DDevice9Ex@@@Z ; IUnknown::QueryInterface<IDirect3DDevice9Ex>
PUBLIC	??$QueryInterface@UIDirect3DDevice9@@@IUnknown@@QAGJPAPAUIDirect3DDevice9@@@Z ; IUnknown::QueryInterface<IDirect3DDevice9>
PUBLIC	??$QueryInterface@UID3D11Device@@@IUnknown@@QAGJPAPAUID3D11Device@@@Z ; IUnknown::QueryInterface<ID3D11Device>
PUBLIC	??0?$CComPtrBase@UIDXGISwapChain@@@ATL@@IAE@PAUIDXGISwapChain@@@Z ; ATL::CComPtrBase<IDXGISwapChain>::CComPtrBase<IDXGISwapChain>
PUBLIC	??1?$CComPtrBase@UIDXGISwapChain@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IDXGISwapChain>::~CComPtrBase<IDXGISwapChain>
PUBLIC	??B?$CComPtrBase@UIDXGISwapChain@@@ATL@@QBEPAUIDXGISwapChain@@XZ ; ATL::CComPtrBase<IDXGISwapChain>::operator IDXGISwapChain *
PUBLIC	??I?$CComPtrBase@UIDXGISwapChain@@@ATL@@QAEPAPAUIDXGISwapChain@@XZ ; ATL::CComPtrBase<IDXGISwapChain>::operator&
PUBLIC	??C?$CComPtrBase@UIDXGISwapChain@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDXGISwapChain@@@1@XZ ; ATL::CComPtrBase<IDXGISwapChain>::operator->
PUBLIC	??0?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@PAUIDXGISwapChain@@@Z ; ATL::CComPtr<IDXGISwapChain>::CComPtr<IDXGISwapChain>
PUBLIC	??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ	; ATL::CComPtr<IDXGISwapChain>::~CComPtr<IDXGISwapChain>
PUBLIC	??$QueryInterface@UIDXGISwapChain@@@IUnknown@@QAGJPAPAUIDXGISwapChain@@@Z ; IUnknown::QueryInterface<IDXGISwapChain>
PUBLIC	?RunDLL_ElevateMe@@YGXPAUHWND__@@PAUHINSTANCE__@@PADH@Z ; RunDLL_ElevateMe
PUBLIC	?RunDLL_RestartGame@@YGXPAUHWND__@@PAUHINSTANCE__@@PADH@Z ; RunDLL_RestartGame
PUBLIC	??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0@Z ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >
PUBLIC	??$addressof@V?$deque@KV?$allocator@K@std@@@std@@@std@@YAPAV?$deque@KV?$allocator@K@std@@@0@AAV10@@Z ; std::addressof<std::deque<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??$move@AAV?$deque@KV?$allocator@K@std@@@std@@@std@@YA$$QAV?$deque@KV?$allocator@K@std@@@0@AAV10@@Z ; std::move<std::deque<unsigned long,std::allocator<unsigned long> > &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@K@std@@@std@@X@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > ><std::_Wrap_alloc<std::allocator<unsigned long> >,void>
PUBLIC	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >
PUBLIC	??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBEABKXZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator*
PUBLIC	??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator++
PUBLIC	??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator==
PUBLIC	??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator!=
PUBLIC	?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Compat
PUBLIC	?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Setcont
PUBLIC	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAE@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >
PUBLIC	??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Construct<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > > >
PUBLIC	??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
PUBLIC	??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>
PUBLIC	??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>
PUBLIC	??$?0V?$allocator@K@std@@@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@$$QAV?$allocator@K@1@@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> ><std::allocator<unsigned long> >
PUBLIC	??$?9V?$allocator@K@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z ; std::operator!=<std::allocator<unsigned long>,std::allocator<unsigned long> >
PUBLIC	??$_Pocma@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned long> > >
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<unsigned long *> >::_Wrap_alloc<std::allocator<unsigned long *> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
PUBLIC	??$addressof@PAK@std@@YAPAPAKAAPAK@Z		; std::addressof<unsigned long *>
PUBLIC	??$destroy@PAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAPAK@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long *>
PUBLIC	??$addressof@$$CBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@ABV10@@Z ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > const >
PUBLIC	??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z		; std::addressof<wchar_t *>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > &>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@std@@YAPAPAU?$_Tree_node@PAUHWND__@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<HWND__ *,void *> *>
PUBLIC	??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>
PUBLIC	??$?0ABU?$less@PAUHWND__@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAUHWND__@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1><std::less<HWND__ *> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$swap@DX@std@@YAXAAD0@Z			; std::swap<char,void>
PUBLIC	??$addressof@PAUHWND__@@@std@@YAPAPAUHWND__@@AAPAU1@@Z ; std::addressof<HWND__ *>
PUBLIC	??$destroy@PAUHWND__@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<HWND__ *>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$addressof@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@AAV10@@Z ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><>
PUBLIC	??$_Unfancy@K@std@@YAPAKPAK@Z			; std::_Unfancy<unsigned long>
PUBLIC	??$destroy@K@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAK@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long>
PUBLIC	??$_Unfancy@_W@std@@YAPA_WPA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
PUBLIC	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>
PUBLIC	??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ; std::forward<HWND__ * &>
PUBLIC	??$_Buynode@AAPAUHWND__@@@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode<HWND__ * &>
PUBLIC	??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_nohint<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>
PUBLIC	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@K@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><std::_Wrap_alloc<std::allocator<unsigned long> > >
PUBLIC	??$emplace_back@ABK@?$deque@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::emplace_back<unsigned long const &>
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,void,0>
PUBLIC	??$forward@V?$allocator@K@std@@@std@@YA$$QAV?$allocator@K@0@AAV10@@Z ; std::forward<std::allocator<unsigned long> >
PUBLIC	??$?8V?$allocator@K@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z ; std::operator==<std::allocator<unsigned long>,std::allocator<unsigned long> >
PUBLIC	??$?8KK@std@@YA_NABV?$allocator@K@0@0@Z		; std::operator==<unsigned long,unsigned long>
PUBLIC	??$_Pocma@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U?$integral_constant@_N$00@0@@Z ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned long> > >
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > &>
PUBLIC	??$?0K@?$allocator@PAK@std@@QAE@ABV?$allocator@K@1@@Z ; std::allocator<unsigned long *>::allocator<unsigned long *><unsigned long>
PUBLIC	??$destroy@PAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAPAK@Z ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long *>
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> >
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>
PUBLIC	??$forward@ABU?$less@PAUHWND__@@@std@@@std@@YAABU?$less@PAUHWND__@@@0@ABU10@@Z ; std::forward<std::less<HWND__ *> const &>
PUBLIC	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1><>
PUBLIC	??$move@AAD@std@@YA$$QADAAD@Z			; std::move<char &>
PUBLIC	??$destroy@PAUHWND__@@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<HWND__ *>
PUBLIC	??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@K@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAK@Z ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long>
PUBLIC	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z		; std::forward<wchar_t * &>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$forward@AAPAU?$_Tree_node@PAUHWND__@@PAX@std@@@std@@YAAAPAU?$_Tree_node@PAUHWND__@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<HWND__ *,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>
PUBLIC	??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z ; std::_Traits_equal<std::char_traits<wchar_t> >
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > const >
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>
PUBLIC	??$_Insert_at@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@_NPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@1@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_at<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>
PUBLIC	??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool,void,0>
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,bool,void,0>
PUBLIC	??$forward@ABK@std@@YAABKABK@Z			; std::forward<unsigned long const &>
PUBLIC	??$construct@KABK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKABK@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::construct<unsigned long,unsigned long const &>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &>
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<unsigned long> > &>
PUBLIC	??$destroy@PAK@?$allocator@K@std@@QAEXPAPAK@Z	; std::allocator<unsigned long>::destroy<unsigned long *>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::allocator<std::_Tree_node<HWND__ *,void *> >::destroy<std::_Tree_node<HWND__ *,void *> *>
PUBLIC	??$destroy@PAUHWND__@@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@@Z ; std::allocator<std::_Tree_node<HWND__ *,void *> >::destroy<HWND__ *>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$destroy@K@?$allocator@K@std@@QAEXPAK@Z	; std::allocator<unsigned long>::destroy<unsigned long>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<HWND__ *,void *> >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>
PUBLIC	??$_Uninitialized_copy@PAPAKPAPAKV?$allocator@PAK@std@@@std@@YAPAPAKPAPAK00AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z ; std::_Uninitialized_copy<unsigned long * *,unsigned long * *,std::allocator<unsigned long *> >
PUBLIC	??$_Uninitialized_default_fill_n@PAPAKIV?$allocator@PAK@std@@@std@@YAPAPAKPAPAKIAAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z ; std::_Uninitialized_default_fill_n<unsigned long * *,unsigned int,std::allocator<unsigned long *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAK@std@@PAPAK@std@@YAXPAPAK0AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z ; std::_Destroy_range<std::allocator<unsigned long *>,unsigned long * *>
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@AAPAU3@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>
PUBLIC	??$_Buynode_if_nil@AAPAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@PAUHWND__@@PAX@1@PAU21@AAPAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * &>
PUBLIC	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >
PUBLIC	??$construct@KABK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKABK@Z ; std::allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long const &>
PUBLIC	??$_Unchecked@PAPAK@std@@YAPAPAKPAPAK@Z		; std::_Unchecked<unsigned long * *>
PUBLIC	??$_Ptr_copy_cat@PAKPAK@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAK0@Z ; std::_Ptr_copy_cat<unsigned long *,unsigned long *>
PUBLIC	??$_Uninitialized_copy_al_unchecked@PAKPAKV?$allocator@PAK@std@@@std@@YAPAPAKPAPAK00AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked<unsigned long *,unsigned long *,std::allocator<unsigned long *> >
PUBLIC	??$_Rechecked@PAPAKPAPAK@std@@YAAAPAPAKAAPAPAKPAPAK@Z ; std::_Rechecked<unsigned long * *,unsigned long * *>
PUBLIC	??$_Uninitialized_default_fill_n1@PAPAKIV?$allocator@PAK@std@@@std@@YAPAPAKPAPAKIAAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_default_fill_n1<unsigned long * *,unsigned int,std::allocator<unsigned long *> >
PUBLIC	??$_Destroy_range1@V?$allocator@PAK@std@@PAPAK@std@@YAXPAPAK0AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<unsigned long *>,unsigned long * *>
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ; std::allocator<std::_Tree_node<HWND__ *,void *> >::construct<HWND__ *,HWND__ * &>
PUBLIC	??$construct@KABK@?$allocator@K@std@@QAEXPAKABK@Z ; std::allocator<unsigned long>::construct<unsigned long,unsigned long const &>
PUBLIC	??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ; std::_Copy_memmove<unsigned long * *,unsigned long * *>
PUBLIC	??_7SK_ICommand@@6B@				; SK_ICommand::`vftable'
PUBLIC	??_C@_0BC@EBCNAKOF@No?5Help?5Available?$AA@	; `string'
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	?SK_ImGui_Widgets@@3USK_ImGui_WidgetRegistry@@A	; SK_ImGui_Widgets
PUBLIC	?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
PUBLIC	?init_@@3Uinit_params_t@@A			; init_
PUBLIC	??_C@_1BA@IKEODOOB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@ ; `string'
PUBLIC	?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
PUBLIC	??_7skMemCmd@@6B@				; skMemCmd::`vftable'
PUBLIC	??_7skUpdateCmd@@6B@				; skUpdateCmd::`vftable'
PUBLIC	?reentrant_core@@3Uinit_params_t@@A		; reentrant_core
PUBLIC	?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
PUBLIC	??_C@_17LGKOMLJ@?$AA?4?$AA?4?$AA?4?$AA?$AA@	; `string'
PUBLIC	??_C@_1EE@MENKLOLO@?$AA?$FL?$AA?5?$AAW?$AAM?$AAI?$AA?5?$AAP?$AAe?$AAr?$AAf?$AA?5?$AA?$FN?$AA?5?$AAS?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AA?$CF?$AA?9?$AA3?$AA0?$AAs@ ; `string'
PUBLIC	??_C@_1CA@KKELPOIK@?$AAd?$AAo?$AAn?$AAe?$AA?$CB?$AA?5?$AA?$CI?$AA?$CF?$AA4?$AAu?$AA?5?$AAm?$AAs?$AA?$CJ?$AA?6?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	__GUID_b18b10ce_2649_405a_870f_95f777d4313a
PUBLIC	__GUID_d0223b96_bf7a_43fd_92bd_a43b0d82b9eb
PUBLIC	__GUID_db6f6ddb_ac77_4e88_8253_819df9bbf140
PUBLIC	__GUID_310d36a0_d2e7_4c0a_aa04_6a9d23b8886a
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R4SK_ICommand@@6B@				; SK_ICommand::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSK_ICommand@@@8				; SK_ICommand `RTTI Type Descriptor'
PUBLIC	??_R3SK_ICommand@@8				; SK_ICommand::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SK_ICommand@@8				; SK_ICommand::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SK_ICommand@@8			; SK_ICommand::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4skMemCmd@@6B@				; skMemCmd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVskMemCmd@@@8				; skMemCmd `RTTI Type Descriptor'
PUBLIC	??_R3skMemCmd@@8				; skMemCmd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2skMemCmd@@8				; skMemCmd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@skMemCmd@@8			; skMemCmd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4skUpdateCmd@@6B@				; skUpdateCmd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVskUpdateCmd@@@8				; skUpdateCmd `RTTI Type Descriptor'
PUBLIC	??_R3skUpdateCmd@@8				; skUpdateCmd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2skUpdateCmd@@8				; skUpdateCmd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@skUpdateCmd@@8			; skUpdateCmd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@447a0000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp___wcsdup:PROC
EXTRN	__imp__wcsncpy:PROC
EXTRN	__imp__SetCurrentDirectoryW@4:PROC
EXTRN	__imp__GetCurrentDirectoryW@8:PROC
EXTRN	__imp__DeleteFileW@4:PROC
EXTRN	__imp__GetFileAttributesW@4:PROC
EXTRN	__imp__DecodePointer@4:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__InitializeCriticalSectionEx@12:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__SetEvent@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__SleepEx@8:PROC
EXTRN	__imp__CreateEventW@16:PROC
EXTRN	__imp__SignalObjectAndWait@16:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	__imp__GetCurrentThread@0:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__TerminateThread@8:PROC
EXTRN	__imp__GetThreadId@4:PROC
EXTRN	__imp__GetSystemTime@4:PROC
EXTRN	__imp__VirtualProtect@16:PROC
EXTRN	__imp__VirtualQuery@12:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__lstrcmpW@8:PROC
EXTRN	__imp__lstrcpynW@12:PROC
EXTRN	__imp__lstrcatW@8:PROC
EXTRN	__imp__SystemTimeToFileTime@8:PROC
EXTRN	__imp__CreateSymbolicLinkW@12:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__RegisterClassW@4:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__GetClassInfoW@12:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__MsgWaitForMultipleObjectsEx@20:PROC
EXTRN	__imp__GetForegroundWindow@0:PROC
EXTRN	__imp__ClipCursor@4:PROC
EXTRN	__imp__GetDesktopWindow@0:PROC
EXTRN	__imp__ChangeDisplaySettingsA@8:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	__imp__ShellExecuteA@24:PROC
EXTRN	__imp__ShellExecuteW@24:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp___wputenv:PROC
EXTRN	__imp__exit:PROC
EXTRN	__imp__mbtowc:PROC
EXTRN	_vswprintf:PROC
EXTRN	__swprintf:PROC
EXTRN	_sprintf:PROC
EXTRN	_sscanf:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	?SK_GetConfigPath@@YGPB_WXZ:PROC		; SK_GetConfigPath
EXTRN	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ:PROC		; SK_GetDLL
EXTRN	?SK_IsInjected@@YG_N_N@Z:PROC			; SK_IsInjected
EXTRN	_MH_ApplyQueued@0:PROC
EXTRN	?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ:PROC	; SK_ApplyQueuedHooks
EXTRN	?SK_UnInit_MinHook@@YG?AW4MH_STATUS@@XZ:PROC	; SK_UnInit_MinHook
EXTRN	?SK_HookWinAPI@@YAXXZ:PROC			; SK_HookWinAPI
EXTRN	?SK_CenterWindowAtMouse@@YAXH@Z:PROC		; SK_CenterWindowAtMouse
EXTRN	?SK_GetGameWindow@@YGPAUHWND__@@XZ:PROC		; SK_GetGameWindow
EXTRN	?SK_Input_Init@@YAXXZ:PROC			; SK_Input_Init
EXTRN	?SK_EnumLoadedModules@@YGXW4SK_ModuleEnum@@@Z:PROC ; SK_EnumLoadedModules
EXTRN	?SK_LockDllLoader@@YGXXZ:PROC			; SK_LockDllLoader
EXTRN	?SK_UnlockDllLoader@@YGXXZ:PROC			; SK_UnlockDllLoader
EXTRN	?Init@CrashHandler@Diagnostics@SK@@YAXXZ:PROC	; SK::Diagnostics::CrashHandler::Init
EXTRN	?InitSyms@CrashHandler@Diagnostics@SK@@YAXXZ:PROC ; SK::Diagnostics::CrashHandler::InitSyms
EXTRN	?Reinstall@CrashHandler@Diagnostics@SK@@YAXXZ:PROC ; SK::Diagnostics::CrashHandler::Reinstall
EXTRN	?Allow@Debugger@Diagnostics@SK@@YA_N_N@Z:PROC	; SK::Diagnostics::Debugger::Allow
EXTRN	?SpawnConsole@Debugger@Diagnostics@SK@@YAXXZ:PROC ; SK::Diagnostics::Debugger::SpawnConsole
EXTRN	__imp___controlfp:PROC
EXTRN	?init@iSK_Logger@@UAG_NQB_W0@Z:PROC		; iSK_Logger::init
EXTRN	?close@iSK_Logger@@UAGXXZ:PROC			; iSK_Logger::close
EXTRN	?LogEx@iSK_Logger@@UAAX_NQB_WZZ:PROC		; iSK_Logger::LogEx
EXTRN	?Log@iSK_Logger@@UAAXQB_WZZ:PROC		; iSK_Logger::Log
EXTRN	?SK_GetHostApp@@YAPB_WXZ:PROC			; SK_GetHostApp
EXTRN	?SK_GetHostPath@@YAPB_WXZ:PROC			; SK_GetHostPath
EXTRN	?SK_GetBlacklistFilename@@YAPB_WXZ:PROC		; SK_GetBlacklistFilename
EXTRN	?SK_GetDocumentsDir@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:PROC ; SK_GetDocumentsDir
EXTRN	?SK_CreateDirectories@@YG_NPB_W@Z:PROC		; SK_CreateDirectories
EXTRN	?SK_DeleteTemporaryFiles@@YAIPB_W0@Z:PROC	; SK_DeleteTemporaryFiles
EXTRN	?SK_GetSystemDirectory@@YAPB_WXZ:PROC		; SK_GetSystemDirectory
EXTRN	?SK_GetModuleName@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAUHINSTANCE__@@@Z:PROC ; SK_GetModuleName
EXTRN	?SK_GetModuleFullName@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAUHINSTANCE__@@@Z:PROC ; SK_GetModuleFullName
EXTRN	?SK_StripUserNameFromPathW@@YA_NPA_W@Z:PROC	; SK_StripUserNameFromPathW
EXTRN	?SK_SuspendAllOtherThreads@@YA?AV?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@XZ:PROC ; SK_SuspendAllOtherThreads
EXTRN	?SK_ResumeThreads@@YAXV?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@@Z:PROC ; SK_ResumeThreads
EXTRN	?SK_IsSuperSpecialK@@YA_NXZ:PROC		; SK_IsSuperSpecialK
EXTRN	?SK_GetFileSize@@YG_KPB_W@Z:PROC		; SK_GetFileSize
EXTRN	?SK_Path_wcsicmp@@YAHPB_W0@Z:PROC		; SK_Path_wcsicmp
EXTRN	?SK_SetGameMute@@YGX_N@Z:PROC			; SK_SetGameMute
EXTRN	?SK_TestSteamImports@@YAXPAUHINSTANCE__@@@Z:PROC ; SK_TestSteamImports
EXTRN	?SK_Steam_InitCommandConsoleVariables@@YAXXZ:PROC ; SK_Steam_InitCommandConsoleVariables
EXTRN	?SK_UnlockSteamAchievement@@YAXI@Z:PROC		; SK_UnlockSteamAchievement
EXTRN	?SK_Steam_LoadOverlayEarly@@YA_NXZ:PROC		; SK_Steam_LoadOverlayEarly
EXTRN	?SK_Steam_PiratesAhoy@@YGIXZ:PROC		; SK_Steam_PiratesAhoy
EXTRN	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ:PROC ; SK_GetCommandProcessor
EXTRN	__imp__StrStrIW@8:PROC
EXTRN	__imp__PathAppendW@8:PROC
EXTRN	__imp__PathRemoveFileSpecW@4:PROC
EXTRN	?SK_GetCurrentGLContext@@YGPAUHGLRC__@@XZ:PROC	; SK_GetCurrentGLContext
EXTRN	?releaseOwnedResources@SK_RenderBackend_V2@@QAEXXZ:PROC ; SK_RenderBackend_V2::releaseOwnedResources
EXTRN	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ:PROC ; SK_GetCurrentRenderBackend
EXTRN	?SK_InitRenderBackends@@YGXXZ:PROC		; SK_InitRenderBackends
EXTRN	?SK_BootDXGI@@YAXXZ:PROC			; SK_BootDXGI
EXTRN	?SK_LoadConfig@@YA_NV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:PROC ; SK_LoadConfig
EXTRN	?SK_SaveConfig@@YAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@Z:PROC ; SK_SaveConfig
EXTRN	?SK_DrawOSD@@YGHXZ:PROC				; SK_DrawOSD
EXTRN	?SK_ResizeOSD@@YGXMPBD@Z:PROC			; SK_ResizeOSD
EXTRN	?SK_MonitorProcess@@YGKPAX@Z:PROC		; SK_MonitorProcess
EXTRN	?SK_ShutdownWMI@@YAXXZ:PROC			; SK_ShutdownWMI
EXTRN	?SK_MonitorCPU@@YGKPAX@Z:PROC			; SK_MonitorCPU
EXTRN	?SK_MonitorDisk@@YGKPAX@Z:PROC			; SK_MonitorDisk
EXTRN	?SK_MonitorPagefile@@YGKPAX@Z:PROC		; SK_MonitorPagefile
EXTRN	?SK_LoadLateImports32@@YAXXZ:PROC		; SK_LoadLateImports32
EXTRN	?SK_LoadLazyImports32@@YAXXZ:PROC		; SK_LoadLazyImports32
EXTRN	?SK_UnloadImports@@YAXXZ:PROC			; SK_UnloadImports
EXTRN	?getInstance@SK_Console@@SAPAV1@XZ:PROC		; SK_Console::getInstance
EXTRN	?Start@SK_Console@@QAEXXZ:PROC			; SK_Console::Start
EXTRN	?End@SK_Console@@QAEXXZ:PROC			; SK_Console::End
EXTRN	?SK_DrawConsole@@YAXXZ:PROC			; SK_DrawConsole
EXTRN	?Init@Framerate@SK@@YAXXZ:PROC			; SK::Framerate::Init
EXTRN	?Shutdown@Framerate@SK@@YAXXZ:PROC		; SK::Framerate::Shutdown
EXTRN	?wait@Limiter@Framerate@SK@@QAEXXZ:PROC		; SK::Framerate::Limiter::wait
EXTRN	?GetLimiter@Framerate@SK@@YAPAVLimiter@12@XZ:PROC ; SK::Framerate::GetLimiter
EXTRN	?StartBudgetThread_NoAdapter@DXGI@SK@@YAJXZ:PROC ; SK::DXGI::StartBudgetThread_NoAdapter
EXTRN	?ShutdownBudgetThread@DXGI@SK@@YAXXZ:PROC	; SK::DXGI::ShutdownBudgetThread
EXTRN	?SK_UsingVulkan@@YAHXZ:PROC			; SK_UsingVulkan
EXTRN	?InitializeLibrary@NVAPI@sk@@YAHPB_W@Z:PROC	; sk::NVAPI::InitializeLibrary
EXTRN	?UnloadLibrary@NVAPI@sk@@YAHXZ:PROC		; sk::NVAPI::UnloadLibrary
EXTRN	?CountSLIGPUs@NVAPI@sk@@YAHXZ:PROC		; sk::NVAPI::CountSLIGPUs
EXTRN	?CountPhysicalGPUs@NVAPI@sk@@YAHXZ:PROC		; sk::NVAPI::CountPhysicalGPUs
EXTRN	?EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ:PROC ; sk::NVAPI::EnumGPUs_DXGI
EXTRN	?EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ:PROC ; sk::NVAPI::EnumSLIGPUs
EXTRN	?GetSLIState@NVAPI@sk@@YA?AUNV_GET_CURRENT_SLI_STATE_V2@@PAUIUnknown@@@Z:PROC ; sk::NVAPI::GetSLIState
EXTRN	?SetFramerateLimit@NVAPI@sk@@YAHI@Z:PROC	; sk::NVAPI::SetFramerateLimit
EXTRN	?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z:PROC ; sk::NVAPI::SetSLIOverride
EXTRN	?GetDriverVersion@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAK@Z:PROC ; sk::NVAPI::GetDriverVersion
EXTRN	?SK_InitADL@@YAHXZ:PROC				; SK_InitADL
EXTRN	?SK_ADL_CountPhysicalGPUs@@YAHXZ:PROC		; SK_ADL_CountPhysicalGPUs
EXTRN	?SK_ADL_CountActiveGPUs@@YAHXZ:PROC		; SK_ADL_CountActiveGPUs
EXTRN	?GetIO@ImGui@@YAAAUImGuiIO@@XZ:PROC		; ImGui::GetIO
EXTRN	?SK_FetchVersionInfo1@@YG_NPB_W_N@Z:PROC	; SK_FetchVersionInfo1
EXTRN	?SK_FetchVersionInfo@@YG_NPB_W@Z:PROC		; SK_FetchVersionInfo
EXTRN	?SK_UpdateSoftware1@@YGJPB_W_N@Z:PROC		; SK_UpdateSoftware1
EXTRN	?SK_UpdateSoftware@@YGJPB_W@Z:PROC		; SK_UpdateSoftware
EXTRN	___HrLoadAllImportsForDll@4:PROC
EXTRN	?SK_Steam_PreHookCore@@YAHXZ:PROC		; SK_Steam_PreHookCore
EXTRN	?SK_InitFinishCallback@@YGXXZ:PROC		; SK_InitFinishCallback
EXTRN	??0?$SK_IVarStub@H@@QAE@PAHPAUSK_IVariableListener@@@Z:PROC ; SK_IVarStub<int>::SK_IVarStub<int>
EXTRN	??0?$SK_IVarStub@M@@QAE@PAMPAUSK_IVariableListener@@@Z:PROC ; SK_IVarStub<float>::SK_IVarStub<float>
EXTRN	?SK_BypassInject@@YG?AU?$pair@V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@H@std@@XZ:PROC ; SK_BypassInject
EXTRN	?SK_Input_PreInit@@YAXXZ:PROC			; SK_Input_PreInit
EXTRN	?SK_InitWMI@@YA_NXZ:PROC			; SK_InitWMI
EXTRN	?SK_EndGPUPolling@@YAXXZ:PROC			; SK_EndGPUPolling
EXTRN	?SK_ImGui_LoadFonts@@YAXXZ:PROC			; SK_ImGui_LoadFonts
EXTRN	?SK_ResetWindow@@YAXXZ:PROC			; SK_ResetWindow
EXTRN	?SK_ImGui_Toggle@@YAXXZ:PROC			; SK_ImGui_Toggle
EXTRN	?SK_ImGui_PollGamepad_EndFrame@@YAXXZ:PROC	; SK_ImGui_PollGamepad_EndFrame
EXTRN	?SK_D3D11_EndFrame@@YAXXZ:PROC			; SK_D3D11_EndFrame
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__allmul:PROC
EXTRN	__except_handler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?init_mutex@@3PAVSK_Thread_HybridSpinlock@@A:DWORD ; init_mutex
EXTRN	?SK_SteamAPI_CallbackRunCount@@3_JC:QWORD	; SK_SteamAPI_CallbackRunCount
EXTRN	?LoadLibraryW_Original@@3P6GPAUHINSTANCE__@@PB_W@ZA:DWORD ; LoadLibraryW_Original
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?dll_log@@3UiSK_Logger@@A:BYTE			; dll_log
EXTRN	?crash_log@@3UiSK_Logger@@A:BYTE		; crash_log
EXTRN	?budget_log@@3UiSK_Logger@@A:BYTE		; budget_log
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	___ImageBase:BYTE
EXTRN	?config@@3Usk_config_t@@A:BYTE			; config
EXTRN	?process_stats@@3Uprocess_stats_t@@A:BYTE	; process_stats
EXTRN	?cpu_stats@@3Ucpu_perf_t@@A:BYTE		; cpu_stats
EXTRN	?disk_stats@@3Udisk_perf_t@@A:BYTE		; disk_stats
EXTRN	?pagefile_stats@@3Upagefile_perf_t@@A:BYTE	; pagefile_stats
EXTRN	?imports@@3PAUimport_s@@A:BYTE			; imports
EXTRN	_IID_ID3D11Device1:BYTE
EXTRN	?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A:BYTE ; sk::NVAPI::app_name
EXTRN	?SK_ImGui_Visible@@3_NA:BYTE			; SK_ImGui_Visible
EXTRN	?SK_ReShade_Visible@@3_NA:BYTE			; SK_ReShade_Visible
EXTRN	?game_debug@@3UiSK_Logger@@A:BYTE		; game_debug
EXTRN	?SK_D3D11_amount_to_purge@@3HA:DWORD		; SK_D3D11_amount_to_purge
EXTRN	?__SK_RunDLL_Bypass@@3_NA:BYTE			; __SK_RunDLL_Bypass
EXTRN	?CreateWindowExW_Original@@3P6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA:DWORD ; CreateWindowExW_Original
EXTRN	?__SK_DLL_AttachTime@@3_JA:QWORD		; __SK_DLL_AttachTime
EXTRN	?target_fps@@3MA:DWORD				; target_fps
EXTRN	?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A:BYTE	; __SK_RBkEnd
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
_BSS	SEGMENT
?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A DB 014H DUP (?) ; init_tids
?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A DB 014H DUP (?) ; __SK_Init_Suspended_tids
_BSS	ENDS
;	COMDAT ?base_addr@?1??execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z@4PAEA
_BSS	SEGMENT
?base_addr@?1??execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z@4PAEA DD 01H DUP (?) ; `skMemCmd::execute'::`2'::base_addr
_BSS	ENDS
;	COMDAT ?last_test@?1??SK_HasGlobalInjector@@YG_NXZ@4HA
_BSS	SEGMENT
?last_test@?1??SK_HasGlobalInjector@@YG_NXZ@4HA DD 01H DUP (?) ; `SK_HasGlobalInjector'::`2'::last_test
_BSS	ENDS
_BSS	SEGMENT
?user_profile@@3Usk_user_profile_s@@A DB 0820H DUP (?)	; user_profile
_BSS	ENDS
;	COMDAT ?bypass@?1??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA
_BSS	SEGMENT
?bypass@?1??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA DB 01H DUP (?) ; `SK_StartupCore'::`2'::bypass
_BSS	ENDS
;	COMDAT ?tried@?DH@??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA
_BSS	SEGMENT
?tried@?DH@??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA DB 01H DUP (?) ; `SK_StartupCore'::`55'::tried
_BSS	ENDS
_BSS	SEGMENT
?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A DQ 01H DUP (?) ; dummy_windows
_BSS	ENDS
;	COMDAT ?import_tries@?1??SK_BeginBufferSwap@@YGXXZ@4HA
_BSS	SEGMENT
?import_tries@?1??SK_BeginBufferSwap@@YGXXZ@4HA DD 01H DUP (?) ; `SK_BeginBufferSwap'::`2'::import_tries
_BSS	ENDS
;	COMDAT ?cegui_init@?1??SK_BeginBufferSwap@@YGXXZ@4JC
_BSS	SEGMENT
?cegui_init@?1??SK_BeginBufferSwap@@YGXXZ@4JC DD 01H DUP (?) ; `SK_BeginBufferSwap'::`2'::cegui_init
_BSS	ENDS
;	COMDAT ?k32_AddDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GPAXPB_W@ZA
_BSS	SEGMENT
?k32_AddDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GPAXPB_W@ZA DD 01H DUP (?) ; `SK_BeginBufferSwap'::`30'::k32_AddDllDirectory
_BSS	ENDS
;	COMDAT ?$TSS0@?BO@??SK_BeginBufferSwap@@YGXXZ@4HA
_BSS	SEGMENT
?$TSS0@?BO@??SK_BeginBufferSwap@@YGXXZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-30',UNKNOWN volatile * const volatile,ginBufferSwap,int, ?? &>
_BSS	ENDS
;	COMDAT ?k32_RemoveDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHPAX@ZA
_BSS	SEGMENT
?k32_RemoveDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHPAX@ZA DD 01H DUP (?) ; `SK_BeginBufferSwap'::`30'::k32_RemoveDllDirectory
_BSS	ENDS
;	COMDAT ?k32_SetDefaultDllDirectories@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHK@ZA
_BSS	SEGMENT
?k32_SetDefaultDllDirectories@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHK@ZA DD 01H DUP (?) ; `SK_BeginBufferSwap'::`30'::k32_SetDefaultDllDirectories
_BSS	ENDS
;	COMDAT ?hModTBFix@?1??SK_BeginBufferSwap@@YGXXZ@4PAUHINSTANCE__@@A
_BSS	SEGMENT
?hModTBFix@?1??SK_BeginBufferSwap@@YGXXZ@4PAUHINSTANCE__@@A DD 01H DUP (?) ; `SK_BeginBufferSwap'::`2'::hModTBFix
_BSS	ENDS
;	COMDAT ?$TSS3@?1??SK_BeginBufferSwap@@YGXXZ@4HA
_BSS	SEGMENT
?$TSS3@?1??SK_BeginBufferSwap@@YGXXZ@4HA DD 01H DUP (?)	; TSS3<`template-parameter-2',UNKNOWN volatile * const volatile,ginBufferSwap,int, ?? &>
_BSS	ENDS
;	COMDAT ?last_osd_scale@?1??DoKeyboard@@YAXXZ@4_KA
_BSS	SEGMENT
?last_osd_scale@?1??DoKeyboard@@YAXXZ@4_KA DQ 01H DUP (?) ; `DoKeyboard'::`2'::last_osd_scale
_BSS	ENDS
;	COMDAT ?toggle_drag@?1??DoKeyboard@@YAXXZ@4_NA
_BSS	SEGMENT
?toggle_drag@?1??DoKeyboard@@YAXXZ@4_NA DB 01H DUP (?)	; `DoKeyboard'::`2'::toggle_drag
_BSS	ENDS
;	COMDAT ?toggle_time@?1??DoKeyboard@@YAXXZ@4_NA
_BSS	SEGMENT
?toggle_time@?1??DoKeyboard@@YAXXZ@4_NA DB 01H DUP (?)	; `DoKeyboard'::`2'::toggle_time
_BSS	ENDS
;	COMDAT ?budget_init@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4KC
_BSS	SEGMENT
?budget_init@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4KC DD 01H DUP (?) ; `SK_EndBufferSwap'::`2'::budget_init
_BSS	ENDS
;	COMDAT ?hModTZFix@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4PAUHINSTANCE__@@A
_BSS	SEGMENT
?hModTZFix@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4PAUHINSTANCE__@@A DD 01H DUP (?) ; `SK_EndBufferSwap'::`2'::hModTZFix
_BSS	ENDS
;	COMDAT ?$TSS0@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',unsigned __int8 volatile * const volatile,dBufferSwap,GJJPAUIUnknown>
_BSS	ENDS
;	COMDAT ?hModTBFix@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4PAUHINSTANCE__@@A
_BSS	SEGMENT
?hModTBFix@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4PAUHINSTANCE__@@A DD 01H DUP (?) ; `SK_EndBufferSwap'::`2'::hModTBFix
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@skUpdateCmd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@skUpdateCmd@@8 DD FLAT:??_R0?AVskUpdateCmd@@@8 ; skUpdateCmd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3skUpdateCmd@@8
rdata$r	ENDS
;	COMDAT ??_R2skUpdateCmd@@8
rdata$r	SEGMENT
??_R2skUpdateCmd@@8 DD FLAT:??_R1A@?0A@EA@skUpdateCmd@@8 ; skUpdateCmd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SK_ICommand@@8
rdata$r	ENDS
;	COMDAT ??_R3skUpdateCmd@@8
rdata$r	SEGMENT
??_R3skUpdateCmd@@8 DD 00H				; skUpdateCmd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2skUpdateCmd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVskUpdateCmd@@@8
data$r	SEGMENT
??_R0?AVskUpdateCmd@@@8 DD FLAT:??_7type_info@@6B@	; skUpdateCmd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVskUpdateCmd@@', 00H
data$r	ENDS
;	COMDAT ??_R4skUpdateCmd@@6B@
rdata$r	SEGMENT
??_R4skUpdateCmd@@6B@ DD 00H				; skUpdateCmd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVskUpdateCmd@@@8
	DD	FLAT:??_R3skUpdateCmd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@skMemCmd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@skMemCmd@@8 DD FLAT:??_R0?AVskMemCmd@@@8	; skMemCmd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3skMemCmd@@8
rdata$r	ENDS
;	COMDAT ??_R2skMemCmd@@8
rdata$r	SEGMENT
??_R2skMemCmd@@8 DD FLAT:??_R1A@?0A@EA@skMemCmd@@8	; skMemCmd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SK_ICommand@@8
rdata$r	ENDS
;	COMDAT ??_R3skMemCmd@@8
rdata$r	SEGMENT
??_R3skMemCmd@@8 DD 00H					; skMemCmd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2skMemCmd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVskMemCmd@@@8
data$r	SEGMENT
??_R0?AVskMemCmd@@@8 DD FLAT:??_7type_info@@6B@		; skMemCmd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVskMemCmd@@', 00H
data$r	ENDS
;	COMDAT ??_R4skMemCmd@@6B@
rdata$r	SEGMENT
??_R4skMemCmd@@6B@ DD 00H				; skMemCmd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVskMemCmd@@@8
	DD	FLAT:??_R3skMemCmd@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SK_ICommand@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SK_ICommand@@8 DD FLAT:??_R0?AUSK_ICommand@@@8 ; SK_ICommand::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SK_ICommand@@8
rdata$r	ENDS
;	COMDAT ??_R2SK_ICommand@@8
rdata$r	SEGMENT
??_R2SK_ICommand@@8 DD FLAT:??_R1A@?0A@EA@SK_ICommand@@8 ; SK_ICommand::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SK_ICommand@@8
rdata$r	SEGMENT
??_R3SK_ICommand@@8 DD 00H				; SK_ICommand::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SK_ICommand@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSK_ICommand@@@8
data$r	SEGMENT
??_R0?AUSK_ICommand@@@8 DD FLAT:??_7type_info@@6B@	; SK_ICommand `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSK_ICommand@@', 00H
data$r	ENDS
;	COMDAT ??_R4SK_ICommand@@6B@
rdata$r	SEGMENT
??_R4SK_ICommand@@6B@ DD 00H				; SK_ICommand::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSK_ICommand@@@8
	DD	FLAT:??_R3SK_ICommand@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_310d36a0_d2e7_4c0a_aa04_6a9d23b8886a
CONST	SEGMENT
__GUID_310d36a0_d2e7_4c0a_aa04_6a9d23b8886a DD 0310d36a0H
	DW	0d2e7H
	DW	04c0aH
	DB	0aaH
	DB	04H
	DB	06aH
	DB	09dH
	DB	023H
	DB	0b8H
	DB	088H
	DB	06aH
CONST	ENDS
;	COMDAT __GUID_db6f6ddb_ac77_4e88_8253_819df9bbf140
CONST	SEGMENT
__GUID_db6f6ddb_ac77_4e88_8253_819df9bbf140 DD 0db6f6ddbH
	DW	0ac77H
	DW	04e88H
	DB	082H
	DB	053H
	DB	081H
	DB	09dH
	DB	0f9H
	DB	0bbH
	DB	0f1H
	DB	040H
CONST	ENDS
;	COMDAT __GUID_d0223b96_bf7a_43fd_92bd_a43b0d82b9eb
CONST	SEGMENT
__GUID_d0223b96_bf7a_43fd_92bd_a43b0d82b9eb DD 0d0223b96H
	DW	0bf7aH
	DW	043fdH
	DB	092H
	DB	0bdH
	DB	0a4H
	DB	03bH
	DB	0dH
	DB	082H
	DB	0b9H
	DB	0ebH
CONST	ENDS
;	COMDAT __GUID_b18b10ce_2649_405a_870f_95f777d4313a
CONST	SEGMENT
__GUID_b18b10ce_2649_405a_870f_95f777d4313a DD 0b18b10ceH
	DW	02649H
	DW	0405aH
	DB	087H
	DB	0fH
	DB	095H
	DB	0f7H
	DB	077H
	DB	0d4H
	DB	031H
	DB	03aH
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ?last_api@?1??SK_BeginBufferSwap@@YGXXZ@4W4SK_RenderAPI@@A
_DATA	SEGMENT
?last_api@?1??SK_BeginBufferSwap@@YGXXZ@4W4SK_RenderAPI@@A DD 01H ; `SK_BeginBufferSwap'::`2'::last_api
_DATA	ENDS
;	COMDAT ?first@?1??SK_BeginBufferSwap@@YGXXZ@4JC
_DATA	SEGMENT
?first@?1??SK_BeginBufferSwap@@YGXXZ@4JC DD 01H		; `SK_BeginBufferSwap'::`2'::first
_DATA	ENDS
;	COMDAT ??_C@_1CA@KKELPOIK@?$AAd?$AAo?$AAn?$AAe?$AA?$CB?$AA?5?$AA?$CI?$AA?$CF?$AA4?$AAu?$AA?5?$AAm?$AAs?$AA?$CJ?$AA?6?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@KKELPOIK@?$AAd?$AAo?$AAn?$AAe?$AA?$CB?$AA?5?$AA?$CI?$AA?$CF?$AA4?$AAu?$AA?5?$AAm?$AAs?$AA?$CJ?$AA?6?$AA?$AA@ DB 'd'
	DB	00H, 'o', 00H, 'n', 00H, 'e', 00H, '!', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, '4', 00H, 'u', 00H, ' ', 00H, 'm', 00H, 's', 00H, ')'
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@MENKLOLO@?$AA?$FL?$AA?5?$AAW?$AAM?$AAI?$AA?5?$AAP?$AAe?$AAr?$AAf?$AA?5?$AA?$FN?$AA?5?$AAS?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AA?$CF?$AA?9?$AA3?$AA0?$AAs@
CONST	SEGMENT
??_C@_1EE@MENKLOLO@?$AA?$FL?$AA?5?$AAW?$AAM?$AAI?$AA?5?$AAP?$AAe?$AAr?$AAf?$AA?5?$AA?$FN?$AA?5?$AAS?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AA?$CF?$AA?9?$AA3?$AA0?$AAs@ DB '['
	DB	00H, ' ', 00H, 'W', 00H, 'M', 00H, 'I', 00H, ' ', 00H, 'P', 00H
	DB	'e', 00H, 'r', 00H, 'f', 00H, ' ', 00H, ']', 00H, ' ', 00H, 'S'
	DB	00H, 'h', 00H, 'u', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, ' '
	DB	00H, '%', 00H, '-', 00H, '3', 00H, '0', 00H, 's', 00H, ' ', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGKOMLJ@?$AA?4?$AA?4?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_17LGKOMLJ@?$AA?4?$AA?4?$AA?4?$AA?$AA@ DB '.', 00H, '.', 00H, '.', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?wszSteamDLL@?DK@??SK_StartupCore@@YG_NPB_WPAX@Z@4PB_WB
_DATA	SEGMENT
?wszSteamDLL@?DK@??SK_StartupCore@@YG_NPB_WPAX@Z@4PB_WB DD FLAT:$SG428646 ; `SK_StartupCore'::`58'::wszSteamDLL
_DATA	ENDS
;	COMDAT ??_7skUpdateCmd@@6B@
CONST	SEGMENT
??_7skUpdateCmd@@6B@ DD FLAT:??_R4skUpdateCmd@@6B@	; skUpdateCmd::`vftable'
	DD	FLAT:?execute@skUpdateCmd@@UAE?AUSK_ICommandResult@@PBD@Z
	DD	FLAT:?getHelp@SK_ICommand@@UAEPBDXZ
	DD	FLAT:?getNumArgs@skUpdateCmd@@UAEHXZ
	DD	FLAT:?getNumOptionalArgs@skUpdateCmd@@UAEHXZ
	DD	FLAT:?getNumRequiredArgs@skUpdateCmd@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7skMemCmd@@6B@
CONST	SEGMENT
??_7skMemCmd@@6B@ DD FLAT:??_R4skMemCmd@@6B@		; skMemCmd::`vftable'
	DD	FLAT:?execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z
	DD	FLAT:?getHelp@SK_ICommand@@UAEPBDXZ
	DD	FLAT:?getNumArgs@skMemCmd@@UAEHXZ
	DD	FLAT:?getNumOptionalArgs@skMemCmd@@UAEHXZ
	DD	FLAT:?getNumRequiredArgs@skMemCmd@@UAEHXZ
CONST	ENDS
;	COMDAT ??_C@_1BA@IKEODOOB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@IKEODOOB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@ DB 'I', 00H
	DB	'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
_DATA	SEGMENT
?SK_ImGui_Widgets@@3USK_ImGui_WidgetRegistry@@A DB 024H DUP (?)
	DD	03f800000r			; 1	; SK_ImGui_Widgets
?init_@@3Uinit_params_t@@A DD FLAT:??_C@_1BA@IKEODOOB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@ ; init_
	DD	00H
?reentrant_core@@3Uinit_params_t@@A DD FLAT:??_C@_1BA@IKEODOOB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@ ; reentrant_core
	DD	00H
_DATA	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_DATA	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 04H DUP (?)
	DD	FLAT:___ImageBase			; ATL::_AtlComModule
	DD	FLAT:___pobjMapEntryFirst+4
	DD	FLAT:___pobjMapEntryLast
_DATA	ENDS
;	COMDAT ??_C@_0BC@EBCNAKOF@No?5Help?5Available?$AA@
CONST	SEGMENT
??_C@_0BC@EBCNAKOF@No?5Help?5Available?$AA@ DB 'No Help Available', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7SK_ICommand@@6B@
CONST	SEGMENT
??_7SK_ICommand@@6B@ DD FLAT:??_R4SK_ICommand@@6B@	; SK_ICommand::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:?getHelp@SK_ICommand@@UAEPBDXZ
	DD	FLAT:?getNumArgs@SK_ICommand@@UAEHXZ
	DD	FLAT:?getNumOptionalArgs@SK_ICommand@@UAEHXZ
	DD	FLAT:?getNumRequiredArgs@SK_ICommand@@UAEHXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z$51 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z$0
__unwindtable$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z$51
__ehfuncinfo$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z$0
__unwindtable$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z$2
__ehfuncinfo$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__sehtable$??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z DD 0ffffffffH
	DD	FLAT:$LN11@operator
	DD	FLAT:$LN7@operator
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z$0
__ehfuncinfo$??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??4?$deque@KV?$allocator@K@std@@@std@@QAEAAV01@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__F_AtlComModule@ATL@@YAXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__F_AtlComModule@ATL@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z$1
__ehfuncinfo$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1AutoClose@iSK_Logger@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z$0
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z$18
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?SK_EstablishRootPath@@YGXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_EstablishRootPath@@YGXXZ$0
__unwindtable$?SK_HasGlobalInjector@@YG_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_HasGlobalInjector@@YG_NXZ$0
__unwindtable$?SK_InitFinishCallback@@YGXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_InitFinishCallback@@YGXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_InitFinishCallback@@YGXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_InitFinishCallback@@YGXXZ$2
__unwindtable$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z$3
__unwindtable$?SK_ShutdownCore@@YG_NPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_ShutdownCore@@YG_NPB_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SK_ShutdownCore@@YG_NPB_W@Z$1
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?SK_EstablishRootPath@@YGXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SK_EstablishRootPath@@YGXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SK_InitFinishCallback@@YGXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SK_InitFinishCallback@@YGXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SK_HasGlobalInjector@@YG_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SK_HasGlobalInjector@@YG_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SK_ShutdownCore@@YG_NPB_W@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?SK_ShutdownCore@@YG_NPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SK_StartupCore@@YG_NPB_WPAX@Z DD 019930522H
	DD	0fH
	DD	FLAT:__unwindtable$?SK_StartupCore@@YG_NPB_WPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SK_StartupCore@@YG_NPB_WPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$13
	DD	08H
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$15
	DD	09H
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$16
	DD	08H
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$21
	DD	08H
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$23
	DD	08H
	DD	FLAT:__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$27
	DD	08H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?init_tids$initializer$@@3P6AXXZA DD FLAT:??__Einit_tids@@YAXXZ ; init_tids$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?__SK_Init_Suspended_tids$initializer$@@3P6AXXZA DD FLAT:??__E__SK_Init_Suspended_tids@@YAXXZ ; __SK_Init_Suspended_tids$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?dummy_windows$initializer$@@3P6AXXZA DD FLAT:??__Edummy_windows@@YAXXZ ; dummy_windows$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z PROC	; std::_Copy_memmove<unsigned long * *,unsigned long * *>, COMDAT

; 2295 : 	{	// implement copy-like function as memmove

	npad	2
	push	ebp
	mov	ebp, esp

; 2296 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);
; 2297 : 	const char * const _Last_ch = reinterpret_cast<const char *>(_Last);
; 2298 : 	char * const _Dest_ch = reinterpret_cast<char *>(_Dest);
; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	eax, DWORD PTR __First$[ebp]
	push	esi

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi
	mov	edi, DWORD PTR __Last$[ebp]
	sub	edi, eax
	push	edi
	push	eax
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH

; 2301 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	eax, DWORD PTR [edi+esi]
	pop	edi
	pop	esi

; 2302 : 	}

	pop	ebp
	ret	0
??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ENDP	; std::_Copy_memmove<unsigned long * *,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@KABK@?$allocator@K@std@@QAEXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@KABK@?$allocator@K@std@@QAEXPAKABK@Z PROC	; std::allocator<unsigned long>::construct<unsigned long,unsigned long const &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@KABK@?$allocator@K@std@@QAEXPAKABK@Z ENDP	; std::allocator<unsigned long>::construct<unsigned long,unsigned long const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z PROC ; std::allocator<std::_Tree_node<HWND__ *,void *> >::construct<HWND__ *,HWND__ * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAUHWND__@@AAPAU1@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ENDP ; std::allocator<std::_Tree_node<HWND__ *,void *> >::construct<HWND__ *,HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@PAK@std@@PAPAK@std@@YAXPAPAK0AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@PAK@std@@PAPAK@std@@YAXPAPAK0AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<unsigned long *>,unsigned long * *>, COMDAT

; 1208 : 		// nothing to do
; 1209 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@PAK@std@@PAPAK@std@@YAXPAPAK0AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<unsigned long *>,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n1@PAPAKIV?$allocator@PAK@std@@@std@@YAPAPAKPAPAKIAAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Uninitialized_default_fill_n1@PAPAKIV?$allocator@PAK@std@@@std@@YAPAPAKPAPAKIAAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_default_fill_n1<unsigned long * *,unsigned int,std::allocator<unsigned long *> >, COMDAT

; 250  : 	{	// value-initialize _Count objects to raw _First, using default _Alloc construct, all-bits-zero type

	npad	2
	push	ebp
	mov	ebp, esp

; 251  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

	mov	eax, DWORD PTR __Count$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	lea	edi, DWORD PTR [eax*4]
	push	edi
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH

; 252  : 	return (_First + _Count);

	lea	eax, DWORD PTR [edi+esi]
	pop	edi
	pop	esi

; 253  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n1@PAPAKIV?$allocator@PAK@std@@@std@@YAPAPAKPAPAKIAAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_default_fill_n1<unsigned long * *,unsigned int,std::allocator<unsigned long *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Rechecked@PAPAKPAPAK@std@@YAAAPAPAKAAPAPAKPAPAK@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAKPAPAK@std@@YAAAPAPAKAAPAPAKPAPAK@Z PROC ; std::_Rechecked<unsigned long * *,unsigned long * *>, COMDAT

; 480  : 	{	// reset checked from unchecked, generic

	npad	2
	push	ebp
	mov	ebp, esp

; 481  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 482  : 	return (_Dest);
; 483  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAPAKPAPAK@std@@YAAAPAPAKAAPAPAKPAPAK@Z ENDP ; std::_Rechecked<unsigned long * *,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PAKPAKV?$allocator@PAK@std@@@std@@YAPAPAKPAPAK00AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_copy_al_unchecked@PAKPAKV?$allocator@PAK@std@@@std@@YAPAPAKPAPAK00AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<unsigned long *,unsigned long *,std::allocator<unsigned long *> >, COMDAT

; 108  : 	{	// copy [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	eax, DWORD PTR __First$[ebp]
	push	esi

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi

; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	edi, DWORD PTR __Last$[ebp]
	sub	edi, eax

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	push	edi
	push	eax
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH

; 2301 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	eax, DWORD PTR [edi+esi]
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 110  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_copy_al_unchecked@PAKPAKV?$allocator@PAK@std@@@std@@YAPAPAKPAPAK00AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<unsigned long *,unsigned long *,std::allocator<unsigned long *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Ptr_copy_cat@PAKPAK@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAK0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_copy_cat@PAKPAK@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAK0@Z PROC ; std::_Ptr_copy_cat<unsigned long *,unsigned long *>, COMDAT

; 875  : 	{	// return pointer copy optimization category for pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 876  : 	return {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 877  : 	}

	pop	ebp
	ret	0
??$_Ptr_copy_cat@PAKPAK@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAPAK0@Z ENDP ; std::_Ptr_copy_cat<unsigned long *,unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Unchecked@PAPAK@std@@YAPAPAKPAPAK@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAK@std@@YAPAPAKPAPAK@Z PROC		; std::_Unchecked<unsigned long * *>, COMDAT

; 450  : 	{	// construct unchecked from checked, generic

	npad	2
	push	ebp
	mov	ebp, esp

; 451  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 452  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAPAK@std@@YAPAPAKPAPAK@Z ENDP		; std::_Unchecked<unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@KABK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKABK@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@KABK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKABK@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long const &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@KABK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKABK@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Buynode_if_nil@AAPAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@PAUHWND__@@PAX@1@PAU21@AAPAUHWND__@@@Z
_TEXT	SEGMENT
__Node$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Buynode_if_nil@AAPAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@PAUHWND__@@PAX@1@PAU21@AAPAUHWND__@@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * &>, COMDAT
; _this$ = ecx

; 1637 : 		{	// node exists, just return it

	npad	2
	push	ebp
	mov	ebp, esp

; 1638 : 		return (_Node);

	mov	eax, DWORD PTR __Node$[ebp]

; 1639 : 		}

	pop	ebp
	ret	8
??$_Buynode_if_nil@AAPAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@PAUHWND__@@PAX@1@PAU21@AAPAUHWND__@@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode_if_nil<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@PAK@std@@PAPAK@std@@YAXPAPAK0AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAK@std@@PAPAK@std@@YAXPAPAK0AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned long *>,unsigned long * *>, COMDAT

; 1215 : 		// note that this is an optimization for debug mode codegen;
; 1216 : 		// in release mode the BE removes all of this
; 1217 : 	typedef typename _Alloc::value_type _Val;
; 1218 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1219 : 		is_trivially_destructible<_Val>,
; 1220 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1221 : 	}

	ret	0
??$_Destroy_range@V?$allocator@PAK@std@@PAPAK@std@@YAXPAPAK0AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned long *>,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n@PAPAKIV?$allocator@PAK@std@@@std@@YAPAPAKPAPAKIAAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAPAKIV?$allocator@PAK@std@@@std@@YAPAPAKPAPAKIAAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<unsigned long * *,unsigned int,std::allocator<unsigned long *> >, COMDAT

; 260  : 	{	// value-initialize _Count objects to raw _First, using _Al

	npad	2
	push	ebp
	mov	ebp, esp

; 251  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

	mov	eax, DWORD PTR __Count$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	lea	edi, DWORD PTR [eax*4]
	push	edi
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH

; 252  : 	return (_First + _Count);

	lea	eax, DWORD PTR [edi+esi]
	pop	edi
	pop	esi

; 261  : 	typedef _Iter_value_t<_FwdIt> _Ty;
; 262  : 	return (_Uninitialized_default_fill_n1(_First, _Count, _Al,
; 263  : 		_Conjunction_t<
; 264  : 			is_pointer<_FwdIt>,
; 265  : 			is_scalar<_Ty>,
; 266  : 			negation<is_volatile<_Ty>>,
; 267  : 			negation<is_member_pointer<_Ty>>,
; 268  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First))>>()));
; 269  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAPAKIV?$allocator@PAK@std@@@std@@YAPAPAKPAPAKIAAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<unsigned long * *,unsigned int,std::allocator<unsigned long *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAPAKPAPAKV?$allocator@PAK@std@@@std@@YAPAPAKPAPAK00AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAKPAPAKV?$allocator@PAK@std@@@std@@YAPAPAKPAPAK00AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z PROC ; std::_Uninitialized_copy<unsigned long * *,unsigned long * *,std::allocator<unsigned long *> >, COMDAT

; 117  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	eax, DWORD PTR __First$[ebp]
	push	esi

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi

; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	edi, DWORD PTR __Last$[ebp]
	sub	edi, eax

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	push	edi
	push	eax
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH

; 2301 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	eax, DWORD PTR [edi+esi]
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 127  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_copy@PAPAKPAPAKV?$allocator@PAK@std@@@std@@YAPAPAKPAPAK00AAU?$_Wrap_alloc@V?$allocator@PAK@std@@@0@@Z ENDP ; std::_Uninitialized_copy<unsigned long * *,unsigned long * *,std::allocator<unsigned long *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_Tree_node<HWND__ *,void *> >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_Tree_node<HWND__ *,void *> >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@K@?$allocator@K@std@@QAEXPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@K@?$allocator@K@std@@QAEXPAK@Z PROC		; std::allocator<unsigned long>::destroy<unsigned long>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@K@?$allocator@K@std@@QAEXPAK@Z ENDP		; std::allocator<unsigned long>::destroy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAUHWND__@@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAUHWND__@@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@@Z PROC ; std::allocator<std::_Tree_node<HWND__ *,void *> >::destroy<HWND__ *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAUHWND__@@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAUHWND__@@@Z ENDP ; std::allocator<std::_Tree_node<HWND__ *,void *> >::destroy<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z PROC ; std::allocator<std::_Tree_node<HWND__ *,void *> >::destroy<std::_Tree_node<HWND__ *,void *> *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ENDP ; std::allocator<std::_Tree_node<HWND__ *,void *> >::destroy<std::_Tree_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAK@?$allocator@K@std@@QAEXPAPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAK@?$allocator@K@std@@QAEXPAPAK@Z PROC	; std::allocator<unsigned long>::destroy<unsigned long *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAK@?$allocator@K@std@@QAEXPAPAK@Z ENDP	; std::allocator<unsigned long>::destroy<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<unsigned long> > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<unsigned long> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@KABK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKABK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@KABK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKABK@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::construct<unsigned long,unsigned long const &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@KABK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKABK@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::construct<unsigned long,unsigned long const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABK@std@@YAABKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABK@std@@YAABKABK@Z PROC			; std::forward<unsigned long const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABK@std@@YAABKABK@Z ENDP			; std::forward<unsigned long const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], al

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_NX$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,bool,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Insert_at@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@_NPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
__Node$ = 24						; size = 4
??$_Insert_at@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@_NPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@1@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_at<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>, COMDAT
; _this$ = ecx

; 1843 : 		{	// add node with value next to _Wherenode, to left if _Addleft

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1844 : 		if (max_size() - 1 <= this->_Mysize())

	mov	eax, DWORD PTR [edi+4]
	cmp	eax, 214748363				; 0ccccccbH
	jb	SHORT $LN5@Insert_at

; 1845 : 			{	// tree would get too big, fail
; 1846 : 			_Destroy_if_not_nil(_Node);

	push	DWORD PTR __Node$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Destroy_if_not_nil

; 1847 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN686@Insert_at:
$LN5@Insert_at:

; 1848 : 			}
; 1849 : 		_Nodeptr _Newnode = _Buynode_if_nil(_Node,
; 1850 : 			_STD forward<_Valty>(_Val));
; 1851 : 
; 1852 : 		++this->_Mysize();
; 1853 : 		_Newnode->_Parent = _Wherenode;

	mov	ebx, DWORD PTR __Node$[ebp]
	inc	eax
	mov	DWORD PTR [edi+4], eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [ebx+4], eax

; 1854 : 
; 1855 : 		if (_Wherenode == this->_Myhead())

	mov	ecx, DWORD PTR [edi]
	cmp	eax, ecx
	jne	SHORT $LN6@Insert_at

; 1856 : 			{	// first node in tree, just set head values
; 1857 : 			_Root() = _Newnode;

	mov	DWORD PTR [ecx+4], ebx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edi]

; 1858 : 			_Lmost() = _Newnode;

	mov	DWORD PTR [eax], ebx

; 1859 : 			_Rmost() = _Newnode;

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax+8], ebx
	jmp	SHORT $LN11@Insert_at
$LN6@Insert_at:

; 1860 : 			}
; 1861 : 		else if (_Addleft)

	cmp	BYTE PTR __Addleft$[ebp], 0
	je	SHORT $LN8@Insert_at

; 1862 : 			{	// add to left of _Wherenode
; 1863 : 			this->_Left(_Wherenode) = _Newnode;

	mov	DWORD PTR [eax], ebx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	ecx, DWORD PTR [edi]

; 1864 : 			if (_Wherenode == _Lmost())

	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN11@Insert_at

; 1865 : 				_Lmost() = _Newnode;

	mov	DWORD PTR [ecx], ebx

; 1866 : 			}
; 1867 : 		else

	jmp	SHORT $LN11@Insert_at
$LN8@Insert_at:

; 1868 : 			{	// add to right of _Wherenode
; 1869 : 			this->_Right(_Wherenode) = _Newnode;

	mov	DWORD PTR [eax+8], ebx

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	ecx, DWORD PTR [edi]

; 1870 : 			if (_Wherenode == _Rmost())

	cmp	eax, DWORD PTR [ecx+8]
	jne	SHORT $LN11@Insert_at

; 1871 : 				_Rmost() = _Newnode;

	mov	DWORD PTR [ecx+8], ebx
$LN11@Insert_at:

; 1872 : 			}
; 1873 : 
; 1874 : 		for (_Nodeptr _Pnode = _Newnode;
; 1875 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR [ebx+4]
	mov	esi, ebx
	cmp	BYTE PTR [eax+12], 0
	jne	$LN3@Insert_at
$LL2@Insert_at:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [esi+4]

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	edx, DWORD PTR [eax+4]

; 1876 : 			if (this->_Parent(_Pnode)
; 1877 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	ecx, DWORD PTR [edx]
	cmp	eax, ecx
	jne	SHORT $LN12@Insert_at

; 1878 : 				{	// fixup red-red in left subtree
; 1879 : 				_Wherenode =

	mov	ecx, DWORD PTR [edx+8]

; 1880 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));
; 1881 : 				if (this->_Color(_Wherenode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	je	SHORT $LN684@Insert_at

; 1882 : 					{	// parent has two red children, blacken both
; 1883 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1884 : 					this->_Color(_Wherenode) = this->_Black;
; 1885 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1886 : 						= this->_Red;
; 1887 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1888 : 					}
; 1889 : 				else
; 1890 : 					{	// parent has red and black children
; 1891 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LN16@Insert_at

; 1892 : 						{	// rotate right child to left
; 1893 : 						_Pnode = this->_Parent(_Pnode);

	mov	esi, eax

; 1894 : 						_Lrotate(_Pnode);

	mov	ecx, edi
	push	esi
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lrotate
$LN16@Insert_at:

; 1895 : 						}
; 1896 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+12], 1

; 1897 : 						this->_Black;	// propagate red up
; 1898 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1899 : 						this->_Red;
; 1900 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]

; 2128 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	edx, DWORD PTR [ecx]

; 2129 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx+8]

; 2131 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN330@Insert_at

; 2132 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], ecx
$LN330@Insert_at:

; 2133 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 2135 : 		if (_Wherenode == _Root())

	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN331@Insert_at

; 2136 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	$LN683@Insert_at
$LN331@Insert_at:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ecx+4]

; 2137 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN333@Insert_at

; 2138 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	$LN683@Insert_at
$LN333@Insert_at:

; 2140 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], edx

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx+8], ecx

; 1901 : 					}
; 1902 : 				}
; 1903 : 			else

	jmp	SHORT $LN683@Insert_at
$LN12@Insert_at:

; 1904 : 				{	// fixup red-red in right subtree
; 1905 : 				_Wherenode =
; 1906 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));
; 1907 : 				if (this->_Color(_Wherenode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN17@Insert_at
$LN684@Insert_at:

; 1908 : 					{	// parent has two red children, blacken both
; 1909 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	BYTE PTR [eax+12], 1

; 1910 : 					this->_Color(_Wherenode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1911 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1912 : 						this->_Red;
; 1913 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	eax, DWORD PTR [esi+4]
	mov	esi, DWORD PTR [eax+4]

; 1914 : 					}
; 1915 : 				else

	jmp	SHORT $LN18@Insert_at
$LN17@Insert_at:

; 1916 : 					{	// parent has red and black children
; 1917 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN19@Insert_at

; 1918 : 						{	// rotate left child to right
; 1919 : 						_Pnode = this->_Parent(_Pnode);

	mov	esi, eax

; 1920 : 						_Rrotate(_Pnode);

	mov	ecx, edi
	push	esi
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rrotate
$LN19@Insert_at:

; 1921 : 						}
; 1922 : 					this->_Color(this->_Parent(_Pnode)) =

	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+12], 1

; 1923 : 						this->_Black;	// propagate red up
; 1924 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 0

; 1925 : 						this->_Red;
; 1926 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]

; 2098 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	edx, DWORD PTR [ecx+8]

; 2099 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 2101 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN529@Insert_at

; 2102 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], ecx
$LN529@Insert_at:

; 2103 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 2105 : 		if (_Wherenode == _Root())

	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN530@Insert_at

; 2106 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], edx

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	jmp	SHORT $LN533@Insert_at
$LN530@Insert_at:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx+4]

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN532@Insert_at

; 2108 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], edx

; 2109 : 		else

	jmp	SHORT $LN533@Insert_at
$LN532@Insert_at:

; 2110 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], edx
$LN533@Insert_at:

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [edx], ecx
$LN683@Insert_at:

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [ecx+4], edx
$LN18@Insert_at:

; 1872 : 			}
; 1873 : 
; 1874 : 		for (_Nodeptr _Pnode = _Newnode;
; 1875 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+12], 0
	je	$LL2@Insert_at
$LN3@Insert_at:

; 1927 : 					}
; 1928 : 				}
; 1929 : 
; 1930 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax+4]
	mov	BYTE PTR [eax+12], 1

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ebx
	pop	ebx

; 1931 : 		return (iterator(_Newnode, _STD addressof(this->_Get_data())));
; 1932 : 		}

	pop	ebp
	ret	20					; 00000014H
$LN685@Insert_at:
??$_Insert_at@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@_NPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@1@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_at<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<HWND__ *,HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z PROC ; std::_Traits_equal<std::char_traits<wchar_t> >, COMDAT

; 24   : 	{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	esi, DWORD PTR __Left_size$[ebp]
	cmp	esi, DWORD PTR __Right_size$[ebp]
	jne	SHORT $LN3@Traits_equ
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Left$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN19@Traits_equ
$LL11@Traits_equ:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	jne	SHORT $LN15@Traits_equ

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	edx, 2
	add	ecx, 2
	sub	esi, 1
	jne	SHORT $LL11@Traits_equ
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	al, 1
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
$LN15@Traits_equ:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	movzx	eax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	jne	SHORT $LN3@Traits_equ
$LN19@Traits_equ:
	mov	al, 1
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
$LN3@Traits_equ:

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	xor	al, al
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z ENDP ; std::_Traits_equal<std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@PAUHWND__@@PAX@std@@@std@@YAAAPAU?$_Tree_node@PAUHWND__@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@PAUHWND__@@PAX@std@@@std@@YAAAPAU?$_Tree_node@PAUHWND__@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<HWND__ *,void *> * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@PAUHWND__@@PAX@std@@@std@@YAAAPAU?$_Tree_node@PAUHWND__@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<HWND__ *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z PROC		; std::forward<wchar_t * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@K@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAK@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@K@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAK@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@K@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAK@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN8@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAUHWND__@@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAUHWND__@@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<HWND__ *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAUHWND__@@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAUHWND__@@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAD@std@@YA$$QADAAD@Z PROC			; std::move<char &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAD@std@@YA$$QADAAD@Z ENDP			; std::move<char &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 561  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_Zero_then_variadic_args_t>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@ABU?$less@PAUHWND__@@@std@@@std@@YAABU?$less@PAUHWND__@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@PAUHWND__@@@std@@@std@@YAABU?$less@PAUHWND__@@@0@ABU10@@Z PROC ; std::forward<std::less<HWND__ *> const &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@ABU?$less@PAUHWND__@@@std@@@std@@YAABU?$less@PAUHWND__@@@0@ABU10@@Z ENDP ; std::forward<std::less<HWND__ *> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@1@PAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAPAK@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAPAK@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAPAK@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0K@?$allocator@PAK@std@@QAE@ABV?$allocator@K@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0K@?$allocator@PAK@std@@QAE@ABV?$allocator@K@1@@Z PROC ; std::allocator<unsigned long *>::allocator<unsigned long *><unsigned long>, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0K@?$allocator@PAK@std@@QAE@ABV?$allocator@K@1@@Z ENDP ; std::allocator<unsigned long *>::allocator<unsigned long *><unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Pocma@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Pocma@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U?$integral_constant@_N$00@0@@Z PROC ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned long> > >, COMDAT

; 1152 : 	_Left = _STD move(_Right);
; 1153 : 	}

	ret	0
??$_Pocma@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U?$integral_constant@_N$00@0@@Z ENDP ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?8KK@std@@YA_NABV?$allocator@K@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8KK@std@@YA_NABV?$allocator@K@0@0@Z PROC		; std::operator==<unsigned long,unsigned long>, COMDAT

; 898  : 	return (true);

	mov	al, 1

; 899  : 	}

	ret	0
??$?8KK@std@@YA_NABV?$allocator@K@0@0@Z ENDP		; std::operator==<unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?8V?$allocator@K@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$allocator@K@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z PROC ; std::operator==<std::allocator<unsigned long>,std::allocator<unsigned long> >, COMDAT

; 1117 : 	return (static_cast<const _Ty&>(_Left)

	mov	al, 1

; 1118 : 		== static_cast<const _Other&>(_Right));
; 1119 : 	}

	ret	0
??$?8V?$allocator@K@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z ENDP ; std::operator==<std::allocator<unsigned long>,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@V?$allocator@K@std@@@std@@YA$$QAV?$allocator@K@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@K@std@@@std@@YA$$QAV?$allocator@K@0@AAV10@@Z PROC ; std::forward<std::allocator<unsigned long> >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@V?$allocator@K@std@@@std@@YA$$QAV?$allocator@K@0@AAV10@@Z ENDP ; std::forward<std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,void,0>, COMDAT
; _this$ = ecx

; 189  : 		{	// construct from moved values

	npad	2
	push	ebp
	mov	ebp, esp

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR __Val1$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	eax, DWORD PTR __Val2$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], eax

; 190  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@AAV01@X$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > &,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??$emplace_back@ABK@?$deque@KV?$allocator@K@std@@@std@@QAEXABK@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$emplace_back@ABK@?$deque@KV?$allocator@K@std@@@std@@QAEXABK@Z PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::emplace_back<unsigned long const &>, COMDAT
; _this$ = ecx

; 1184 : 		{	// insert element at end

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx

; 1186 : 		_PUSH_BACK_BEGIN;

	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+16]
	add	eax, ecx
	test	al, 3
	jne	SHORT $LN2@emplace_ba
	lea	eax, DWORD PTR [ecx+4]
	shr	eax, 2
	cmp	DWORD PTR [esi+8], eax
	ja	SHORT $LN2@emplace_ba
	push	1
	mov	ecx, esi
	call	?_Growmap@?$deque@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
$LN2@emplace_ba:
	mov	eax, DWORD PTR [esi+8]
	push	ebx
	push	edi
	lea	eax, DWORD PTR [eax*4-1]
	and	DWORD PTR [esi+12], eax
	mov	edi, DWORD PTR [esi+16]
	add	edi, DWORD PTR [esi+12]

; 762  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	ecx, DWORD PTR [esi+8]
	mov	eax, edi
	shr	eax, 2
	dec	ecx
	and	ecx, eax

; 1186 : 		_PUSH_BACK_BEGIN;

	mov	eax, DWORD PTR [esi+4]
	lea	ebx, DWORD PTR [ecx*4]
	cmp	DWORD PTR [ebx+eax], 0
	jne	SHORT $LN3@emplace_ba
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	ecx, ecx
	jne	SHORT $LN113@emplace_ba
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN177@emplace_ba:
$LN113@emplace_ba:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1186 : 		_PUSH_BACK_BEGIN;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [ebx+eax], ecx
$LN3@emplace_ba:

; 1187 : 		this->_Getal().construct(

	mov	eax, DWORD PTR [esi+4]
	and	edi, 3
	mov	eax, DWORD PTR [ebx+eax]
	lea	ecx, DWORD PTR [eax+edi*4]
	pop	edi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN159@emplace_ba
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN159@emplace_ba:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1190 : 		_PUSH_BACK_END;

	inc	DWORD PTR [esi+16]
	pop	esi

; 1191 : 		}

	pop	ebp
	ret	4
$LN176@emplace_ba:
??$emplace_back@ABK@?$deque@KV?$allocator@K@std@@@std@@QAEXABK@Z ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::emplace_back<unsigned long const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@K@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@K@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><std::_Wrap_alloc<std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [ecx], 0

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [ecx+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [ecx+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [ecx+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	8
??$?0U?$_Wrap_alloc@V?$allocator@K@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><std::_Wrap_alloc<std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > >, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z PROC ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >, COMDAT

; 1094 : 	{	// return distance between iterators; input

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1095 : 	_Iter_diff_t<_InIt> _Off = 0;

	xor	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	je	SHORT $LN56@Distance1
$LL14@Distance1:

; 1097 : 		++_Off;

	inc	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN49@Distance1

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN46@Distance1

; 63   : 			_Ptr = _Mytree::_Min(

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN26@Distance1
	npad	4
$LL25@Distance1:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	eax, edx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL25@Distance1

; 65   : 		else

	jmp	SHORT $LN26@Distance1
$LN46@Distance1:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN57@Distance1
$LL9@Distance1:
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN57@Distance1

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, edx
	mov	DWORD PTR __First$[ebp], eax
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL9@Distance1
$LN57@Distance1:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	eax, edx
$LN26@Distance1:
	mov	DWORD PTR __First$[ebp], eax
$LN49@Distance1:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1096 : 	for (; _First != _Last; ++_First)

	jne	SHORT $LL14@Distance1
$LN56@Distance1:

; 1098 : 
; 1099 : 	return (_Off);

	mov	eax, esi
	pop	esi

; 1100 : 	}

	pop	ebp
	ret	0
??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ENDP ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Addleft$2 = -20					; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
$T3 = 12						; size = 4
__Where$4 = 12						; size = 4
__Leftish$ = 12						; size = 1
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_nohint<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>, COMDAT
; _this$ = ecx

; 1784 : 		{	// try to insert node, on left if _Leftish

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	edx, DWORD PTR [ecx]

; 1784 : 		{	// try to insert node, on left if _Leftish

	push	ebx
	mov	ebx, DWORD PTR __Val$[ebp]
	push	esi

; 1785 : 		_TRY_BEGIN
; 1786 : 		_Nodeptr _Trynode = _Root();

	mov	eax, DWORD PTR [edx+4]
	push	edi

; 1787 : 		_Nodeptr _Wherenode = this->_Myhead();

	mov	edi, edx
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1788 : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	dl, 1
	mov	DWORD PTR _this$[ebp], ecx

; 1789 : 
; 1790 : 		while (!this->_Isnil(_Trynode))

	cmp	BYTE PTR [eax+13], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	BYTE PTR __Addleft$2[ebp], dl
	jne	SHORT $LN3@Insert_noh
	mov	ecx, DWORD PTR [ebx]
	mov	dh, BYTE PTR __Leftish$[ebp]
$LL2@Insert_noh:

; 1791 : 			{	// look for leaf to insert before (_Addleft) or after
; 1792 : 			_Wherenode = _Trynode;

	mov	edi, eax

; 1793 : 			if (_Leftish)

	test	dh, dh
	je	SHORT $LN5@Insert_noh
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	DWORD PTR [eax+16], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1794 : 				_Addleft = !_DEBUG_LT_PRED(this->_Getcomp(),

	setae	dl

; 1795 : 					this->_Key(_Trynode),
; 1796 : 					this->_Kfn(_Val));	// favor left end
; 1797 : 			else

	jmp	SHORT $LN276@Insert_noh
$LN5@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	ecx, DWORD PTR [eax+16]
	setb	dl
$LN276@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1798 : 				_Addleft = _DEBUG_LT_PRED(this->_Getcomp(),

	mov	BYTE PTR __Addleft$2[ebp], dl

; 1799 : 					this->_Kfn(_Val),
; 1800 : 					this->_Key(_Trynode));	// favor right end
; 1801 : 			_Trynode = _Addleft ? this->_Left(_Trynode)

	test	dl, dl
	je	SHORT $LN16@Insert_noh
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN17@Insert_noh
$LN16@Insert_noh:
	mov	eax, DWORD PTR [eax+8]
$LN17@Insert_noh:

; 1789 : 
; 1790 : 		while (!this->_Isnil(_Trynode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Insert_noh
	mov	ecx, DWORD PTR _this$[ebp]
$LN3@Insert_noh:

; 43   : 		: _Ptr(_Pnode)

	mov	esi, edi
	mov	DWORD PTR __Where$4[ebp], esi

; 1802 : 				: this->_Right(_Trynode);
; 1803 : 			}
; 1804 : 
; 1805 : #pragma warning(push)
; 1806 : #pragma warning(disable: 4127)	// conditional expression is constant
; 1807 : 		if (this->_Multi)
; 1808 : 			return (_Pairib(_Insert_at(_Addleft, _Wherenode,
; 1809 : 				_STD forward<_Valty>(_Val), _Newnode), true));
; 1810 : 		else
; 1811 : 			{	// insert only if unique
; 1812 : 			iterator _Where = iterator(_Wherenode, _STD addressof(this->_Get_data()));
; 1813 : 			if (!_Addleft)

	test	dl, dl
	je	SHORT $LN12@Insert_noh

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [ecx]
	cmp	edi, DWORD PTR [eax]

; 1814 : 				;	// need to test if insert after is okay
; 1815 : 			else if (_Where == begin())

	jne	SHORT $LN11@Insert_noh

; 1816 : 				return (_Pairib(_Insert_at(true, _Wherenode,

	push	DWORD PTR __Newnode$[ebp]
	push	ebx
	push	edi
	push	1
$LN278@Insert_noh:
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??$_Insert_at@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@1@_NPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@1@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_at<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN11@Insert_noh:

; 306  : 		--static_cast<_Mybase&>(*this);

	lea	ecx, DWORD PTR __Where$4[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator--
	mov	esi, DWORD PTR __Where$4[ebp]
$LN12@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	eax, DWORD PTR [esi+16]
	cmp	eax, DWORD PTR [ebx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1821 : 			if (_DEBUG_LT_PRED(this->_Getcomp(),

	jae	SHORT $LN13@Insert_noh

; 1822 : 				this->_Key(_Where._Mynode()),
; 1823 : 				this->_Kfn(_Val)))
; 1824 : 				return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	push	DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ebx
	push	edi
	push	DWORD PTR __Addleft$2[ebp]
	jmp	SHORT $LN278@Insert_noh
__catch$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z$0:

; 1825 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1826 : 			else
; 1827 : 				{	// duplicate, don't insert
; 1828 : 				_Destroy_if_not_nil(_Newnode);
; 1829 : 				return (_Pairib(_Where, false));
; 1830 : 				}
; 1831 : 			}
; 1832 : #pragma warning(pop)
; 1833 : 		_CATCH_ALL
; 1834 : 		_Destroy_if_not_nil(_Newnode);

	push	DWORD PTR __Newnode$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Destroy_if_not_nil

; 1835 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN279@Insert_noh:
$LN13@Insert_noh:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	1
	push	DWORD PTR __Newnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	DWORD PTR [eax], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	BYTE PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1837 : 		}

	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN275@Insert_noh:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_nohint<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Buynode@AAPAUHWND__@@@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$_Buynode@AAPAUHWND__@@@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode<HWND__ * &>, COMDAT
; _this$ = ecx

; 895  : 		{	// allocate a node with defaults and set links and value

	npad	2
	push	ebp
	mov	ebp, esp

; 896  : 		_Nodeptr _Pnode = _Buynode0();

	call	?_Buynode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode0

; 596  : 		return ((reference)_Pnode->_Myval);

	lea	edx, DWORD PTR [eax+16]

; 897  : 
; 898  : 		this->_Color(_Pnode) = _Red;

	mov	WORD PTR [eax+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	edx, edx
	je	SHORT $LN47@Buynode
	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], ecx
$LN47@Buynode:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 911  : 		}

	pop	ebp
	ret	4
??$_Buynode@AAPAUHWND__@@@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z PROC ; std::forward<HWND__ * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ENDP ; std::forward<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@PAUHWND__@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::construct<std::_Tree_node<HWND__ *,void *> *,std::_Tree_node<HWND__ *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z PROC ; std::pointer_traits<std::_Container_proxy *>::pointer_to, COMDAT

; 289  : 		{	// convert raw reference to pointer

	npad	2
	push	ebp
	mov	ebp, esp

; 290  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 291  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ENDP ; std::pointer_traits<std::_Container_proxy *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 22   : 	{	// return smaller of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	cmovb	eax, edx

; 24   : 	}

	pop	ebp
	ret	0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@_W@std@@YAPA_WPA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@_W@std@@YAPA_WPA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@K@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@K@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAK@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@K@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAK@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@K@std@@YAPAKPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@K@std@@YAPAKPAK@Z PROC			; std::_Unfancy<unsigned long>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@K@std@@YAPAKPAK@Z ENDP			; std::_Unfancy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><>, COMDAT
; _this$ = ecx

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [ecx], 0

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [ecx+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [ecx+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [ecx+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN13@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address, COMDAT
; _this$ = ecx

; 1026 : 		{	// return address of mutable _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 1027 : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 1028 : 		}

	pop	ebp
	ret	4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 536870911				; 1fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 3

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAUHWND__@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAUHWND__@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<HWND__ *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAUHWND__@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAUHWND__@@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAUHWND__@@@std@@YAPAPAUHWND__@@AAPAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAUHWND__@@@std@@YAPAPAUHWND__@@AAPAU1@@Z PROC ; std::addressof<HWND__ *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAUHWND__@@@std@@YAPAPAUHWND__@@AAPAU1@@Z ENDP ; std::addressof<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$swap@DX@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@DX@std@@YAXAAD0@Z PROC				; std::swap<char,void>, COMDAT

; 65   : 	{	// exchange values stored at _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 66   : 	_Ty _Tmp = _STD move(_Left);
; 67   : 	_Left = _STD move(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Left$[ebp]
	push	ebx
	mov	al, BYTE PTR [ecx]
	mov	bl, BYTE PTR [edx]
	mov	BYTE PTR [edx], al

; 68   : 	_Right = _STD move(_Tmp);

	mov	BYTE PTR [ecx], bl
	pop	ebx

; 69   : 	}

	pop	ebp
	ret	0
??$swap@DX@std@@YAXAAD0@Z ENDP				; std::swap<char,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0ABU?$less@PAUHWND__@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAUHWND__@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@PAUHWND__@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAUHWND__@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1><std::less<HWND__ *> const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 561  : 		_Mysize(0)

	mov	DWORD PTR [ecx+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 313  : 		}

	ret	12					; 0000000cH
??$?0ABU?$less@PAUHWND__@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@PAUHWND__@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1><std::less<HWND__ *> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@std@@YAPAPAU?$_Tree_node@PAUHWND__@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@std@@YAPAPAU?$_Tree_node@PAUHWND__@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<HWND__ *,void *> *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@std@@YAPAPAU?$_Tree_node@PAUHWND__@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<HWND__ *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@_W@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z PROC		; std::addressof<wchar_t *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z ENDP		; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAV?$allocator@_W@1@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAV?$allocator@_W@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAPAK@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAPAK@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAK@std@@YAPAPAKAAPAK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAK@std@@YAPAPAKAAPAK@Z PROC		; std::addressof<unsigned long *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAK@std@@YAPAPAKAAPAK@Z ENDP		; std::addressof<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long *> >::_Wrap_alloc<std::allocator<unsigned long *> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long *> >::_Wrap_alloc<std::allocator<unsigned long *> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$_Pocma@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z PROC ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned long> > >, COMDAT

; 1163 : 	typename _Alty::propagate_on_container_move_assignment _Tag;
; 1164 : 	_Pocma(_Left, _Right, _Tag);
; 1165 : 	}

	ret	0
??$_Pocma@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z ENDP ; std::_Pocma<std::_Wrap_alloc<std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?9V?$allocator@K@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$allocator@K@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z PROC ; std::operator!=<std::allocator<unsigned long>,std::allocator<unsigned long> >, COMDAT

; 1126 : 	return (!(_Left == _Right));

	xor	al, al

; 1127 : 	}

	ret	0
??$?9V?$allocator@K@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@K@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<unsigned long>,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0V?$allocator@K@std@@@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@$$QAV?$allocator@K@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0V?$allocator@K@std@@@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@$$QAV?$allocator@K@1@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> ><std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0V?$allocator@K@std@@@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@$$QAV?$allocator@K@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> ><std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z
_TEXT	SEGMENT
tv444 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>, COMDAT
; _this$ = ecx

; 2004 : 		{	// find leftmost node not less than _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	mov	ebx, DWORD PTR __Keyval$[ebp]
	push	edi

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	edi, DWORD PTR [ecx]

; 2006 : 		_Nodeptr _Lonode = this->_Myhead();	// end() if search fails
; 2007 : 		_Nodeptr _Hinode = this->_Myhead();	// end() if search fails

	mov	ecx, edi

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	eax, DWORD PTR [edi+4]
	mov	DWORD PTR tv444[ebp], eax

; 2005 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [eax]

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN3@Eqrange
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	esi, DWORD PTR [ebx]
$LL2@Eqrange:
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2010 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	jae	SHORT $LN6@Eqrange

; 2011 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR [eax+8]

; 2012 : 			else

	jmp	SHORT $LN7@Eqrange
$LN6@Eqrange:

; 2015 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	cmp	BYTE PTR [ecx+13], 0
	je	SHORT $LN8@Eqrange
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	cmp	esi, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2015 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	cmovb	ecx, eax
$LN8@Eqrange:

; 2016 : 						this->_Key(_Pnode)))
; 2017 : 					_Hinode = _Pnode;	// _Pnode greater, remember it
; 2018 : 				_Lonode = _Pnode;

	mov	edi, eax

; 2019 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR [eax]
$LN7@Eqrange:

; 2008 : 
; 2009 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Eqrange
	pop	esi
$LN3@Eqrange:

; 2020 : 				}
; 2021 : 
; 2022 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()

	cmp	BYTE PTR [ecx+13], 0
	mov	eax, ecx
	cmovne	eax, DWORD PTR tv444[ebp]
	mov	eax, DWORD PTR [eax]

; 2023 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2024 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN5@Eqrange
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 234  : 		return (_Left < _Right);

	mov	edx, DWORD PTR [ebx]
$LL4@Eqrange:
	cmp	edx, DWORD PTR [eax+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2025 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), _Keyval, this->_Key(_Pnode)))

	jae	SHORT $LN9@Eqrange

; 2026 : 				{	// _Pnode greater than _Keyval, remember it
; 2027 : 				_Hinode = _Pnode;

	mov	ecx, eax

; 2028 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR [eax]

; 2029 : 				}
; 2030 : 			else

	jmp	SHORT $LN10@Eqrange
$LN9@Eqrange:

; 2031 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR [eax+8]
$LN10@Eqrange:

; 2023 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2024 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Eqrange
$LN5@Eqrange:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edi
	pop	edi

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	DWORD PTR [eax+4], ecx
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2036 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z
_TEXT	SEGMENT
__Ans$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>, COMDAT
; _this$ = ecx

; 2040 : 		{	// find leftmost node not less than _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	call	??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Ans$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2045 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1705 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1705 : 		}

	ret	4
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::_Construct<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > > >, COMDAT
; _this$ = ecx

; 1047 : 		{	// initialize from [_First, _Last), input iterators

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8

; 1048 : 		_TRY_BEGIN

	mov	eax, DWORD PTR __First$[ebp+8]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LL4@Construct:

; 462  : 		return (this->_Myoff == _Right._Myoff);

	cmp	eax, DWORD PTR __Last$[ebp+8]

; 1049 : 
; 1050 : 		for (; _First != _Last; ++_First)

	je	SHORT $LN3@Construct
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 204  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	ecx, DWORD PTR __First$[ebp]
	test	ecx, ecx
	jne	SHORT $LN23@Construct
	xor	esi, esi
	jmp	SHORT $LN24@Construct
$LN23@Construct:
	mov	esi, DWORD PTR [ecx]
$LN24@Construct:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 762  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	edx, DWORD PTR [esi+8]
	mov	ecx, eax
	shr	ecx, 2
	dec	edx
	and	edx, ecx

; 339  : 		size_type _Off = _Myoff % _DEQUESIZ;

	and	eax, 3

; 340  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	ecx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [ecx+edx*4]
	lea	eax, DWORD PTR [ecx+eax*4]

; 1051 : 			emplace_back(*_First);

	mov	ecx, edi
	push	eax
	call	??$emplace_back@ABK@?$deque@KV?$allocator@K@std@@@std@@QAEXABK@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::emplace_back<unsigned long const &>

; 364  : 		++_Myoff;

	mov	eax, DWORD PTR __First$[ebp+8]
	inc	eax
	mov	DWORD PTR __First$[ebp+8], eax
	jmp	SHORT $LL4@Construct
__catch$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z$0:

; 1052 : 
; 1053 : 		_CATCH_ALL
; 1054 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy

; 1055 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN32@Construct:
$LN3@Construct:

; 1056 : 		_CATCH_END
; 1057 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN31@Construct:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::_Construct<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > > >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@@Z
_TEXT	SEGMENT
__Pdeque$ = 8						; size = 4
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Setcont, COMDAT
; _this$ = ecx

; 511  : 		{	// set container pointer

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 170  : 		if (_Parent == 0)

	mov	eax, DWORD PTR __Pdeque$[ebp]
	test	eax, eax
	je	SHORT $LN5@Setcont

; 171  : 			{	// no future parent, just disown current parent
; 172  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 173  : 			_Lockit _Lock(_LOCK_DEBUG);
; 174  : 			_Orphan_me();
; 175  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 176  : 			}
; 177  : 		else
; 178  : 			{	// have a parent, do adoption
; 179  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 180  : 
; 181  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 182  : 			if (_Myproxy != _Parent_proxy)
; 183  : 				{	// change parentage
; 184  : 				_Lockit _Lock(_LOCK_DEBUG);
; 185  : 				_Orphan_me();
; 186  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 187  : 				_Parent_proxy->_Myfirstiter = this;
; 188  : 				_Myproxy = _Parent_proxy;
; 189  : 				}
; 190  : 
; 191  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 192  : 			_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN5@Setcont:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 513  : 		}

	pop	ebp
	ret	4
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Setcont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Compat, COMDAT
; _this$ = ecx

; 507  : 		}

	ret	4
?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator!=, COMDAT
; _this$ = ecx

; 466  : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	cmp	ecx, DWORD PTR [eax+8]
	setne	al

; 467  : 		return (!(*this == _Right));
; 468  : 		}

	pop	ebp
	ret	4
??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator==, COMDAT
; _this$ = ecx

; 460  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	cmp	ecx, DWORD PTR [eax+8]
	sete	al

; 461  : 		_Compat(_Right);
; 462  : 		return (this->_Myoff == _Right._Myoff);
; 463  : 		}

	pop	ebp
	ret	4
??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator++, COMDAT
; _this$ = ecx

; 350  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 351  : 		const auto _Mycont = static_cast<const _Mydeque *>(this->_Getcont());
; 352  : 		if (_Mycont == 0
; 353  : 			|| _Mycont->_Myoff + _Mycont->_Mysize <= this->_Myoff)
; 354  : 		{	// report error
; 355  : 		_DEBUG_ERROR("deque iterator not incrementable");
; 356  : 		}
; 357  : 
; 358  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 359  : 		const auto _Mycont = static_cast<const _Mydeque *>(this->_Getcont());
; 360  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 361  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize);
; 362  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 363  : 
; 364  : 		++_Myoff;

	inc	DWORD PTR [ecx+8]

; 365  : 		return (*this);

	mov	eax, ecx

; 366  : 		}

	ret	0
??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBEABKXZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 204  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR [ecx]
	push	esi
	test	eax, eax
	jne	SHORT $LN5@operator
	xor	esi, esi
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	esi, DWORD PTR [eax]
$LN6@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 762  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, edx
	mov	eax, DWORD PTR [esi+8]

; 321  : 		const auto _Mycont = static_cast<const _Mydeque *>(this->_Getcont());
; 322  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 323  : 		if (_Mycont == 0
; 324  : 			|| this->_Myoff < _Mycont->_Myoff
; 325  : 			|| _Mycont->_Myoff + _Mycont->_Mysize <= this->_Myoff)
; 326  : 		{	// report error
; 327  : 		_DEBUG_ERROR("deque iterator not dereferencable");
; 328  : 		}
; 329  : 
; 330  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 331  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 332  : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myoff <= this->_Myoff
; 333  : 			&& this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize);
; 334  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 335  : 
; 336  : 		_Analysis_assume_(_Mycont != 0);
; 337  : 
; 338  : 		size_type _Block = _Mycont->_Getblock(_Myoff);
; 339  : 		size_type _Off = _Myoff % _DEQUESIZ;

	and	edx, 3

; 762  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	dec	eax
	shr	ecx, 2
	and	ecx, eax

; 340  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	eax, DWORD PTR [esi+4]
	pop	esi
	mov	eax, DWORD PTR [eax+ecx*4]
	lea	eax, DWORD PTR [eax+edx*4]

; 341  : 		}

	ret	0
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QBEABKXZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >, COMDAT
; _this$ = ecx

; 302  : 		{	// construct with offset _Off in *_Pdeque

	npad	2
	push	ebp
	mov	ebp, esp

; 301  : 		: _Myoff(_Off)

	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 170  : 		if (_Parent == 0)

	mov	eax, DWORD PTR __Pdeque$[ebp]

; 133  : 		: _Myproxy(0), _Mynextiter(0)

	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+4], 0

; 170  : 		if (_Parent == 0)

	test	eax, eax
	je	SHORT $LN11@Deque_cons

; 171  : 			{	// no future parent, just disown current parent
; 172  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 173  : 			_Lockit _Lock(_LOCK_DEBUG);
; 174  : 			_Orphan_me();
; 175  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 176  : 			}
; 177  : 		else
; 178  : 			{	// have a parent, do adoption
; 179  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 180  : 
; 181  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 182  : 			if (_Myproxy != _Parent_proxy)
; 183  : 				{	// change parentage
; 184  : 				_Lockit _Lock(_LOCK_DEBUG);
; 185  : 				_Orphan_me();
; 186  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 187  : 				_Parent_proxy->_Myfirstiter = this;
; 188  : 				_Myproxy = _Parent_proxy;
; 189  : 				}
; 190  : 
; 191  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 192  : 			_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN11@Deque_cons:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 304  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@K@std@@@std@@X@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@K@std@@@std@@X@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > ><std::_Wrap_alloc<std::allocator<unsigned long> >,void>, COMDAT
; _this$ = ecx

; 807  : 		{	// construct allocator from _Al

	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [esi+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [esi+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [esi+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN34@allocator
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN101@allocator:
$LN34@allocator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi

; 808  : 		_Alloc_proxy();
; 809  : 		}

	mov	eax, esi
	pop	esi
	ret	4
$LN100@allocator:
??$?0U?$_Wrap_alloc@V?$allocator@K@std@@@std@@X@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@$$QAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > ><std::_Wrap_alloc<std::allocator<unsigned long> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$move@AAV?$deque@KV?$allocator@K@std@@@std@@@std@@YA$$QAV?$deque@KV?$allocator@K@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$deque@KV?$allocator@K@std@@@std@@@std@@YA$$QAV?$deque@KV?$allocator@K@std@@@0@AAV10@@Z PROC ; std::move<std::deque<unsigned long,std::allocator<unsigned long> > &>, COMDAT

; 1350 : 	{	// forward _Arg as movable

	npad	2
	push	ebp
	mov	ebp, esp

; 1351 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1352 : 	}

	pop	ebp
	ret	0
??$move@AAV?$deque@KV?$allocator@K@std@@@std@@@std@@YA$$QAV?$deque@KV?$allocator@K@std@@@0@AAV10@@Z ENDP ; std::move<std::deque<unsigned long,std::allocator<unsigned long> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$deque@KV?$allocator@K@std@@@std@@@std@@YAPAV?$deque@KV?$allocator@K@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$deque@KV?$allocator@K@std@@@std@@@std@@YAPAV?$deque@KV?$allocator@K@std@@@0@AAV10@@Z PROC ; std::addressof<std::deque<unsigned long,std::allocator<unsigned long> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$deque@KV?$allocator@K@std@@@std@@@std@@YAPAV?$deque@KV?$allocator@K@std@@@0@AAV10@@Z ENDP ; std::addressof<std::deque<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0@Z PROC ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >, COMDAT

; 1112 : 	{	// return distance between iterators

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T1[ebp]
	push	DWORD PTR __Last$[ebp]
	push	DWORD PTR __First$[ebp]
	call	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >
	add	esp, 12					; 0000000cH

; 1114 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_hInst$ = 12						; size = 4
_lpszCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
?RunDLL_RestartGame@@YGXPAUHWND__@@PAUHINSTANCE__@@PADH@Z PROC ; RunDLL_RestartGame

; 2567 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2568 :   UNREFERENCED_PARAMETER (hInst);
; 2569 : 
; 2570 :   ShellExecuteA ( hwnd, "open", lpszCmdLine, nullptr, nullptr, nCmdShow );

	push	DWORD PTR _nCmdShow$[ebp]
	push	0
	push	0
	push	DWORD PTR _lpszCmdLine$[ebp]
	push	OFFSET $SG431359
	push	DWORD PTR _hwnd$[ebp]
	call	DWORD PTR __imp__ShellExecuteA@24

; 2571 : }

	pop	ebp
	ret	16					; 00000010H
?RunDLL_RestartGame@@YGXPAUHWND__@@PAUHINSTANCE__@@PADH@Z ENDP ; RunDLL_RestartGame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_hInst$ = 12						; size = 4
_lpszCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
?RunDLL_ElevateMe@@YGXPAUHWND__@@PAUHINSTANCE__@@PADH@Z PROC ; RunDLL_ElevateMe

; 2557 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2558 :   UNREFERENCED_PARAMETER (hInst);
; 2559 : 
; 2560 :   ShellExecuteA ( hwnd, "runas", lpszCmdLine, nullptr, nullptr, nCmdShow );

	push	DWORD PTR _nCmdShow$[ebp]
	push	0
	push	0
	push	DWORD PTR _lpszCmdLine$[ebp]
	push	OFFSET $SG431352
	push	DWORD PTR _hwnd$[ebp]
	call	DWORD PTR __imp__ShellExecuteA@24

; 2561 : }

	pop	ebp
	ret	16					; 00000010H
?RunDLL_ElevateMe@@YGXPAUHWND__@@PAUHINSTANCE__@@PADH@Z ENDP ; RunDLL_ElevateMe
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
;	COMDAT ??$QueryInterface@UIDXGISwapChain@@@IUnknown@@QAGJPAPAUIDXGISwapChain@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UIDXGISwapChain@@@IUnknown@@QAGJPAPAUIDXGISwapChain@@@Z PROC ; IUnknown::QueryInterface<IDXGISwapChain>, COMDAT

; 130  :             {

	npad	2
	push	ebp
	mov	ebp, esp

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	mov	eax, DWORD PTR _this$[ebp]
	push	DWORD PTR _pp$[ebp]
	push	OFFSET __GUID_310d36a0_d2e7_4c0a_aa04_6a9d23b8886a
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx]

; 132  :             }

	pop	ebp
	ret	8
??$QueryInterface@UIDXGISwapChain@@@IUnknown@@QAGJPAPAUIDXGISwapChain@@@Z ENDP ; IUnknown::QueryInterface<IDXGISwapChain>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<IDXGISwapChain>::~CComPtr<IDXGISwapChain>, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 176  :         if (p)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@CComPtr

; 177  :             p->Release();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN4@CComPtr:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDXGISwapChain>::~CComPtr<IDXGISwapChain>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@PAUIDXGISwapChain@@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
??0?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@PAUIDXGISwapChain@@@Z PROC ; ATL::CComPtr<IDXGISwapChain>::CComPtr<IDXGISwapChain>, COMDAT
; _this$ = ecx

; 312  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 162  :         p = lp;

	mov	edx, DWORD PTR _lp$[ebp]
	push	esi

; 312  :     {

	mov	esi, ecx

; 162  :         p = lp;

	mov	DWORD PTR [esi], edx

; 163  :         if (p != NULL)

	test	edx, edx
	je	SHORT $LN6@CComPtr

; 164  :             p->AddRef();

	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+4]
$LN6@CComPtr:

; 313  :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@PAUIDXGISwapChain@@@Z ENDP ; ATL::CComPtr<IDXGISwapChain>::CComPtr<IDXGISwapChain>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??C?$CComPtrBase@UIDXGISwapChain@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDXGISwapChain@@@1@XZ
_TEXT	SEGMENT
??C?$CComPtrBase@UIDXGISwapChain@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDXGISwapChain@@@1@XZ PROC ; ATL::CComPtrBase<IDXGISwapChain>::operator->, COMDAT
; _this$ = ecx

; 197  :         ATLASSERT(p!=NULL);
; 198  :         return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	eax, DWORD PTR [ecx]

; 199  :     }

	ret	0
??C?$CComPtrBase@UIDXGISwapChain@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDXGISwapChain@@@1@XZ ENDP ; ATL::CComPtrBase<IDXGISwapChain>::operator->
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIDXGISwapChain@@@ATL@@QAEPAPAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
??I?$CComPtrBase@UIDXGISwapChain@@@ATL@@QAEPAPAUIDXGISwapChain@@XZ PROC ; ATL::CComPtrBase<IDXGISwapChain>::operator&, COMDAT
; _this$ = ecx

; 192  :         ATLASSERT(p==NULL);
; 193  :         return &p;

	mov	eax, ecx

; 194  :     }

	ret	0
??I?$CComPtrBase@UIDXGISwapChain@@@ATL@@QAEPAPAUIDXGISwapChain@@XZ ENDP ; ATL::CComPtrBase<IDXGISwapChain>::operator&
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??B?$CComPtrBase@UIDXGISwapChain@@@ATL@@QBEPAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
??B?$CComPtrBase@UIDXGISwapChain@@@ATL@@QBEPAUIDXGISwapChain@@XZ PROC ; ATL::CComPtrBase<IDXGISwapChain>::operator IDXGISwapChain *, COMDAT
; _this$ = ecx

; 181  :         return p;

	mov	eax, DWORD PTR [ecx]

; 182  :     }

	ret	0
??B?$CComPtrBase@UIDXGISwapChain@@@ATL@@QBEPAUIDXGISwapChain@@XZ ENDP ; ATL::CComPtrBase<IDXGISwapChain>::operator IDXGISwapChain *
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIDXGISwapChain@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComPtrBase@UIDXGISwapChain@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IDXGISwapChain>::~CComPtrBase<IDXGISwapChain>, COMDAT
; _this$ = ecx

; 176  :         if (p)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN2@CComPtrBas

; 177  :             p->Release();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN2@CComPtrBas:

; 178  :     }

	ret	0
??1?$CComPtrBase@UIDXGISwapChain@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IDXGISwapChain>::~CComPtrBase<IDXGISwapChain>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIDXGISwapChain@@@ATL@@IAE@PAUIDXGISwapChain@@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIDXGISwapChain@@@ATL@@IAE@PAUIDXGISwapChain@@@Z PROC ; ATL::CComPtrBase<IDXGISwapChain>::CComPtrBase<IDXGISwapChain>, COMDAT
; _this$ = ecx

; 160  :     CComPtrBase(_Inout_opt_ T* lp) throw()

	npad	2
	push	ebp
	mov	ebp, esp

; 161  :     {
; 162  :         p = lp;

	mov	edx, DWORD PTR _lp$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], edx

; 163  :         if (p != NULL)

	test	edx, edx
	je	SHORT $LN4@CComPtrBas

; 164  :             p->AddRef();

	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+4]
$LN4@CComPtrBas:

; 165  :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CComPtrBase@UIDXGISwapChain@@@ATL@@IAE@PAUIDXGISwapChain@@@Z ENDP ; ATL::CComPtrBase<IDXGISwapChain>::CComPtrBase<IDXGISwapChain>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
;	COMDAT ??$QueryInterface@UID3D11Device@@@IUnknown@@QAGJPAPAUID3D11Device@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UID3D11Device@@@IUnknown@@QAGJPAPAUID3D11Device@@@Z PROC ; IUnknown::QueryInterface<ID3D11Device>, COMDAT

; 130  :             {

	npad	2
	push	ebp
	mov	ebp, esp

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	mov	eax, DWORD PTR _this$[ebp]
	push	DWORD PTR _pp$[ebp]
	push	OFFSET __GUID_db6f6ddb_ac77_4e88_8253_819df9bbf140
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx]

; 132  :             }

	pop	ebp
	ret	8
??$QueryInterface@UID3D11Device@@@IUnknown@@QAGJPAPAUID3D11Device@@@Z ENDP ; IUnknown::QueryInterface<ID3D11Device>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
;	COMDAT ??$QueryInterface@UIDirect3DDevice9@@@IUnknown@@QAGJPAPAUIDirect3DDevice9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UIDirect3DDevice9@@@IUnknown@@QAGJPAPAUIDirect3DDevice9@@@Z PROC ; IUnknown::QueryInterface<IDirect3DDevice9>, COMDAT

; 130  :             {

	npad	2
	push	ebp
	mov	ebp, esp

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	mov	eax, DWORD PTR _this$[ebp]
	push	DWORD PTR _pp$[ebp]
	push	OFFSET __GUID_d0223b96_bf7a_43fd_92bd_a43b0d82b9eb
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx]

; 132  :             }

	pop	ebp
	ret	8
??$QueryInterface@UIDirect3DDevice9@@@IUnknown@@QAGJPAPAUIDirect3DDevice9@@@Z ENDP ; IUnknown::QueryInterface<IDirect3DDevice9>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
;	COMDAT ??$QueryInterface@UIDirect3DDevice9Ex@@@IUnknown@@QAGJPAPAUIDirect3DDevice9Ex@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UIDirect3DDevice9Ex@@@IUnknown@@QAGJPAPAUIDirect3DDevice9Ex@@@Z PROC ; IUnknown::QueryInterface<IDirect3DDevice9Ex>, COMDAT

; 130  :             {

	npad	2
	push	ebp
	mov	ebp, esp

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	mov	eax, DWORD PTR _this$[ebp]
	push	DWORD PTR _pp$[ebp]
	push	OFFSET __GUID_b18b10ce_2649_405a_870f_95f777d4313a
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx]

; 132  :             }

	pop	ebp
	ret	8
??$QueryInterface@UIDirect3DDevice9Ex@@@IUnknown@@QAGJPAPAUIDirect3DDevice9Ex@@@Z ENDP ; IUnknown::QueryInterface<IDirect3DDevice9Ex>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ PROC		; ATL::CComPtr<ID3D11Device>::~CComPtr<ID3D11Device>, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 176  :         if (p)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@CComPtr

; 177  :             p->Release();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN4@CComPtr:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ID3D11Device>::~CComPtr<ID3D11Device>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UID3D11Device@@@ATL@@QAE@PAUID3D11Device@@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
??0?$CComPtr@UID3D11Device@@@ATL@@QAE@PAUID3D11Device@@@Z PROC ; ATL::CComPtr<ID3D11Device>::CComPtr<ID3D11Device>, COMDAT
; _this$ = ecx

; 312  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 162  :         p = lp;

	mov	edx, DWORD PTR _lp$[ebp]
	push	esi

; 312  :     {

	mov	esi, ecx

; 162  :         p = lp;

	mov	DWORD PTR [esi], edx

; 163  :         if (p != NULL)

	test	edx, edx
	je	SHORT $LN6@CComPtr

; 164  :             p->AddRef();

	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+4]
$LN6@CComPtr:

; 313  :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CComPtr@UID3D11Device@@@ATL@@QAE@PAUID3D11Device@@@Z ENDP ; ATL::CComPtr<ID3D11Device>::CComPtr<ID3D11Device>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UID3D11Device@@@ATL@@QAEPAPAUID3D11Device@@XZ
_TEXT	SEGMENT
??I?$CComPtrBase@UID3D11Device@@@ATL@@QAEPAPAUID3D11Device@@XZ PROC ; ATL::CComPtrBase<ID3D11Device>::operator&, COMDAT
; _this$ = ecx

; 192  :         ATLASSERT(p==NULL);
; 193  :         return &p;

	mov	eax, ecx

; 194  :     }

	ret	0
??I?$CComPtrBase@UID3D11Device@@@ATL@@QAEPAPAUID3D11Device@@XZ ENDP ; ATL::CComPtrBase<ID3D11Device>::operator&
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UID3D11Device@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComPtrBase@UID3D11Device@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<ID3D11Device>::~CComPtrBase<ID3D11Device>, COMDAT
; _this$ = ecx

; 176  :         if (p)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN2@CComPtrBas

; 177  :             p->Release();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN2@CComPtrBas:

; 178  :     }

	ret	0
??1?$CComPtrBase@UID3D11Device@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<ID3D11Device>::~CComPtrBase<ID3D11Device>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UID3D11Device@@@ATL@@IAE@PAUID3D11Device@@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
??0?$CComPtrBase@UID3D11Device@@@ATL@@IAE@PAUID3D11Device@@@Z PROC ; ATL::CComPtrBase<ID3D11Device>::CComPtrBase<ID3D11Device>, COMDAT
; _this$ = ecx

; 160  :     CComPtrBase(_Inout_opt_ T* lp) throw()

	npad	2
	push	ebp
	mov	ebp, esp

; 161  :     {
; 162  :         p = lp;

	mov	edx, DWORD PTR _lp$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], edx

; 163  :         if (p != NULL)

	test	edx, edx
	je	SHORT $LN4@CComPtrBas

; 164  :             p->AddRef();

	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+4]
$LN4@CComPtrBas:

; 165  :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CComPtrBase@UID3D11Device@@@ATL@@IAE@PAUID3D11Device@@@Z ENDP ; ATL::CComPtrBase<ID3D11Device>::CComPtrBase<ID3D11Device>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IDirect3DDevice9Ex>::~CComPtr<IDirect3DDevice9Ex>, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 176  :         if (p)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@CComPtr

; 177  :             p->Release();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN4@CComPtr:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IDirect3DDevice9Ex>::~CComPtr<IDirect3DDevice9Ex>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@PAUIDirect3DDevice9Ex@@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
??0?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@PAUIDirect3DDevice9Ex@@@Z PROC ; ATL::CComPtr<IDirect3DDevice9Ex>::CComPtr<IDirect3DDevice9Ex>, COMDAT
; _this$ = ecx

; 312  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 162  :         p = lp;

	mov	edx, DWORD PTR _lp$[ebp]
	push	esi

; 312  :     {

	mov	esi, ecx

; 162  :         p = lp;

	mov	DWORD PTR [esi], edx

; 163  :         if (p != NULL)

	test	edx, edx
	je	SHORT $LN6@CComPtr

; 164  :             p->AddRef();

	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+4]
$LN6@CComPtr:

; 313  :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@PAUIDirect3DDevice9Ex@@@Z ENDP ; ATL::CComPtr<IDirect3DDevice9Ex>::CComPtr<IDirect3DDevice9Ex>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@QAEPAPAUIDirect3DDevice9Ex@@XZ
_TEXT	SEGMENT
??I?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@QAEPAPAUIDirect3DDevice9Ex@@XZ PROC ; ATL::CComPtrBase<IDirect3DDevice9Ex>::operator&, COMDAT
; _this$ = ecx

; 192  :         ATLASSERT(p==NULL);
; 193  :         return &p;

	mov	eax, ecx

; 194  :     }

	ret	0
??I?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@QAEPAPAUIDirect3DDevice9Ex@@XZ ENDP ; ATL::CComPtrBase<IDirect3DDevice9Ex>::operator&
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IDirect3DDevice9Ex>::~CComPtrBase<IDirect3DDevice9Ex>, COMDAT
; _this$ = ecx

; 176  :         if (p)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN2@CComPtrBas

; 177  :             p->Release();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN2@CComPtrBas:

; 178  :     }

	ret	0
??1?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IDirect3DDevice9Ex>::~CComPtrBase<IDirect3DDevice9Ex>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@IAE@PAUIDirect3DDevice9Ex@@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@IAE@PAUIDirect3DDevice9Ex@@@Z PROC ; ATL::CComPtrBase<IDirect3DDevice9Ex>::CComPtrBase<IDirect3DDevice9Ex>, COMDAT
; _this$ = ecx

; 160  :     CComPtrBase(_Inout_opt_ T* lp) throw()

	npad	2
	push	ebp
	mov	ebp, esp

; 161  :     {
; 162  :         p = lp;

	mov	edx, DWORD PTR _lp$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], edx

; 163  :         if (p != NULL)

	test	edx, edx
	je	SHORT $LN4@CComPtrBas

; 164  :             p->AddRef();

	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+4]
$LN4@CComPtrBas:

; 165  :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CComPtrBase@UIDirect3DDevice9Ex@@@ATL@@IAE@PAUIDirect3DDevice9Ex@@@Z ENDP ; ATL::CComPtrBase<IDirect3DDevice9Ex>::CComPtrBase<IDirect3DDevice9Ex>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<IDirect3DDevice9>::~CComPtr<IDirect3DDevice9>, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 176  :         if (p)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@CComPtr

; 177  :             p->Release();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN4@CComPtr:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IDirect3DDevice9>::~CComPtr<IDirect3DDevice9>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@PAUIDirect3DDevice9@@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
??0?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@PAUIDirect3DDevice9@@@Z PROC ; ATL::CComPtr<IDirect3DDevice9>::CComPtr<IDirect3DDevice9>, COMDAT
; _this$ = ecx

; 312  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 162  :         p = lp;

	mov	edx, DWORD PTR _lp$[ebp]
	push	esi

; 312  :     {

	mov	esi, ecx

; 162  :         p = lp;

	mov	DWORD PTR [esi], edx

; 163  :         if (p != NULL)

	test	edx, edx
	je	SHORT $LN6@CComPtr

; 164  :             p->AddRef();

	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+4]
$LN6@CComPtr:

; 313  :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@PAUIDirect3DDevice9@@@Z ENDP ; ATL::CComPtr<IDirect3DDevice9>::CComPtr<IDirect3DDevice9>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??I?$CComPtrBase@UIDirect3DDevice9@@@ATL@@QAEPAPAUIDirect3DDevice9@@XZ
_TEXT	SEGMENT
??I?$CComPtrBase@UIDirect3DDevice9@@@ATL@@QAEPAPAUIDirect3DDevice9@@XZ PROC ; ATL::CComPtrBase<IDirect3DDevice9>::operator&, COMDAT
; _this$ = ecx

; 192  :         ATLASSERT(p==NULL);
; 193  :         return &p;

	mov	eax, ecx

; 194  :     }

	ret	0
??I?$CComPtrBase@UIDirect3DDevice9@@@ATL@@QAEPAPAUIDirect3DDevice9@@XZ ENDP ; ATL::CComPtrBase<IDirect3DDevice9>::operator&
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UIDirect3DDevice9@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComPtrBase@UIDirect3DDevice9@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<IDirect3DDevice9>::~CComPtrBase<IDirect3DDevice9>, COMDAT
; _this$ = ecx

; 176  :         if (p)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN2@CComPtrBas

; 177  :             p->Release();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN2@CComPtrBas:

; 178  :     }

	ret	0
??1?$CComPtrBase@UIDirect3DDevice9@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IDirect3DDevice9>::~CComPtrBase<IDirect3DDevice9>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtrBase@UIDirect3DDevice9@@@ATL@@IAE@PAUIDirect3DDevice9@@@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIDirect3DDevice9@@@ATL@@IAE@PAUIDirect3DDevice9@@@Z PROC ; ATL::CComPtrBase<IDirect3DDevice9>::CComPtrBase<IDirect3DDevice9>, COMDAT
; _this$ = ecx

; 160  :     CComPtrBase(_Inout_opt_ T* lp) throw()

	npad	2
	push	ebp
	mov	ebp, esp

; 161  :     {
; 162  :         p = lp;

	mov	edx, DWORD PTR _lp$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], edx

; 163  :         if (p != NULL)

	test	edx, edx
	je	SHORT $LN4@CComPtrBas

; 164  :             p->AddRef();

	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+4]
$LN4@CComPtrBas:

; 165  :     }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CComPtrBase@UIDirect3DDevice9@@@ATL@@IAE@PAUIDirect3DDevice9@@@Z ENDP ; ATL::CComPtrBase<IDirect3DDevice9>::CComPtrBase<IDirect3DDevice9>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_stNow$ = -32						; size = 16
_ftNow$ = -16						; size = 8
tv317 = -8						; size = 4
_ullNow$2$ = -4						; size = 4
?DoKeyboard@@YAXXZ PROC					; DoKeyboard

; 2270 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi

; 2271 :   //
; 2272 :   // Do not poll the keyboard while the game window is inactive
; 2273 :   //
; 2274 :   bool skip = true;
; 2275 : 
; 2276 :   if ( SK_GetGameWindow () == GetForegroundWindow () )

	call	DWORD PTR __imp__GetForegroundWindow@0
	mov	esi, eax
	call	?SK_GetGameWindow@@YGPAUHWND__@@XZ	; SK_GetGameWindow
	cmp	eax, esi
	jne	$LN13@DoKeyboard

; 2277 :     skip = false;
; 2278 : 
; 2279 :   if (skip)
; 2280 :     return;
; 2281 : 
; 2282 :   static ULONGLONG last_osd_scale { 0ULL };
; 2283 :   static ULONGLONG last_poll      { 0ULL };
; 2284 :   static ULONGLONG last_drag      { 0ULL };
; 2285 : 
; 2286 :   SYSTEMTIME    stNow;
; 2287 :   FILETIME      ftNow;
; 2288 :   LARGE_INTEGER ullNow;
; 2289 : 
; 2290 :   GetSystemTime        (&stNow);

	push	ebx
	push	edi
	lea	eax, DWORD PTR _stNow$[ebp]
	push	eax
	call	DWORD PTR __imp__GetSystemTime@4

; 2291 :   SystemTimeToFileTime (&stNow, &ftNow);

	lea	eax, DWORD PTR _ftNow$[ebp]
	push	eax
	lea	eax, DWORD PTR _stNow$[ebp]
	push	eax
	call	DWORD PTR __imp__SystemTimeToFileTime@8

; 2292 : 
; 2293 :   ullNow.HighPart = ftNow.dwHighDateTime;
; 2294 :   ullNow.LowPart  = ftNow.dwLowDateTime;

	mov	esi, DWORD PTR _ftNow$[ebp]
	mov	ebx, DWORD PTR _ftNow$[ebp+4]
	mov	DWORD PTR _ullNow$2$[ebp], esi

; 2295 : 
; 2296 :   static bool toggle_drag = false;
; 2297 : 
; 2298 :   ImGuiIO& io (ImGui::GetIO ());

	call	?GetIO@ImGui@@YAAAUImGuiIO@@XZ		; ImGui::GetIO
	mov	edi, eax

; 2299 : 
; 2300 :   if (io.KeysDown [VK_CONTROL] && io.KeysDown [VK_SHIFT] && io.KeysDown [VK_SCROLL])

	cmp	BYTE PTR [edi+246], 0
	je	SHORT $LN4@DoKeyboard
	cmp	BYTE PTR [edi+245], 0
	je	SHORT $LN4@DoKeyboard
	cmp	BYTE PTR [edi+374], 0
	je	SHORT $LN4@DoKeyboard

; 2301 :   {
; 2302 :     if (! toggle_drag)

	cmp	BYTE PTR ?toggle_drag@?1??DoKeyboard@@YAXXZ@4_NA, 0
	jne	SHORT $LN18@DoKeyboard

; 2303 :       config.window.drag_lock = (! config.window.drag_lock);

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+773, 0
	sete	al
	mov	BYTE PTR ?config@@3Usk_config_t@@A+773, al
	jmp	SHORT $LN6@DoKeyboard
$LN18@DoKeyboard:
	mov	al, BYTE PTR ?config@@3Usk_config_t@@A+773
$LN6@DoKeyboard:

; 2304 :     toggle_drag = true;

	mov	BYTE PTR ?toggle_drag@?1??DoKeyboard@@YAXXZ@4_NA, 1

; 2305 : 
; 2306 :     if (config.window.drag_lock)

	test	al, al
	je	SHORT $LN8@DoKeyboard

; 2307 :       ClipCursor (nullptr);

	push	0
	call	DWORD PTR __imp__ClipCursor@4

; 2308 :   } else {

	jmp	SHORT $LN5@DoKeyboard
$LN4@DoKeyboard:

; 2309 :     toggle_drag = false;

	mov	BYTE PTR ?toggle_drag@?1??DoKeyboard@@YAXXZ@4_NA, 0
$LN5@DoKeyboard:

; 2310 :   }
; 2311 : 
; 2312 :   if (config.window.drag_lock)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+773, 0
	je	SHORT $LN8@DoKeyboard

; 2313 :     SK_CenterWindowAtMouse (config.window.persistent_drag);

	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+772
	push	eax
	call	?SK_CenterWindowAtMouse@@YAXH@Z		; SK_CenterWindowAtMouse
	add	esp, 4
$LN8@DoKeyboard:

; 2314 : 
; 2315 : 
; 2316 :   if (ullNow.QuadPart - last_osd_scale > 25ULL * poll_interval)

	sub	esi, DWORD PTR ?last_osd_scale@?1??DoKeyboard@@YAXXZ@4_KA
	push	0
	push	25					; 00000019H
	push	DWORD PTR ?poll_interval@@3_KA+4
	mov	DWORD PTR tv317[ebp], esi
	mov	esi, ebx
	push	DWORD PTR ?poll_interval@@3_KA
	sbb	esi, DWORD PTR ?last_osd_scale@?1??DoKeyboard@@YAXXZ@4_KA+4
	call	__allmul
	cmp	esi, edx
	jb	$LN11@DoKeyboard
	ja	SHORT $LN17@DoKeyboard
	cmp	DWORD PTR tv317[ebp], eax
	jbe	$LN11@DoKeyboard
$LN17@DoKeyboard:

; 2317 :   {
; 2318 :     if (io.KeysDown [config.osd.keys.expand [0]] &&
; 2319 :         io.KeysDown [config.osd.keys.expand [1]] &&

	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+88

; 2320 :         io.KeysDown [config.osd.keys.expand [2]])
; 2321 :     {
; 2322 :       last_osd_scale = ullNow.QuadPart;

	mov	esi, DWORD PTR _ullNow$2$[ebp]
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN10@DoKeyboard

; 2317 :   {
; 2318 :     if (io.KeysDown [config.osd.keys.expand [0]] &&
; 2319 :         io.KeysDown [config.osd.keys.expand [1]] &&

	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+89
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN10@DoKeyboard
	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+90
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN10@DoKeyboard

; 2323 :       SK_ResizeOSD (+0.1f);

	push	0
	push	ecx
	mov	DWORD PTR ?last_osd_scale@?1??DoKeyboard@@YAXXZ@4_KA, esi
	mov	DWORD PTR ?last_osd_scale@?1??DoKeyboard@@YAXXZ@4_KA+4, ebx
	mov	DWORD PTR [esp], 1036831949		; 3dcccccdH
	call	?SK_ResizeOSD@@YGXMPBD@Z		; SK_ResizeOSD
$LN10@DoKeyboard:

; 2324 :     }
; 2325 : 
; 2326 :     if (io.KeysDown [config.osd.keys.shrink [0]] &&
; 2327 :         io.KeysDown [config.osd.keys.shrink [1]] &&

	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+84
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN11@DoKeyboard
	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+85
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN11@DoKeyboard
	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+86
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN11@DoKeyboard

; 2328 :         io.KeysDown [config.osd.keys.shrink [2]])
; 2329 :     {
; 2330 :       last_osd_scale = ullNow.QuadPart;
; 2331 :       SK_ResizeOSD (-0.1f);

	push	0
	push	ecx
	mov	DWORD PTR ?last_osd_scale@?1??DoKeyboard@@YAXXZ@4_KA, esi
	mov	DWORD PTR ?last_osd_scale@?1??DoKeyboard@@YAXXZ@4_KA+4, ebx
	mov	DWORD PTR [esp], -1110651699		; bdcccccdH
	call	?SK_ResizeOSD@@YGXMPBD@Z		; SK_ResizeOSD
$LN11@DoKeyboard:

; 2332 :     }
; 2333 :   }
; 2334 : 
; 2335 : #if 0
; 2336 :   if (ullNow.QuadPart < last_poll + poll_interval)
; 2337 :   {
; 2338 :     SleepEx (10, TRUE);
; 2339 :     last_poll = ullNow.QuadPart;
; 2340 :   }
; 2341 : #endif
; 2342 : 
; 2343 :   static bool toggle_time = false;
; 2344 :   if (io.KeysDown [config.time.keys.toggle [0]] &&
; 2345 :       io.KeysDown [config.time.keys.toggle [1]] &&

	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+8
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN12@DoKeyboard
	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+9
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN12@DoKeyboard
	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+10
	cmp	BYTE PTR [eax+edi+229], 0
	je	SHORT $LN12@DoKeyboard

; 2346 :       io.KeysDown [config.time.keys.toggle [2]])
; 2347 :   {
; 2348 :     if (! toggle_time) {

	cmp	BYTE PTR ?toggle_time@?1??DoKeyboard@@YAXXZ@4_NA, 0
	jne	SHORT $LN14@DoKeyboard

; 2349 :       SK_UnlockSteamAchievement (0);

	push	0
	call	?SK_UnlockSteamAchievement@@YAXI@Z	; SK_UnlockSteamAchievement
	add	esp, 4

; 2350 : 
; 2351 :       config.time.show = (! config.time.show);

	cmp	BYTE PTR ?config@@3Usk_config_t@@A, 0
	sete	BYTE PTR ?config@@3Usk_config_t@@A
$LN14@DoKeyboard:

; 2352 :     }
; 2353 :     toggle_time = true;

	pop	edi
	pop	ebx
	mov	BYTE PTR ?toggle_time@?1??DoKeyboard@@YAXXZ@4_NA, 1
	pop	esi

; 2356 :   }
; 2357 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@DoKeyboard:
	pop	edi

; 2354 :   } else {
; 2355 :     toggle_time = false;

	mov	BYTE PTR ?toggle_time@?1??DoKeyboard@@YAXXZ@4_NA, 0
	pop	ebx
$LN13@DoKeyboard:
	pop	esi

; 2356 :   }
; 2357 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoKeyboard@@YAXXZ ENDP					; DoKeyboard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ??0<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QAE@AAY0BAE@_W@Z
_TEXT	SEGMENT
_<wszCEGUIModPath>$ = 8					; size = 4
??0<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QAE@AAY0BAE@_W@Z PROC ; <lambda_e90c1de77d7500ca5331d50c90c1ba3f>::<lambda_e90c1de77d7500ca5331d50c90c1ba3f>, COMDAT
; _this$ = ecx

; 2186 :             };

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _<wszCEGUIModPath>$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??0<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QAE@AAY0BAE@_W@Z ENDP ; <lambda_e90c1de77d7500ca5331d50c90c1ba3f>::<lambda_e90c1de77d7500ca5331d50c90c1ba3f>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z
_TEXT	SEGMENT
_cookie$ = -32						; size = 4
_ret$ = -25						; size = 1
__$SEHRec$ = -24					; size = 24
_szDLL$ = 8						; size = 4
??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z PROC ; <lambda_e90c1de77d7500ca5331d50c90c1ba3f>::operator(), COMDAT
; _this$ = ecx

; 2161 :             {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	OFFSET __sehtable$??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z
	push	OFFSET __except_handler3
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$SEHRec$[ebp], esp
	mov	esi, ecx

; 2162 :               if (! config.cegui.safe_init)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+161, 0
	jne	SHORT $LN2@operator

; 2163 :                 return SUCCEEDED ( __HrLoadAllImportsForDll (szDLL) );

	push	DWORD PTR _szDLL$[ebp]
	call	___HrLoadAllImportsForDll@4
	xor	ecx, ecx
	test	eax, eax
	setns	al

; 2186 :             };

	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@operator:

; 2164 : 
; 2165 :               k32_SetDefaultDllDirectories (

	push	7680					; 00001e00H
	call	DWORD PTR ?k32_SetDefaultDllDirectories@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHK@ZA

; 2166 :                 LOAD_LIBRARY_SEARCH_APPLICATION_DIR | LOAD_LIBRARY_SEARCH_DEFAULT_DIRS |
; 2167 :                 LOAD_LIBRARY_SEARCH_SYSTEM32        | LOAD_LIBRARY_SEARCH_USER_DIRS
; 2168 :               );
; 2169 : 
; 2170 :               DLL_DIRECTORY_COOKIE cookie = nullptr;

	mov	DWORD PTR _cookie$[ebp], 0

; 2171 :               bool                 ret    = false;

	mov	BYTE PTR _ret$[ebp], 0

; 2172 : 
; 2173 :               __try

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 2174 :               {
; 2175 :                 cookie =               k32_AddDllDirectory    (wszCEGUIModPath);

	push	DWORD PTR [esi]
	call	DWORD PTR ?k32_AddDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GPAXPB_W@ZA
	mov	esi, eax
	mov	DWORD PTR _cookie$[ebp], esi

; 2176 :                 ret    = SUCCEEDED ( __HrLoadAllImportsForDll (szDLL)           );

	push	DWORD PTR _szDLL$[ebp]
	call	___HrLoadAllImportsForDll@4
	xor	ebx, ebx
	test	eax, eax
	setns	bl
	mov	BYTE PTR _ret$[ebp], bl

; 2177 :               }

	mov	DWORD PTR __$SEHRec$[ebp+20], -1
	jmp	SHORT $LN9@operator
$LN6@operator:
$LN11@operator:

; 2178 : 
; 2179 :               __except ( ( GetExceptionCode () == EXCEPTION_ACCESS_VIOLATION ) ?

	mov	eax, DWORD PTR __$SEHRec$[ebp+4]
	mov	eax, DWORD PTR [eax]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], -1073741819		; c0000005H
	sete	cl
	mov	eax, ecx
$LN10@operator:
$LN8@operator:
	ret	0
$LN7@operator:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 2177 :               }

	mov	DWORD PTR __$SEHRec$[ebp+20], -1
	mov	esi, DWORD PTR _cookie$[ebp]
	mov	bl, BYTE PTR _ret$[ebp]
$LN9@operator:

; 2180 :                          EXCEPTION_EXECUTE_HANDLER : EXCEPTION_CONTINUE_SEARCH )
; 2181 :               {
; 2182 :               }
; 2183 :               k32_RemoveDllDirectory (cookie);

	push	esi
	call	DWORD PTR ?k32_RemoveDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHPAX@ZA

; 2184 : 
; 2185 :               return ret;

	mov	al, bl

; 2186 :             };

	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z ENDP ; <lambda_e90c1de77d7500ca5331d50c90c1ba3f>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z PROC ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3873 : 	{	// test for string vs. NTCTS inequality

	npad	2
	push	ebp
	mov	ebp, esp

; 3844 : 	return (_Left._Equal(_Right));

	push	DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
	test	al, al
	sete	al

; 3874 : 	return (!(_Left == _Right));
; 3875 : 	}

	pop	ebp
	ret	0
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z ENDP ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ??R<lambda_6ec963c1094b1d994a1eb4d638d667db>@@QBEXACRAX0PA_W@Z
_TEXT	SEGMENT
_wszFmtName$ = -64					; size = 64
_hSignal$ = 8						; size = 4
_hThread$ = 12						; size = 4
_dwTime$1$ = 16						; size = 4
_wszName$ = 16						; size = 4
??R<lambda_6ec963c1094b1d994a1eb4d638d667db>@@QBEXACRAX0PA_W@Z PROC ; <lambda_6ec963c1094b1d994a1eb4d638d667db>::operator(), COMDAT
; _this$ = ecx

; 1893 :   {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi

; 1894 :     wchar_t wszFmtName [32] = { };

	push	64					; 00000040H
	lea	eax, DWORD PTR _wszFmtName$[ebp]
	push	0
	push	eax
	call	_memset

; 1895 : 
; 1896 :     lstrcatW (wszFmtName, wszName);

	mov	esi, DWORD PTR __imp__lstrcatW@8
	lea	eax, DWORD PTR _wszFmtName$[ebp]
	add	esp, 12					; 0000000cH
	push	DWORD PTR _wszName$[ebp]
	push	eax
	call	esi

; 1897 :     lstrcatW (wszFmtName, L"...");

	push	OFFSET ??_C@_17LGKOMLJ@?$AA?4?$AA?4?$AA?4?$AA?$AA@
	lea	eax, DWORD PTR _wszFmtName$[ebp]
	push	eax
	call	esi

; 1898 : 
; 1899 :     dll_log.LogEx (true, L"[ WMI Perf ] Shutting down %-30s ", wszFmtName);

	lea	eax, DWORD PTR _wszFmtName$[ebp]
	push	eax
	push	OFFSET ??_C@_1EE@MENKLOLO@?$AA?$FL?$AA?5?$AAW?$AAM?$AAI?$AA?5?$AAP?$AAe?$AAr?$AAf?$AA?5?$AA?$FN?$AA?5?$AAS?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AA?$CF?$AA?9?$AA3?$AA0?$AAs@
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 1900 : 
; 1901 :     DWORD dwTime = timeGetTime ();

	call	DWORD PTR __imp__timeGetTime@0

; 1902 : 
; 1903 :     // Signal the thread to shutdown
; 1904 :     SetEvent (hSignal);

	mov	esi, DWORD PTR _hSignal$[ebp]
	mov	DWORD PTR _dwTime$1$[ebp], eax
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	DWORD PTR __imp__SetEvent@4

; 1905 : 
; 1906 :     if (SignalObjectAndWait (hSignal, hThread, 1000UL, TRUE) != WAIT_OBJECT_0) // Give 1 second, and

	mov	edi, DWORD PTR _hThread$[ebp]
	push	1
	push	1000					; 000003e8H
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [esi]
	push	ecx
	push	eax
	call	DWORD PTR __imp__SignalObjectAndWait@16
	test	eax, eax
	je	SHORT $LN2@operator

; 1907 :     {                                                                          // then we're killing
; 1908 :       TerminateThread (hThread, 0x00);                                         // the thing!

	mov	eax, DWORD PTR [edi]
	push	0
	push	eax
	call	DWORD PTR __imp__TerminateThread@8
$LN2@operator:

; 1909 :     }
; 1910 : 
; 1911 :     CloseHandle (hThread);

	mov	eax, DWORD PTR [edi]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4

; 1912 :                  hThread  = INVALID_HANDLE_VALUE;

	mov	DWORD PTR [edi], -1

; 1913 : 
; 1914 :     dll_log.LogEx (false, L"done! (%4u ms)\n", timeGetTime () - dwTime);

	call	DWORD PTR __imp__timeGetTime@0
	sub	eax, DWORD PTR _dwTime$1$[ebp]
	push	eax
	push	OFFSET ??_C@_1CA@KKELPOIK@?$AAd?$AAo?$AAn?$AAe?$AA?$CB?$AA?5?$AA?$CI?$AA?$CF?$AA4?$AAu?$AA?5?$AAm?$AAs?$AA?$CJ?$AA?6?$AA?$AA@
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi

; 1915 :   };

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??R<lambda_6ec963c1094b1d994a1eb4d638d667db>@@QBEXACRAX0PA_W@Z ENDP ; <lambda_6ec963c1094b1d994a1eb4d638d667db>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator!=, COMDAT
; _this$ = ecx

; 335  : 		{	// test for iterator inequality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	setne	al

; 336  : 		return (!(*this == _Right));
; 337  : 		}

	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator==, COMDAT
; _this$ = ecx

; 320  : 		{	// test for iterator equality

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	sete	al

; 321  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 322  : 		if (this->_Getcont() != _Right._Getcont())
; 323  : 			{	// report error
; 324  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 325  : 			}
; 326  : 
; 327  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 328  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 329  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 330  : 
; 331  : 		return (this->_Ptr == _Right._Ptr);
; 332  : 		}

	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator--, COMDAT
; _this$ = ecx

; 283  : 		{	// predecrement

	npad	2
	push	esi
	mov	esi, ecx

; 284  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 285  : 		if (this->_Getcont() == 0
; 286  : 			|| this->_Ptr == nullptr_t{})
; 287  : 			{	// report error
; 288  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 289  : 			}
; 290  : 
; 291  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 292  : 		--static_cast<_Mybase&>(*this);
; 293  : 		if (_Ptrsav == this->_Ptr)
; 294  : 			{	// report error
; 295  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 296  : 			}
; 297  : 
; 298  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 299  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 300  : 
; 301  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 302  : 		--static_cast<_Mybase&>(*this);
; 303  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 304  : 
; 305  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 306  : 		--static_cast<_Mybase&>(*this);

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator--

; 307  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 308  : 
; 309  : 		return (*this);

	mov	eax, esi
	pop	esi

; 310  : 		}

	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator++, COMDAT
; _this$ = ecx

; 276  : 		{	// postincrement

	npad	2
	push	ebp
	mov	ebp, esp

; 277  : 		_Myiter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], edx

; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++

; 278  : 		++*this;
; 279  : 		return (_Tmp);

	mov	eax, esi
	pop	esi

; 280  : 		}

	pop	ebp
	ret	8
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator++, COMDAT
; _this$ = ecx

; 257  : 		{	// preincrement

	npad	2
	push	esi
	mov	esi, ecx

; 258  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 259  : 		if (this->_Getcont() == 0
; 260  : 			|| this->_Ptr == nullptr_t{}
; 261  : 			|| _Mytree::_Isnil(this->_Ptr))
; 262  : 			{	// report error
; 263  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 264  : 			}
; 265  : 
; 266  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 267  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != nullptr_t{});
; 268  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 269  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 270  : 
; 271  : 		++static_cast<_Mybase&>(*this);

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++

; 272  : 		return (*this);

	mov	eax, esi
	pop	esi

; 273  : 		}

	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEABQAUHWND__@@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEABQAUHWND__@@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator*, COMDAT
; _this$ = ecx

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR [ecx]
	add	eax, 16					; 00000010H

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 234  : 		if (_Mycont == 0
; 235  : 			|| this->_Ptr == nullptr_t{}
; 236  : 			|| this->_Ptr == _Mycont->_Myhead)
; 237  : 			{	// report error
; 238  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 239  : 			}
; 240  : 
; 241  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 242  : 		_SCL_SECURE_VALIDATE(this->_Ptr != nullptr_t{});
; 243  : 		const auto _Mycont = static_cast<const _Mytree *>(this->_Getcont());
; 244  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 245  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr != _Mycont->_Myhead);
; 246  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 247  : 
; 248  : 		return (_Mytree::_Myval(this->_Ptr));
; 249  : 		}

	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QBEABQAUHWND__@@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@PAUHWND__@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@PAUHWND__@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 215  : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@PAUHWND__@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 124  : 		}

	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 84   : 		{	// predecrement

	mov	edx, ecx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 85   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LN4@operator

; 86   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], eax

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
$LN4@operator:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [eax]

; 87   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN40@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN23@operator
$LL22@operator:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL22@operator

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else
; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [edx], ecx

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
$LN40@operator:

; 88   : 			_Ptr = _Mytree::_Max(
; 89   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree
; 90   : 		else
; 91   : 			{	// climb looking for left subtree
; 92   : 			_Nodeptr _Pnode;
; 93   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 94   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	ecx, DWORD PTR [eax+4]
	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN3@operator
	npad	4
$LL2@operator:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN3@operator

; 95   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [ecx+4]
	cmp	BYTE PTR [ecx+13], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 96   : 			if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR [edx]
	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN47@operator
$LN23@operator:

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else
; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [edx], ecx
$LN47@operator:

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, edx

; 102  : 		}

	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	mov	edx, ecx

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN41@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR [eax+8]

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN34@operator

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN19@operator
	npad	5
$LL18@operator:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL18@operator
$LN19@operator:

; 63   : 			_Ptr = _Mytree::_Min(

	mov	DWORD PTR [edx], ecx

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, edx

; 74   : 		}

	ret	0
$LN34@operator:

; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree
; 65   : 		else
; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN3@operator
$LL2@operator:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR [edx], eax
$LN41@operator:

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, edx

; 74   : 		}

	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@PAUHWND__@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@PAUHWND__@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], eax

; 45   : 		this->_Adopt(_Plist);
; 46   : 		}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@PAUHWND__@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??$emplace@AAPAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Val_0>$ = 12						; size = 4
??$emplace@AAPAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::emplace<HWND__ * &>, COMDAT
; _this$ = ecx

; 1083 : 		{	// try to insert value_type(_Val...), favoring right side

	npad	2
	push	ebp
	mov	ebp, esp
	push	edi

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	push	DWORD PTR _<_Val_0>$[ebp]
	mov	edi, ecx
	call	??$_Buynode@AAPAUHWND__@@@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode<HWND__ * &>

; 1085 : 		return (_Insert_nohint(false,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1085 : 		return (_Insert_nohint(false,

	mov	ecx, edi
	push	eax
	push	0
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_nohint<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi

; 1086 : 			this->_Myval(_Newnode), _Newnode));
; 1087 : 		}

	pop	ebp
	ret	8
??$emplace@AAPAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@AAPAUHWND__@@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::emplace<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??__Fdummy_windows@@YAXXZ
text$yd	SEGMENT
$T1 = -4						; size = 4
??__Fdummy_windows@@YAXXZ PROC				; `dynamic atexit destructor for 'dummy_windows'', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A

; 2184 : 		erase(begin(), end());

	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	push	esi
	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase

; 719  : 		_Freeheadnode(_Myhead());

	mov	esi, DWORD PTR ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A

; 854  : 		_Getal().destroy(

	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	push	esi
	call	??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	eax, DWORD PTR [esi+4]

; 856  : 		_Getal().destroy(

	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	push	eax
	call	??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	lea	eax, DWORD PTR [esi+8]

; 858  : 		_Getal().destroy(

	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	push	eax
	call	??$destroy@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::destroy<std::_Tree_node<HWND__ *,void *> *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	1
	push	esi
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??__Fdummy_windows@@YAXXZ ENDP				; `dynamic atexit destructor for 'dummy_windows''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ??__Edummy_windows@@YAXXZ
text$di	SEGMENT
??__Edummy_windows@@YAXXZ PROC				; `dynamic initializer for 'dummy_windows'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 302  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	call	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 714  : 		_Myhead() = _Buyheadnode();

	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows

; 560  : 		: _Myhead(),

	mov	DWORD PTR ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A, 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A+4, 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buyheadnode
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1778 : std::set <HWND> dummy_windows;

	push	OFFSET ??__Fdummy_windows@@YAXXZ	; `dynamic atexit destructor for 'dummy_windows''
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 714  : 		_Myhead() = _Buyheadnode();

	mov	DWORD PTR ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A, eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1778 : std::set <HWND> dummy_windows;

	call	_atexit
	pop	ecx
	ret	0
??__Edummy_windows@@YAXXZ ENDP				; `dynamic initializer for 'dummy_windows''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??1?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
??1?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ PROC ; std::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >::~set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [esi]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ ENDP ; std::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >::~set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\set
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\set
;	COMDAT ??0?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ PROC ; std::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx

; 70   : 		{	// construct empty set from defaults

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\set

; 71   : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@QAE@XZ ENDP ; std::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >::set<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABQAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABQAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Key, COMDAT
; _this$ = ecx

; 2193 : 		{	// return reference to key in node

	npad	2
	push	ebp
	mov	ebp, esp

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 2194 : 		return ((const key_type&)this->_Kfn(this->_Myval(_Pnode)));
; 2195 : 		}

	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABQAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Key
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABQAUHWND__@@ABQAU3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABQAUHWND__@@ABQAU3@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Kfn, COMDAT
; _this$ = ecx

; 2188 : 		{	// get key from value

	npad	2
	push	ebp
	mov	ebp, esp

; 2189 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 2190 : 		}

	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEABQAUHWND__@@ABQAU3@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tidy, COMDAT
; _this$ = ecx

; 2183 : 		{	// free all storage

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [ecx]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase

; 2185 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 2127 : 		{	// promote left node to root of subtree

	npad	2
	push	ebp
	mov	ebp, esp

; 2128 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	esi
	mov	esi, DWORD PTR [edx]

; 2129 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [edx], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi+8]

; 2130 : 
; 2131 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN2@Rrotate

; 2132 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], edx
$LN2@Rrotate:

; 2133 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]

; 2134 : 
; 2135 : 		if (_Wherenode == _Root())

	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Rrotate

; 2136 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
$LN3@Rrotate:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [edx+4]

; 2137 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	cmp	edx, DWORD PTR [eax+8]
	jne	SHORT $LN5@Rrotate

; 2138 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
$LN5@Rrotate:

; 2139 : 		else
; 2140 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], esi

; 2141 : 
; 2142 : 		this->_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi+8], edx

; 2143 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2144 : 		}

	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Root, COMDAT
; _this$ = ecx

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]
	add	eax, 4

; 2123 : 		return (this->_Parent(this->_Myhead()));
; 2124 : 		}

	ret	0
?_Root@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Root
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rmost, COMDAT
; _this$ = ecx

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 2118 : 		return (this->_Right(this->_Myhead()));
; 2119 : 		}

	ret	0
?_Rmost@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rmost
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 2097 : 		{	// promote right node to root of subtree

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	esi

; 2098 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	esi, DWORD PTR [edx+8]

; 2099 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edx+8], eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi]

; 2100 : 
; 2101 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN2@Lrotate

; 2102 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [eax+4], edx
$LN2@Lrotate:

; 2103 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], eax

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ecx]

; 2104 : 
; 2105 : 		if (_Wherenode == _Root())

	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Lrotate

; 2106 : 			_Root() = _Pnode;

	mov	DWORD PTR [eax+4], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
$LN3@Lrotate:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edx+4]

; 2107 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@Lrotate

; 2108 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
$LN5@Lrotate:

; 2109 : 		else
; 2110 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [eax+8], esi

; 2111 : 
; 2112 : 		this->_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [esi], edx

; 2113 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], esi
	pop	esi

; 2114 : 		}

	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lmost, COMDAT
; _this$ = ecx

; 2093 : 		return (this->_Left(this->_Myhead()));

	mov	eax, DWORD PTR [ecx]

; 2094 : 		}

	ret	0
?_Lmost@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Erase, COMDAT
; _this$ = ecx

; 2048 : 		{	// free entire subtree, recursively

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi

; 2049 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	edi, DWORD PTR __Rootnode$[ebp]
	mov	ebx, ecx
	mov	esi, edi

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	cmp	BYTE PTR [edi+13], 0
	jne	SHORT $LN3@Erase
$LL4@Erase:

; 2051 : 			{	// free subtrees, then node
; 2052 : 			_Erase(this->_Right(_Pnode));

	push	DWORD PTR [esi+8]
	mov	ecx, ebx
	call	?_Erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Erase

; 2053 : 			_Pnode = this->_Left(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	edi, esi
	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LL4@Erase
$LN3@Erase:
	pop	edi
	pop	esi
	pop	ebx

; 2054 : 			this->_Getal().destroy(
; 2055 : 				_STD addressof(this->_Myval(_Rootnode)));
; 2056 : 
; 2057 : 			this->_Getal().deallocate(_Rootnode, 1);
; 2058 : 			}
; 2059 : 		}

	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Destroy_if_not_nil@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Newnode$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 1648 : 		{	// node exists, destroy it

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	1
	push	DWORD PTR __Newnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1653 : 		}

	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT
__Ans$1 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::equal_range, COMDAT
; _this$ = ecx

; 1597 : 		{	// find range equivalent to _Keyval in mutable tree

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]
	lea	eax, DWORD PTR __Ans$1[ebp]
	push	eax
	call	??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 187  : 		: first(_STD forward<_Other1>(_Val1)),

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Ans$1[ebp]
	mov	DWORD PTR [eax], ecx

; 188  : 				second(_STD forward<_Other2>(_Val2))

	mov	ecx, DWORD PTR __Ans$1[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1599 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@2@ABQAUHWND__@@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::clear, COMDAT
; _this$ = ecx

; 1475 : 		{	// erase all

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1476 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1477 : 		this->_Orphan_ptr(nullptr_t{});
; 1478 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1479 : 
; 1480 : 		_Erase(_Root());

	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR [eax+4]

; 2049 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	esi, ebx

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	cmp	BYTE PTR [ebx+13], 0
	jne	SHORT $LN23@clear
	npad	4
$LL24@clear:

; 2051 : 			{	// free subtrees, then node
; 2052 : 			_Erase(this->_Right(_Pnode));

	push	DWORD PTR [esi+8]
	mov	ecx, edi
	call	?_Erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Erase

; 2053 : 			_Pnode = this->_Left(_Pnode);

	mov	esi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2050 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	ebx, esi
	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LL24@clear
$LN23@clear:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [edi]

; 1485 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax], eax

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [edi]

; 1481 : 		_Root() = this->_Myhead();
; 1482 : 		_Lmost() = this->_Myhead();
; 1483 : 		_Rmost() = this->_Myhead();

	mov	DWORD PTR [eax+8], eax

; 1484 : 		this->_Mysize() = 0;

	mov	DWORD PTR [edi+4], 0

; 1485 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::clear
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEIABQAUHWND__@@@Z
_TEXT	SEGMENT
__Ans$1 = -12						; size = 8
_this$1$ = -4						; size = 4
$T2 = 8							; size = 1
$T3 = 8							; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEIABQAUHWND__@@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase, COMDAT
; _this$ = ecx

; 1467 : 		{	// erase and count all that match _Keyval

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	DWORD PTR __Keyval$[ebp]

; 1467 : 		{	// erase and count all that match _Keyval

	mov	eax, ecx

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	lea	ecx, DWORD PTR __Ans$1[ebp]
	push	ecx
	mov	ecx, eax

; 1467 : 		{	// erase and count all that match _Keyval

	mov	DWORD PTR _this$1$[ebp], eax

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	call	??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	push	DWORD PTR $T2[ebp]
	push	DWORD PTR __Ans$1[ebp+4]
	push	DWORD PTR __Ans$1[ebp]
	call	??$_Distance1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@@std@@YAHV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@0@0Uinput_iterator_tag@0@@Z ; std::_Distance1<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> > > >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1470 : 		erase(_Where.first, _Where.second);

	mov	ecx, DWORD PTR _this$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 1113 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1469 : 		size_type _Num = _STD distance(_Where.first, _Where.second);

	mov	ebx, eax

; 1470 : 		erase(_Where.first, _Where.second);

	lea	eax, DWORD PTR $T3[ebp]
	push	DWORD PTR __Ans$1[ebp+4]
	push	DWORD PTR __Ans$1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase

; 1471 : 		return (_Num);

	mov	eax, ebx
	pop	ebx

; 1472 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEIABQAUHWND__@@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase, COMDAT
; _this$ = ecx

; 1452 : 		{	// erase [_First, _Last)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]

; 1453 : 		if (_First == begin() && _Last == end())

	mov	edx, DWORD PTR __Last$[ebp]
	push	esi
	push	edi
	mov	edi, ecx

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	esi, DWORD PTR [edi]

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, DWORD PTR [esi]

; 1453 : 		if (_First == begin() && _Last == end())

	jne	SHORT $LN180@erase

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	edx, esi

; 1453 : 		if (_First == begin() && _Last == end())

	jne	SHORT $LN180@erase

; 1454 : 			{	// erase all
; 1455 : 			clear();

	call	?clear@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::clear

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1463 : 			}
; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN180@erase:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	eax, edx

; 1456 : 			return (begin());
; 1457 : 			}
; 1458 : 		else
; 1459 : 			{	// partial erase, one at a time
; 1460 : 			while (_First != _Last)

	je	SHORT $LN3@erase
$LL2@erase:

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [eax+13], 0

; 277  : 		_Myiter _Tmp = *this;

	mov	ecx, eax

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	jne	SHORT $LN136@erase

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	edx, DWORD PTR [eax+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN182@erase

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN192@erase
	npad	3
$LL147@erase:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL147@erase

; 65   : 		else

	jmp	SHORT $LN192@erase
$LN182@erase:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+13], 0
	jne	SHORT $LN192@erase
$LL131@erase:
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN192@erase

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, edx
	mov	DWORD PTR __First$[ebp], eax
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+13], 0
	je	SHORT $LL131@erase
$LN192@erase:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR __First$[ebp], edx
$LN136@erase:

; 1461 : 				erase(_First++);

	push	ecx
	lea	eax, DWORD PTR $T1[ebp]
	mov	ecx, edi
	push	eax
	call	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase

; 331  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]

; 1456 : 			return (begin());
; 1457 : 			}
; 1458 : 		else
; 1459 : 			{	// partial erase, one at a time
; 1460 : 			while (_First != _Last)

	jne	SHORT $LL2@erase
$LN3@erase:

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax

; 1462 : 			return (iterator(_First._Ptr, _STD addressof(this->_Get_data())));

	mov	eax, ecx

; 1463 : 			}
; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
tv1196 = -16						; size = 4
tv1197 = -12						; size = 4
tv1195 = -8						; size = 4
tv1191 = -8						; size = 4
tv1171 = -8						; size = 4
__Erasednode$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase, COMDAT
; _this$ = ecx

; 1264 : 		{	// erase element at _Where

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR __Where$[ebp]
	push	ebx
	push	esi

; 1264 : 		{	// erase element at _Where

	mov	ebx, ecx

; 123  : 		return (_Ptr);

	mov	DWORD PTR __Erasednode$1$[ebp], eax
	push	edi

; 271  : 		++static_cast<_Mybase&>(*this);

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,std::_Iterator_base0>::operator++

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Erasednode$1$[ebp]
	mov	esi, DWORD PTR [ecx]

; 1265 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1266 : 		if (_Where._Getcont() != _STD addressof(this->_Get_data())
; 1267 : 			|| this->_Isnil(_Where._Mynode()))
; 1268 : 			{
; 1269 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1270 : 			}
; 1271 : 
; 1272 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1273 : 		++_Where;	// save successor iterator for return
; 1274 : 		_Orphan_ptr(_Erasednode);
; 1275 : 
; 1276 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1277 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1278 : 		++_Where;	// save successor iterator for return
; 1279 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1280 : 
; 1281 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1282 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1283 : 		_Nodeptr _Pnode = _Erasednode;
; 1284 : 
; 1285 : 		if (this->_Isnil(this->_Left(_Pnode)))

	cmp	BYTE PTR [esi+13], 0
	je	SHORT $LN5@erase

; 1286 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	edi, DWORD PTR [ecx+8]

; 1287 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	jmp	SHORT $LN692@erase
$LN5@erase:
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LN7@erase

; 1288 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	edi, esi

; 1289 : 		else

	jmp	SHORT $LN692@erase
$LN7@erase:

; 123  : 		return (_Ptr);

	mov	edx, DWORD PTR __Where$[ebp]

; 1290 : 			{	// two subtrees, must lift successor node to replace erased
; 1291 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 1292 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	edi, DWORD PTR [edx+8]

; 1293 : 			}
; 1294 : 
; 1295 : 		if (_Pnode == _Erasednode)

	cmp	edx, ecx
	jne	$LN9@erase
$LN692@erase:

; 1296 : 			{	// at most one subtree, relink it
; 1297 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1298 : 			if (!this->_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+13], 0
	mov	esi, DWORD PTR [ecx+4]
	jne	SHORT $LN11@erase

; 1299 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	DWORD PTR [edi+4], esi
$LN11@erase:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ebx]

; 1300 : 
; 1301 : 			if (_Root() == _Erasednode)

	cmp	DWORD PTR [eax+4], ecx
	jne	SHORT $LN12@erase

; 1302 : 				_Root() = _Fixnode;	// link down from root

	mov	DWORD PTR [eax+4], edi

; 1303 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	jmp	SHORT $LN15@erase
$LN12@erase:
	cmp	DWORD PTR [esi], ecx
	jne	SHORT $LN14@erase

; 1304 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	DWORD PTR [esi], edi

; 1305 : 			else

	jmp	SHORT $LN15@erase
$LN14@erase:

; 1306 : 				this->_Right(_Fixnodeparent) =

	mov	DWORD PTR [esi+8], edi
$LN15@erase:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ebx]

; 1307 : 					_Fixnode;	// link down to right
; 1308 : 
; 1309 : 			if (_Lmost() == _Erasednode)

	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN16@erase

; 1310 : 				_Lmost() = this->_Isnil(_Fixnode)

	cmp	BYTE PTR [edi+13], 0
	je	SHORT $LN42@erase
	mov	edx, esi
	jmp	SHORT $LN43@erase
$LN42@erase:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edi]

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	edx, edi

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN166@erase
$LL165@erase:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL165@erase
$LN166@erase:
	mov	eax, DWORD PTR [ebx]
$LN43@erase:

; 1310 : 				_Lmost() = this->_Isnil(_Fixnode)

	mov	DWORD PTR [eax], edx
$LN16@erase:

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR [ebx]

; 1311 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1312 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree
; 1313 : 
; 1314 : 			if (_Rmost() == _Erasednode)

	cmp	DWORD PTR [eax+8], ecx
	jne	$LN373@erase

; 1315 : 				_Rmost() = this->_Isnil(_Fixnode)

	cmp	BYTE PTR [edi+13], 0
	je	SHORT $LN44@erase
	mov	edx, esi
	mov	DWORD PTR [eax+8], edx

; 1316 : 					? _Fixnodeparent	// largest is parent of erased node
; 1317 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1318 : 			}
; 1319 : 		else

	jmp	SHORT $LN373@erase
$LN44@erase:

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edi+8]

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	edx, edi

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN218@erase
$LL217@erase:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	edx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [edx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL217@erase
$LN218@erase:
	mov	eax, DWORD PTR [ebx]

; 1315 : 				_Rmost() = this->_Isnil(_Fixnode)

	mov	DWORD PTR [eax+8], edx

; 1316 : 					? _Fixnodeparent	// largest is parent of erased node
; 1317 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1318 : 			}
; 1319 : 		else

	jmp	SHORT $LN373@erase
$LN9@erase:

; 1320 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1321 : 			this->_Parent(this->_Left(_Erasednode)) =

	mov	DWORD PTR [esi+4], edx

; 1322 : 				_Pnode;	// link left up
; 1323 : 			this->_Left(_Pnode) =

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1324 : 				this->_Left(_Erasednode);	// link successor down
; 1325 : 
; 1326 : 			if (_Pnode == this->_Right(_Erasednode))

	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN18@erase

; 1327 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	esi, edx

; 1328 : 			else

	jmp	SHORT $LN19@erase
$LN18@erase:

; 1329 : 				{	// successor further down, link in place of erased
; 1330 : 				_Fixnodeparent =
; 1331 : 					this->_Parent(_Pnode);	// parent is successor's
; 1332 : 				if (!this->_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+13], 0
	mov	esi, DWORD PTR [edx+4]
	jne	SHORT $LN20@erase

; 1333 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	DWORD PTR [edi+4], esi
$LN20@erase:

; 1334 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	DWORD PTR [esi], edi

; 1335 : 				this->_Right(_Pnode) =

	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax

; 1336 : 					this->_Right(_Erasednode);	// link next down
; 1337 : 				this->_Parent(this->_Right(_Erasednode)) =

	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
$LN19@erase:

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR [ebx]

; 1338 : 					_Pnode;	// right up
; 1339 : 				}
; 1340 : 
; 1341 : 			if (_Root() == _Erasednode)

	cmp	DWORD PTR [eax+4], ecx
	jne	SHORT $LN21@erase

; 1342 : 				_Root() = _Pnode;	// link down from root

	mov	DWORD PTR [eax+4], edx

; 1343 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	jmp	SHORT $LN24@erase
$LN21@erase:

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx+4]

; 1343 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN23@erase

; 1344 : 				this->_Left(this->_Parent(_Erasednode)) =

	mov	DWORD PTR [eax], edx

; 1345 : 					_Pnode;	// link down to left
; 1346 : 			else

	jmp	SHORT $LN24@erase
$LN23@erase:

; 1347 : 				this->_Right(this->_Parent(_Erasednode)) =

	mov	DWORD PTR [eax+8], edx
$LN24@erase:

; 1348 : 					_Pnode;	// link down to right
; 1349 : 
; 1350 : 			this->_Parent(_Pnode) =

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 67   : 	_Left = _STD move(_Right);

	mov	eax, DWORD PTR __Erasednode$1$[ebp]
	mov	cl, BYTE PTR [edx+12]
	mov	al, BYTE PTR [eax+12]
	mov	BYTE PTR [edx+12], al

; 68   : 	_Right = _STD move(_Tmp);

	mov	eax, DWORD PTR __Erasednode$1$[ebp]
	mov	BYTE PTR [eax+12], cl
	mov	ecx, eax
$LN373@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1356 : 		if (this->_Color(_Erasednode) == this->_Black)

	cmp	BYTE PTR [ecx+12], 1
	jne	$LN25@erase

; 1357 : 			{	// erasing black link, must recolor/rebalance tree
; 1358 : 			for (; _Fixnode != _Root()
; 1359 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	eax, DWORD PTR [ebx]
	cmp	edi, DWORD PTR [eax+4]
	je	$LN3@erase
	npad	7
$LL4@erase:
	cmp	BYTE PTR [edi+12], 1
	mov	edx, esi
	mov	DWORD PTR tv1195[ebp], edx
	mov	DWORD PTR tv1197[ebp], esi
	mov	DWORD PTR tv1196[ebp], esi
	jne	$LN695@erase

; 1361 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	ecx, DWORD PTR [esi]
	cmp	edi, ecx
	jne	SHORT $LN26@erase

; 1362 : 					{	// fixup left subtree
; 1363 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]

; 1364 : 					if (this->_Color(_Pnode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN28@erase

; 1365 : 						{	// rotate red up from right subtree
; 1366 : 						this->_Color(_Pnode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1367 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1368 : 						_Lrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [esi+12], 0
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lrotate

; 1369 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]
	mov	edx, esi
$LN28@erase:

; 1370 : 						}
; 1371 : 
; 1372 : 					if (this->_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+13], 0
	jne	$LN2@erase

; 1373 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1374 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black
; 1375 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN31@erase
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	je	SHORT $LN696@erase
$LN31@erase:

; 1376 : 						{	// redden right subtree with black children
; 1377 : 						this->_Color(_Pnode) = this->_Red;
; 1378 : 						_Fixnode = _Fixnodeparent;
; 1379 : 						}
; 1380 : 					else
; 1381 : 						{	// must rearrange right subtree
; 1382 : 						if (this->_Color(this->_Right(_Pnode))
; 1383 : 							== this->_Black)

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN33@erase

; 1384 : 							{	// rotate red up from left sub-subtree
; 1385 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx]

; 1386 : 							this->_Color(_Pnode) = this->_Red;
; 1387 : 							_Rrotate(_Pnode);

	push	ecx
	mov	BYTE PTR [eax+12], 1
	mov	BYTE PTR [ecx+12], 0
	mov	ecx, ebx
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rrotate

; 1388 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi+8]
$LN33@erase:

; 1389 : 							}
; 1390 : 
; 1391 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	al, BYTE PTR [esi+12]
	mov	BYTE PTR [ecx+12], al

; 1392 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	BYTE PTR [esi+12], 1

; 1393 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx+8]

; 1394 : 						_Lrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [eax+12], 1
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lrotate

; 1395 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN695@erase
$LN26@erase:

; 1396 : 						}
; 1397 : 					}
; 1398 : 				else
; 1399 : 					{	// fixup right subtree
; 1400 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1401 : 					if (this->_Color(_Pnode) == this->_Red)

	cmp	BYTE PTR [ecx+12], 0
	jne	SHORT $LN34@erase

; 1402 : 						{	// rotate red up from left subtree
; 1403 : 						this->_Color(_Pnode) = this->_Black;

	mov	BYTE PTR [ecx+12], 1

; 1404 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1405 : 						_Rrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [esi+12], 0
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rrotate

; 1406 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR tv1195[ebp]
$LN34@erase:

; 1407 : 						}
; 1408 : 
; 1409 : 					if (this->_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+13], 0
	jne	SHORT $LN2@erase

; 1410 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1411 : 					else if (this->_Color(this->_Right(_Pnode)) ==
; 1412 : 						this->_Black
; 1413 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN37@erase
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN37@erase
$LN696@erase:

; 1414 : 						{	// redden left subtree with black children
; 1415 : 						this->_Color(_Pnode) = this->_Red;

	mov	BYTE PTR [ecx+12], 0
$LN2@erase:

; 1357 : 			{	// erasing black link, must recolor/rebalance tree
; 1358 : 			for (; _Fixnode != _Root()
; 1359 : 				&& this->_Color(_Fixnode) == this->_Black;

	mov	eax, DWORD PTR [ebx]

; 1360 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	mov	esi, DWORD PTR [esi+4]
	mov	edi, DWORD PTR tv1197[ebp]
	cmp	edx, DWORD PTR [eax+4]
	jne	$LL4@erase
	mov	edi, DWORD PTR tv1196[ebp]
$LN695@erase:
	mov	ecx, DWORD PTR __Erasednode$1$[ebp]
$LN3@erase:

; 1432 : 						break;	// tree now recolored/rebalanced
; 1433 : 						}
; 1434 : 					}
; 1435 : 
; 1436 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	BYTE PTR [edi+12], 1
$LN25@erase:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1444 : 		if (0 < this->_Mysize())

	mov	eax, DWORD PTR [ebx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR __Where$[ebp]

; 1444 : 		if (0 < this->_Mysize())

	test	eax, eax
	je	SHORT $LN694@erase

; 1445 : 			--this->_Mysize();

	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN694@erase:

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], ecx

; 1446 : 
; 1447 : 		return (iterator(_Where._Ptr,
; 1448 : 			_STD addressof(this->_Get_data())));	// return successor iterator
; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN37@erase:

; 1416 : 						_Fixnode = _Fixnodeparent;
; 1417 : 						}
; 1418 : 					else
; 1419 : 						{	// must rearrange left subtree
; 1420 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+12], 1
	jne	SHORT $LN39@erase

; 1421 : 							{	// rotate red up from right sub-subtree
; 1422 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx+8]

; 1423 : 							this->_Color(_Pnode) = this->_Red;
; 1424 : 							_Lrotate(_Pnode);

	push	ecx
	mov	BYTE PTR [eax+12], 1
	mov	BYTE PTR [ecx+12], 0
	mov	ecx, ebx
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Lrotate

; 1425 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR [esi]
$LN39@erase:

; 1426 : 							}
; 1427 : 
; 1428 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	al, BYTE PTR [esi+12]
	mov	BYTE PTR [ecx+12], al

; 1429 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	BYTE PTR [esi+12], 1

; 1430 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR [ecx]

; 1431 : 						_Rrotate(_Fixnodeparent);

	mov	ecx, ebx
	push	esi
	mov	BYTE PTR [eax+12], 1
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Rrotate
	jmp	SHORT $LN695@erase
?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::max_size, COMDAT
; _this$ = ecx

; 1181 : 		return (this->_Getal().max_size());

	mov	eax, 214748364				; 0cccccccH

; 1182 : 		}

	ret	0
?max_size@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::end, COMDAT
; _this$ = ecx

; 1125 : 		{	// return iterator for end of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1126 : 		return (iterator(this->_Myhead(), _STD addressof(this->_Get_data())));
; 1127 : 		}

	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::begin, COMDAT
; _this$ = ecx

; 1115 : 		{	// return iterator for beginning of mutable sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR [ecx]

; 43   : 		: _Ptr(_Pnode)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx

; 1116 : 		return (iterator(_Lmost(), _STD addressof(this->_Get_data())));
; 1117 : 		}

	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
??1?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::~_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >, COMDAT
; _this$ = ecx

; 1098 : 		{	// destroy tree

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx

; 43   : 		: _Ptr(_Pnode)

	mov	eax, DWORD PTR [esi]

; 2184 : 		erase(begin(), end());

	push	eax
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1100 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::~_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABU?$less@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABU?$less@PAUHWND__@@@1@@Z PROC ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >, COMDAT
; _this$ = ecx

; 1019 : 		{	// construct empty tree from comparator

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax

; 1020 : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABU?$less@PAUHWND__@@@1@@Z ENDP ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAUHWND__@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAUHWND__@@@2@XZ PROC ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QBEABU?$less@PAUHWND__@@@2@XZ ENDP ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAUHWND__@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAUHWND__@@@2@XZ PROC ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@PAUHWND__@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@PAUHWND__@@@2@XZ ENDP ; std::_Compressed_pair<std::less<HWND__ *>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >,std::_Tree_val<std::_Tree_simple_types<HWND__ *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Min, COMDAT

; 607  : 		{	// return leftmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN15@Min
$LL2@Min:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Min
$LN15@Min:

; 610  : 		return (_Pnode);

	mov	eax, ecx

; 611  : 		}

	pop	ebp
	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Max, COMDAT

; 600  : 		{	// return rightmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN15@Max
$LL2@Max:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL2@Max
$LN15@Max:

; 603  : 		return (_Pnode);

	mov	eax, ecx

; 604  : 		}

	pop	ebp
	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Myval, COMDAT

; 595  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 597  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Right, COMDAT

; 590  : 		{	// return reference to right pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 592  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Right
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Parent, COMDAT

; 585  : 		{	// return reference to parent pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 587  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Parent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Left, COMDAT

; 580  : 		{	// return reference to left pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 581  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 582  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Left
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Isnil, COMDAT

; 575  : 		{	// return reference to nil flag in node

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 577  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Isnil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Color@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Color, COMDAT

; 570  : 		{	// return reference to color in node

	npad	2
	push	ebp
	mov	ebp, esp

; 571  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 572  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Color
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Tree_val<std::_Tree_simple_types<HWND__ *> >, COMDAT
; _this$ = ecx

; 560  : 		: _Myhead(),

	mov	DWORD PTR [ecx], 0

; 563  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<HWND__ *> >::_Tree_val<std::_Tree_simple_types<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z PROC	; std::less<HWND__ *>::operator(), COMDAT
; _this$ = ecx

; 233  : 		{	// apply operator< to operands

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	setb	al

; 234  : 		return (_Left < _Right);
; 235  : 		}

	pop	ebp
	ret	8
??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ENDP	; std::less<HWND__ *>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAIXZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Mysize, COMDAT
; _this$ = ecx

; 955  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+4]

; 956  : 		}

	ret	0
?_Mysize@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAIXZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABQAU?$_Tree_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABQAU?$_Tree_node@PAUHWND__@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myhead, COMDAT
; _this$ = ecx

; 950  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 951  : 		}

	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABQAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myhead, COMDAT
; _this$ = ecx

; 945  : 		return (_Get_data()._Myhead);

	mov	eax, ecx

; 946  : 		}

	ret	0
?_Myhead@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Get_data, COMDAT
; _this$ = ecx

; 940  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 941  : 		}

	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Get_data, COMDAT
; _this$ = ecx

; 935  : 		return (_Mypair._Get_second()._Get_second());

	mov	eax, ecx

; 936  : 		}

	ret	0
?_Get_data@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getal, COMDAT
; _this$ = ecx

; 930  : 		return (_Mypair._Get_second()._Get_first());

	mov	eax, ecx

; 931  : 		}

	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getal, COMDAT
; _this$ = ecx

; 925  : 		return (_Mypair._Get_second()._Get_first());

	mov	eax, ecx

; 926  : 		}

	ret	0
?_Getal@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABU?$less@PAUHWND__@@@2@XZ
_TEXT	SEGMENT
?_Getcomp@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABU?$less@PAUHWND__@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 920  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 921  : 		}

	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QBEABU?$less@PAUHWND__@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAU?$less@PAUHWND__@@@2@XZ
_TEXT	SEGMENT
?_Getcomp@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAU?$less@PAUHWND__@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 915  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 916  : 		}

	ret	0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEAAU?$less@PAUHWND__@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Freenode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Freenode0, COMDAT
; _this$ = ecx

; 883  : 		{	// free non-value node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 891  : 		}

	pop	ebp
	ret	4
?_Freenode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Freenode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Buynode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Buynode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode0, COMDAT
; _this$ = ecx

; 864  : 		{	// allocate a non-value node

	npad	2
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 864  : 		{	// allocate a non-value node

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	mov	edx, eax
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	edx, edx
	jne	SHORT $LN174@Buynode0
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN177@Buynode0:
$LN174@Buynode0:

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	ecx, DWORD PTR [edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [edx], eax
	test	ecx, ecx
	je	SHORT $LN120@Buynode0
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax
$LN120@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	lea	ecx, DWORD PTR [edx+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN167@Buynode0
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax
$LN167@Buynode0:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 879  : 		return (_Pnode);

	mov	eax, edx
	pop	esi

; 880  : 		}

	ret	0
$LN176@Buynode0:
?_Buynode0@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Freeheadnode, COMDAT
; _this$ = ecx

; 853  : 		{	// free head node using current allocator

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	1
	push	DWORD PTR __Pnode$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 861  : 		}

	pop	ebp
	ret	4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ
_TEXT	SEGMENT
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buyheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN146@Buyheadnod
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN146@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	lea	ecx, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], eax
	test	ecx, ecx
	je	SHORT $LN96@Buyheadnod
	mov	DWORD PTR [ecx], eax
$LN96@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	lea	ecx, DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	test	ecx, ecx
	je	SHORT $LN131@Buyheadnod
	mov	DWORD PTR [ecx], eax
$LN131@Buyheadnod:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 847  : 		_Color(_Pnode) = _Black;

	mov	WORD PTR [eax+12], 257			; 00000101H

; 848  : 		_Isnil(_Pnode) = true;
; 849  : 		return (_Pnode);
; 850  : 		}

	ret	0
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??1?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::~_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	1
	push	DWORD PTR [ecx]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 720  : 		}

	ret	0
??1?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::~_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Construct@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Construct@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Construct, COMDAT
; _this$ = ecx

; 713  : 		{	// construct head node

	npad	2
	push	esi
	mov	esi, ecx

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax
	pop	esi

; 715  : 		}

	ret	0
?_Construct@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Construct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ??0?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABU?$less@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
??0?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABU?$less@PAUHWND__@@@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >, COMDAT
; _this$ = ecx

; 697  : 		{	// construct from comparator

	npad	2
	push	esi
	mov	esi, ecx

; 560  : 		: _Myhead(),

	mov	DWORD PTR [esi], 0

; 561  : 		_Mysize(0)

	mov	DWORD PTR [esi+4], 0

; 714  : 		_Myhead() = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buyheadnode
	mov	DWORD PTR [esi], eax

; 698  : 		_Construct();
; 699  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE@ABU?$less@PAUHWND__@@@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Min@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Min, COMDAT

; 690  : 		{	// return leftmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	ecx, DWORD PTR __Pnode$[ebp]

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN17@Min
$LL4@Min:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Min
$LN17@Min:

; 691  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

	mov	eax, ecx

; 692  : 		}

	pop	ebp
	ret	0
?_Min@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Max@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Max, COMDAT

; 685  : 		{	// return rightmost node in subtree at _Pnode

	npad	2
	push	ebp
	mov	ebp, esp

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	ecx, DWORD PTR __Pnode$[ebp]

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN17@Max
$LL4@Max:

; 602  : 			_Pnode = _Right(_Pnode);

	mov	ecx, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [ecx+8]

; 601  : 		while (!_Isnil(_Right(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL4@Max
$LN17@Max:

; 686  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

	mov	eax, ecx

; 687  : 		}

	pop	ebp
	ret	0
?_Max@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Myval@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myval, COMDAT

; 680  : 		{	// return reference to value in node

	npad	2
	push	ebp
	mov	ebp, esp

; 596  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 681  : 		return (_Tree_val<_Val_types>::_Myval(_Pnode));
; 682  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Right@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Right, COMDAT

; 675  : 		{	// return reference to right pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 591  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 676  : 		return (_Tree_val<_Val_types>::_Right(_Pnode));
; 677  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Right
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Parent@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Parent, COMDAT

; 670  : 		{	// return reference to parent pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 671  : 		return (_Tree_val<_Val_types>::_Parent(_Pnode));
; 672  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Parent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Left@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Left, COMDAT

; 665  : 		{	// return reference to left pointer in node

	npad	2
	push	ebp
	mov	ebp, esp

; 666  : 		return (_Tree_val<_Val_types>::_Left(_Pnode));

	mov	eax, DWORD PTR __Pnode$[ebp]

; 667  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAAPAU?$_Tree_node@PAUHWND__@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Left
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Isnil@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Isnil, COMDAT

; 660  : 		{	// return reference to nil flag in node

	npad	2
	push	ebp
	mov	ebp, esp

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 661  : 		return (_Tree_val<_Val_types>::_Isnil(_Pnode));
; 662  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Isnil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
;	COMDAT ?_Color@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Color, COMDAT

; 655  : 		{	// return reference to color in node

	npad	2
	push	ebp
	mov	ebp, esp

; 571  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 656  : 		return (_Tree_val<_Val_types>::_Color(_Pnode));
; 657  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@SAAADPAU?$_Tree_node@PAUHWND__@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Color
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 214748364				; 0cccccccH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ; std::allocator<std::_Tree_node<HWND__ *,void *> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<HWND__ *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 214748364				; 0cccccccH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<HWND__ *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_node<HWND__ *,void *> >::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 214748364				; 0cccccccH

; 852  : 		}

	ret	0
?max_size@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_node<HWND__ *,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<HWND__ *,void *> >::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 214748364				; 0cccccccH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	lea	eax, DWORD PTR [eax+eax*4]
	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<HWND__ *,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<HWND__ *,void *> >::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	20					; 00000014H
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAEXPAU?$_Tree_node@PAUHWND__@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<HWND__ *,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<HWND__ *,void *> >::allocator<std::_Tree_node<HWND__ *,void *> >, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@U?$_Tree_node@PAUHWND__@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<HWND__ *,void *> >::allocator<std::_Tree_node<HWND__ *,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\set
;	COMDAT ?_Kfn@?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@SAABQAUHWND__@@ABQAU3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@SAABQAUHWND__@@ABQAU3@@Z PROC ; std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0>::_Kfn, COMDAT

; 34   : 		{	// extract key from element value

	npad	2
	push	ebp
	mov	ebp, esp

; 35   : 		return (_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 36   : 		}

	pop	ebp
	ret	0
?_Kfn@?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@SAABQAUHWND__@@ABQAU3@@Z ENDP ; std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0>::_Kfn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z PROC ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3843 : 	{	// test for string vs. NTCTS equality

	npad	2
	push	ebp
	mov	ebp, esp

; 3844 : 	return (_Left._Equal(_Right));

	push	DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal

; 3845 : 	}

	pop	ebp
	ret	0
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z ENDP ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ??B<lambda_cfec501fcb6571b9a7c0522edf85241b>@@QBEP6GKPAX@ZXZ
_TEXT	SEGMENT
??B<lambda_cfec501fcb6571b9a7c0522edf85241b>@@QBEP6GKPAX@ZXZ PROC ; <lambda_cfec501fcb6571b9a7c0522edf85241b>::operator unsigned long (__stdcall*)(void *), COMDAT
; _this$ = ecx

; 1542 :                                  }, nullptr, 0x00, nullptr);

	mov	eax, OFFSET ?<lambda_invoker_stdcall>@<lambda_cfec501fcb6571b9a7c0522edf85241b>@@CGKPAX@Z ; <lambda_cfec501fcb6571b9a7c0522edf85241b>::<lambda_invoker_stdcall>
	ret	0
??B<lambda_cfec501fcb6571b9a7c0522edf85241b>@@QBEP6GKPAX@ZXZ ENDP ; <lambda_cfec501fcb6571b9a7c0522edf85241b>::operator unsigned long (__stdcall*)(void *)
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?<lambda_invoker_stdcall>@<lambda_cfec501fcb6571b9a7c0522edf85241b>@@CGKPAX@Z
_TEXT	SEGMENT
___p1$ = 8						; size = 4
?<lambda_invoker_stdcall>@<lambda_cfec501fcb6571b9a7c0522edf85241b>@@CGKPAX@Z PROC ; <lambda_cfec501fcb6571b9a7c0522edf85241b>::<lambda_invoker_stdcall>, COMDAT

; 1536 :                                    SK_Steam_LoadOverlayEarly ();

	call	?SK_Steam_LoadOverlayEarly@@YA_NXZ	; SK_Steam_LoadOverlayEarly

; 1537 :                                    SK_Input_Init             ();

	call	?SK_Input_Init@@YAXXZ			; SK_Input_Init

; 1538 : 
; 1539 :                                    CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4

; 1542 :                                  }, nullptr, 0x00, nullptr);

	xor	eax, eax
	ret	4
?<lambda_invoker_stdcall>@<lambda_cfec501fcb6571b9a7c0522edf85241b>@@CGKPAX@Z ENDP ; <lambda_cfec501fcb6571b9a7c0522edf85241b>::<lambda_invoker_stdcall>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ??R<lambda_cfec501fcb6571b9a7c0522edf85241b>@@QBEKPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??R<lambda_cfec501fcb6571b9a7c0522edf85241b>@@QBEKPAX@Z PROC ; <lambda_cfec501fcb6571b9a7c0522edf85241b>::operator(), COMDAT
; _this$ = ecx

; 1536 :                                    SK_Steam_LoadOverlayEarly ();

	call	?SK_Steam_LoadOverlayEarly@@YA_NXZ	; SK_Steam_LoadOverlayEarly

; 1537 :                                    SK_Input_Init             ();

	call	?SK_Input_Init@@YAXXZ			; SK_Input_Init

; 1538 : 
; 1539 :                                    CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4

; 1540 : 
; 1541 :                                    return 0;

	xor	eax, eax

; 1542 :                                  }, nullptr, 0x00, nullptr);

	ret	4
??R<lambda_cfec501fcb6571b9a7c0522edf85241b>@@QBEKPAX@Z ENDP ; <lambda_cfec501fcb6571b9a7c0522edf85241b>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??1?$pair@V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@H@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@H@std@@QAE@XZ PROC ; std::pair<std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >,int>::~pair<std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >,int>, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx

; 1244 : 		_Tidy();

	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi
	ret	0
??1?$pair@V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@H@std@@QAE@XZ ENDP ; std::pair<std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >,int>::~pair<std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z PROC ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3766 : 	{	// return string + string

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 3767 : 	if (_Right.size() <= _Left.capacity() - _Left.size()
; 3768 : 		|| _Right.capacity() - _Right.size() < _Left.size())

	mov	edx, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR $T1[ebp], 0
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR [edx+16]
	cmp	DWORD PTR [ecx+16], eax
	jbe	SHORT $LN4@operator
	mov	eax, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR [edx+16]
	jb	SHORT $LN4@operator

; 2457 : 		return (insert(_Off, _Right, 0, npos));

	push	-1
	push	0
	push	edx
	push	0
	call	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert

; 3770 : 	else
; 3771 : 		return (_STD move(_Right.insert(0, _Left)));

	jmp	SHORT $LN206@operator
$LN4@operator:

; 2284 : 		return (append(_Right, 0, npos));

	push	-1
	push	0
	push	ecx
	mov	ecx, edx
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
$LN206@operator:

; 1595 : 		_Mysize(0),

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [eax], dx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3769 : 		return (_STD move(_Left.append(_Right)));

	mov	eax, ecx

; 3772 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ENDP ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
?SK_ReenterCore@@YGXXZ PROC				; SK_ReenterCore

; 1328 :   auto* params =
; 1329 :     static_cast <init_params_t *> (&reentrant_core);
; 1330 : 
; 1331 :   SK_StartupCore (params->backend, params->callback);

	push	DWORD PTR ?reentrant_core@@3Uinit_params_t@@A+4
	push	DWORD PTR ?reentrant_core@@3Uinit_params_t@@A
	call	?SK_StartupCore@@YG_NPB_WPAX@Z		; SK_StartupCore

; 1332 : }

	ret	0
?SK_ReenterCore@@YGXXZ ENDP				; SK_ReenterCore
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_wszConfigPath$ = -584					; size = 522
$T2 = -60						; size = 24
$T3 = -36						; size = 24
__$EHRec$ = -12						; size = 12
?SK_EstablishRootPath@@YGXXZ PROC			; SK_EstablishRootPath

; 1270 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SK_EstablishRootPath@@YGXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 572				; 0000023cH
	push	esi

; 1271 :   wchar_t wszConfigPath [MAX_PATH + 1] = { };

	push	522					; 0000020aH
	lea	eax, DWORD PTR _wszConfigPath$[ebp]
	push	0
	push	eax
	call	_memset

; 1272 :           wszConfigPath [  MAX_PATH  ] = { };

	xor	eax, eax
	add	esp, 12					; 0000000cH
	mov	WORD PTR _wszConfigPath$[ebp+520], ax

; 1273 : 
; 1274 :   // Store config profiles in a centralized location rather than relative to the game's executable
; 1275 :   //
; 1276 :   //   Currently, this location is always Documents\My Mods\SpecialK\
; 1277 :   //
; 1278 :   if (config.system.central_repository)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+844, al
	je	$LN2@SK_Establi

; 1279 :   {
; 1280 :     if (! SK_IsSuperSpecialK ())

	call	?SK_IsSuperSpecialK@@YA_NXZ		; SK_IsSuperSpecialK
	test	al, al
	jne	$LN4@SK_Establi

; 1282 :       wcsncpy ( SK_RootPath,

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?SK_GetDocumentsDir@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_GetDocumentsDir
	push	OFFSET $SG428417
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN24@SK_Establi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN24@SK_Establi:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1282 :       wcsncpy ( SK_RootPath,

	push	259					; 00000103H
	push	eax
	push	OFFSET ?SK_RootPath@@3PA_WA		; SK_RootPath
	call	DWORD PTR __imp__wcsncpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T3[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1282 :       wcsncpy ( SK_RootPath,

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN34@SK_Establi

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T3[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN34@SK_Establi:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T3[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T3[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T3[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1282 :       wcsncpy ( SK_RootPath,

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN64@SK_Establi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN64@SK_Establi:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T2[ebp+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T2[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T2[ebp], ax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1287 :     else

	jmp	SHORT $LN5@SK_Establi
$LN4@SK_Establi:

; 1288 :     {
; 1289 :       GetCurrentDirectory (MAX_PATH, SK_RootPath);

	push	OFFSET ?SK_RootPath@@3PA_WA		; SK_RootPath
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8
$LN5@SK_Establi:

; 1290 :     }
; 1291 : 
; 1292 :     lstrcatW (wszConfigPath, SK_GetRootPath ());

	call	?SK_GetRootPath@@YGPB_WXZ		; SK_GetRootPath
	mov	esi, DWORD PTR __imp__lstrcatW@8
	push	eax
	lea	eax, DWORD PTR _wszConfigPath$[ebp]
	push	eax
	call	esi

; 1293 :     lstrcatW (wszConfigPath, L"\\Profiles\\");

	push	OFFSET $SG428418
	lea	eax, DWORD PTR _wszConfigPath$[ebp]
	push	eax
	call	esi

; 1294 :     lstrcatW (wszConfigPath, SK_GetHostApp  ());

	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp

; 1295 :   }
; 1296 : 
; 1297 : 
; 1298 :   // Relative to game's executable path
; 1299 :   //
; 1300 :   else

	jmp	SHORT $LN91@SK_Establi
$LN2@SK_Establi:

; 1301 :   {
; 1302 :     if (! SK_IsSuperSpecialK ())

	call	?SK_IsSuperSpecialK@@YA_NXZ		; SK_IsSuperSpecialK
	mov	esi, DWORD PTR __imp__lstrcatW@8
	test	al, al
	jne	SHORT $LN6@SK_Establi

; 1303 :     {
; 1304 :       lstrcatW (SK_RootPath, SK_GetHostPath ());

	call	?SK_GetHostPath@@YAPB_WXZ		; SK_GetHostPath
	push	eax
	push	OFFSET ?SK_RootPath@@3PA_WA		; SK_RootPath
	call	esi

; 1305 :     }
; 1306 : 
; 1307 :     else

	jmp	SHORT $LN7@SK_Establi
$LN6@SK_Establi:

; 1308 :     {
; 1309 :       GetCurrentDirectory (MAX_PATH, SK_RootPath);

	push	OFFSET ?SK_RootPath@@3PA_WA		; SK_RootPath
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8
$LN7@SK_Establi:

; 1310 :     }
; 1311 : 
; 1312 :     lstrcatW (wszConfigPath, SK_GetRootPath ());

	call	?SK_GetRootPath@@YGPB_WXZ		; SK_GetRootPath
$LN91@SK_Establi:
	push	eax
	lea	eax, DWORD PTR _wszConfigPath$[ebp]
	push	eax
	call	esi

; 1313 :   }
; 1314 : 
; 1315 : 
; 1316 :   // Not using the ShellW API because at this stage we can only reliably use Kernel32 functions
; 1317 :   lstrcatW (SK_RootPath,   L"\\");

	push	OFFSET $SG428421
	push	OFFSET ?SK_RootPath@@3PA_WA		; SK_RootPath
	call	esi

; 1318 :   lstrcatW (wszConfigPath, L"\\");

	push	OFFSET $SG428422
	lea	eax, DWORD PTR _wszConfigPath$[ebp]
	push	eax
	call	esi

; 1319 : 
; 1320 : 
; 1321 :   SK_SetConfigPath     (wszConfigPath);

	lea	eax, DWORD PTR _wszConfigPath$[ebp]
	push	eax
	call	?SK_SetConfigPath@@YGXPB_W@Z		; SK_SetConfigPath

; 1322 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_EstablishRootPath@@YGXXZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?SK_EstablishRootPath@@YGXXZ:
	mov	eax, OFFSET __ehfuncinfo$?SK_EstablishRootPath@@YGXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_EstablishRootPath@@YGXXZ ENDP			; SK_EstablishRootPath
; Function compile flags: /Ogtp
;	COMDAT ??0sk_user_profile_s@@QAE@XZ
_TEXT	SEGMENT
??0sk_user_profile_s@@QAE@XZ PROC			; sk_user_profile_s::sk_user_profile_s, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	push	2080					; 00000820H
	mov	esi, ecx
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, esi
	pop	esi
	ret	0
??0sk_user_profile_s@@QAE@XZ ENDP			; sk_user_profile_s::sk_user_profile_s
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z PROC ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3802 : 	{	// return string + NTCTS

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, edx
	push	esi
	mov	DWORD PTR $T1[ebp], 0
	lea	esi, DWORD PTR [eax+2]
$LL71@operator:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL71@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, DWORD PTR __Left$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sub	eax, esi
	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 1595 : 		_Mysize(0),

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edx, edx
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [eax], dx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3803 : 	return (_STD move(_Left.append(_Right)));

	mov	eax, ecx

; 3804 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ENDP ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z PROC ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3718 : 	{	// return string + NTCTS

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	mov	DWORD PTR $T2[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	push	ebx
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edi], ax

; 289  : 		return (_CSTD wcslen(_First));

	mov	ebx, DWORD PTR __Right$[ebp]
	mov	ecx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3723 : 	return (_Ans);

	mov	DWORD PTR __$EHRec$[ebp+8], eax
	mov	DWORD PTR $T2[ebp], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edx, DWORD PTR [ecx+2]
	npad	4
$LL85@operator:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL85@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3720 : 	_Ans.reserve(_Left.size() + _Traits::length(_Right));

	mov	eax, DWORD PTR __Left$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sub	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3059 : 		if (_My_data._Mysize > _Newcap)

	mov	edx, DWORD PTR [edi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3720 : 	_Ans.reserve(_Left.size() + _Traits::length(_Right));

	mov	eax, DWORD PTR [eax+16]
	add	eax, ecx

; 3059 : 		if (_My_data._Mysize > _Newcap)

	cmp	edx, eax
	ja	SHORT $LN44@operator

; 3060 : 			{	// requested capacity is not large enough for current size, ignore
; 3061 : 			return;	// nothing to do
; 3062 : 			}
; 3063 : 
; 3064 : 		if (_My_data._Myres == _Newcap)

	mov	ecx, DWORD PTR [edi+20]
	cmp	ecx, eax
	je	SHORT $LN44@operator

; 3065 : 			{	// we're already at the requested capacity
; 3066 : 			return;	// nothing to do
; 3067 : 			}
; 3068 : 
; 3069 : 		if (_My_data._Myres < _Newcap)

	jae	SHORT $LN43@operator

; 3070 : 			{	// reallocate to grow
; 3071 : 			_Copy(_Newcap);

	push	eax
	mov	ecx, edi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy

; 3072 : 			return;

	jmp	SHORT $LN44@operator
$LN43@operator:

; 3073 : 			}
; 3074 : 
; 3075 : 		if (this->_BUF_SIZE > _Newcap && _My_data._Large_string_engaged())

	cmp	eax, 8
	jae	SHORT $LN44@operator

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 3075 : 		if (this->_BUF_SIZE > _Newcap && _My_data._Large_string_engaged())

	jb	SHORT $LN44@operator
	push	esi

; 3076 : 			{	// deallocate everything; switch back to "small" mode
; 3077 : 			this->_Orphan_all();
; 3078 : 			pointer _Ptr = _My_data._Bx._Ptr;

	mov	esi, DWORD PTR [edi]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [edx*2+2]
	push	eax
	push	esi
	push	edi
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3082 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	mov	eax, DWORD PTR [edi+20]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3082 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	esi
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3083 : 			_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edi+20], 7
	pop	esi
$LN44@operator:

; 2284 : 		return (append(_Right, 0, npos));

	push	-1
	push	0
	push	DWORD PTR __Left$[ebp]
	mov	ecx, edi
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+2]
	npad	8
$LL86@operator:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL86@operator
	sub	ecx, edx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	ebx
	mov	ecx, edi
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 3724 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@operator
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@operator:
	ret	0
__ehhandler$??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z:
	mov	eax, OFFSET __ehfuncinfo$??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z ENDP ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_user$ = 8						; size = 4
?DllThread@@YGKPAX@Z PROC				; DllThread

; 1218 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1219 :   auto* params =
; 1220 :     static_cast <init_params_t *> (user);
; 1221 :   
; 1222 :   reentrant_core = *params;

	mov	ecx, DWORD PTR _user$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR ?reentrant_core@@3Uinit_params_t@@A, eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR ?reentrant_core@@3Uinit_params_t@@A+4, eax

; 1223 : 
; 1224 :   SK_InitCore (params->backend, params->callback);

	push	DWORD PTR [ecx+4]
	push	DWORD PTR [ecx]
	call	?SK_InitCore@@YGXPB_WPAX@Z		; SK_InitCore

; 1225 : 
; 1226 :   return 0;

	xor	eax, eax

; 1227 : }

	pop	ebp
	ret	4
?DllThread@@YGKPAX@Z ENDP				; DllThread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
$T2 = -100						; size = 84
_this$ = -16						; size = 4
$T3 = -16						; size = 4
$T4 = -16						; size = 4
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?SK_InitFinishCallback@@YGXXZ PROC			; SK_InitFinishCallback

; 1072 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?SK_InitFinishCallback@@YGXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 1073 :   bool rundll_invoked =
; 1074 :     (StrStrIW (SK_GetHostApp (), L"Rundll32") != nullptr);

	push	OFFSET $SG428296
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	DWORD PTR __imp__StrStrIW@8
	test	eax, eax
	setne	al

; 1075 : 
; 1076 :   if (rundll_invoked || SK_IsSuperSpecialK ())

	test	al, al
	jne	$LN3@SK_InitFin
	call	?SK_IsSuperSpecialK@@YA_NXZ		; SK_IsSuperSpecialK
	test	al, al
	jne	$LN3@SK_InitFin

; 1077 :   {
; 1078 :     init_mutex->unlock ();
; 1079 :     return;
; 1080 :   }
; 1081 : 
; 1082 :   SK_Input_Init       ();

	call	?SK_Input_Init@@YAXXZ			; SK_Input_Init

; 1083 :   SK_ApplyQueuedHooks ();

	call	?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ ; SK_ApplyQueuedHooks

; 1084 : 
; 1085 :   SK_DeleteTemporaryFiles ();

	push	OFFSET $SG428299
	call	?SK_GetHostPath@@YAPB_WXZ		; SK_GetHostPath
	push	eax
	call	?SK_DeleteTemporaryFiles@@YAIPB_W0@Z	; SK_DeleteTemporaryFiles

; 1086 :   SK_DeleteTemporaryFiles (L"Version", L"*.old");

	push	OFFSET $SG428300
	push	OFFSET $SG428301
	call	?SK_DeleteTemporaryFiles@@YAIPB_W0@Z	; SK_DeleteTemporaryFiles

; 1087 : 
; 1088 :   SK::Framerate::Init ();

	call	?Init@Framerate@SK@@YAXXZ		; SK::Framerate::Init

; 1089 : 
; 1090 :   dll_log.Log (L"[ SpecialK ] === Initialization Finished! ===");

	push	OFFSET $SG428302
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 1091 : 
; 1092 :   extern int32_t SK_D3D11_amount_to_purge;
; 1093 :   SK_GetCommandProcessor ()->AddVariable (

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 28					; 0000001cH
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN12@SK_InitFin
	push	0
	push	OFFSET ?SK_D3D11_amount_to_purge@@3HA	; SK_D3D11_amount_to_purge
	mov	ecx, eax
	call	??0?$SK_IVarStub@H@@QAE@PAHPAUSK_IVariableListener@@@Z ; SK_IVarStub<int>::SK_IVarStub<int>
	mov	esi, eax
	jmp	SHORT $LN13@SK_InitFin
$LN12@SK_InitFin:
	xor	esi, esi
$LN13@SK_InitFin:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	push	esi
	push	OFFSET $SG428304
	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+20]

; 1094 :     "VRAM.Purge",
; 1095 :       new SK_IVarStub <int32_t> (
; 1096 :         (int32_t *)&SK_D3D11_amount_to_purge
; 1097 :       )
; 1098 :   );
; 1099 : 
; 1100 :   SK_GetCommandProcessor ()->AddVariable (

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	eax, eax
	je	SHORT $LN14@SK_InitFin
	push	0
	push	OFFSET ?config@@3Usk_config_t@@A+124
	mov	ecx, eax
	call	??0?$SK_IVarStub@M@@QAE@PAMPAUSK_IVariableListener@@@Z ; SK_IVarStub<float>::SK_IVarStub<float>
	mov	esi, eax
	jmp	SHORT $LN15@SK_InitFin
$LN14@SK_InitFin:
	xor	esi, esi
$LN15@SK_InitFin:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	push	esi
	push	OFFSET $SG428306
	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+20]

; 1101 :     "GPU.StatPollFreq",
; 1102 :       new SK_IVarStub <float> (
; 1103 :         &config.gpu.interval
; 1104 :       )
; 1105 :   );
; 1106 : 
; 1107 :   SK_GetCommandProcessor ()->AddVariable (

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	test	eax, eax
	je	SHORT $LN16@SK_InitFin
	push	0
	push	OFFSET ?config@@3Usk_config_t@@A+164
	mov	ecx, eax
	call	??0?$SK_IVarStub@M@@QAE@PAMPAUSK_IVariableListener@@@Z ; SK_IVarStub<float>::SK_IVarStub<float>
	mov	esi, eax
	jmp	SHORT $LN17@SK_InitFin
$LN16@SK_InitFin:
	xor	esi, esi
$LN17@SK_InitFin:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	push	esi
	push	OFFSET $SG428308
	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+20]

; 1108 :     "ImGui.FontScale",
; 1109 :       new SK_IVarStub <float> (
; 1110 :         &config.imgui.scale
; 1111 :       )
; 1112 :   );
; 1113 : 
; 1114 :   SK_InitRenderBackends ();

	call	?SK_InitRenderBackends@@YGXXZ		; SK_InitRenderBackends

; 1115 : 
; 1116 :   SK_GetCommandProcessor ()->AddCommand ("mem",       new skMemCmd    ());

	push	4
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN18@SK_InitFin
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi], OFFSET ??_7skMemCmd@@6B@
	jmp	SHORT $LN19@SK_InitFin
$LN18@SK_InitFin:
	xor	esi, esi
$LN19@SK_InitFin:
	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	push	esi
	push	OFFSET $SG428309
	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+8]

; 1117 :   SK_GetCommandProcessor ()->AddCommand ("GetUpdate", new skUpdateCmd ());

	push	4
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN20@SK_InitFin
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi], OFFSET ??_7skUpdateCmd@@6B@
	jmp	SHORT $LN21@SK_InitFin
$LN20@SK_InitFin:
	xor	esi, esi
$LN21@SK_InitFin:
	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	push	esi
	push	OFFSET $SG428310
	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+8]

; 1118 : 
; 1119 :   //
; 1120 :   // Game-Specific Stuff that I am not proud of
; 1121 :   //
; 1122 : #ifdef _WIN64
; 1123 :   if (! lstrcmpW (SK_GetHostApp (), L"DarkSoulsIII.exe"))
; 1124 :     SK_DS3_InitPlugin ();
; 1125 : #endif
; 1126 : 
; 1127 :   if (lstrcmpW (SK_GetHostApp (), L"Tales of Zestiria.exe"))

	push	OFFSET $SG428312
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	DWORD PTR __imp__lstrcmpW@8
	test	eax, eax
	je	SHORT $LN4@SK_InitFin

; 1128 :   {
; 1129 :     SK_GetCommandProcessor ()->ProcessCommandFormatted (

	call	?SK_GetCommandProcessor@@YGPAUSK_ICommandProcessor@@XZ ; SK_GetCommandProcessor
	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+396
	lea	edx, DWORD PTR $T2[ebp]
	cvtps2pd xmm0, xmm0
	sub	esp, 8
	mov	ecx, DWORD PTR [eax]
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG428313
	push	edx
	push	eax
	call	DWORD PTR [ecx+32]
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1SK_ICommandResult@@QAE@XZ
$LN4@SK_InitFin:

; 1130 :       "TargetFPS %f",
; 1131 :         config.render.framerate.target_fps
; 1132 :     );
; 1133 :   }
; 1134 : 
; 1135 :   // Get rid of the game output log if the user doesn't want it...
; 1136 :   if (! config.system.game_output)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+843, 0
	jne	SHORT $LN5@SK_InitFin

; 1137 :   {
; 1138 :     game_debug.close ();

	push	OFFSET ?game_debug@@3UiSK_Logger@@A	; game_debug
	call	?close@iSK_Logger@@UAGXXZ		; iSK_Logger::close

; 1139 :     game_debug.silent = true;

	mov	BYTE PTR ?game_debug@@3UiSK_Logger@@A+32, 1
$LN5@SK_InitFin:

; 1140 :   }
; 1141 : 
; 1142 :   const wchar_t* config_name =
; 1143 :     init_.backend;

	mov	esi, DWORD PTR ?init_@@3Uinit_params_t@@A

; 1144 : 
; 1145 :   // Use a generic "SpecialK" name instead of the primary wrapped/hooked API name
; 1146 :   //   for this DLL when it is injected at run-time rather than a proxy DLL.
; 1147 :   if (SK_IsInjected ())

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	mov	edx, OFFSET $SG428316

; 1150 :   SK_SaveConfig (config_name);

	push	0
	cmove	edx, esi
	sub	esp, 24					; 00000018H
	mov	esi, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edx

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [ecx+2]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
$LL71@SK_InitFin:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL71@SK_InitFin
	sub	ecx, edi
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1150 :   SK_SaveConfig (config_name);

	call	?SK_SaveConfig@@YAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@Z ; SK_SaveConfig
	add	esp, 28					; 0000001cH

; 1151 : 
; 1152 :   SK_Console::getInstance ()->Start ();

	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance
	mov	ecx, eax
	call	?Start@SK_Console@@QAEXXZ		; SK_Console::Start

; 1153 : 
; 1154 :     // Create a thread that pumps the OSD
; 1155 :   if (config.osd.pump || SK_UsingVulkan ())

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+49, 0
	jne	SHORT $LN8@SK_InitFin
	call	?SK_UsingVulkan@@YAHXZ			; SK_UsingVulkan
	test	eax, eax
	je	$LN10@SK_InitFin
$LN8@SK_InitFin:

; 1156 :   {
; 1157 :     osd_shutdown =

	push	OFFSET $SG428319
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateEventW@16

; 1158 :       CreateEvent (nullptr, FALSE, FALSE, L"OSD Pump Shutdown");
; 1159 : 
; 1160 :     dll_log.LogEx (true, L"[ Stat OSD ] Spawning Pump Thread...      ");

	push	OFFSET $SG428320
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	mov	DWORD PTR ?osd_shutdown@@3PAXA, eax	; osd_shutdown
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 1161 :     hPumpThread =

	push	0
	push	0
	push	0
	push	OFFSET ?osd_pump@@YGKPAX@Z		; osd_pump
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
	mov	DWORD PTR ?hPumpThread@@3PAXA, eax	; hPumpThread

; 1162 :         CreateThread ( nullptr,
; 1163 :                          0,
; 1164 :                            osd_pump,
; 1165 :                              nullptr,
; 1166 :                                0,
; 1167 :                                  nullptr );
; 1168 : 
; 1169 :     if (hPumpThread != INVALID_HANDLE_VALUE)

	cmp	eax, -1
	je	SHORT $LN9@SK_InitFin

; 1170 :       dll_log.LogEx ( false, L"tid=0x%04x, interval=%04.01f ms\n",

	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+52
	sub	esp, 8
	mulss	xmm0, DWORD PTR __real@447a0000
	cvtps2pd xmm0, xmm0
	movsd	QWORD PTR [esp], xmm0
	push	eax
	call	DWORD PTR __imp__GetThreadId@4
	push	eax
	push	OFFSET $SG428323
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 24					; 00000018H

; 1171 :                         GetThreadId (hPumpThread),
; 1172 :                           config.osd.pump_interval * 1000.0f );
; 1173 :     else

	jmp	SHORT $LN10@SK_InitFin
$LN9@SK_InitFin:

; 1174 :       dll_log.LogEx (false, L"failed!\n");

	push	OFFSET $SG428324
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH
$LN10@SK_InitFin:

; 1175 :   }
; 1176 : 
; 1177 :   SK_StartPerfMonThreads ();

	call	?SK_StartPerfMonThreads@@YGXXZ		; SK_StartPerfMonThreads
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h

; 274  :     LeaveCriticalSection (cs_);

	mov	eax, DWORD PTR ?init_mutex@@3PAVSK_Thread_HybridSpinlock@@A ; init_mutex
	push	DWORD PTR [eax]
	call	DWORD PTR __imp__LeaveCriticalSection@4
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1181 :   SK_ResumeThreads    (init_tids);

	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	call	??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
	call	?SK_ResumeThreads@@YAXV?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@@Z ; SK_ResumeThreads
	add	esp, 20					; 00000014H

; 1182 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@SK_InitFin:
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h

; 274  :     LeaveCriticalSection (cs_);

	mov	eax, DWORD PTR ?init_mutex@@3PAVSK_Thread_HybridSpinlock@@A ; init_mutex
	push	DWORD PTR [eax]
	call	DWORD PTR __imp__LeaveCriticalSection@4
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1182 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_InitFinishCallback@@YGXXZ$0:
	push	20					; 00000014H
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?SK_InitFinishCallback@@YGXXZ$1:
	push	20					; 00000014H
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?SK_InitFinishCallback@@YGXXZ$2:
	push	20					; 00000014H
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?SK_InitFinishCallback@@YGXXZ:
	mov	eax, OFFSET __ehfuncinfo$?SK_InitFinishCallback@@YGXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_InitFinishCallback@@YGXXZ ENDP			; SK_InitFinishCallback
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_user$ = 8						; size = 4
?CheckVersionThread@@YGKPAX@Z PROC			; CheckVersionThread

; 1188 :   UNREFERENCED_PARAMETER (user);
; 1189 : 
; 1190 :   // If a local repository is present, use that.
; 1191 :   if (GetFileAttributes (L"Version\\installed.ini") == INVALID_FILE_ATTRIBUTES)

	push	OFFSET $SG428336
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	eax, -1
	jne	SHORT $LN4@CheckVersi

; 1192 :   {
; 1193 :     if (SK_FetchVersionInfo (L"SpecialK"))

	push	OFFSET $SG428338
	call	?SK_FetchVersionInfo@@YG_NPB_W@Z	; SK_FetchVersionInfo
	test	al, al
	je	SHORT $LN4@CheckVersi

; 1194 :     {
; 1195 :       // ↑ Check, but ↓ don't update unless running the global injector version
; 1196 :       if ( (SK_IsInjected () && (! SK_IsSuperSpecialK ())) )

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	je	SHORT $LN4@CheckVersi
	call	?SK_IsSuperSpecialK@@YA_NXZ		; SK_IsSuperSpecialK
	test	al, al
	jne	SHORT $LN4@CheckVersi

; 1197 :       {
; 1198 :         InterlockedIncrement (&SK_bypass_dialog_active);

	lock	 inc	 DWORD PTR ?SK_bypass_dialog_active@@3JC

; 1199 :         InterlockedExchange  (&SK_bypass_dialog_tid, GetCurrentThreadId ());

	call	DWORD PTR __imp__GetCurrentThreadId@0
	mov	ecx, OFFSET ?SK_bypass_dialog_tid@@3JC	; SK_bypass_dialog_tid
	xchg	DWORD PTR [ecx], eax

; 1200 : 
; 1201 :         SK_UpdateSoftware (L"SpecialK");

	push	OFFSET $SG428340
	call	?SK_UpdateSoftware@@YGJPB_W@Z		; SK_UpdateSoftware

; 1202 : 
; 1203 :         InterlockedDecrement (&SK_bypass_dialog_active);

	lock	 dec	 DWORD PTR ?SK_bypass_dialog_active@@3JC
$LN4@CheckVersi:

; 1204 :       }
; 1205 :     }
; 1206 :   }
; 1207 : 
; 1208 :   CloseHandle (GetCurrentThread ());

	call	DWORD PTR __imp__GetCurrentThread@0
	push	eax
	call	DWORD PTR __imp__CloseHandle@4

; 1209 : 
; 1210 :   return 0;

	xor	eax, eax

; 1211 : }

	ret	4
?CheckVersionThread@@YGKPAX@Z ENDP			; CheckVersionThread
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0skUpdateCmd@@QAE@XZ
_TEXT	SEGMENT
??0skUpdateCmd@@QAE@XZ PROC				; skUpdateCmd::skUpdateCmd, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7skUpdateCmd@@6B@
	mov	eax, ecx
	ret	0
??0skUpdateCmd@@QAE@XZ ENDP				; skUpdateCmd::skUpdateCmd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?getNumRequiredArgs@skUpdateCmd@@UAEHXZ
_TEXT	SEGMENT
?getNumRequiredArgs@skUpdateCmd@@UAEHXZ PROC		; skUpdateCmd::getNumRequiredArgs, COMDAT
; _this$ = ecx

; 601  :   virtual int getNumRequiredArgs (void) override {

	npad	2
	push	esi
	push	edi
	mov	edi, ecx

; 602  :     return getNumArgs () - getNumOptionalArgs ();

	mov	eax, DWORD PTR [edi]
	call	DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edi]
	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR [edx+8]
	pop	edi
	sub	eax, esi
	pop	esi

; 603  :   }

	ret	0
?getNumRequiredArgs@skUpdateCmd@@UAEHXZ ENDP		; skUpdateCmd::getNumRequiredArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?getNumOptionalArgs@skUpdateCmd@@UAEHXZ
_TEXT	SEGMENT
?getNumOptionalArgs@skUpdateCmd@@UAEHXZ PROC		; skUpdateCmd::getNumOptionalArgs, COMDAT
; _this$ = ecx

; 600  :   virtual int getNumOptionalArgs (void) override { return 1; }

	mov	eax, 1
	ret	0
?getNumOptionalArgs@skUpdateCmd@@UAEHXZ ENDP		; skUpdateCmd::getNumOptionalArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?getNumArgs@skUpdateCmd@@UAEHXZ
_TEXT	SEGMENT
?getNumArgs@skUpdateCmd@@UAEHXZ PROC			; skUpdateCmd::getNumArgs, COMDAT
; _this$ = ecx

; 599  :   virtual int getNumArgs         (void) override { return 1; }

	mov	eax, 1
	ret	0
?getNumArgs@skUpdateCmd@@UAEHXZ ENDP			; skUpdateCmd::getNumArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_wszProduct$1 = -260					; size = 256
$T2 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
tv66 = 12						; size = 4
_szArgs$ = 12						; size = 4
?execute@skUpdateCmd@@UAE?AUSK_ICommandResult@@PBD@Z PROC ; skUpdateCmd::execute
; _this$ = ecx

; 612  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	esi

; 613  :   if (! strlen (szArgs))

	mov	esi, DWORD PTR _szArgs$[ebp]
	mov	ecx, esi
	mov	DWORD PTR $T2[ebp], 0
	lea	edx, DWORD PTR [ecx+1]
	npad	5
$LL7@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL7@execute
	sub	ecx, edx
	jne	SHORT $LN2@execute

; 614  :   {
; 615  :     SK_FetchVersionInfo1 (L"SpecialK", true);

	push	1
	push	OFFSET $SG427973
	call	?SK_FetchVersionInfo1@@YG_NPB_W_N@Z	; SK_FetchVersionInfo1

; 616  :     SK_UpdateSoftware1   (L"SpecialK", true);

	push	1
	push	OFFSET $SG427974

; 617  :   }
; 618  : 
; 619  :   else

	jmp	SHORT $LN9@execute
$LN2@execute:

; 620  :   {
; 621  :     wchar_t wszProduct [128] = { };

	push	256					; 00000100H
	lea	eax, DWORD PTR _wszProduct$1[ebp]
	push	0
	push	eax
	call	_memset

; 622  : 
; 623  :     mbtowc (wszProduct, szArgs, strlen (szArgs));

	mov	ecx, esi
	add	esp, 12					; 0000000cH
	lea	edx, DWORD PTR [ecx+1]
	npad	5
$LL8@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL8@execute
	sub	ecx, edx
	lea	eax, DWORD PTR _wszProduct$1[ebp]
	push	ecx
	push	esi
	push	eax
	call	DWORD PTR __imp__mbtowc
	add	esp, 12					; 0000000cH

; 624  : 
; 625  :     SK_FetchVersionInfo1 (wszProduct, true);

	lea	eax, DWORD PTR _wszProduct$1[ebp]
	push	1
	push	eax
	call	?SK_FetchVersionInfo1@@YG_NPB_W_N@Z	; SK_FetchVersionInfo1

; 626  :     SK_UpdateSoftware1   (wszProduct, true);

	push	1
	lea	eax, DWORD PTR _wszProduct$1[ebp]
	push	eax
$LN9@execute:
	call	?SK_UpdateSoftware1@@YGJPB_W_N@Z	; SK_UpdateSoftware1

; 627  :   }
; 628  : 
; 629  :   return SK_ICommandResult ("Manual update initiated...", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	0
	push	0
	push	0
	push	OFFSET $SG427975
	push	esi
	push	OFFSET $SG427976
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi

; 630  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?execute@skUpdateCmd@@UAE?AUSK_ICommandResult@@PBD@Z ENDP ; skUpdateCmd::execute
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0skMemCmd@@QAE@XZ
_TEXT	SEGMENT
??0skMemCmd@@QAE@XZ PROC				; skMemCmd::skMemCmd, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7skMemCmd@@6B@
	mov	eax, ecx
	ret	0
??0skMemCmd@@QAE@XZ ENDP				; skMemCmd::skMemCmd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?getNumRequiredArgs@skMemCmd@@UAEHXZ
_TEXT	SEGMENT
?getNumRequiredArgs@skMemCmd@@UAEHXZ PROC		; skMemCmd::getNumRequiredArgs, COMDAT
; _this$ = ecx

; 587  :   virtual int getNumRequiredArgs (void) override {

	npad	2
	push	esi
	push	edi
	mov	edi, ecx

; 588  :     return getNumArgs () - getNumOptionalArgs ();

	mov	eax, DWORD PTR [edi]
	call	DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edi]
	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR [edx+8]
	pop	edi
	sub	eax, esi
	pop	esi

; 589  :   }

	ret	0
?getNumRequiredArgs@skMemCmd@@UAEHXZ ENDP		; skMemCmd::getNumRequiredArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?getNumOptionalArgs@skMemCmd@@UAEHXZ
_TEXT	SEGMENT
?getNumOptionalArgs@skMemCmd@@UAEHXZ PROC		; skMemCmd::getNumOptionalArgs, COMDAT
; _this$ = ecx

; 586  :   virtual int getNumOptionalArgs (void) override { return 1; }

	mov	eax, 1
	ret	0
?getNumOptionalArgs@skMemCmd@@UAEHXZ ENDP		; skMemCmd::getNumOptionalArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?getNumArgs@skMemCmd@@UAEHXZ
_TEXT	SEGMENT
?getNumArgs@skMemCmd@@UAEHXZ PROC			; skMemCmd::getNumArgs, COMDAT
; _this$ = ecx

; 585  :   virtual int getNumArgs         (void) override { return 2; }

	mov	eax, 2
	ret	0
?getNumArgs@skMemCmd@@UAEHXZ ENDP			; skMemCmd::getNumArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_result$ = -816						; size = 512
_val$ = -304						; size = 256
_basic_mem_info$1 = -48					; size = 28
$T2 = -20						; size = 4
_out$3 = -16						; size = 8
_out$4 = -16						; size = 8
tv358 = -12						; size = 4
_out$5 = -12						; size = 4
_out$6 = -12						; size = 4
_out$7 = -12						; size = 2
_out$8 = -9						; size = 1
_dwOld$9 = -8						; size = 4
_dwOld$10 = -8						; size = 4
_dwOld$11 = -8						; size = 4
_dwOld$12 = -8						; size = 4
_dwOld$13 = -8						; size = 4
_dwOld$14 = -8						; size = 4
_dwOld$15 = -8						; size = 4
_addr$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_szArgs$ = 12						; size = 4
_type$ = 15						; size = 1
?execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z PROC	; skMemCmd::execute
; _this$ = ecx

; 634  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 816				; 00000330H
	push	esi
	push	edi

; 635  :   if (szArgs == nullptr)

	mov	edi, DWORD PTR _szArgs$[ebp]
	mov	DWORD PTR $T2[ebp], 0
	test	edi, edi
	jne	SHORT $LN4@execute

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi
	push	edi
	push	edi
	push	OFFSET $SG428047
	push	edi
	push	OFFSET $SG428048
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN4@execute:

; 636  :     return SK_ICommandResult ("mem", szArgs);
; 637  : 
; 638  :   uintptr_t addr      =  0;
; 639  :   char      type      =  0;
; 640  :   char      val [256] = { };

	push	256					; 00000100H
	lea	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _addr$[ebp], 0
	push	0
	push	eax
	mov	BYTE PTR _type$[ebp], 0
	call	_memset

; 641  : 
; 642  : #ifdef _WIN64
; 643  :   sscanf (szArgs, "%c %llx %s", &type, &addr, val);
; 644  : #else
; 645  :   sscanf (szArgs, "%c %lx %s", &type, &addr, val);

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	lea	eax, DWORD PTR _addr$[ebp]
	push	eax
	lea	eax, DWORD PTR _type$[ebp]
	push	eax
	push	OFFSET $SG428049
	push	edi
	call	_sscanf

; 646  : #endif
; 647  : 
; 648  :   static uint8_t* base_addr = nullptr;
; 649  : 
; 650  :   if (base_addr == nullptr)

	mov	eax, DWORD PTR ?base_addr@?1??execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z@4PAEA
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN5@execute

; 651  :   {
; 652  :     base_addr = reinterpret_cast <uint8_t *> (GetModuleHandle (nullptr));

	push	eax
	call	DWORD PTR __imp__GetModuleHandleW@4

; 653  : 
; 654  :     MEMORY_BASIC_INFORMATION basic_mem_info;
; 655  :     VirtualQuery (base_addr, &basic_mem_info, sizeof basic_mem_info);

	push	28					; 0000001cH
	lea	ecx, DWORD PTR _basic_mem_info$1[ebp]
	mov	DWORD PTR ?base_addr@?1??execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z@4PAEA, eax
	push	ecx
	push	eax
	call	DWORD PTR __imp__VirtualQuery@12

; 656  : 
; 657  :     base_addr = reinterpret_cast <uint8_t *> (basic_mem_info.BaseAddress);

	mov	eax, DWORD PTR _basic_mem_info$1[ebp]
	mov	DWORD PTR ?base_addr@?1??execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z@4PAEA, eax
$LN5@execute:

; 658  :   }
; 659  : 
; 660  :   addr += reinterpret_cast <uintptr_t> (base_addr);

	mov	esi, DWORD PTR _addr$[ebp]
	add	esi, eax

; 661  : 
; 662  :   char result [512] = { };

	lea	eax, DWORD PTR _result$[ebp]
	push	512					; 00000200H
	push	0
	push	eax
	mov	DWORD PTR _addr$[ebp], esi
	call	_memset

; 663  : 
; 664  :   switch (type)

	movsx	eax, BYTE PTR _type$[ebp]
	add	esp, 12					; 0000000cH
	add	eax, -98				; ffffff9eH
	cmp	eax, 18					; 00000012H
	ja	$LN2@execute
	movzx	eax, BYTE PTR $LN27@execute[eax]
	jmp	DWORD PTR $LN37@execute[eax*4]
$LN6@execute:

; 665  :   {
; 666  :     case 'b':
; 667  :       if (strlen (val))

	lea	ecx, DWORD PTR _val$[ebp]
	lea	edx, DWORD PTR [ecx+1]
$LL28@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL28@execute
	sub	ecx, edx
	je	SHORT $LN7@execute

; 668  :       {
; 669  :         DWORD dwOld;
; 670  : 
; 671  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 1, PAGE_EXECUTE_READWRITE, &dwOld);

	lea	eax, DWORD PTR _dwOld$15[ebp]
	push	eax
	push	64					; 00000040H
	push	1
	push	esi
	mov	esi, DWORD PTR __imp__VirtualProtect@16
	call	esi

; 672  :           uint8_t out;
; 673  :           sscanf (val, "%cx", &out);

	lea	eax, DWORD PTR _out$8[ebp]
	push	eax
	lea	eax, DWORD PTR _val$[ebp]
	push	OFFSET $SG428053
	push	eax
	call	_sscanf

; 674  :           *reinterpret_cast <uint8_t *> (addr) = out;

	mov	ecx, DWORD PTR _addr$[ebp]
	add	esp, 12					; 0000000cH
	mov	al, BYTE PTR _out$8[ebp]
	mov	BYTE PTR [ecx], al

; 675  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 1, dwOld, &dwOld);

	lea	eax, DWORD PTR _dwOld$15[ebp]
	push	eax
	push	DWORD PTR _dwOld$15[ebp]
	push	1
	push	DWORD PTR _addr$[ebp]
	call	esi
	mov	esi, DWORD PTR _addr$[ebp]
$LN7@execute:

; 676  :       }
; 677  : 
; 678  :       sprintf (result, "%u", *reinterpret_cast <uint8_t *> (addr));

	movzx	eax, BYTE PTR [esi]
	push	eax
	lea	eax, DWORD PTR _result$[ebp]
	push	OFFSET $SG428054
	push	eax
	call	_sprintf

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	lea	eax, DWORD PTR _result$[ebp]
	add	esp, 12					; 0000000cH
	push	0
	push	0
	push	1
	push	eax
	push	edi
	push	OFFSET $SG428055
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN8@execute:

; 679  : 
; 680  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 681  :       break;
; 682  :     case 's':
; 683  :       if (strlen (val))

	lea	ecx, DWORD PTR _val$[ebp]
	lea	edx, DWORD PTR [ecx+1]
	npad	6
$LL29@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL29@execute
	sub	ecx, edx
	je	SHORT $LN9@execute

; 684  :       {
; 685  :         DWORD dwOld;
; 686  : 
; 687  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 2, PAGE_EXECUTE_READWRITE, &dwOld);

	lea	eax, DWORD PTR _dwOld$14[ebp]
	push	eax
	push	64					; 00000040H
	push	2
	push	esi
	mov	esi, DWORD PTR __imp__VirtualProtect@16
	call	esi

; 688  :           uint16_t out;
; 689  :           sscanf (val, "%hx", &out);

	lea	eax, DWORD PTR _out$7[ebp]
	push	eax
	lea	eax, DWORD PTR _val$[ebp]
	push	OFFSET $SG428058
	push	eax
	call	_sscanf

; 690  :           *reinterpret_cast <uint16_t *> (addr) = out;

	mov	ecx, DWORD PTR _addr$[ebp]
	add	esp, 12					; 0000000cH
	mov	ax, WORD PTR _out$7[ebp]
	mov	WORD PTR [ecx], ax

; 691  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 2, dwOld, &dwOld);

	lea	eax, DWORD PTR _dwOld$14[ebp]
	push	eax
	push	DWORD PTR _dwOld$14[ebp]
	push	2
	push	DWORD PTR _addr$[ebp]
	call	esi
	mov	esi, DWORD PTR _addr$[ebp]
$LN9@execute:

; 692  :       }
; 693  : 
; 694  :       sprintf (result, "%u", *reinterpret_cast <uint16_t *> (addr));

	movzx	eax, WORD PTR [esi]
	push	eax
	lea	eax, DWORD PTR _result$[ebp]
	push	OFFSET $SG428059
	push	eax
	call	_sprintf

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	lea	eax, DWORD PTR _result$[ebp]
	add	esp, 12					; 0000000cH
	push	0
	push	0
	push	1
	push	eax
	push	edi
	push	OFFSET $SG428060
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN10@execute:

; 695  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 696  :       break;
; 697  :     case 'i':
; 698  :       if (strlen (val))

	lea	ecx, DWORD PTR _val$[ebp]
	lea	edx, DWORD PTR [ecx+1]
$LL30@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL30@execute
	sub	ecx, edx
	je	SHORT $LN11@execute

; 699  :       {
; 700  :         DWORD dwOld;
; 701  : 
; 702  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 4, PAGE_EXECUTE_READWRITE, &dwOld);

	lea	eax, DWORD PTR _dwOld$13[ebp]
	push	eax
	push	64					; 00000040H
	push	4
	push	esi
	mov	esi, DWORD PTR __imp__VirtualProtect@16
	call	esi

; 703  :           uint32_t out;
; 704  :           sscanf (val, "%x", &out);

	lea	eax, DWORD PTR _out$6[ebp]
	push	eax
	lea	eax, DWORD PTR _val$[ebp]
	push	OFFSET $SG428063
	push	eax
	call	_sscanf

; 705  :           *reinterpret_cast <uint32_t *> (addr) = out;

	mov	ecx, DWORD PTR _addr$[ebp]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _out$6[ebp]
	mov	DWORD PTR [ecx], eax

; 706  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 4, dwOld, &dwOld);

	lea	eax, DWORD PTR _dwOld$13[ebp]
	push	eax
	push	DWORD PTR _dwOld$13[ebp]
	push	4
	push	DWORD PTR _addr$[ebp]
	call	esi
	mov	esi, DWORD PTR _addr$[ebp]
$LN11@execute:

; 707  :       }
; 708  : 
; 709  :       sprintf (result, "%u", *reinterpret_cast <uint32_t *> (addr));

	push	DWORD PTR [esi]
	lea	eax, DWORD PTR _result$[ebp]
	push	OFFSET $SG428064
	push	eax
	call	_sprintf

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	lea	eax, DWORD PTR _result$[ebp]
	add	esp, 12					; 0000000cH
	push	0
	push	0
	push	1
	push	eax
	push	edi
	push	OFFSET $SG428065
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN12@execute:

; 710  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 711  :       break;
; 712  :     case 'l':
; 713  :       if (strlen (val))

	lea	ecx, DWORD PTR _val$[ebp]
	lea	edx, DWORD PTR [ecx+1]
$LL31@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL31@execute
	sub	ecx, edx
	je	SHORT $LN13@execute

; 714  :       {
; 715  :         DWORD dwOld;
; 716  : 
; 717  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 8, PAGE_EXECUTE_READWRITE, &dwOld);

	lea	eax, DWORD PTR _dwOld$12[ebp]
	push	eax
	push	64					; 00000040H
	push	8
	push	esi
	mov	esi, DWORD PTR __imp__VirtualProtect@16
	call	esi

; 718  :           uint64_t out;
; 719  :           sscanf (val, "%llx", &out);

	lea	eax, DWORD PTR _out$4[ebp]
	push	eax
	lea	eax, DWORD PTR _val$[ebp]
	push	OFFSET $SG428068
	push	eax
	call	_sscanf

; 720  :           *reinterpret_cast <uint64_t *> (addr) = out;

	mov	ecx, DWORD PTR _addr$[ebp]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _out$4[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _out$4[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 721  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 8, dwOld, &dwOld);

	lea	eax, DWORD PTR _dwOld$12[ebp]
	push	eax
	push	DWORD PTR _dwOld$12[ebp]
	push	8
	push	DWORD PTR _addr$[ebp]
	call	esi
	mov	esi, DWORD PTR _addr$[ebp]
$LN13@execute:

; 722  :       }
; 723  : 
; 724  :       sprintf (result, "%llu", *reinterpret_cast <uint64_t *> (addr));

	push	DWORD PTR [esi+4]
	lea	eax, DWORD PTR _result$[ebp]
	push	DWORD PTR [esi]
	push	OFFSET $SG428069
	push	eax
	call	_sprintf

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	lea	eax, DWORD PTR _result$[ebp]
	add	esp, 16					; 00000010H
	push	0
	push	0
	push	1
	push	eax
	push	edi
	push	OFFSET $SG428070
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN14@execute:

; 725  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 726  :       break;
; 727  :     case 'd':
; 728  :       if (strlen (val))

	lea	ecx, DWORD PTR _val$[ebp]
	lea	edx, DWORD PTR [ecx+1]
$LL32@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL32@execute
	sub	ecx, edx
	je	SHORT $LN15@execute

; 729  :       {
; 730  :         DWORD dwOld;
; 731  : 
; 732  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 8, PAGE_EXECUTE_READWRITE, &dwOld);

	lea	eax, DWORD PTR _dwOld$11[ebp]
	push	eax
	push	64					; 00000040H
	push	8
	push	esi
	mov	esi, DWORD PTR __imp__VirtualProtect@16
	call	esi

; 733  :           double out;
; 734  :           sscanf (val, "%lf", &out);

	lea	eax, DWORD PTR _out$3[ebp]
	push	eax
	lea	eax, DWORD PTR _val$[ebp]
	push	OFFSET $SG428073
	push	eax
	call	_sscanf

; 735  :           *reinterpret_cast <double *> (addr) = out;

	mov	eax, DWORD PTR _addr$[ebp]
	add	esp, 12					; 0000000cH
	movsd	xmm0, QWORD PTR _out$3[ebp]
	movsd	QWORD PTR [eax], xmm0

; 736  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 8, dwOld, &dwOld);

	lea	eax, DWORD PTR _dwOld$11[ebp]
	push	eax
	push	DWORD PTR _dwOld$11[ebp]
	push	8
	push	DWORD PTR _addr$[ebp]
	call	esi
	mov	esi, DWORD PTR _addr$[ebp]
$LN15@execute:

; 737  :       }
; 738  : 
; 739  :       sprintf (result, "%f", *reinterpret_cast <double *> (addr));

	movsd	xmm0, QWORD PTR [esi]
	lea	eax, DWORD PTR _result$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG428074
	push	eax
	call	_sprintf

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	lea	eax, DWORD PTR _result$[ebp]
	add	esp, 16					; 00000010H
	push	0
	push	0
	push	1
	push	eax
	push	edi
	push	OFFSET $SG428075
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN16@execute:

; 740  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 741  :       break;
; 742  :     case 'f':
; 743  :       if (strlen (val))

	lea	ecx, DWORD PTR _val$[ebp]
	lea	edx, DWORD PTR [ecx+1]
$LL33@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL33@execute
	sub	ecx, edx
	je	SHORT $LN17@execute

; 744  :       {
; 745  :         DWORD dwOld;
; 746  : 
; 747  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 4, PAGE_EXECUTE_READWRITE, &dwOld);

	lea	eax, DWORD PTR _dwOld$10[ebp]
	push	eax
	push	64					; 00000040H
	push	4
	push	esi
	mov	esi, DWORD PTR __imp__VirtualProtect@16
	call	esi

; 748  :           float out;
; 749  :           sscanf (val, "%f", &out);

	lea	eax, DWORD PTR _out$5[ebp]
	push	eax
	lea	eax, DWORD PTR _val$[ebp]
	push	OFFSET $SG428078
	push	eax
	call	_sscanf

; 750  :           *reinterpret_cast <float *> (addr) = out;

	mov	eax, DWORD PTR _addr$[ebp]
	add	esp, 12					; 0000000cH
	movss	xmm0, DWORD PTR _out$5[ebp]
	movss	DWORD PTR [eax], xmm0

; 751  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 4, dwOld, &dwOld);

	lea	eax, DWORD PTR _dwOld$10[ebp]
	push	eax
	push	DWORD PTR _dwOld$10[ebp]
	push	4
	push	DWORD PTR _addr$[ebp]
	call	esi
	mov	esi, DWORD PTR _addr$[ebp]
$LN17@execute:

; 752  :       }
; 753  : 
; 754  :       sprintf (result, "%f", *reinterpret_cast <float *> (addr));

	movss	xmm0, DWORD PTR [esi]
	lea	eax, DWORD PTR _result$[ebp]
	cvtps2pd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG428079
	push	eax
	call	_sprintf

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	lea	eax, DWORD PTR _result$[ebp]
	add	esp, 16					; 00000010H
	push	0
	push	0
	push	1
	push	eax
	push	edi
	push	OFFSET $SG428080
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@execute:

; 755  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 756  :       break;
; 757  :     case 't':
; 758  :       if (strlen (val))

	lea	ecx, DWORD PTR _val$[ebp]
	lea	edx, DWORD PTR [ecx+1]
$LL34@execute:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL34@execute
	sub	ecx, edx
	je	SHORT $LN19@execute

; 759  :       {
; 760  :         DWORD dwOld;
; 761  : 
; 762  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 256, PAGE_EXECUTE_READWRITE, &dwOld);

	lea	eax, DWORD PTR _dwOld$9[ebp]
	push	eax
	push	64					; 00000040H
	push	256					; 00000100H
	push	esi
	mov	esi, DWORD PTR __imp__VirtualProtect@16
	call	esi

; 763  :           strcpy (reinterpret_cast <char *> (addr), val);

	mov	edx, DWORD PTR _addr$[ebp]
	lea	ecx, DWORD PTR _val$[ebp]
	npad	2
$LL21@execute:
	mov	al, BYTE PTR [ecx]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR [edx], al
	lea	edx, DWORD PTR [edx+1]
	test	al, al
	jne	SHORT $LL21@execute

; 764  :         VirtualProtect (reinterpret_cast <LPVOID> (addr), 256, dwOld, &dwOld);

	lea	eax, DWORD PTR _dwOld$9[ebp]
	push	eax
	push	DWORD PTR _dwOld$9[ebp]
	push	256					; 00000100H
	push	DWORD PTR _addr$[ebp]
	call	esi
	mov	esi, DWORD PTR _addr$[ebp]
$LN19@execute:

; 765  :       }
; 766  :       sprintf (result, "%s", reinterpret_cast <char *> (addr));

	push	esi
	lea	eax, DWORD PTR _result$[ebp]
	push	OFFSET $SG428083
	push	eax
	call	_sprintf

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	lea	eax, DWORD PTR _result$[ebp]
	add	esp, 12					; 0000000cH
	push	0
	push	0
	push	1
	push	eax
	push	edi
	push	OFFSET $SG428084
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@execute:

; 767  :       return SK_ICommandResult ("mem", szArgs, result, 1);
; 768  :       break;
; 769  :   }
; 770  : 
; 771  :   return SK_ICommandResult ("mem", szArgs);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	0
	push	0
	push	0
	push	OFFSET $SG428085
	push	edi
	push	OFFSET $SG428086
	call	??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ; SK_ICommandResult::SK_ICommandResult
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN37@execute:
	DD	$LN6@execute
	DD	$LN14@execute
	DD	$LN16@execute
	DD	$LN10@execute
	DD	$LN12@execute
	DD	$LN8@execute
	DD	$LN18@execute
	DD	$LN2@execute
$LN27@execute:
	DB	0
	DB	7
	DB	1
	DB	7
	DB	2
	DB	7
	DB	7
	DB	3
	DB	7
	DB	7
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	6
?execute@skMemCmd@@UAE?AUSK_ICommandResult@@PBD@Z ENDP	; skMemCmd::execute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
?SK_StartPerfMonThreads@@YGXXZ PROC			; SK_StartPerfMonThreads

; 478  :   if (config.mem.show)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+12, 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR __imp__GetThreadId@4
	push	edi
	mov	edi, DWORD PTR __imp__CreateThread@24
	je	SHORT $LN5@SK_StartPe
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 5286 :     return (PVOID)InterlockedCompareExchange((LONG volatile *) Destination,

	xor	ecx, ecx
	mov	ebx, OFFSET ?process_stats@@3Uprocess_stats_t@@A ; process_stats
	or	eax, -1
	lock	 cmpxchg DWORD PTR [ebx], ecx
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 483  :     if ( InterlockedCompareExchangePointer (&process_stats.hThread, nullptr, INVALID_HANDLE_VALUE) ==

	cmp	eax, -1
	jne	SHORT $LN5@SK_StartPe

; 484  :            INVALID_HANDLE_VALUE )
; 485  :     {
; 486  :       dll_log.LogEx (true, L"[ WMI Perf ] Spawning Process Monitor...  ");

	push	OFFSET $SG427883
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 487  : 
; 488  :       InterlockedExchangePointer ( (void **)&process_stats.hThread,

	push	0
	push	0
	push	0
	push	OFFSET ?SK_MonitorProcess@@YGKPAX@Z	; SK_MonitorProcess
	push	0
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(

	xchg	DWORD PTR [ebx], eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 497  :       if (process_stats.hThread != INVALID_HANDLE_VALUE)

	cmp	DWORD PTR ?process_stats@@3Uprocess_stats_t@@A, -1
	je	SHORT $LN4@SK_StartPe

; 498  :         dll_log.LogEx (false, L"tid=0x%04x\n", GetThreadId (process_stats.hThread));

	mov	eax, DWORD PTR ?process_stats@@3Uprocess_stats_t@@A
	push	eax
	call	esi
	push	eax
	push	OFFSET $SG427886
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 499  :       else

	jmp	SHORT $LN5@SK_StartPe
$LN4@SK_StartPe:

; 500  :         dll_log.LogEx (false, L"Failed!\n");

	push	OFFSET $SG427887
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH
$LN5@SK_StartPe:

; 501  :     }
; 502  :   }
; 503  : 
; 504  :   if (config.cpu.show || SK_ImGui_Widgets.cpu_monitor->isActive ())

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+96, 0
	jne	SHORT $LN7@SK_StartPe
	mov	eax, DWORD PTR ?SK_ImGui_Widgets@@3USK_ImGui_WidgetRegistry@@A+16
	cmp	BYTE PTR [eax+185], 0
	je	SHORT $LN10@SK_StartPe
$LN7@SK_StartPe:
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 5286 :     return (PVOID)InterlockedCompareExchange((LONG volatile *) Destination,

	xor	ecx, ecx
	mov	ebx, OFFSET ?cpu_stats@@3Ucpu_perf_t@@A	; cpu_stats
	or	eax, -1
	lock	 cmpxchg DWORD PTR [ebx], ecx
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 509  :     if ( InterlockedCompareExchangePointer (&cpu_stats.hThread, nullptr, INVALID_HANDLE_VALUE) ==

	cmp	eax, -1
	jne	SHORT $LN10@SK_StartPe

; 510  :            INVALID_HANDLE_VALUE )
; 511  :     {
; 512  :       dll_log.LogEx (true, L"[ WMI Perf ] Spawning CPU Monitor...      ");

	push	OFFSET $SG427891
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 513  : 
; 514  :       InterlockedExchangePointer ( (void **)&cpu_stats.hThread,

	push	0
	push	0
	push	0
	push	OFFSET ?SK_MonitorCPU@@YGKPAX@Z		; SK_MonitorCPU
	push	0
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(

	xchg	DWORD PTR [ebx], eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 523  :       if (cpu_stats.hThread != INVALID_HANDLE_VALUE)

	cmp	DWORD PTR ?cpu_stats@@3Ucpu_perf_t@@A, -1
	je	SHORT $LN9@SK_StartPe

; 524  :         dll_log.LogEx (false, L"tid=0x%04x\n", GetThreadId (cpu_stats.hThread));

	mov	eax, DWORD PTR ?cpu_stats@@3Ucpu_perf_t@@A
	push	eax
	call	esi
	push	eax
	push	OFFSET $SG427894
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 525  :       else

	jmp	SHORT $LN10@SK_StartPe
$LN9@SK_StartPe:

; 526  :         dll_log.LogEx (false, L"Failed!\n");

	push	OFFSET $SG427895
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH
$LN10@SK_StartPe:

; 527  :     }
; 528  :   }
; 529  : 
; 530  :   if (config.disk.show)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+132, 0
	je	SHORT $LN14@SK_StartPe
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 5286 :     return (PVOID)InterlockedCompareExchange((LONG volatile *) Destination,

	xor	ecx, ecx
	mov	ebx, OFFSET ?disk_stats@@3Udisk_perf_t@@A ; disk_stats
	or	eax, -1
	lock	 cmpxchg DWORD PTR [ebx], ecx
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 532  :     if ( InterlockedCompareExchangePointer (&disk_stats.hThread, nullptr, INVALID_HANDLE_VALUE) ==

	cmp	eax, -1
	jne	SHORT $LN14@SK_StartPe

; 533  :            INVALID_HANDLE_VALUE )
; 534  :     {
; 535  :       dll_log.LogEx (true, L"[ WMI Perf ] Spawning Disk Monitor...     ");

	push	OFFSET $SG427898
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 536  : 
; 537  :       InterlockedExchangePointer ( (void **)&disk_stats.hThread,

	push	0
	push	0
	push	0
	push	OFFSET ?SK_MonitorDisk@@YGKPAX@Z	; SK_MonitorDisk
	push	0
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(

	xchg	DWORD PTR [ebx], eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 546  :       if (disk_stats.hThread != INVALID_HANDLE_VALUE)

	cmp	DWORD PTR ?disk_stats@@3Udisk_perf_t@@A, -1
	je	SHORT $LN13@SK_StartPe

; 547  :         dll_log.LogEx (false, L"tid=0x%04x\n", GetThreadId (disk_stats.hThread));

	mov	eax, DWORD PTR ?disk_stats@@3Udisk_perf_t@@A
	push	eax
	call	esi
	push	eax
	push	OFFSET $SG427901
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 548  :       else

	jmp	SHORT $LN14@SK_StartPe
$LN13@SK_StartPe:

; 549  :         dll_log.LogEx (false, L"failed!\n");

	push	OFFSET $SG427902
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH
$LN14@SK_StartPe:

; 550  :     }
; 551  :   }
; 552  : 
; 553  :   if (config.pagefile.show)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+148, 0
	je	SHORT $LN18@SK_StartPe
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 5286 :     return (PVOID)InterlockedCompareExchange((LONG volatile *) Destination,

	xor	ecx, ecx
	mov	ebx, OFFSET ?pagefile_stats@@3Upagefile_perf_t@@A ; pagefile_stats
	or	eax, -1
	lock	 cmpxchg DWORD PTR [ebx], ecx
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 555  :     if ( InterlockedCompareExchangePointer (&pagefile_stats.hThread, nullptr, INVALID_HANDLE_VALUE) ==

	cmp	eax, -1
	jne	SHORT $LN18@SK_StartPe

; 556  :            INVALID_HANDLE_VALUE )
; 557  :     {
; 558  :       dll_log.LogEx (true, L"[ WMI Perf ] Spawning Pagefile Monitor... ");

	push	OFFSET $SG427905
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 559  : 
; 560  :       InterlockedExchangePointer ( (void **)&pagefile_stats.hThread,

	push	0
	push	0
	push	0
	push	OFFSET ?SK_MonitorPagefile@@YGKPAX@Z	; SK_MonitorPagefile
	push	0
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(

	xchg	DWORD PTR [ebx], eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 569  :       if (pagefile_stats.hThread != INVALID_HANDLE_VALUE)

	cmp	DWORD PTR ?pagefile_stats@@3Upagefile_perf_t@@A, -1
	je	SHORT $LN17@SK_StartPe

; 570  :         dll_log.LogEx ( false, L"tid=0x%04x\n",

	mov	eax, DWORD PTR ?pagefile_stats@@3Upagefile_perf_t@@A
	push	eax
	call	esi
	push	eax
	push	OFFSET $SG427908
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebx

; 574  :     }
; 575  :   }
; 576  : }

	ret	0
$LN17@SK_StartPe:

; 571  :                           GetThreadId (pagefile_stats.hThread) );
; 572  :       else
; 573  :         dll_log.LogEx (false, L"failed!\n");

	push	OFFSET $SG427909
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH
$LN18@SK_StartPe:

; 574  :     }
; 575  :   }
; 576  : }

	pop	edi
	pop	esi
	pop	ebx
	ret	0
?SK_StartPerfMonThreads@@YGXXZ ENDP			; SK_StartPerfMonThreads
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_lpThreadParam$ = 8					; size = 4
?osd_pump@@YGKPAX@Z PROC				; osd_pump

; 457  :   UNREFERENCED_PARAMETER (lpThreadParam);
; 458  : 
; 459  :   // TODO: This actually increases the number of frames rendered, which
; 460  :   //         may interfere with other mod logic... the entire feature is
; 461  :   //           a hack, but that behavior is not intended.
; 462  :   while (true)
; 463  :   {
; 464  :     if (WaitForSingleObject (osd_shutdown, (DWORD)(config.osd.pump_interval * 1000.0f)) == WAIT_OBJECT_0)

	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+52
	mulss	xmm0, DWORD PTR __real@447a0000
	push	esi
	call	__ftoui3
	mov	esi, DWORD PTR __imp__WaitForSingleObject@8
	push	eax
	push	DWORD PTR ?osd_shutdown@@3PAXA		; osd_shutdown
	call	esi
	test	eax, eax
	je	SHORT $LN12@osd_pump
	npad	7
$LL2@osd_pump:

; 465  :       break;
; 466  : 
; 467  :     SK_EndBufferSwap (S_OK, nullptr);

	push	0
	push	0
	call	?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z	; SK_EndBufferSwap
	movss	xmm0, DWORD PTR ?config@@3Usk_config_t@@A+52
	mulss	xmm0, DWORD PTR __real@447a0000
	call	__ftoui3
	push	eax
	push	DWORD PTR ?osd_shutdown@@3PAXA		; osd_shutdown
	call	esi
	test	eax, eax
	jne	SHORT $LL2@osd_pump
$LN12@osd_pump:

; 468  :   }
; 469  : 
; 470  :   return 0;

	xor	eax, eax
	pop	esi

; 471  : }

	ret	4
?osd_pump@@YGKPAX@Z ENDP				; osd_pump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
?SK_GetBackend@@YGPB_WXZ PROC				; SK_GetBackend

; 133  :   return SK_Backend;

	mov	eax, OFFSET ?SK_Backend@@3PA_WA		; SK_Backend

; 134  : }

	ret	0
?SK_GetBackend@@YGPB_WXZ ENDP				; SK_GetBackend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??__F__SK_Init_Suspended_tids@@YAXXZ
text$yd	SEGMENT
__Alproxy$1 = -1					; size = 1
??__F__SK_Init_Suspended_tids@@YAXXZ PROC		; `dynamic atexit destructor for '__SK_Init_Suspended_tids'', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1244 : 		_Tidy();

	mov	ecx, OFFSET ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy

; 862  : 			_Alproxy(_Getal());

	push	OFFSET ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>

; 863  : 		_Orphan_all();

	mov	ecx, OFFSET ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
	call	?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all

; 864  : 		_Alproxy.destroy(_Myproxy());

	push	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A, 0

; 814  : 		}

	mov	ecx, OFFSET ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??__F__SK_Init_Suspended_tids@@YAXXZ ENDP		; `dynamic atexit destructor for '__SK_Init_Suspended_tids''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ??__E__SK_Init_Suspended_tids@@YAXXZ
text$di	SEGMENT
__Alproxy$1 = -1					; size = 1
??__E__SK_Init_Suspended_tids@@YAXXZ PROC		; `dynamic initializer for '__SK_Init_Suspended_tids'', COMDAT

; 122  : std::queue <DWORD> __SK_Init_Suspended_tids;

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 302  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, OFFSET ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
	call	??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 853  : 			_Alproxy(_Getal());

	push	OFFSET ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A, 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+4, 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+8, 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+12, 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+16, 0

; 853  : 			_Alproxy(_Getal());

	call	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN36@dynamic
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN106@dynamic:
$LN36@dynamic:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 122  : std::queue <DWORD> __SK_Init_Suspended_tids;

	push	OFFSET ??__F__SK_Init_Suspended_tids@@YAXXZ ; `dynamic atexit destructor for '__SK_Init_Suspended_tids''
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	DWORD PTR [eax], OFFSET ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 122  : std::queue <DWORD> __SK_Init_Suspended_tids;

	call	_atexit
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN105@dynamic:
??__E__SK_Init_Suspended_tids@@YAXXZ ENDP		; `dynamic initializer for '__SK_Init_Suspended_tids''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0init_params_t@@QAE@XZ
_TEXT	SEGMENT
??0init_params_t@@QAE@XZ PROC				; init_params_t::init_params_t, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_C@_1BA@IKEODOOB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0init_params_t@@QAE@XZ ENDP				; init_params_t::init_params_t
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??__Finit_tids@@YAXXZ
text$yd	SEGMENT
__Alproxy$1 = -1					; size = 1
??__Finit_tids@@YAXXZ PROC				; `dynamic atexit destructor for 'init_tids'', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1244 : 		_Tidy();

	mov	ecx, OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy

; 862  : 			_Alproxy(_Getal());

	push	OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>

; 863  : 		_Orphan_all();

	mov	ecx, OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	call	?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all

; 864  : 		_Alproxy.destroy(_Myproxy());

	push	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A, 0

; 814  : 		}

	mov	ecx, OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??__Finit_tids@@YAXXZ ENDP				; `dynamic atexit destructor for 'init_tids''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ??__Einit_tids@@YAXXZ
text$di	SEGMENT
__Alproxy$1 = -1					; size = 1
??__Einit_tids@@YAXXZ PROC				; `dynamic initializer for 'init_tids'', COMDAT

; 94   : std::queue <DWORD> init_tids;

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 302  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	call	??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 853  : 			_Alproxy(_Getal());

	push	OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A, 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+4, 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+8, 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+12, 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+16, 0

; 853  : 			_Alproxy(_Getal());

	call	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN36@dynamic
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN106@dynamic:
$LN36@dynamic:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 94   : std::queue <DWORD> init_tids;

	push	OFFSET ??__Finit_tids@@YAXXZ		; `dynamic atexit destructor for 'init_tids''
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	DWORD PTR [eax], OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 94   : std::queue <DWORD> init_tids;

	call	_atexit
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN105@dynamic:
??__Einit_tids@@YAXXZ ENDP				; `dynamic initializer for 'init_tids''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::operator=, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	push	edi
	mov	esi, ecx

; 1113 : 		if (this != _STD addressof(_Right))

	mov	edi, DWORD PTR ___that$[ebp]
	cmp	esi, edi
	je	SHORT $LN306@operator

; 1114 : 			{	// different, assign it
; 1115 : 			_Tidy();

	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 259  : 	_Myproxy = _Right._Myproxy;

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [esi], eax

; 260  : 	_Right._Myproxy = _Temp;

	mov	DWORD PTR [edi], edx

; 261  : 
; 262  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN194@operator

; 263  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	DWORD PTR [eax], esi
$LN194@operator:

; 264  : 	if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN195@operator

; 265  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	DWORD PTR [eax], edi
$LN195@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1126 : 		this->_Map() = _Right._Map();

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], eax

; 1127 : 		this->_Mapsize() = _Right._Mapsize();

	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax

; 1128 : 		this->_Myoff() = _Right._Myoff();

	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax

; 1129 : 		this->_Mysize() = _Right._Mysize();

	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax

; 1130 : 
; 1131 : 		_Right._Map() = _Mapptr();

	mov	DWORD PTR [edi+4], 0

; 1132 : 		_Right._Mapsize() = 0;

	mov	DWORD PTR [edi+8], 0

; 1133 : 		_Right._Myoff() = 0;

	mov	DWORD PTR [edi+12], 0

; 1134 : 		_Right._Mysize() = 0;

	mov	DWORD PTR [edi+16], 0
$LN306@operator:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::operator=
; Function compile flags: /Ogtp
;	COMDAT ??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	DWORD PTR ___that$[ebp]
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	call	??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??1?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ PROC ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::~queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx

; 1244 : 		_Tidy();

	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi
	ret	0
??1?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ENDP ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::~queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue
;	COMDAT ??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ PROC ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 33   : 		{	// construct with empty container

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue

; 33   : 		{	// construct with empty container

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [esi+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [esi+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [esi+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN34@queue
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN103@queue:
$LN34@queue:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue

; 34   : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN102@queue:
??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ENDP ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1863 : 		{	// free all storage

	npad	2
	push	esi
	mov	esi, ecx

; 1397 : 		return (this->_Mysize() == 0);

	cmp	DWORD PTR [esi+16], 0

; 1864 : 		_Alpty _Almap(this->_Getal());
; 1865 : 		while (!empty())

	je	SHORT $LN3@Tidy
	npad	5
$LL2@Tidy:

; 1535 : 		if (--this->_Mysize() == 0)

	add	DWORD PTR [esi+16], -1
	jne	SHORT $LN29@Tidy

; 1536 : 			this->_Myoff() = 0;

	mov	DWORD PTR [esi+12], 0
$LN29@Tidy:

; 1397 : 		return (this->_Mysize() == 0);

	cmp	DWORD PTR [esi+16], 0

; 1864 : 		_Alpty _Almap(this->_Getal());
; 1865 : 		while (!empty())

	jne	SHORT $LL2@Tidy
$LN3@Tidy:
	push	edi

; 1867 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	mov	edi, DWORD PTR [esi+8]
	test	edi, edi
	je	SHORT $LN5@Tidy
	npad	5
$LL4@Tidy:

; 1868 : 			{	// free storage for a block and destroy pointer
; 1869 : 			if (this->_Map()[--_Block] != pointer())

	mov	eax, DWORD PTR [esi+4]
	dec	edi
	mov	eax, DWORD PTR [eax+edi*4]
	test	eax, eax
	je	SHORT $LN7@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1867 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	test	edi, edi
	jne	SHORT $LL4@Tidy
$LN5@Tidy:

; 1870 : 				{	// free block and destroy its pointer
; 1871 : 				this->_Getal().deallocate(this->_Map()[_Block], _DEQUESIZ);
; 1872 : 				this->_Getal().destroy(_STD addressof(this->_Map()[_Block]));
; 1873 : 				}
; 1874 : 			}
; 1875 : 
; 1876 : 		if (this->_Map() != _Mapptr())

	mov	ecx, DWORD PTR [esi+4]
	pop	edi
	test	ecx, ecx
	je	SHORT $LN198@Tidy

; 1877 : 			_Almap.deallocate(this->_Map(),

	mov	eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN192@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN232@Tidy:
$LN192@Tidy:

; 99   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 2

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN193@Tidy

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	test	cl, 31					; 0000001fH
	je	SHORT $LN194@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN233@Tidy:
$LN194@Tidy:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	eax, DWORD PTR [ecx-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	eax, ecx
	jb	SHORT $LN195@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN234@Tidy:
$LN195@Tidy:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	ecx, eax
	cmp	ecx, 4
	jae	SHORT $LN196@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN235@Tidy:
$LN196@Tidy:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	ecx, 35					; 00000023H
	jbe	SHORT $LN197@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN236@Tidy:
$LN197@Tidy:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, eax
$LN193@Tidy:

; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN198@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1879 : 		this->_Mapsize() = 0;

	mov	DWORD PTR [esi+8], 0

; 1880 : 		this->_Map() = _Mapptr();

	mov	DWORD PTR [esi+4], 0
	pop	esi

; 1881 : 		}

	ret	0
$LN231@Tidy:
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Growmap@?$deque@KV?$allocator@K@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Myptr$1$ = -12					; size = 4
_this$1$ = -8						; size = 4
__Myboff$1$ = -4					; size = 4
__Newmap$1$ = 8						; size = 4
__Count$ = 8						; size = 4
__Almap$ = 11						; size = 1
?_Growmap@?$deque@KV?$allocator@K@std@@@std@@IAEXI@Z PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap, COMDAT
; _this$ = ecx

; 1807 : 		{	// grow map by at least _Count pointers, _Mapsize() a power of 2

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1808 : 		static_assert(1 < _DEQUEMAPSIZ,
; 1809 : 			"The _Xlen() test should always be performed.");
; 1810 : 
; 1811 : 		typedef typename _Alpty::pointer _Blockptr;
; 1812 : 		_Alpty _Almap(this->_Getal());
; 1813 : 		size_type _Newsize = 0 < this->_Mapsize() ? this->_Mapsize() : 1;

	mov	edx, DWORD PTR __Count$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, 1
	mov	DWORD PTR _this$1$[ebp], edi
	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	cmovne	esi, ecx
$LL2@Growmap:

; 1814 : 		while (_Newsize - this->_Mapsize() < _Count
; 1815 : 			|| _Newsize < _DEQUEMAPSIZ)

	mov	eax, esi
	sub	eax, ecx
	cmp	eax, edx
	jb	SHORT $LN4@Growmap
	cmp	esi, 8
	jae	SHORT $LN3@Growmap
$LN4@Growmap:

; 1816 : 			{	// scale _Newsize to 2^N >= _Mapsize() + _Count
; 1817 : 			if (max_size() / _DEQUESIZ - _Newsize < _Newsize)

	mov	eax, 268435455				; 0fffffffH
	sub	eax, esi
	cmp	eax, esi
	jb	$LN333@Growmap

; 1819 : 			_Newsize *= 2;

	add	esi, esi

; 1820 : 			}

	jmp	SHORT $LL2@Growmap
$LN3@Growmap:

; 1821 : 		_Count = _Newsize - this->_Mapsize();
; 1822 : 
; 1823 : 		size_type _Myboff = this->_Myoff() / _DEQUESIZ;

	mov	ebx, DWORD PTR [edi+12]
	sub	esi, ecx
	shr	ebx, 2
	mov	DWORD PTR __Myboff$1$[ebp], ebx

; 1824 : 		_Mapptr _Newmap = _Almap.allocate(this->_Mapsize() + _Count);

	lea	eax, DWORD PTR [ecx+esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?allocate@?$allocator@PAK@std@@QAEPAPAKI@Z ; std::allocator<unsigned long *>::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1827 : 		_Myptr = _Uninitialized_copy(this->_Map() + _Myboff,

	mov	ecx, DWORD PTR [edi+4]
	mov	edi, DWORD PTR [edi+8]
	shl	ebx, 2
	shl	edi, 2
	mov	DWORD PTR __Newmap$1$[ebp], eax
	lea	edx, DWORD PTR [ecx+ebx]
	add	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	sub	edi, edx
	add	edi, ecx

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	push	edi
	push	edx
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH

; 2301 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	edx, DWORD PTR [edi+ebx]
	mov	DWORD PTR __Myptr$1$[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1830 : 		if (_Myboff <= _Count)

	cmp	DWORD PTR __Myboff$1$[ebp], esi
	ja	SHORT $LN6@Growmap
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2296 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);

	mov	ebx, DWORD PTR _this$1$[ebp]
	mov	eax, DWORD PTR [ebx+4]

; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	edi, eax
	mov	ebx, DWORD PTR __Myboff$1$[ebp]
	sub	edi, eax
	lea	ecx, DWORD PTR [ebx*4]
	add	edi, ecx

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	push	edi
	push	eax
	mov	eax, DWORD PTR __imp__memmove
	push	edx
	call	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 251  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

	mov	eax, esi
	sub	eax, ebx
	shl	eax, 2
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2301 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	mov	eax, DWORD PTR __Myptr$1$[ebp]
	add	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 251  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

	push	0
	push	eax
	call	_memset
	mov	edi, DWORD PTR __Newmap$1$[ebp]
	mov	ecx, ebx
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	push	0
	push	edi
	call	_memset
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1840 : 		else

	jmp	SHORT $LN332@Growmap
$LN6@Growmap:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2296 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);

	mov	edi, DWORD PTR _this$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1842 : 			_Uninitialized_copy(this->_Map(),

	lea	ebx, DWORD PTR [esi*4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	eax, DWORD PTR __imp__memmove
	push	ebx
	mov	ecx, DWORD PTR [edi+4]
	push	ecx
	push	edx
	call	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1845 : 			_Myptr = _Uninitialized_copy(this->_Map() + _Count,

	mov	edi, DWORD PTR [edi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	edx, DWORD PTR __Myboff$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1845 : 			_Myptr = _Uninitialized_copy(this->_Map() + _Count,

	lea	eax, DWORD PTR [ebx+edi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2299 : 	const size_t _Count = _Last_ch - _First_ch;

	sub	edi, eax
	lea	ecx, DWORD PTR [edx*4]
	add	edi, ecx

; 2300 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	push	edi
	push	eax
	push	DWORD PTR __Newmap$1$[ebp]
	call	DWORD PTR __imp__memmove

; 2301 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	mov	eax, DWORD PTR __Newmap$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 251  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

	push	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 2301 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	add	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory

; 251  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

	push	0
	push	eax
	call	_memset
	mov	edi, DWORD PTR __Newmap$1$[ebp]
$LN332@Growmap:
	mov	ebx, DWORD PTR _this$1$[ebp]
	add	esp, 36					; 00000024H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1854 : 		if (this->_Map() != _Mapptr())

	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN8@Growmap
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR [ebx+8]
	push	eax
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN8@Growmap:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1858 : 		this->_Map() = _Newmap;	// point at new

	mov	DWORD PTR [ebx+4], edi

; 1859 : 		this->_Mapsize() += _Count;

	add	DWORD PTR [ebx+8], esi
	pop	edi
	pop	esi
	pop	ebx

; 1860 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN333@Growmap:

; 1818 : 				_Xlen();	// result too long

	mov	ecx, edi
	call	?_Xlen@?$deque@KV?$allocator@K@std@@@std@@IBEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
$LN334@Growmap:
$LN331@Growmap:
	int	3
?_Growmap@?$deque@KV?$allocator@K@std@@@std@@IAEXI@Z ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Xlen@?$deque@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@KV?$allocator@K@std@@@std@@IBEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 1798 : 		_Xlength_error("deque<T> too long");

	push	OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$deque@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?pop_back@?$deque@KV?$allocator@K@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$deque@KV?$allocator@K@std@@@std@@QAEXXZ PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::pop_back, COMDAT
; _this$ = ecx

; 1514 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1515 : 		if (empty())
; 1516 : 			{
; 1517 : 			_DEBUG_ERROR("deque empty before pop");
; 1518 : 			}
; 1519 : 		else
; 1520 : 			{	// something to erase, do it
; 1521 : 			size_type _Newoff = this->_Myoff() + this->_Mysize() - 1;
; 1522 : 			_Orphan_off(_Newoff);
; 1523 : 			size_type _Block = this->_Getblock(_Newoff);
; 1524 : 			this->_Getal().destroy(
; 1525 : 				_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1526 : 			if (--this->_Mysize() == 0)
; 1527 : 				this->_Myoff() = 0;
; 1528 : 			}
; 1529 : 
; 1530 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1531 : 		size_type _Newoff = this->_Myoff() + this->_Mysize() - 1;
; 1532 : 		size_type _Block = this->_Getblock(_Newoff);
; 1533 : 		this->_Getal().destroy(
; 1534 : 			_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1535 : 		if (--this->_Mysize() == 0)

	add	DWORD PTR [ecx+16], -1
	jne	SHORT $LN2@pop_back

; 1536 : 			this->_Myoff() = 0;

	mov	DWORD PTR [ecx+12], 0
$LN2@pop_back:

; 1537 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1538 : 		}

	ret	0
?pop_back@?$deque@KV?$allocator@K@std@@@std@@QAEXXZ ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::pop_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?empty@?$deque@KV?$allocator@K@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$deque@KV?$allocator@K@std@@@std@@QBE_NXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::empty, COMDAT
; _this$ = ecx

; 1396 : 		{	// test if sequence is empty

	cmp	DWORD PTR [ecx+16], 0
	sete	al

; 1397 : 		return (this->_Mysize() == 0);
; 1398 : 		}

	ret	0
?empty@?$deque@KV?$allocator@K@std@@@std@@QBE_NXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?max_size@?$deque@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$deque@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 1392 : 		return (this->_Getal().max_size());

	mov	eax, 1073741823				; 3fffffffH

; 1393 : 		}

	ret	0
?max_size@?$deque@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?end@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 1299 : 		{	// return iterator for end of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 133  : 		: _Myproxy(0), _Mynextiter(0)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1300 : 		return (const_iterator(this->_Myoff() + this->_Mysize(),

	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR [ecx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 192  : 			_Myproxy = _Parent_proxy;

	mov	ecx, DWORD PTR [ecx]

; 133  : 		: _Myproxy(0), _Mynextiter(0)

	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 301  : 		: _Myoff(_Off)

	mov	DWORD PTR [eax+8], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 192  : 			_Myproxy = _Parent_proxy;

	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1302 : 		}

	pop	ebp
	ret	4
?end@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?begin@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 1288 : 		{	// return iterator for beginning of nonmutable sequence

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 133  : 		: _Myproxy(0), _Mynextiter(0)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 301  : 		: _Myoff(_Off)

	mov	edx, DWORD PTR [ecx+12]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 192  : 			_Myproxy = _Parent_proxy;

	mov	ecx, DWORD PTR [ecx]

; 133  : 		: _Myproxy(0), _Mynextiter(0)

	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 301  : 		: _Myoff(_Off)

	mov	DWORD PTR [eax+8], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 192  : 			_Myproxy = _Parent_proxy;

	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1290 : 		}

	pop	ebp
	ret	4
?begin@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??1?$deque@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$deque@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::~deque<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1243 : 		{	// destroy the deque

	npad	2
	push	esi
	mov	esi, ecx

; 1244 : 		_Tidy();

	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi

; 1245 : 		}

	ret	0
??1?$deque@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::~deque<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Assign_rv@?$deque@KV?$allocator@K@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv@?$deque@KV?$allocator@K@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::_Assign_rv, COMDAT
; _this$ = ecx

; 1124 : 		{	// move from _Right, stealing its contents

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 258  : 	_Container_proxy *_Temp = _Myproxy;

	mov	edx, DWORD PTR [ecx]
	push	esi

; 259  : 	_Myproxy = _Right._Myproxy;

	mov	esi, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax

; 260  : 	_Right._Myproxy = _Temp;

	mov	DWORD PTR [esi], edx

; 261  : 
; 262  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN18@Assign_rv

; 263  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	DWORD PTR [eax], ecx
$LN18@Assign_rv:

; 264  : 	if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN19@Assign_rv

; 265  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	DWORD PTR [eax], esi
$LN19@Assign_rv:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1126 : 		this->_Map() = _Right._Map();

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], eax

; 1127 : 		this->_Mapsize() = _Right._Mapsize();

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx+8], eax

; 1128 : 		this->_Myoff() = _Right._Myoff();

	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [ecx+12], eax

; 1129 : 		this->_Mysize() = _Right._Mysize();

	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx+16], eax

; 1130 : 
; 1131 : 		_Right._Map() = _Mapptr();

	mov	DWORD PTR [esi+4], 0

; 1132 : 		_Right._Mapsize() = 0;

	mov	DWORD PTR [esi+8], 0

; 1133 : 		_Right._Myoff() = 0;

	mov	DWORD PTR [esi+12], 0

; 1134 : 		_Right._Mysize() = 0;

	mov	DWORD PTR [esi+16], 0
	pop	esi

; 1135 : 		}

	pop	ebp
	ret	8
?_Assign_rv@?$deque@KV?$allocator@K@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??4?$deque@KV?$allocator@K@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4?$deque@KV?$allocator@K@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::operator=, COMDAT
; _this$ = ecx

; 1112 : 		{	// assign by moving _Right

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??4?$deque@KV?$allocator@K@std@@@std@@QAEAAV01@$$QAV01@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	push	edi

; 1113 : 		if (this != _STD addressof(_Right))

	mov	edi, DWORD PTR __Right$[ebp]
	mov	esi, ecx
	cmp	esi, edi
	je	SHORT $LN302@operator

; 1114 : 			{	// different, assign it
; 1115 : 			_Tidy();

	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 259  : 	_Myproxy = _Right._Myproxy;

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [esi], eax

; 260  : 	_Right._Myproxy = _Temp;

	mov	DWORD PTR [edi], edx

; 261  : 
; 262  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN191@operator

; 263  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	DWORD PTR [eax], esi
$LN191@operator:

; 264  : 	if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN192@operator

; 265  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	DWORD PTR [eax], edi
$LN192@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1126 : 		this->_Map() = _Right._Map();

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], eax

; 1127 : 		this->_Mapsize() = _Right._Mapsize();

	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax

; 1128 : 		this->_Myoff() = _Right._Myoff();

	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax

; 1129 : 		this->_Mysize() = _Right._Mysize();

	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax

; 1130 : 
; 1131 : 		_Right._Map() = _Mapptr();

	mov	DWORD PTR [edi+4], 0

; 1132 : 		_Right._Mapsize() = 0;

	mov	DWORD PTR [edi+8], 0

; 1133 : 		_Right._Myoff() = 0;

	mov	DWORD PTR [edi+12], 0

; 1134 : 		_Right._Mysize() = 0;

	mov	DWORD PTR [edi+16], 0
$LN302@operator:

; 1116 : 			this->_Move_alloc(_Right._Getal());
; 1117 : 			_Assign_rv(_STD move(_Right),
; 1118 : 				typename _Alty::propagate_on_container_move_assignment());
; 1119 : 			}
; 1120 : 		return (*this);
; 1121 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$deque@KV?$allocator@K@std@@@std@@QAEAAV01@$$QAV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??4?$deque@KV?$allocator@K@std@@@std@@QAEAAV01@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$deque@KV?$allocator@K@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::operator=
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1017 : 		{	// construct by copying _Right

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [edi+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [edi+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [edi+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [edi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN52@deque
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN120@deque:
$LN52@deque:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [edi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax], edi

; 1018 : 		_Construct(_Right.begin(), _Right.end());

	mov	ecx, DWORD PTR __Right$[ebp]
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	esp
	call	?end@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ ; std::deque<unsigned long,std::allocator<unsigned long> >::end
	mov	ecx, DWORD PTR __Right$[ebp]
	sub	esp, 12					; 0000000cH
	push	esp
	call	?begin@?$deque@KV?$allocator@K@std@@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@2@XZ ; std::deque<unsigned long,std::allocator<unsigned long> >::begin
	mov	ecx, edi
	call	??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@@?$deque@KV?$allocator@K@std@@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@1@0@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Construct<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<unsigned long> > > >

; 1019 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	mov	DWORD PTR fs:0, ecx
	pop	edi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN119@deque:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::~_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
__ehhandler$??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??0?$deque@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$deque@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 989  : 		{	// construct empty deque

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 989  : 		{	// construct empty deque

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [esi+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [esi+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [esi+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN31@deque
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN99@deque:
$LN31@deque:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi

; 990  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN98@deque:
??0?$deque@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::~_Deque_val<std::_Deque_simple_types<unsigned long> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::~_Deque_val<std::_Deque_simple_types<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Getblock@?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QBEII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QBEII@Z PROC ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Getblock, COMDAT
; _this$ = ecx

; 760  : 		{	// determine block from offset

	npad	2
	push	ebp
	mov	ebp, esp

; 761  : 			// NB: _Mapsize and _DEQUESIZ are guaranteed to be powers of 2
; 762  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR __Off$[ebp]
	dec	eax
	shr	ecx, 2
	and	eax, ecx

; 763  : 		}

	pop	ebp
	ret	4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QBEII@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??0?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Deque_val<std::_Deque_simple_types<unsigned long> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 757  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+16], 0
	ret	0
??0?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Deque_val<std::_Deque_simple_types<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize, COMDAT
; _this$ = ecx

; 951  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 952  : 		}

	ret	0
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize, COMDAT
; _this$ = ecx

; 946  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 947  : 		}

	ret	0
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff, COMDAT
; _this$ = ecx

; 941  : 		return (_Get_data()._Myoff);

	lea	eax, DWORD PTR [ecx+12]

; 942  : 		}

	ret	0
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff, COMDAT
; _this$ = ecx

; 936  : 		return (_Get_data()._Myoff);

	lea	eax, DWORD PTR [ecx+12]

; 937  : 		}

	ret	0
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mapsize, COMDAT
; _this$ = ecx

; 926  : 		return (_Get_data()._Mapsize);

	lea	eax, DWORD PTR [ecx+8]

; 927  : 		}

	ret	0
?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mapsize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Map@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAPAKXZ
_TEXT	SEGMENT
?_Map@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAPAKXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Map, COMDAT
; _this$ = ecx

; 916  : 		return (_Get_data()._Map);

	lea	eax, DWORD PTR [ecx+4]

; 917  : 		}

	ret	0
?_Map@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAPAKXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Map
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data, COMDAT
; _this$ = ecx

; 911  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 912  : 		}

	ret	0
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data, COMDAT
; _this$ = ecx

; 906  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 907  : 		}

	ret	0
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal, COMDAT
; _this$ = ecx

; 901  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 902  : 		}

	ret	0
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal, COMDAT
; _this$ = ecx

; 896  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 897  : 		}

	ret	0
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Swap_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Swap_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXAAV12@@Z PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Swap_all, COMDAT
; _this$ = ecx

; 890  : 		{	// swap all iterators

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 258  : 	_Container_proxy *_Temp = _Myproxy;

	mov	edx, DWORD PTR [ecx]
	push	esi

; 259  : 	_Myproxy = _Right._Myproxy;

	mov	esi, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax

; 260  : 	_Right._Myproxy = _Temp;

	mov	DWORD PTR [esi], edx

; 261  : 
; 262  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN16@Swap_all

; 263  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	DWORD PTR [eax], ecx
$LN16@Swap_all:

; 264  : 	if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN17@Swap_all

; 265  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	DWORD PTR [eax], esi
$LN17@Swap_all:
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 892  : 		}

	pop	ebp
	ret	4
?_Swap_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Swap_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 886  : 		_Get_data()._Orphan_all();
; 887  : 		}

	ret	0
?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myproxy, COMDAT
; _this$ = ecx

; 876  : 		return (_Get_data()._Myproxy);

	mov	eax, ecx

; 877  : 		}

	ret	0
?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 860  : 		{	// destroy proxy

	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi

; 867  : 		}

	ret	0
?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 851  : 		{	// construct proxy

	npad	2
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 851  : 		{	// construct proxy

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN20@Alloc_prox
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN86@Alloc_prox:
$LN20@Alloc_prox:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
	pop	esi

; 857  : 		}

	ret	0
$LN85@Alloc_prox:
?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Move_alloc@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?_Move_alloc@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@@Z PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Move_alloc, COMDAT
; _this$ = ecx

; 835  : 		const bool _Reload = _Alty::propagate_on_container_move_assignment::value && _Getal() != _Al;
; 836  : 
; 837  : 		if (_Reload)
; 838  : 			{
; 839  : 			_Free_proxy();
; 840  : 			}
; 841  : 
; 842  : 		_Pocma(_Getal(), _Al);
; 843  : 
; 844  : 		if (_Reload)
; 845  : 			{
; 846  : 			_Alloc_proxy();
; 847  : 			}
; 848  : 		}

	ret	4
?_Move_alloc@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@@Z ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Move_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::~_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 812  : 		{	// destroy proxy

	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi

; 813  : 		_Free_proxy();
; 814  : 		}

	ret	0
??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::~_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??0?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 798  : 		{	// default construct allocator

	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [esi+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [esi+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [esi+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN28@Deque_allo
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN95@Deque_allo:
$LN28@Deque_allo:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi

; 799  : 		_Alloc_proxy();
; 800  : 		}

	mov	eax, esi
	pop	esi
	ret	0
$LN94@Deque_allo:
??0?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEII@Z PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getblock, COMDAT
; _this$ = ecx

; 792  : 		{	// determine block from offset

	npad	2
	push	ebp
	mov	ebp, esp

; 762  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR __Off$[ebp]
	dec	eax
	shr	ecx, 2
	and	eax, ecx

; 793  : 		return (_Get_data()._Getblock(_Off));
; 794  : 		}

	pop	ebp
	ret	4
?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEII@Z ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getblock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEXPAPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEXPAPAKI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long *> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEXPAPAKI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEPAPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEPAPAKI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long *> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@PAK@std@@QAEPAPAKI@Z ; std::allocator<unsigned long *>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEPAPAKI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@PAK@std@@QAEPAPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAK@std@@QAEPAPAKI@Z PROC		; std::allocator<unsigned long *>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@PAK@std@@QAEPAPAKI@Z ENDP		; std::allocator<unsigned long *>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAK@std@@QAEXPAPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAK@std@@QAEXPAPAKI@Z PROC	; std::allocator<unsigned long *>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@PAK@std@@QAEXPAPAKI@Z ENDP	; std::allocator<unsigned long *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 1073741823				; 3fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@K@std@@QAEPAKI@Z	; std::allocator<unsigned long>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??4?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEAAU01@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEAAU01@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::operator=, COMDAT
; _this$ = ecx

; 1064 : 		_Mybase::operator=(_STD move(_Right));
; 1065 : 		return (*this);

	mov	eax, ecx

; 1066 : 		}

	ret	4
??4?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEAAU01@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1048 : 		}

	mov	eax, ecx
	ret	4
??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBE?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 1
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBE?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 1013 : 		{	// get allocator to use

	npad	2
	push	ebp
	mov	ebp, esp

; 1014 : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1015 : 		}

	pop	ebp
	ret	8
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBE?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@K@std@@@std@@SA?AV?$allocator@K@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@K@std@@@std@@SA?AV?$allocator@K@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::select_on_container_copy_construction, COMDAT

; 975  : 		{	// get allocator to use

	npad	2
	push	ebp
	mov	ebp, esp

; 976  : 		return (_Al);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 977  : 		}

	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@K@std@@@std@@SA?AV?$allocator@K@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@K@std@@QBEIXZ PROC		; std::allocator<unsigned long>::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@K@std@@QBEIXZ ENDP		; std::allocator<unsigned long>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC		; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 2

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC		; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@K@std@@QAE@ABV01@@Z PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@K@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@K@std@@QAE@XZ PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\widgets\widget.h
;	COMDAT ?isActive@SK_Widget@@QBE_NXZ
_TEXT	SEGMENT
?isActive@SK_Widget@@QBE_NXZ PROC			; SK_Widget::isActive, COMDAT
; _this$ = ecx

; 129  :         bool         isActive        (void) const { return    active;         }

	mov	al, BYTE PTR [ecx+185]
	ret	0
?isActive@SK_Widget@@QBE_NXZ ENDP			; SK_Widget::isActive
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SK_ImGui_WidgetRegistry@@QAE@XZ
_TEXT	SEGMENT
??0SK_ImGui_WidgetRegistry@@QAE@XZ PROC			; SK_ImGui_WidgetRegistry::SK_ImGui_WidgetRegistry, COMDAT
; _this$ = ecx
	mov	BYTE PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 0
	mov	BYTE PTR [ecx+32], 0
	mov	DWORD PTR [ecx+36], 1065353216		; 3f800000H
	ret	0
??0SK_ImGui_WidgetRegistry@@QAE@XZ ENDP			; SK_ImGui_WidgetRegistry::SK_ImGui_WidgetRegistry
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
_TEXT	SEGMENT
?SK_ImGui_Active@@YA_NXZ PROC				; SK_ImGui_Active

; 1466 : static inline bool SK_ImGui_Active (void) { return SK_ImGui_Visible || SK_ReShade_Visible; };

	cmp	BYTE PTR ?SK_ImGui_Visible@@3_NA, 0	; SK_ImGui_Visible
	jne	SHORT $LN3@SK_ImGui_A
	cmp	BYTE PTR ?SK_ReShade_Visible@@3_NA, 0	; SK_ReShade_Visible
	jne	SHORT $LN3@SK_ImGui_A
	xor	al, al
	ret	0
$LN3@SK_ImGui_A:
	mov	al, 1
	ret	0
?SK_ImGui_Active@@YA_NXZ ENDP				; SK_ImGui_Active
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
?SK_GetNaiveConfigPath@@YGPB_WXZ PROC			; SK_GetNaiveConfigPath

; 167  :   return SK_ConfigPath;

	mov	eax, OFFSET ?SK_ConfigPath@@3PA_WA	; SK_ConfigPath

; 168  : }

	ret	0
?SK_GetNaiveConfigPath@@YGPB_WXZ ENDP			; SK_GetNaiveConfigPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2964 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	push	DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32
	test	eax, eax
	je	SHORT $LN29@dynamic

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32, 0
$LN29@dynamic:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+40, 0
	mov	DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+36, 0
	ret	0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2979 : __declspec(selectany) CAtlWinModule _AtlWinModule;

	mov	ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
	call	??0CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::CAtlWinModule
	push	OFFSET ??__F_AtlWinModule@ATL@@YAXXZ	; ATL::`dynamic atexit destructor for '_AtlWinModule''
	call	_atexit
	pop	ecx
	ret	0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlWinModule@ATL@@QAEXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2964 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	push	DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	ecx
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2965 : 	}

	ret	0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2958 : 	{

	npad	2
	push	esi

; 2964 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	push	DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4

; 2958 : 	{

	mov	esi, ecx

; 2964 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	push	esi
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN26@CAtlWinMod

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi+32], 0
$LN26@CAtlWinMod:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+36], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2960 : 	}

	ret	0
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2944 : 	CAtlWinModule()

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movups	XMMWORD PTR [esi+4], xmm0
	lea	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2944 : 	CAtlWinModule()

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movq	QWORD PTR [eax+16], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

	mov	DWORD PTR [esi+32], 0
	mov	DWORD PTR [esi+36], 0
	mov	DWORD PTR [esi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2946 : 		cbSize = sizeof(_ATL_WIN_MODULE);

	mov	DWORD PTR [esi], 44			; 0000002cH

; 8412 : 	pWinModule->m_pCreateWndList = NULL;

	mov	DWORD PTR [esi+28], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN26@CAtlWinMod

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	eax, eax
	jle	SHORT $LN27@CAtlWinMod
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2948 : 		if (FAILED(hr))

	test	eax, eax
$LN27@CAtlWinMod:

; 2953 : 			return;
; 2954 : 		}
; 2955 : 	}

	mov	eax, esi

; 2948 : 		if (FAILED(hr))

	jns	SHORT $LN2@CAtlWinMod

; 2949 : 		{
; 2950 : 			ATLASSERT(0);
; 2951 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2952 : 			cbSize = 0;

	mov	DWORD PTR [esi], 0
	pop	esi

; 2953 : 			return;
; 2954 : 		}
; 2955 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
$LN26@CAtlWinMod:
	mov	eax, esi
$LN2@CAtlWinMod:
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
__$EHRec$ = -12						; size = 12
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??__F_AtlComModule@ATL@@YAXXZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 2615 : 		Term();

	mov	ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?Term@CAtlComModule@ATL@@QAEXXZ		; ATL::CAtlComModule::Term

; 2616 : 	}

	mov	ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
	call	??1_ATL_COM_MODULE70@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
text$yd	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??__F_AtlComModule@ATL@@YAXXZ:
	mov	eax, OFFSET __ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
	push	0
	push	OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A+16
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN4@dynamic

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	eax, eax
	jle	SHORT $LN20@dynamic
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2602 : 		if (FAILED(m_csObjMap.Init()))

	test	eax, eax
$LN20@dynamic:
	jns	SHORT $LN4@dynamic

; 2723 : __declspec(selectany) CAtlComModule _AtlComModule;

	push	OFFSET ??__F_AtlComModule@ATL@@YAXXZ	; ATL::`dynamic atexit destructor for '_AtlComModule''

; 2606 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2723 : __declspec(selectany) CAtlComModule _AtlComModule;

	call	_atexit
	pop	ecx
	ret	0
$LN4@dynamic:
	push	OFFSET ??__F_AtlComModule@ATL@@YAXXZ	; ATL::`dynamic atexit destructor for '_AtlComModule''

; 2610 : 		cbSize = sizeof(_ATL_COM_MODULE);

	mov	DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A, 40 ; 00000028H

; 2723 : __declspec(selectany) CAtlComModule _AtlComModule;

	call	_atexit
	pop	ecx
	ret	0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlComModule@ATL@@QAEXXZ PROC			; ATL::CAtlComModule::Term, COMDAT
; _this$ = ecx

; 2620 : 	{

	npad	2
	push	edi
	mov	edi, ecx

; 2621 : 		if (cbSize == 0)

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN1@Term

; 2622 : 			return;
; 2623 : 
; 2624 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

	push	esi
	mov	esi, DWORD PTR [edi+8]
	cmp	esi, DWORD PTR [edi+12]
	jae	SHORT $LN3@Term
	push	ebx
$LL4@Term:

; 2625 : 		{
; 2626 : 			if (*ppEntry != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@Term

; 2627 : 			{
; 2628 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

	mov	ebx, DWORD PTR [eax+16]

; 2629 : 
; 2630 : 				if (pCache->pCF != NULL)

	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN2@Term

; 2631 : 				{
; 2632 : 					// Decode factory pointer if it's not null
; 2633 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

	push	eax
	call	DWORD PTR __imp__DecodePointer@4

; 2634 : 					_Analysis_assume_(factory != nullptr);
; 2635 : 					factory->Release();

	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]

; 2636 : 					pCache->pCF = NULL;

	mov	DWORD PTR [ebx], 0
$LN2@Term:

; 2622 : 			return;
; 2623 : 
; 2624 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

	add	esi, 4
	cmp	esi, DWORD PTR [edi+12]
	jb	SHORT $LL4@Term
	pop	ebx
$LN3@Term:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 181  : 		DeleteCriticalSection(&m_sec);

	lea	eax, DWORD PTR [edi+16]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2644 : 		cbSize = 0;

	mov	DWORD PTR [edi], 0
	pop	esi
$LN1@Term:
	pop	edi

; 2645 : 	}

	ret	0
?Term@CAtlComModule@ATL@@QAEXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT
; _this$ = ecx

; 2614 : 	{

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1CAtlComModule@ATL@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 2615 : 		Term();

	call	?Term@CAtlComModule@ATL@@QAEXXZ		; ATL::CAtlComModule::Term

; 2616 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlComModule@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT
; _this$ = ecx

; 2593 : 	CAtlComModule() throw()

	npad	2
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
	lea	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movups	XMMWORD PTR [eax], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movq	QWORD PTR [eax+16], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2595 : 		cbSize = 0;

	mov	DWORD PTR [esi], 0

; 2596 : 
; 2597 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

	mov	DWORD PTR [esi+4], OFFSET ___ImageBase

; 2598 : 
; 2599 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

	mov	DWORD PTR [esi+8], OFFSET ___pobjMapEntryFirst+4

; 2600 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

	mov	DWORD PTR [esi+12], OFFSET ___pobjMapEntryLast
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN2@CAtlComMod

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	eax, eax
	jle	SHORT $LN18@CAtlComMod
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 2602 : 		if (FAILED(m_csObjMap.Init()))

	test	eax, eax
$LN18@CAtlComMod:
	jns	SHORT $LN2@CAtlComMod

; 2611 : 	}

	mov	eax, esi
	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
	pop	esi
	ret	0
$LN2@CAtlComMod:

; 2603 : 		{
; 2604 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));
; 2605 : 			ATLASSERT(0);
; 2606 : 			CAtlBaseModule::m_bInitFailed = true;
; 2607 : 			return;
; 2608 : 		}
; 2609 : 		// Set cbSize on success.
; 2610 : 		cbSize = sizeof(_ATL_COM_MODULE);

	mov	DWORD PTR [esi], 40			; 00000028H

; 2611 : 	}

	mov	eax, esi
	pop	esi
	ret	0
??0CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7660 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 7661 : 	if (pWinModule == NULL)

	mov	esi, DWORD PTR _pWinModule$[ebp]
	test	esi, esi
	jne	SHORT $LN5@AtlWinModu
$LN35@AtlWinModu:

; 7662 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	pop	esi

; 7674 : }

	pop	ebp
	ret	8
$LN5@AtlWinModu:

; 7663 : 	if (pWinModule->cbSize == 0)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN34@AtlWinModu

; 7664 : 		return S_OK;
; 7665 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

	cmp	eax, 44					; 0000002cH
	jne	SHORT $LN35@AtlWinModu

; 7666 : 		return E_INVALIDARG;
; 7667 : 
; 7668 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

	push	edi
	xor	edi, edi
	cmp	DWORD PTR [esi+36], edi
	jle	SHORT $LN3@AtlWinModu

; 7669 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

	push	ebx
	mov	ebx, DWORD PTR _hInst$[ebp]
	npad	2
$LL4@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

	test	edi, edi
	js	SHORT $LN36@AtlWinModu
	cmp	edi, DWORD PTR [esi+36]
	jge	SHORT $LN36@AtlWinModu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 7669 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

	mov	eax, DWORD PTR [esi+32]
	push	ebx
	movzx	eax, WORD PTR [eax+edi*2]
	push	eax
	call	DWORD PTR __imp__UnregisterClassW@8
	inc	edi
	cmp	edi, DWORD PTR [esi+36]
	jl	SHORT $LL4@AtlWinModu
	pop	ebx
$LN3@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi+32]
	pop	edi
	test	eax, eax
	je	SHORT $LN20@AtlWinModu

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi+32], 0
$LN20@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 181  : 		DeleteCriticalSection(&m_sec);

	lea	eax, DWORD PTR [esi+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 223  : 		m_nSize = 0;

	mov	DWORD PTR [esi+36], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 181  : 		DeleteCriticalSection(&m_sec);

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 181  : 		DeleteCriticalSection(&m_sec);

	call	DWORD PTR __imp__DeleteCriticalSection@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 7672 : 	pWinModule->cbSize = 0;

	mov	DWORD PTR [esi], 0
$LN34@AtlWinModu:

; 7673 : 	return S_OK;

	xor	eax, eax
	pop	esi

; 7674 : }

	pop	ebp
	ret	8
$LN36@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

	push	1
	push	-1073741684				; c000008cH
	call	?_AtlRaiseException@ATL@@YAXKK@Z	; ATL::_AtlRaiseException
$LN37@AtlWinModu:
$LN33@AtlWinModu:
	int	3
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8404 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 8405 : 	if (pWinModule == NULL)

	mov	eax, DWORD PTR _pWinModule$[ebp]
	test	eax, eax
	jne	SHORT $LN2@AtlWinModu
$LN15@AtlWinModu:

; 8406 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H

; 8421 : }

	pop	ebp
	ret	4
$LN2@AtlWinModu:

; 8407 : 
; 8408 : 	// check only in the DLL
; 8409 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

	cmp	DWORD PTR [eax], 44			; 0000002cH
	jne	SHORT $LN15@AtlWinModu
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 170  : 		HRESULT hRes = S_OK;

	xor	esi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 8412 : 	pWinModule->m_pCreateWndList = NULL;

	mov	DWORD PTR [eax+28], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	esi
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	add	eax, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	eax
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN14@AtlWinModu

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
	mov	esi, eax
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	esi, esi
	jle	SHORT $LN14@AtlWinModu
	movzx	esi, si
	or	esi, -2147024896			; 80070000H
$LN14@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlbase.h

; 8420 : 	return hr;

	mov	eax, esi
	pop	esi

; 8421 : }

	pop	ebp
	ret	4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN19@ATL_WIN_MO

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi+32], 0
$LN19@ATL_WIN_MO:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+36], 0
	pop	esi
	ret	0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	xorps	xmm0, xmm0
	mov	DWORD PTR _this$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movups	XMMWORD PTR [ecx+4], xmm0
	mov	eax, ecx
	movq	QWORD PTR [ecx+20], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

	mov	DWORD PTR [ecx+32], 0
	mov	DWORD PTR [ecx+36], 0
	mov	DWORD PTR [ecx+40], 0
	mov	esp, ebp
	pop	ebp
	ret	0
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 236  : 	{

	npad	2
	push	ebp
	mov	ebp, esp

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);
; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

	mov	edx, DWORD PTR _nIndex$[ebp]
	test	edx, edx
	js	SHORT $LN6@operator
	cmp	edx, DWORD PTR [ecx+4]
	jge	SHORT $LN6@operator

; 241  : 		}
; 242  : 		return m_aT[nIndex];

	mov	eax, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+edx*2]

; 243  : 	}

	pop	ebp
	ret	4
$LN6@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

	push	1
	push	-1073741684				; c000008cH
	call	?_AtlRaiseException@ATL@@YAXKK@Z	; ATL::_AtlRaiseException
$LN7@operator:
$LN5@operator:
	int	3
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 215  : 	{

	npad	2
	push	esi
	mov	esi, ecx

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi], 0
$LN11@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+4], 0
	pop	esi

; 225  :     }

	ret	0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx

; 161  : 		return m_nSize;

	mov	eax, DWORD PTR [ecx+4]

; 162  : 	}

	ret	0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 310  : {

	npad	2
	push	esi
	mov	esi, ecx

; 216  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@CSimpleArr

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4

; 221  : 			m_aT = NULL;

	mov	DWORD PTR [esi], 0
$LN13@CSimpleArr:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+4], 0
	pop	esi

; 311  : 	RemoveAll();
; 312  : }

	ret	0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

	mov	DWORD PTR [ecx], 0

; 121  : 	}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??1_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
	ret	0
??1_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??0_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
	xorps	xmm0, xmm0
	mov	eax, ecx

; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	movups	XMMWORD PTR [ecx+16], xmm0
	movq	QWORD PTR [ecx+32], xmm0
	ret	0
??0_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 316  : 		return m_hInst;

	mov	eax, DWORD PTR [ecx+4]

; 317  : 	}

	ret	0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 180  : 	{

	npad	2

; 181  : 		DeleteCriticalSection(&m_sec);

	push	ecx
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 182  : 		return S_OK;

	xor	eax, eax

; 183  : 	}

	ret	0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Init@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	0
	push	0
	push	ecx
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 171  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

	test	eax, eax
	jne	SHORT $LN10@Init

; 172  : 		{
; 173  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

	call	DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	test	eax, eax
	jle	SHORT $LN9@Init
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h

; 177  : 	}

	ret	0
$LN10@Init:

; 174  : 		}
; 175  : 
; 176  : 		return hRes;

	xor	eax, eax
$LN9@Init:

; 177  : 	}

	ret	0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx

; 156  : 	}

	ret	0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 149  : 	CComCriticalSection() throw()

	xorps	xmm0, xmm0

; 150  : 	{
; 151  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));
; 152  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm0
	ret	0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
_lpCriticalSection$ = 8					; size = 4
_dwSpinCount$ = 12					; size = 4
_Flags$ = 16						; size = 4
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

	push	DWORD PTR _Flags$[ebp]
	push	DWORD PTR _dwSpinCount$[ebp]
	push	DWORD PTR _lpCriticalSection$[ebp]
	call	DWORD PTR __imp__InitializeCriticalSectionEx@12

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

	pop	ebp
	ret	0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

	npad	2
	push	ebp
	mov	ebp, esp

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

	push	0
	push	0
	push	DWORD PTR _dwExceptionFlags$[ebp]
	push	DWORD PTR _dwExceptionCode$[ebp]
	call	DWORD PTR __imp__RaiseException@16

; 32   : }

	pop	ebp
	ret	0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT
; _this$ = ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

	mov	eax, ecx
	ret	4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC	; InterlockedExchangePointer, COMDAT

; 91   : {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(

	mov	eax, DWORD PTR _pNew$[ebp]
	mov	ecx, DWORD PTR _pp$[ebp]
	xchg	DWORD PTR [ecx], eax

; 93   : 		::InterlockedExchange(reinterpret_cast<LONG*>(pp), 
; 94   : 			static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );
; 95   : }

	pop	ebp
	ret	8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SK_ICommand@@QAE@XZ
_TEXT	SEGMENT
??0SK_ICommand@@QAE@XZ PROC				; SK_ICommand::SK_ICommand, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7SK_ICommand@@6B@
	mov	eax, ecx
	ret	0
??0SK_ICommand@@QAE@XZ ENDP				; SK_ICommand::SK_ICommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
;	COMDAT ?getNumRequiredArgs@SK_ICommand@@UAEHXZ
_TEXT	SEGMENT
?getNumRequiredArgs@SK_ICommand@@UAEHXZ PROC		; SK_ICommand::getNumRequiredArgs, COMDAT
; _this$ = ecx

; 81   :   virtual int         getNumRequiredArgs (void) {

	npad	2
	push	esi
	push	edi
	mov	edi, ecx

; 82   :     return getNumArgs () - getNumOptionalArgs ();

	mov	eax, DWORD PTR [edi]
	call	DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edi]
	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR [edx+8]
	pop	edi
	sub	eax, esi
	pop	esi

; 83   :   }

	ret	0
?getNumRequiredArgs@SK_ICommand@@UAEHXZ ENDP		; SK_ICommand::getNumRequiredArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
;	COMDAT ?getNumOptionalArgs@SK_ICommand@@UAEHXZ
_TEXT	SEGMENT
?getNumOptionalArgs@SK_ICommand@@UAEHXZ PROC		; SK_ICommand::getNumOptionalArgs, COMDAT
; _this$ = ecx

; 80   :   virtual int         getNumOptionalArgs (void) { return 0; }

	xor	eax, eax
	ret	0
?getNumOptionalArgs@SK_ICommand@@UAEHXZ ENDP		; SK_ICommand::getNumOptionalArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
;	COMDAT ?getNumArgs@SK_ICommand@@UAEHXZ
_TEXT	SEGMENT
?getNumArgs@SK_ICommand@@UAEHXZ PROC			; SK_ICommand::getNumArgs, COMDAT
; _this$ = ecx

; 79   :   virtual int         getNumArgs         (void) { return 0; }

	xor	eax, eax
	ret	0
?getNumArgs@SK_ICommand@@UAEHXZ ENDP			; SK_ICommand::getNumArgs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
;	COMDAT ?getHelp@SK_ICommand@@UAEPBDXZ
_TEXT	SEGMENT
?getHelp@SK_ICommand@@UAEPBDXZ PROC			; SK_ICommand::getHelp, COMDAT
; _this$ = ecx

; 77   :   virtual const char* getHelp            (void) { return "No Help Available"; }

	mov	eax, OFFSET ??_C@_0BC@EBCNAKOF@No?5Help?5Available?$AA@
	ret	0
?getHelp@SK_ICommand@@UAEPBDXZ ENDP			; SK_ICommand::getHelp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ??1SK_ICommandResult@@QAE@XZ
_TEXT	SEGMENT
??1SK_ICommandResult@@QAE@XZ PROC			; SK_ICommandResult::~SK_ICommandResult, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+76]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN7@SK_IComman
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+56]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN7@SK_IComman:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+72], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+76], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi+56], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+52]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN37@SK_IComman
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+32]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN37@SK_IComman:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+48], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+52], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi+32], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+28]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN67@SK_IComman
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi+8]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN67@SK_IComman:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+24], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+28], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi+8], 0
	pop	esi
	ret	0
??1SK_ICommandResult@@QAE@XZ ENDP			; SK_ICommandResult::~SK_ICommandResult
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\include\specialk\command.h
;	COMDAT ??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_word$ = 8						; size = 4
_arguments$ = 12					; size = 4
_result$ = 16						; size = 4
_status$ = 20						; size = 4
_var$ = 24						; size = 4
_cmd$ = 28						; size = 4
??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z PROC ; SK_ICommandResult::SK_ICommandResult, COMDAT
; _this$ = ecx

; 47   :                                                                 result_ (result) {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edi, DWORD PTR _word$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\command.h

; 45   :                       const SK_ICommand*   cmd    = nullptr ) : word_   (word),

	lea	ecx, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edx, edi
; File c:\users\andon\source\repos\specialk\include\specialk\command.h

; 47   :                                                                 result_ (result) {

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx], 0

; 480  : 		return (_CSTD strlen(_First));

	lea	ebx, DWORD PTR [edx+1]
	npad	1
$LL78@SK_IComman:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL78@SK_IComman
	sub	edx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	edx
	push	edi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edi, DWORD PTR _arguments$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\command.h

; 46   :                                                                 args_   (arguments),

	lea	ecx, DWORD PTR [esi+32]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edx, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; File c:\users\andon\source\repos\specialk\include\specialk\command.h

; 45   :                       const SK_ICommand*   cmd    = nullptr ) : word_   (word),

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx], 0

; 480  : 		return (_CSTD strlen(_First));

	lea	ebx, DWORD PTR [edx+1]
$LL79@SK_IComman:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL79@SK_IComman
	sub	edx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	edx
	push	edi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edi, DWORD PTR _result$[ebp]
; File c:\users\andon\source\repos\specialk\include\specialk\command.h

; 47   :                                                                 result_ (result) {

	lea	ecx, DWORD PTR [esi+56]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edx, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; File c:\users\andon\source\repos\specialk\include\specialk\command.h

; 46   :                                                                 args_   (arguments),

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx], 0

; 480  : 		return (_CSTD strlen(_First));

	lea	ebx, DWORD PTR [edx+1]
$LL80@SK_IComman:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL80@SK_IComman
	sub	edx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	edx
	push	edi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\andon\source\repos\specialk\include\specialk\command.h

; 48   :     var_    = var;

	mov	eax, DWORD PTR _var$[ebp]

; 49   :     cmd_    = cmd;
; 50   :     status_ = status;
; 51   :   }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR _cmd$[ebp]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [esi+80], eax
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SK_ICommandResult@@QAE@PBD00HPBUSK_IVariable@@PBUSK_ICommand@@@Z ENDP ; SK_ICommandResult::SK_ICommandResult
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ?unlock@SK_Thread_CriticalSection@@QAEXXZ
_TEXT	SEGMENT
?unlock@SK_Thread_CriticalSection@@QAEXXZ PROC		; SK_Thread_CriticalSection::unlock, COMDAT
; _this$ = ecx

; 274  :     LeaveCriticalSection (cs_);

	push	DWORD PTR [ecx]
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 275  :   }

	ret	0
?unlock@SK_Thread_CriticalSection@@QAEXXZ ENDP		; SK_Thread_CriticalSection::unlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ?lock@SK_Thread_CriticalSection@@QAEXXZ
_TEXT	SEGMENT
?lock@SK_Thread_CriticalSection@@QAEXXZ PROC		; SK_Thread_CriticalSection::lock, COMDAT
; _this$ = ecx

; 269  :     EnterCriticalSection (cs_);

	push	DWORD PTR [ecx]
	call	DWORD PTR __imp__EnterCriticalSection@4

; 270  :   }

	ret	0
?lock@SK_Thread_CriticalSection@@QAEXXZ ENDP		; SK_Thread_CriticalSection::lock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
?SK_GetRootPath@@YGPB_WXZ PROC				; SK_GetRootPath

; 141  :   return SK_RootPath;

	mov	eax, OFFSET ?SK_RootPath@@3PA_WA	; SK_RootPath

; 142  : }

	ret	0
?SK_GetRootPath@@YGPB_WXZ ENDP				; SK_GetRootPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\log.h
;	COMDAT ?auto_close@iSK_Logger@@QAE?AVAutoClose@1@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?auto_close@iSK_Logger@@QAE?AVAutoClose@1@XZ PROC	; iSK_Logger::auto_close, COMDAT
; _this$ = ecx

; 171  :   AutoClose auto_close (void) {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 165  :     AutoClose (iSK_Logger* log) : log_ (log) { }

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR [eax], ecx

; 172  :     return AutoClose (this);
; 173  :   }

	mov	esp, ebp
	pop	ebp
	ret	4
?auto_close@iSK_Logger@@QAE?AVAutoClose@1@XZ ENDP	; iSK_Logger::auto_close
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\log.h
;	COMDAT ??0AutoClose@iSK_Logger@@IAE@PAU1@@Z
_TEXT	SEGMENT
_log$ = 8						; size = 4
??0AutoClose@iSK_Logger@@IAE@PAU1@@Z PROC		; iSK_Logger::AutoClose::AutoClose, COMDAT
; _this$ = ecx

; 165  :     AutoClose (iSK_Logger* log) : log_ (log) { }

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _log$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebp
	ret	4
??0AutoClose@iSK_Logger@@IAE@PAU1@@Z ENDP		; iSK_Logger::AutoClose::AutoClose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\log.h
;	COMDAT ??1AutoClose@iSK_Logger@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1AutoClose@iSK_Logger@@QAE@XZ PROC			; iSK_Logger::AutoClose::~AutoClose, COMDAT
; _this$ = ecx

; 157  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1AutoClose@iSK_Logger@@QAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, ecx

; 158  :       if (log_ != nullptr)

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN4@AutoClose

; 159  :         log_->close ();

	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+20]
$LN4@AutoClose:

; 160  : 
; 161  :       log_ = nullptr;
; 162  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1AutoClose@iSK_Logger@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1AutoClose@iSK_Logger@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AutoClose@iSK_Logger@@QAE@XZ ENDP			; iSK_Logger::AutoClose::~AutoClose
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT

; 3646 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset, COMDAT
; _this$ = ecx

; 3629 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Off$[ebp]
	jb	SHORT $LN14@Check_offs

; 3633 : 			}
; 3634 : 		}

	pop	ebp
	ret	4
$LN14@Check_offs:

; 3631 : 			{
; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN16@Check_offs:
$LN13@Check_offs:
	int	3
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 3625 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3602 : 		}

	ret	0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx

; 3588 : 		{	// test if _Ptr points inside string

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@Inside
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN14@Inside
$LN13@Inside:
	mov	edx, ecx
$LN14@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	cmp	edx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	eax, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	al, 1

; 3592 : 		}

	pop	ebp
	ret	4
$LN3@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	xor	al, al

; 3592 : 		}

	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx

; 3572 : 		{	// ensure buffer is big enough

	npad	2
	push	ebp
	mov	ebp, esp

; 3573 : 		if (_Newsize == 0)

	mov	eax, DWORD PTR __Newsize$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Grow

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN16@Grow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN16@Grow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3576 : 			return (false);

	xor	al, al

; 3585 : 		}

	pop	ebp
	ret	4
$LN2@Grow:

; 3577 : 			}
; 3578 : 
; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [ecx+20], eax
	jae	SHORT $LN3@Grow

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	eax
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN3@Grow:

; 3582 : 			}
; 3583 : 
; 3584 : 		return (true);	// return true only if more work to do

	mov	al, 1

; 3585 : 		}

	pop	ebp
	ret	4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx

; 3566 : 		{	// set new length and null terminator

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3567 : 		auto& _My_data = this->_Get_data();
; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Eos
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
$LN11@Eos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx+edx*2], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Oldres$ = -28						; size = 4
_this$ = -24						; size = 4
__Ptr$1$ = -20						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newres$ = 8						; size = 4
__Newsize$ = 8						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx

; 3514 : 		{	// reallocate to new buffer of at least _Newsize, copying existing elements there

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 3515 : 		const auto _Max = max_size();
; 3516 : 		if (_Newsize > _Max)

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	eax, 2147483646				; 7ffffffeH
	jbe	SHORT $LN2@Copy

; 3517 : 			{	// too long
; 3518 : 			_Xlen();

	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN102@Copy:
$LN2@Copy:

; 3519 : 			}
; 3520 : 
; 3521 : 		auto& _My_data = this->_Get_data();
; 3522 : 		const size_type _Oldres = _My_data._Myres;

	mov	ebx, DWORD PTR [esi+20]

; 3523 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	edi, eax
	or	edi, 7
	mov	DWORD PTR __Oldres$[ebp], ebx

; 3524 : 		if (_Max < _Newres)

	cmp	edi, 2147483646				; 7ffffffeH
	jbe	SHORT $LN3@Copy

; 3525 : 			{
; 3526 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	edi, eax
	jmp	SHORT $LN8@Copy
$LN3@Copy:

; 3527 : 			}
; 3528 : 		else if (_Oldres / 2 <= _Newres / 3)

	mov	eax, -1431655765			; aaaaaaabH
	mov	ecx, ebx
	mul	edi
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN8@Copy

; 3529 : 			;
; 3530 : 		else if (_Oldres <= _Max - _Oldres / 2)

	mov	eax, 2147483646				; 7ffffffeH

; 3531 : 			{
; 3532 : 			_Newres = _Oldres + _Oldres / 2;	// grow exponentially if possible

	lea	edi, DWORD PTR [ecx+ebx]
	sub	eax, ecx
	cmp	ebx, eax
	jbe	SHORT $LN8@Copy

; 3533 : 			}
; 3534 : 		else
; 3535 : 			{
; 3536 : 			_Newres = _Max;	// settle for max_size()

	mov	edi, 2147483646				; 7ffffffeH
$LN8@Copy:

; 3537 : 			}
; 3538 : 
; 3539 : 		auto& _Al = this->_Getal();
; 3540 : 		pointer _Ptr;
; 3541 : 		_TRY_BEGIN
; 3542 : 			_Ptr = _Al.allocate(_Newres + 1);

	lea	eax, DWORD PTR [edi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	mov	ecx, esi
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
	jmp	SHORT $LN100@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0:

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	mov	ecx, DWORD PTR _this$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	DWORD PTR __Newres$[ebp], eax

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	mov	DWORD PTR __Ptr$[ebp], eax

; 3546 : 		_CATCH_END

	mov	eax, $LN97@Copy
	ret	0
$LN97@Copy:
	mov	esi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR __Oldres$[ebp]
	mov	edi, DWORD PTR __Newres$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN100@Copy:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3546 : 		_CATCH_END

	mov	DWORD PTR __Ptr$1$[ebp], ecx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [eax*2+2]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3550 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN10@Copy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	DWORD PTR [esi]
	push	ecx
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3553 : 			_Al.deallocate(_My_data._Bx._Ptr, _Oldres + 1);

	lea	eax, DWORD PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3556 : 		else

	jmp	SHORT $LN101@Copy
$LN10@Copy:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	esi
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN101@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3563 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3562 : 		_My_data._Myres = _Newres;

	mov	DWORD PTR [esi+20], edi

; 3563 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN99@Copy:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal, COMDAT
; _this$ = ecx

; 3420 : 		{	// compare [0, _Mysize()) with _Ptr for equality

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	push	edi
	mov	edi, edx
	lea	esi, DWORD PTR [edi+2]
	npad	1
$LL51@Equal:
	mov	ax, WORD PTR [edi]
	add	edi, 2
	test	ax, ax
	jne	SHORT $LL51@Equal
	sub	edi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1844 : 		return (_Get_data()._Mysize);

	lea	esi, DWORD PTR [ecx+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	edi, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN25@Equal
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN25@Equal:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3421 : 		return (_Traits_equal<_Traits>(this->_Myptr(), this->_Mysize(), _Ptr, _Traits::length(_Ptr)));

	mov	esi, DWORD PTR [esi]

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	cmp	esi, edi
	jne	SHORT $LN33@Equal
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN50@Equal
$LL42@Equal:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [ecx]
	cmp	ax, WORD PTR [edx]
	jne	SHORT $LN46@Equal

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	ecx, 2
	add	edx, 2
	sub	esi, 1
	jne	SHORT $LL42@Equal
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	al, 1
	pop	esi

; 3422 : 		}

	pop	ebp
	ret	4
$LN46@Equal:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	movzx	eax, WORD PTR [ecx]
	cmp	ax, WORD PTR [edx]
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	jne	SHORT $LN33@Equal
$LN50@Equal:
	pop	edi
	mov	al, 1
	pop	esi

; 3422 : 		}

	pop	ebp
	ret	4
$LN33@Equal:
	pop	edi

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	xor	al, al
	pop	esi

; 3422 : 		}

	pop	ebp
	ret	4
?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 3410 : 		{	// trims _Size to the longest it can be assuming a string at/after _Off

	npad	2
	push	ebp
	mov	ebp, esp

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	mov	ecx, DWORD PTR [ecx+16]
	sub	ecx, DWORD PTR __Off$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	ecx, eax
	cmovb	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3412 : 		}

	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve, COMDAT
; _this$ = ecx

; 3057 : 		{	// determine new minimum length of allocated storage

	npad	2
	push	ebp
	mov	ebp, esp

; 3058 : 		auto& _My_data = this->_Get_data();
; 3059 : 		if (_My_data._Mysize > _Newcap)

	mov	eax, DWORD PTR __Newcap$[ebp]
	push	edi
	mov	edi, ecx
	mov	edx, DWORD PTR [edi+16]
	cmp	edx, eax
	ja	SHORT $LN5@reserve

; 3060 : 			{	// requested capacity is not large enough for current size, ignore
; 3061 : 			return;	// nothing to do
; 3062 : 			}
; 3063 : 
; 3064 : 		if (_My_data._Myres == _Newcap)

	mov	ecx, DWORD PTR [edi+20]
	cmp	ecx, eax
	je	SHORT $LN5@reserve

; 3065 : 			{	// we're already at the requested capacity
; 3066 : 			return;	// nothing to do
; 3067 : 			}
; 3068 : 
; 3069 : 		if (_My_data._Myres < _Newcap)

	jae	SHORT $LN4@reserve

; 3070 : 			{	// reallocate to grow
; 3071 : 			_Copy(_Newcap);

	push	eax
	mov	ecx, edi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	pop	edi

; 3084 : 			return;
; 3085 : 			}
; 3086 : 
; 3087 : 		// ignore requests to reserve to [_BUF_SIZE, _Myres)
; 3088 : 		}

	pop	ebp
	ret	4
$LN4@reserve:

; 3072 : 			return;
; 3073 : 			}
; 3074 : 
; 3075 : 		if (this->_BUF_SIZE > _Newcap && _My_data._Large_string_engaged())

	cmp	eax, 8
	jae	SHORT $LN5@reserve

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 3072 : 			return;
; 3073 : 			}
; 3074 : 
; 3075 : 		if (this->_BUF_SIZE > _Newcap && _My_data._Large_string_engaged())

	jb	SHORT $LN5@reserve

; 3076 : 			{	// deallocate everything; switch back to "small" mode
; 3077 : 			this->_Orphan_all();
; 3078 : 			pointer _Ptr = _My_data._Bx._Ptr;

	push	esi
	mov	esi, DWORD PTR [edi]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [edx*2+2]
	push	eax
	push	esi
	push	edi
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3082 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	mov	eax, DWORD PTR [edi+20]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3082 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	esi
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3083 : 			_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edi+20], 7
	pop	esi
$LN5@reserve:
	pop	edi

; 3084 : 			return;
; 3085 : 			}
; 3086 : 
; 3087 : 		// ignore requests to reserve to [_BUF_SIZE, _Myres)
; 3088 : 		}

	pop	ebp
	ret	4
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?capacity@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::capacity, COMDAT
; _this$ = ecx

; 3053 : 		return (this->_Myres());

	mov	eax, DWORD PTR [ecx+20]

; 3054 : 		}

	ret	0
?capacity@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 3030 : 		const size_type _Num = this->_Getal().max_size();
; 3031 : 		return (_Num <= 1 ? 1 : _Num - 1);

	mov	eax, 2147483646				; 7ffffffeH

; 3032 : 		}

	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT
; _this$ = ecx

; 3025 : 		return (this->_Mysize());

	mov	eax, DWORD PTR [ecx+16]

; 3026 : 		}

	ret	0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@c_str

; 3003 : 		return (this->_Myptr());

	mov	eax, DWORD PTR [ecx]

; 3004 : 		}

	ret	0
$LN13@c_str:

; 3003 : 		return (this->_Myptr());

	mov	eax, ecx

; 3004 : 		}

	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	push	ebx
	push	esi

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	mov	esi, ecx
	push	edi

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edi, DWORD PTR [esi+16]
	cmp	edi, edx
	jb	$LN97@erase

; 2593 : 		_Check_offset(_Off);
; 2594 : 		if (this->_Mysize() - _Off <= _Count)

	mov	ebx, DWORD PTR __Count$[ebp]
	mov	eax, edi
	sub	eax, edx
	cmp	eax, ebx
	ja	SHORT $LN2@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN38@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN38@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2607 : 		}

	pop	ebp
	ret	8
$LN2@erase:

; 2595 : 			{
; 2596 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 2597 : 			}
; 2598 : 		else if (_Count != 0)

	test	ebx, ebx
	je	SHORT $LN94@erase

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN57@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN58@erase
$LN57@erase:
	mov	eax, esi
$LN58@erase:

; 2599 : 			{	// move elements down
; 2600 : 			value_type *_Ptr = this->_Myptr() + _Off;

	lea	ecx, DWORD PTR [eax+edx*2]

; 2601 : 			size_type _Newsize = this->_Mysize() - _Count;

	sub	edi, ebx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, edi
	sub	eax, edx
	add	eax, eax
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2602 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	lea	eax, DWORD PTR [ecx+ebx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN87@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN87@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
$LN94@erase:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN97@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN99@erase:
$LN96@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2585 : 		{	// erase elements [_Off, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR __Off$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jb	SHORT $LN36@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN26@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN26@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	edx, ecx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN36@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN38@erase:
$LN35@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@II@Z
_TEXT	SEGMENT
__Num$1$ = -4						; size = 4
__Off$ = 8						; size = 4
tv810 = 12						; size = 4
__Right$ = 12						; size = 4
__Roff$ = 16						; size = 4
tv797 = 20						; size = 4
__Count$ = 20						; size = 4
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert, COMDAT
; _this$ = ecx

; 2461 : 		{	// insert _Right [_Roff, _Roff + _Count) at _Off

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	push	ebx
	push	esi

; 2461 : 		{	// insert _Right [_Roff, _Roff + _Count) at _Off

	mov	esi, ecx
	push	edi

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR [esi+16]
	cmp	ecx, edx
	jb	$LN245@insert
	mov	edi, DWORD PTR __Right$[ebp]
	mov	ebx, DWORD PTR __Roff$[ebp]
	mov	eax, DWORD PTR [edi+16]
	cmp	eax, ebx
	jb	$LN247@insert

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	eax, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	ebx, DWORD PTR __Count$[ebp]
	cmp	eax, ebx
	cmovb	ebx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2465 : 		if (npos - this->_Mysize() <= _Count)

	mov	eax, ecx
	not	eax
	cmp	eax, ebx
	jbe	$LN248@insert

; 2468 : 			}
; 2469 : 
; 2470 : 		const size_type _Num = this->_Mysize() + _Count;

	lea	eax, DWORD PTR [ecx+ebx]
	mov	DWORD PTR __Num$1$[ebp], eax

; 2471 : 		if (_Count != 0 && _Grow(_Num))

	test	ebx, ebx
	je	$LN240@insert

; 3573 : 		if (_Newsize == 0)

	test	eax, eax
	jne	SHORT $LN66@insert

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN79@insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2488 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2489 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN79@insert:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2489 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN66@insert:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], eax
	jae	SHORT $LN67@insert

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	eax
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	mov	edx, DWORD PTR __Off$[ebp]
$LN67@insert:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN116@insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR tv810[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN117@insert
$LN116@insert:
	mov	DWORD PTR tv810[ebp], esi
$LN117@insert:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN132@insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN133@insert
$LN132@insert:
	mov	ecx, esi
$LN133@insert:

; 2473 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	lea	eax, DWORD PTR [edx+edx]
	mov	DWORD PTR tv797[ebp], eax
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR [esi+16]
	sub	eax, edx
	add	eax, eax
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2473 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	mov	eax, DWORD PTR tv810[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	lea	eax, DWORD PTR [edx+ebx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2473 : 			_Traits::move(this->_Myptr() + _Off + _Count,

	lea	eax, DWORD PTR [ecx+eax*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2476 : 			if (this == _STD addressof(_Right))

	cmp	esi, edi
	jne	SHORT $LN4@insert

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN156@insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edi, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN157@insert
$LN156@insert:
	mov	edi, esi
$LN157@insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	eax, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR __Roff$[ebp]
	cmp	eax, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR __Off$[ebp]
	cmovae	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN175@insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN176@insert
$LN175@insert:
	mov	ecx, esi
$LN176@insert:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [ebx+ebx]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2478 : 				_Traits::move(this->_Myptr() + _Off, this->_Myptr() + _Min_value(_Off, _Roff), _Count);	// substring

	mov	eax, DWORD PTR [edx]
	lea	eax, DWORD PTR [edi+eax*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2478 : 				_Traits::move(this->_Myptr() + _Off, this->_Myptr() + _Min_value(_Off, _Roff), _Count);	// substring

	mov	eax, DWORD PTR tv797[ebp]
	add	eax, ecx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	call	DWORD PTR __imp__memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2480 : 			else

	jmp	SHORT $LN244@insert
$LN4@insert:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [edi+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN196@insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edi, DWORD PTR [edi]
$LN196@insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN212@insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN213@insert
$LN212@insert:
	mov	ecx, esi
$LN213@insert:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [ebx+ebx]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2482 : 				_Traits::copy(this->_Myptr() + _Off, _Right._Myptr() + _Roff, _Count);	// fill hole

	mov	eax, DWORD PTR __Roff$[ebp]
	lea	eax, DWORD PTR [edi+eax*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2482 : 				_Traits::copy(this->_Myptr() + _Off, _Right._Myptr() + _Roff, _Count);	// fill hole

	mov	eax, DWORD PTR tv797[ebp]
	add	eax, ecx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	call	_memcpy
$LN244@insert:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	eax, DWORD PTR __Num$1$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], eax

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN233@insert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edx, edx
	pop	edi
	mov	WORD PTR [ecx+eax*2], dx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2488 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2489 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN233@insert:

; 1614 : 		return (_Large_string_engaged()

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edx, edx
	mov	WORD PTR [ecx+eax*2], dx
$LN240@insert:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2488 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2489 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN245@insert:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN249@insert:
$LN247@insert:
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN250@insert:
$LN248@insert:

; 2466 : 			{
; 2467 : 			_Xlen();	// result too long

	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN251@insert:
$LN243@insert:
	int	3
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Right$ = 12						; size = 4
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert, COMDAT
; _this$ = ecx

; 2456 : 		{	// insert _Right at _Off

	npad	2
	push	ebp
	mov	ebp, esp

; 2457 : 		return (insert(_Off, _Right, 0, npos));

	push	-1
	push	0
	push	DWORD PTR __Right$[ebp]
	push	DWORD PTR __Off$[ebp]
	call	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert

; 2458 : 		}

	pop	ebp
	ret	8
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2428 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2428 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL6@assign:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL6@assign
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2430 : 		}

	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2412 : 		{	// assign [_Ptr, _Ptr + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN17@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN18@assign
$LN17@assign:
	mov	edx, esi
$LN18@assign:

; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	mov	edi, DWORD PTR __Ptr$[ebp]
	cmp	edx, edi
	ja	SHORT $LN2@assign
	mov	eax, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	edi, eax
	jae	SHORT $LN2@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN33@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN34@assign
$LN33@assign:
	mov	eax, esi
$LN34@assign:

; 2413 : 		if (_Inside(_Ptr))
; 2414 : 			{
; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]
	sub	edi, eax
	mov	ecx, esi
	sar	edi, 1
	push	edi
	push	esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN2@assign:
	push	ebx

; 3573 : 		if (_Newsize == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	jne	SHORT $LN40@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN53@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN53@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	pop	esi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
$LN40@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	ecx, ebx
	jae	SHORT $LN41@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	ebx
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN41@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN81@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN82@assign
$LN81@assign:
	mov	eax, esi
$LN82@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	ecx, DWORD PTR [ebx+ebx]
	push	ecx
	push	edi
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN102@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN102@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
	pop	ebx
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	mov	esi, ecx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR __Roff$[ebp]
	push	edi
	mov	eax, DWORD PTR [ebx+16]
	cmp	eax, ecx
	jb	$LN161@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	cmp	eax, edi
	cmovb	edi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2382 : 		if (this == _STD addressof(_Right))

	cmp	esi, ebx
	jne	SHORT $LN2@assign

; 2383 : 			{	// substring
; 2384 : 			erase(_Roff + _Count);

	lea	eax, DWORD PTR [ecx+edi]

; 3630 : 		if (this->_Mysize() < _Off)

	cmp	DWORD PTR [esi+16], eax
	jb	$LN163@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN62@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN63@assign
$LN62@assign:
	mov	edx, esi
$LN63@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	push	ecx
	push	edi
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx+eax*2], di
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	pop	edi

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@assign:

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN72@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN85@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN85@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN72@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], edi
	jae	SHORT $LN73@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	mov	ecx, DWORD PTR __Roff$[ebp]
$LN73@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN113@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN113@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN129@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN130@assign
$LN129@assign:
	mov	edx, esi
$LN130@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [edi+edi]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2389 : 			_Traits::copy(this->_Myptr(), _Right._Myptr() + _Roff, _Count);

	lea	eax, DWORD PTR [ebx+ecx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN150@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN150@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN161@assign:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN164@assign:
$LN163@assign:
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN165@assign:
$LN160@assign:
	int	3
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx

; 2343 : 		{	// append [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2343 : 		{	// append [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL6@append:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL6@append
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
	pop	edi
	pop	esi

; 2345 : 		}

	pop	ebp
	ret	4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx

; 2321 : 		{	// append [_Ptr, _Ptr + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	edx, DWORD PTR [esi+20]
	cmp	edx, 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN19@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [esi]
$LN19@append:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	mov	edi, DWORD PTR __Ptr$[ebp]
	cmp	ecx, edi
	ja	SHORT $LN2@append
	mov	eax, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [ecx+eax*2]
	cmp	edi, eax
	jae	SHORT $LN2@append

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	edx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN34@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN35@append
$LN34@append:
	mov	eax, esi
$LN35@append:

; 2322 : 		if (_Inside(_Ptr))
; 2323 : 			{
; 2324 : 			return (append(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]
	sub	edi, eax
	mov	ecx, esi
	sar	edi, 1
	push	edi
	push	esi
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
	pop	edi
	pop	esi

; 2340 : 		}

	pop	ebp
	ret	8
$LN2@append:

; 2325 : 			}
; 2326 : 
; 2327 : 		if (npos - this->_Mysize() <= _Count)

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ebx
	mov	ebx, DWORD PTR [esi+16]
	mov	eax, ebx
	not	eax
	cmp	eax, ecx
	jbe	$LN142@append

; 2330 : 			}
; 2331 : 
; 2332 : 		const size_type _Num = this->_Mysize() + _Count;

	add	ebx, ecx

; 2333 : 		if (_Count != 0 && _Grow(_Num))

	test	ecx, ecx
	je	SHORT $LN137@append

; 3573 : 		if (_Newsize == 0)

	test	ebx, ebx
	jne	SHORT $LN59@append

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	edx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN72@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2339 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2340 : 		}

	pop	ebp
	ret	8
$LN72@append:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	pop	esi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2340 : 		}

	pop	ebp
	ret	8
$LN59@append:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	edx, ebx
	jae	SHORT $LN60@append

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	ebx
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	mov	ecx, DWORD PTR __Count$[ebp]
$LN60@append:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN100@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN101@append
$LN100@append:
	mov	edx, esi
$LN101@append:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [ecx+ecx]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2335 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

	mov	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2335 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

	lea	eax, DWORD PTR [edx+eax*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN130@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2339 : 		return (*this);

	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi

; 2340 : 		}

	pop	ebp
	ret	8
$LN130@append:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
$LN137@append:
	pop	ebx
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2339 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2340 : 		}

	pop	ebp
	ret	8
$LN142@append:

; 2328 : 			{
; 2329 : 			_Xlen();	// result too long

	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN144@append:
$LN141@append:
	int	3
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
tv494 = 16						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx

; 2288 : 		{	// append _Right [_Roff, _Roff + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Roff$[ebp]
	push	ebx
	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi
	push	edi

; 2288 : 		{	// append _Right [_Roff, _Roff + _Count)

	mov	esi, ecx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ebx+16]
	cmp	eax, edx
	jb	$LN150@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	ecx, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	eax, edx

; 2291 : 		if (npos - this->_Mysize() <= _Count)

	mov	edi, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	cmp	eax, ecx
	cmovb	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2291 : 		if (npos - this->_Mysize() <= _Count)

	mov	eax, edi
	not	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	DWORD PTR __Count$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2291 : 		if (npos - this->_Mysize() <= _Count)

	cmp	eax, ecx
	jbe	$LN152@append

; 2294 : 			}
; 2295 : 
; 2296 : 		const size_type _Num = this->_Mysize() + _Count;

	add	edi, ecx

; 2297 : 		if (_Count != 0 && _Grow(_Num))

	test	ecx, ecx
	je	$LN146@append

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN52@append

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN65@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2302 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2303 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN65@append:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2303 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN52@append:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], edi
	jae	SHORT $LN53@append

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Roff$[ebp]
$LN53@append:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN93@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN93@append:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN109@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR tv494[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN110@append
$LN109@append:
	mov	DWORD PTR tv494[ebp], esi
$LN110@append:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [ecx+ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2299 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Right._Myptr() + _Roff, _Count);

	mov	ecx, DWORD PTR tv494[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2299 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Right._Myptr() + _Roff, _Count);

	lea	eax, DWORD PTR [ebx+edx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2299 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Right._Myptr() + _Roff, _Count);

	mov	eax, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [ecx+eax*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN139@append
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2302 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2303 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN139@append:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
$LN146@append:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2302 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2303 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN150@append:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN153@append:
$LN152@append:

; 2292 : 			{
; 2293 : 			_Xlen();	// result too long

	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN154@append:
$LN149@append:
	int	3
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx

; 2283 : 		{	// append _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2284 : 		return (append(_Right, 0, npos));

	push	-1
	push	0
	push	DWORD PTR __Right$[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 2285 : 		}

	pop	ebp
	ret	4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=, COMDAT
; _this$ = ecx

; 2272 : 		{	// append [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2272 : 		{	// append [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL8@operator:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL8@operator
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
	pop	edi
	pop	esi

; 2273 : 		return (append(_Ptr));
; 2274 : 		}

	pop	ebp
	ret	4
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=, COMDAT
; _this$ = ecx

; 2260 : 		{	// append _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2284 : 		return (append(_Right, 0, npos));

	push	-1
	push	0
	push	DWORD PTR __Right$[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 2261 : 		return (append(_Right));
; 2262 : 		}

	pop	ebp
	ret	4
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 2250 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2250 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL8@operator:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL8@operator
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2251 : 		return (assign(_Ptr));
; 2252 : 		}

	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents, COMDAT
; _this$ = ecx

; 2172 : 		{	// assign by copying the data stored in _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2173 : 			// pre: *this is in a valid but unspecified state
; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	0
	push	DWORD PTR __Right$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2175 : 		}

	pop	ebp
	ret	4
?_Assign_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_lv_contents
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents_with_alloc_always_equal, COMDAT
; _this$ = ecx

; 2122 : 		{	// assign by stealing _Right's buffer, memcpy optimization

	npad	2
	push	ebp
	mov	ebp, esp

; 2123 : 			// pre: this != &_Right
; 2124 : 			// pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2125 : 			// pre: *this owns no memory, iterators orphaned (note: _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2126 : 		auto& _Right_data = _Right._Get_data();
; 2127 : 
; 2128 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2129 : 		if (_Right_data._Large_string_engaged())
; 2130 : 			{	// take ownership of _Right's iterators along with its buffer
; 2131 : 			this->_Swap_all(_Right);
; 2132 : 			}
; 2133 : 		else
; 2134 : 			{
; 2135 : 			_Right._Orphan_all();
; 2136 : 			}
; 2137 : #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 2138 : 
; 2139 : 		const auto _My_data_mem = reinterpret_cast<unsigned char *>(_STD addressof(this->_Get_data()))
; 2140 : 			+ _Memcpy_move_offset;
; 2141 : 		const auto _Right_data_mem = reinterpret_cast<unsigned char *>(_STD addressof(_Right_data))
; 2142 : 			+ _Memcpy_move_offset;
; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	mov	eax, DWORD PTR __Right$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2145 : 		}

	pop	ebp
	ret	8
?_Assign_rv_contents_with_alloc_always_equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv_contents_with_alloc_always_equal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 2054 : 		{	// construct by moving _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	mov	eax, DWORD PTR __Right$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 2143 : 		_CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_move_size);

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [eax+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [eax+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [eax], dx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2056 : 		}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1980 : 		{	// construct from [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]

; 326  : 		_Left = _Right;

	xor	eax, eax
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1980 : 		{	// construct from [_Ptr, <null>)

	mov	esi, ecx
	push	edi

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, edx
	lea	edi, DWORD PTR [eax+2]
$LL25@basic_stri:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL25@basic_stri
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi

; 1981 : 		_Tidy_init();
; 1982 : 		assign(_Ptr);
; 1983 : 		}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1941 : 		}

	mov	eax, ecx
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1925 : 		{	// construct by copying _Right

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	push	-1
	push	eax
	push	DWORD PTR __Right$[ebp]

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2174 : 		assign(_Right, 0, npos);

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 1926 : 		_Tidy_init();
; 1927 : 		_Assign_lv_contents(_Right);
; 1928 : 		}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT
; _this$ = ecx

; 1854 : 		return (_Get_data()._Myres);

	lea	eax, DWORD PTR [ecx+20]

; 1855 : 		}

	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT
; _this$ = ecx

; 1849 : 		return (_Get_data()._Myres);

	lea	eax, DWORD PTR [ecx+20]

; 1850 : 		}

	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1844 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1845 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1839 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1840 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1834 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1835 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1824 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1825 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1697 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1697 : 		}

	ret	0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1691 : 		}

	ret	0
$LN11@Myptr:

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1691 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1686 : 		}

	ret	0
$LN11@Myptr:

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1686 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 1634 : 			{	// user-provided, for fancy pointers
; 1635 : 			}

	mov	eax, ecx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 8
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
$LN3@Myptr:

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
$LN3@Myptr:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1598 : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+20], 0
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 2147483647				; 7fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1048 : 		}

	mov	eax, ecx
	ret	4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@$$QAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 1
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 1013 : 		{	// get allocator to use

	npad	2
	push	ebp
	mov	ebp, esp

; 1014 : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1015 : 		}

	pop	ebp
	ret	8
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT

; 975  : 		{	// get allocator to use

	npad	2
	push	ebp
	mov	ebp, esp

; 976  : 		return (_Al);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 977  : 		}

	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 2147483647				; 7fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 2147483647				; 7fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	add	eax, eax

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@_W@std@@QAE@ABV01@@Z PROC		; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 807  : 		{	// construct by copying (do nothing)
; 808  : 		}

	mov	eax, ecx
	ret	4
??0?$allocator@_W@std@@QAE@ABV01@@Z ENDP		; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT

; 3646 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT
; _this$ = ecx

; 3629 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Off$[ebp]
	jb	SHORT $LN14@Check_offs

; 3633 : 			}
; 3634 : 		}

	pop	ebp
	ret	4
$LN14@Check_offs:

; 3631 : 			{
; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN16@Check_offs:
$LN13@Check_offs:
	int	3
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 3625 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT
; _this$ = ecx

; 3596 : 		auto& _My_data = this->_Get_data();
; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3602 : 		}

	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NQBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NQBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 3588 : 		{	// test if _Ptr points inside string

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@Inside
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN14@Inside
$LN13@Inside:
	mov	edx, ecx
$LN14@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	cmp	edx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	eax, DWORD PTR [ecx+16]
	add	eax, edx
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	al, 1

; 3592 : 		}

	pop	ebp
	ret	4
$LN3@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	xor	al, al

; 3592 : 		}

	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NQBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 3572 : 		{	// ensure buffer is big enough

	npad	2
	push	ebp
	mov	ebp, esp

; 3573 : 		if (_Newsize == 0)

	mov	eax, DWORD PTR __Newsize$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Grow

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN16@Grow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN16@Grow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3576 : 			return (false);

	xor	al, al

; 3585 : 		}

	pop	ebp
	ret	4
$LN2@Grow:

; 3577 : 			}
; 3578 : 
; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [ecx+20], eax
	jae	SHORT $LN3@Grow

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	eax
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
$LN3@Grow:

; 3582 : 			}
; 3583 : 
; 3584 : 		return (true);	// return true only if more work to do

	mov	al, 1

; 3585 : 		}

	pop	ebp
	ret	4
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 3566 : 		{	// set new length and null terminator

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 3567 : 		auto& _My_data = this->_Get_data();
; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Eos
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
$LN11@Eos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [ecx+edx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Oldres$ = -28						; size = 4
_this$ = -24						; size = 4
__Ptr$1$ = -20						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newres$ = 8						; size = 4
__Newsize$ = 8						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 3514 : 		{	// reallocate to new buffer of at least _Newsize, copying existing elements there

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 3515 : 		const auto _Max = max_size();
; 3516 : 		if (_Newsize > _Max)

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	eax, -2					; fffffffeH
	jbe	SHORT $LN2@Copy

; 3517 : 			{	// too long
; 3518 : 			_Xlen();

	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN94@Copy:
$LN2@Copy:

; 3519 : 			}
; 3520 : 
; 3521 : 		auto& _My_data = this->_Get_data();
; 3522 : 		const size_type _Oldres = _My_data._Myres;

	mov	ebx, DWORD PTR [esi+20]

; 3523 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	edi, eax
	or	edi, 15					; 0000000fH
	mov	DWORD PTR __Oldres$[ebp], ebx

; 3524 : 		if (_Max < _Newres)

	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN3@Copy

; 3525 : 			{
; 3526 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	edi, eax
	jmp	SHORT $LN8@Copy
$LN3@Copy:

; 3527 : 			}
; 3528 : 		else if (_Oldres / 2 <= _Newres / 3)

	mov	eax, -1431655765			; aaaaaaabH
	mov	ecx, ebx
	mul	edi
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN8@Copy

; 3529 : 			;
; 3530 : 		else if (_Oldres <= _Max - _Oldres / 2)

	mov	eax, -2					; fffffffeH

; 3531 : 			{
; 3532 : 			_Newres = _Oldres + _Oldres / 2;	// grow exponentially if possible

	lea	edi, DWORD PTR [ecx+ebx]
	sub	eax, ecx
	cmp	ebx, eax
	jbe	SHORT $LN8@Copy

; 3533 : 			}
; 3534 : 		else
; 3535 : 			{
; 3536 : 			_Newres = _Max;	// settle for max_size()

	mov	edi, -2					; fffffffeH
$LN8@Copy:

; 3537 : 			}
; 3538 : 
; 3539 : 		auto& _Al = this->_Getal();
; 3540 : 		pointer _Ptr;
; 3541 : 		_TRY_BEGIN
; 3542 : 			_Ptr = _Al.allocate(_Newres + 1);

	lea	eax, DWORD PTR [edi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	eax
	mov	ecx, esi
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	ecx, eax
	jmp	SHORT $LN92@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z$0:

; 3543 : 		_CATCH_ALL
; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	inc	eax
	push	eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 3546 : 		_CATCH_END

	mov	eax, $LN89@Copy
	ret	0
$LN89@Copy:
	mov	esi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR __Oldres$[ebp]
	mov	edi, DWORD PTR __Newres$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN92@Copy:

; 3551 : 			{	// copy and deallocate old buffer
; 3552 : 			_Traits::copy(_Unfancy(_Ptr), _Unfancy(_My_data._Bx._Ptr), _My_data._Mysize + 1);

	mov	eax, DWORD PTR [esi+16]
	inc	eax
	mov	DWORD PTR __Ptr$1$[ebp], ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3550 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN10@Copy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	DWORD PTR [esi]
	push	ecx
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3553 : 			_Al.deallocate(_My_data._Bx._Ptr, _Oldres + 1);

	lea	eax, DWORD PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3556 : 		else

	jmp	SHORT $LN93@Copy
$LN10@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	esi
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN93@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3563 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3562 : 		_My_data._Myres = _Newres;

	mov	DWORD PTR [esi+20], edi

; 3563 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN91@Copy:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 3410 : 		{	// trims _Size to the longest it can be assuming a string at/after _Off

	npad	2
	push	ebp
	mov	ebp, esp

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	mov	ecx, DWORD PTR [ecx+16]
	sub	ecx, DWORD PTR __Off$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	ecx, eax
	cmovb	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3412 : 		}

	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 3030 : 		const size_type _Num = this->_Getal().max_size();
; 3031 : 		return (_Num <= 1 ? 1 : _Num - 1);

	mov	eax, -2					; fffffffeH

; 3032 : 		}

	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	push	ebx
	push	esi

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	mov	esi, ecx
	push	edi

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edi, DWORD PTR [esi+16]
	cmp	edi, edx
	jb	SHORT $LN95@erase

; 2593 : 		_Check_offset(_Off);
; 2594 : 		if (this->_Mysize() - _Off <= _Count)

	mov	ebx, DWORD PTR __Count$[ebp]
	mov	eax, edi
	sub	eax, edx
	cmp	eax, ebx
	ja	SHORT $LN2@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN38@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN38@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2607 : 		}

	pop	ebp
	ret	8
$LN2@erase:

; 2595 : 			{
; 2596 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 2597 : 			}
; 2598 : 		else if (_Count != 0)

	test	ebx, ebx
	je	SHORT $LN92@erase

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN57@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN58@erase
$LN57@erase:
	mov	eax, esi
$LN58@erase:

; 2599 : 			{	// move elements down
; 2600 : 			value_type *_Ptr = this->_Myptr() + _Off;

	lea	ecx, DWORD PTR [eax+edx]

; 2601 : 			size_type _Newsize = this->_Mysize() - _Count;

	sub	edi, ebx

; 2602 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	eax, edi
	sub	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 506  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2602 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	lea	eax, DWORD PTR [ecx+ebx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 506  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

	push	eax
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN85@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN85@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
$LN92@erase:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN95@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN97@erase:
$LN94@erase:
	int	3
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 2585 : 		{	// erase elements [_Off, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR __Off$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jb	SHORT $LN36@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN26@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [edx+eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx

; 2589 : 		}

	pop	ebp
	ret	4
$LN26@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	edx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [edx+eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx

; 2589 : 		}

	pop	ebp
	ret	4
$LN36@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN38@erase:
$LN35@erase:
	int	3
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2428 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2428 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	lea	edi, DWORD PTR [eax+1]
$LL6@assign:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL6@assign
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
	push	eax
	push	edx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi

; 2430 : 		}

	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2412 : 		{	// assign [_Ptr, _Ptr + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN17@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN18@assign
$LN17@assign:
	mov	edx, esi
$LN18@assign:

; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	mov	ebx, DWORD PTR __Ptr$[ebp]
	cmp	edx, ebx
	ja	SHORT $LN2@assign
	mov	eax, DWORD PTR [esi+16]
	add	eax, edx
	cmp	ebx, eax
	jae	SHORT $LN2@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 16					; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN33@assign

; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	mov	ecx, esi
	sub	ebx, eax
	push	ebx
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx

; 2425 : 		}

	pop	ebp
	ret	8
$LN33@assign:

; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi

; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	mov	ecx, esi
	sub	ebx, eax
	push	ebx
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx

; 2425 : 		}

	pop	ebp
	ret	8
$LN2@assign:
	push	edi

; 3573 : 		if (_Newsize == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	jne	SHORT $LN40@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 16					; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN53@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2425 : 		}

	pop	ebp
	ret	8
$LN53@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
$LN40@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	ecx, edi
	jae	SHORT $LN41@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
$LN41@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN81@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN82@assign
$LN81@assign:
	mov	eax, esi
$LN82@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	edi
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN100@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2425 : 		}

	pop	ebp
	ret	8
$LN100@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR __Roff$[ebp]
	push	ebx
	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	mov	esi, ecx
	push	edi

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR [ebx+16]
	cmp	ecx, eax
	jb	$LN159@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	cmp	ecx, edi
	cmovb	edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2382 : 		if (this == _STD addressof(_Right))

	cmp	esi, ebx
	jne	SHORT $LN2@assign

; 2383 : 			{	// substring
; 2384 : 			erase(_Roff + _Count);

	lea	ecx, DWORD PTR [eax+edi]

; 3630 : 		if (this->_Mysize() < _Off)

	cmp	DWORD PTR [esi+16], ecx
	jb	$LN161@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN62@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	push	eax
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [edx+ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	pop	edi

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN62@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	edx, esi

; 2385 : 			erase(0, _Roff);

	push	eax
	push	0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [edx+ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	pop	edi

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@assign:

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN72@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN85@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN85@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN72@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], edi
	jae	SHORT $LN73@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	eax, DWORD PTR __Roff$[ebp]
$LN73@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN113@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN113@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN129@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN130@assign
$LN129@assign:
	mov	ecx, esi
$LN130@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2389 : 			_Traits::copy(this->_Myptr(), _Right._Myptr() + _Roff, _Count);

	add	eax, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	eax
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN148@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN148@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [eax+edi], 0
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN159@assign:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN162@assign:
$LN161@assign:
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN163@assign:
$LN158@assign:
	int	3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 1980 : 		{	// construct from [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1980 : 		{	// construct from [_Ptr, <null>)

	mov	esi, ecx
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	lea	edi, DWORD PTR [eax+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [esi], 0
$LL25@basic_stri:

; 480  : 		return (_CSTD strlen(_First));

	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL25@basic_stri
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
	push	eax
	push	edx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi

; 1981 : 		_Tidy_init();
; 1982 : 		assign(_Ptr);
; 1983 : 		}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT
; _this$ = ecx

; 1849 : 		return (_Get_data()._Myres);

	lea	eax, DWORD PTR [ecx+20]

; 1850 : 		}

	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 1844 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1845 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT
; _this$ = ecx

; 1839 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1840 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 1834 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1835 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 1824 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1825 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1697 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1697 : 		}

	ret	0
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1691 : 		}

	ret	0
$LN11@Myptr:

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1691 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEPBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1686 : 		}

	ret	0
$LN11@Myptr:

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1686 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEPADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 1634 : 			{	// user-provided, for fancy pointers
; 1635 : 			}

	mov	eax, ecx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
$LN3@Myptr:

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 16			; 00000010H

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
$LN3@Myptr:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1598 : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+20], 0
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	or	eax, -1

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN6@allocate
$LN15@allocate:

; 1077 : 		return (_Mybase::allocate(_Count));
; 1078 : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN8@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN10@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN18@allocate:
$LN10@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN11@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN19@allocate:
$LN11@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 1077 : 		return (_Mybase::allocate(_Count));
; 1078 : 		}

	pop	ebp
	ret	4
$LN8@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN15@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN20@allocate:
$LN17@allocate:
	int	3
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	or	eax, -1

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 852  : 		}

	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN16@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	1
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 96   : 	{	// deallocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 97   :  #if defined(_M_IX86) || defined(_M_X64)
; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	mov	ecx, DWORD PTR __Count$[ebp]
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	ecx, eax
	jbe	SHORT $LN2@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 99   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	al, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jb	SHORT $LN5@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jae	SHORT $LN6@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN9@Deallocate:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN3@Deallocate:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 	}

	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 50   : 	{	// allocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 51   : 	void *_Ptr = 0;
; 52   : 
; 53   : 	if (_Count == 0)

	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate

; 54   : 		return (_Ptr);

	xor	eax, eax
$LN1@Allocate:

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN2@Allocate:

; 55   : 
; 56   : 	// check overflow of multiply
; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN3@Allocate

; 58   : 		_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	BYTE PTR __Try_aligned_allocation$[ebp], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	eax, DWORD PTR [ecx+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	eax, ecx
	ja	SHORT $LN6@Allocate

; 69   : 			_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN7@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN4@Allocate:

; 76   : 
; 77   :  #ifdef _DEBUG
; 78   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 79   :  #endif /* _DEBUG */
; 80   : 		}
; 81   : 	else
; 82   :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 83   : 	static_cast<void>(_Try_aligned_allocation);
; 84   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 85   : 
; 86   : 		{	// allocate normal block
; 87   : 		_Ptr = ::operator new(_User_size);

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN1@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
__Ans$1 = -12						; size = 8
$T2 = -4						; size = 4
?SK_Win32_CleanupDummyWindow@@YAXXZ PROC		; SK_Win32_CleanupDummyWindow

; 1819 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 43   : 		: _Ptr(_Pnode)

	mov	edi, DWORD PTR ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A
	mov	esi, DWORD PTR [edi]

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	esi, edi
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1820 :   for (auto& it : dummy_windows)

	je	$LN3@SK_Win32_C
	push	ebx
	npad	5
$LL87@SK_Win32_C:

; 1822 :     if (DestroyWindow (it))

	push	DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 596  : 		return ((reference)_Pnode->_Myval);

	lea	ebx, DWORD PTR [esi+16]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1822 :     if (DestroyWindow (it))

	call	DWORD PTR __imp__DestroyWindow@4
	test	eax, eax
	je	SHORT $LN2@SK_Win32_C
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 2041 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

	push	ebx
	lea	eax, DWORD PTR __Ans$1[ebp]
	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	push	eax
	call	??$_Eqrange@PAUHWND__@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@V12@@1@ABQAUHWND__@@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Eqrange<HWND__ *>

; 1470 : 		erase(_Where.first, _Where.second);

	push	DWORD PTR __Ans$1[ebp+4]
	lea	eax, DWORD PTR $T2[ebp]
	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	push	DWORD PTR __Ans$1[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::erase
$LN2@SK_Win32_C:

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	cmp	BYTE PTR [esi+13], 0
	jne	SHORT $LN179@SK_Win32_C

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi+8]

; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN176@SK_Win32_C

; 63   : 			_Ptr = _Mytree::_Min(

	mov	esi, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN179@SK_Win32_C
	npad	4
$LL98@SK_Win32_C:

; 609  : 			_Pnode = _Left(_Pnode);

	mov	esi, eax

; 576  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR [esi]

; 608  : 		while (!_Isnil(_Left(_Pnode)))

	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL98@SK_Win32_C

; 65   : 		else

	jmp	SHORT $LN179@SK_Win32_C
$LN176@SK_Win32_C:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+13], 0
	jne	SHORT $LN186@SK_Win32_C
$LL82@SK_Win32_C:
	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LN186@SK_Win32_C

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	esi, eax
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+13], 0
	je	SHORT $LL82@SK_Win32_C
$LN186@SK_Win32_C:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	esi, eax
$LN179@SK_Win32_C:

; 331  : 		return (this->_Ptr == _Right._Ptr);

	cmp	esi, edi
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1820 :   for (auto& it : dummy_windows)

	jne	SHORT $LL87@SK_Win32_C
	pop	ebx
$LN3@SK_Win32_C:

; 1823 :     {
; 1824 :       dummy_windows.erase (it);
; 1825 :     }
; 1826 :   }
; 1827 : 
; 1828 :   UnregisterClassW ( L"Special K Dummy Window Class", SK_GetDLL () );

	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	push	OFFSET $SG430378
	call	DWORD PTR __imp__UnregisterClassW@8
	pop	edi
	pop	esi

; 1829 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_Win32_CleanupDummyWindow@@YAXXZ ENDP		; SK_Win32_CleanupDummyWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_wc_existing$ = -112					; size = 40
_wc$ = -64						; size = 40
$T1 = -12						; size = 8
_hWnd$2 = -4						; size = 4
?SK_Win32_CreateDummyWindow@@YAPAUHWND__@@XZ PROC	; SK_Win32_CreateDummyWindow

; 1782 : {

	npad	2
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H

; 1783 :   WNDCLASSW wc         = { };
; 1784 :   WNDCLASS wc_existing = { };
; 1785 : 
; 1786 :   wc.style         = CS_CLASSDC | CS_GLOBALCLASS;
; 1787 :   wc.lpfnWndProc   = DefWindowProcW;

	mov	eax, DWORD PTR __imp__DefWindowProcW@16
	xorps	xmm0, xmm0
	movaps	XMMWORD PTR _wc$[ebp], xmm0
	movaps	XMMWORD PTR _wc$[ebp+16], xmm0
	movq	QWORD PTR _wc$[ebp+32], xmm0
	movaps	XMMWORD PTR _wc_existing$[ebp], xmm0
	movaps	XMMWORD PTR _wc_existing$[ebp+16], xmm0
	movq	QWORD PTR _wc_existing$[ebp+32], xmm0
	mov	DWORD PTR _wc$[ebp], 16448		; 00004040H
	mov	DWORD PTR _wc$[ebp+4], eax

; 1788 :   wc.hInstance     = SK_GetDLL ();

	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	mov	DWORD PTR _wc$[ebp+16], eax

; 1789 :   wc.lpszClassName = L"Special K Dummy Window Class";
; 1790 : 
; 1791 :   if (RegisterClassW (&wc) || GetClassInfo (SK_GetDLL (), L"Special K Dummy Window Class", &wc_existing))

	lea	eax, DWORD PTR _wc$[ebp]
	push	eax
	mov	DWORD PTR _wc$[ebp+36], OFFSET $SG430324
	call	DWORD PTR __imp__RegisterClassW@4
	test	ax, ax
	jne	SHORT $LN4@SK_Win32_C
	lea	eax, DWORD PTR _wc_existing$[ebp]
	push	eax
	push	OFFSET $SG430328
	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	call	DWORD PTR __imp__GetClassInfoW@12
	test	eax, eax
	jne	SHORT $LN4@SK_Win32_C

; 1804 :       dummy_windows.emplace (hWnd);
; 1805 : 
; 1806 :     return hWnd;
; 1807 :   }
; 1808 : 
; 1809 :   else
; 1810 :   {
; 1811 :     dll_log.Log (L"Window Class Registration Failed!");

	push	OFFSET $SG430332
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8

; 1812 :   }
; 1813 : 
; 1814 :   return nullptr;

	xor	eax, eax

; 1815 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
$LN4@SK_Win32_C:

; 1792 :   {
; 1793 :     HWND hWnd =
; 1794 :       CreateWindowExW_Original ( 0L, L"Special K Dummy Window Class",

	push	0
	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	push	0
	push	0
	push	1
	push	1
	push	0
	push	0
	push	-2046820352				; 86000000H
	push	OFFSET $SG430329
	push	OFFSET $SG430330
	push	0
	call	DWORD PTR ?CreateWindowExW_Original@@3P6GPAUHWND__@@KPB_W0KHHHHPAU1@PAUHMENU__@@PAUHINSTANCE__@@PAX@ZA ; CreateWindowExW_Original
	mov	DWORD PTR _hWnd$2[ebp], eax

; 1795 :                                      L"Special K Dummy Window",
; 1796 :                                        WS_POPUP | WS_CLIPCHILDREN |
; 1797 :                                        WS_CLIPSIBLINGS,
; 1798 :                                          0, 0,
; 1799 :                                          1, 1,
; 1800 :                                            HWND_DESKTOP,   nullptr,
; 1801 :                                              SK_GetDLL (), nullptr );
; 1802 : 
; 1803 :     if (hWnd != HWND_DESKTOP)

	test	eax, eax
	je	SHORT $LN1@SK_Win32_C
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xtree

; 1084 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	lea	eax, DWORD PTR _hWnd$2[ebp]
	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	push	eax
	call	??$_Buynode@AAPAUHWND__@@@?$_Tree_comp_alloc@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@QAEPAU?$_Tree_node@PAUHWND__@@PAX@1@AAPAUHWND__@@@Z ; std::_Tree_comp_alloc<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Buynode<HWND__ * &>

; 1085 : 		return (_Insert_nohint(false,

	push	eax

; 596  : 		return ((reference)_Pnode->_Myval);

	add	eax, 16					; 00000010H

; 1085 : 		return (_Insert_nohint(false,

	mov	ecx, OFFSET ?dummy_windows@@3V?$set@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@@std@@A ; dummy_windows
	push	eax
	push	0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$_Insert_nohint@AAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@std@@@?$_Tree@V?$_Tset_traits@PAUHWND__@@U?$less@PAUHWND__@@@std@@V?$allocator@PAUHWND__@@@3@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@PAUHWND__@@@std@@@std@@@std@@_N@1@_NAAPAUHWND__@@PAU?$_Tree_node@PAUHWND__@@PAX@1@@Z ; std::_Tree<std::_Tset_traits<HWND__ *,std::less<HWND__ *>,std::allocator<HWND__ *>,0> >::_Insert_nohint<HWND__ * &,std::_Tree_node<HWND__ *,void *> *>
	mov	eax, DWORD PTR _hWnd$2[ebp]
$LN1@SK_Win32_C:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1815 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?SK_Win32_CreateDummyWindow@@YAPAUHWND__@@XZ ENDP	; SK_Win32_CreateDummyWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
?SK_GetFramesDrawn@@YGKXZ PROC				; SK_GetFramesDrawn
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8077 :     Value = *Source;

	mov	eax, DWORD PTR ?frames_drawn@@3JC	; frames_drawn
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 180  : }

	ret	0
?SK_GetFramesDrawn@@YGKXZ ENDP				; SK_GetFramesDrawn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_wszBasePath$2 = -1100					; size = 1038
$T3 = -60						; size = 24
$T4 = -36						; size = 24
__$EHRec$ = -12						; size = 12
?SK_HasGlobalInjector@@YG_NXZ PROC			; SK_HasGlobalInjector

; 1233 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?SK_HasGlobalInjector@@YG_NXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 1088				; 00000440H

; 1234 :   static int last_test = 0;
; 1235 : 
; 1236 :   if (last_test == 0)

	mov	ecx, DWORD PTR ?last_test@?1??SK_HasGlobalInjector@@YG_NXZ@4HA
	test	ecx, ecx
	jne	$LN2@SK_HasGlob

; 1237 :   {
; 1238 :     wchar_t wszBasePath [MAX_PATH * 2 - 1] = { };

	push	1038					; 0000040eH
	push	ecx
	lea	eax, DWORD PTR _wszBasePath$2[ebp]
	push	eax
	call	_memset

; 1240 :     wcsncpy ( wszBasePath,

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?SK_GetDocumentsDir@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_GetDocumentsDir
	push	OFFSET $SG428376
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 28					; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN20@SK_HasGlob
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN20@SK_HasGlob:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1240 :     wcsncpy ( wszBasePath,

	push	259					; 00000103H
	push	eax
	lea	eax, DWORD PTR _wszBasePath$2[ebp]
	push	eax
	call	DWORD PTR __imp__wcsncpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T4[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1240 :     wcsncpy ( wszBasePath,

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN29@SK_HasGlob
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T4[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN29@SK_HasGlob:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T4[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T4[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T3[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T4[ebp+20], 7

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN59@SK_HasGlob
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T3[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN59@SK_HasGlob:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1247 :     lstrcatW (wszBasePath, L"SpecialK32.dll");

	push	OFFSET $SG428377
	lea	eax, DWORD PTR _wszBasePath$2[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8

; 1248 : #endif
; 1249 : 
; 1250 :     bool result = (GetFileAttributesW (wszBasePath) != INVALID_FILE_ATTRIBUTES);

	lea	eax, DWORD PTR _wszBasePath$2[ebp]
	push	eax
	call	DWORD PTR __imp__GetFileAttributesW@4

; 1251 :     last_test   = result ? 1 : -1;

	xor	ecx, ecx
	cmp	eax, -1
	setne	cl
	lea	ecx, DWORD PTR [ecx*2-1]
	mov	DWORD PTR ?last_test@?1??SK_HasGlobalInjector@@YG_NXZ@4HA, ecx
$LN2@SK_HasGlob:

; 1252 :   }
; 1253 : 
; 1254 :   return (last_test != -1);

	xor	eax, eax
	cmp	ecx, -1

; 1255 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	setne	al
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_HasGlobalInjector@@YG_NXZ$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?SK_HasGlobalInjector@@YG_NXZ:
	mov	eax, OFFSET __ehfuncinfo$?SK_HasGlobalInjector@@YG_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_HasGlobalInjector@@YG_NXZ ENDP			; SK_HasGlobalInjector
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_role$ = 8						; size = 4
?SK_SetDLLRole@@YAXW4DLL_ROLE@@@Z PROC			; SK_SetDLLRole

; 2546 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 2547 :   dll_role = role;

	mov	eax, DWORD PTR _role$[ebp]
	mov	DWORD PTR ?dll_role@@3W4DLL_ROLE@@A, eax ; dll_role

; 2548 : }

	pop	ebp
	ret	0
?SK_SetDLLRole@@YAXW4DLL_ROLE@@@Z ENDP			; SK_SetDLLRole
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ PROC			; SK_GetDLLRole

; 2540 :   return dll_role;

	mov	eax, DWORD PTR ?dll_role@@3W4DLL_ROLE@@A ; dll_role

; 2541 : }

	ret	0
?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ ENDP			; SK_GetDLLRole
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_path$ = 8						; size = 4
?SK_SetConfigPath@@YGXPB_W@Z PROC			; SK_SetConfigPath

; 152  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 153  :   lstrcpynW (SK_ConfigPath, path, MAX_PATH);

	push	260					; 00000104H
	push	DWORD PTR _path$[ebp]
	push	OFFSET ?SK_ConfigPath@@3PA_WA		; SK_ConfigPath
	call	DWORD PTR __imp__lstrcpynW@12

; 154  : }

	pop	ebp
	ret	4
?SK_SetConfigPath@@YGXPB_W@Z ENDP			; SK_SetConfigPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_result$ = 8						; size = 4
?SK_DescribeHRESULT@@YGPB_WJ@Z PROC			; SK_DescribeHRESULT

; 185  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 186  :   switch (result)

	mov	ecx, DWORD PTR _result$[ebp]
	cmp	ecx, -2147418113			; 8000ffffH
	jg	SHORT $LN80@SK_Describ
	je	SHORT $LN77@SK_Describ
	lea	eax, DWORD PTR [ecx+2147467263]
	cmp	eax, 4
	ja	$LN78@SK_Describ
	jmp	DWORD PTR $LN91@SK_Describ[eax*4]
$LN68@SK_Describ:

; 395  : 
; 396  : 
; 397  :     /* D3D12 */
; 398  : 
; 399  :     //case D3D12_ERROR_FILE_NOT_FOUND:
; 400  :     //return L"D3D12_ERROR_FILE_NOT_FOUND";
; 401  : 
; 402  :     //case D3D12_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS:
; 403  :     //return L"D3D12_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS";
; 404  : 
; 405  :     //case D3D12_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS:
; 406  :     //return L"D3D12_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS";
; 407  : #endif
; 408  : 
; 409  : 
; 410  :     /* Generic (FAILED) */
; 411  : 
; 412  :   case E_FAIL:
; 413  :     return L"E_FAIL";

	mov	eax, OFFSET $SG427816

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN71@SK_Describ:

; 420  : 
; 421  :   case E_POINTER:
; 422  :     return L"E_POINTER";

	mov	eax, OFFSET $SG427822

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN74@SK_Describ:

; 429  : 
; 430  :   case E_NOTIMPL:
; 431  :     return L"E_NOTIMPL";

	mov	eax, OFFSET $SG427828

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN75@SK_Describ:

; 432  : 
; 433  :   case E_NOINTERFACE:
; 434  :     return L"E_NOINTERFACE";

	mov	eax, OFFSET $SG427830

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN76@SK_Describ:

; 435  : 
; 436  :   case E_ABORT:
; 437  :     return L"E_ABORT";

	mov	eax, OFFSET $SG427832

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN77@SK_Describ:

; 438  : 
; 439  :   case E_UNEXPECTED:
; 440  :     return L"E_UNEXPECTED";

	mov	eax, OFFSET $SG427834

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN80@SK_Describ:

; 186  :   switch (result)

	cmp	ecx, -2005270527			; 887a0001H
	jg	$LN81@SK_Describ
	je	$LN12@SK_Describ
	cmp	ecx, -2005530600			; 88760818H
	jg	SHORT $LN82@SK_Describ
	je	SHORT $LN45@SK_Describ
	cmp	ecx, -2147024809			; 80070057H
	jg	SHORT $LN83@SK_Describ
	je	SHORT $LN69@SK_Describ
	cmp	ecx, -2147024891			; 80070005H
	je	SHORT $LN72@SK_Describ
	cmp	ecx, -2147024890			; 80070006H
	je	SHORT $LN73@SK_Describ
	cmp	ecx, -2147024882			; 8007000eH
	jne	$LN78@SK_Describ

; 417  : 
; 418  :   case E_OUTOFMEMORY:
; 419  :     return L"E_OUTOFMEMORY";

	mov	eax, OFFSET $SG427820

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN73@SK_Describ:

; 426  : 
; 427  :   case E_HANDLE:
; 428  :     return L"E_HANDLE";

	mov	eax, OFFSET $SG427826

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN72@SK_Describ:

; 423  : 
; 424  :   case E_ACCESSDENIED:
; 425  :     return L"E_ACCESSDENIED";

	mov	eax, OFFSET $SG427824

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN69@SK_Describ:

; 414  : 
; 415  :   case E_INVALIDARG:
; 416  :     return L"E_INVALIDARG";

	mov	eax, OFFSET $SG427818

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN83@SK_Describ:

; 186  :   switch (result)

	cmp	ecx, -2005532292			; 8876017cH
	je	SHORT $LN62@SK_Describ
	cmp	ecx, -2005532132			; 8876021cH
	jne	$LN78@SK_Describ

; 388  : 
; 389  :   case D3DERR_WASSTILLDRAWING:
; 390  :     return L"D3DERR_WASSTILLDRAWING";

	mov	eax, OFFSET $SG427812

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN62@SK_Describ:

; 376  : 
; 377  :   case D3DERR_OUTOFVIDEOMEMORY:
; 378  :     return L"D3DERR_OUTOFVIDEOMEMORY";

	mov	eax, OFFSET $SG427804

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN45@SK_Describ:

; 321  : 
; 322  : 
; 323  :     /* D3D9 */
; 324  : 
; 325  :   case D3DERR_WRONGTEXTUREFORMAT:
; 326  :     return L"D3DERR_WRONGTEXTUREFORMAT";

	mov	eax, OFFSET $SG427770

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN82@SK_Describ:

; 186  :   switch (result)

	lea	eax, DWORD PTR [ecx+2005530599]
	cmp	eax, 84					; 00000054H
	ja	$LN78@SK_Describ
	movzx	eax, BYTE PTR $LN88@SK_Describ[eax]
	jmp	DWORD PTR $LN92@SK_Describ[eax*4]
$LN46@SK_Describ:

; 327  : 
; 328  :   case D3DERR_UNSUPPORTEDCOLOROPERATION:
; 329  :     return L"D3DERR_UNSUPPORTEDCOLOROPERATION";

	mov	eax, OFFSET $SG427772

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN47@SK_Describ:

; 330  : 
; 331  :   case D3DERR_UNSUPPORTEDCOLORARG:
; 332  :     return L"D3DERR_UNSUPPORTEDCOLORARG";

	mov	eax, OFFSET $SG427774

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN48@SK_Describ:

; 333  : 
; 334  :   case D3DERR_UNSUPPORTEDALPHAOPERATION:
; 335  :     return L"D3DERR_UNSUPPORTEDALPHAOPERATION";

	mov	eax, OFFSET $SG427776

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN49@SK_Describ:

; 336  : 
; 337  :   case D3DERR_UNSUPPORTEDALPHAARG:
; 338  :     return L"D3DERR_UNSUPPORTEDALPHAARG";

	mov	eax, OFFSET $SG427778

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN50@SK_Describ:

; 339  : 
; 340  :   case D3DERR_TOOMANYOPERATIONS:
; 341  :     return L"D3DERR_TOOMANYOPERATIONS";

	mov	eax, OFFSET $SG427780

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN51@SK_Describ:

; 342  : 
; 343  :   case D3DERR_CONFLICTINGTEXTUREFILTER:
; 344  :     return L"D3DERR_CONFLICTINGTEXTUREFILTER";

	mov	eax, OFFSET $SG427782

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN52@SK_Describ:

; 345  : 
; 346  :   case D3DERR_UNSUPPORTEDFACTORVALUE:
; 347  :     return L"D3DERR_UNSUPPORTEDFACTORVALUE";

	mov	eax, OFFSET $SG427784

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN53@SK_Describ:

; 348  : 
; 349  :   case D3DERR_CONFLICTINGRENDERSTATE:
; 350  :     return L"D3DERR_CONFLICTINGRENDERSTATE";

	mov	eax, OFFSET $SG427786

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN54@SK_Describ:

; 351  : 
; 352  :   case D3DERR_UNSUPPORTEDTEXTUREFILTER:
; 353  :     return L"D3DERR_UNSUPPORTEDTEXTUREFILTER";

	mov	eax, OFFSET $SG427788

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN55@SK_Describ:

; 354  : 
; 355  :   case D3DERR_CONFLICTINGTEXTUREPALETTE:
; 356  :     return L"D3DERR_CONFLICTINGTEXTUREPALETTE";

	mov	eax, OFFSET $SG427790

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN56@SK_Describ:

; 357  : 
; 358  :   case D3DERR_DRIVERINTERNALERROR:
; 359  :     return L"D3DERR_DRIVERINTERNALERROR";

	mov	eax, OFFSET $SG427792

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN57@SK_Describ:

; 360  : 
; 361  : 
; 362  :   case D3DERR_NOTFOUND:
; 363  :     return L"D3DERR_NOTFOUND";

	mov	eax, OFFSET $SG427794

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN58@SK_Describ:

; 364  : 
; 365  :   case D3DERR_MOREDATA:
; 366  :     return L"D3DERR_MOREDATA";

	mov	eax, OFFSET $SG427796

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN59@SK_Describ:

; 367  : 
; 368  :   case D3DERR_DEVICELOST:
; 369  :     return L"D3DERR_DEVICELOST";

	mov	eax, OFFSET $SG427798

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN60@SK_Describ:

; 370  : 
; 371  :   case D3DERR_DEVICENOTRESET:
; 372  :     return L"D3DERR_DEVICENOTRESET";

	mov	eax, OFFSET $SG427800

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN61@SK_Describ:

; 373  : 
; 374  :   case D3DERR_NOTAVAILABLE:
; 375  :     return L"D3DERR_NOTAVAILABLE";

	mov	eax, OFFSET $SG427802

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN63@SK_Describ:

; 379  : 
; 380  :   case D3DERR_INVALIDDEVICE:
; 381  :     return L"D3DERR_INVALIDDEVICE";

	mov	eax, OFFSET $SG427806

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN64@SK_Describ:

; 382  : 
; 383  :   case D3DERR_INVALIDCALL:
; 384  :     return L"D3DERR_INVALIDCALL";

	mov	eax, OFFSET $SG427808

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN65@SK_Describ:

; 385  : 
; 386  :   case D3DERR_DRIVERINVALIDCALL:
; 387  :     return L"D3DERR_DRIVERINVALIDCALL";

	mov	eax, OFFSET $SG427810

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN12@SK_Describ:

; 217  : 
; 218  :   case DXGI_ERROR_INVALID_CALL:
; 219  :     return L"DXGI_ERROR_INVALID_CALL";

	mov	eax, OFFSET $SG427704

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN81@SK_Describ:

; 186  :   switch (result)

	cmp	ecx, -2005204991			; 887b0001H
	jg	$LN84@SK_Describ
	je	$LN29@SK_Describ
	lea	eax, DWORD PTR [ecx+2005270526]
	cmp	eax, 43					; 0000002bH
	ja	$LN78@SK_Describ
	movzx	eax, BYTE PTR $LN89@SK_Describ[eax]
	jmp	DWORD PTR $LN93@SK_Describ[eax*4]
$LN6@SK_Describ:

; 195  : 
; 196  : 
; 197  : #ifndef SK_BUILD__INSTALLER
; 198  :     /* DXGI */
; 199  : 
; 200  :   case DXGI_ERROR_DEVICE_HUNG:
; 201  :     return L"DXGI_ERROR_DEVICE_HUNG";

	mov	eax, OFFSET $SG427692

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN7@SK_Describ:

; 202  : 
; 203  :   case DXGI_ERROR_DEVICE_REMOVED:
; 204  :     return L"DXGI_ERROR_DEVICE_REMOVED";

	mov	eax, OFFSET $SG427694

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN8@SK_Describ:

; 205  : 
; 206  :   case DXGI_ERROR_DEVICE_RESET:
; 207  :     return L"DXGI_ERROR_DEVICE_RESET";

	mov	eax, OFFSET $SG427696

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN9@SK_Describ:

; 208  : 
; 209  :   case DXGI_ERROR_DRIVER_INTERNAL_ERROR:
; 210  :     return L"DXGI_ERROR_DRIVER_INTERNAL_ERROR";

	mov	eax, OFFSET $SG427698

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN10@SK_Describ:

; 211  : 
; 212  :   case DXGI_ERROR_FRAME_STATISTICS_DISJOINT:
; 213  :     return L"DXGI_ERROR_FRAME_STATISTICS_DISJOINT";

	mov	eax, OFFSET $SG427700

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN11@SK_Describ:

; 214  : 
; 215  :   case DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE:
; 216  :     return L"DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE";

	mov	eax, OFFSET $SG427702

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN13@SK_Describ:

; 220  : 
; 221  :   case DXGI_ERROR_MORE_DATA:
; 222  :     return L"DXGI_ERROR_MORE_DATA";

	mov	eax, OFFSET $SG427706

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN14@SK_Describ:

; 223  : 
; 224  :   case DXGI_ERROR_NONEXCLUSIVE:
; 225  :     return L"DXGI_ERROR_NONEXCLUSIVE";

	mov	eax, OFFSET $SG427708

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN15@SK_Describ:

; 226  : 
; 227  :   case DXGI_ERROR_NOT_CURRENTLY_AVAILABLE:
; 228  :     return L"DXGI_ERROR_NOT_CURRENTLY_AVAILABLE";

	mov	eax, OFFSET $SG427710

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN16@SK_Describ:

; 229  : 
; 230  :   case DXGI_ERROR_NOT_FOUND:
; 231  :     return L"DXGI_ERROR_NOT_FOUND";

	mov	eax, OFFSET $SG427712

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN17@SK_Describ:

; 232  : 
; 233  :   case DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED:
; 234  :     return L"DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED";

	mov	eax, OFFSET $SG427714

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN18@SK_Describ:

; 235  : 
; 236  :   case DXGI_ERROR_REMOTE_OUTOFMEMORY:
; 237  :     return L"DXGI_ERROR_REMOTE_OUTOFMEMORY";

	mov	eax, OFFSET $SG427716

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN19@SK_Describ:

; 238  : 
; 239  :   case DXGI_ERROR_WAS_STILL_DRAWING:
; 240  :     return L"DXGI_ERROR_WAS_STILL_DRAWING";

	mov	eax, OFFSET $SG427718

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN20@SK_Describ:

; 241  : 
; 242  :   case DXGI_ERROR_UNSUPPORTED:
; 243  :     return L"DXGI_ERROR_UNSUPPORTED";

	mov	eax, OFFSET $SG427720

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN21@SK_Describ:

; 244  : 
; 245  :   case DXGI_ERROR_ACCESS_LOST:
; 246  :     return L"DXGI_ERROR_ACCESS_LOST";

	mov	eax, OFFSET $SG427722

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN22@SK_Describ:

; 247  : 
; 248  :   case DXGI_ERROR_WAIT_TIMEOUT:
; 249  :     return L"DXGI_ERROR_WAIT_TIMEOUT";

	mov	eax, OFFSET $SG427724

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN23@SK_Describ:

; 250  : 
; 251  :   case DXGI_ERROR_SESSION_DISCONNECTED:
; 252  :     return L"DXGI_ERROR_SESSION_DISCONNECTED";

	mov	eax, OFFSET $SG427726

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN24@SK_Describ:

; 253  : 
; 254  :   case DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE:
; 255  :     return L"DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE";

	mov	eax, OFFSET $SG427728

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN25@SK_Describ:

; 256  : 
; 257  :   case DXGI_ERROR_CANNOT_PROTECT_CONTENT:
; 258  :     return L"DXGI_ERROR_CANNOT_PROTECT_CONTENT";

	mov	eax, OFFSET $SG427730

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN26@SK_Describ:

; 259  : 
; 260  :   case DXGI_ERROR_ACCESS_DENIED:
; 261  :     return L"DXGI_ERROR_ACCESS_DENIED";

	mov	eax, OFFSET $SG427732

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN27@SK_Describ:

; 262  : 
; 263  :   case DXGI_ERROR_NAME_ALREADY_EXISTS:
; 264  :     return L"DXGI_ERROR_NAME_ALREADY_EXISTS";

	mov	eax, OFFSET $SG427734

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN28@SK_Describ:

; 265  : 
; 266  :   case DXGI_ERROR_SDK_COMPONENT_MISSING:
; 267  :     return L"DXGI_ERROR_SDK_COMPONENT_MISSING";

	mov	eax, OFFSET $SG427736

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN29@SK_Describ:

; 268  : 
; 269  :   case DXGI_DDI_ERR_WASSTILLDRAWING:
; 270  :     return L"DXGI_DDI_ERR_WASSTILLDRAWING";

	mov	eax, OFFSET $SG427738

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN84@SK_Describ:

; 186  :   switch (result)

	cmp	ecx, 142213121				; 087a0001H
	jg	$LN85@SK_Describ
	je	$LN32@SK_Describ
	cmp	ecx, -2005139455			; 887c0001H
	jg	SHORT $LN86@SK_Describ
	je	SHORT $LN42@SK_Describ
	cmp	ecx, -2005204990			; 887b0002H
	je	SHORT $LN30@SK_Describ
	cmp	ecx, -2005204989			; 887b0003H
	jne	$LN78@SK_Describ

; 274  : 
; 275  :   case DXGI_DDI_ERR_NONEXCLUSIVE:
; 276  :     return L"DXGI_DDI_ERR_NONEXCLUSIVE";

	mov	eax, OFFSET $SG427742

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN30@SK_Describ:

; 271  : 
; 272  :   case DXGI_DDI_ERR_UNSUPPORTED:
; 273  :     return L"DXGI_DDI_ERR_UNSUPPORTED";

	mov	eax, OFFSET $SG427740

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN42@SK_Describ:

; 312  : 
; 313  :   case D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS:
; 314  :     return L"D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS";

	mov	eax, OFFSET $SG427764

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN86@SK_Describ:

; 186  :   switch (result)

	test	ecx, ecx
	jg	SHORT $LN87@SK_Describ
	je	SHORT $LN4@SK_Describ
	cmp	ecx, -2005139454			; 887c0002H
	je	SHORT $LN41@SK_Describ
	cmp	ecx, -2005139453			; 887c0003H
	je	SHORT $LN43@SK_Describ
	cmp	ecx, -2005139452			; 887c0004H
	jne	$LN78@SK_Describ

; 318  : 
; 319  :   case D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD:
; 320  :     return L"D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD";

	mov	eax, OFFSET $SG427768

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN43@SK_Describ:

; 315  : 
; 316  :   case D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS:
; 317  :     return L"D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS";

	mov	eax, OFFSET $SG427766

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN41@SK_Describ:

; 306  : 
; 307  : 
; 308  :     /* D3D11 */
; 309  : 
; 310  :   case D3D11_ERROR_FILE_NOT_FOUND:
; 311  :     return L"D3D11_ERROR_FILE_NOT_FOUND";

	mov	eax, OFFSET $SG427762

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN4@SK_Describ:

; 187  :   {
; 188  :     /* Generic (SUCCEEDED) */
; 189  : 
; 190  :   case S_OK:
; 191  :     return L"S_OK";

	mov	eax, OFFSET $SG427688

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN87@SK_Describ:

; 186  :   switch (result)

	mov	eax, ecx
	sub	eax, 1
	je	SHORT $LN5@SK_Describ
	sub	eax, 141953134				; 0876086eH
	jne	SHORT $LN78@SK_Describ

; 391  : 
; 392  : 
; 393  :   case D3DOK_NOAUTOGEN:
; 394  :     return L"D3DOK_NOAUTOGEN";

	mov	eax, OFFSET $SG427814

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN5@SK_Describ:

; 192  : 
; 193  :   case S_FALSE:
; 194  :     return L"S_FALSE";

	mov	eax, OFFSET $SG427690

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN32@SK_Describ:

; 277  : 
; 278  : 
; 279  :     /* DXGI (Status) */
; 280  :   case DXGI_STATUS_OCCLUDED:
; 281  :     return L"DXGI_STATUS_OCCLUDED";

	mov	eax, OFFSET $SG427744

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN85@SK_Describ:

; 186  :   switch (result)

	lea	eax, DWORD PTR [ecx-142213122]
	cmp	eax, 8
	ja	SHORT $LN78@SK_Describ
	jmp	DWORD PTR $LN94@SK_Describ[eax*4]
$LN33@SK_Describ:

; 282  : 
; 283  :   case DXGI_STATUS_UNOCCLUDED:
; 284  :     return L"DXGI_STATUS_UNOCCLUDED";

	mov	eax, OFFSET $SG427746

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN34@SK_Describ:

; 285  : 
; 286  :   case DXGI_STATUS_CLIPPED:
; 287  :     return L"DXGI_STATUS_CLIPPED";

	mov	eax, OFFSET $SG427748

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN35@SK_Describ:

; 288  : 
; 289  :   case DXGI_STATUS_NO_REDIRECTION:
; 290  :     return L"DXGI_STATUS_NO_REDIRECTION";

	mov	eax, OFFSET $SG427750

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN36@SK_Describ:

; 291  : 
; 292  :   case DXGI_STATUS_NO_DESKTOP_ACCESS:
; 293  :     return L"DXGI_STATUS_NO_DESKTOP_ACCESS";

	mov	eax, OFFSET $SG427752

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN37@SK_Describ:

; 294  : 
; 295  :   case DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE:
; 296  :     return L"DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE";

	mov	eax, OFFSET $SG427754

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN38@SK_Describ:

; 297  : 
; 298  :   case DXGI_STATUS_DDA_WAS_STILL_DRAWING:
; 299  :     return L"DXGI_STATUS_DDA_WAS_STILL_DRAWING";

	mov	eax, OFFSET $SG427756

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN39@SK_Describ:

; 300  : 
; 301  :   case DXGI_STATUS_MODE_CHANGED:
; 302  :     return L"DXGI_STATUS_MODE_CHANGED";

	mov	eax, OFFSET $SG427758

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN40@SK_Describ:

; 303  : 
; 304  :   case DXGI_STATUS_MODE_CHANGE_IN_PROGRESS:
; 305  :     return L"DXGI_STATUS_MODE_CHANGE_IN_PROGRESS";

	mov	eax, OFFSET $SG427760

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
$LN78@SK_Describ:

; 441  : 
; 442  :   default:
; 443  :     dll_log.Log (L" *** Encountered unknown HRESULT: (0x%08X)",

	push	ecx
	push	OFFSET $SG427836
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 444  :       (unsigned long)result);
; 445  :     return L"UNKNOWN";

	mov	eax, OFFSET $SG427837

; 446  :   }
; 447  : }

	pop	ebp
	ret	4
	npad	2
$LN91@SK_Describ:
	DD	$LN74@SK_Describ
	DD	$LN75@SK_Describ
	DD	$LN71@SK_Describ
	DD	$LN76@SK_Describ
	DD	$LN68@SK_Describ
$LN92@SK_Describ:
	DD	$LN46@SK_Describ
	DD	$LN47@SK_Describ
	DD	$LN48@SK_Describ
	DD	$LN49@SK_Describ
	DD	$LN50@SK_Describ
	DD	$LN51@SK_Describ
	DD	$LN52@SK_Describ
	DD	$LN53@SK_Describ
	DD	$LN54@SK_Describ
	DD	$LN55@SK_Describ
	DD	$LN56@SK_Describ
	DD	$LN57@SK_Describ
	DD	$LN58@SK_Describ
	DD	$LN59@SK_Describ
	DD	$LN60@SK_Describ
	DD	$LN61@SK_Describ
	DD	$LN63@SK_Describ
	DD	$LN64@SK_Describ
	DD	$LN65@SK_Describ
	DD	$LN78@SK_Describ
$LN88@SK_Describ:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	19					; 00000013H
	DB	7
	DB	8
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	9
	DB	10					; 0000000aH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	npad	3
$LN93@SK_Describ:
	DD	$LN16@SK_Describ
	DD	$LN13@SK_Describ
	DD	$LN20@SK_Describ
	DD	$LN7@SK_Describ
	DD	$LN6@SK_Describ
	DD	$LN8@SK_Describ
	DD	$LN19@SK_Describ
	DD	$LN10@SK_Describ
	DD	$LN11@SK_Describ
	DD	$LN9@SK_Describ
	DD	$LN14@SK_Describ
	DD	$LN15@SK_Describ
	DD	$LN17@SK_Describ
	DD	$LN18@SK_Describ
	DD	$LN21@SK_Describ
	DD	$LN22@SK_Describ
	DD	$LN23@SK_Describ
	DD	$LN24@SK_Describ
	DD	$LN25@SK_Describ
	DD	$LN26@SK_Describ
	DD	$LN27@SK_Describ
	DD	$LN28@SK_Describ
	DD	$LN78@SK_Describ
$LN89@SK_Describ:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	6
	DB	7
	DB	8
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	22					; 00000016H
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	21					; 00000015H
$LN94@SK_Describ:
	DD	$LN34@SK_Describ
	DD	$LN78@SK_Describ
	DD	$LN35@SK_Describ
	DD	$LN36@SK_Describ
	DD	$LN37@SK_Describ
	DD	$LN39@SK_Describ
	DD	$LN40@SK_Describ
	DD	$LN33@SK_Describ
	DD	$LN38@SK_Describ
?SK_DescribeHRESULT@@YGPB_WJ@Z ENDP			; SK_DescribeHRESULT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winbase.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winbase.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
$T2 = -64						; size = 32
_pDev9$3 = -32						; size = 4
_pDev9Ex$4 = -28					; size = 4
_pDev11$5 = -24						; size = 4
_fullscreen$6 = -20					; size = 4
_pSwapChain$7 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hr$ = 8						; size = 4
_pTest$8 = 12						; size = 4
_device$ = 12						; size = 4
?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z PROC		; SK_EndBufferSwap

; 2368 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 52					; 00000034H
	push	esi

; 2369 :   extern SK_RenderBackend __SK_RBkEnd;
; 2370 : 
; 2371 :   __SK_RBkEnd.thread = GetCurrentThreadId ();

	call	DWORD PTR __imp__GetCurrentThreadId@0

; 2372 : 
; 2373 :   if (device != nullptr)

	mov	esi, DWORD PTR _device$[ebp]
	mov	DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+84, eax
	test	esi, esi
	je	$LN6@SK_EndBuff
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 162  :         p = lp;

	mov	DWORD PTR _pDev9$3[ebp], 0
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2375 :     CComPtr <IDirect3DDevice9>   pDev9   = nullptr;

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 162  :         p = lp;

	mov	DWORD PTR _pDev9Ex$4[ebp], 0
	mov	DWORD PTR _pDev11$5[ebp], 0
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _pDev9Ex$4[ebp]
	push	ecx
	push	OFFSET __GUID_b18b10ce_2649_405a_870f_95f777d4313a
	push	esi
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2377 :     CComPtr <ID3D11Device>       pDev11  = nullptr;

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	call	DWORD PTR [eax]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2382 :     if (SUCCEEDED (device->QueryInterface <IDirect3DDevice9Ex> (&pDev9Ex)))

	test	eax, eax
	js	SHORT $LN8@SK_EndBuff

; 2383 :     {
; 2384 :       reinterpret_cast <int &> (__SK_RBkEnd.api) =
; 2385 :         ( static_cast <int> (SK_RenderAPI::D3D9  ) |
; 2386 :           static_cast <int> (SK_RenderAPI::D3D9Ex)  );
; 2387 : 
; 2388 :       wcsncpy (__SK_RBkEnd.name, L"D3D9Ex", 8);

	push	8
	mov	DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A, 24 ; 00000018H
	push	OFFSET $SG431288

; 2391 :     else if (SUCCEEDED (device->QueryInterface <IDirect3DDevice9> (&pDev9)))

	jmp	$LN114@SK_EndBuff
$LN8@SK_EndBuff:
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _pDev9$3[ebp]
	push	ecx
	push	OFFSET __GUID_d0223b96_bf7a_43fd_92bd_a43b0d82b9eb
	push	esi
	call	DWORD PTR [eax]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2391 :     else if (SUCCEEDED (device->QueryInterface <IDirect3DDevice9> (&pDev9)))

	test	eax, eax
	js	SHORT $LN10@SK_EndBuff

; 2392 :     {
; 2393 :                __SK_RBkEnd.api  = SK_RenderAPI::D3D9;
; 2394 :       wcsncpy (__SK_RBkEnd.name, L"D3D9  ", 8);

	push	8
	mov	DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A, 8
	push	OFFSET $SG431291

; 2397 :     else if (SUCCEEDED (device->QueryInterface <ID3D11Device> (&pDev11)))

	jmp	$LN114@SK_EndBuff
$LN10@SK_EndBuff:
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _pDev11$5[ebp]
	push	ecx
	push	OFFSET __GUID_db6f6ddb_ac77_4e88_8253_819df9bbf140
	push	esi
	call	DWORD PTR [eax]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2397 :     else if (SUCCEEDED (device->QueryInterface <ID3D11Device> (&pDev11)))

	test	eax, eax
	js	$LN12@SK_EndBuff

; 2398 :     {
; 2399 :       // Establish the API used this frame (and handle possible translation layers)
; 2400 :       //
; 2401 :       switch (SK_GetDLLRole ())

	call	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ	; SK_GetDLLRole
	cmp	eax, -1073741808			; c0000010H
	je	SHORT $LN14@SK_EndBuff
	cmp	eax, -1073741792			; c0000020H
	mov	ecx, 16448				; 00004040H
	mov	edx, 64					; 00000040H
	cmovne	ecx, edx
	mov	DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A, ecx

; 2405 :           break;
; 2406 :         case DLL_ROLE::DDraw:
; 2407 :           __SK_RBkEnd.api = SK_RenderAPI::DDrawOn11;
; 2408 :           break;

	jmp	SHORT $LN2@SK_EndBuff
$LN14@SK_EndBuff:

; 2402 :       {
; 2403 :         case DLL_ROLE::D3D8:
; 2404 :           __SK_RBkEnd.api = SK_RenderAPI::D3D8On11;

	mov	DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A, 8256 ; 00002040H
$LN2@SK_EndBuff:

; 2409 :         default:
; 2410 :           __SK_RBkEnd.api = SK_RenderAPI::D3D11;
; 2411 :           break;
; 2412 :       }
; 2413 : 
; 2414 :       IUnknown* pTest = nullptr;
; 2415 : 
; 2416 :       if (SUCCEEDED (device->QueryInterface (IID_ID3D11Device5,        (void **)&pTest))) {

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _pTest$8[ebp]
	push	ecx
	push	OFFSET ?IID_ID3D11Device5@@3U_GUID@@B
	push	esi
	mov	DWORD PTR _pTest$8[ebp], 0
	call	DWORD PTR [eax]
	test	eax, eax
	js	SHORT $LN17@SK_EndBuff

; 2417 :         wcsncpy (__SK_RBkEnd.name, L"D3D11.4", 8);

	push	8
	push	OFFSET $SG431299
	push	OFFSET ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4
	call	DWORD PTR __imp__wcsncpy

; 2418 :         pTest->Release ();

	mov	eax, DWORD PTR _pTest$8[ebp]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
	jmp	$LN26@SK_EndBuff
$LN17@SK_EndBuff:

; 2419 :       } else if (SUCCEEDED (device->QueryInterface (IID_ID3D11Device4, (void **)&pTest))) {

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _pTest$8[ebp]
	push	ecx
	push	OFFSET ?IID_ID3D11Device4@@3U_GUID@@B
	push	esi
	call	DWORD PTR [eax]
	test	eax, eax
	js	SHORT $LN19@SK_EndBuff

; 2420 :         wcsncpy (__SK_RBkEnd.name, L"D3D11.4", 8);

	push	8
	push	OFFSET $SG431302
	push	OFFSET ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4
	call	DWORD PTR __imp__wcsncpy

; 2421 :         pTest->Release ();

	mov	eax, DWORD PTR _pTest$8[ebp]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
	jmp	$LN26@SK_EndBuff
$LN19@SK_EndBuff:

; 2422 :       } else if (SUCCEEDED (device->QueryInterface (IID_ID3D11Device3, (void **)&pTest))) {

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _pTest$8[ebp]
	push	ecx
	push	OFFSET ?IID_ID3D11Device3@@3U_GUID@@B
	push	esi
	call	DWORD PTR [eax]
	test	eax, eax
	js	SHORT $LN21@SK_EndBuff

; 2423 :         wcsncpy (__SK_RBkEnd.name, L"D3D11.3", 8);

	push	8
	push	OFFSET $SG431305
	push	OFFSET ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4
	call	DWORD PTR __imp__wcsncpy

; 2424 :         pTest->Release ();

	mov	eax, DWORD PTR _pTest$8[ebp]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
	jmp	SHORT $LN26@SK_EndBuff
$LN21@SK_EndBuff:

; 2425 :       } else if (SUCCEEDED (device->QueryInterface (IID_ID3D11Device2, (void **)&pTest))) {

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _pTest$8[ebp]
	push	ecx
	push	OFFSET ?IID_ID3D11Device2@@3U_GUID@@B
	push	esi
	call	DWORD PTR [eax]
	test	eax, eax
	js	SHORT $LN23@SK_EndBuff

; 2426 :         wcsncpy (__SK_RBkEnd.name, L"D3D11.2", 8);

	push	8
	push	OFFSET $SG431308
	push	OFFSET ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4
	call	DWORD PTR __imp__wcsncpy

; 2427 :         pTest->Release ();

	mov	eax, DWORD PTR _pTest$8[ebp]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
	jmp	SHORT $LN26@SK_EndBuff
$LN23@SK_EndBuff:

; 2428 :       } else if (SUCCEEDED (device->QueryInterface (IID_ID3D11Device1, (void **)&pTest))) {

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _pTest$8[ebp]
	push	ecx
	push	OFFSET _IID_ID3D11Device1
	push	esi
	call	DWORD PTR [eax]

; 2429 :         wcsncpy (__SK_RBkEnd.name, L"D3D11.1", 8);

	push	8
	test	eax, eax
	js	SHORT $LN25@SK_EndBuff
	push	OFFSET $SG431311
	push	OFFSET ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4
	call	DWORD PTR __imp__wcsncpy

; 2430 :         pTest->Release ();

	mov	eax, DWORD PTR _pTest$8[ebp]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]

; 2431 :       } else {

	jmp	SHORT $LN26@SK_EndBuff
$LN25@SK_EndBuff:

; 2432 :         wcsncpy (__SK_RBkEnd.name, L"D3D11 ", 8);

	push	OFFSET $SG431312
	push	OFFSET ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4
	call	DWORD PTR __imp__wcsncpy
	add	esp, 12					; 0000000cH
$LN26@SK_EndBuff:

; 2433 :       }
; 2434 : 
; 2435 :       if (SK_GetDLLRole () == DLL_ROLE::D3D8)

	call	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ	; SK_GetDLLRole
	cmp	eax, -1073741808			; c0000010H
	jne	SHORT $LN27@SK_EndBuff

; 2436 :       {
; 2437 :         wcscpy (__SK_RBkEnd.name, L"D3D8");

	mov	ax, WORD PTR $SG431315+8
	movq	xmm0, QWORD PTR $SG431315
	mov	WORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+12, ax
	jmp	SHORT $LN115@SK_EndBuff
$LN27@SK_EndBuff:

; 2438 :       }
; 2439 : 
; 2440 :       else if (SK_GetDLLRole () == DLL_ROLE::DDraw)

	cmp	eax, -1073741792			; c0000020H
	jne	SHORT $LN29@SK_EndBuff

; 2441 :       {
; 2442 :         wcscpy (__SK_RBkEnd.name, L"DDraw");

	mov	eax, DWORD PTR $SG431317+8
	movq	xmm0, QWORD PTR $SG431317
	mov	DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+12, eax
$LN115@SK_EndBuff:
	movq	QWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4, xmm0
$LN29@SK_EndBuff:

; 2443 :       }
; 2444 : 
; 2445 : 
; 2446 :       if ( static_cast <int> (__SK_RBkEnd.api)  &

	test	BYTE PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A, 64 ; 00000040H
	je	SHORT $LN88@SK_EndBuff
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 162  :         p = lp;

	xor	eax, eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2449 :         BOOL fullscreen = FALSE;

	mov	DWORD PTR _fullscreen$6[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 162  :         p = lp;

	mov	DWORD PTR _pSwapChain$7[ebp], eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2452 :         if (__SK_RBkEnd.swapchain)

	mov	ecx, DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+40
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	test	ecx, ecx
	je	SHORT $LN32@SK_EndBuff
; File c:\program files (x86)\windows kits\8.1\include\um\unknwnbase.h

; 131  :                 return QueryInterface(__uuidof(Q), (void **)pp);

	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR _pSwapChain$7[ebp]
	push	edx
	push	OFFSET __GUID_310d36a0_d2e7_4c0a_aa04_6a9d23b8886a
	push	ecx
	call	DWORD PTR [eax]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2455 :         if ( pSwapChain &&

	mov	eax, DWORD PTR _pSwapChain$7[ebp]
	test	eax, eax
	je	SHORT $LN32@SK_EndBuff
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _fullscreen$6[ebp]
	push	0
	push	edx
	push	eax
	call	DWORD PTR [ecx+44]
	test	eax, eax

; 2459 :         }
; 2460 : 
; 2461 :         else

	mov	eax, DWORD PTR _pSwapChain$7[ebp]
	js	SHORT $LN32@SK_EndBuff

; 2456 :   SUCCEEDED (pSwapChain->GetFullscreenState (&fullscreen, nullptr)) )
; 2457 :         {
; 2458 :           __SK_RBkEnd.fullscreen_exclusive = fullscreen;

	cmp	DWORD PTR _fullscreen$6[ebp], 0
	setne	BYTE PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+48

; 2459 :         }
; 2460 : 
; 2461 :         else

	jmp	SHORT $LN33@SK_EndBuff
$LN32@SK_EndBuff:

; 2462 :           __SK_RBkEnd.fullscreen_exclusive = false;

	mov	BYTE PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+48, 0
$LN33@SK_EndBuff:

; 2463 :       }

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 176  :         if (p)

	test	eax, eax
	je	SHORT $LN88@SK_EndBuff

; 177  :             p->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$LN88@SK_EndBuff:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2466 :                   SK_D3D11_EndFrame ();

	call	?SK_D3D11_EndFrame@@YAXXZ		; SK_D3D11_EndFrame

; 2467 : #ifdef _WIN64
; 2468 :     }
; 2469 : 
; 2470 : 
; 2471 :     else if (SUCCEEDED (device->QueryInterface (IID_PPV_ARGS (&pDev12))))
; 2472 :     {
; 2473 :                __SK_RBkEnd.api  = SK_RenderAPI::D3D12;
; 2474 :       wcsncpy (__SK_RBkEnd.name, L"D3D12 ", 8);
; 2475 : #endif
; 2476 :     }
; 2477 : 
; 2478 :     else

	jmp	SHORT $LN13@SK_EndBuff
$LN12@SK_EndBuff:

; 2479 :     {
; 2480 :                __SK_RBkEnd.api  = SK_RenderAPI::Reserved;
; 2481 :       wcsncpy (__SK_RBkEnd.name, L"UNKNOWN", 8);

	push	8
	mov	DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A, 1
	push	OFFSET $SG431322
$LN114@SK_EndBuff:
	push	OFFSET ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4
	call	DWORD PTR __imp__wcsncpy
	add	esp, 12					; 0000000cH
$LN13@SK_EndBuff:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 176  :         if (p)

	mov	eax, DWORD PTR _pDev11$5[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2483 :   }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 176  :         if (p)

	test	eax, eax
	je	SHORT $LN94@SK_EndBuff

; 177  :             p->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$LN94@SK_EndBuff:

; 176  :         if (p)

	mov	eax, DWORD PTR _pDev9Ex$4[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2483 :   }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 176  :         if (p)

	test	eax, eax
	je	SHORT $LN100@SK_EndBuff

; 177  :             p->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$LN100@SK_EndBuff:

; 176  :         if (p)

	mov	eax, DWORD PTR _pDev9$3[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2483 :   }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlcomcli.h

; 176  :         if (p)

	test	eax, eax
	je	SHORT $LN34@SK_EndBuff

; 177  :             p->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2485 :   else

	jmp	SHORT $LN34@SK_EndBuff
$LN6@SK_EndBuff:

; 2486 :   {
; 2487 :     if (config.apis.OpenGL.hook && SK_GetCurrentGLContext () != nullptr)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+818, 0
	je	SHORT $LN34@SK_EndBuff
	call	?SK_GetCurrentGLContext@@YGPAUHGLRC__@@XZ ; SK_GetCurrentGLContext
	test	eax, eax
	je	SHORT $LN34@SK_EndBuff

; 2488 :     {
; 2489 :                __SK_RBkEnd.api  = SK_RenderAPI::OpenGL;
; 2490 :       wcsncpy (__SK_RBkEnd.name, L"OpenGL", 8);

	push	8
	push	OFFSET $SG431324
	push	OFFSET ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A+4
	mov	DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A, 2
	call	DWORD PTR __imp__wcsncpy
	add	esp, 12					; 0000000cH
$LN34@SK_EndBuff:

; 2494 :   config.apis.last_known =

	mov	eax, DWORD PTR ?__SK_RBkEnd@@3VSK_RenderBackend_V2@@A
; File c:\program files (x86)\windows kits\8.1\include\um\winbase.h

; 9003 :     return (unsigned long) _InterlockedCompareExchange((volatile long*) Destination, (long) Exchange, (long) Comperand);

	mov	ecx, 1
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2494 :   config.apis.last_known =

	mov	DWORD PTR ?config@@3Usk_config_t@@A+824, eax
; File c:\program files (x86)\windows kits\8.1\include\um\winbase.h

; 9003 :     return (unsigned long) _InterlockedCompareExchange((volatile long*) Destination, (long) Exchange, (long) Comperand);

	mov	edx, OFFSET ?budget_init@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4KC
	xor	eax, eax
	lock	 cmpxchg DWORD PTR [edx], ecx
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2500 :   if (! InterlockedCompareExchange (&budget_init, TRUE, FALSE))

	test	eax, eax
	jne	SHORT $LN35@SK_EndBuff

; 2501 :   {
; 2502 :     SK::DXGI::StartBudgetThread_NoAdapter ();

	call	?StartBudgetThread_NoAdapter@DXGI@SK@@YAJXZ ; SK::DXGI::StartBudgetThread_NoAdapter
$LN35@SK_EndBuff:

; 2503 :   }
; 2504 : 
; 2505 : 
; 2506 :   DoKeyboard ();

	call	?DoKeyboard@@YAXXZ			; DoKeyboard

; 2507 : 
; 2508 :   InterlockedIncrement (&frames_drawn);

	lock	 inc	 DWORD PTR ?frames_drawn@@3JC

; 2509 : 
; 2510 :   if (config.sli.show && device != nullptr)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+40, 0
	je	SHORT $LN37@SK_EndBuff
	test	esi, esi
	je	SHORT $LN37@SK_EndBuff

; 2511 :   {
; 2512 :     // Get SLI status for the frame we just displayed... this will show up
; 2513 :     //   one frame late, but this is the safest approach.
; 2514 :     if (nvapi_init && sk::NVAPI::CountSLIGPUs () > 0)

	cmp	DWORD PTR ?nvapi_init@@3HA, 0		; nvapi_init
	je	SHORT $LN37@SK_EndBuff
	call	?CountSLIGPUs@NVAPI@sk@@YAHXZ		; sk::NVAPI::CountSLIGPUs
	test	eax, eax
	jle	SHORT $LN37@SK_EndBuff

; 2515 :     {
; 2516 :       sli_state = sk::NVAPI::GetSLIState (device);

	lea	eax, DWORD PTR $T2[ebp]
	push	esi
	push	eax
	call	?GetSLIState@NVAPI@sk@@YA?AUNV_GET_CURRENT_SLI_STATE_V2@@PAUIUnknown@@@Z ; sk::NVAPI::GetSLIState
	add	esp, 8
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR ?sli_state@@3UNV_GET_CURRENT_SLI_STATE_V2@@A, xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR ?sli_state@@3UNV_GET_CURRENT_SLI_STATE_V2@@A+16, xmm0
$LN37@SK_EndBuff:

; 2517 :     }
; 2518 :   }
; 2519 : 
; 2520 :   static HMODULE hModTZFix = GetModuleHandle (L"tzfix.dll");

	mov	eax, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR __tls_index
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jle	SHORT $LN4@SK_EndBuff
	push	OFFSET ?$TSS0@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4HA, -1
	jne	SHORT $LN4@SK_EndBuff
	mov	esi, DWORD PTR __imp__GetModuleHandleW@4
	push	OFFSET $SG431328
	call	esi

; 2521 :   static HMODULE hModTBFix = GetModuleHandle (L"tbfix.dll");

	push	OFFSET $SG431329
	mov	DWORD PTR ?hModTZFix@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4PAUHINSTANCE__@@A, eax
	call	esi
	push	OFFSET ?$TSS0@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4HA
	mov	DWORD PTR ?hModTBFix@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4PAUHINSTANCE__@@A, eax
	call	__Init_thread_footer
	add	esp, 4
$LN4@SK_EndBuff:

; 2522 : 
; 2523 :   //
; 2524 :   // TZFix has its own limiter
; 2525 :   //
; 2526 :   if (! (hModTZFix || hModTBFix))

	cmp	DWORD PTR ?hModTZFix@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4PAUHINSTANCE__@@A, 0
	pop	esi
	jne	SHORT $LN110@SK_EndBuff
	cmp	DWORD PTR ?hModTBFix@?1??SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z@4PAUHINSTANCE__@@A, 0
	jne	SHORT $LN110@SK_EndBuff

; 2527 :   {
; 2528 :     SK::Framerate::GetLimiter ()->wait ();

	call	?GetLimiter@Framerate@SK@@YAPAVLimiter@12@XZ ; SK::Framerate::GetLimiter
	mov	ecx, eax
	call	?wait@Limiter@Framerate@SK@@QAEXXZ	; SK::Framerate::Limiter::wait
$LN110@SK_EndBuff:

; 2529 :   }
; 2530 : 
; 2531 :   return hr;
; 2532 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z$0:
	lea	ecx, DWORD PTR _pDev9$3[ebp]
	jmp	??1?$CComPtr@UIDirect3DDevice9@@@ATL@@QAE@XZ
__unwindfunclet$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z$1:
	lea	ecx, DWORD PTR _pDev9Ex$4[ebp]
	jmp	??1?$CComPtr@UIDirect3DDevice9Ex@@@ATL@@QAE@XZ
__unwindfunclet$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z$2:
	lea	ecx, DWORD PTR _pDev11$5[ebp]
	jmp	??1?$CComPtr@UID3D11Device@@@ATL@@QAE@XZ
__unwindfunclet$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z$3:
	lea	ecx, DWORD PTR _pSwapChain$7[ebp]
	jmp	??1?$CComPtr@UIDXGISwapChain@@@ATL@@QAE@XZ
__ehhandler$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z ENDP		; SK_EndBufferSwap
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_wszEnvVar$1 = -2784					; size = 584
_wszWorkingDir$2 = -2200				; size = 524
_wszEnvPath$3 = -1676					; size = 584
_wszCEGUITestDLL$4 = -1092				; size = 520
_wszCEGUIModPath$5 = -572				; size = 520
$T6 = -52						; size = 24
$T7 = -28						; size = 24
_DelayLoadDLL$8 = -4					; size = 4
?SK_BeginBufferSwap@@YGXXZ PROC				; SK_BeginBufferSwap

; 1984 : {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1984 : {

	sub	esp, 2784				; 00000ae0H
	push	ebx
	push	esi
	push	edi

; 1986 :   if ( ReadAcquire (&SK_bypass_dialog_active) &&

	test	eax, eax
	je	SHORT $LN6@SK_BeginBu
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	esi, DWORD PTR ?SK_bypass_dialog_tid@@3JC ; SK_bypass_dialog_tid
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1986 :   if ( ReadAcquire (&SK_bypass_dialog_active) &&

	call	DWORD PTR __imp__GetCurrentThreadId@0
	cmp	esi, eax
	jne	SHORT $LN6@SK_BeginBu

; 1987 :        ReadAcquire (&SK_bypass_dialog_tid) == static_cast <LONG> (GetCurrentThreadId ()) )
; 1988 :   {
; 1989 :     MsgWaitForMultipleObjectsEx (0, nullptr, 166, QS_ALLINPUT, MWMO_ALERTABLE);

	push	2
	push	1279					; 000004ffH
	push	166					; 000000a6H
	push	0
	push	0
	call	DWORD PTR __imp__MsgWaitForMultipleObjectsEx@20
$LN6@SK_BeginBu:

; 1990 :   }
; 1991 : 
; 1992 :   // ^^^ Use condition variable instead
; 1993 : 
; 1994 : 
; 1995 :   // Maybe make this into an option, but for now just get this the hell out of there
; 1996 :   //   almost no software should be shipping with FP exceptions, it causes compatibility problems.
; 1997 :   _controlfp (MCW_EM, MCW_EM);

	push	524319					; 0008001fH
	push	524319					; 0008001fH
	call	DWORD PTR __imp___controlfp
	add	esp, 8

; 1998 : 
; 1999 :   ImGuiIO& io =

	call	?GetIO@ImGui@@YAAAUImGuiIO@@XZ		; ImGui::GetIO

; 2000 :     ImGui::GetIO ();
; 2001 : 
; 2002 :   if (io.Fonts == nullptr)

	cmp	DWORD PTR [eax+128], 0
	jne	SHORT $LN7@SK_BeginBu

; 2003 :   {
; 2004 :     extern void
; 2005 :     SK_ImGui_LoadFonts (void);
; 2006 : 
; 2007 :     SK_ImGui_LoadFonts ();

	call	?SK_ImGui_LoadFonts@@YAXXZ		; SK_ImGui_LoadFonts
$LN7@SK_BeginBu:

; 2008 :   }
; 2009 : 
; 2010 : 
; 2011 :   static int import_tries = 0;
; 2012 : 
; 2013 :   if (import_tries++ == 0)

	mov	eax, DWORD PTR ?import_tries@?1??SK_BeginBufferSwap@@YGXXZ@4HA
	mov	ecx, eax
	mov	edi, DWORD PTR __imp__GetModuleHandleW@4
	inc	eax
	mov	DWORD PTR ?import_tries@?1??SK_BeginBufferSwap@@YGXXZ@4HA, eax
	test	ecx, ecx
	jne	SHORT $LN10@SK_BeginBu

; 2014 :   {
; 2015 :   // Load user-defined DLLs (Late)
; 2016 : #ifdef _WIN64
; 2017 :     SK_LoadLateImports64 ();
; 2018 : #else
; 2019 :     SK_LoadLateImports32 ();

	call	?SK_LoadLateImports32@@YAXXZ		; SK_LoadLateImports32
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8117 :     Value = *Source;

	mov	ecx, DWORD PTR ?SK_SteamAPI_CallbackRunCount@@3_JC
	mov	eax, DWORD PTR ?SK_SteamAPI_CallbackRunCount@@3_JC+4
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2022 :     if (ReadAcquire64 (&SK_SteamAPI_CallbackRunCount) < 1)

	test	eax, eax
	jg	SHORT $LN9@SK_BeginBu
	jl	SHORT $LN93@SK_BeginBu
	cmp	ecx, 1
	jae	SHORT $LN9@SK_BeginBu
$LN93@SK_BeginBu:

; 2023 :     {
; 2024 :       // Steam Init: Better late than never
; 2025 : 
; 2026 :       SK_TestSteamImports (GetModuleHandle (nullptr));

	push	0
	call	edi
	push	eax
	call	?SK_TestSteamImports@@YAXPAUHINSTANCE__@@@Z ; SK_TestSteamImports
	add	esp, 4
$LN9@SK_BeginBu:

; 2027 :     }
; 2028 : 
; 2029 :     if (config.system.handle_crashes)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+840, 0
	je	SHORT $LN10@SK_BeginBu

; 2030 :       SK::Diagnostics::CrashHandler::Reinstall ();

	call	?Reinstall@CrashHandler@Diagnostics@SK@@YAXXZ ; SK::Diagnostics::CrashHandler::Reinstall
$LN10@SK_BeginBu:
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8077 :     Value = *Source;

	mov	eax, DWORD PTR ?first@?1??SK_BeginBufferSwap@@YGXXZ@4JC
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2036 :   if (ReadNoFence (&first))

	mov	ebx, 1
	test	eax, eax
	je	SHORT $LN13@SK_BeginBu

; 2037 :   {
; 2038 :     if (SK_GetGameWindow () != nullptr)

	call	?SK_GetGameWindow@@YGPAUHWND__@@XZ	; SK_GetGameWindow
	test	eax, eax
	je	SHORT $LN13@SK_BeginBu

; 2039 :     {
; 2040 :       extern void SK_ResetWindow ();
; 2041 : 
; 2042 :       if (InterlockedCompareExchange (&first, FALSE, TRUE))

	xor	ecx, ecx
	mov	edx, OFFSET ?first@?1??SK_BeginBufferSwap@@YGXXZ@4JC
	mov	eax, ebx
	lock	 cmpxchg DWORD PTR [edx], ecx
	test	eax, eax
	je	SHORT $LN13@SK_BeginBu

; 2043 :         SK_ResetWindow ();

	call	?SK_ResetWindow@@YAXXZ			; SK_ResetWindow
$LN13@SK_BeginBu:

; 2044 :     }
; 2045 :   }
; 2046 : 
; 2047 : 
; 2048 :   static volatile LONG cegui_init = FALSE;
; 2049 :   static SK_RenderAPI  last_api   = SK_RenderAPI::Reserved;
; 2050 : 
; 2051 :   if ( (SK_GetCurrentRenderBackend ().api != SK_RenderAPI::Reserved) &&

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	DWORD PTR [eax], ebx
	je	$LN16@SK_BeginBu
	mov	ecx, ebx
	mov	edx, OFFSET ?cegui_init@?1??SK_BeginBufferSwap@@YGXXZ@4JC
	xor	eax, eax
	lock	 cmpxchg DWORD PTR [edx], ecx
	test	eax, eax
	je	SHORT $LN15@SK_BeginBu
	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	mov	ecx, DWORD PTR ?last_api@?1??SK_BeginBufferSwap@@YGXXZ@4W4SK_RenderAPI@@A
	cmp	ecx, DWORD PTR [eax]
	je	$LN16@SK_BeginBu
$LN15@SK_BeginBu:

; 2052 :        ( (! InterlockedCompareExchange (&cegui_init, 1, 0)) ||
; 2053 :           last_api != SK_GetCurrentRenderBackend ().api ) )
; 2054 :   {
; 2055 :     if (config.cegui.enable)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+160, 0
	je	$LN16@SK_BeginBu

; 2056 :     {
; 2057 :       // Brutally stupid hack for brutally stupid OS (Windows 7)
; 2058 :       //
; 2059 :       //   1. Lock the DLL loader + Suspend all Threads
; 2060 :       //   2. Change Working Dir  + Delay-Load CEGUI DLLs
; 2061 :       //   3. Restore Working Dir
; 2062 :       //   4. Resume all Threads  + Unlock DLL Loader
; 2063 :       //
; 2064 :       //     >> Not necessary if the kernel supports altered DLL serarch
; 2065 :       //          paths <<
; 2066 :       //
; 2067 : 
; 2068 :       SK_LockDllLoader ();

	call	?SK_LockDllLoader@@YGXXZ		; SK_LockDllLoader

; 2069 : 
; 2070 :       // Disable until we validate CEGUI's state
; 2071 :       config.cegui.enable = false;
; 2072 : 
; 2073 :       wchar_t wszCEGUIModPath [MAX_PATH]        = { };

	push	520					; 00000208H
	lea	eax, DWORD PTR _wszCEGUIModPath$5[ebp]
	mov	BYTE PTR ?config@@3Usk_config_t@@A+160, 0
	push	0
	push	eax
	call	_memset

; 2074 :       wchar_t wszCEGUITestDLL [MAX_PATH]        = { };

	push	520					; 00000208H
	lea	eax, DWORD PTR _wszCEGUITestDLL$4[ebp]
	push	0
	push	eax
	call	_memset

; 2075 :       wchar_t wszEnvPath      [ MAX_PATH + 32 ] = { };

	push	584					; 00000248H
	lea	eax, DWORD PTR _wszEnvPath$3[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 36					; 00000024H

; 2076 : 
; 2077 : 
; 2078 :   #ifdef _WIN64
; 2079 :       _swprintf (wszCEGUIModPath, L"%sCEGUI\\bin\\x64",   SK_GetRootPath ());
; 2080 : 
; 2081 :       if (GetFileAttributes (wszCEGUIModPath) == INVALID_FILE_ATTRIBUTES)
; 2082 :       {
; 2083 :         _swprintf ( wszCEGUIModPath, L"%s\\My Mods\\SpecialK\\CEGUI\\bin\\x64",
; 2084 :                       SK_GetDocumentsDir ().c_str () );
; 2085 : 
; 2086 :         _swprintf (wszEnvPath, L"CEGUI_PARENT_DIR=%s\\My Mods\\SpecialK\\", SK_GetDocumentsDir ().c_str ());
; 2087 :       }
; 2088 : 
; 2089 :       else
; 2090 :       {
; 2091 :         _swprintf (wszEnvPath, L"CEGUI_PARENT_DIR=%s", SK_GetRootPath ());
; 2092 :       }
; 2093 :   #else
; 2094 :       _swprintf (wszCEGUIModPath, L"%sCEGUI\\bin\\Win32",  SK_GetRootPath ());

	call	?SK_GetRootPath@@YGPB_WXZ		; SK_GetRootPath
	mov	esi, eax
	lea	eax, DWORD PTR _wszCEGUIModPath$5[ebp]
	push	esi
	push	OFFSET $SG430831
	push	eax
	call	__swprintf
	add	esp, 12					; 0000000cH

; 2095 : 
; 2096 :       if (GetFileAttributes (wszCEGUIModPath) == INVALID_FILE_ATTRIBUTES)

	lea	eax, DWORD PTR _wszCEGUIModPath$5[ebp]
	push	eax
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	eax, -1
	jne	SHORT $LN17@SK_BeginBu

; 2098 :         _swprintf ( wszCEGUIModPath, L"%s\\My Mods\\SpecialK\\CEGUI\\bin\\Win32",

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?SK_GetDocumentsDir@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_GetDocumentsDir
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN61@SK_BeginBu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN61@SK_BeginBu:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2098 :         _swprintf ( wszCEGUIModPath, L"%s\\My Mods\\SpecialK\\CEGUI\\bin\\Win32",

	push	eax
	lea	eax, DWORD PTR _wszCEGUIModPath$5[ebp]
	push	OFFSET $SG430834
	push	eax
	call	__swprintf
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 2101 :         _swprintf (wszEnvPath, L"CEGUI_PARENT_DIR=%s\\My Mods\\SpecialK\\", SK_GetDocumentsDir ().c_str ());

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	?SK_GetDocumentsDir@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_GetDocumentsDir
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN80@SK_BeginBu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN80@SK_BeginBu:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2101 :         _swprintf (wszEnvPath, L"CEGUI_PARENT_DIR=%s\\My Mods\\SpecialK\\", SK_GetDocumentsDir ().c_str ());

	push	eax
	lea	eax, DWORD PTR _wszEnvPath$3[ebp]
	push	OFFSET $SG430835
	push	eax
	call	__swprintf
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 2102 :       }
; 2103 :       else

	jmp	SHORT $LN18@SK_BeginBu
$LN17@SK_BeginBu:

; 2104 :         _swprintf (wszEnvPath, L"CEGUI_PARENT_DIR=%s", SK_GetRootPath ());

	push	esi
	lea	eax, DWORD PTR _wszEnvPath$3[ebp]
	push	OFFSET $SG430836
	push	eax
	call	__swprintf
	add	esp, 12					; 0000000cH
$LN18@SK_BeginBu:

; 2105 :   #endif
; 2106 : 
; 2107 :       _wputenv  (wszEnvPath);

	lea	eax, DWORD PTR _wszEnvPath$3[ebp]
	push	eax
	call	DWORD PTR __imp___wputenv

; 2108 : 
; 2109 :       lstrcatW      (wszCEGUITestDLL, wszCEGUIModPath);

	mov	esi, DWORD PTR __imp__lstrcatW@8
	lea	eax, DWORD PTR _wszCEGUIModPath$5[ebp]
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _wszCEGUITestDLL$4[ebp]
	push	eax
	call	esi

; 2110 :       lstrcatW      (wszCEGUITestDLL, L"\\CEGUIBase-0.dll");

	push	OFFSET $SG430837
	lea	eax, DWORD PTR _wszCEGUITestDLL$4[ebp]
	push	eax
	call	esi

; 2111 : 
; 2112 :       wchar_t wszWorkingDir [MAX_PATH + 2] = { };

	push	524					; 0000020cH
	lea	eax, DWORD PTR _wszWorkingDir$2[ebp]
	push	0
	push	eax
	call	_memset

; 2113 : 
; 2114 :       if (! config.cegui.safe_init)

	mov	ebx, DWORD PTR __imp__SetCurrentDirectoryW@4
	add	esp, 12					; 0000000cH
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+161, 0
	jne	SHORT $LN19@SK_BeginBu

; 2115 :       {
; 2116 :         //std::queue <DWORD> tids =
; 2117 :         //  SK_SuspendAllOtherThreads ();
; 2118 : 
; 2119 :         GetCurrentDirectory    (MAX_PATH, wszWorkingDir);

	lea	eax, DWORD PTR _wszWorkingDir$2[ebp]
	push	eax
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8

; 2120 :         SetCurrentDirectory    (        wszCEGUIModPath);

	lea	eax, DWORD PTR _wszCEGUIModPath$5[ebp]
	push	eax
	call	ebx
$LN19@SK_BeginBu:

; 2121 :       }
; 2122 : 
; 2123 :       // This is only guaranteed to be supported on Windows 8, but Win7 and Vista
; 2124 :       //   do support it if a certain Windows Update (KB2533623) is installed.
; 2125 :       using AddDllDirectory_pfn          = DLL_DIRECTORY_COOKIE (WINAPI *)(_In_ PCWSTR               NewDirectory);
; 2126 :       using RemoveDllDirectory_pfn       = BOOL                 (WINAPI *)(_In_ DLL_DIRECTORY_COOKIE Cookie);
; 2127 :       using SetDefaultDllDirectories_pfn = BOOL                 (WINAPI *)(_In_ DWORD                DirectoryFlags);
; 2128 : 
; 2129 :       static auto k32_AddDllDirectory =

	mov	eax, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR __tls_index
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?BO@??SK_BeginBufferSwap@@YGXXZ@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jg	$LN98@SK_BeginBu
$LN94@SK_BeginBu:

; 2142 :                              "SetDefaultDllDirectories" );
; 2143 : 
; 2144 :       if ( k32_AddDllDirectory          && k32_RemoveDllDirectory &&
; 2145 :            k32_SetDefaultDllDirectories &&

	cmp	DWORD PTR ?k32_AddDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GPAXPB_W@ZA, 0
	je	$LN95@SK_BeginBu
	cmp	DWORD PTR ?k32_RemoveDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHPAX@ZA, 0
	je	$LN95@SK_BeginBu
	cmp	DWORD PTR ?k32_SetDefaultDllDirectories@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHK@ZA, 0
	je	$LN95@SK_BeginBu
	lea	eax, DWORD PTR _wszCEGUITestDLL$4[ebp]
	push	eax
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	eax, -1
	je	$LN95@SK_BeginBu

; 2146 : 
; 2147 :              GetFileAttributesW (wszCEGUITestDLL) != INVALID_FILE_ATTRIBUTES )
; 2148 :       {
; 2149 :         SK_StripUserNameFromPathW (wszCEGUITestDLL);

	lea	eax, DWORD PTR _wszCEGUITestDLL$4[ebp]
	push	eax
	call	?SK_StripUserNameFromPathW@@YA_NPA_W@Z	; SK_StripUserNameFromPathW

; 2150 : 
; 2151 :         dll_log.Log (L"[  CEGUI   ] Enabling CEGUI: (%s)", wszCEGUITestDLL);

	lea	eax, DWORD PTR _wszCEGUITestDLL$4[ebp]
	push	eax
	push	OFFSET $SG430846
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 2152 : 
; 2153 :         wchar_t wszEnvVar [ MAX_PATH + 32 ] = { };

	push	584					; 00000248H
	lea	eax, DWORD PTR _wszEnvVar$1[ebp]
	push	0
	push	eax
	call	_memset

; 2154 : 
; 2155 :         _swprintf (wszEnvVar, L"CEGUI_MODULE_DIR=%s", wszCEGUIModPath);

	lea	eax, DWORD PTR _wszCEGUIModPath$5[ebp]
	push	eax
	lea	eax, DWORD PTR _wszEnvVar$1[ebp]
	push	OFFSET $SG430847
	push	eax
	call	__swprintf

; 2156 :         _wputenv  (wszEnvVar);

	lea	eax, DWORD PTR _wszEnvVar$1[ebp]
	push	eax
	call	DWORD PTR __imp___wputenv
	add	esp, 44					; 0000002cH

; 2186 :             };

	lea	eax, DWORD PTR _wszCEGUIModPath$5[ebp]

; 2187 : 
; 2188 :         if (DelayLoadDLL ("CEGUIBase-0.dll"))

	lea	ecx, DWORD PTR _DelayLoadDLL$8[ebp]

; 2186 :             };

	mov	DWORD PTR _DelayLoadDLL$8[ebp], eax

; 2187 : 
; 2188 :         if (DelayLoadDLL ("CEGUIBase-0.dll"))

	push	OFFSET $SG430849
	call	??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z ; <lambda_e90c1de77d7500ca5331d50c90c1ba3f>::operator()
	test	al, al
	je	$LN95@SK_BeginBu

; 2189 :         {
; 2190 :           if (SK_GetCurrentRenderBackend ().api == SK_RenderAPI::OpenGL)

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN97@SK_BeginBu

; 2191 :           {
; 2192 :             if (config.apis.OpenGL.hook)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+818, 0
	je	SHORT $LN97@SK_BeginBu

; 2193 :             {
; 2194 :               if (DelayLoadDLL ("CEGUIOpenGLRenderer-0.dll"))

	push	OFFSET $SG430853
	lea	ecx, DWORD PTR _DelayLoadDLL$8[ebp]
	call	??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z ; <lambda_e90c1de77d7500ca5331d50c90c1ba3f>::operator()
	movzx	ecx, BYTE PTR ?config@@3Usk_config_t@@A+160
	test	al, al
	mov	esi, 1
	cmovne	ecx, esi
	mov	BYTE PTR ?config@@3Usk_config_t@@A+160, cl
	jmp	SHORT $LN24@SK_BeginBu
$LN97@SK_BeginBu:
	mov	esi, 1
$LN24@SK_BeginBu:

; 2195 :                 config.cegui.enable = true;
; 2196 :             }
; 2197 :           }
; 2198 : 
; 2199 :           if ( SK_GetCurrentRenderBackend ().api == SK_RenderAPI::D3D9 ||

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	DWORD PTR [eax], 8
	je	SHORT $LN26@SK_BeginBu
	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	cmp	DWORD PTR [eax], 24			; 00000018H
	jne	SHORT $LN29@SK_BeginBu
$LN26@SK_BeginBu:

; 2200 :                SK_GetCurrentRenderBackend ().api == SK_RenderAPI::D3D9Ex )
; 2201 :           {
; 2202 :             if (config.apis.d3d9.hook || config.apis.d3d9ex.hook)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+815, 0
	jne	SHORT $LN28@SK_BeginBu
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+816, 0
	je	SHORT $LN29@SK_BeginBu
$LN28@SK_BeginBu:

; 2203 :             {
; 2204 :               if (DelayLoadDLL ("CEGUIDirect3D9Renderer-0.dll"))

	push	OFFSET $SG430859
	lea	ecx, DWORD PTR _DelayLoadDLL$8[ebp]
	call	??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z ; <lambda_e90c1de77d7500ca5331d50c90c1ba3f>::operator()
	movzx	ecx, BYTE PTR ?config@@3Usk_config_t@@A+160
	test	al, al
	cmovne	ecx, esi
	mov	BYTE PTR ?config@@3Usk_config_t@@A+160, cl
$LN29@SK_BeginBu:

; 2205 :                 config.cegui.enable = true;
; 2206 :             }
; 2207 :           }
; 2208 : 
; 2209 :           if (config.apis.dxgi.d3d11.hook)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+817, 0
	je	SHORT $LN95@SK_BeginBu

; 2210 :           {
; 2211 :             if ( static_cast <int> (SK_GetCurrentRenderBackend ().api) &

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	test	BYTE PTR [eax], 64			; 00000040H
	je	SHORT $LN95@SK_BeginBu

; 2212 :                  static_cast <int> (SK_RenderAPI::D3D11              ) )
; 2213 :             {
; 2214 :               if (DelayLoadDLL ("CEGUIDirect3D11Renderer-0.dll"))

	push	OFFSET $SG430863
	lea	ecx, DWORD PTR _DelayLoadDLL$8[ebp]
	call	??R<lambda_e90c1de77d7500ca5331d50c90c1ba3f>@@QBE_NPBD@Z ; <lambda_e90c1de77d7500ca5331d50c90c1ba3f>::operator()
	movzx	ecx, BYTE PTR ?config@@3Usk_config_t@@A+160
	test	al, al
	cmovne	ecx, esi
	mov	BYTE PTR ?config@@3Usk_config_t@@A+160, cl
$LN95@SK_BeginBu:

; 2215 :                 config.cegui.enable = true;
; 2216 :             }
; 2217 :           }
; 2218 :         }
; 2219 :       }
; 2220 : 
; 2221 :       if (! config.cegui.safe_init)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+161, 0
	jne	SHORT $LN33@SK_BeginBu

; 2222 :       {
; 2223 :         SetCurrentDirectory (wszWorkingDir);

	lea	eax, DWORD PTR _wszWorkingDir$2[ebp]
	push	eax
	call	ebx
$LN33@SK_BeginBu:

; 2224 :       //SK_ResumeThreads    (tids);
; 2225 :       }
; 2226 : 
; 2227 :       SK_UnlockDllLoader  ();

	call	?SK_UnlockDllLoader@@YGXXZ		; SK_UnlockDllLoader
$LN16@SK_BeginBu:

; 2228 :     }
; 2229 :   }
; 2230 : 
; 2231 :   last_api = SK_GetCurrentRenderBackend ().api;

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR ?last_api@?1??SK_BeginBufferSwap@@YGXXZ@4W4SK_RenderAPI@@A, eax

; 2232 : 
; 2233 : 
; 2234 :   SK_DrawOSD         ();

	call	?SK_DrawOSD@@YGHXZ			; SK_DrawOSD

; 2235 :   SK_DrawConsole     ();

	call	?SK_DrawConsole@@YAXXZ			; SK_DrawConsole

; 2236 : 
; 2237 :   static HMODULE hModTBFix = GetModuleHandle (L"tbfix.dll");

	mov	eax, DWORD PTR __tls_index
	mov	edx, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, DWORD PTR ?$TSS3@?1??SK_BeginBufferSwap@@YGXXZ@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jg	$LN100@SK_BeginBu
$LN5@SK_BeginBu:

; 2238 : 
; 2239 :   if (hModTBFix)

	cmp	DWORD PTR ?hModTBFix@?1??SK_BeginBufferSwap@@YGXXZ@4PAUHINSTANCE__@@A, 0
	pop	edi
	pop	esi
	pop	ebx
	je	SHORT $LN34@SK_BeginBu

; 2240 :   {
; 2241 :     const char* szFirst = "First-frame Done";
; 2242 : 
; 2243 :     if (SK_Steam_PiratesAhoy () != 0x00)

	call	?SK_Steam_PiratesAhoy@@YGIXZ		; SK_Steam_PiratesAhoy
	test	eax, eax
	je	SHORT $LN35@SK_BeginBu

; 2244 :     {
; 2245 :       extern float target_fps;
; 2246 :       target_fps = static_cast <float> (*reinterpret_cast <const uint8_t *>(szFirst+5));

	mov	DWORD PTR ?target_fps@@3MA, 1110704128	; 42340000H
$LN35@SK_BeginBu:

; 2247 :     }
; 2248 : 
; 2249 :     SK::Framerate::GetLimiter ()->wait ();

	call	?GetLimiter@Framerate@SK@@YAPAVLimiter@12@XZ ; SK::Framerate::GetLimiter
	mov	ecx, eax
	call	?wait@Limiter@Framerate@SK@@QAEXXZ	; SK::Framerate::Limiter::wait
$LN34@SK_BeginBu:

; 2250 :   }
; 2251 : 
; 2252 :   extern uint32_t WINAPI SK_Steam_PiratesAhoy (void);
; 2253 :   if (SK_Steam_PiratesAhoy () && (! SK_ImGui_Active ()))

	call	?SK_Steam_PiratesAhoy@@YGIXZ		; SK_Steam_PiratesAhoy
	test	eax, eax
	je	SHORT $LN36@SK_BeginBu
; File c:\users\andon\source\repos\specialk\include\imgui\imgui.h

; 1466 : static inline bool SK_ImGui_Active (void) { return SK_ImGui_Visible || SK_ReShade_Visible; };

	cmp	BYTE PTR ?SK_ImGui_Visible@@3_NA, 0	; SK_ImGui_Visible
	jne	SHORT $LN36@SK_BeginBu
	cmp	BYTE PTR ?SK_ReShade_Visible@@3_NA, 0	; SK_ReShade_Visible
	jne	SHORT $LN36@SK_BeginBu
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 2256 :                 SK_ImGui_Toggle ();

	call	?SK_ImGui_Toggle@@YAXXZ			; SK_ImGui_Toggle
$LN36@SK_BeginBu:

; 2257 :   }
; 2258 : 
; 2259 :   extern void SK_ImGui_PollGamepad_EndFrame (void);
; 2260 :   SK_ImGui_PollGamepad_EndFrame ();

	call	?SK_ImGui_PollGamepad_EndFrame@@YAXXZ	; SK_ImGui_PollGamepad_EndFrame

; 2261 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN98@SK_BeginBu:

; 2121 :       }
; 2122 : 
; 2123 :       // This is only guaranteed to be supported on Windows 8, but Win7 and Vista
; 2124 :       //   do support it if a certain Windows Update (KB2533623) is installed.
; 2125 :       using AddDllDirectory_pfn          = DLL_DIRECTORY_COOKIE (WINAPI *)(_In_ PCWSTR               NewDirectory);
; 2126 :       using RemoveDllDirectory_pfn       = BOOL                 (WINAPI *)(_In_ DLL_DIRECTORY_COOKIE Cookie);
; 2127 :       using SetDefaultDllDirectories_pfn = BOOL                 (WINAPI *)(_In_ DWORD                DirectoryFlags);
; 2128 : 
; 2129 :       static auto k32_AddDllDirectory =

	push	OFFSET ?$TSS0@?BO@??SK_BeginBufferSwap@@YGXXZ@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?BO@??SK_BeginBufferSwap@@YGXXZ@4HA, -1
	jne	$LN94@SK_BeginBu

; 2130 :         (AddDllDirectory_pfn)
; 2131 :           GetProcAddress ( GetModuleHandle (L"kernel32.dll"),

	push	OFFSET $SG430839
	push	OFFSET $SG430840
	call	edi
	mov	esi, DWORD PTR __imp__GetProcAddress@8
	push	eax
	call	esi

; 2132 :                              "AddDllDirectory" );
; 2133 : 
; 2134 :       static auto k32_RemoveDllDirectory =
; 2135 :         (RemoveDllDirectory_pfn)
; 2136 :           GetProcAddress ( GetModuleHandle (L"kernel32.dll"),

	push	OFFSET $SG430841
	push	OFFSET $SG430842
	mov	DWORD PTR ?k32_AddDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GPAXPB_W@ZA, eax
	call	edi
	push	eax
	call	esi

; 2137 :                              "RemoveDllDirectory" );
; 2138 : 
; 2139 :       static auto k32_SetDefaultDllDirectories =
; 2140 :         (SetDefaultDllDirectories_pfn)
; 2141 :           GetProcAddress ( GetModuleHandle (L"kernel32.dll"),

	push	OFFSET $SG430843
	push	OFFSET $SG430844
	mov	DWORD PTR ?k32_RemoveDllDirectory@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHPAX@ZA, eax
	call	edi
	push	eax
	call	esi
	push	OFFSET ?$TSS0@?BO@??SK_BeginBufferSwap@@YGXXZ@4HA
	mov	DWORD PTR ?k32_SetDefaultDllDirectories@?BO@??SK_BeginBufferSwap@@YGXXZ@4P6GHK@ZA, eax
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN94@SK_BeginBu
$LN100@SK_BeginBu:

; 2236 : 
; 2237 :   static HMODULE hModTBFix = GetModuleHandle (L"tbfix.dll");

	push	OFFSET ?$TSS3@?1??SK_BeginBufferSwap@@YGXXZ@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS3@?1??SK_BeginBufferSwap@@YGXXZ@4HA, -1
	jne	$LN5@SK_BeginBu
	push	OFFSET $SG430865
	call	edi
	push	OFFSET ?$TSS3@?1??SK_BeginBufferSwap@@YGXXZ@4HA
	mov	DWORD PTR ?hModTBFix@?1??SK_BeginBufferSwap@@YGXXZ@4PAUHINSTANCE__@@A, eax
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN5@SK_BeginBu
?SK_BeginBufferSwap@@YGXXZ ENDP				; SK_BeginBufferSwap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\log.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_closeme_game_debug$ = -24				; size = 4
_closeme_dll_log$ = -20					; size = 4
_ShutdownWMIThread$ = -13				; size = 1
__$EHRec$ = -12						; size = 12
_backend$ = 8						; size = 4
?SK_ShutdownCore@@YG_NPB_W@Z PROC			; SK_ShutdownCore

; 1837 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?SK_ShutdownCore@@YG_NPB_W@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 1838 :   // Fast path for DLLs that were never really attached.
; 1839 :   extern __time64_t __SK_DLL_AttachTime;
; 1840 : 
; 1841 :   if (! __SK_DLL_AttachTime)

	mov	eax, DWORD PTR ?__SK_DLL_AttachTime@@3_JA
	or	eax, DWORD PTR ?__SK_DLL_AttachTime@@3_JA+4
	push	ebx
	push	esi
	push	edi
	jne	SHORT $LN2@SK_Shutdow

; 1842 :   {
; 1843 :     SK_UnInit_MinHook ();

	call	?SK_UnInit_MinHook@@YG?AW4MH_STATUS@@XZ	; SK_UnInit_MinHook

; 1844 :     return true;

	jmp	$LN24@SK_Shutdow
$LN2@SK_Shutdow:

; 1845 :   }
; 1846 : 
; 1847 : 
; 1848 :   dll_log.Log (L"[ SpecialK ] *** Initiating DLL Shutdown ***");

	push	OFFSET $SG430685
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8

; 1849 :   SK_Win32_CleanupDummyWindow ();

	call	?SK_Win32_CleanupDummyWindow@@YAXXZ	; SK_Win32_CleanupDummyWindow

; 1850 : 
; 1851 : 
; 1852 : 
; 1853 :   if (config.window.background_mute)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+769, 0
	je	SHORT $LN3@SK_Shutdow

; 1854 :     SK_SetGameMute (FALSE);

	push	0
	call	?SK_SetGameMute@@YGX_N@Z		; SK_SetGameMute
$LN3@SK_Shutdow:

; 1855 : 
; 1856 :   // These games do not handle resolution correctly
; 1857 :   if ( (! lstrcmpW (SK_GetHostApp (), L"DarkSoulsIII.exe")) ||
; 1858 :        (! lstrcmpW (SK_GetHostApp (), L"Fallout4.exe"))     ||
; 1859 :        (! lstrcmpW (SK_GetHostApp (), L"FFX.exe"))          ||
; 1860 :        (! lstrcmpW (SK_GetHostApp (), L"FFX-2.exe"))        ||

	push	OFFSET $SG430689
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	mov	esi, DWORD PTR __imp__lstrcmpW@8
	push	eax
	call	esi
	test	eax, eax
	je	SHORT $LN5@SK_Shutdow
	push	OFFSET $SG430690
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	esi
	test	eax, eax
	je	SHORT $LN5@SK_Shutdow
	push	OFFSET $SG430691
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	esi
	test	eax, eax
	je	SHORT $LN5@SK_Shutdow
	push	OFFSET $SG430692
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	esi
	test	eax, eax
	je	SHORT $LN5@SK_Shutdow
	push	OFFSET $SG430693
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	esi
	test	eax, eax
	jne	SHORT $LN4@SK_Shutdow
$LN5@SK_Shutdow:

; 1861 :        (! lstrcmpW (SK_GetHostApp (), L"dis1_st.exe")) )
; 1862 :     ChangeDisplaySettingsA (nullptr, CDS_RESET);

	push	1073741824				; 40000000H
	push	0
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
$LN4@SK_Shutdow:

; 1863 : 
; 1864 :   SK_AutoClose_Log (game_debug);

	lea	eax, DWORD PTR _closeme_game_debug$[ebp]
	mov	ecx, OFFSET ?game_debug@@3UiSK_Logger@@A ; game_debug
	push	eax
	call	?auto_close@iSK_Logger@@QAE?AVAutoClose@1@XZ ; iSK_Logger::auto_close

; 1865 :   SK_AutoClose_Log (   dll_log);

	lea	eax, DWORD PTR _closeme_dll_log$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	eax
	mov	ecx, OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?auto_close@iSK_Logger@@QAE?AVAutoClose@1@XZ ; iSK_Logger::auto_close
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1866 : 
; 1867 :   SK_Console::getInstance ()->End ();

	call	?getInstance@SK_Console@@SAPAV1@XZ	; SK_Console::getInstance
	mov	ecx, eax
	call	?End@SK_Console@@QAEXXZ			; SK_Console::End

; 1868 : 
; 1869 :   SK::DXGI::ShutdownBudgetThread ();

	call	?ShutdownBudgetThread@DXGI@SK@@YAXXZ	; SK::DXGI::ShutdownBudgetThread

; 1870 : 
; 1871 :   dll_log.LogEx    (true, L"[ GPU Stat ] Shutting down Prognostics Thread...          ");

	push	OFFSET $SG430694
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx

; 1872 : 
; 1873 :   DWORD dwTime =
; 1874 :        timeGetTime ();

	mov	edi, DWORD PTR __imp__timeGetTime@0
	add	esp, 12					; 0000000cH
	call	edi
	mov	esi, eax

; 1875 :   SK_EndGPUPolling ();

	call	?SK_EndGPUPolling@@YAXXZ		; SK_EndGPUPolling

; 1876 : 
; 1877 :   dll_log.LogEx    (false, L"done! (%4u ms)\n", timeGetTime () - dwTime);

	call	edi
	sub	eax, esi
	push	eax
	push	OFFSET $SG430695
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 1878 : 
; 1879 :   if (hPumpThread != INVALID_HANDLE_VALUE)

	cmp	DWORD PTR ?hPumpThread@@3PAXA, -1	; hPumpThread
	je	SHORT $LN6@SK_Shutdow

; 1880 :   {
; 1881 :     dll_log.LogEx   (true, L"[ Stat OSD ] Shutting down Pump Thread... ");

	push	OFFSET $SG430697
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 1882 : 
; 1883 :     CloseHandle     (hPumpThread);

	push	DWORD PTR ?hPumpThread@@3PAXA		; hPumpThread
	call	DWORD PTR __imp__CloseHandle@4

; 1884 :                      hPumpThread = INVALID_HANDLE_VALUE;
; 1885 : 
; 1886 :     dll_log.LogEx   (false, L"done!\n");

	push	OFFSET $SG430698
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	mov	DWORD PTR ?hPumpThread@@3PAXA, -1	; hPumpThread
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH
$LN6@SK_Shutdow:

; 1887 :   }
; 1888 : 
; 1889 :   auto ShutdownWMIThread =
; 1890 :   []( volatile HANDLE&  hSignal,
; 1891 :       volatile HANDLE&  hThread,
; 1892 :                wchar_t* wszName )
; 1893 :   {
; 1894 :     wchar_t wszFmtName [32] = { };
; 1895 : 
; 1896 :     lstrcatW (wszFmtName, wszName);
; 1897 :     lstrcatW (wszFmtName, L"...");
; 1898 : 
; 1899 :     dll_log.LogEx (true, L"[ WMI Perf ] Shutting down %-30s ", wszFmtName);
; 1900 : 
; 1901 :     DWORD dwTime = timeGetTime ();
; 1902 : 
; 1903 :     // Signal the thread to shutdown
; 1904 :     SetEvent (hSignal);
; 1905 : 
; 1906 :     if (SignalObjectAndWait (hSignal, hThread, 1000UL, TRUE) != WAIT_OBJECT_0) // Give 1 second, and
; 1907 :     {                                                                          // then we're killing
; 1908 :       TerminateThread (hThread, 0x00);                                         // the thing!
; 1909 :     }
; 1910 : 
; 1911 :     CloseHandle (hThread);
; 1912 :                  hThread  = INVALID_HANDLE_VALUE;
; 1913 : 
; 1914 :     dll_log.LogEx (false, L"done! (%4u ms)\n", timeGetTime () - dwTime);
; 1915 :   };
; 1916 : 
; 1917 :   ShutdownWMIThread (process_stats.hShutdownSignal,  process_stats.hThread,  L"Process Monitor" );

	push	OFFSET $SG430699
	push	OFFSET ?process_stats@@3Uprocess_stats_t@@A ; process_stats
	push	OFFSET ?process_stats@@3Uprocess_stats_t@@A+4
	lea	ecx, DWORD PTR _ShutdownWMIThread$[ebp]
	call	??R<lambda_6ec963c1094b1d994a1eb4d638d667db>@@QBEXACRAX0PA_W@Z ; <lambda_6ec963c1094b1d994a1eb4d638d667db>::operator()

; 1918 :   ShutdownWMIThread (cpu_stats.hShutdownSignal,      cpu_stats.hThread,      L"CPU Monitor"     );

	push	OFFSET $SG430700
	push	OFFSET ?cpu_stats@@3Ucpu_perf_t@@A	; cpu_stats
	push	OFFSET ?cpu_stats@@3Ucpu_perf_t@@A+4
	lea	ecx, DWORD PTR _ShutdownWMIThread$[ebp]
	call	??R<lambda_6ec963c1094b1d994a1eb4d638d667db>@@QBEXACRAX0PA_W@Z ; <lambda_6ec963c1094b1d994a1eb4d638d667db>::operator()

; 1919 :   ShutdownWMIThread (disk_stats.hShutdownSignal,     disk_stats.hThread,     L"Disk Monitor"    );

	push	OFFSET $SG430701
	push	OFFSET ?disk_stats@@3Udisk_perf_t@@A	; disk_stats
	push	OFFSET ?disk_stats@@3Udisk_perf_t@@A+4
	lea	ecx, DWORD PTR _ShutdownWMIThread$[ebp]
	call	??R<lambda_6ec963c1094b1d994a1eb4d638d667db>@@QBEXACRAX0PA_W@Z ; <lambda_6ec963c1094b1d994a1eb4d638d667db>::operator()

; 1920 :   ShutdownWMIThread (pagefile_stats.hShutdownSignal, pagefile_stats.hThread, L"Pagefile Monitor");

	push	OFFSET $SG430702
	push	OFFSET ?pagefile_stats@@3Upagefile_perf_t@@A ; pagefile_stats
	push	OFFSET ?pagefile_stats@@3Upagefile_perf_t@@A+4
	lea	ecx, DWORD PTR _ShutdownWMIThread$[ebp]
	call	??R<lambda_6ec963c1094b1d994a1eb4d638d667db>@@QBEXACRAX0PA_W@Z ; <lambda_6ec963c1094b1d994a1eb4d638d667db>::operator()

; 1924 :   if (SK_IsInjected ())

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	mov	ebx, OFFSET $SG430704
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG430706
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1924 :   if (SK_IsInjected ())

	cmove	ebx, DWORD PTR _backend$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal

; 3874 : 	return (!(_Left == _Right));

	test	al, al
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1927 :   if (sk::NVAPI::app_name != L"ds3t.exe" && SK_GetFramesDrawn () > 0)

	jne	SHORT $LN8@SK_Shutdow
	call	?SK_GetFramesDrawn@@YGKXZ		; SK_GetFramesDrawn
	test	eax, eax
	je	SHORT $LN8@SK_Shutdow

; 1928 :   {
; 1929 :     dll_log.LogEx        (true,  L"[ SpecialK ] Saving user preferences to %10s.ini... ", config_name);

	push	ebx
	push	OFFSET $SG430707
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 1930 :     dwTime = timeGetTime ();

	call	edi

; 1931 :     SK_SaveConfig        (config_name);

	push	0
	sub	esp, 24					; 00000018H
	mov	esi, eax
	mov	ecx, esp
	push	ebx
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	call	?SK_SaveConfig@@YAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@Z ; SK_SaveConfig
	add	esp, 28					; 0000001cH

; 1932 :     dll_log.LogEx        (false, L"done! (%4u ms)\n", timeGetTime () - dwTime);

	call	edi
	sub	eax, esi
	push	eax
	push	OFFSET $SG430708
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H
$LN8@SK_Shutdow:

; 1933 :   }
; 1934 : 
; 1935 : 
; 1936 :   SK_UnloadImports        ();

	call	?SK_UnloadImports@@YAXXZ		; SK_UnloadImports

; 1937 :   SK::Framerate::Shutdown ();

	call	?Shutdown@Framerate@SK@@YAXXZ		; SK::Framerate::Shutdown

; 1938 : 
; 1939 :   dll_log.LogEx        (true, L"[ SpecialK ] Shutting down MinHook...                     ");

	push	OFFSET $SG430709
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 1940 : 
; 1941 :   dwTime = timeGetTime ();

	call	edi
	mov	esi, eax

; 1942 :   SK_UnInit_MinHook    ();

	call	?SK_UnInit_MinHook@@YG?AW4MH_STATUS@@XZ	; SK_UnInit_MinHook

; 1943 :   dll_log.LogEx        (false, L"done! (%4u ms)\n", timeGetTime () - dwTime);

	call	edi
	sub	eax, esi
	push	eax
	push	OFFSET $SG430710
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx

; 1944 : 
; 1945 : 
; 1946 :   dll_log.LogEx        (true, L"[ WMI Perf ] Shutting down WMI WbemLocator...             ");

	push	OFFSET $SG430711
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 28					; 0000001cH

; 1947 :   dwTime = timeGetTime ();

	call	edi
	mov	esi, eax

; 1948 :   SK_ShutdownWMI       ();

	call	?SK_ShutdownWMI@@YAXXZ			; SK_ShutdownWMI

; 1949 :   dll_log.LogEx        (false, L"done! (%4u ms)\n", timeGetTime () - dwTime);

	call	edi
	sub	eax, esi
	push	eax
	push	OFFSET $SG430712
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 1950 : 
; 1951 : 
; 1952 :   SK_GetCurrentRenderBackend ().releaseOwnedResources ();

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	mov	ecx, eax
	call	?releaseOwnedResources@SK_RenderBackend_V2@@QAEXXZ ; SK_RenderBackend_V2::releaseOwnedResources

; 1953 : 
; 1954 : 
; 1955 :   if (nvapi_init)

	cmp	DWORD PTR ?nvapi_init@@3HA, 0		; nvapi_init
	je	SHORT $LN9@SK_Shutdow

; 1956 :     sk::NVAPI::UnloadLibrary ();

	call	?UnloadLibrary@NVAPI@sk@@YAHXZ		; sk::NVAPI::UnloadLibrary
$LN9@SK_Shutdow:

; 1957 : 
; 1958 : 
; 1959 :   dll_log.Log (L"[ SpecialK ] Custom %s.dll Detached (pid=0x%04x)",

	call	DWORD PTR __imp__GetCurrentProcessId@0
	push	eax
	push	DWORD PTR _backend$[ebp]
	push	OFFSET $SG430714
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 1960 :     backend, GetCurrentProcessId ());
; 1961 : 
; 1962 :   //SymCleanup (GetCurrentProcess ());
; 1963 : 
; 1964 : 
; 1965 :   // Breakpad Disable Disclaimer; pretend the log was empty :)
; 1966 :   if (crash_log.lines == 1)

	mov	eax, DWORD PTR ?crash_log@@3UiSK_Logger@@A+36
	add	esp, 16					; 00000010H
	xor	ecx, ecx
	cmp	eax, 1
	cmove	eax, ecx

; 1967 :     crash_log.lines = 0;
; 1968 : 
; 1969 :   crash_log.close ();

	push	OFFSET ?crash_log@@3UiSK_Logger@@A	; crash_log
	mov	DWORD PTR ?crash_log@@3UiSK_Logger@@A+36, eax
	call	?close@iSK_Logger@@UAGXXZ		; iSK_Logger::close

; 1970 : 
; 1971 :   config.system.handle_crashes = false;

	mov	BYTE PTR ?config@@3Usk_config_t@@A+840, 0

; 1972 : 
; 1973 :   InterlockedExchange (&__SK_Init, FALSE);

	xor	eax, eax
	mov	ecx, OFFSET ?__SK_Init@@3JC		; __SK_Init
	xchg	DWORD PTR [ecx], eax
; File c:\users\andon\source\repos\specialk\include\specialk\log.h

; 158  :       if (log_ != nullptr)

	mov	eax, DWORD PTR _closeme_dll_log$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	test	eax, eax
	je	SHORT $LN20@SK_Shutdow

; 159  :         log_->close ();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+20]
$LN20@SK_Shutdow:

; 158  :       if (log_ != nullptr)

	mov	eax, DWORD PTR _closeme_game_debug$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	test	eax, eax
	je	SHORT $LN24@SK_Shutdow

; 159  :         log_->close ();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+20]
$LN24@SK_Shutdow:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	al, 1
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_ShutdownCore@@YG_NPB_W@Z$0:
	lea	ecx, DWORD PTR _closeme_game_debug$[ebp]
	jmp	??1AutoClose@iSK_Logger@@QAE@XZ		; iSK_Logger::AutoClose::~AutoClose
__unwindfunclet$?SK_ShutdownCore@@YG_NPB_W@Z$1:
	lea	ecx, DWORD PTR _closeme_dll_log$[ebp]
	jmp	??1AutoClose@iSK_Logger@@QAE@XZ		; iSK_Logger::AutoClose::~AutoClose
__ehhandler$?SK_ShutdownCore@@YG_NPB_W@Z:
	mov	eax, OFFSET __ehfuncinfo$?SK_ShutdownCore@@YG_NPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_ShutdownCore@@YG_NPB_W@Z ENDP			; SK_ShutdownCore
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
_wszDLLPath$2 = -3284					; size = 1048
_log_fname$ = -2236					; size = 524
_wszWorkDir$ = -1712					; size = 524
_wszProxyName$ = -1188					; size = 520
_wszBackendDLL$ = -668					; size = 524
_module_name$ = -144					; size = 24
_wszModuleName$1$ = -120				; size = 4
_log_fnameW$3 = -116					; size = 24
_default_name$4 = -116					; size = 24
$T5 = -112						; size = 20
$T6 = -92						; size = 24
$T7 = -92						; size = 24
$T8 = -92						; size = 24
$T9 = -92						; size = 24
$T10 = -92						; size = 24
$T11 = -68						; size = 4
$T12 = -64						; size = 24
$T13 = -64						; size = 24
$T14 = -64						; size = 24
$T15 = -64						; size = 24
$T16 = -64						; size = 24
$T17 = -64						; size = 24
$T18 = -64						; size = 24
$T19 = -64						; size = 24
$T20 = -64						; size = 24
$T21 = -64						; size = 24
_default_ini$22 = -40					; size = 24
_link$23 = -40						; size = 24
$T24 = -40						; size = 24
_link$25 = -40						; size = 24
$T26 = -40						; size = 24
$T27 = -40						; size = 24
_skim$1$ = -13						; size = 1
$T28 = -13						; size = 1
$T29 = -13						; size = 1
$T30 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_backend$ = 8						; size = 4
tv4853 = 12						; size = 4
_callback$ = 12						; size = 4
_load_proxy$1$ = 15					; size = 1
?SK_StartupCore@@YG_NPB_WPAX@Z PROC			; SK_StartupCore

; 1337 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SK_StartupCore@@YG_NPB_WPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 3272				; 00000cc8H
	push	ebx
	push	esi
	push	edi

; 1338 :   __SK_DLL_Backend = backend;

	mov	edi, DWORD PTR _backend$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	lea	ecx, DWORD PTR $T10[ebp]
	push	17					; 00000011H
	xor	ebx, ebx
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1338 :   __SK_DLL_Backend = backend;

	mov	DWORD PTR ?__SK_DLL_Backend@@3PB_WB, edi ; __SK_DLL_Backend
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	DWORD PTR $T11[ebp], ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	OFFSET $SG428721

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T10[ebp+16], ebx

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T10[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T10[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1345 :                              std::wstring (L"\\SpecialK.central") ).c_str () ) != INVALID_FILE_ATTRIBUTES )

	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	call	?SK_GetHostPath@@YAPB_WXZ		; SK_GetHostPath
	mov	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T27[ebp+16], ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T27[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR $T27[ebp], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	esi, DWORD PTR [ecx+2]
	npad	1
$LL1643@SK_Startup:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL1643@SK_Startup
	sub	ecx, esi
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	lea	ecx, DWORD PTR $T27[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1345 :                              std::wstring (L"\\SpecialK.central") ).c_str () ) != INVALID_FILE_ATTRIBUTES )

	lea	eax, DWORD PTR $T10[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	eax
	lea	eax, DWORD PTR $T27[ebp]
	push	eax
	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN151@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN151@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1345 :                              std::wstring (L"\\SpecialK.central") ).c_str () ) != INVALID_FILE_ATTRIBUTES )

	push	eax
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	eax, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T21[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1345 :                              std::wstring (L"\\SpecialK.central") ).c_str () ) != INVALID_FILE_ATTRIBUTES )

	setne	BYTE PTR $T30[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN160@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T21[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN160@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T21[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T21[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T27[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T21[ebp+20], 7

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN190@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T27[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN190@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T27[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T27[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T10[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T27[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1345 :                              std::wstring (L"\\SpecialK.central") ).c_str () ) != INVALID_FILE_ATTRIBUTES )

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN220@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T10[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN220@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1345 :                              std::wstring (L"\\SpecialK.central") ).c_str () ) != INVALID_FILE_ATTRIBUTES )

	movzx	eax, BYTE PTR ?config@@3Usk_config_t@@A+844
	mov	esi, 1
	cmp	BYTE PTR $T30[ebp], 0

; 1346 :     config.system.central_repository = true;
; 1347 : 
; 1348 :   if (SK_IsInjected ())

	push	0
	cmovne	eax, esi
	mov	BYTE PTR ?config@@3Usk_config_t@@A+844, al
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	movzx	ecx, BYTE PTR ?config@@3Usk_config_t@@A+844
	test	al, al
	cmovne	ecx, esi
	mov	BYTE PTR ?config@@3Usk_config_t@@A+844, cl

; 1349 :     config.system.central_repository = true;
; 1350 : 
; 1351 :   SK_EstablishRootPath ();

	call	?SK_EstablishRootPath@@YGXXZ		; SK_EstablishRootPath

; 1352 :   SK_CreateDirectories (SK_GetConfigPath ());

	call	?SK_GetConfigPath@@YGPB_WXZ		; SK_GetConfigPath
	push	eax
	call	?SK_CreateDirectories@@YG_NPB_W@Z	; SK_CreateDirectories

; 1353 : 
; 1354 : 
; 1355 :   if (config.system.central_repository)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+844, 0
	je	$LN694@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	10					; 0000000aH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T9[ebp+16], 0

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	OFFSET $SG428726
	lea	ecx, DWORD PTR $T9[ebp]

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T9[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T9[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1361 :                            ) == INVALID_FILE_ATTRIBUTES )

	mov	DWORD PTR __$EHRec$[ebp+8], 2
	call	?SK_GetHostPath@@YAPB_WXZ		; SK_GetHostPath
	mov	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T26[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T26[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR $T26[ebp], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	esi, DWORD PTR [ecx+2]
$LL1644@SK_Startup:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL1644@SK_Startup
	sub	ecx, esi
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	lea	ecx, DWORD PTR $T26[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1361 :                            ) == INVALID_FILE_ATTRIBUTES )

	lea	eax, DWORD PTR $T9[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	eax
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN308@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN308@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1361 :                            ) == INVALID_FILE_ATTRIBUTES )

	push	eax
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	eax, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T20[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1361 :                            ) == INVALID_FILE_ATTRIBUTES )

	sete	BYTE PTR $T28[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN317@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T20[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN317@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T20[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T20[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T26[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T20[ebp+20], 7

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN347@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T26[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN347@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T26[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T26[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T9[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T26[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1361 :                            ) == INVALID_FILE_ATTRIBUTES )

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN377@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T9[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN377@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1361 :                            ) == INVALID_FILE_ATTRIBUTES )

	cmp	BYTE PTR $T28[ebp], 0
	je	$LN457@SK_Startup

; 1363 :       std::wstring link (SK_GetHostPath ());

	call	?SK_GetHostPath@@YAPB_WXZ		; SK_GetHostPath
	mov	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _link$25[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _link$25[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR _link$25[ebp], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	esi, DWORD PTR [ecx+2]
	npad	8
$LL1645@SK_Startup:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL1645@SK_Startup
	sub	ecx, esi
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	lea	ecx, DWORD PTR _link$25[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	10					; 0000000aH
	push	OFFSET $SG428727
	lea	ecx, DWORD PTR _link$25[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1363 :       std::wstring link (SK_GetHostPath ());

	mov	DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR _link$25[ebp+20], 8

; 1621 : 		return (_Large_string_engaged()

	lea	esi, DWORD PTR _link$25[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1366 :       CreateSymbolicLink (

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	esi, DWORD PTR _link$25[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1366 :       CreateSymbolicLink (

	call	?SK_GetConfigPath@@YGPB_WXZ		; SK_GetConfigPath
	push	eax
	push	esi
	call	DWORD PTR __imp__CreateSymbolicLinkW@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _link$25[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1371 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN457@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR _link$25[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN457@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	5
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T8[ebp+16], 0

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	OFFSET $SG428730
	lea	ecx, DWORD PTR $T8[ebp]

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T8[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T8[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1375 :                            ) == INVALID_FILE_ATTRIBUTES )

	mov	DWORD PTR __$EHRec$[ebp+8], 5
	call	?SK_GetConfigPath@@YGPB_WXZ		; SK_GetConfigPath
	mov	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T24[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T24[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR $T24[ebp], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	esi, DWORD PTR [ecx+2]
$LL1646@SK_Startup:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL1646@SK_Startup
	sub	ecx, esi
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	lea	ecx, DWORD PTR $T24[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1375 :                            ) == INVALID_FILE_ATTRIBUTES )

	lea	eax, DWORD PTR $T8[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	eax
	lea	eax, DWORD PTR $T24[ebp]
	push	eax
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@0@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN545@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN545@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1375 :                            ) == INVALID_FILE_ATTRIBUTES )

	push	eax
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	eax, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T19[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1375 :                            ) == INVALID_FILE_ATTRIBUTES )

	sete	BYTE PTR $T29[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN554@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T19[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN554@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T19[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T19[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T24[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T19[ebp+20], 7

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN584@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T24[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN584@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T24[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T24[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T8[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T24[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1375 :                            ) == INVALID_FILE_ATTRIBUTES )

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN614@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T8[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN614@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1375 :                            ) == INVALID_FILE_ATTRIBUTES )

	cmp	BYTE PTR $T29[ebp], 0
	je	$LN694@SK_Startup

; 1377 :       std::wstring link (SK_GetConfigPath ());

	call	?SK_GetConfigPath@@YGPB_WXZ		; SK_GetConfigPath
	mov	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _link$23[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _link$23[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR _link$23[ebp], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	esi, DWORD PTR [ecx+2]
$LL1647@SK_Startup:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL1647@SK_Startup
	sub	ecx, esi
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	lea	ecx, DWORD PTR _link$23[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	5
	push	OFFSET $SG428731
	lea	ecx, DWORD PTR _link$23[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1377 :       std::wstring link (SK_GetConfigPath ());

	mov	DWORD PTR __$EHRec$[ebp+8], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR _link$23[ebp+20], 8

; 1621 : 		return (_Large_string_engaged()

	lea	esi, DWORD PTR _link$23[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1380 :       CreateSymbolicLink (

	push	1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	esi, DWORD PTR _link$23[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1380 :       CreateSymbolicLink (

	call	?SK_GetHostPath@@YAPB_WXZ		; SK_GetHostPath
	push	eax
	push	esi
	call	DWORD PTR __imp__CreateSymbolicLinkW@12
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _link$23[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1385 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN694@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR _link$23[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN694@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1392 :     (StrStrIW (SK_GetHostApp (), L"Rundll32") != nullptr);

	push	OFFSET $SG428732
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	DWORD PTR __imp__StrStrIW@8
	test	eax, eax
	setne	al

; 1393 :   bool skim =
; 1394 :     rundll_invoked || SK_IsSuperSpecialK () || __SK_RunDLL_Bypass;

	test	al, al
	jne	SHORT $LN53@SK_Startup
	call	?SK_IsSuperSpecialK@@YA_NXZ		; SK_IsSuperSpecialK
	test	al, al
	jne	SHORT $LN53@SK_Startup
	cmp	BYTE PTR ?__SK_RunDLL_Bypass@@3_NA, al	; __SK_RunDLL_Bypass
	je	SHORT $LN1653@SK_Startup
$LN53@SK_Startup:
	mov	al, 1
$LN1653@SK_Startup:

; 1395 : 
; 1396 :   static bool bypass  = false;
; 1397 :               bypass |= skim;

	or	BYTE PTR ?bypass@?1??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA, al
	mov	BYTE PTR _skim$1$[ebp], al

; 1398 : 
; 1399 :   // Injection Compatibility Menu
; 1400 :   if ( (! bypass) && (GetAsyncKeyState (VK_SHIFT  ) & 0x8000) != 0 &&

	jne	SHORT $LN10@SK_Startup
	mov	esi, DWORD PTR __imp__GetAsyncKeyState@4
	push	16					; 00000010H
	call	esi
	mov	ecx, 32768				; 00008000H
	test	ax, cx
	je	SHORT $LN10@SK_Startup
	push	17					; 00000011H
	call	esi
	mov	ecx, 32768				; 00008000H
	test	ax, cx
	je	SHORT $LN10@SK_Startup

; 1401 :                      (GetAsyncKeyState (VK_CONTROL) & 0x8000) != 0 )
; 1402 :   {
; 1403 :     bypass = true;
; 1404 : 
; 1405 :     SK_BypassInject ();

	lea	eax, DWORD PTR $T18[ebp]
	mov	BYTE PTR ?bypass@?1??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA, 1
	push	eax
	call	?SK_BypassInject@@YG?AU?$pair@V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@H@std@@XZ ; SK_BypassInject
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1244 : 		_Tidy();

	lea	ecx, DWORD PTR $T18[ebp]
	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR $T18[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1407 :     bypass = false;

	mov	BYTE PTR ?bypass@?1??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA, 0

; 1408 : 
; 1409 :     return true;

	jmp	$LN1654@SK_Startup
$LN10@SK_Startup:

; 1410 :   }
; 1411 : 
; 1412 :   else
; 1413 :   {
; 1414 :     bool blacklist =
; 1415 :       SK_IsInjected () &&

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	je	SHORT $LN12@SK_Startup
	call	?SK_GetBlacklistFilename@@YAPB_WXZ	; SK_GetBlacklistFilename
	push	eax
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	eax, -1
	je	SHORT $LN12@SK_Startup

; 1416 :       (GetFileAttributesW (SK_GetBlacklistFilename ()) != INVALID_FILE_ATTRIBUTES);
; 1417 : 
; 1418 :     //
; 1419 :     // Internal blacklist, the user will have the ability to setup their
; 1420 :     //   own later...
; 1421 :     //
; 1422 :     if ( blacklist )
; 1423 :     {
; 1424 :       //FreeLibrary_Original (SK_GetDLL ());
; 1425 :       return false;

	xor	al, al

; 1759 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN12@SK_Startup:

; 1426 :     }
; 1427 : 
; 1428 :     // Do this from the startup thread
; 1429 :     SK_HookWinAPI  ();

	call	?SK_HookWinAPI@@YAXXZ			; SK_HookWinAPI

; 1430 :     MH_ApplyQueued ();

	call	_MH_ApplyQueued@0

; 1431 : 
; 1432 :     // For the global injector, when not started by SKIM, check its version
; 1433 :     if ( (SK_IsInjected () && (! SK_IsSuperSpecialK ())) )

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	je	SHORT $LN13@SK_Startup
	call	?SK_IsSuperSpecialK@@YA_NXZ		; SK_IsSuperSpecialK
	test	al, al
	jne	SHORT $LN13@SK_Startup

; 1434 :       CreateThread (nullptr, 0, CheckVersionThread, nullptr, 0x00, nullptr);

	push	0
	push	0
	push	0
	push	OFFSET ?CheckVersionThread@@YGKPAX@Z	; CheckVersionThread
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
$LN13@SK_Startup:

; 1435 :   }
; 1436 : 
; 1437 :   // Don't let Steam prevent me from attaching a debugger at startup
; 1438 :   game_debug.init                  (L"logs/game_output.log", L"w");

	push	OFFSET $SG428737
	push	OFFSET $SG428738
	push	OFFSET ?game_debug@@3UiSK_Logger@@A	; game_debug
	call	?init@iSK_Logger@@UAG_NQB_W0@Z		; iSK_Logger::init

; 1440 :   SK::Diagnostics::Debugger::Allow ();

	push	1
	mov	BYTE PTR ?game_debug@@3UiSK_Logger@@A+76, 1
	call	?Allow@Debugger@Diagnostics@SK@@YA_N_N@Z ; SK::Diagnostics::Debugger::Allow
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h

; 269  :     EnterCriticalSection (cs_);

	mov	eax, DWORD PTR ?init_mutex@@3PAVSK_Thread_HybridSpinlock@@A ; init_mutex
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1440 :   SK::Diagnostics::Debugger::Allow ();

	add	esp, 4
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h

; 269  :     EnterCriticalSection (cs_);

	push	DWORD PTR [eax]
	call	DWORD PTR __imp__EnterCriticalSection@4
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1445 :   init_.backend  = _wcsdup (backend);

	push	edi
	mov	DWORD PTR ?init_@@3Uinit_params_t@@A, OFFSET $SG428739
	mov	DWORD PTR ?init_@@3Uinit_params_t@@A+4, 0
	call	DWORD PTR __imp___wcsdup
	mov	DWORD PTR ?init_@@3Uinit_params_t@@A, eax

; 1446 :   init_.callback =          callback;

	mov	eax, DWORD PTR _callback$[ebp]

; 1447 : 
; 1448 :   wchar_t log_fname [MAX_PATH + 2] = { };

	push	524					; 0000020cH
	mov	DWORD PTR ?init_@@3Uinit_params_t@@A+4, eax
	lea	eax, DWORD PTR _log_fname$[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 16					; 00000010H

; 1449 : 
; 1450 :   swprintf (log_fname, L"logs/%s.log", SK_IsInjected () ? L"SpecialK" : backend);

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	mov	ecx, OFFSET $SG428740
	lea	eax, DWORD PTR _log_fname$[ebp]
	cmove	ecx, edi
	push	ecx
	push	OFFSET $SG428741
	push	eax
	call	?swprintf@@YAHQA_WQB_WZZ		; swprintf
	add	esp, 12					; 0000000cH

; 1451 : 
; 1452 :   dll_log.init (log_fname, L"w");

	lea	eax, DWORD PTR _log_fname$[ebp]
	push	OFFSET $SG428742
	push	eax
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?init@iSK_Logger@@UAG_NQB_W0@Z		; iSK_Logger::init

; 1453 :   dll_log.Log  (L"%s.log created",     SK_IsInjected () ? L"SpecialK" : backend);

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	mov	ecx, OFFSET $SG428743
	cmove	ecx, edi
	push	ecx
	push	OFFSET $SG428744
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 1454 : 
; 1455 :   if (skim)

	cmp	BYTE PTR _skim$1$[ebp], 0
	je	SHORT $LN14@SK_Startup
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h

; 274  :     LeaveCriticalSection (cs_);

	mov	eax, DWORD PTR ?init_mutex@@3PAVSK_Thread_HybridSpinlock@@A ; init_mutex
	push	DWORD PTR [eax]
	call	DWORD PTR __imp__LeaveCriticalSection@4
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1458 :     return TRUE;

	jmp	$LN1610@SK_Startup
$LN14@SK_Startup:

; 1459 :   }
; 1460 : 
; 1461 :   extern bool SK_Steam_LoadOverlayEarly (void);
; 1462 :   extern void SK_Input_PreInit          (void);
; 1463 : 
; 1464 :   budget_log.init ( L"logs\\dxgi_budget.log", L"w" );

	push	OFFSET $SG428746
	push	OFFSET $SG428747
	push	OFFSET ?budget_log@@3UiSK_Logger@@A	; budget_log
	call	?init@iSK_Logger@@UAG_NQB_W0@Z		; iSK_Logger::init

; 1465 : 
; 1466 :   //dll_log.Log (L"LoadLibraryA Addres: %ph", GetProcAddress (GetModuleHandle (L"kernel32.dll"), "LoadLibraryA"));
; 1467 : 
; 1468 :   dll_log.LogEx (false,

	push	OFFSET $SG428748
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 1473 :   std::wstring   module_name   = SK_GetModuleName (SK_GetDLL ());

	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	lea	eax, DWORD PTR _module_name$[ebp]
	push	eax
	call	?SK_GetModuleName@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAUHINSTANCE__@@@Z ; SK_GetModuleName
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR _module_name$[ebp+20], 8

; 1621 : 		return (_Large_string_engaged()

	lea	eax, DWORD PTR _module_name$[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1473 :   std::wstring   module_name   = SK_GetModuleName (SK_GetDLL ());

	mov	DWORD PTR __$EHRec$[ebp+8], 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	eax, DWORD PTR _module_name$[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1476 :   dll_log.Log   (      L">> (%s) [%s] <<",

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	mov	DWORD PTR _wszModuleName$1$[ebp], eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1476 :   dll_log.Log   (      L">> (%s) [%s] <<",

	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	push	OFFSET $SG428749
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 1477 :                          SK_GetHostApp (),
; 1478 :                            wszModuleName );
; 1479 : 
; 1480 :   const wchar_t* config_name = backend;
; 1481 : 
; 1482 :   if (SK_IsInjected ())

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	mov	esi, OFFSET $SG428751
	cmove	esi, edi

; 1483 :     config_name = L"SpecialK";
; 1484 : 
; 1485 :   dll_log.LogEx (true, L"Loading user preferences from %s.ini... ", config_name);

	push	esi
	push	OFFSET $SG428752
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx

; 1487 :   if (SK_LoadConfig (config_name))

	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, esi
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1487 :   if (SK_LoadConfig (config_name))

	mov	edx, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [edx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [edx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	eax, DWORD PTR [ecx+2]
	mov	DWORD PTR tv4853[ebp], eax
$LL1648@SK_Startup:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL1648@SK_Startup
	sub	ecx, DWORD PTR tv4853[ebp]
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	esi
	mov	ecx, edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1487 :   if (SK_LoadConfig (config_name))

	call	?SK_LoadConfig@@YA_NV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; SK_LoadConfig
	add	esp, 24					; 00000018H
	test	al, al
	je	SHORT $LN16@SK_Startup

; 1488 :     dll_log.LogEx (false, L"done!\n");

	push	OFFSET $SG428755
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx

; 1489 : 
; 1490 :   else

	jmp	$LN1655@SK_Startup
$LN16@SK_Startup:

; 1491 :   {
; 1492 :     dll_log.LogEx (false, L"failed!\n");

	push	OFFSET $SG428756
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 1494 :     std::wstring default_name (L"default_");

	lea	ecx, DWORD PTR _default_name$4[ebp]
	push	OFFSET $SG428757
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, esi
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1494 :     std::wstring default_name (L"default_");

	mov	BYTE PTR __$EHRec$[ebp+8], 9
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edx, DWORD PTR [ecx+2]
	npad	4
$LL1649@SK_Startup:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL1649@SK_Startup
	sub	ecx, edx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	esi
	lea	ecx, DWORD PTR _default_name$4[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1497 :     std::wstring default_ini (default_name + L".ini");

	push	OFFSET $SG428758
	lea	eax, DWORD PTR _default_name$4[ebp]
	push	eax
	lea	eax, DWORD PTR _default_ini$22[ebp]
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR _default_ini$22[ebp+20], 8

; 1621 : 		return (_Large_string_engaged()

	lea	eax, DWORD PTR _default_ini$22[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1497 :     std::wstring default_ini (default_name + L".ini");

	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	eax, DWORD PTR _default_ini$22[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1499 :     if (GetFileAttributesW (default_ini.c_str ()) != INVALID_FILE_ATTRIBUTES)

	push	eax
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	eax, -1
	je	SHORT $LN20@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR _default_name$4[ebp+20], 8

; 1621 : 		return (_Large_string_engaged()

	lea	eax, DWORD PTR _default_name$4[ebp]
	cmovae	eax, DWORD PTR _default_name$4[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1501 :       dll_log.LogEx (true, L"Loading default preferences from %s.ini... ", default_name.c_str ());

	push	eax
	push	OFFSET $SG428760
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx

; 1502 : 
; 1503 :       if (! SK_LoadConfig (default_name))

	sub	esp, 8
	lea	eax, DWORD PTR _default_name$4[ebp]
	mov	ecx, esp
	push	eax
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	call	?SK_LoadConfig@@YA_NV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; SK_LoadConfig
	add	esp, 24					; 00000018H
	test	al, al
	jne	SHORT $LN19@SK_Startup

; 1504 :         dll_log.LogEx (false, L"failed!\n");

	push	OFFSET $SG428763

; 1505 :       else

	jmp	SHORT $LN1656@SK_Startup
$LN19@SK_Startup:

; 1506 :         dll_log.LogEx (false, L"done!\n");

	push	OFFSET $SG428764
$LN1656@SK_Startup:
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH
$LN20@SK_Startup:

; 1507 :     }
; 1508 : 
; 1509 :     // If no INI file exists, write one immediately.
; 1510 :     dll_log.LogEx (true, L"  >> Writing base INI file, because none existed... ");

	push	OFFSET $SG428765
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 1511 :     SK_SaveConfig (config_name);

	push	0
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	push	esi
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	call	?SK_SaveConfig@@YAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@Z ; SK_SaveConfig

; 1512 :     dll_log.LogEx (false, L"done!\n");

	push	OFFSET $SG428766
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _default_ini$22[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1512 :     dll_log.LogEx (false, L"done!\n");

	add	esp, 40					; 00000028H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN874@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR _default_ini$22[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN874@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _default_ini$22[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR _default_ini$22[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _default_name$4[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _default_ini$22[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1513 :   }

	mov	BYTE PTR __$EHRec$[ebp+8], 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN904@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR _default_name$4[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
$LN1655@SK_Startup:
	add	esp, 12					; 0000000cH
$LN904@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1517 :   if (bypass)

	cmp	BYTE PTR ?bypass@?1??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA, 0
	jne	$BACKEND_INIT$1660

; 1518 :     goto BACKEND_INIT;
; 1519 : 
; 1520 : 
; 1521 : 
; 1522 : 
; 1523 :   if (config.system.display_debug_out)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+842, 0
	je	SHORT $LN23@SK_Startup

; 1524 :     SK::Diagnostics::Debugger::SpawnConsole ();

	call	?SpawnConsole@Debugger@Diagnostics@SK@@YAXXZ ; SK::Diagnostics::Debugger::SpawnConsole
$LN23@SK_Startup:

; 1525 : 
; 1526 :   if (config.system.handle_crashes)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+840, 0
	je	SHORT $LN24@SK_Startup

; 1527 :     SK::Diagnostics::CrashHandler::Init ();

	call	?Init@CrashHandler@Diagnostics@SK@@YAXXZ ; SK::Diagnostics::CrashHandler::Init
$LN24@SK_Startup:

; 1528 : 
; 1529 : 
; 1530 :   SK::Diagnostics::CrashHandler::InitSyms ();

	call	?InitSyms@CrashHandler@Diagnostics@SK@@YAXXZ ; SK::Diagnostics::CrashHandler::InitSyms

; 1531 : 
; 1532 : 
; 1533 :   if (config.steam.preload_overlay)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+389, 0
	je	SHORT $LN25@SK_Startup

; 1534 :   {
; 1535 :     CreateThread (nullptr, 0x00, [](LPVOID) -> DWORD {

	push	0
	push	0
	push	0
	push	OFFSET ?<lambda_invoker_stdcall>@<lambda_cfec501fcb6571b9a7c0522edf85241b>@@CGKPAX@Z ; <lambda_cfec501fcb6571b9a7c0522edf85241b>::<lambda_invoker_stdcall>
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
$LN25@SK_Startup:

; 1536 :                                    SK_Steam_LoadOverlayEarly ();
; 1537 :                                    SK_Input_Init             ();
; 1538 : 
; 1539 :                                    CloseHandle (GetCurrentThread ());
; 1540 : 
; 1541 :                                    return 0;
; 1542 :                                  }, nullptr, 0x00, nullptr);
; 1543 :   }
; 1544 : 
; 1545 :   SK_Input_PreInit (); // Hook only symbols in user32 and kernel32

	call	?SK_Input_PreInit@@YAXXZ		; SK_Input_PreInit

; 1546 : 
; 1547 : 
; 1548 :   if (config.compatibility.init_while_suspended)
; 1549 :   {
; 1550 :     //
; 1551 :   }
; 1552 : 
; 1553 : 
; 1554 :   // Lazy-load SteamAPI into a process that doesn't use it, this brings
; 1555 :   //   a number of benefits.
; 1556 :   if (config.steam.force_load_steamapi)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+391, 0
	mov	esi, DWORD PTR __imp__GetModuleHandleW@4
	je	$LN34@SK_Startup

; 1557 :   {
; 1558 :     static bool tried = false;
; 1559 : 
; 1560 :     if (! tried)

	cmp	BYTE PTR ?tried@?DH@??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA, 0
	jne	$LN34@SK_Startup

; 1561 :     {
; 1562 :       tried = true;
; 1563 : 
; 1564 : #ifdef _WIN64
; 1565 :       static const wchar_t* wszSteamDLL = L"steam_api64.dll";
; 1566 : #else
; 1567 :       static const wchar_t* wszSteamDLL = L"steam_api.dll";
; 1568 : #endif
; 1569 : 
; 1570 :       if (! GetModuleHandle (wszSteamDLL))

	push	DWORD PTR ?wszSteamDLL@?DK@??SK_StartupCore@@YG_NPB_WPAX@Z@4PB_WB
	mov	BYTE PTR ?tried@?DH@??SK_StartupCore@@YG_NPB_WPAX@Z@4_NA, 1
	call	esi
	test	eax, eax
	jne	$LN34@SK_Startup

; 1571 :       {
; 1572 :         wchar_t wszDLLPath [MAX_PATH * 2 + 4] = { };

	push	1048					; 00000418H
	push	eax
	lea	eax, DWORD PTR _wszDLLPath$2[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1573 : 
; 1574 :         if (SK_IsInjected ())

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	je	SHORT $LN30@SK_Startup

; 1575 :           wcsncpy (wszDLLPath, SK_GetModuleFullName (SK_GetDLL ()).c_str (), MAX_PATH * 2);

	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	call	?SK_GetModuleFullName@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAUHINSTANCE__@@@Z ; SK_GetModuleFullName
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN947@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN947@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1575 :           wcsncpy (wszDLLPath, SK_GetModuleFullName (SK_GetDLL ()).c_str (), MAX_PATH * 2);

	push	520					; 00000208H
	push	eax
	lea	eax, DWORD PTR _wszDLLPath$2[ebp]
	push	eax
	call	DWORD PTR __imp__wcsncpy

; 1576 :         else

	jmp	SHORT $LN1657@SK_Startup
$LN30@SK_Startup:

; 1578 :           _swprintf ( wszDLLPath, L"%s\\My Mods\\SpecialK\\SpecialK.dll",

	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	call	?SK_GetDocumentsDir@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_GetDocumentsDir
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN966@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN966@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1578 :           _swprintf ( wszDLLPath, L"%s\\My Mods\\SpecialK\\SpecialK.dll",

	push	eax
	lea	eax, DWORD PTR _wszDLLPath$2[ebp]
	push	OFFSET $SG428778
	push	eax
	call	__swprintf
$LN1657@SK_Startup:
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 1579 :                         SK_GetDocumentsDir ().c_str () );
; 1580 :         }
; 1581 : 
; 1582 :         if (PathRemoveFileSpec (wszDLLPath))

	lea	eax, DWORD PTR _wszDLLPath$2[ebp]
	push	eax
	call	DWORD PTR __imp__PathRemoveFileSpecW@4
	test	eax, eax
	je	SHORT $LN34@SK_Startup

; 1583 :         {
; 1584 :           PathAppendW (wszDLLPath, wszSteamDLL);

	push	DWORD PTR ?wszSteamDLL@?DK@??SK_StartupCore@@YG_NPB_WPAX@Z@4PB_WB
	lea	eax, DWORD PTR _wszDLLPath$2[ebp]
	push	eax
	call	DWORD PTR __imp__PathAppendW@8

; 1585 : 
; 1586 :           if (SK_GetFileSize (wszDLLPath) > 0)

	lea	eax, DWORD PTR _wszDLLPath$2[ebp]
	push	eax
	call	?SK_GetFileSize@@YG_KPB_W@Z		; SK_GetFileSize
	test	edx, edx
	jne	SHORT $LN1650@SK_Startup
	test	eax, eax
	je	SHORT $LN34@SK_Startup
$LN1650@SK_Startup:

; 1587 :           {
; 1588 :             HMODULE hMod = LoadLibraryW_Original (wszSteamDLL);

	push	DWORD PTR ?wszSteamDLL@?DK@??SK_StartupCore@@YG_NPB_WPAX@Z@4PB_WB
	call	DWORD PTR ?LoadLibraryW_Original@@3P6GPAUHINSTANCE__@@PB_W@ZA ; LoadLibraryW_Original

; 1589 : 
; 1590 :             if (hMod)

	test	eax, eax
	je	SHORT $LN34@SK_Startup

; 1591 :             {
; 1592 :               dll_log.Log ( L"[DLL Loader]   Manually booted SteamAPI: '%s'",

	push	DWORD PTR ?wszSteamDLL@?DK@??SK_StartupCore@@YG_NPB_WPAX@Z@4PB_WB
	push	OFFSET $SG428782
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN34@SK_Startup:

; 1593 :                               wszSteamDLL );//wszDLLPath );
; 1594 :             }
; 1595 :           }
; 1596 :         }
; 1597 :       }
; 1598 :     }
; 1599 :   }
; 1600 : 
; 1601 :   SK_Steam_InitCommandConsoleVariables ();

	call	?SK_Steam_InitCommandConsoleVariables@@YAXXZ ; SK_Steam_InitCommandConsoleVariables

; 1602 :   SK_TestSteamImports                  (GetModuleHandle (nullptr));

	push	0
	call	esi
	push	eax
	call	?SK_TestSteamImports@@YAXPAUHINSTANCE__@@@Z ; SK_TestSteamImports
	add	esp, 4

; 1603 : 
; 1604 : 
; 1605 :   SK_EnumLoadedModules (SK_ModuleEnum::PreLoad);

	push	0
	call	?SK_EnumLoadedModules@@YGXW4SK_ModuleEnum@@@Z ; SK_EnumLoadedModules
$BACKEND_INIT$1660:

; 1606 : 
; 1607 : 
; 1608 : BACKEND_INIT:
; 1609 :   dll_log.LogEx (false,

	push	OFFSET $SG428783
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx

; 1610 :     L"----------------------------------------------------------------------"
; 1611 :     L"---------------------\n");
; 1612 : 
; 1613 :   // If the module name is this, then we need to load the system-wide DLL...
; 1614 :   wchar_t   wszProxyName [MAX_PATH];
; 1615 :   wsprintf (wszProxyName, L"%s.dll", backend);

	mov	esi, DWORD PTR __imp__wsprintfW
	lea	eax, DWORD PTR _wszProxyName$[ebp]
	push	edi
	push	OFFSET $SG428784
	push	eax
	call	esi
	add	esp, 24					; 00000018H

; 1616 : 
; 1617 : 
; 1618 : #ifndef _WIN64
; 1619 :   //
; 1620 :   // TEMP HACK: dgVoodoo2
; 1621 :   //
; 1622 :   if (SK_GetDLLRole () == DLL_ROLE::D3D8)

	call	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ	; SK_GetDLLRole
	cmp	eax, -1073741808			; c0000010H
	jne	$LN35@SK_Startup

; 1623 :     wsprintf (wszProxyName, L"%s\\PlugIns\\ThirdParty\\dgVoodoo\\d3d8.dll",

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?SK_GetDocumentsDir@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_GetDocumentsDir
	push	OFFSET $SG428787
	push	eax
	lea	eax, DWORD PTR $T15[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN985@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN985@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1623 :     wsprintf (wszProxyName, L"%s\\PlugIns\\ThirdParty\\dgVoodoo\\d3d8.dll",

	push	eax
	lea	eax, DWORD PTR _wszProxyName$[ebp]
	push	OFFSET $SG428788
	push	eax
	call	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T15[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1623 :     wsprintf (wszProxyName, L"%s\\PlugIns\\ThirdParty\\dgVoodoo\\d3d8.dll",

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN994@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T15[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN994@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T15[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T15[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T7[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T15[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1623 :     wsprintf (wszProxyName, L"%s\\PlugIns\\ThirdParty\\dgVoodoo\\d3d8.dll",

	mov	BYTE PTR __$EHRec$[ebp+8], 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN37@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T7[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1626 :   else if (SK_GetDLLRole () == DLL_ROLE::DDraw)

	jmp	SHORT $LN37@SK_Startup
$LN35@SK_Startup:
	cmp	eax, -1073741792			; c0000020H
	jne	SHORT $LN37@SK_Startup

; 1627 :     wsprintf (wszProxyName, L"%s\\PlugIns\\ThirdParty\\dgVoodoo\\ddraw.dll",

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	?SK_GetDocumentsDir@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK_GetDocumentsDir
	push	OFFSET $SG428790
	push	eax
	lea	eax, DWORD PTR $T14[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	push	eax
	call	??$?H_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV10@QB_W@Z ; std::operator+<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1064@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN1064@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1627 :     wsprintf (wszProxyName, L"%s\\PlugIns\\ThirdParty\\dgVoodoo\\ddraw.dll",

	push	eax
	lea	eax, DWORD PTR _wszProxyName$[ebp]
	push	OFFSET $SG428791
	push	eax
	call	esi
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	ecx, DWORD PTR $T6[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN37@SK_Startup:

; 1628 :                 std::wstring (SK_GetDocumentsDir () + L"\\My Mods\\SpecialK").c_str ());
; 1629 : #endif
; 1630 : 
; 1631 : 
; 1632 :   wchar_t  wszBackendDLL [MAX_PATH + 2] = { };

	push	524					; 0000020cH
	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1633 :   wcsncpy (wszBackendDLL, SK_GetSystemDirectory (), MAX_PATH);

	push	260					; 00000104H
	call	?SK_GetSystemDirectory@@YAPB_WXZ	; SK_GetSystemDirectory
	push	eax
	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	eax
	call	DWORD PTR __imp__wcsncpy

; 1634 : 
; 1635 :   wchar_t wszWorkDir   [MAX_PATH + 2] = { };

	push	524					; 0000020cH
	lea	eax, DWORD PTR _wszWorkDir$[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 24					; 00000018H

; 1636 :   GetCurrentDirectoryW (MAX_PATH, wszWorkDir);

	lea	eax, DWORD PTR _wszWorkDir$[ebp]
	push	eax
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8

; 1637 :        SK_StripUserNameFromPathW (wszWorkDir);

	lea	eax, DWORD PTR _wszWorkDir$[ebp]
	push	eax
	call	?SK_StripUserNameFromPathW@@YA_NPA_W@Z	; SK_StripUserNameFromPathW

; 1638 : 
; 1639 :   dll_log.Log (L" Working Directory:          %s", wszWorkDir);

	lea	eax, DWORD PTR _wszWorkDir$[ebp]
	push	eax
	push	OFFSET $SG428792
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 1640 :   dll_log.Log (L" System Directory:           %s", wszBackendDLL);

	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	eax
	push	OFFSET $SG428793
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 1641 : 
; 1642 :   lstrcatW (wszBackendDLL, L"\\");

	mov	esi, DWORD PTR __imp__lstrcatW@8
	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	add	esp, 28					; 0000001cH
	push	OFFSET $SG428794
	push	eax
	call	esi

; 1643 :   lstrcatW (wszBackendDLL, backend);

	push	edi
	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	eax
	call	esi

; 1644 :   lstrcatW (wszBackendDLL, L".dll");

	push	OFFSET $SG428795
	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	eax
	call	esi

; 1645 : 
; 1646 :         bool     use_system_dll = true;
; 1647 :   const wchar_t* dll_name       = wszBackendDLL;
; 1648 : 
; 1649 :   if (! SK_Path_wcsicmp (wszProxyName, wszModuleName))

	push	DWORD PTR _wszModuleName$1$[ebp]
	lea	eax, DWORD PTR _wszProxyName$[ebp]
	push	eax
	call	?SK_Path_wcsicmp@@YAHPB_W0@Z		; SK_Path_wcsicmp
	add	esp, 8

; 1650 :     dll_name = wszBackendDLL;
; 1651 :   else
; 1652 :   {
; 1653 :     dll_name       = wszProxyName;
; 1654 :     use_system_dll = false;
; 1655 :   }
; 1656 : 
; 1657 :   bool load_proxy = false;

	mov	BYTE PTR _load_proxy$1$[ebp], 0
	test	eax, eax
	lea	ecx, DWORD PTR _wszProxyName$[ebp]
	lea	edi, DWORD PTR _wszBackendDLL$[ebp]
	cmovne	edi, ecx

; 1658 : 
; 1659 :   if (! SK_IsInjected ())

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	jne	SHORT $LN1642@SK_Startup

; 1660 :   {
; 1661 :     for (auto& import : imports)

	mov	esi, OFFSET ?imports@@3PAUimport_s@@A
	npad	2
$LL4@SK_Startup:

; 1663 :       if (import.role != nullptr && import.role->get_value () == backend)

	mov	ecx, DWORD PTR [esi+64]
	test	ecx, ecx
	je	SHORT $LN57@SK_Startup
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR $T13[ebp]
	push	edx
	call	DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	DWORD PTR _backend$[ebp]
	or	ebx, 1
	mov	ecx, eax
	mov	DWORD PTR $T11[ebp], ebx
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1663 :       if (import.role != nullptr && import.role->get_value () == backend)

	test	al, al
	je	SHORT $LN57@SK_Startup
	mov	bl, 1
	jmp	SHORT $LN58@SK_Startup
$LN57@SK_Startup:
	xor	bl, bl
$LN58@SK_Startup:
	mov	eax, DWORD PTR $T11[ebp]
	test	al, 1
	je	SHORT $LN1075@SK_Startup
	and	eax, -2					; fffffffeH
	mov	DWORD PTR $T11[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T13[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1075@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T13[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1075@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1663 :       if (import.role != nullptr && import.role->get_value () == backend)

	test	bl, bl
	jne	SHORT $LN1637@SK_Startup

; 1660 :   {
; 1661 :     for (auto& import : imports)

	mov	ebx, DWORD PTR $T11[ebp]
	add	esi, 76					; 0000004cH
	cmp	esi, OFFSET ?imports@@3PAUimport_s@@A+608
	jne	SHORT $LL4@SK_Startup
$LN1642@SK_Startup:

; 1674 :     dll_log.LogEx (true, L" Loading default %s.dll: ", backend);

	mov	ebx, DWORD PTR _backend$[ebp]
	push	ebx
	push	OFFSET $SG428803
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H
$LN42@SK_Startup:

; 1675 : 
; 1676 :   // Pre-Load the original DLL into memory
; 1677 :   if (dll_name != wszBackendDLL) {

	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	cmp	edi, eax
	je	SHORT $LN43@SK_Startup

; 1678 :                   LoadLibraryW_Original (wszBackendDLL);

	push	eax
	call	DWORD PTR ?LoadLibraryW_Original@@3P6GPAUHINSTANCE__@@PB_W@ZA ; LoadLibraryW_Original
$LN43@SK_Startup:

; 1679 :     backend_dll = LoadLibraryW_Original (dll_name);
; 1680 :   }
; 1681 : 
; 1682 :   else
; 1683 :     backend_dll = LoadLibraryW_Original (dll_name);

	push	edi
	call	DWORD PTR ?LoadLibraryW_Original@@3P6GPAUHINSTANCE__@@PB_W@ZA ; LoadLibraryW_Original
	mov	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A, eax ; backend_dll

; 1684 : 
; 1685 :   //// Pre-Load the original DLL into memory
; 1686 :   //if (dll_name != wszBackendDLL)
; 1687 :   //{
; 1688 :   //                LoadLibraryExW_Original ( wszBackendDLL, nullptr, use_system_dll ?
; 1689 :   //                                            LOAD_LIBRARY_SEARCH_SYSTEM32 : 0x00 );
; 1690 :   //  backend_dll = LoadLibraryExW_Original (dll_name,      nullptr, 0x0);
; 1691 :   //                GetModuleHandleExW      (GET_MODULE_HANDLE_EX_FLAG_PIN, wszBackendDLL, &backend_dll);
; 1692 :   //}
; 1693 :   //
; 1694 :   //else
; 1695 :   //  backend_dll = LoadLibraryExW_Original ( dll_name, nullptr, use_system_dll ?
; 1696 :   //                                           LOAD_LIBRARY_SEARCH_SYSTEM32 : 0x00);
; 1697 : 
; 1698 :   if (backend_dll != nullptr)
; 1699 :     dll_log.LogEx (false, L" (%s)\n", dll_name);

	push	edi
	test	eax, eax
	je	SHORT $LN45@SK_Startup
	push	OFFSET $SG428808

; 1700 :   else

	jmp	SHORT $LN1658@SK_Startup
$LN1637@SK_Startup:

; 1664 :       {
; 1665 :         dll_log.LogEx (true, L" Loading proxy %s.dll:    ", backend);

	mov	ebx, DWORD PTR _backend$[ebp]
	push	ebx
	push	OFFSET $SG428801
	push	1
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx

; 1666 :         dll_name   = _wcsdup (import.filename->get_value ().c_str ());

	mov	ecx, DWORD PTR [esi+56]
	lea	edx, DWORD PTR $T12[ebp]
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR [eax+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN1115@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN1115@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1666 :         dll_name   = _wcsdup (import.filename->get_value ().c_str ());

	push	eax
	call	DWORD PTR __imp___wcsdup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR $T12[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1666 :         dll_name   = _wcsdup (import.filename->get_value ().c_str ());

	add	esp, 4
	mov	edi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1124@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	ecx
	push	DWORD PTR $T12[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN1124@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T12[ebp+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T12[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T12[ebp], ax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1667 :         load_proxy = true;

	mov	BYTE PTR _load_proxy$1$[ebp], 1

; 1668 :         break;
; 1669 :       }
; 1670 :     }
; 1671 :   }
; 1672 : 
; 1673 :   if (! load_proxy)

	jmp	$LN42@SK_Startup
$LN45@SK_Startup:

; 1701 :     dll_log.LogEx (false, L" FAILED (%s)!\n", dll_name);

	push	OFFSET $SG428809
$LN1658@SK_Startup:
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 16					; 00000010H

; 1702 : 
; 1703 :   // Free the temporary string storage
; 1704 :   if (load_proxy)

	cmp	BYTE PTR _load_proxy$1$[ebp], 0
	je	SHORT $LN47@SK_Startup

; 1705 :     free ((void *)dll_name);

	push	edi
	call	DWORD PTR __imp__free
	add	esp, 4
$LN47@SK_Startup:

; 1706 : 
; 1707 :   dll_log.LogEx (false,

	push	OFFSET $SG428811
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 1708 :     L"----------------------------------------------------------------------"
; 1709 :     L"---------------------\n");
; 1710 : 
; 1711 :   if (config.system.silent)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+832, 0
	je	$LN48@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1713 :     dll_log.silent = true;

	mov	BYTE PTR ?dll_log@@3UiSK_Logger@@A+32, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _log_fnameW$3[ebp+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _log_fnameW$3[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR _log_fnameW$3[ebp], ax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1717 :     if (! SK_IsInjected ())

	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	jne	SHORT $LN50@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+2]
$LL1651@SK_Startup:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL1651@SK_Startup
	sub	ecx, edx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	ebx
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1719 :     else

	jmp	SHORT $LN1659@SK_Startup
$LN50@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	8
	push	OFFSET $SG428816
$LN1659@SK_Startup:
	lea	ecx, DWORD PTR _log_fnameW$3[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2344 : 		return (append(_Ptr, _Traits::length(_Ptr)));

	push	4
	push	OFFSET $SG428817
	lea	ecx, DWORD PTR _log_fnameW$3[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR _log_fnameW$3[ebp+20], 8

; 1621 : 		return (_Large_string_engaged()

	lea	eax, DWORD PTR _log_fnameW$3[ebp]
	cmovae	eax, DWORD PTR _log_fnameW$3[ebp]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1724 :     DeleteFile (log_fnameW.c_str ());

	push	eax
	call	DWORD PTR __imp__DeleteFileW@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _log_fnameW$3[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1725 :   }

	mov	BYTE PTR __$EHRec$[ebp+8], 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN49@SK_Startup

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR _log_fnameW$3[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1727 :   else

	jmp	SHORT $LN49@SK_Startup
$LN48@SK_Startup:

; 1728 :     dll_log.silent = false;

	mov	BYTE PTR ?dll_log@@3UiSK_Logger@@A+32, 0
$LN49@SK_Startup:

; 1729 : 
; 1730 :   bool SK_InitWMI (void);
; 1731 :     SK_InitWMI    (    );

	call	?SK_InitWMI@@YA_NXZ			; SK_InitWMI
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h

; 274  :     LeaveCriticalSection (cs_);

	mov	eax, DWORD PTR ?init_mutex@@3PAVSK_Thread_HybridSpinlock@@A ; init_mutex
	push	DWORD PTR [eax]
	call	DWORD PTR __imp__LeaveCriticalSection@4
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1745 :   init_tids = SK_SuspendAllOtherThreads ();

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?SK_SuspendAllOtherThreads@@YA?AV?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@XZ ; SK_SuspendAllOtherThreads
	add	esp, 4
	mov	esi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1113 : 		if (this != _STD addressof(_Right))

	cmp	esi, OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	je	SHORT $LN1246@SK_Startup

; 1114 : 			{	// different, assign it
; 1115 : 			_Tidy();

	mov	ecx, OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 258  : 	_Container_proxy *_Temp = _Myproxy;

	mov	edx, DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A

; 259  : 	_Myproxy = _Right._Myproxy;

	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A, ecx

; 260  : 	_Right._Myproxy = _Temp;

	mov	DWORD PTR [esi], edx

; 261  : 
; 262  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A
	test	eax, eax
	je	SHORT $LN1436@SK_Startup

; 263  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	DWORD PTR [eax], OFFSET ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; init_tids
$LN1436@SK_Startup:

; 264  : 	if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1437@SK_Startup

; 265  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	DWORD PTR [eax], esi
$LN1437@SK_Startup:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1126 : 		this->_Map() = _Right._Map();

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+4, eax

; 1127 : 		this->_Mapsize() = _Right._Mapsize();

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+8, eax

; 1128 : 		this->_Myoff() = _Right._Myoff();

	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+12, eax

; 1129 : 		this->_Mysize() = _Right._Mysize();

	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR ?init_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A+16, eax

; 1130 : 
; 1131 : 		_Right._Map() = _Mapptr();

	mov	DWORD PTR [esi+4], 0

; 1132 : 		_Right._Mapsize() = 0;

	mov	DWORD PTR [esi+8], 0

; 1133 : 		_Right._Myoff() = 0;

	mov	DWORD PTR [esi+12], 0

; 1134 : 		_Right._Mysize() = 0;

	mov	DWORD PTR [esi+16], 0
$LN1246@SK_Startup:

; 1244 : 		_Tidy();

	lea	ecx, DWORD PTR $T5[ebp]
	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR $T5[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1747 :   InterlockedExchangePointer (

	push	0
	push	0
	push	OFFSET ?init_@@3Uinit_params_t@@A	; init_
	push	OFFSET ?DllThread@@YGKPAX@Z		; DllThread
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(

	mov	ecx, OFFSET ?hInitThread@@3RAXA		; hInitThread
	xchg	DWORD PTR [ecx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _module_name$[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN1610@SK_Startup
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR _module_name$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
$LN1654@SK_Startup:
	add	esp, 12					; 0000000cH
$LN1610@SK_Startup:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1759 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	al, 1
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$1:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$2:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$4:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$5:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$7:
	lea	ecx, DWORD PTR _link$25[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$8:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$9:
	lea	ecx, DWORD PTR $T24[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$11:
	lea	ecx, DWORD PTR _link$23[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$13:
	lea	ecx, DWORD PTR _module_name$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$15:
	lea	ecx, DWORD PTR _default_name$4[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$16:
	lea	ecx, DWORD PTR _default_ini$22[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$21:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$23:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SK_StartupCore@@YG_NPB_WPAX@Z$27:
	lea	ecx, DWORD PTR _log_fnameW$3[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?SK_StartupCore@@YG_NPB_WPAX@Z:
	mov	eax, OFFSET __ehfuncinfo$?SK_StartupCore@@YG_NPB_WPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SK_StartupCore@@YG_NPB_WPAX@Z ENDP			; SK_StartupCore
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 24
_this$ = 8						; size = 4
_backend$ = 8						; size = 4
_callback$ = 12						; size = 4
?SK_InitCore@@YGXPB_WPAX@Z PROC				; SK_InitCore

; 785  : {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h

; 269  :     EnterCriticalSection (cs_);

	mov	eax, DWORD PTR ?init_mutex@@3PAVSK_Thread_HybridSpinlock@@A ; init_mutex
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 785  : {

	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h

; 269  :     EnterCriticalSection (cs_);

	push	DWORD PTR [eax]
	call	DWORD PTR __imp__EnterCriticalSection@4
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 788  :   wcscpy (SK_Backend, backend);

	mov	ecx, DWORD PTR _backend$[ebp]
	mov	edx, OFFSET ?SK_Backend@@3PA_WA		; SK_Backend
	sub	edx, ecx
$LL21@SK_InitCor:
	movzx	eax, WORD PTR [ecx]
	lea	ecx, DWORD PTR [ecx+2]
	mov	WORD PTR [edx+ecx-2], ax
	test	ax, ax
	jne	SHORT $LL21@SK_InitCor

; 789  : 
; 790  : 
; 791  :   BOOL
; 792  :   SK_Steam_PreHookCore (void);
; 793  : 
; 794  :   if (config.steam.spoof_BLoggedOn)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+392, al
	je	SHORT $LN4@SK_InitCor

; 795  :   {
; 796  :     SK_Steam_PreHookCore ();

	call	?SK_Steam_PreHookCore@@YAHXZ		; SK_Steam_PreHookCore
$LN4@SK_InitCor:

; 797  :   }
; 798  : 
; 799  :   using finish_pfn   = void (WINAPI *)  (void);
; 800  :   using callback_pfn = void (WINAPI *)(_Releases_exclusive_lock_ (init_mutex) finish_pfn);
; 801  : 
; 802  :   auto callback_fn =
; 803  :     (callback_pfn)callback;
; 804  : 
; 805  :   dll_log.Log (L"[  NvAPI   ] Initializing NVIDIA API          (NvAPI)...");

	push	OFFSET $SG428125
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 806  : 
; 807  :   nvapi_init =

	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	?InitializeLibrary@NVAPI@sk@@YAHPB_W@Z	; sk::NVAPI::InitializeLibrary

; 808  :     sk::NVAPI::InitializeLibrary (SK_GetHostApp ());
; 809  : 
; 810  :   dll_log.Log (L"[  NvAPI   ]              NvAPI Init         { %s }",

	test	eax, eax
	mov	DWORD PTR ?nvapi_init@@3HA, eax		; nvapi_init
	mov	edx, OFFSET $SG428127
	mov	ecx, OFFSET $SG428126
	cmove	ecx, edx
	push	ecx
	push	OFFSET $SG428128
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 24					; 00000018H

; 811  :                                                      nvapi_init ? L"Success" :
; 812  :                                                                   L"Failed ");
; 813  : 
; 814  :   if (nvapi_init)

	cmp	DWORD PTR ?nvapi_init@@3HA, 0		; nvapi_init
	je	$LN5@SK_InitCor

; 815  :   {
; 816  :     int num_sli_gpus =
; 817  :       sk::NVAPI::CountSLIGPUs ();

	call	?CountSLIGPUs@NVAPI@sk@@YAHXZ		; sk::NVAPI::CountSLIGPUs
	mov	esi, eax

; 819  :     dll_log.Log ( L"[  NvAPI   ] >> NVIDIA Driver Version: %s",

	lea	eax, DWORD PTR $T1[ebp]
	push	0
	push	eax
	call	?GetDriverVersion@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAK@Z ; sk::NVAPI::GetDriverVersion
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN42@SK_InitCor
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN42@SK_InitCor:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 819  :     dll_log.Log ( L"[  NvAPI   ] >> NVIDIA Driver Version: %s",

	push	eax
	push	OFFSET $SG428131
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T1[ebp+20]
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 819  :     dll_log.Log ( L"[  NvAPI   ] >> NVIDIA Driver Version: %s",

	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN51@SK_InitCor
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T1[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN51@SK_InitCor:
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 823  :       sk::NVAPI::CountPhysicalGPUs ();

	call	?CountPhysicalGPUs@NVAPI@sk@@YAHXZ	; sk::NVAPI::CountPhysicalGPUs
	mov	edi, eax

; 824  : 
; 825  :     dll_log.Log ( gpu_count > 1 ? L"[  NvAPI   ]  * Number of Installed NVIDIA GPUs: %i  "

	mov	ebx, esi
	cmp	edi, 1
	jg	SHORT $LN23@SK_InitCor
	lea	ebx, DWORD PTR [esi+1]
$LN23@SK_InitCor:
	call	?EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ; sk::NVAPI::EnumGPUs_DXGI
	push	eax
	mov	ecx, OFFSET $SG428133
	cmp	edi, 1
	mov	eax, OFFSET $SG428132
	push	ebx
	cmovle	eax, ecx
	push	eax
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 826  :                                   L"{ SLI: '%s' }"
; 827  :                                 :
; 828  :                                   L"[  NvAPI   ]  * Number of Installed NVIDIA GPUs: %i  { '%s' }",
; 829  :                                     gpu_count > 1 ? num_sli_gpus :
; 830  :                                                     num_sli_gpus + 1,
; 831  :                                       sk::NVAPI::EnumGPUs_DXGI ()[0].Description );
; 832  : 
; 833  :     if (num_sli_gpus > 0)

	test	esi, esi
	jle	SHORT $LN3@SK_InitCor

; 834  :     {
; 835  :       DXGI_ADAPTER_DESC* sli_adapters =
; 836  :         sk::NVAPI::EnumSLIGPUs ();

	call	?EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ; sk::NVAPI::EnumSLIGPUs
	mov	esi, eax

; 837  : 
; 838  :       int sli_gpu_idx = 0;

	xor	edi, edi

; 839  : 
; 840  :       while (*sli_adapters->Description != L'\0')

	cmp	WORD PTR [esi], di
	je	SHORT $LN3@SK_InitCor
	npad	4
$LL2@SK_InitCor:

; 841  :       {
; 842  :         dll_log.Log ( L"[  NvAPI   ]   + SLI GPU %d: %s",

	push	esi
	push	edi
	push	OFFSET $SG428135
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esi, 292				; 00000124H
	add	esp, 16					; 00000010H
	inc	edi
	cmp	WORD PTR [esi], 0
	jne	SHORT $LL2@SK_InitCor
$LN3@SK_InitCor:

; 843  :                         sli_gpu_idx++,
; 844  :                           (sli_adapters++)->Description );
; 845  :       }
; 846  :     }
; 847  : 
; 848  :     //
; 849  :     // Setup a framerate limiter and (if necessary) restart
; 850  :     //
; 851  :     bool restart = (! sk::NVAPI::SetFramerateLimit (0));

	push	0
	call	?SetFramerateLimit@NVAPI@sk@@YAHI@Z	; sk::NVAPI::SetFramerateLimit
	add	esp, 4
	test	eax, eax
	sete	bl

; 852  : 
; 853  :     //
; 854  :     // Install SLI Override Settings
; 855  :     //
; 856  :     if (sk::NVAPI::CountSLIGPUs () && config.nvidia.sli.override)

	call	?CountSLIGPUs@NVAPI@sk@@YAHXZ		; sk::NVAPI::CountSLIGPUs
	test	eax, eax
	je	SHORT $LN9@SK_InitCor
	cmp	BYTE PTR ?config@@3Usk_config_t@@A+668, 0
	je	SHORT $LN9@SK_InitCor
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+616, 8

; 1621 : 		return (_Large_string_engaged()

	mov	edx, OFFSET ?config@@3Usk_config_t@@A+596
	mov	ecx, OFFSET ?config@@3Usk_config_t@@A+644
	mov	eax, OFFSET ?config@@3Usk_config_t@@A+620
	cmovae	edx, DWORD PTR ?config@@3Usk_config_t@@A+596

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+664, 8
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 858  :       if (! sk::NVAPI::SetSLIOverride

	push	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	ecx, DWORD PTR ?config@@3Usk_config_t@@A+644

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?config@@3Usk_config_t@@A+640, 8
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 858  :       if (! sk::NVAPI::SetSLIOverride

	push	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	eax, DWORD PTR ?config@@3Usk_config_t@@A+620
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 858  :       if (! sk::NVAPI::SetSLIOverride

	push	eax
	call	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ	; SK_GetDLLRole
	push	eax
	call	?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z ; sk::NVAPI::SetSLIOverride
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN148@SK_InitCor
$LN9@SK_InitCor:

; 859  :               ( SK_GetDLLRole (),
; 860  :                   config.nvidia.sli.mode.c_str (),
; 861  :                     config.nvidia.sli.num_gpus.c_str (),
; 862  :                       config.nvidia.sli.compatibility.c_str ()
; 863  :               )
; 864  :          )
; 865  :       {
; 866  :         restart = true;
; 867  :       }
; 868  :     }
; 869  : 
; 870  :     if (restart)

	test	bl, bl
	je	$LN11@SK_InitCor
$LN148@SK_InitCor:

; 871  :     {
; 872  :       dll_log.Log (L"[  NvAPI   ] >> Restarting to apply NVIDIA driver settings <<");

	push	OFFSET $SG428139
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8

; 873  : 
; 874  :       ShellExecute ( GetDesktopWindow (),

	push	10					; 0000000aH
	push	0
	push	0
	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	push	OFFSET $SG428140
	call	DWORD PTR __imp__GetDesktopWindow@0
	push	eax
	call	DWORD PTR __imp__ShellExecuteW@24

; 875  :                        L"OPEN",
; 876  :                          SK_GetHostApp (),
; 877  :                            nullptr,
; 878  :                              nullptr,
; 879  :                                SW_SHOWDEFAULT );
; 880  :       exit (0);

	push	0
	call	DWORD PTR __imp__exit
$LN151@SK_InitCor:
$LN5@SK_InitCor:

; 881  :     }
; 882  :   }
; 883  : 
; 884  :   // Not NVIDIA, maybe AMD?
; 885  :   else
; 886  :   {
; 887  :     dll_log.Log (L"[DisplayLib] Initializing AMD Display Library (ADL)...");

	push	OFFSET $SG428141
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 888  : 
; 889  :     BOOL adl_init =
; 890  :       SK_InitADL ();

	call	?SK_InitADL@@YAHXZ			; SK_InitADL
	mov	esi, eax

; 891  : 
; 892  :     dll_log.Log   (L"[DisplayLib]              ADL   Init         { %s }",

	mov	ecx, OFFSET $SG428142
	mov	eax, OFFSET $SG428143
	test	esi, esi
	cmove	ecx, eax
	push	ecx
	push	OFFSET $SG428144
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 20					; 00000014H

; 893  :                                                      adl_init ? L"Success" :
; 894  :                                                                 L"Failed ");
; 895  : 
; 896  :     // Yes, AMD driver is in working order ...
; 897  :     if (adl_init > 0)

	test	esi, esi
	jle	SHORT $LN11@SK_InitCor

; 898  :     {
; 899  :       dll_log.Log ( L"[DisplayLib]  * Number of Reported AMD Adapters: %i (%i active)",

	call	?SK_ADL_CountActiveGPUs@@YAHXZ		; SK_ADL_CountActiveGPUs
	push	eax
	call	?SK_ADL_CountPhysicalGPUs@@YAHXZ	; SK_ADL_CountPhysicalGPUs
	push	eax
	push	OFFSET $SG428146
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H
$LN11@SK_InitCor:

; 900  :                       SK_ADL_CountPhysicalGPUs (),
; 901  :                         SK_ADL_CountActiveGPUs () );
; 902  :     }
; 903  :   }
; 904  : 
; 905  :   HMODULE hMod =
; 906  :     GetModuleHandle (SK_GetHostApp ());

	call	?SK_GetHostApp@@YAPB_WXZ		; SK_GetHostApp
	push	eax
	call	DWORD PTR __imp__GetModuleHandleW@4
	mov	esi, eax

; 907  : 
; 908  :   if (hMod != nullptr)

	test	esi, esi
	je	$LN16@SK_InitCor

; 909  :   {
; 910  :     auto* dwOptimus =
; 911  :       reinterpret_cast <DWORD *> (
; 912  :         GetProcAddress ( hMod,

	mov	edi, DWORD PTR __imp__GetProcAddress@8
	push	OFFSET $SG428148
	push	esi
	call	edi

; 913  :                            "NvOptimusEnablement" )
; 914  :       );
; 915  : 
; 916  :     if (dwOptimus != nullptr)

	test	eax, eax
	je	SHORT $LN13@SK_InitCor

; 917  :     {
; 918  :       dll_log.Log ( L"[Hybrid GPU]  NvOptimusEnablement..................: 0x%02X (%s)",

	mov	ecx, DWORD PTR [eax]
	mov	edx, OFFSET $SG428152
	test	cl, 1
	mov	eax, OFFSET $SG428151
	cmove	eax, edx
	push	eax
	push	ecx
	push	OFFSET $SG428153
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 919  :                       *dwOptimus,
; 920  :                     ((*dwOptimus) & 0x1) ? L"Max Perf." :
; 921  :                                            L"Don't Care" );
; 922  :     }
; 923  : 
; 924  :     else

	jmp	SHORT $LN14@SK_InitCor
$LN13@SK_InitCor:

; 925  :     {
; 926  :       dll_log.Log (L"[Hybrid GPU]  NvOptimusEnablement..................: UNDEFINED");

	push	OFFSET $SG428154
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN14@SK_InitCor:

; 927  :     }
; 928  : 
; 929  :     auto* dwPowerXpress =
; 930  :       reinterpret_cast <DWORD *> (
; 931  :         GetProcAddress ( hMod,

	push	OFFSET $SG428155
	push	esi
	call	edi

; 932  :                            "AmdPowerXpressRequestHighPerformance" )
; 933  :       );
; 934  : 
; 935  :     if (dwPowerXpress != nullptr)

	test	eax, eax
	je	SHORT $LN15@SK_InitCor

; 936  :     {
; 937  :       dll_log.Log (L"[Hybrid GPU]  AmdPowerXpressRequestHighPerformance.: 0x%02X (%s)",

	mov	ecx, DWORD PTR [eax]
	mov	edx, OFFSET $SG428159
	test	cl, 1
	mov	eax, OFFSET $SG428158
	cmove	eax, edx
	push	eax
	push	ecx
	push	OFFSET $SG428160
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 938  :         *dwPowerXpress,
; 939  :         (*dwPowerXpress & 0x1) ? L"High Perf." :
; 940  :                                  L"Don't Care" );
; 941  :     }
; 942  : 
; 943  :     else

	jmp	SHORT $LN16@SK_InitCor
$LN15@SK_InitCor:

; 944  :       dll_log.Log (L"[Hybrid GPU]  AmdPowerXpressRequestHighPerformance.: UNDEFINED");

	push	OFFSET $SG428161
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN16@SK_InitCor:

; 945  :   }
; 946  : 
; 947  : 
; 948  : #ifdef _WIN64
; 949  :   if (! lstrcmpW (SK_GetHostApp (), L"NieRAutomata.exe"))
; 950  :     SK_FAR_InitPlugin ();
; 951  : 
; 952  :   if (SK_GetCurrentGameID () == SK_GAME_ID::BlueReflection)
; 953  :   {
; 954  :     extern void
; 955  :     SK_IT_InitPlugin (void);
; 956  : 
; 957  :     SK_IT_InitPlugin ();
; 958  :   }
; 959  : 
; 960  :   else if (SK_GetCurrentGameID () == SK_GAME_ID::DotHackGU)
; 961  :   {
; 962  :     extern void
; 963  :     SK_DGPU_InitPlugin (void);
; 964  : 
; 965  :     SK_DGPU_InitPlugin ();
; 966  :   }
; 967  : 
; 968  :   //else if (SK_GetCurrentGameID () == SK_GAME_ID::LEGOMarvelSuperheroes2)
; 969  :   //{
; 970  :   //  extern void
; 971  :   //  SK_MSS_InitPlugin (void);
; 972  :   //
; 973  :   //  SK_MSS_InitPlugin ();
; 974  :   //}
; 975  : #endif
; 976  : 
; 977  : 
; 978  :   //
; 979  :   // NOT-SO-TEMP HACK: dgVoodoo2
; 980  :   //
; 981  :   if ( SK_GetDLLRole () == DLL_ROLE::D3D8 ||

	call	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ	; SK_GetDLLRole
	cmp	eax, -1073741808			; c0000010H
	je	SHORT $LN18@SK_InitCor
	cmp	eax, -1073741792			; c0000020H
	jne	SHORT $LN17@SK_InitCor
$LN18@SK_InitCor:

; 982  :        SK_GetDLLRole () == DLL_ROLE::DDraw  )
; 983  :     SK_BootDXGI ();

	call	?SK_BootDXGI@@YAXXZ			; SK_BootDXGI
$LN17@SK_InitCor:

; 984  : 
; 985  :   void
; 986  :   __stdcall
; 987  :   SK_InitFinishCallback (void);
; 988  : 
; 989  :   SK_ResumeThreads (__SK_Init_Suspended_tids);

	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?__SK_Init_Suspended_tids@@3V?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@A ; __SK_Init_Suspended_tids
	call	??0?$deque@KV?$allocator@K@std@@@std@@QAE@ABV01@@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
	call	?SK_ResumeThreads@@YAXV?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@@Z ; SK_ResumeThreads
	add	esp, 20					; 00000014H

; 990  :          callback_fn (SK_InitFinishCallback);

	push	OFFSET ?SK_InitFinishCallback@@YGXXZ	; SK_InitFinishCallback
	call	DWORD PTR _callback$[ebp]
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 993  :   if ( (! ReadAcquire (&SK_bypass_dialog_active)) &&

	test	eax, eax
	jne	SHORT $LN19@SK_InitCor
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	esi, DWORD PTR ?SK_bypass_dialog_tid@@3JC ; SK_bypass_dialog_tid
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 993  :   if ( (! ReadAcquire (&SK_bypass_dialog_active)) &&

	call	DWORD PTR __imp__GetCurrentThreadId@0
	cmp	esi, eax
	je	SHORT $LN19@SK_InitCor

; 994  :           ReadAcquire (&SK_bypass_dialog_tid) != static_cast <LONG> (GetCurrentThreadId ()) )
; 995  :   {
; 996  :     // Setup the compatibility backend, which monitors loaded libraries,
; 997  :     //   blacklists bad DLLs and detects render APIs...
; 998  :     SK_EnumLoadedModules (SK_ModuleEnum::PostLoad);

	push	1
	call	?SK_EnumLoadedModules@@YGXW4SK_ModuleEnum@@@Z ; SK_EnumLoadedModules
$LN19@SK_InitCor:

; 999  :   }
; 1000 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN150@SK_InitCor:
?SK_InitCore@@YGXPB_WPAX@Z ENDP				; SK_InitCore
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h
; File c:\users\andon\source\repos\specialk\src\core.cpp
_TEXT	SEGMENT
?WaitForInit@@YAXXZ PROC				; WaitForInit
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8077 :     Value = *Source;

	mov	eax, DWORD PTR ?__SK_Init@@3JC		; __SK_Init
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1006 :   if (ReadNoFence (&__SK_Init))

	test	eax, eax
	jne	$LN12@WaitForIni
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?hInitThread@@3RAXA	; hInitThread
	push	esi
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1009 :   while (ReadPointerAcquire ((LPVOID *)&hInitThread) == nullptr)

	test	eax, eax
	jne	SHORT $LN47@WaitForIni
	mov	esi, DWORD PTR __imp__SleepEx@8
	npad	3
$LL2@WaitForIni:

; 1010 :     SleepEx (150, TRUE);

	push	1
	push	150					; 00000096H
	call	esi
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?hInitThread@@3RAXA	; hInitThread
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1009 :   while (ReadPointerAcquire ((LPVOID *)&hInitThread) == nullptr)

	test	eax, eax
	je	SHORT $LL2@WaitForIni
$LN47@WaitForIni:
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?hInitThread@@3RAXA	; hInitThread
	push	ebx
	push	edi
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1012 :   while (ReadPointerAcquire ((LPVOID *)&hInitThread) != INVALID_HANDLE_VALUE)

	mov	edi, DWORD PTR __imp__GetCurrentThread@0
	cmp	eax, -1
	je	SHORT $LN55@WaitForIni
	mov	ebx, DWORD PTR __imp__WaitForSingleObject@8
	npad	6
$LL4@WaitForIni:
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	esi, DWORD PTR ?hInitThread@@3RAXA	; hInitThread
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1014 :     if (ReadPointerAcquire ((LPVOID *)&hInitThread) == GetCurrentThread ())

	call	edi
	cmp	esi, eax
	je	SHORT $LN55@WaitForIni
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?hInitThread@@3RAXA	; hInitThread
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1017 :     if ( WAIT_OBJECT_0 == WaitForSingleObject (

	push	150					; 00000096H
	push	eax
	call	ebx
	test	eax, eax
	je	SHORT $LN55@WaitForIni
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?hInitThread@@3RAXA	; hInitThread
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1012 :   while (ReadPointerAcquire ((LPVOID *)&hInitThread) != INVALID_HANDLE_VALUE)

	cmp	eax, -1
	jne	SHORT $LL4@WaitForIni
$LN55@WaitForIni:
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?SK_bypass_dialog_active@@3JC ; SK_bypass_dialog_active
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1023 :   if ( (! ReadAcquire (&SK_bypass_dialog_active)) &&

	test	eax, eax
	jne	SHORT $LN9@WaitForIni
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	esi, DWORD PTR ?SK_bypass_dialog_tid@@3JC ; SK_bypass_dialog_tid
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1023 :   if ( (! ReadAcquire (&SK_bypass_dialog_active)) &&

	mov	ebx, DWORD PTR __imp__GetCurrentThreadId@0
	call	ebx
	cmp	esi, eax
	je	SHORT $LN9@WaitForIni

; 1024 :           ReadAcquire (&SK_bypass_dialog_tid) != static_cast <LONG> (GetCurrentThreadId ()) )
; 1025 :   {
; 1026 :     dll_log.Log ( L"[ MultiThr ] Injection Bypass Dialog Active (tid=%x)",

	call	ebx
	push	eax
	push	OFFSET $SG428194
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH

; 1027 :                       GetCurrentThreadId () );
; 1028 :     MsgWaitForMultipleObjectsEx (0, nullptr, 150, QS_ALLINPUT, MWMO_ALERTABLE);

	push	2
	push	1279					; 000004ffH
	push	150					; 00000096H
	push	0
	push	0
	call	DWORD PTR __imp__MsgWaitForMultipleObjectsEx@20
$LN9@WaitForIni:

; 1029 :   }
; 1030 : 
; 1031 :   // First thread to reach this point wins ... a shiny new car and
; 1032 :   //   various other initialization tasks.
; 1033 :   //
; 1034 :   // This is important because if this DLL is loaded at application start,
; 1035 :   //   there are potentially other threads queued up waiting to make calls
; 1036 :   //     to this one.
; 1037 :   //
; 1038 :   //   These other threads start out life suspended but Windows will resume
; 1039 :   //     them as soon as all DLL code is loaded. Then it becomes a sloppy race
; 1040 :   //       for each attached thread to finish its DllMain (...) function.
; 1041 :   //
; 1042 :   if (! InterlockedCompareExchange (&__SK_Init, TRUE, FALSE))

	mov	ecx, 1
	mov	edx, OFFSET ?__SK_Init@@3JC		; __SK_Init
	xor	eax, eax
	lock	 cmpxchg DWORD PTR [edx], ecx
	test	eax, eax
	jne	SHORT $LN57@WaitForIni
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	esi, DWORD PTR ?hInitThread@@3RAXA	; hInitThread
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1044 :     if (ReadPointerAcquire ((LPVOID *)&hInitThread) != GetCurrentThread () &&

	call	edi
	cmp	esi, eax
	je	SHORT $LN11@WaitForIni
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?hInitThread@@3RAXA	; hInitThread
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1044 :     if (ReadPointerAcquire ((LPVOID *)&hInitThread) != GetCurrentThread () &&

	cmp	eax, -1
	je	SHORT $LN11@WaitForIni

; 1045 :         ReadPointerAcquire ((LPVOID *)&hInitThread) != INVALID_HANDLE_VALUE)
; 1046 :     {
; 1047 :       SK_ApplyQueuedHooks ();

	call	?SK_ApplyQueuedHooks@@YG?AW4MH_STATUS@@XZ ; SK_ApplyQueuedHooks
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\atlmfc\include\atlconv.h

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(

	or	eax, -1
	mov	ecx, OFFSET ?hInitThread@@3RAXA		; hInitThread
	xchg	DWORD PTR [ecx], eax
; File c:\users\andon\source\repos\specialk\src\core.cpp

; 1049 :       CloseHandle (

	push	eax
	call	DWORD PTR __imp__CloseHandle@4
$LN11@WaitForIni:

; 1050 :         InterlockedExchangePointer ( const_cast <LPVOID *> (&hInitThread),
; 1051 :                                        INVALID_HANDLE_VALUE )
; 1052 :       );
; 1053 :     }
; 1054 : 
; 1055 :     // Load user-defined DLLs (Lazy)
; 1056 : #ifdef _WIN64
; 1057 :     SK_LoadLazyImports64 ();
; 1058 : #else
; 1059 :     SK_LoadLazyImports32 ();

	call	?SK_LoadLazyImports32@@YAXXZ		; SK_LoadLazyImports32

; 1060 : #endif
; 1061 : 
; 1062 :     if (config.system.handle_crashes)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+840, 0
	je	SHORT $LN57@WaitForIni
	pop	edi
	pop	ebx
	pop	esi

; 1063 :       SK::Diagnostics::CrashHandler::Reinstall ();

	jmp	?Reinstall@CrashHandler@Diagnostics@SK@@YAXXZ ; SK::Diagnostics::CrashHandler::Reinstall
$LN57@WaitForIni:
	pop	edi
	pop	ebx
	pop	esi
$LN12@WaitForIni:

; 1064 :   }
; 1065 : }

	ret	0
?WaitForInit@@YAXXZ ENDP				; WaitForInit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 204  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN3@Getcont

; 205  : 		}

	ret	0
$LN3@Getcont:

; 204  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR [eax]

; 205  : 		}

	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 169  : 		{	// adopt this iterator by parent

	npad	2
	push	ebp
	mov	ebp, esp

; 170  : 		if (_Parent == 0)

	mov	eax, DWORD PTR __Parent$[ebp]
	test	eax, eax
	je	SHORT $LN3@Adopt

; 171  : 			{	// no future parent, just disown current parent
; 172  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 173  : 			_Lockit _Lock(_LOCK_DEBUG);
; 174  : 			_Orphan_me();
; 175  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 176  : 			}
; 177  : 		else
; 178  : 			{	// have a parent, do adoption
; 179  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 180  : 
; 181  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 182  : 			if (_Myproxy != _Parent_proxy)
; 183  : 				{	// change parentage
; 184  : 				_Lockit _Lock(_LOCK_DEBUG);
; 185  : 				_Orphan_me();
; 186  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 187  : 				_Parent_proxy->_Myfirstiter = this;
; 188  : 				_Myproxy = _Parent_proxy;
; 189  : 				}
; 190  : 
; 191  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 192  : 			_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@Adopt:

; 193  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 194  : 			}
; 195  : 		}

	pop	ebp
	ret	4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 162  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 163  : 		_Lockit _Lock(_LOCK_DEBUG);
; 164  : 		_Orphan_me();
; 165  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 166  : 		}

	ret	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 133  : 		: _Myproxy(0), _Mynextiter(0)

	mov	DWORD PTR [ecx], 0

; 135  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z PROC	; std::_Container_base12::_Swap_all, COMDAT
; _this$ = ecx

; 253  : 	{	// swap all iterators

	npad	2
	push	ebp
	mov	ebp, esp

; 254  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 255  : 	_Lockit _Lock(_LOCK_DEBUG);
; 256  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 257  : 
; 258  : 	_Container_proxy *_Temp = _Myproxy;

	mov	edx, DWORD PTR [ecx]
	push	esi

; 259  : 	_Myproxy = _Right._Myproxy;

	mov	esi, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax

; 260  : 	_Right._Myproxy = _Temp;

	mov	DWORD PTR [esi], edx

; 261  : 
; 262  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN2@Swap_all

; 263  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	DWORD PTR [eax], ecx
$LN2@Swap_all:

; 264  : 	if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@Swap_all

; 265  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	DWORD PTR [eax], esi
$LN3@Swap_all:
	pop	esi

; 266  : 	}

	pop	ebp
	ret	4
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ENDP	; std::_Container_base12::_Swap_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 239  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 240  : 	if (_Myproxy != 0)
; 241  : 		{	// proxy allocated, drain it
; 242  : 		_Lockit _Lock(_LOCK_DEBUG);
; 243  : 
; 244  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;
; 245  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)
; 246  : 			(*_Pnext)->_Myproxy = 0;
; 247  : 		_Myproxy->_Myfirstiter = 0;
; 248  : 		}
; 249  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 250  : 	}

	ret	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 115  : 		_Orphan_all();
; 116  : 		}

	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [ecx], 0

; 101  : 		}

	mov	eax, ecx
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 87   : 		: _Mycont(0), _Myfirstiter(0)

	mov	DWORD PTR [ecx], 0

; 89   : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 75   : 		}

	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 64   : 		}

	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 516  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 517  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [eax], cl

; 518  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADQADQBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 505  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 507  : 		}

	pop	ebp

; 506  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@D@std@@SAPADQADQBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADQADQBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 485  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __First2$[ebp]
	push	DWORD PTR __First1$[ebp]
	call	_memcpy
	add	esp, 12					; 0000000cH

; 487  : 		}

	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADQADQBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIQBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIQBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 479  : 		{	// find length of null-terminated string

	npad	2
	push	ebp
	mov	ebp, esp

; 480  : 		return (_CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+1]
	npad	5
$LL3@length:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx

; 481  : 		}

	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIQBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 325  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 326  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cx, WORD PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	WORD PTR [eax], cx

; 327  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 314  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	mov	DWORD PTR __Count$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 316  : 		}

	pop	ebp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 294  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	push	eax
	push	DWORD PTR __First2$[ebp]
	push	DWORD PTR __First1$[ebp]
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 296  : 		}

	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?length@?$char_traits@_W@std@@SAIQB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIQB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 288  : 		{	// find length of null-terminated sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+2]
	npad	5
$LL3@length:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL3@length
	sub	eax, edx
	sar	eax, 1

; 290  : 		}

	pop	ebp
	ret	0
?length@?$char_traits@_W@std@@SAIQB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?compare@?$char_traits@_W@std@@SAHQB_W0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@_W@std@@SAHQB_W0I@Z PROC		; std::char_traits<wchar_t>::compare, COMDAT

; 283  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	mov	edx, DWORD PTR __First2$[ebp]
	mov	eax, DWORD PTR __First1$[ebp]
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN5@compare
$LL6@compare:

; 217  :             if (*_S1 != *_S2)

	mov	cx, WORD PTR [eax]
	cmp	cx, WORD PTR [edx]
	jne	SHORT $LN14@compare

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	eax, 2
	add	edx, 2
	sub	esi, 1
	jne	SHORT $LL6@compare
$LN5@compare:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	xor	eax, eax
	pop	esi

; 285  : 		}

	pop	ebp
	ret	0
$LN14@compare:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	sbb	eax, eax
	and	eax, -2					; fffffffeH
	inc	eax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 285  : 		}

	pop	ebp
	ret	0
?compare@?$char_traits@_W@std@@SAHQB_W0I@Z ENDP		; std::char_traits<wchar_t>::compare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 91   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 94   :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT

; 244  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 248  :         #pragma warning(pop)
; 249  :     }

	pop	ebp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 231  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 235  :         #pragma warning(pop)
; 236  :     }

	pop	ebp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	jmp	_memcpy
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemcmp
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcmp PROC						; COMDAT

; 215  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	mov	esi, DWORD PTR __N$[ebp]
	test	esi, esi
	je	SHORT $LN3@wmemcmp
	mov	ecx, DWORD PTR __S2$[ebp]
	mov	edx, DWORD PTR __S1$[ebp]
$LL4@wmemcmp:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	jne	SHORT $LN8@wmemcmp

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	edx, 2
	add	ecx, 2
	sub	esi, 1
	jne	SHORT $LL4@wmemcmp
$LN3@wmemcmp:

; 219  : 
; 220  :         return 0;

	xor	eax, eax
	pop	esi

; 221  :     }

	pop	ebp
	ret	0
$LN8@wmemcmp:

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	movzx	eax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	pop	esi
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	inc	eax

; 221  :     }

	pop	ebp
	ret	0
_wmemcmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<wchar_t const * const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

	ret	0
??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<wchar_t const * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_wstdio.h
;	COMDAT ?swprintf@@YAHQA_WQB_WZZ
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
?swprintf@@YAHQA_WQB_WZZ PROC				; swprintf, COMDAT

; 1824 :         {

	npad	2
	push	ebp
	mov	ebp, esp

; 1825 :             int _Result;
; 1826 :             va_list _ArgList;
; 1827 :             __crt_va_start(_ArgList, _Format);
; 1828 :             #pragma warning(suppress: 28719)
; 1829 :             _Result = vswprintf(_Buffer, _CRT_INT_MAX, _Format, _ArgList);       

	lea	eax, DWORD PTR __Format$[ebp+4]
	push	eax
	push	DWORD PTR __Format$[ebp]
	push	2147483647				; 7fffffffH
	push	DWORD PTR __Buffer$[ebp]
	call	_vswprintf
	add	esp, 16					; 00000010H

; 1830 :             __crt_va_end(_ArgList);
; 1831 :             return _Result;
; 1832 :         }

	pop	ebp
	ret	0
?swprintf@@YAHQA_WQB_WZZ ENDP				; swprintf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winbase.h
;	COMDAT ?_InterlockedCompareExchange@@YAKPCKKK@Z
_TEXT	SEGMENT
_Destination$ = 8					; size = 4
_Exchange$ = 12						; size = 4
_Comperand$ = 16					; size = 4
?_InterlockedCompareExchange@@YAKPCKKK@Z PROC		; _InterlockedCompareExchange, COMDAT

; 9002 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 9003 :     return (unsigned long) _InterlockedCompareExchange((volatile long*) Destination, (long) Exchange, (long) Comperand);

	mov	edx, DWORD PTR _Exchange$[ebp]
	mov	ecx, DWORD PTR _Destination$[ebp]
	mov	eax, DWORD PTR _Comperand$[ebp]
	lock	 cmpxchg DWORD PTR [ecx], edx

; 9004 : }

	pop	ebp
	ret	0
?_InterlockedCompareExchange@@YAKPCKKK@Z ENDP		; _InterlockedCompareExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _x$[ebp]
	test	eax, eax
	jle	SHORT $LN4@HRESULT_FR
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
$LN4@HRESULT_FR:
	pop	ebp
	ret	0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
;	COMDAT _ReadPointerAcquire
_TEXT	SEGMENT
_Source$ = 8						; size = 4
_ReadPointerAcquire PROC				; COMDAT

; 8591 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR _Source$[ebp]
	mov	eax, DWORD PTR [eax]

; 8592 : 
; 8593 :     return (PVOID)ReadAcquire((PLONG)Source);
; 8594 : }

	pop	ebp
	ret	0
_ReadPointerAcquire ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
;	COMDAT _ReadAcquire64
_TEXT	SEGMENT
_Source$ = 8						; size = 4
_ReadAcquire64 PROC					; COMDAT

; 8113 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 8114 : 
; 8115 :     LONG64 Value;
; 8116 : 
; 8117 :     Value = *Source;

	mov	ecx, DWORD PTR _Source$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 8118 :     return Value;
; 8119 : }

	pop	ebp
	ret	0
_ReadAcquire64 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
;	COMDAT _ReadNoFence
_TEXT	SEGMENT
_Source$ = 8						; size = 4
_ReadNoFence PROC					; COMDAT

; 8073 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 8074 : 
; 8075 :     LONG Value;
; 8076 : 
; 8077 :     Value = *Source;

	mov	eax, DWORD PTR _Source$[ebp]
	mov	eax, DWORD PTR [eax]

; 8078 :     return Value;
; 8079 : }

	pop	ebp
	ret	0
_ReadNoFence ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
;	COMDAT _ReadAcquire
_TEXT	SEGMENT
_Source$ = 8						; size = 4
_ReadAcquire PROC					; COMDAT

; 8059 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 8060 : 
; 8061 :     LONG Value;
; 8062 : 
; 8063 :     Value = *Source;

	mov	eax, DWORD PTR _Source$[ebp]
	mov	eax, DWORD PTR [eax]

; 8064 :     return Value;
; 8065 : }

	pop	ebp
	ret	0
_ReadAcquire ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
;	COMDAT __InlineInterlockedCompareExchangePointer
_TEXT	SEGMENT
_Destination$ = 8					; size = 4
_ExChange$ = 12						; size = 4
_Comperand$ = 16					; size = 4
__InlineInterlockedCompareExchangePointer PROC		; COMDAT

; 5285 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 5286 :     return (PVOID)InterlockedCompareExchange((LONG volatile *) Destination,

	mov	edx, DWORD PTR _ExChange$[ebp]
	mov	ecx, DWORD PTR _Destination$[ebp]
	mov	eax, DWORD PTR _Comperand$[ebp]
	lock	 cmpxchg DWORD PTR [ecx], edx

; 5287 :                                              (LONG) ExChange,
; 5288 :                                              (LONG) Comperand);
; 5289 : }

	pop	ebp
	ret	0
__InlineInterlockedCompareExchangePointer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\core.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 2576 : SK_ImGui_WidgetRegistry SK_ImGui_Widgets;

	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___n$[ebp]
	test	esi, esi
	je	SHORT $LN6@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	edi
	mov	edi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, edi
	call	ebx
	add	edi, DWORD PTR ___s$[ebp]
	sub	esi, 1
	jne	SHORT $LL2@vector
	pop	edi
	pop	ebx
$LN6@vector:
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
