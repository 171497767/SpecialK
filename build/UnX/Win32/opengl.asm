; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\opengl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_imp_glNormal3sv
PUBLIC	_imp_glBindTexture
PUBLIC	_imp_wglUseFontOutlinesW
PUBLIC	_imp_glGetTexParameterfv
PUBLIC	_imp_glTranslatef
PUBLIC	_imp_glScalef
PUBLIC	_imp_glDisableClientState
PUBLIC	_imp_glNormalPointer
PUBLIC	_imp_glVertex2d
PUBLIC	_imp_glBitmap
PUBLIC	_imp_glGetTexParameteriv
PUBLIC	_imp_glDrawArrays
PUBLIC	_imp_glScissor
PUBLIC	_imp_glOrtho
PUBLIC	_imp_glVertex2dv
PUBLIC	_imp_glHint
PUBLIC	_imp_glDrawBuffer
PUBLIC	_imp_glBlendFunc
PUBLIC	_imp_glSelectBuffer
PUBLIC	_imp_glVertex2f
PUBLIC	_imp_glIndexMask
PUBLIC	_imp_glPassThrough
PUBLIC	_imp_glCallList
PUBLIC	_imp_glDrawElements
PUBLIC	_imp_glShadeModel
PUBLIC	_imp_glVertex2fv
PUBLIC	_imp_glIndexPointer
PUBLIC	_imp_glPixelMapfv
PUBLIC	_imp_glCallLists
PUBLIC	_imp_glStencilFunc
PUBLIC	_imp_glDrawPixels
PUBLIC	_imp_glVertex2i
PUBLIC	_imp_glIndexd
PUBLIC	_imp_glPixelMapuiv
PUBLIC	_imp_glClear
PUBLIC	_imp_glStencilMask
PUBLIC	_imp_glVertex2iv
PUBLIC	_imp_glEdgeFlag
PUBLIC	_imp_glIndexdv
PUBLIC	_imp_glPixelMapusv
PUBLIC	_imp_glClearAccum
PUBLIC	_imp_glStencilOp
PUBLIC	_imp_glVertex2s
PUBLIC	_imp_glEdgeFlagPointer
PUBLIC	_imp_glIndexf
PUBLIC	_imp_glPixelStoref
PUBLIC	?HAS_pipeline_query@GLPerf@@3_NA		; GLPerf::HAS_pipeline_query
PUBLIC	_imp_glVertex2sv
PUBLIC	_imp_glTexCoord1d
PUBLIC	_imp_glClearColor
PUBLIC	_imp_glEdgeFlagv
PUBLIC	_imp_glIndexfv
PUBLIC	_imp_glPixelStorei
PUBLIC	?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A ; GLPerf::pipeline_states
PUBLIC	_imp_glTexCoord1dv
PUBLIC	_imp_glIndexi
PUBLIC	_imp_glVertex3d
PUBLIC	_imp_glEnable
PUBLIC	_imp_glClearDepth
PUBLIC	_imp_glTexCoord1f
PUBLIC	_imp_glPixelTransferf
PUBLIC	_imp_glEnableClientState
PUBLIC	_imp_glIndexiv
PUBLIC	_imp_glVertex3dv
PUBLIC	_imp_glClearIndex
PUBLIC	_imp_glTexCoord1fv
PUBLIC	_imp_glIndexs
PUBLIC	_imp_glEnd
PUBLIC	_imp_glPixelTransferi
PUBLIC	_imp_glClearStencil
PUBLIC	_imp_glVertex3f
PUBLIC	_imp_glTexCoord1i
PUBLIC	_imp_glEndList
PUBLIC	_imp_glIndexsv
PUBLIC	_imp_glClipPlane
PUBLIC	_imp_glPixelZoom
PUBLIC	_imp_glVertex3fv
PUBLIC	_imp_glTexCoord1iv
PUBLIC	_imp_glEvalCoord1d
PUBLIC	_imp_glIndexub
PUBLIC	_imp_glPointSize
PUBLIC	_imp_glColor3b
PUBLIC	_imp_glVertex3i
PUBLIC	_imp_glTexCoord1s
PUBLIC	_imp_glIndexubv
PUBLIC	_imp_glEvalCoord1dv
PUBLIC	_imp_glPolygonMode
PUBLIC	_imp_glColor3bv
PUBLIC	_imp_glVertex3iv
PUBLIC	_imp_glTexCoord1sv
PUBLIC	_imp_glEvalCoord1f
PUBLIC	_imp_glInitNames
PUBLIC	_imp_glPolygonOffset
PUBLIC	_imp_glColor3d
PUBLIC	_imp_glVertex3s
PUBLIC	_imp_glTexCoord2d
PUBLIC	_imp_glEvalCoord1fv
PUBLIC	_imp_glInterleavedArrays
PUBLIC	_imp_glPolygonStipple
PUBLIC	_imp_glColor3dv
PUBLIC	_imp_glVertex3sv
PUBLIC	_imp_glTexCoord2dv
PUBLIC	_imp_glEvalCoord2d
PUBLIC	_imp_glIsEnabled
PUBLIC	_imp_glPopAttrib
PUBLIC	_imp_glColor3f
PUBLIC	_imp_glTexCoord2f
PUBLIC	_imp_glEvalCoord2dv
PUBLIC	_imp_glVertex4d
PUBLIC	_imp_glIsList
PUBLIC	_imp_glPopClientAttrib
PUBLIC	_imp_glTexCoord2fv
PUBLIC	_imp_glColor3fv
PUBLIC	_imp_glEvalCoord2f
PUBLIC	_imp_glIsTexture
PUBLIC	_imp_glVertex4dv
PUBLIC	_imp_glPopMatrix
PUBLIC	_imp_glTexCoord2i
PUBLIC	_imp_glColor3i
PUBLIC	_imp_glEvalCoord2fv
PUBLIC	_imp_glLightModelf
PUBLIC	_imp_glPopName
PUBLIC	_imp_glVertex4f
PUBLIC	_imp_glTexCoord2iv
PUBLIC	_imp_glColor3iv
PUBLIC	_imp_glEvalMesh1
PUBLIC	_imp_glLightModelfv
PUBLIC	_imp_glPrioritizeTextures
PUBLIC	_imp_glVertex4fv
PUBLIC	_imp_glTexCoord2s
PUBLIC	_imp_glColor3s
PUBLIC	_imp_glLightModeli
PUBLIC	_imp_glPushAttrib
PUBLIC	_imp_glEvalMesh2
PUBLIC	_imp_glVertex4i
PUBLIC	_imp_glTexCoord2sv
PUBLIC	_imp_glColor3sv
PUBLIC	_imp_glLightModeliv
PUBLIC	_imp_glPushClientAttrib
PUBLIC	_imp_glEvalPoint1
PUBLIC	_imp_glVertex4iv
PUBLIC	_imp_glTexCoord3d
PUBLIC	_imp_glColor3ub
PUBLIC	_imp_glPushMatrix
PUBLIC	_imp_glLightf
PUBLIC	_imp_glEvalPoint2
PUBLIC	_imp_glVertex4s
PUBLIC	_imp_glTexCoord3dv
PUBLIC	_imp_glPushName
PUBLIC	_imp_glColor3ubv
PUBLIC	_imp_glLightfv
PUBLIC	_imp_glFeedbackBuffer
PUBLIC	_imp_glVertex4sv
PUBLIC	_imp_glTexCoord3f
PUBLIC	_imp_glRasterPos2d
PUBLIC	_imp_glColor3ui
PUBLIC	_imp_glLighti
PUBLIC	_imp_glFinish
PUBLIC	_imp_glVertexPointer
PUBLIC	_imp_glTexCoord3fv
PUBLIC	_imp_glRasterPos2dv
PUBLIC	_imp_glColor3uiv
PUBLIC	_imp_glFlush
PUBLIC	_imp_glLightiv
PUBLIC	_imp_glRasterPos2f
PUBLIC	_imp_glTexCoord3i
PUBLIC	_imp_glViewport
PUBLIC	_imp_glColor3us
PUBLIC	_imp_glFogf
PUBLIC	_imp_glLineStipple
PUBLIC	_imp_glRasterPos2fv
PUBLIC	_imp_glTexCoord3iv
PUBLIC	_imp_glColor3usv
PUBLIC	_imp_wglCopyContext
PUBLIC	_imp_glFogfv
PUBLIC	_imp_glLineWidth
PUBLIC	_imp_glRasterPos2i
PUBLIC	_imp_glTexCoord3s
PUBLIC	_imp_glColor4b
PUBLIC	_imp_wglCreateContext
PUBLIC	_imp_glFogi
PUBLIC	_imp_glListBase
PUBLIC	_imp_glRasterPos2iv
PUBLIC	_imp_glTexCoord3sv
PUBLIC	_imp_wglCreateLayerContext
PUBLIC	_imp_glColor4bv
PUBLIC	_imp_glFogiv
PUBLIC	_imp_glLoadIdentity
PUBLIC	_imp_glRasterPos2s
PUBLIC	_imp_glTexCoord4d
PUBLIC	_imp_wglDeleteContext
PUBLIC	_imp_glFrontFace
PUBLIC	_imp_glLoadMatrixd
PUBLIC	_imp_glColor4d
PUBLIC	_imp_glRasterPos2sv
PUBLIC	_imp_glTexCoord4dv
PUBLIC	_imp_wglGetCurrentContext
PUBLIC	_imp_glLoadMatrixf
PUBLIC	_imp_glColor4dv
PUBLIC	_imp_glFrustum
PUBLIC	_imp_glRasterPos3d
PUBLIC	_imp_wglGetCurrentDC
PUBLIC	_imp_glLoadName
PUBLIC	_imp_glTexCoord4f
PUBLIC	_imp_glColor4f
PUBLIC	_imp_glRasterPos3dv
PUBLIC	_imp_glGenLists
PUBLIC	_imp_wglGetProcAddress
PUBLIC	_imp_glLogicOp
PUBLIC	_imp_glTexCoord4fv
PUBLIC	_imp_glRasterPos3f
PUBLIC	_imp_glColor4fv
PUBLIC	_imp_glGenTextures
PUBLIC	_imp_wglMakeCurrent
PUBLIC	_imp_glMap1d
PUBLIC	_imp_glTexCoord4i
PUBLIC	_imp_glRasterPos3fv
PUBLIC	_imp_glGetBooleanv
PUBLIC	_imp_glColor4i
PUBLIC	_imp_wglShareLists
PUBLIC	_imp_glTexCoord4iv
PUBLIC	_imp_glRasterPos3i
PUBLIC	_imp_glGetClipPlane
PUBLIC	_imp_glMap1f
PUBLIC	_imp_glColor4iv
PUBLIC	_imp_wglUseFontBitmapsA
PUBLIC	_imp_glTexCoord4s
PUBLIC	_imp_glRasterPos3iv
PUBLIC	_imp_glGetDoublev
PUBLIC	_imp_glColor4s
PUBLIC	_imp_wglUseFontBitmapsW
PUBLIC	_imp_glMap2d
PUBLIC	_imp_glTexCoord4sv
PUBLIC	_imp_glGetError
PUBLIC	_imp_glRasterPos3s
PUBLIC	_imp_glColor4sv
PUBLIC	_imp_wglChoosePixelFormat
PUBLIC	_imp_glTexCoordPointer
PUBLIC	_imp_glGetFloatv
PUBLIC	_imp_glRasterPos3sv
PUBLIC	_imp_glColor4ub
PUBLIC	?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A		; cegGL
PUBLIC	_imp_glMap2f
PUBLIC	_imp_glGetIntegerv
PUBLIC	_imp_glRasterPos4d
PUBLIC	_imp_glTexEnvf
PUBLIC	_imp_glColor4ubv
PUBLIC	_imp_glGetLightfv
PUBLIC	_imp_glRasterPos4dv
PUBLIC	_imp_glTexEnvfv
PUBLIC	_imp_glMapGrid1d
PUBLIC	_imp_glColor4ui
PUBLIC	_imp_glGetLightiv
PUBLIC	_imp_glRasterPos4f
PUBLIC	_imp_wglDescribeLayerPlane
PUBLIC	_imp_glTexEnvi
PUBLIC	_imp_glMapGrid1f
PUBLIC	_imp_glColor4uiv
PUBLIC	_imp_glGetMapdv
PUBLIC	_imp_glRasterPos4fv
PUBLIC	_imp_glTexEnviv
PUBLIC	_imp_glColor4us
PUBLIC	_imp_wglDescribePixelFormat
PUBLIC	_imp_glMapGrid2d
PUBLIC	_imp_glRasterPos4i
PUBLIC	_imp_glGetMapfv
PUBLIC	_imp_glColor4usv
PUBLIC	_imp_glTexGend
PUBLIC	_imp_wglGetLayerPaletteEntries
PUBLIC	_imp_glMapGrid2f
PUBLIC	_imp_glRasterPos4iv
PUBLIC	_imp_glGetMapiv
PUBLIC	_imp_glColorMask
PUBLIC	_imp_glTexGendv
PUBLIC	_imp_wglGetPixelFormat
PUBLIC	_imp_glRasterPos4s
PUBLIC	_imp_glGetMaterialfv
PUBLIC	_imp_glMaterialf
PUBLIC	_imp_glColorMaterial
PUBLIC	_imp_glTexGenf
PUBLIC	_imp_glRasterPos4sv
PUBLIC	_imp_wglRealizeLayerPalette
PUBLIC	_imp_glMaterialfv
PUBLIC	_imp_glGetMaterialiv
PUBLIC	_imp_glColorPointer
PUBLIC	_imp_glTexGenfv
PUBLIC	_imp_glReadBuffer
PUBLIC	_imp_glGetPixelMapfv
PUBLIC	_imp_wglSetLayerPaletteEntries
PUBLIC	_imp_glMateriali
PUBLIC	_imp_glTexGeni
PUBLIC	_imp_glCopyPixels
PUBLIC	_imp_glReadPixels
PUBLIC	_imp_glGetPixelMapuiv
PUBLIC	?__gl_ready@@3JC				; __gl_ready
PUBLIC	_imp_glMaterialiv
PUBLIC	_imp_wglSetPixelFormat
PUBLIC	_imp_glTexGeniv
PUBLIC	_imp_glCopyTexImage1D
PUBLIC	_imp_glGetPixelMapusv
PUBLIC	?gdi_swap_buffers@@3P6GHPAUHDC__@@@ZA		; gdi_swap_buffers
PUBLIC	?wgl_swap_buffers@@3P6GHPAUHDC__@@@ZA		; wgl_swap_buffers
PUBLIC	_imp_glMatrixMode
PUBLIC	?GL_HOOKED@@3HA					; GL_HOOKED
PUBLIC	_imp_glRectd
PUBLIC	?GL_HOOKS@@3KA					; GL_HOOKS
PUBLIC	_imp_glTexImage1D
PUBLIC	_imp_glGetPointerv
PUBLIC	_imp_glMultMatrixd
PUBLIC	_imp_glRectdv
PUBLIC	_imp_glCopyTexImage2D
PUBLIC	_imp_glGetPolygonStipple
PUBLIC	_imp_glMultMatrixf
PUBLIC	_imp_glRectf
PUBLIC	_imp_glTexImage2D
PUBLIC	_imp_glGetString
PUBLIC	_imp_glNewList
PUBLIC	_imp_glCopyTexSubImage1D
PUBLIC	_imp_glRectfv
PUBLIC	_imp_glGetTexEnvfv
PUBLIC	_imp_glNormal3b
PUBLIC	_imp_glTexParameterf
PUBLIC	_imp_glRecti
PUBLIC	_imp_glCopyTexSubImage2D
PUBLIC	_imp_glNormal3bv
PUBLIC	_imp_glGetTexEnviv
PUBLIC	_imp_glTexParameterfv
PUBLIC	_imp_glRectiv
PUBLIC	_imp_glNormal3d
PUBLIC	_imp_glGetTexGendv
PUBLIC	_imp_glCullFace
PUBLIC	_imp_glTexParameteri
PUBLIC	?local_gl@@3PAUHINSTANCE__@@A			; local_gl
PUBLIC	_imp_glNormal3dv
PUBLIC	_imp_glRects
PUBLIC	_imp_glDebugEntry
PUBLIC	_imp_wglSwapMultipleBuffers
PUBLIC	_imp_glGetTexGenfv
PUBLIC	_imp_glTexParameteriv
PUBLIC	_imp_wglSwapLayerBuffers
PUBLIC	_imp_glNormal3f
PUBLIC	_imp_glDeleteLists
PUBLIC	_imp_glRectsv
PUBLIC	_imp_glAccum
PUBLIC	_imp_glGetTexGeniv
PUBLIC	_imp_glTexSubImage1D
PUBLIC	_imp_glNormal3fv
PUBLIC	_imp_glRenderMode
PUBLIC	_imp_glDeleteTextures
PUBLIC	_imp_glAlphaFunc
PUBLIC	_imp_glGetTexImage
PUBLIC	_imp_glNormal3i
PUBLIC	_imp_glDepthFunc
PUBLIC	_imp_glRotated
PUBLIC	_imp_glAreTexturesResident
PUBLIC	_imp_glTexSubImage2D
PUBLIC	_imp_glGetTexLevelParameterfv
PUBLIC	_imp_glDepthMask
PUBLIC	_imp_glNormal3iv
PUBLIC	_imp_glArrayElement
PUBLIC	_imp_wglUseFontOutlinesA
PUBLIC	_imp_glRotatef
PUBLIC	_imp_glDepthRange
PUBLIC	_imp_glNormal3s
PUBLIC	_imp_glGetTexLevelParameteriv
PUBLIC	_imp_glTranslated
PUBLIC	_imp_glBegin
PUBLIC	_imp_glScaled
PUBLIC	_imp_glDisable
_BSS	SEGMENT
_imp_glNormal3sv DD 01H DUP (?)
_imp_glBindTexture DD 01H DUP (?)
_imp_wglUseFontOutlinesW DD 01H DUP (?)
_imp_glGetTexParameterfv DD 01H DUP (?)
_imp_glTranslatef DD 01H DUP (?)
_imp_glScalef DD 01H DUP (?)
_imp_glDisableClientState DD 01H DUP (?)
_imp_glNormalPointer DD 01H DUP (?)
_imp_glVertex2d DD 01H DUP (?)
_imp_glBitmap DD 01H DUP (?)
_imp_glGetTexParameteriv DD 01H DUP (?)
_imp_glDrawArrays DD 01H DUP (?)
_imp_glScissor DD 01H DUP (?)
_imp_glOrtho DD	01H DUP (?)
_imp_glVertex2dv DD 01H DUP (?)
_imp_glHint DD	01H DUP (?)
_imp_glDrawBuffer DD 01H DUP (?)
_imp_glBlendFunc DD 01H DUP (?)
_imp_glSelectBuffer DD 01H DUP (?)
_imp_glVertex2f DD 01H DUP (?)
_imp_glIndexMask DD 01H DUP (?)
_imp_glPassThrough DD 01H DUP (?)
_imp_glCallList DD 01H DUP (?)
_imp_glDrawElements DD 01H DUP (?)
_imp_glShadeModel DD 01H DUP (?)
_imp_glVertex2fv DD 01H DUP (?)
_imp_glIndexPointer DD 01H DUP (?)
_imp_glPixelMapfv DD 01H DUP (?)
_imp_glCallLists DD 01H DUP (?)
_imp_glStencilFunc DD 01H DUP (?)
_imp_glDrawPixels DD 01H DUP (?)
_imp_glVertex2i DD 01H DUP (?)
_imp_glIndexd DD 01H DUP (?)
_imp_glPixelMapuiv DD 01H DUP (?)
_imp_glClear DD	01H DUP (?)
_imp_glStencilMask DD 01H DUP (?)
_imp_glVertex2iv DD 01H DUP (?)
_imp_glEdgeFlag DD 01H DUP (?)
_imp_glIndexdv DD 01H DUP (?)
_imp_glPixelMapusv DD 01H DUP (?)
_imp_glClearAccum DD 01H DUP (?)
_imp_glStencilOp DD 01H DUP (?)
_imp_glVertex2s DD 01H DUP (?)
_imp_glEdgeFlagPointer DD 01H DUP (?)
_imp_glIndexf DD 01H DUP (?)
_imp_glPixelStoref DD 01H DUP (?)
?HAS_pipeline_query@GLPerf@@3_NA DB 01H DUP (?)		; GLPerf::HAS_pipeline_query
	ALIGN	4

_imp_glVertex2sv DD 01H DUP (?)
_imp_glTexCoord1d DD 01H DUP (?)
_imp_glClearColor DD 01H DUP (?)
_imp_glEdgeFlagv DD 01H DUP (?)
_imp_glIndexfv DD 01H DUP (?)
_imp_glPixelStorei DD 01H DUP (?)
?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A DD 0bH DUP (?) ; GLPerf::pipeline_states
_imp_glTexCoord1dv DD 01H DUP (?)
_imp_glIndexi DD 01H DUP (?)
_imp_glVertex3d DD 01H DUP (?)
_imp_glEnable DD 01H DUP (?)
_imp_glClearDepth DD 01H DUP (?)
_imp_glTexCoord1f DD 01H DUP (?)
_imp_glPixelTransferf DD 01H DUP (?)
_imp_glEnableClientState DD 01H DUP (?)
_imp_glIndexiv DD 01H DUP (?)
_imp_glVertex3dv DD 01H DUP (?)
_imp_glClearIndex DD 01H DUP (?)
_imp_glTexCoord1fv DD 01H DUP (?)
_imp_glIndexs DD 01H DUP (?)
_imp_glEnd DD	01H DUP (?)
_imp_glPixelTransferi DD 01H DUP (?)
_imp_glClearStencil DD 01H DUP (?)
_imp_glVertex3f DD 01H DUP (?)
_imp_glTexCoord1i DD 01H DUP (?)
_imp_glEndList DD 01H DUP (?)
_imp_glIndexsv DD 01H DUP (?)
_imp_glClipPlane DD 01H DUP (?)
_imp_glPixelZoom DD 01H DUP (?)
_imp_glVertex3fv DD 01H DUP (?)
_imp_glTexCoord1iv DD 01H DUP (?)
_imp_glEvalCoord1d DD 01H DUP (?)
_imp_glIndexub DD 01H DUP (?)
_imp_glPointSize DD 01H DUP (?)
_imp_glColor3b DD 01H DUP (?)
_imp_glVertex3i DD 01H DUP (?)
_imp_glTexCoord1s DD 01H DUP (?)
_imp_glIndexubv DD 01H DUP (?)
_imp_glEvalCoord1dv DD 01H DUP (?)
_imp_glPolygonMode DD 01H DUP (?)
_imp_glColor3bv DD 01H DUP (?)
_imp_glVertex3iv DD 01H DUP (?)
_imp_glTexCoord1sv DD 01H DUP (?)
_imp_glEvalCoord1f DD 01H DUP (?)
_imp_glInitNames DD 01H DUP (?)
_imp_glPolygonOffset DD 01H DUP (?)
_imp_glColor3d DD 01H DUP (?)
_imp_glVertex3s DD 01H DUP (?)
_imp_glTexCoord2d DD 01H DUP (?)
_imp_glEvalCoord1fv DD 01H DUP (?)
_imp_glInterleavedArrays DD 01H DUP (?)
_imp_glPolygonStipple DD 01H DUP (?)
_imp_glColor3dv DD 01H DUP (?)
_imp_glVertex3sv DD 01H DUP (?)
_imp_glTexCoord2dv DD 01H DUP (?)
_imp_glEvalCoord2d DD 01H DUP (?)
_imp_glIsEnabled DD 01H DUP (?)
_imp_glPopAttrib DD 01H DUP (?)
_imp_glColor3f DD 01H DUP (?)
_imp_glTexCoord2f DD 01H DUP (?)
_imp_glEvalCoord2dv DD 01H DUP (?)
_imp_glVertex4d DD 01H DUP (?)
_imp_glIsList DD 01H DUP (?)
_imp_glPopClientAttrib DD 01H DUP (?)
_imp_glTexCoord2fv DD 01H DUP (?)
_imp_glColor3fv DD 01H DUP (?)
_imp_glEvalCoord2f DD 01H DUP (?)
_imp_glIsTexture DD 01H DUP (?)
_imp_glVertex4dv DD 01H DUP (?)
_imp_glPopMatrix DD 01H DUP (?)
_imp_glTexCoord2i DD 01H DUP (?)
_imp_glColor3i DD 01H DUP (?)
_imp_glEvalCoord2fv DD 01H DUP (?)
_imp_glLightModelf DD 01H DUP (?)
_imp_glPopName DD 01H DUP (?)
_imp_glVertex4f DD 01H DUP (?)
_imp_glTexCoord2iv DD 01H DUP (?)
_imp_glColor3iv DD 01H DUP (?)
_imp_glEvalMesh1 DD 01H DUP (?)
_imp_glLightModelfv DD 01H DUP (?)
_imp_glPrioritizeTextures DD 01H DUP (?)
_imp_glVertex4fv DD 01H DUP (?)
_imp_glTexCoord2s DD 01H DUP (?)
_imp_glColor3s DD 01H DUP (?)
_imp_glLightModeli DD 01H DUP (?)
_imp_glPushAttrib DD 01H DUP (?)
_imp_glEvalMesh2 DD 01H DUP (?)
_imp_glVertex4i DD 01H DUP (?)
_imp_glTexCoord2sv DD 01H DUP (?)
_imp_glColor3sv DD 01H DUP (?)
_imp_glLightModeliv DD 01H DUP (?)
_imp_glPushClientAttrib DD 01H DUP (?)
_imp_glEvalPoint1 DD 01H DUP (?)
_imp_glVertex4iv DD 01H DUP (?)
_imp_glTexCoord3d DD 01H DUP (?)
_imp_glColor3ub DD 01H DUP (?)
_imp_glPushMatrix DD 01H DUP (?)
_imp_glLightf DD 01H DUP (?)
_imp_glEvalPoint2 DD 01H DUP (?)
_imp_glVertex4s DD 01H DUP (?)
_imp_glTexCoord3dv DD 01H DUP (?)
_imp_glPushName DD 01H DUP (?)
_imp_glColor3ubv DD 01H DUP (?)
_imp_glLightfv DD 01H DUP (?)
_imp_glFeedbackBuffer DD 01H DUP (?)
_imp_glVertex4sv DD 01H DUP (?)
_imp_glTexCoord3f DD 01H DUP (?)
_imp_glRasterPos2d DD 01H DUP (?)
_imp_glColor3ui DD 01H DUP (?)
_imp_glLighti DD 01H DUP (?)
_imp_glFinish DD 01H DUP (?)
_imp_glVertexPointer DD 01H DUP (?)
_imp_glTexCoord3fv DD 01H DUP (?)
_imp_glRasterPos2dv DD 01H DUP (?)
_imp_glColor3uiv DD 01H DUP (?)
_imp_glFlush DD	01H DUP (?)
_imp_glLightiv DD 01H DUP (?)
_imp_glRasterPos2f DD 01H DUP (?)
_imp_glTexCoord3i DD 01H DUP (?)
_imp_glViewport DD 01H DUP (?)
_imp_glColor3us DD 01H DUP (?)
_imp_glFogf DD	01H DUP (?)
_imp_glLineStipple DD 01H DUP (?)
_imp_glRasterPos2fv DD 01H DUP (?)
_imp_glTexCoord3iv DD 01H DUP (?)
_imp_glColor3usv DD 01H DUP (?)
_imp_wglCopyContext DD 01H DUP (?)
_imp_glFogfv DD	01H DUP (?)
_imp_glLineWidth DD 01H DUP (?)
_imp_glRasterPos2i DD 01H DUP (?)
_imp_glTexCoord3s DD 01H DUP (?)
_imp_glColor4b DD 01H DUP (?)
_imp_wglCreateContext DD 01H DUP (?)
_imp_glFogi DD	01H DUP (?)
_imp_glListBase DD 01H DUP (?)
_imp_glRasterPos2iv DD 01H DUP (?)
_imp_glTexCoord3sv DD 01H DUP (?)
_imp_wglCreateLayerContext DD 01H DUP (?)
_imp_glColor4bv DD 01H DUP (?)
_imp_glFogiv DD	01H DUP (?)
_imp_glLoadIdentity DD 01H DUP (?)
_imp_glRasterPos2s DD 01H DUP (?)
_imp_glTexCoord4d DD 01H DUP (?)
_imp_wglDeleteContext DD 01H DUP (?)
_imp_glFrontFace DD 01H DUP (?)
_imp_glLoadMatrixd DD 01H DUP (?)
_imp_glColor4d DD 01H DUP (?)
_imp_glRasterPos2sv DD 01H DUP (?)
_imp_glTexCoord4dv DD 01H DUP (?)
_imp_wglGetCurrentContext DD 01H DUP (?)
_imp_glLoadMatrixf DD 01H DUP (?)
_imp_glColor4dv DD 01H DUP (?)
_imp_glFrustum DD 01H DUP (?)
_imp_glRasterPos3d DD 01H DUP (?)
_imp_wglGetCurrentDC DD 01H DUP (?)
_imp_glLoadName DD 01H DUP (?)
_imp_glTexCoord4f DD 01H DUP (?)
_imp_glColor4f DD 01H DUP (?)
_imp_glRasterPos3dv DD 01H DUP (?)
_imp_glGenLists DD 01H DUP (?)
_imp_wglGetProcAddress DD 01H DUP (?)
_imp_glLogicOp DD 01H DUP (?)
_imp_glTexCoord4fv DD 01H DUP (?)
_imp_glRasterPos3f DD 01H DUP (?)
_imp_glColor4fv DD 01H DUP (?)
_imp_glGenTextures DD 01H DUP (?)
_imp_wglMakeCurrent DD 01H DUP (?)
_imp_glMap1d DD	01H DUP (?)
_imp_glTexCoord4i DD 01H DUP (?)
_imp_glRasterPos3fv DD 01H DUP (?)
_imp_glGetBooleanv DD 01H DUP (?)
_imp_glColor4i DD 01H DUP (?)
_imp_wglShareLists DD 01H DUP (?)
_imp_glTexCoord4iv DD 01H DUP (?)
_imp_glRasterPos3i DD 01H DUP (?)
_imp_glGetClipPlane DD 01H DUP (?)
_imp_glMap1f DD	01H DUP (?)
_imp_glColor4iv DD 01H DUP (?)
_imp_wglUseFontBitmapsA DD 01H DUP (?)
_imp_glTexCoord4s DD 01H DUP (?)
_imp_glRasterPos3iv DD 01H DUP (?)
_imp_glGetDoublev DD 01H DUP (?)
_imp_glColor4s DD 01H DUP (?)
_imp_wglUseFontBitmapsW DD 01H DUP (?)
_imp_glMap2d DD	01H DUP (?)
_imp_glTexCoord4sv DD 01H DUP (?)
_imp_glGetError DD 01H DUP (?)
_imp_glRasterPos3s DD 01H DUP (?)
_imp_glColor4sv DD 01H DUP (?)
_imp_wglChoosePixelFormat DD 01H DUP (?)
_imp_glTexCoordPointer DD 01H DUP (?)
_imp_glGetFloatv DD 01H DUP (?)
_imp_glRasterPos3sv DD 01H DUP (?)
_imp_glColor4ub DD 01H DUP (?)
?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A DD 01H DUP (?)	; cegGL
_imp_glMap2f DD	01H DUP (?)
_imp_glGetIntegerv DD 01H DUP (?)
?__cegui_frames_drawn@@3JC DD 01H DUP (?)		; __cegui_frames_drawn
_imp_glRasterPos4d DD 01H DUP (?)
_imp_glTexEnvf DD 01H DUP (?)
_imp_glColor4ubv DD 01H DUP (?)
_imp_glGetLightfv DD 01H DUP (?)
_imp_glRasterPos4dv DD 01H DUP (?)
_imp_glTexEnvfv DD 01H DUP (?)
_imp_glMapGrid1d DD 01H DUP (?)
_imp_glColor4ui DD 01H DUP (?)
_imp_glGetLightiv DD 01H DUP (?)
_imp_glRasterPos4f DD 01H DUP (?)
_imp_wglDescribeLayerPlane DD 01H DUP (?)
_imp_glTexEnvi DD 01H DUP (?)
_imp_glMapGrid1f DD 01H DUP (?)
_imp_glColor4uiv DD 01H DUP (?)
_imp_glGetMapdv DD 01H DUP (?)
_imp_glRasterPos4fv DD 01H DUP (?)
_imp_glTexEnviv DD 01H DUP (?)
_imp_glColor4us DD 01H DUP (?)
_imp_wglDescribePixelFormat DD 01H DUP (?)
_imp_glMapGrid2d DD 01H DUP (?)
_imp_glRasterPos4i DD 01H DUP (?)
_imp_glGetMapfv DD 01H DUP (?)
_imp_glColor4usv DD 01H DUP (?)
_imp_glTexGend DD 01H DUP (?)
_imp_wglGetLayerPaletteEntries DD 01H DUP (?)
_imp_glMapGrid2f DD 01H DUP (?)
_imp_glRasterPos4iv DD 01H DUP (?)
_imp_glGetMapiv DD 01H DUP (?)
_imp_glColorMask DD 01H DUP (?)
_imp_glTexGendv DD 01H DUP (?)
_imp_wglGetPixelFormat DD 01H DUP (?)
_imp_glRasterPos4s DD 01H DUP (?)
_imp_glGetMaterialfv DD 01H DUP (?)
_imp_glMaterialf DD 01H DUP (?)
_imp_glColorMaterial DD 01H DUP (?)
_imp_glTexGenf DD 01H DUP (?)
_imp_glRasterPos4sv DD 01H DUP (?)
_imp_wglRealizeLayerPalette DD 01H DUP (?)
_imp_glMaterialfv DD 01H DUP (?)
_imp_glGetMaterialiv DD 01H DUP (?)
_imp_glColorPointer DD 01H DUP (?)
_imp_glTexGenfv DD 01H DUP (?)
_imp_glReadBuffer DD 01H DUP (?)
_imp_glGetPixelMapfv DD 01H DUP (?)
_imp_wglSetLayerPaletteEntries DD 01H DUP (?)
_imp_glMateriali DD 01H DUP (?)
_imp_glTexGeni DD 01H DUP (?)
_imp_glCopyPixels DD 01H DUP (?)
_imp_glReadPixels DD 01H DUP (?)
_imp_glGetPixelMapuiv DD 01H DUP (?)
?__gl_ready@@3JC DD 01H DUP (?)				; __gl_ready
_imp_glMaterialiv DD 01H DUP (?)
_imp_wglSetPixelFormat DD 01H DUP (?)
_imp_glTexGeniv DD 01H DUP (?)
_imp_glCopyTexImage1D DD 01H DUP (?)
_imp_glGetPixelMapusv DD 01H DUP (?)
?gdi_swap_buffers@@3P6GHPAUHDC__@@@ZA DD 01H DUP (?)	; gdi_swap_buffers
?wgl_swap_buffers@@3P6GHPAUHDC__@@@ZA DD 01H DUP (?)	; wgl_swap_buffers
_imp_glMatrixMode DD 01H DUP (?)
?GL_HOOKED@@3HA DD 01H DUP (?)				; GL_HOOKED
_imp_glRectd DD	01H DUP (?)
?GL_HOOKS@@3KA DD 01H DUP (?)				; GL_HOOKS
_imp_glTexImage1D DD 01H DUP (?)
_imp_glGetPointerv DD 01H DUP (?)
_imp_glMultMatrixd DD 01H DUP (?)
_imp_glRectdv DD 01H DUP (?)
_imp_glCopyTexImage2D DD 01H DUP (?)
_imp_glGetPolygonStipple DD 01H DUP (?)
_imp_glMultMatrixf DD 01H DUP (?)
_imp_glRectf DD	01H DUP (?)
_imp_glTexImage2D DD 01H DUP (?)
_imp_glGetString DD 01H DUP (?)
_imp_glNewList DD 01H DUP (?)
_imp_glCopyTexSubImage1D DD 01H DUP (?)
_imp_glRectfv DD 01H DUP (?)
_imp_glGetTexEnvfv DD 01H DUP (?)
_imp_glNormal3b DD 01H DUP (?)
_imp_glTexParameterf DD 01H DUP (?)
_imp_glRecti DD	01H DUP (?)
_imp_glCopyTexSubImage2D DD 01H DUP (?)
_imp_glNormal3bv DD 01H DUP (?)
_imp_glGetTexEnviv DD 01H DUP (?)
_imp_glTexParameterfv DD 01H DUP (?)
_imp_glRectiv DD 01H DUP (?)
_imp_glNormal3d DD 01H DUP (?)
_imp_glGetTexGendv DD 01H DUP (?)
_imp_glCullFace DD 01H DUP (?)
_imp_glTexParameteri DD 01H DUP (?)
?local_gl@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; local_gl
_imp_glNormal3dv DD 01H DUP (?)
_imp_glRects DD	01H DUP (?)
_imp_glDebugEntry DD 01H DUP (?)
_imp_wglSwapMultipleBuffers DD 01H DUP (?)
_imp_glGetTexGenfv DD 01H DUP (?)
_imp_glTexParameteriv DD 01H DUP (?)
_imp_wglSwapLayerBuffers DD 01H DUP (?)
_imp_glNormal3f DD 01H DUP (?)
_imp_glDeleteLists DD 01H DUP (?)
_imp_glRectsv DD 01H DUP (?)
_imp_glAccum DD	01H DUP (?)
_imp_glGetTexGeniv DD 01H DUP (?)
_imp_glTexSubImage1D DD 01H DUP (?)
_imp_glNormal3fv DD 01H DUP (?)
_imp_glRenderMode DD 01H DUP (?)
_imp_glDeleteTextures DD 01H DUP (?)
_imp_glAlphaFunc DD 01H DUP (?)
_imp_glGetTexImage DD 01H DUP (?)
_imp_glNormal3i DD 01H DUP (?)
_imp_glDepthFunc DD 01H DUP (?)
_imp_glRotated DD 01H DUP (?)
_imp_glAreTexturesResident DD 01H DUP (?)
_imp_glTexSubImage2D DD 01H DUP (?)
_imp_glGetTexLevelParameterfv DD 01H DUP (?)
_imp_glDepthMask DD 01H DUP (?)
_imp_glNormal3iv DD 01H DUP (?)
_imp_glArrayElement DD 01H DUP (?)
_imp_wglUseFontOutlinesA DD 01H DUP (?)
_imp_glRotatef DD 01H DUP (?)
_imp_glDepthRange DD 01H DUP (?)
_imp_glNormal3s DD 01H DUP (?)
_imp_glGetTexLevelParameteriv DD 01H DUP (?)
_imp_glTranslated DD 01H DUP (?)
_imp_glBegin DD	01H DUP (?)
_imp_glScaled DD 01H DUP (?)
_imp_glDisable DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
$SG324608 DB	'glEnableClientState', 00H
$SG322561 DB	'g', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	's', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
	ORG $+1
$SG317440 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324609 DB	'glEnd', 00H
	ORG $+2
$SG319489 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'L', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l'
	DB	00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG324610 DB	'glEndList', 00H
	ORG $+2
$SG321539 DB	'glScaled', 00H
	ORG $+3
$SG322562 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324612 DB	'glEvalCoord1dv', 00H
	ORG $+1
$SG318469 DB	'glDisable', 00H
	ORG $+2
$SG319490 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324611 DB	'glEvalCoord1d', 00H
	ORG $+2
$SG324613 DB	'glEvalCoord1f', 00H
	ORG $+2
$SG324614 DB	'glEvalCoord1fv', 00H
	ORG $+1
$SG324615 DB	'glEvalCoord2d', 00H
	ORG $+2
$SG321543 DB	'g', 00H, 'l', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG320519 DB	'glNormal3sv', 00H
$SG324616 DB	'glEvalCoord2dv', 00H
	ORG $+1
$SG318473 DB	'g', 00H, 'l', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H
	DB	'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG321544 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324617 DB	'glEvalCoord2f', 00H
	ORG $+2
$SG324618 DB	'glEvalCoord2fv', 00H
	ORG $+1
$SG324619 DB	'glEvalMesh1', 00H
$SG318474 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320523 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 's', 00H, 'v', 00H, 00H, 00H
$SG317451 DB	'glBindTexture', 00H
	ORG $+2
$SG324620 DB	'glEvalMesh2', 00H
$SG320524 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324621 DB	'glEvalPoint1', 00H
	ORG $+3
$SG324622 DB	'glEvalPoint2', 00H
	ORG $+3
$SG324623 DB	'glFeedbackBuffer', 00H
	ORG $+3
$SG322575 DB	'glTranslatef', 00H
	ORG $+3
$SG319503 DB	'glGetTexParameterfv', 00H
$SG317455 DB	'g', 00H, 'l', 00H, 'B', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e'
	DB	00H, 00H, 00H
$SG324624 DB	'glFinish', 00H
	ORG $+3
$SG324625 DB	'glFlush', 00H
$SG323601 DB	'wglUseFontOutlinesW', 00H
$SG317456 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324626 DB	'glFogf', 00H
	ORG $+1
$SG324627 DB	'glFogfv', 00H
$SG322579 DB	'g', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	's', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'f', 00H, 00H
	DB	00H
	ORG $+2
$SG319507 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'v', 00H
	DB	00H, 00H
$SG318483 DB	'glDisableClientState', 00H
	ORG $+3
$SG324628 DB	'glFogi', 00H
	ORG $+1
$SG322580 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324629 DB	'glFogiv', 00H
$SG321557 DB	'glScalef', 00H
	ORG $+3
$SG319508 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323605 DB	'w', 00H, 'g', 00H, 'l', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'l', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 's', 00H, 'W', 00H
	DB	00H, 00H
$SG324630 DB	'glFrontFace', 00H
$SG323606 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324631 DB	'glFrustum', 00H
	ORG $+2
$SG318487 DB	'g', 00H, 'l', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H
	DB	'b', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+2
$SG324632 DB	'glGenLists', 00H
	ORG $+1
$SG318488 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324633 DB	'glGenTextures', 00H
	ORG $+2
$SG321561 DB	'g', 00H, 'l', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'e', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG320537 DB	'glNormalPointer', 00H
$SG324634 DB	'glGetBooleanv', 00H
	ORG $+2
$SG321562 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324635 DB	'glGetClipPlane', 00H
	ORG $+1
$SG324636 DB	'glGetDoublev', 00H
	ORG $+3
$SG324637 DB	'glGetError', 00H
	ORG $+1
$SG320541 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG324638 DB	'glGetFloatv', 00H
$SG322591 DB	'glVertex2d', 00H
	ORG $+1
$SG320542 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324639 DB	'glGetIntegerv', 00H
	ORG $+2
$SG324640 DB	'glGetLightfv', 00H
	ORG $+3
$SG324641 DB	'glGetLightiv', 00H
	ORG $+3
$SG319521 DB	'glGetTexParameteriv', 00H
$SG324642 DB	'glGetMapdv', 00H
	ORG $+1
$SG324643 DB	'glGetMapfv', 00H
	ORG $+1
$SG322595 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '2', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG324644 DB	'glGetMapiv', 00H
	ORG $+1
$SG324645 DB	'glGetMaterialfv', 00H
$SG317477 DB	'glBitmap', 00H
	ORG $+3
$SG322596 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319525 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'v', 00H
	DB	00H, 00H
$SG318501 DB	'glDrawArrays', 00H
	ORG $+3
$SG324646 DB	'glGetMaterialiv', 00H
$SG324648 DB	'glGetPixelMapuiv', 00H
	ORG $+3
$SG319526 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324647 DB	'glGetPixelMapfv', 00H
$SG324649 DB	'glGetPixelMapusv', 00H
	ORG $+3
$SG321577 DB	'glScissor', 00H
	ORG $+2
$SG318505 DB	'g', 00H, 'l', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H
	DB	'A', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG317481 DB	'g', 00H, 'l', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'm', 00H
	DB	'a', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG324650 DB	'glGetPointerv', 00H
	ORG $+2
$SG324651 DB	'glGetPolygonStipple', 00H
$SG318506 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324652 DB	'glGetString', 00H
$SG317482 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324653 DB	'glGetTexEnvfv', 00H
	ORG $+2
$SG322605 DB	'glVertex2dv', 00H
$SG321581 DB	'g', 00H, 'l', 00H, 'S', 00H, 'c', 00H, 'i', 00H, 's', 00H
	DB	's', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG324654 DB	'glGetTexEnviv', 00H
	ORG $+2
$SG322609 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '2', 00H, 'd', 00H, 'v', 00H, 00H, 00H
$SG324659 DB	'glGetTexLevelParameterfv', 00H
	ORG $+3
$SG321582 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324655 DB	'glGetTexGendv', 00H
	ORG $+2
$SG324656 DB	'glGetTexGenfv', 00H
	ORG $+2
$SG324657 DB	'glGetTexGeniv', 00H
	ORG $+2
$SG320561 DB	'glOrtho', 00H
$SG319537 DB	'glHint', 00H
	ORG $+1
$SG324658 DB	'glGetTexImage', 00H
	ORG $+2
$SG324660 DB	'glGetTexLevelParameteriv', 00H
	ORG $+3
$SG322610 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318515 DB	'glDrawBuffer', 00H
	ORG $+3
$SG324661 DB	'glGetTexParameterfv', 00H
$SG320565 DB	'g', 00H, 'l', 00H, 'O', 00H, 'r', 00H, 't', 00H, 'h', 00H
	DB	'o', 00H, 00H, 00H
$SG319541 DB	'g', 00H, 'l', 00H, 'H', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG317493 DB	'glBlendFunc', 00H
$SG324662 DB	'glGetTexParameteriv', 00H
$SG320566 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324663 DB	'glHint', 00H
	ORG $+1
$SG318519 DB	'g', 00H, 'l', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 00H
	DB	00H
	ORG $+2
$SG319542 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324664 DB	'glIndexMask', 00H
$SG318520 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324665 DB	'glIndexPointer', 00H
	ORG $+1
$SG321593 DB	'glSelectBuffer', 00H
	ORG $+1
$SG317497 DB	'g', 00H, 'l', 00H, 'B', 00H, 'l', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 00H, 00H
$SG324666 DB	'glIndexd', 00H
	ORG $+3
$SG317498 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324667 DB	'glIndexdv', 00H
	ORG $+2
$SG324668 DB	'glIndexf', 00H
	ORG $+3
$SG324669 DB	'glIndexfv', 00H
	ORG $+2
$SG322621 DB	'glVertex2f', 00H
	ORG $+1
$SG321597 DB	'g', 00H, 'l', 00H, 'S', 00H, 'e', 00H, 'l', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG324670 DB	'glIndexi', 00H
	ORG $+3
$SG321598 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324671 DB	'glIndexiv', 00H
	ORG $+2
$SG320575 DB	'glPassThrough', 00H
	ORG $+2
$SG319551 DB	'glIndexMask', 00H
$SG324672 DB	'glIndexs', 00H
	ORG $+3
$SG324673 DB	'glIndexsv', 00H
	ORG $+2
$SG322625 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '2', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG324674 DB	'glIndexub', 00H
	ORG $+2
$SG322626 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324675 DB	'glIndexubv', 00H
	ORG $+1
$SG320579 DB	'g', 00H, 'l', 00H, 'P', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	'T', 00H, 'h', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'g', 00H, 'h'
	DB	00H, 00H, 00H
$SG319555 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'M', 00H, 'a', 00H, 's', 00H, 'k', 00H, 00H, 00H
$SG317507 DB	'glCallList', 00H
	ORG $+1
$SG324676 DB	'glInitNames', 00H
$SG324677 DB	'glInterleavedArrays', 00H
$SG320580 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324678 DB	'glIsEnabled', 00H
$SG319556 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324679 DB	'glIsList', 00H
	ORG $+3
$SG321607 DB	'glShadeModel', 00H
	ORG $+3
$SG318535 DB	'glDrawElements', 00H
	ORG $+1
$SG317511 DB	'g', 00H, 'l', 00H, 'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG324680 DB	'glIsTexture', 00H
$SG322635 DB	'glVertex2fv', 00H
$SG317512 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324681 DB	'glLightModelf', 00H
	ORG $+2
$SG324682 DB	'glLightModelfv', 00H
	ORG $+1
$SG324683 DB	'glLightModeli', 00H
	ORG $+2
$SG321611 DB	'g', 00H, 'l', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG318539 DB	'g', 00H, 'l', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H
	DB	'E', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG324684 DB	'glLightModeliv', 00H
	ORG $+1
$SG321612 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324685 DB	'glLightf', 00H
	ORG $+3
$SG318540 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324686 DB	'glLightfv', 00H
	ORG $+2
$SG324687 DB	'glLighti', 00H
	ORG $+3
$SG322639 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '2', 00H, 'f', 00H, 'v', 00H, 00H, 00H
$SG324688 DB	'glLightiv', 00H
	ORG $+2
$SG322640 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324689 DB	'glLineStipple', 00H
	ORG $+2
$SG320593 DB	'glPixelMapfv', 00H
	ORG $+3
$SG319569 DB	'glIndexPointer', 00H
	ORG $+1
$SG324690 DB	'glLineWidth', 00H
$SG324691 DB	'glListBase', 00H
	ORG $+1
$SG324692 DB	'glLoadIdentity', 00H
	ORG $+1
$SG324693 DB	'glLoadMatrixd', 00H
	ORG $+2
$SG320597 DB	'g', 00H, 'l', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H
	DB	'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'f', 00H, 'v', 00H, 00H
	DB	00H
	ORG $+2
$SG319573 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG317525 DB	'glCallLists', 00H
$SG324694 DB	'glLoadMatrixf', 00H
	ORG $+2
$SG324695 DB	'glLoadName', 00H
	ORG $+1
$SG320598 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324696 DB	'glLogicOp', 00H
	ORG $+2
$SG319574 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324697 DB	'glMap1d', 00H
$SG321625 DB	'glStencilFunc', 00H
	ORG $+2
$SG317529 DB	'g', 00H, 'l', 00H, 'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
$SG324698 DB	'glMap1f', 00H
$SG322651 DB	'glVertex2i', 00H
	ORG $+1
$SG317530 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324699 DB	'glMap2d', 00H
$SG324700 DB	'glMap2f', 00H
$SG324701 DB	'glMapGrid1d', 00H
$SG321629 DB	'g', 00H, 'l', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	'c', 00H, 'i', 00H, 'l', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c'
	DB	00H, 00H, 00H
$SG318557 DB	'glDrawPixels', 00H
	ORG $+3
$SG324702 DB	'glMapGrid1f', 00H
$SG321630 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324703 DB	'glMapGrid2d', 00H
$SG322655 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '2', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG319583 DB	'glIndexd', 00H
	ORG $+3
$SG324704 DB	'glMapGrid2f', 00H
$SG322656 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324705 DB	'glMaterialf', 00H
$SG318561 DB	'g', 00H, 'l', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H
	DB	'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG324706 DB	'glMaterialfv', 00H
	ORG $+3
$SG324707 DB	'glMateriali', 00H
$SG318562 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320611 DB	'glPixelMapuiv', 00H
	ORG $+2
$SG319587 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG317539 DB	'glClear', 00H
$SG324708 DB	'glMaterialiv', 00H
	ORG $+3
$SG319588 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324709 DB	'glMatrixMode', 00H
	ORG $+3
$SG324710 DB	'glMultMatrixd', 00H
	ORG $+2
$SG324711 DB	'glMultMatrixf', 00H
	ORG $+2
$SG321639 DB	'glStencilMask', 00H
	ORG $+2
$SG320615 DB	'g', 00H, 'l', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H
	DB	'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'u', 00H, 'i', 00H, 'v'
	DB	00H, 00H, 00H
$SG317543 DB	'g', 00H, 'l', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a', 00H
	DB	'r', 00H, 00H, 00H
$SG324712 DB	'glNewList', 00H
	ORG $+2
$SG324713 DB	'glNormal3b', 00H
	ORG $+1
$SG320616 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322665 DB	'glVertex2iv', 00H
$SG317544 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324714 DB	'glNormal3bv', 00H
$SG324715 DB	'glNormal3d', 00H
	ORG $+1
$SG321643 DB	'g', 00H, 'l', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	'c', 00H, 'i', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 's', 00H, 'k'
	DB	00H, 00H, 00H
$SG318571 DB	'glEdgeFlag', 00H
	ORG $+1
$SG324716 DB	'glNormal3dv', 00H
$SG321644 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324717 DB	'glNormal3f', 00H
	ORG $+1
$SG322669 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '2', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG319597 DB	'glIndexdv', 00H
	ORG $+2
$SG324718 DB	'glNormal3fv', 00H
$SG322670 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324719 DB	'glNormal3i', 00H
	ORG $+1
$SG318575 DB	'g', 00H, 'l', 00H, 'E', 00H, 'd', 00H, 'g', 00H, 'e', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG324720 DB	'glNormal3iv', 00H
$SG324721 DB	'glNormal3s', 00H
	ORG $+1
$SG318576 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319601 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'd', 00H, 'v', 00H, 00H, 00H
$SG324722 DB	'glNormal3sv', 00H
$SG322681 DB	'glVertex2s', 00H
	ORG $+1
$SG319602 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324723 DB	'glNormalPointer', 00H
$SG324724 DB	'glOrtho', 00H
$SG324725 DB	'glPassThrough', 00H
	ORG $+2
$SG320629 DB	'glPixelMapusv', 00H
	ORG $+2
$SG324726 DB	'glPixelMapfv', 00H
	ORG $+3
$SG324727 DB	'glPixelMapuiv', 00H
	ORG $+2
$SG317559 DB	'glClearAccum', 00H
	ORG $+3
$SG324728 DB	'glPixelMapusv', 00H
	ORG $+2
$SG324729 DB	'glPixelStoref', 00H
	ORG $+2
$SG321657 DB	'glStencilOp', 00H
$SG320633 DB	'g', 00H, 'l', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H
	DB	'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'u', 00H, 's', 00H, 'v'
	DB	00H, 00H, 00H
$SG324730 DB	'glPixelStorei', 00H
	ORG $+2
$SG324731 DB	'glPixelTransferf', 00H
	ORG $+3
$SG320634 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319611 DB	'glIndexf', 00H
	ORG $+3
$SG318587 DB	'glEdgeFlagPointer', 00H
	ORG $+2
$SG317563 DB	'g', 00H, 'l', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a', 00H
	DB	'r', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'u', 00H, 'm', 00H, 00H
	DB	00H
	ORG $+2
$SG324732 DB	'glPixelTransferi', 00H
	ORG $+3
$SG324733 DB	'glPixelZoom', 00H
$SG317564 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322685 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '2', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG321661 DB	'g', 00H, 'l', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	'c', 00H, 'i', 00H, 'l', 00H, 'O', 00H, 'p', 00H, 00H, 00H
$SG324734 DB	'glPointSize', 00H
$SG322686 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319615 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG321662 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324735 DB	'glPolygonMode', 00H
	ORG $+2
$SG318591 DB	'g', 00H, 'l', 00H, 'E', 00H, 'd', 00H, 'g', 00H, 'e', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 'P', 00H, 'o', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG324736 DB	'glPolygonOffset', 00H
$SG319616 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324737 DB	'glPolygonStipple', 00H
	ORG $+3
$SG318592 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324738 DB	'glPopAttrib', 00H
$SG324739 DB	'glPopClientAttrib', 00H
	ORG $+2
$SG324740 DB	'glPopMatrix', 00H
$SG324741 DB	'glPopName', 00H
	ORG $+2
$SG320645 DB	'glPixelStoref', 00H
	ORG $+2
$SG324742 DB	'glPrioritizeTextures', 00H
	ORG $+3
$SG324743 DB	'glPushAttrib', 00H
	ORG $+3
$SG322695 DB	'glVertex2sv', 00H
$SG321671 DB	'glTexCoord1d', 00H
	ORG $+3
$SG324744 DB	'glPushClientAttrib', 00H
	ORG $+1
$SG324745 DB	'glPushMatrix', 00H
	ORG $+3
$SG320649 DB	'g', 00H, 'l', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H
	DB	'l', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'e', 00H, 'f'
	DB	00H, 00H, 00H
$SG319625 DB	'glIndexfv', 00H
	ORG $+2
$SG318601 DB	'glEdgeFlagv', 00H
$SG324746 DB	'glPushName', 00H
	ORG $+1
$SG322699 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '2', 00H, 's', 00H, 'v', 00H, 00H, 00H
$SG321675 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG320650 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324747 DB	'glRasterPos2d', 00H
	ORG $+2
$SG317579 DB	'glClearColor', 00H
	ORG $+3
$SG324748 DB	'glRasterPos2dv', 00H
	ORG $+1
$SG319629 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'f', 00H, 'v', 00H, 00H, 00H
$SG322700 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318605 DB	'g', 00H, 'l', 00H, 'E', 00H, 'd', 00H, 'g', 00H, 'e', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 'v', 00H, 00H, 00H
$SG317583 DB	'g', 00H, 'l', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a', 00H
	DB	'r', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 00H
	DB	00H
	ORG $+2
$SG321676 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324749 DB	'glRasterPos2f', 00H
	ORG $+2
$SG324750 DB	'glRasterPos2fv', 00H
	ORG $+1
$SG319639 DB	'glIndexi', 00H
	ORG $+3
$SG319630 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324752 DB	'glRasterPos2iv', 00H
	ORG $+1
$SG318615 DB	'glEnable', 00H
	ORG $+3
$SG318606 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324751 DB	'glRasterPos2i', 00H
	ORG $+2
$SG324754 DB	'glRasterPos2sv', 00H
	ORG $+1
$SG322713 DB	'glVertex3d', 00H
	ORG $+1
$SG317584 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324753 DB	'glRasterPos2s', 00H
	ORG $+2
$SG324755 DB	'glRasterPos3d', 00H
	ORG $+2
$SG324756 DB	'glRasterPos3dv', 00H
	ORG $+1
$SG324757 DB	'glRasterPos3f', 00H
	ORG $+2
$SG321685 DB	'glTexCoord1dv', 00H
	ORG $+2
$SG320661 DB	'glPixelStorei', 00H
	ORG $+2
$SG324758 DB	'glRasterPos3fv', 00H
	ORG $+1
$SG324759 DB	'glRasterPos3i', 00H
	ORG $+2
$SG324760 DB	'glRasterPos3iv', 00H
	ORG $+1
$SG324761 DB	'glRasterPos3s', 00H
	ORG $+2
$SG321689 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG320665 DB	'g', 00H, 'l', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H
	DB	'l', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'e', 00H, 'i'
	DB	00H, 00H, 00H
$SG317593 DB	'glClearDepth', 00H
	ORG $+3
$SG324762 DB	'glRasterPos3sv', 00H
	ORG $+1
$SG319643 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG321690 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318619 DB	'g', 00H, 'l', 00H, 'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG320666 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324763 DB	'glRasterPos4d', 00H
	ORG $+2
$SG324764 DB	'glRasterPos4dv', 00H
	ORG $+1
$SG317597 DB	'g', 00H, 'l', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a', 00H
	DB	'r', 00H, 'D', 00H, 'e', 00H, 'p', 00H, 't', 00H, 'h', 00H, 00H
	DB	00H
	ORG $+2
$SG319644 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324766 DB	'glRasterPos4fv', 00H
	ORG $+1
$SG324773 DB	'glRectd', 00H
$SG320677 DB	'glPixelTransferf', 00H
	ORG $+3
$SG318620 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324765 DB	'glRasterPos4f', 00H
	ORG $+2
$SG322717 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '3', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG324768 DB	'glRasterPos4iv', 00H
	ORG $+1
$SG319653 DB	'glIndexiv', 00H
	ORG $+2
$SG322718 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324770 DB	'glRasterPos4sv', 00H
	ORG $+1
$SG318629 DB	'glEnableClientState', 00H
$SG317598 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324767 DB	'glRasterPos4i', 00H
	ORG $+2
$SG324769 DB	'glRasterPos4s', 00H
	ORG $+2
$SG324771 DB	'glReadBuffer', 00H
	ORG $+3
$SG321699 DB	'glTexCoord1f', 00H
	ORG $+3
$SG324772 DB	'glReadPixels', 00H
	ORG $+3
$SG324774 DB	'glRectdv', 00H
	ORG $+3
$SG324775 DB	'glRectf', 00H
$SG322727 DB	'glVertex3dv', 00H
$SG321703 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'f', 00H, 00H
	DB	00H
	ORG $+2
$SG317607 DB	'glClearIndex', 00H
	ORG $+3
$SG324776 DB	'glRectfv', 00H
	ORG $+3
$SG324777 DB	'glRecti', 00H
$SG320681 DB	'g', 00H, 'l', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H
	DB	'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG321704 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319657 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG318633 DB	'g', 00H, 'l', 00H, 'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
$SG324778 DB	'glRectiv', 00H
	ORG $+3
$SG324779 DB	'glRects', 00H
$SG317611 DB	'g', 00H, 'l', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a', 00H
	DB	'r', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+2
$SG320682 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322731 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '3', 00H, 'd', 00H, 'v', 00H, 00H, 00H
$SG324780 DB	'glRectsv', 00H
	ORG $+3
$SG319658 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324782 DB	'glRotated', 00H
	ORG $+2
$SG318634 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324783 DB	'glRotatef', 00H
	ORG $+2
$SG322732 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324784 DB	'glScaled', 00H
	ORG $+3
$SG317612 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324781 DB	'glRenderMode', 00H
	ORG $+3
$SG324785 DB	'glScalef', 00H
	ORG $+3
$SG321713 DB	'glTexCoord1fv', 00H
	ORG $+2
$SG324786 DB	'glScissor', 00H
	ORG $+2
$SG324787 DB	'glSelectBuffer', 00H
	ORG $+1
$SG319667 DB	'glIndexs', 00H
	ORG $+3
$SG318643 DB	'glEnd', 00H
	ORG $+2
$SG324788 DB	'glShadeModel', 00H
	ORG $+3
$SG324789 DB	'glStencilFunc', 00H
	ORG $+2
$SG321717 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'f', 00H, 'v'
	DB	00H, 00H, 00H
$SG320693 DB	'glPixelTransferi', 00H
	ORG $+3
$SG317621 DB	'glClearStencil', 00H
	ORG $+1
$SG324790 DB	'glStencilMask', 00H
	ORG $+2
$SG321718 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324791 DB	'glStencilOp', 00H
$SG319671 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG318647 DB	'g', 00H, 'l', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 00H, 00H
$SG324792 DB	'glTexCoord1d', 00H
	ORG $+3
$SG319672 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322745 DB	'glVertex3f', 00H
	ORG $+1
$SG318648 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324793 DB	'glTexCoord1dv', 00H
	ORG $+2
$SG320697 DB	'g', 00H, 'l', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H
	DB	'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG317625 DB	'g', 00H, 'l', 00H, 'C', 00H, 'l', 00H, 'e', 00H, 'a', 00H
	DB	'r', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'i'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324794 DB	'glTexCoord1f', 00H
	ORG $+3
$SG320698 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319681 DB	'glIndexsv', 00H
	ORG $+2
$SG317626 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324795 DB	'glTexCoord1fv', 00H
	ORG $+2
$SG324796 DB	'glTexCoord1i', 00H
	ORG $+3
$SG324797 DB	'glTexCoord1iv', 00H
	ORG $+2
$SG322749 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '3', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG324798 DB	'glTexCoord1s', 00H
	ORG $+3
$SG324799 DB	'glTexCoord1sv', 00H
	ORG $+2
$SG318657 DB	'glEndList', 00H
	ORG $+2
$SG322750 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321727 DB	'glTexCoord1i', 00H
	ORG $+3
$SG324800 DB	'glTexCoord2d', 00H
	ORG $+3
$SG324801 DB	'glTexCoord2dv', 00H
	ORG $+2
$SG324802 DB	'glTexCoord2f', 00H
	ORG $+3
$SG324803 DB	'glTexCoord2fv', 00H
	ORG $+2
$SG321731 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'i', 00H, 00H
	DB	00H
	ORG $+2
$SG324804 DB	'glTexCoord2i', 00H
	ORG $+3
$SG321732 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324805 DB	'glTexCoord2iv', 00H
	ORG $+2
$SG320709 DB	'glPixelZoom', 00H
$SG319685 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 's', 00H, 'v', 00H, 00H, 00H
$SG318661 DB	'g', 00H, 'l', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 00H, 00H
$SG317637 DB	'glClipPlane', 00H
$SG324806 DB	'glTexCoord2s', 00H
	ORG $+3
$SG324807 DB	'glTexCoord2sv', 00H
	ORG $+2
$SG322759 DB	'glVertex3fv', 00H
$SG319686 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320713 DB	'g', 00H, 'l', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H
	DB	'l', 00H, 'Z', 00H, 'o', 00H, 'o', 00H, 'm', 00H, 00H, 00H
$SG323788 DB	'glBeginQueryIndexed', 00H
$SG318662 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324808 DB	'glTexCoord3d', 00H
	ORG $+3
$SG324809 DB	'glTexCoord3dv', 00H
	ORG $+2
$SG323785 DB	'glGenQueries', 00H
	ORG $+3
$SG317641 DB	'g', 00H, 'l', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'p', 00H
	DB	'P', 00H, 'l', 00H, 'a', 00H, 'n', 00H, 'e', 00H, 00H, 00H
$SG324810 DB	'glTexCoord3f', 00H
	ORG $+3
$SG323786 DB	'glDeleteQueries', 00H
$SG323789 DB	'glEndQuery', 00H
	ORG $+1
$SG320714 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322763 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '3', 00H, 'f', 00H, 'v', 00H, 00H, 00H
$SG323790 DB	'glIsQuery', 00H
	ORG $+2
$SG317642 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324811 DB	'glTexCoord3fv', 00H
	ORG $+2
$SG323787 DB	'glBeginQuery', 00H
	ORG $+3
$SG324812 DB	'glTexCoord3i', 00H
	ORG $+3
$SG324813 DB	'glTexCoord3iv', 00H
	ORG $+2
$SG323791 DB	'glQueryCounter', 00H
	ORG $+1
$SG319695 DB	'glIndexub', 00H
	ORG $+2
$SG322764 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321741 DB	'glTexCoord1iv', 00H
	ORG $+2
$SG324814 DB	'glTexCoord3s', 00H
	ORG $+3
$SG324815 DB	'glTexCoord3sv', 00H
	ORG $+2
$SG318671 DB	'glEvalCoord1d', 00H
	ORG $+2
$SG324816 DB	'glTexCoord4d', 00H
	ORG $+3
$SG323792 DB	'glGetQueryObjectiv', 00H
	ORG $+1
$SG324817 DB	'glTexCoord4dv', 00H
	ORG $+2
$SG323793 DB	'glGetQueryObjecti64v', 00H
	ORG $+3
$SG321745 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'i', 00H, 'v'
	DB	00H, 00H, 00H
$SG324818 DB	'glTexCoord4f', 00H
	ORG $+3
$SG323794 DB	'glGetQueryObjectui64v', 00H
	ORG $+2
$SG320723 DB	'glPointSize', 00H
$SG321746 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324819 DB	'glTexCoord4fv', 00H
	ORG $+2
$SG319699 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'u', 00H, 'b', 00H, 00H, 00H
$SG318675 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'd'
	DB	00H, 00H, 00H
$SG324820 DB	'glTexCoord4i', 00H
	ORG $+3
$SG324821 DB	'glTexCoord4iv', 00H
	ORG $+2
$SG323799 DB	'P', 00H, 'r', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'S', 00H, 'u'
	DB	00H, 'b', 00H, 'm', 00H, 'i', 00H, 't', 00H, 't', 00H, 'e', 00H
	DB	'd', 00H, 00H, 00H
	ORG $+2
$SG319700 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320727 DB	'g', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
$SG317655 DB	'glColor3b', 00H
	ORG $+2
$SG318676 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323797 DB	'V', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, ' ', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'm'
	DB	00H, 'i', 00H, 't', 00H, 't', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG324822 DB	'glTexCoord4s', 00H
	ORG $+3
$SG324823 DB	'glTexCoord4sv', 00H
	ORG $+2
$SG324824 DB	'glTexCoordPointer', 00H
	ORG $+2
$SG320728 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324825 DB	'glTexEnvf', 00H
	ORG $+2
$SG323801 DB	'V', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	' ', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H
	DB	00H
$SG322777 DB	'glVertex3i', 00H
	ORG $+1
$SG324826 DB	'glTexEnvfv', 00H
	ORG $+1
$SG324827 DB	'glTexEnvi', 00H
	ORG $+2
$SG323803 DB	'T', 00H, 'e', 00H, 's', 00H, 's', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'c', 00H
	DB	'h', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG321755 DB	'glTexCoord1s', 00H
	ORG $+3
$SG317659 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'b', 00H, 00H, 00H
$SG324828 DB	'glTexEnviv', 00H
	ORG $+1
$SG317660 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324829 DB	'glTexGend', 00H
	ORG $+2
$SG323805 DB	'T', 00H, 'e', 00H, 's', 00H, 's', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'S', 00H, 'h'
	DB	00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'I', 00H
	DB	'n', 00H, 'v', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG322781 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '3', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG319709 DB	'glIndexubv', 00H
	ORG $+1
$SG318685 DB	'glEvalCoord1dv', 00H
	ORG $+1
$SG324830 DB	'glTexGendv', 00H
	ORG $+1
$SG322782 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324831 DB	'glTexGenf', 00H
	ORG $+2
$SG323807 DB	'G', 00H, 'e', 00H, 'o', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'r', 00H, 'y', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 00H, 00H
$SG321759 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG324832 DB	'glTexGenfv', 00H
	ORG $+1
$SG321760 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324833 DB	'glTexGeni', 00H
	ORG $+2
$SG323809 DB	'G', 00H, 'e', 00H, 'o', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'r', 00H, 'y', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'i', 00H
	DB	'm', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 's'
	DB	00H, ' ', 00H, 'E', 00H, 'm', 00H, 'i', 00H, 't', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG319713 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, 'u', 00H, 'b', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG318689 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'd'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG324834 DB	'glTexGeniv', 00H
	ORG $+1
$SG323811 DB	'F', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 00H, 00H
$SG317669 DB	'glColor3bv', 00H
	ORG $+1
$SG319714 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324837 DB	'glTexParameterf', 00H
$SG324838 DB	'glTexParameterfv', 00H
	ORG $+3
$SG318690 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324835 DB	'glTexImage1D', 00H
	ORG $+3
$SG320739 DB	'glPolygonMode', 00H
	ORG $+2
$SG324836 DB	'glTexImage2D', 00H
	ORG $+3
$SG323813 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'e', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'o', 00H
	DB	'c', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+2
$SG324839 DB	'glTexParameteri', 00H
$SG323815 DB	'C', 00H, 'l', 00H, 'i', 00H, 'p', 00H, 'p', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'p', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'i', 00H, 'm', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 's', 00H, 00H
	DB	00H
$SG322791 DB	'glVertex3iv', 00H
$SG320743 DB	'g', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'l', 00H, 'y', 00H
	DB	'g', 00H, 'o', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, 00H, 00H
$SG324840 DB	'glTexParameteriv', 00H
	ORG $+3
$SG324841 DB	'glTexSubImage1D', 00H
$SG319723 DB	'glInitNames', 00H
$SG320744 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323817 DB	'C', 00H, 'l', 00H, 'i', 00H, 'p', 00H, 'p', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'i', 00H
	DB	'm', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+2
$SG321769 DB	'glTexCoord1sv', 00H
	ORG $+2
$SG317673 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'b', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG324842 DB	'glTexSubImage2D', 00H
$SG324845 DB	'glVertex2d', 00H
	ORG $+1
$SG317674 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324843 DB	'glTranslated', 00H
	ORG $+3
$SG322795 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '3', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG318699 DB	'glEvalCoord1f', 00H
	ORG $+2
$SG324844 DB	'glTranslatef', 00H
	ORG $+3
$SG321773 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 's', 00H, 'v'
	DB	00H, 00H, 00H
$SG322796 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324846 DB	'glVertex2dv', 00H
$SG321774 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324847 DB	'glVertex2f', 00H
	ORG $+1
$SG319727 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H
	DB	'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG318703 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'f'
	DB	00H, 00H, 00H
$SG324848 DB	'glVertex2fv', 00H
$SG319728 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324849 DB	'glVertex2i', 00H
	ORG $+1
$SG318704 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324850 DB	'glVertex2iv', 00H
$SG324851 DB	'glVertex2s', 00H
	ORG $+1
$SG320755 DB	'glPolygonOffset', 00H
$SG324852 DB	'glVertex2sv', 00H
$SG324853 DB	'glVertex3d', 00H
	ORG $+1
$SG324854 DB	'glVertex3dv', 00H
$SG324855 DB	'glVertex3f', 00H
	ORG $+1
$SG320759 DB	'g', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'l', 00H, 'y', 00H
	DB	'g', 00H, 'o', 00H, 'n', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's'
	DB	00H, 'e', 00H, 't', 00H, 00H, 00H
$SG317687 DB	'glColor3d', 00H
	ORG $+2
$SG324856 DB	'glVertex3fv', 00H
$SG324857 DB	'glVertex3i', 00H
	ORG $+1
$SG320760 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322809 DB	'glVertex3s', 00H
	ORG $+1
$SG321785 DB	'glTexCoord2d', 00H
	ORG $+3
$SG318713 DB	'glEvalCoord1fv', 00H
	ORG $+1
$SG324858 DB	'glVertex3iv', 00H
$SG324859 DB	'glVertex3s', 00H
	ORG $+1
$SG317691 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'd', 00H, 00H, 00H
$SG324860 DB	'glVertex3sv', 00H
$SG317692 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324861 DB	'glVertex4d', 00H
	ORG $+1
$SG322813 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '3', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG321789 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG319741 DB	'glInterleavedArrays', 00H
$SG318717 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '1', 00H, 'f'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG324862 DB	'glVertex4dv', 00H
$SG324863 DB	'glVertex4f', 00H
	ORG $+1
$SG322814 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324864 DB	'glVertex4fv', 00H
$SG321790 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324865 DB	'glVertex4i', 00H
	ORG $+1
$SG318718 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320769 DB	'glPolygonStipple', 00H
	ORG $+3
$SG319745 DB	'g', 00H, 'l', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'd'
	DB	00H, 'A', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, 's', 00H
	DB	00H, 00H
$SG324866 DB	'glVertex4iv', 00H
$SG324867 DB	'glVertex4s', 00H
	ORG $+1
$SG319746 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324868 DB	'glVertex4sv', 00H
$SG324869 DB	'glVertexPointer', 00H
$SG320773 DB	'g', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'l', 00H, 'y', 00H
	DB	'g', 00H, 'o', 00H, 'n', 00H, 'S', 00H, 't', 00H, 'i', 00H, 'p'
	DB	00H, 'p', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG317701 DB	'glColor3dv', 00H
	ORG $+1
$SG324870 DB	'glViewport', 00H
	ORG $+1
$SG322823 DB	'glVertex3sv', 00H
$SG320774 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324871 DB	'wglCopyContext', 00H
	ORG $+1
$SG321799 DB	'glTexCoord2dv', 00H
	ORG $+2
$SG324872 DB	'wglCreateLayerContext', 00H
	ORG $+2
$SG324873 DB	'wglDeleteContext', 00H
	ORG $+3
$SG318729 DB	'glEvalCoord2d', 00H
	ORG $+2
$SG317705 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'd', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG324874 DB	'wglGetCurrentContext', 00H
	ORG $+3
$SG317706 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324875 DB	'wglGetCurrentDC', 00H
$SG322827 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '3', 00H, 's', 00H, 'v', 00H, 00H, 00H
$SG321803 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG319755 DB	'glIsEnabled', 00H
$SG324876 DB	'wglGetProcAddress', 00H
	ORG $+2
$SG322828 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324877 DB	'wglCreateContext', 00H
	ORG $+3
$SG321804 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318733 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'd'
	DB	00H, 00H, 00H
$SG324878 DB	'wglChoosePixelFormat', 00H
	ORG $+3
$SG318734 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324879 DB	'wglMakeCurrent', 00H
	ORG $+1
$SG320783 DB	'glPopAttrib', 00H
$SG319759 DB	'g', 00H, 'l', 00H, 'I', 00H, 's', 00H, 'E', 00H, 'n', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG324880 DB	'wglShareLists', 00H
	ORG $+2
$SG319760 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324881 DB	'wglUseFontBitmapsA', 00H
	ORG $+1
$SG324882 DB	'wglUseFontBitmapsW', 00H
	ORG $+1
$SG324883 DB	'wglDescribeLayerPlane', 00H
	ORG $+2
$SG320787 DB	'g', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'A', 00H
	DB	't', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'b', 00H, 00H, 00H
$SG323860 DB	' ', 00H, ' ', 00H, 'V', 00H, 'E', 00H, 'R', 00H, 'T', 00H
	DB	'E', 00H, 'X', 00H, ' ', 00H, ':', 00H, ' ', 00H, '<', 00H, 'U'
	DB	00H, 'n', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'd', 00H, '>', 00H
	DB	0aH, 00H, 00H, 00H
	ORG $+2
$SG323859 DB	' ', 00H, ' ', 00H, 'V', 00H, 'E', 00H, 'R', 00H, 'T', 00H
	DB	'E', 00H, 'X', 00H, ' ', 00H, ':', 00H, ' ', 00H, '%', 00H, 's'
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H
	DB	' ', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H, 's', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, '>', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	' ', 00H, 'T', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'n', 00H, 'g'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ')', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG324884 DB	'wglDescribePixelFormat', 00H
	ORG $+1
$SG324885 DB	'wglGetLayerPaletteEntries', 00H
	ORG $+2
$SG320788 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324886 DB	'wglGetPixelFormat', 00H
	ORG $+2
$SG324887 DB	'wglRealizeLayerPalette', 00H
	ORG $+1
$SG323863 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'G', 00H, 'E', 00H
	DB	'O', 00H, 'M', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, 's', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 's', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'i', 00H, 'm'
	DB	00H, 's', 00H, ')', 00H, 0aH, 00H, 00H, 00H
$SG321815 DB	'glTexCoord2f', 00H
	ORG $+3
$SG318743 DB	'glEvalCoord2dv', 00H
	ORG $+1
$SG317719 DB	'glColor3f', 00H
	ORG $+2
$SG324888 DB	'wglSetLayerPaletteEntries', 00H
	ORG $+2
$SG323864 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'G', 00H, 'E', 00H
	DB	'O', 00H, 'M', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '<', 00H, 'U', 00H, 'n', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'd', 00H, '>', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG324889 DB	'wglSetPixelFormat', 00H
	ORG $+2
$SG319769 DB	'glIsList', 00H
	ORG $+3
$SG324890 DB	'wglSwapMultipleBuffers', 00H
	ORG $+1
$SG322843 DB	'glVertex4d', 00H
	ORG $+1
$SG324891 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, ' ', 00H, '@', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H
	DB	' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'h', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG321819 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'f', 00H, 00H
	DB	00H
	ORG $+2
$SG318747 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'd'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG317723 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'f', 00H, 00H, 00H
$SG320797 DB	'glPopClientAttrib', 00H
	ORG $+2
$SG323868 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'T', 00H, 'E', 00H
	DB	'S', 00H, 'S', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, 's', 00H, ' ', 00H, 'H', 00H, 'u', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, '=', 00H, '=', 00H, '>', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'D', 00H, 'o', 00H, 'm', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, 0aH, 00H, 00H, 00H
$SG321820 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319773 DB	'g', 00H, 'l', 00H, 'I', 00H, 's', 00H, 'L', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG318748 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320801 DB	'g', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'C', 00H
	DB	'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'A', 00H, 't'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'b', 00H, 00H, 00H
$SG317724 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323869 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'T', 00H, 'E', 00H
	DB	'S', 00H, 'S', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '<', 00H, 'U', 00H, 'n', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'd', 00H, '>', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG317733 DB	'glColor3fv', 00H
	ORG $+1
$SG319774 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322847 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '4', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG319783 DB	'glIsTexture', 00H
$SG323872 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'R', 00H, 'A', 00H
	DB	'S', 00H, 'T', 00H, 'E', 00H, 'R', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, '5', 00H, '.', 00H, '1', 00H, 'f', 00H, '%', 00H
	DB	'%', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	'(', 00H, '%', 00H, 's', 00H, ' ', 00H, 'T', 00H, 'r', 00H, 'i'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 's', 00H
	DB	' ', 00H, 'I', 00H, 'N', 00H, ' ', 00H, ')', 00H, 0aH, 00H, 00H
	DB	00H
$SG322848 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323873 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'R', 00H, 'A', 00H
	DB	'S', 00H, 'T', 00H, 'E', 00H, 'R', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '<', 00H, 'U', 00H, 'n', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'd', 00H, '>', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG323880 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'C', 00H, 'O', 00H
	DB	'M', 00H, 'P', 00H, 'U', 00H, 'T', 00H, 'E', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, 's', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG320802 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322857 DB	'glVertex4dv', 00H
$SG323876 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'P', 00H, 'I', 00H
	DB	'X', 00H, 'E', 00H, 'L', 00H, ' ', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, 's', 00H, ' ', 00H, ' ', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 's', 00H, ' ', 00H, 'T', 00H, 'r', 00H, 'i', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H
	DB	'O', 00H, 'U', 00H, 'T', 00H, ')', 00H, 0aH, 00H, 00H, 00H
$SG323877 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'P', 00H, 'I', 00H
	DB	'X', 00H, 'E', 00H, 'L', 00H, ' ', 00H, ' ', 00H, ':', 00H, ' '
	DB	00H, '<', 00H, 'U', 00H, 'n', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'd', 00H, '>', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG321829 DB	'glTexCoord2fv', 00H
	ORG $+2
$SG318759 DB	'glEvalCoord2f', 00H
	ORG $+2
$SG323881 DB	'%', 00H, 's', 00H, ' ', 00H, ' ', 00H, 'C', 00H, 'O', 00H
	DB	'M', 00H, 'P', 00H, 'U', 00H, 'T', 00H, 'E', 00H, ':', 00H, ' '
	DB	00H, '<', 00H, 'U', 00H, 'n', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'd', 00H, '>', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG321833 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'f', 00H, 'v'
	DB	00H, 00H, 00H
$SG317737 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'f', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG321834 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320811 DB	'glPopMatrix', 00H
$SG317738 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319787 DB	'g', 00H, 'l', 00H, 'I', 00H, 's', 00H, 'T', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 00H, 00H
$SG318763 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'f'
	DB	00H, 00H, 00H
$SG319788 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322861 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '4', 00H, 'd', 00H, 'v', 00H, 00H, 00H
$SG317751 DB	'glColor3i', 00H
	ORG $+2
$SG318764 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320815 DB	'g', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x', 00H, 00H, 00H
$SG321849 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'i', 00H, 00H
	DB	00H
	ORG $+2
$SG322862 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318773 DB	'glEvalCoord2fv', 00H
	ORG $+1
$SG320825 DB	'glPopName', 00H
	ORG $+2
$SG320816 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321845 DB	'glTexCoord2i', 00H
	ORG $+3
$SG319799 DB	'glLightModelf', 00H
	ORG $+2
$SG318777 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'f'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG319803 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'l', 00H, 'f'
	DB	00H, 00H, 00H
$SG321850 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317755 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'i', 00H, 00H, 00H
$SG318778 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322877 DB	'glVertex4f', 00H
	ORG $+1
$SG319804 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320829 DB	'g', 00H, 'l', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG317756 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317765 DB	'glColor3iv', 00H
	ORG $+1
$SG320830 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322881 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '4', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG321863 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 'i', 00H, 'v'
	DB	00H, 00H, 00H
$SG322882 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321859 DB	'glTexCoord2iv', 00H
	ORG $+2
$SG319815 DB	'glLightModelfv', 00H
	ORG $+1
$SG318791 DB	'glEvalMesh1', 00H
$SG321864 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317769 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG322891 DB	'glVertex4fv', 00H
$SG317770 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320843 DB	'glPrioritizeTextures', 00H
	ORG $+3
$SG319819 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'l', 00H, 'f'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG318795 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'M', 00H, 'e', 00H, 's', 00H, 'h', 00H, '1', 00H, 00H, 00H
$SG320847 DB	'g', 00H, 'l', 00H, 'P', 00H, 'r', 00H, 'i', 00H, 'o', 00H
	DB	'r', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'T'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG319820 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322895 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '4', 00H, 'f', 00H, 'v', 00H, 00H, 00H
$SG321879 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG318796 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317783 DB	'glColor3s', 00H
	ORG $+2
$SG322896 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319835 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'l', 00H, 'i'
	DB	00H, 00H, 00H
$SG320848 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321875 DB	'glTexCoord2s', 00H
	ORG $+3
$SG319831 DB	'glLightModeli', 00H
	ORG $+2
$SG317787 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 's', 00H, 00H, 00H
$SG321880 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320857 DB	'glPushAttrib', 00H
	ORG $+3
$SG320861 DB	'g', 00H, 'l', 00H, 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H
	DB	'A', 00H, 't', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'b', 00H, 00H
	DB	00H
	ORG $+2
$SG319836 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318813 DB	'glEvalMesh2', 00H
$SG317788 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322911 DB	'glVertex4i', 00H
	ORG $+1
$SG320862 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321889 DB	'glTexCoord2sv', 00H
	ORG $+2
$SG318817 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'M', 00H, 'e', 00H, 's', 00H, 'h', 00H, '2', 00H, 00H, 00H
$SG321893 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '2', 00H, 's', 00H, 'v'
	DB	00H, 00H, 00H
$SG318818 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322915 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '4', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG317797 DB	'glColor3sv', 00H
	ORG $+1
$SG322916 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320871 DB	'glPushClientAttrib', 00H
	ORG $+1
$SG321894 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319847 DB	'glLightModeliv', 00H
	ORG $+1
$SG317801 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 's', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG322925 DB	'glVertex4iv', 00H
$SG317802 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320875 DB	'g', 00H, 'l', 00H, 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H
	DB	'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'A'
	DB	00H, 't', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG319851 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'l', 00H, 'i'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG318827 DB	'glEvalPoint1', 00H
	ORG $+3
$SG318831 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, '1', 00H, 00H
	DB	00H
	ORG $+2
$SG320876 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322929 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '4', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG321911 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '3', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG319852 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317815 DB	'glColor3ub', 00H
	ORG $+1
$SG318832 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320889 DB	'g', 00H, 'l', 00H, 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H
	DB	'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+2
$SG322930 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321907 DB	'glTexCoord3d', 00H
	ORG $+3
$SG320885 DB	'glPushMatrix', 00H
	ORG $+3
$SG319865 DB	'glLightf', 00H
	ORG $+3
$SG321912 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319869 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG320890 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318843 DB	'glEvalPoint2', 00H
	ORG $+3
$SG317819 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'u', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG318847 DB	'g', 00H, 'l', 00H, 'E', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, '2', 00H, 00H
	DB	00H
	ORG $+2
$SG317820 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322945 DB	'glVertex4s', 00H
	ORG $+1
$SG319870 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320899 DB	'glPushName', 00H
	ORG $+1
$SG318848 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321921 DB	'glTexCoord3dv', 00H
	ORG $+2
$SG322949 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '4', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG321925 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG317829 DB	'glColor3ubv', 00H
$SG319883 DB	'glLightfv', 00H
	ORG $+2
$SG322950 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317833 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'u', 00H, 'b', 00H, 'v', 00H, 00H, 00H
$SG318861 DB	'glFeedbackBuffer', 00H
	ORG $+3
$SG321926 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320903 DB	'g', 00H, 'l', 00H, 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H
	DB	'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG322959 DB	'glVertex4sv', 00H
$SG320904 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319887 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 'f', 00H, 'v', 00H, 00H, 00H
$SG317834 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318865 DB	'g', 00H, 'l', 00H, 'F', 00H, 'e', 00H, 'e', 00H, 'd', 00H
	DB	'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG319888 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322963 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '4', 00H, 's', 00H, 'v', 00H, 00H, 00H
$SG321943 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '3', 00H, 'f', 00H, 00H
	DB	00H
	ORG $+2
$SG318866 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321939 DB	'glTexCoord3f', 00H
	ORG $+3
$SG320915 DB	'glRasterPos2d', 00H
	ORG $+2
$SG320919 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '2', 00H, 'd'
	DB	00H, 00H, 00H
$SG322964 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317847 DB	'glColor3ui', 00H
	ORG $+1
$SG321944 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318875 DB	'glFinish', 00H
	ORG $+3
$SG320920 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317851 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'u', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG319901 DB	'glLighti', 00H
	ORG $+3
$SG317852 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318879 DB	'g', 00H, 'l', 00H, 'F', 00H, 'i', 00H, 'n', 00H, 'i', 00H
	DB	's', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG318880 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321953 DB	'glTexCoord3fv', 00H
	ORG $+2
$SG320929 DB	'glRasterPos2dv', 00H
	ORG $+1
$SG319905 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG319906 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322979 DB	'glVertexPointer', 00H
$SG321957 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '3', 00H, 'f', 00H, 'v'
	DB	00H, 00H, 00H
$SG320933 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '2', 00H, 'd'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG317861 DB	'glColor3uiv', 00H
$SG319919 DB	'glLightiv', 00H
	ORG $+2
$SG321958 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322983 DB	'g', 00H, 'l', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG319923 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG320934 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318889 DB	'glFlush', 00H
$SG320949 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '2', 00H, 'f'
	DB	00H, 00H, 00H
$SG322984 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317865 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'u', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG322999 DB	'glViewport', 00H
	ORG $+1
$SG317866 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318893 DB	'g', 00H, 'l', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG321975 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '3', 00H, 'i', 00H, 00H
	DB	00H
	ORG $+2
$SG318894 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320945 DB	'glRasterPos2f', 00H
	ORG $+2
$SG321971 DB	'glTexCoord3i', 00H
	ORG $+3
$SG317879 DB	'glColor3us', 00H
	ORG $+1
$SG319924 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318905 DB	'glFogf', 00H
	ORG $+1
$SG319939 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'n', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'i', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H
$SG320950 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320959 DB	'glRasterPos2fv', 00H
	ORG $+1
$SG321989 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '3', 00H, 'i', 00H, 'v'
	DB	00H, 00H, 00H
$SG321976 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323003 DB	'g', 00H, 'l', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG317883 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'u', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG317893 DB	'glColor3usv', 00H
$SG323004 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323017 DB	'wglCopyContext', 00H
	ORG $+1
$SG318921 DB	'glFogfv', 00H
$SG319949 DB	'glLineWidth', 00H
$SG317884 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318909 DB	'g', 00H, 'l', 00H, 'F', 00H, 'o', 00H, 'g', 00H, 'f', 00H
	DB	00H, 00H
	ORG $+2
$SG317897 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'u', 00H, 's', 00H, 'v', 00H, 00H, 00H
$SG320979 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '2', 00H, 'i'
	DB	00H, 00H, 00H
$SG318910 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319935 DB	'glLineStipple', 00H
	ORG $+2
$SG321985 DB	'glTexCoord3iv', 00H
	ORG $+2
$SG320963 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '2', 00H, 'f'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG318925 DB	'g', 00H, 'l', 00H, 'F', 00H, 'o', 00H, 'g', 00H, 'f', 00H
	DB	'v', 00H, 00H, 00H
$SG323031 DB	'wglCreateContext', 00H
	ORG $+3
$SG320964 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319953 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 'n', 00H, 'e', 00H
	DB	'W', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG322007 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '3', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG319940 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318937 DB	'glFogi', 00H
	ORG $+1
$SG317913 DB	'glColor4b', 00H
	ORG $+2
$SG321990 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323035 DB	'w', 00H, 'g', 00H, 'l', 00H, 'C', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG317898 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323021 DB	'w', 00H, 'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'p', 00H
	DB	'y', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG319963 DB	'glListBase', 00H
	ORG $+1
$SG323022 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320989 DB	'glRasterPos2iv', 00H
	ORG $+1
$SG317917 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'b', 00H, 00H, 00H
$SG318926 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320975 DB	'glRasterPos2i', 00H
	ORG $+2
$SG322021 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '3', 00H, 's', 00H, 'v'
	DB	00H, 00H, 00H
$SG319954 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322003 DB	'glTexCoord3s', 00H
	ORG $+3
$SG318941 DB	'g', 00H, 'l', 00H, 'F', 00H, 'o', 00H, 'g', 00H, 'i', 00H
	DB	00H, 00H
	ORG $+2
$SG317927 DB	'glColor4bv', 00H
	ORG $+1
$SG320980 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319977 DB	'glLoadIdentity', 00H
	ORG $+1
$SG318953 DB	'glFogiv', 00H
$SG323051 DB	'w', 00H, 'g', 00H, 'l', 00H, 'C', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'L', 00H, 'a', 00H, 'y', 00H, 'e'
	DB	00H, 'r', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, 00H, 00H
$SG322008 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318957 DB	'g', 00H, 'l', 00H, 'F', 00H, 'o', 00H, 'g', 00H, 'i', 00H
	DB	'v', 00H, 00H, 00H
$SG321009 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '2', 00H, 's'
	DB	00H, 00H, 00H
$SG323036 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323061 DB	'wglDeleteContext', 00H
	ORG $+3
$SG318942 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318967 DB	'glFrontFace', 00H
$SG317918 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319967 DB	'g', 00H, 'l', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG323065 DB	'w', 00H, 'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 'l', 00H
	DB	'e', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG319968 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322017 DB	'glTexCoord3sv', 00H
	ORG $+2
$SG320993 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '2', 00H, 'i'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG322041 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '4', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG320994 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321019 DB	'glRasterPos2sv', 00H
	ORG $+1
$SG319995 DB	'g', 00H, 'l', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x', 00H, 'd'
	DB	00H, 00H, 00H
$SG322022 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323047 DB	'wglCreateLayerContext', 00H
	ORG $+2
$SG317931 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'b', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG318971 DB	'g', 00H, 'l', 00H, 'F', 00H, 'r', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'F', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG317947 DB	'glColor4d', 00H
	ORG $+2
$SG323052 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317951 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'd', 00H, 00H, 00H
$SG317932 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321005 DB	'glRasterPos2s', 00H
	ORG $+2
$SG319981 DB	'g', 00H, 'l', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'I', 00H, 'd', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG323079 DB	'w', 00H, 'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 00H, 00H
	ORG $+2
$SG319982 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322055 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '4', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG318958 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320009 DB	'g', 00H, 'l', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x', 00H, 'f'
	DB	00H, 00H, 00H
$SG321010 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322037 DB	'glTexCoord4d', 00H
	ORG $+3
$SG319991 DB	'glLoadMatrixd', 00H
	ORG $+2
$SG317961 DB	'glColor4dv', 00H
	ORG $+1
$SG323066 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318991 DB	'glFrustum', 00H
	ORG $+2
$SG322042 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323089 DB	'wglGetCurrentDC', 00H
$SG321041 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '3', 00H, 'd'
	DB	00H, 00H, 00H
$SG319996 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320019 DB	'glLoadName', 00H
	ORG $+1
$SG318972 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321023 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '2', 00H, 's'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG318995 DB	'g', 00H, 'l', 00H, 'F', 00H, 'r', 00H, 'u', 00H, 's', 00H
	DB	't', 00H, 'u', 00H, 'm', 00H, 00H, 00H
$SG321024 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323093 DB	'w', 00H, 'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'D', 00H, 'C', 00H, 00H, 00H
$SG322075 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '4', 00H, 'f', 00H, 00H
	DB	00H
	ORG $+2
$SG317952 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323075 DB	'wglGetCurrentContext', 00H
	ORG $+3
$SG322051 DB	'glTexCoord4dv', 00H
	ORG $+2
$SG320005 DB	'glLoadMatrixf', 00H
	ORG $+2
$SG321051 DB	'glRasterPos3dv', 00H
	ORG $+1
$SG319005 DB	'glGenLists', 00H
	ORG $+1
$SG323080 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317981 DB	'glColor4f', 00H
	ORG $+2
$SG322056 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323103 DB	'wglGetProcAddress', 00H
	ORG $+2
$SG320010 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321037 DB	'glRasterPos3d', 00H
	ORG $+2
$SG317965 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'd', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG320033 DB	'glLogicOp', 00H
	ORG $+2
$SG317966 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317985 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'f', 00H, 00H, 00H
$SG321042 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323107 DB	'w', 00H, 'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, 'A', 00H, 'd', 00H, 'd'
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG318996 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320037 DB	'g', 00H, 'l', 00H, 'L', 00H, 'o', 00H, 'g', 00H, 'i', 00H
	DB	'c', 00H, 'O', 00H, 'p', 00H, 00H, 00H
$SG323094 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322071 DB	'glTexCoord4f', 00H
	ORG $+3
$SG320023 DB	'g', 00H, 'l', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG322089 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '4', 00H, 'f', 00H, 'v'
	DB	00H, 00H, 00H
$SG320024 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317995 DB	'glColor4fv', 00H
	ORG $+1
$SG322076 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321055 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '3', 00H, 'd'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG323119 DB	'wglMakeCurrent', 00H
	ORG $+1
$SG321073 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '3', 00H, 'f'
	DB	00H, 00H, 00H
$SG321056 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319009 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG319025 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 00H, 00H
$SG319010 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320057 DB	'glMap1d', 00H
$SG322109 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '4', 00H, 'i', 00H, 00H
	DB	00H
	ORG $+2
$SG317986 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321083 DB	'glRasterPos3fv', 00H
	ORG $+1
$SG320061 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, '1', 00H
	DB	'd', 00H, 00H, 00H
$SG318015 DB	'glColor4i', 00H
	ORG $+2
$SG323108 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322085 DB	'glTexCoord4fv', 00H
	ORG $+2
$SG319041 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 'v'
	DB	00H, 00H, 00H
$SG320038 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323139 DB	'w', 00H, 'g', 00H, 'l', 00H, 'S', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 's'
	DB	00H, 00H, 00H
$SG322090 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321069 DB	'glRasterPos3f', 00H
	ORG $+2
$SG319021 DB	'glGenTextures', 00H
	ORG $+2
$SG317999 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'f', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG318019 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'i', 00H, 00H, 00H
$SG318000 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322123 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '4', 00H, 'i', 00H, 'v'
	DB	00H, 00H, 00H
$SG321074 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319053 DB	'glGetClipPlane', 00H
	ORG $+1
$SG318029 DB	'glColor4iv', 00H
	ORG $+1
$SG319026 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323123 DB	'w', 00H, 'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'k', 00H
	DB	'e', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG321105 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '3', 00H, 'i'
	DB	00H, 00H, 00H
$SG323124 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322105 DB	'glTexCoord4i', 00H
	ORG $+3
$SG319037 DB	'glGetBooleanv', 00H
	ORG $+2
$SG320081 DB	'glMap1f', 00H
$SG323155 DB	'wglUseFontBitmapsA', 00H
	ORG $+1
$SG322110 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320085 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, '1', 00H
	DB	'f', 00H, 00H, 00H
$SG322143 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '4', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG320062 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323135 DB	'wglShareLists', 00H
	ORG $+2
$SG321087 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '3', 00H, 'f'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG321115 DB	'glRasterPos3iv', 00H
	ORG $+1
$SG319073 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'D', 00H
	DB	'o', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'v', 00H, 00H
	DB	00H
	ORG $+2
$SG321088 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318049 DB	'glColor4s', 00H
	ORG $+2
$SG319042 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318053 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 's', 00H, 00H, 00H
$SG323140 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323175 DB	'wglUseFontBitmapsW', 00H
	ORG $+1
$SG318020 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322119 DB	'glTexCoord4iv', 00H
	ORG $+2
$SG319083 DB	'glGetError', 00H
	ORG $+1
$SG322124 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321101 DB	'glRasterPos3i', 00H
	ORG $+2
$SG319057 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'C', 00H
	DB	'l', 00H, 'i', 00H, 'p', 00H, 'P', 00H, 'l', 00H, 'a', 00H, 'n'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG318033 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG322157 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '4', 00H, 's', 00H, 'v'
	DB	00H, 00H, 00H
$SG321106 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318063 DB	'glColor4sv', 00H
	ORG $+1
$SG319058 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321137 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '3', 00H, 's'
	DB	00H, 00H, 00H
$SG318034 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320113 DB	'glMap2d', 00H
$SG323195 DB	'w', 00H, 'g', 00H, 'l', 00H, 'C', 00H, 'h', 00H, 'o', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e'
	DB	00H, 'l', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 00H, 00H
	ORG $+2
$SG320086 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323159 DB	'w', 00H, 'g', 00H, 'l', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'B', 00H, 'i', 00H, 't'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, 's', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG320117 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, '2', 00H
	DB	'd', 00H, 00H, 00H
$SG319099 DB	'glGetFloatv', 00H
$SG323160 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322139 DB	'glTexCoord4s', 00H
	ORG $+3
$SG319069 DB	'glGetDoublev', 00H
	ORG $+3
$SG321119 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '3', 00H, 'i'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG321147 DB	'glRasterPos3sv', 00H
	ORG $+1
$SG322173 DB	'glTexCoordPointer', 00H
	ORG $+2
$SG322144 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319103 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'F', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 't', 00H, 'v', 00H, 00H, 00H
$SG322177 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'P', 00H, 'o', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG321120 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318083 DB	'glColor4ub', 00H
	ORG $+1
$SG319074 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322191 DB	'glTexEnvf', 00H
	ORG $+2
$SG318054 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322153 DB	'glTexCoord4sv', 00H
	ORG $+2
$SG323179 DB	'w', 00H, 'g', 00H, 'l', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'B', 00H, 'i', 00H, 't'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, 's', 00H, 'W', 00H, 00H, 00H
	ORG $+2
$SG319119 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'I', 00H
	DB	'n', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'e', 00H, 'r', 00H, 'v'
	DB	00H, 00H, 00H
$SG323180 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321133 DB	'glRasterPos3s', 00H
	ORG $+2
$SG320145 DB	'glMap2f', 00H
$SG318097 DB	'glColor4ubv', 00H
$SG322158 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319087 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'E', 00H
	DB	'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG322195 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'E', 00H
	DB	'n', 00H, 'v', 00H, 'f', 00H, 00H, 00H
$SG319088 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321171 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '4', 00H, 'd'
	DB	00H, 00H, 00H
$SG321138 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318067 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 's', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG320149 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, '2', 00H
	DB	'f', 00H, 00H, 00H
$SG322209 DB	'glTexEnvfv', 00H
	ORG $+1
$SG318068 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318101 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'u', 00H, 'b', 00H, 'v', 00H, 00H, 00H
$SG319137 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'L', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 'f', 00H, 'v', 00H, 00H
	DB	00H
	ORG $+2
$SG320118 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323191 DB	'wglChoosePixelFormat', 00H
	ORG $+3
$SG321151 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '3', 00H, 's'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG321181 DB	'glRasterPos4dv', 00H
	ORG $+1
$SG320163 DB	'glMapGrid1d', 00H
$SG323196 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318117 DB	'glColor4ui', 00H
	ORG $+1
$SG321152 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320167 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'G', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, '1', 00H, 'd', 00H, 00H, 00H
$SG322227 DB	'glTexEnvi', 00H
	ORG $+2
$SG319104 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319155 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'L', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 'i', 00H, 'v', 00H, 00H
	DB	00H
	ORG $+2
$SG322178 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318087 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'u', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG318131 DB	'glColor4uiv', 00H
$SG318088 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319115 DB	'glGetIntegerv', 00H
	ORG $+2
$SG321167 DB	'glRasterPos4d', 00H
	ORG $+2
$SG321205 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '4', 00H, 'f'
	DB	00H, 00H, 00H
$SG319120 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320181 DB	'glMapGrid1f', 00H
$SG322196 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323255 DB	'w', 00H, 'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 's', 00H
	DB	'c', 00H, 'r', 00H, 'i', 00H, 'b', 00H, 'e', 00H, 'L', 00H, 'a'
	DB	00H, 'y', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'l', 00H, 'a', 00H
	DB	'n', 00H, 'e', 00H, 00H, 00H
$SG321172 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322231 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'E', 00H
	DB	'n', 00H, 'v', 00H, 'i', 00H, 00H, 00H
$SG320150 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318135 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'u', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG319169 DB	'glGetMapdv', 00H
	ORG $+1
$SG318102 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319133 DB	'glGetLightfv', 00H
	ORG $+3
$SG321185 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '4', 00H, 'd'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG320185 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'G', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, '1', 00H, 'f', 00H, 00H, 00H
$SG322245 DB	'glTexEnviv', 00H
	ORG $+1
$SG321186 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321215 DB	'glRasterPos4fv', 00H
	ORG $+1
$SG318151 DB	'glColor4us', 00H
	ORG $+1
$SG319138 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322213 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'E', 00H
	DB	'n', 00H, 'v', 00H, 'f', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG323271 DB	'wglDescribePixelFormat', 00H
	ORG $+1
$SG320205 DB	'glMapGrid2d', 00H
$SG322214 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320209 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'G', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, '2', 00H, 'd', 00H, 00H, 00H
$SG319187 DB	'glGetMapfv', 00H
	ORG $+1
$SG320168 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318121 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'u', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG318165 DB	'glColor4usv', 00H
$SG318122 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319151 DB	'glGetLightiv', 00H
	ORG $+3
$SG321201 DB	'glRasterPos4f', 00H
	ORG $+2
$SG323251 DB	'wglDescribeLayerPlane', 00H
	ORG $+2
$SG322263 DB	'glTexGend', 00H
	ORG $+2
$SG319156 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321239 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '4', 00H, 'i'
	DB	00H, 00H, 00H
$SG321206 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318169 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'u', 00H, 's', 00H, 'v', 00H, 00H, 00H
$SG322267 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'G', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 00H, 00H
$SG323256 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323293 DB	'wglGetLayerPaletteEntries', 00H
	ORG $+2
$SG322232 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323297 DB	'w', 00H, 'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'L', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'a'
	DB	00H, 'l', 00H, 'e', 00H, 't', 00H, 't', 00H, 'e', 00H, 'E', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, 00H
	DB	00H
$SG318136 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321249 DB	'glRasterPos4iv', 00H
	ORG $+1
$SG320229 DB	'glMapGrid2f', 00H
$SG320186 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321219 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '4', 00H, 'f'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG319205 DB	'glGetMapiv', 00H
	ORG $+1
$SG321220 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319173 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'a', 00H, 'p', 00H, 'd', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG322281 DB	'glTexGendv', 00H
	ORG $+1
$SG319174 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322249 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'E', 00H
	DB	'n', 00H, 'v', 00H, 'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG320233 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'G', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, '2', 00H, 'f', 00H, 00H, 00H
$SG318185 DB	'glColorMask', 00H
$SG322250 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323275 DB	'w', 00H, 'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 's', 00H
	DB	'c', 00H, 'r', 00H, 'i', 00H, 'b', 00H, 'e', 00H, 'P', 00H, 'i'
	DB	00H, 'x', 00H, 'e', 00H, 'l', 00H, 'F', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG318155 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, '4', 00H, 'u', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG318189 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, 'M', 00H, 'a', 00H, 's', 00H, 'k', 00H, 00H, 00H
$SG323317 DB	'wglGetPixelFormat', 00H
	ORG $+2
$SG323276 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320247 DB	'glMaterialf', 00H
$SG318156 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319223 DB	'glGetMaterialfv', 00H
$SG323321 DB	'w', 00H, 'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H
	DB	'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'F', 00H, 'o'
	DB	00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 00H, 00H
$SG320210 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321235 DB	'glRasterPos4i', 00H
	ORG $+2
$SG319191 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'a', 00H, 'p', 00H, 'f', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG321273 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '4', 00H, 's'
	DB	00H, 00H, 00H
$SG321240 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318201 DB	'glColorMaterial', 00H
$SG322299 DB	'glTexGenf', 00H
	ORG $+2
$SG319192 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320251 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'f', 00H, 00H, 00H
$SG322303 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'G', 00H
	DB	'e', 00H, 'n', 00H, 'f', 00H, 00H, 00H
$SG318170 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319227 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'f', 00H, 'v', 00H, 00H, 00H
$SG322317 DB	'glTexGenfv', 00H
	ORG $+1
$SG322268 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318205 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i'
	DB	00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG320269 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'f', 00H, 'v', 00H, 00H
	DB	00H
	ORG $+2
$SG323298 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321253 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '4', 00H, 'i'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG321283 DB	'glRasterPos4sv', 00H
	ORG $+1
$SG319241 DB	'glGetMaterialiv', 00H
$SG321301 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 00H
	DB	00H
	ORG $+2
$SG321254 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319209 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'a', 00H, 'p', 00H, 'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG323335 DB	'wglRealizeLayerPalette', 00H
	ORG $+1
$SG319245 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG320283 DB	'glMateriali', 00H
$SG320234 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318221 DB	'glColorPointer', 00H
	ORG $+1
$SG319257 DB	'glGetPixelMapfv', 00H
$SG323357 DB	'wglSetLayerPaletteEntries', 00H
	ORG $+2
$SG319210 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322285 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'G', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG319261 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'P', 00H
	DB	'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p'
	DB	00H, 'f', 00H, 'v', 00H, 00H, 00H
$SG322335 DB	'glTexGeni', 00H
	ORG $+2
$SG322286 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320287 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 00H, 00H
$SG323361 DB	'w', 00H, 'g', 00H, 'l', 00H, 'S', 00H, 'e', 00H, 't', 00H
	DB	'L', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'a'
	DB	00H, 'l', 00H, 'e', 00H, 't', 00H, 't', 00H, 'e', 00H, 'E', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, 00H
	DB	00H
$SG318190 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321269 DB	'glRasterPos4s', 00H
	ORG $+2
$SG322339 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'G', 00H
	DB	'e', 00H, 'n', 00H, 'i', 00H, 00H, 00H
$SG323322 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318247 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H
	DB	'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG321274 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319273 DB	'glGetPixelMapuiv', 00H
	ORG $+3
$SG320252 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319277 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'P', 00H
	DB	'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p'
	DB	00H, 'u', 00H, 'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG319228 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323375 DB	'wglSetPixelFormat', 00H
	ORG $+2
$SG318206 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321327 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG322304 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321287 DB	'g', 00H, 'l', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 's', 00H, '4', 00H, 's'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG322353 DB	'glTexGeniv', 00H
	ORG $+1
$SG321288 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320265 DB	'glMaterialfv', 00H
	ORG $+3
$SG323339 DB	'w', 00H, 'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'L', 00H, 'a', 00H, 'y'
	DB	00H, 'e', 00H, 'r', 00H, 'P', 00H, 'a', 00H, 'l', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG320305 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'v', 00H, 00H
	DB	00H
	ORG $+2
$SG323340 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323379 DB	'w', 00H, 'g', 00H, 'l', 00H, 'S', 00H, 'e', 00H, 't', 00H
	DB	'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'F', 00H, 'o'
	DB	00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 00H, 00H
$SG320270 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319289 DB	'glGetPixelMapusv', 00H
	ORG $+3
$SG319246 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322321 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'G', 00H
	DB	'e', 00H, 'n', 00H, 'f', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG321297 DB	'glReadBuffer', 00H
	ORG $+3
$SG318225 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG319293 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'P', 00H
	DB	'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 'p'
	DB	00H, 'u', 00H, 's', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG322322 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318269 DB	'glCopyTexImage1D', 00H
	ORG $+3
$SG318226 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321343 DB	'glRectd', 00H
$SG320319 DB	'g', 00H, 'l', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'x', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG321302 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318273 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, '1', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG319262 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321347 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'd', 00H, 00H, 00H
$SG320333 DB	'g', 00H, 'l', 00H, 'M', 00H, 'u', 00H, 'l', 00H, 't', 00H
	DB	'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x', 00H, 'd'
	DB	00H, 00H, 00H
$SG320288 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319309 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'P', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'v'
	DB	00H, 00H, 00H
$SG323362 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318243 DB	'glCopyPixels', 00H
	ORG $+3
$SG322357 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'G', 00H
	DB	'e', 00H, 'n', 00H, 'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG321359 DB	'glRectdv', 00H
	ORG $+3
$SG322340 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322385 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'I', 00H
	DB	'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '1', 00H, 'D', 00H, 00H
	DB	00H
	ORG $+2
$SG318248 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321323 DB	'glReadPixels', 00H
	ORG $+3
$SG320301 DB	'glMaterialiv', 00H
	ORG $+3
$SG320329 DB	'glMultMatrixd', 00H
	ORG $+2
$SG321363 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'd', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG319278 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319319 DB	'glGetPolygonStipple', 00H
$SG321328 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318297 DB	'glCopyTexImage2D', 00H
	ORG $+3
$SG320306 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320347 DB	'g', 00H, 'l', 00H, 'M', 00H, 'u', 00H, 'l', 00H, 't', 00H
	DB	'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x', 00H, 'f'
	DB	00H, 00H, 00H
$SG323380 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319323 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'P', 00H
	DB	'o', 00H, 'l', 00H, 'y', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'S'
	DB	00H, 't', 00H, 'i', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
$SG318301 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, '2', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG322358 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320315 DB	'glMatrixMode', 00H
	ORG $+3
$SG319305 DB	'glGetPointerv', 00H
	ORG $+2
$SG321379 DB	'glRectf', 00H
$SG319333 DB	'glGetString', 00H
$SG319294 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321383 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'f', 00H, 00H, 00H
$SG320359 DB	'glNewList', 00H
	ORG $+2
$SG320320 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319337 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG320363 DB	'g', 00H, 'l', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 00H, 00H
$SG318274 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322415 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'I', 00H
	DB	'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '2', 00H, 'D', 00H, 00H
	DB	00H
	ORG $+2
$SG321348 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322381 DB	'glTexImage1D', 00H
	ORG $+3
$SG320343 DB	'glMultMatrixf', 00H
	ORG $+2
$SG318321 DB	'glCopyTexSubImage1D', 00H
$SG320334 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321395 DB	'glRectfv', 00H
	ORG $+3
$SG319310 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318325 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'I'
	DB	00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '1', 00H, 'D', 00H
	DB	00H, 00H
$SG321399 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'f', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG322386 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320377 DB	'glNormal3b', 00H
	ORG $+1
$SG321364 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319355 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'E', 00H, 'n', 00H, 'v', 00H, 'f', 00H, 'v'
	DB	00H, 00H, 00H
$SG320348 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323453 DB	'g', 00H, 'd', 00H, 'i', 00H, '3', 00H, '2', 00H, '.', 00H
	DB	'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG319324 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322429 DB	'glTexParameterf', 00H
$SG323454 DB	'SwapBuffers', 00H
$SG318302 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322433 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'f', 00H, 00H, 00H
$SG320391 DB	'glNormal3bv', 00H
$SG321384 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321415 DB	'glRecti', 00H
$SG319373 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'E', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 'v'
	DB	00H, 00H, 00H
$SG319338 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322411 DB	'glTexImage2D', 00H
	ORG $+3
$SG319351 DB	'glGetTexEnvfv', 00H
	ORG $+2
$SG321419 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 00H, 00H
$SG318349 DB	'glCopyTexSubImage2D', 00H
$SG320364 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320395 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 'b', 00H, 'v', 00H, 00H, 00H
$SG322447 DB	'glTexParameterfv', 00H
	ORG $+3
$SG322416 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323470 DB	'wglSwapBuffers', 00H
	ORG $+1
$SG318353 DB	'g', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'I'
	DB	00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '2', 00H, 'D', 00H
	DB	00H, 00H
$SG322451 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'f', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG318326 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321431 DB	'glRectiv', 00H
	ORG $+3
$SG321400 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320409 DB	'glNormal3d', 00H
	ORG $+1
$SG319356 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320381 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG321435 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG320382 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318363 DB	'glCullFace', 00H
	ORG $+1
$SG322434 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319369 DB	'glGetTexEnviv', 00H
	ORG $+2
$SG319391 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG321420 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322465 DB	'glTexParameteri', 00H
$SG317348 DB	'\', 00H, 00H, 00H
$SG320396 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322469 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'i', 00H, 00H, 00H
$SG317349 DB	'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H
	DB	'3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG319374 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320423 DB	'glNormal3dv', 00H
$SG318354 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321451 DB	'glRects', 00H
$SG317358 DB	'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H
	DB	'3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG322452 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319387 DB	'glGetTexGendv', 00H
	ORG $+2
$SG320427 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 'd', 00H, 'v', 00H, 00H, 00H
$SG318383 DB	'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 'b', 00H, 'u', 00H
	DB	'g', 00H, 'E', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
	ORG $+2
$SG321436 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320413 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG321455 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	's', 00H, 00H, 00H
$SG319409 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'f', 00H, 'v'
	DB	00H, 00H, 00H
$SG320414 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318367 DB	'g', 00H, 'l', 00H, 'C', 00H, 'u', 00H, 'l', 00H, 'l', 00H
	DB	'F', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG324530 DB	'O', 00H, 'P', 00H, 'E', 00H, 'N', 00H, 'G', 00H, 'L', 00H
	DB	'3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG319392 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317362 DB	'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H
	DB	'3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG318368 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324531 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'G'
	DB	00H, 'L', 00H, 00H, 00H
$SG322483 DB	'glTexParameteriv', 00H
	ORG $+3
$SG322470 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG318379 DB	'glDebugEntry', 00H
	ORG $+3
$SG319405 DB	'glGetTexGenfv', 00H
	ORG $+2
$SG324533 DB	'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H
	DB	'3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG320428 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324534 DB	'wglSwapBuffers', 00H
	ORG $+1
$SG324535 DB	'glAccum', 00H
$SG323511 DB	'wglSwapLayerBuffers', 00H
$SG324526 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'A', 00H, 'd', 00H, 'd', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 'O', 00H, 'p'
	DB	00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, ' ', 00H, 'I', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'z', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	00H, 00H
$SG322487 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'i', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG324527 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H
	DB	'=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '='
	DB	00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H
	DB	'=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '='
	DB	00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H, '=', 00H
	DB	00H, 00H
$SG324536 DB	'glAlphaFunc', 00H
$SG321456 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320441 DB	'glNormal3f', 00H
	ORG $+1
$SG318384 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324538 DB	'glArrayElement', 00H
	ORG $+1
$SG324539 DB	'glBegin', 00H
$SG321467 DB	'glRectsv', 00H
	ORG $+3
$SG319410 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG323515 DB	'w', 00H, 'g', 00H, 'l', 00H, 'S', 00H, 'w', 00H, 'a', 00H
	DB	'p', 00H, 'L', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, 'B'
	DB	00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 's', 00H
	DB	00H, 00H
$SG324541 DB	'glBitmap', 00H
	ORG $+3
$SG322488 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324537 DB	'glAreTexturesResident', 00H
	ORG $+2
$SG318395 DB	'glDeleteLists', 00H
	ORG $+2
$SG324540 DB	'glBindTexture', 00H
	ORG $+2
$SG317373 DB	'glAccum', 00H
$SG324542 DB	'glBlendFunc', 00H
$SG323516 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG320445 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG324543 DB	'glCallList', 00H
	ORG $+1
$SG320446 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG321471 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	's', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG319423 DB	'glGetTexGeniv', 00H
	ORG $+2
$SG318399 DB	'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 's'
	DB	00H, 00H, 00H
$SG324544 DB	'glCallLists', 00H
$SG321472 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324545 DB	'glClear', 00H
$SG319427 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'i', 00H, 'v'
	DB	00H, 00H, 00H
$SG318400 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317377 DB	'g', 00H, 'l', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 00H, 00H
$SG324546 DB	'glClearAccum', 00H
	ORG $+3
$SG324550 DB	'glClearStencil', 00H
	ORG $+1
$SG324551 DB	'glClipPlane', 00H
$SG317378 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324547 DB	'glClearColor', 00H
	ORG $+3
$SG324548 DB	'glClearDepth', 00H
	ORG $+3
$SG320455 DB	'glNormal3fv', 00H
$SG319428 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324549 DB	'glClearIndex', 00H
	ORG $+3
$SG324552 DB	'glColor3b', 00H
	ORG $+2
$SG324553 DB	'glColor3bv', 00H
	ORG $+1
$SG321481 DB	'glRenderMode', 00H
	ORG $+3
$SG324554 DB	'glColor3d', 00H
	ORG $+2
$SG324555 DB	'glColor3dv', 00H
	ORG $+1
$SG320459 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 'f', 00H, 'v', 00H, 00H, 00H
$SG318411 DB	'glDeleteTextures', 00H
	ORG $+3
$SG324556 DB	'glColor3f', 00H
	ORG $+2
$SG324557 DB	'glColor3fv', 00H
	ORG $+1
$SG320460 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322509 DB	'glTexSubImage1D', 00H
$SG321485 DB	'g', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG317389 DB	'glAlphaFunc', 00H
$SG324558 DB	'glColor3i', 00H
	ORG $+2
$SG321486 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324559 DB	'glColor3iv', 00H
	ORG $+1
$SG318415 DB	'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG324560 DB	'glColor3s', 00H
	ORG $+2
$SG318416 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324561 DB	'glColor3sv', 00H
	ORG $+1
$SG322513 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'S', 00H
	DB	'u', 00H, 'b', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, '1', 00H, 'D', 00H, 00H, 00H
$SG317393 DB	'g', 00H, 'l', 00H, 'A', 00H, 'l', 00H, 'p', 00H, 'h', 00H
	DB	'a', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 00H, 00H
$SG324562 DB	'glColor3ub', 00H
	ORG $+1
$SG324563 DB	'glColor3ubv', 00H
$SG322514 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324564 DB	'glColor3ui', 00H
	ORG $+1
$SG317394 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324565 DB	'glColor3uiv', 00H
$SG319445 DB	'glGetTexImage', 00H
	ORG $+2
$SG324566 DB	'glColor3us', 00H
	ORG $+1
$SG324567 DB	'glColor3usv', 00H
$SG324568 DB	'glColor4b', 00H
	ORG $+2
$SG324569 DB	'glColor4bv', 00H
	ORG $+1
$SG320473 DB	'glNormal3i', 00H
	ORG $+1
$SG319449 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, 00H, 00H
$SG318425 DB	'glDepthFunc', 00H
$SG324570 DB	'glColor4d', 00H
	ORG $+2
$SG319450 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324571 DB	'glColor4dv', 00H
	ORG $+1
$SG324572 DB	'glColor4f', 00H
	ORG $+2
$SG324573 DB	'glColor4fv', 00H
	ORG $+1
$SG321501 DB	'glRotated', 00H
	ORG $+2
$SG320477 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG318429 DB	'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 'p', 00H, 't', 00H
	DB	'h', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 00H, 00H
$SG324574 DB	'glColor4i', 00H
	ORG $+2
$SG320478 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324575 DB	'glColor4iv', 00H
	ORG $+1
$SG318430 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317407 DB	'glAreTexturesResident', 00H
	ORG $+2
$SG324576 DB	'glColor4s', 00H
	ORG $+2
$SG324577 DB	'glColor4sv', 00H
	ORG $+1
$SG321505 DB	'g', 00H, 'l', 00H, 'R', 00H, 'o', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG324578 DB	'glColor4ub', 00H
	ORG $+1
$SG324579 DB	'glColor4ubv', 00H
$SG321506 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG317411 DB	'g', 00H, 'l', 00H, 'A', 00H, 'r', 00H, 'e', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 'R', 00H, 'e', 00H, 's', 00H, 'i', 00H, 'd', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 00H, 00H
$SG324580 DB	'glColor4ui', 00H
	ORG $+1
$SG324581 DB	'glColor4uiv', 00H
$SG317412 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324582 DB	'glColor4us', 00H
	ORG $+1
$SG324583 DB	'glColor4usv', 00H
$SG320487 DB	'glNormal3iv', 00H
$SG318439 DB	'glDepthMask', 00H
$SG324584 DB	'glColorMask', 00H
$SG324585 DB	'glColorMaterial', 00H
$SG319465 DB	'glGetTexLevelParameterfv', 00H
	ORG $+3
$SG324586 DB	'glColorPointer', 00H
	ORG $+1
$SG324587 DB	'glCopyPixels', 00H
	ORG $+3
$SG322539 DB	'glTexSubImage2D', 00H
$SG320491 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG318443 DB	'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 'p', 00H, 't', 00H
	DB	'h', 00H, 'M', 00H, 'a', 00H, 's', 00H, 'k', 00H, 00H, 00H
$SG324588 DB	'glCopyTexImage1D', 00H
	ORG $+3
$SG320492 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324589 DB	'glCopyTexImage2D', 00H
	ORG $+3
$SG318444 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG319469 DB	'g', 00H, 'l', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 'L', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l'
	DB	00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG317421 DB	'glArrayElement', 00H
	ORG $+1
$SG324590 DB	'glCopyTexSubImage1D', 00H
$SG324591 DB	'glCopyTexSubImage2D', 00H
$SG319470 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG322543 DB	'g', 00H, 'l', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'S', 00H
	DB	'u', 00H, 'b', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, '2', 00H, 'D', 00H, 00H, 00H
$SG324592 DB	'glCullFace', 00H
	ORG $+1
$SG322544 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324593 DB	'glDeleteLists', 00H
	ORG $+2
$SG321521 DB	'glRotatef', 00H
	ORG $+2
$SG317425 DB	'g', 00H, 'l', 00H, 'A', 00H, 'r', 00H, 'r', 00H, 'a', 00H
	DB	'y', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG324594 DB	'glDeleteTextures', 00H
	ORG $+3
$SG324595 DB	'glDepthFunc', 00H
$SG317426 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324596 DB	'glDepthMask', 00H
$SG324597 DB	'glDepthRange', 00H
	ORG $+3
$SG323573 DB	'wglUseFontOutlinesA', 00H
$SG321525 DB	'g', 00H, 'l', 00H, 'R', 00H, 'o', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'f', 00H, 00H, 00H
$SG324598 DB	'glDisable', 00H
	ORG $+2
$SG323577 DB	'w', 00H, 'g', 00H, 'l', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'l', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 's', 00H, 'A', 00H
	DB	00H, 00H
$SG320505 DB	'glNormal3s', 00H
	ORG $+1
$SG321526 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324599 DB	'glDisableClientState', 00H
	ORG $+3
$SG318455 DB	'glDepthRange', 00H
	ORG $+3
$SG324600 DB	'glDrawArrays', 00H
	ORG $+3
$SG324601 DB	'glDrawBuffer', 00H
	ORG $+3
$SG324602 DB	'glDrawElements', 00H
	ORG $+1
$SG318459 DB	'g', 00H, 'l', 00H, 'D', 00H, 'e', 00H, 'p', 00H, 't', 00H
	DB	'h', 00H, 'R', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG323578 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324603 DB	'glDrawPixels', 00H
	ORG $+3
$SG317435 DB	'glBegin', 00H
$SG324604 DB	'glEdgeFlag', 00H
	ORG $+1
$SG318460 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324605 DB	'glEdgeFlagPointer', 00H
	ORG $+2
$SG322557 DB	'glTranslated', 00H
	ORG $+3
$SG320509 DB	'g', 00H, 'l', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'l', 00H, '3', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG319485 DB	'glGetTexLevelParameteriv', 00H
	ORG $+3
$SG324606 DB	'glEdgeFlagv', 00H
$SG320510 DB	'[', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'G', 00H, 'L', 00H, '3', 00H, '2', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, ' ', 00H, ' ', 00H, '%'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'G', 00H, 'L', 00H, '3', 00H, '2'
	DB	00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG324607 DB	'glEnable', 00H
	ORG $+3
$SG317439 DB	'g', 00H, 'l', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	_ReadAcquire
PUBLIC	?_InterlockedCompareExchange@@YAKPCKKK@Z	; _InterlockedCompareExchange
PUBLIC	_wmemcpy
PUBLIC	_wmemmove
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?length@?$char_traits@_W@std@@SAIQB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?SK_GetCurrentGLContext@@YGPAUHGLRC__@@XZ	; SK_GetCurrentGLContext
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	?Startup@OpenGL@SK@@YA_NXZ			; SK::OpenGL::Startup
PUBLIC	?Shutdown@OpenGL@SK@@YA_NXZ			; SK::OpenGL::Shutdown
PUBLIC	?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; SK::OpenGL::getPipelineStatsDesc
PUBLIC	?WaitForInit_GL@@YAXXZ				; WaitForInit_GL
PUBLIC	?SK_GL_UpdateRenderStats@@YGXXZ			; SK_GL_UpdateRenderStats
PUBLIC	?SK_HookGL@@YGXXZ				; SK_HookGL
PUBLIC	?DXGI_Thread@@YGIPAX@Z				; DXGI_Thread
PUBLIC	??0?$AllocatedObject@V?$Size@M@CEGUI@@@CEGUI@@QAE@XZ ; CEGUI::AllocatedObject<CEGUI::Size<float> >::AllocatedObject<CEGUI::Size<float> >
PUBLIC	??0?$Size@M@CEGUI@@QAE@MM@Z			; CEGUI::Size<float>::Size<float>
PUBLIC	_glAccum@8
PUBLIC	_glAlphaFunc@8
PUBLIC	_glAreTexturesResident@12
PUBLIC	_glArrayElement@4
PUBLIC	_glBegin@4
PUBLIC	_glBindTexture@8
PUBLIC	_glBitmap@28
PUBLIC	_glBlendFunc@8
PUBLIC	_glCallList@4
PUBLIC	_glCallLists@12
PUBLIC	_glClear@4
PUBLIC	_glClearAccum@16
PUBLIC	_glClearColor@16
PUBLIC	_glClearDepth@8
PUBLIC	_glClearIndex@4
PUBLIC	_glClearStencil@4
PUBLIC	_glClipPlane@8
PUBLIC	_glColor3b@12
PUBLIC	_glColor3bv@4
PUBLIC	_glColor3d@24
PUBLIC	_glColor3dv@4
PUBLIC	_glColor3f@12
PUBLIC	_glColor3fv@4
PUBLIC	_glColor3i@12
PUBLIC	_glColor3iv@4
PUBLIC	_glColor3s@12
PUBLIC	_glColor3sv@4
PUBLIC	_glColor3ub@12
PUBLIC	_glColor3ubv@4
PUBLIC	_glColor3ui@12
PUBLIC	_glColor3uiv@4
PUBLIC	_glColor3us@12
PUBLIC	_glColor3usv@4
PUBLIC	_glColor4b@16
PUBLIC	_glColor4bv@4
PUBLIC	_glColor4d@32
PUBLIC	_glColor4dv@4
PUBLIC	_glColor4f@16
PUBLIC	_glColor4fv@4
PUBLIC	_glColor4i@16
PUBLIC	_glColor4iv@4
PUBLIC	_glColor4s@16
PUBLIC	_glColor4sv@4
PUBLIC	_glColor4ub@16
PUBLIC	_glColor4ubv@4
PUBLIC	_glColor4ui@16
PUBLIC	_glColor4uiv@4
PUBLIC	_glColor4us@16
PUBLIC	_glColor4usv@4
PUBLIC	_glColorMask@16
PUBLIC	_glColorMaterial@8
PUBLIC	_glColorPointer@16
PUBLIC	_glCopyPixels@20
PUBLIC	_glCopyTexImage1D@28
PUBLIC	_glCopyTexImage2D@32
PUBLIC	_glCopyTexSubImage1D@24
PUBLIC	_glCopyTexSubImage2D@32
PUBLIC	_glCullFace@4
PUBLIC	_glDeleteLists@8
PUBLIC	_glDeleteTextures@8
PUBLIC	_glDepthFunc@4
PUBLIC	_glDepthMask@4
PUBLIC	_glDepthRange@16
PUBLIC	_glDisable@4
PUBLIC	_glDisableClientState@4
PUBLIC	_glDrawArrays@12
PUBLIC	_glDrawBuffer@4
PUBLIC	_glDrawElements@16
PUBLIC	_glDrawPixels@20
PUBLIC	_glEdgeFlag@4
PUBLIC	_glEdgeFlagPointer@8
PUBLIC	_glEdgeFlagv@4
PUBLIC	_glEnable@4
PUBLIC	_glEnableClientState@4
PUBLIC	_glEnd@0
PUBLIC	_glEndList@0
PUBLIC	_glEvalCoord1d@8
PUBLIC	_glEvalCoord1dv@4
PUBLIC	_glEvalCoord1f@4
PUBLIC	_glEvalCoord1fv@4
PUBLIC	_glEvalCoord2d@16
PUBLIC	_glEvalCoord2dv@4
PUBLIC	_glEvalCoord2f@8
PUBLIC	_glEvalCoord2fv@4
PUBLIC	_glEvalMesh1@12
PUBLIC	_glEvalMesh2@20
PUBLIC	_glEvalPoint1@4
PUBLIC	_glEvalPoint2@8
PUBLIC	_glFeedbackBuffer@12
PUBLIC	_glFinish@0
PUBLIC	_glFlush@0
PUBLIC	_glFogf@8
PUBLIC	_glFogfv@8
PUBLIC	_glFogi@8
PUBLIC	_glFogiv@8
PUBLIC	_glFrontFace@4
PUBLIC	_glFrustum@48
PUBLIC	_glGenLists@4
PUBLIC	_glGenTextures@8
PUBLIC	_glGetBooleanv@8
PUBLIC	_glGetClipPlane@8
PUBLIC	_glGetDoublev@8
PUBLIC	_glGetError@0
PUBLIC	_glGetFloatv@8
PUBLIC	_glGetIntegerv@8
PUBLIC	_glGetLightfv@12
PUBLIC	_glGetLightiv@12
PUBLIC	_glGetMapdv@12
PUBLIC	_glGetMapfv@12
PUBLIC	_glGetMapiv@12
PUBLIC	_glGetMaterialfv@12
PUBLIC	_glGetMaterialiv@12
PUBLIC	_glGetPixelMapfv@8
PUBLIC	_glGetPixelMapuiv@8
PUBLIC	_glGetPixelMapusv@8
PUBLIC	_glGetPointerv@8
PUBLIC	_glGetPolygonStipple@4
PUBLIC	_glGetString@4
PUBLIC	_glGetTexEnvfv@12
PUBLIC	_glGetTexEnviv@12
PUBLIC	_glGetTexGendv@12
PUBLIC	_glGetTexGenfv@12
PUBLIC	_glGetTexGeniv@12
PUBLIC	_glGetTexImage@20
PUBLIC	_glGetTexLevelParameterfv@16
PUBLIC	_glGetTexLevelParameteriv@16
PUBLIC	_glGetTexParameterfv@12
PUBLIC	_glGetTexParameteriv@12
PUBLIC	_glHint@8
PUBLIC	_glIndexMask@4
PUBLIC	_glIndexPointer@12
PUBLIC	_glIndexd@8
PUBLIC	_glIndexdv@4
PUBLIC	_glIndexf@4
PUBLIC	_glIndexfv@4
PUBLIC	_glIndexi@4
PUBLIC	_glIndexiv@4
PUBLIC	_glIndexs@4
PUBLIC	_glIndexsv@4
PUBLIC	_glIndexub@4
PUBLIC	_glIndexubv@4
PUBLIC	_glInitNames@0
PUBLIC	_glInterleavedArrays@12
PUBLIC	_glIsEnabled@4
PUBLIC	_glIsList@4
PUBLIC	_glIsTexture@4
PUBLIC	_glLightModelf@8
PUBLIC	_glLightModelfv@8
PUBLIC	_glLightModeli@8
PUBLIC	_glLightModeliv@8
PUBLIC	_glLightf@12
PUBLIC	_glLightfv@12
PUBLIC	_glLighti@12
PUBLIC	_glLightiv@12
PUBLIC	_glLineStipple@8
PUBLIC	_glLineWidth@4
PUBLIC	_glListBase@4
PUBLIC	_glLoadIdentity@0
PUBLIC	_glLoadMatrixd@4
PUBLIC	_glLoadMatrixf@4
PUBLIC	_glLoadName@4
PUBLIC	_glLogicOp@4
PUBLIC	_glMap1d@32
PUBLIC	_glMap1f@24
PUBLIC	_glMap2d@56
PUBLIC	_glMap2f@40
PUBLIC	_glMapGrid1d@20
PUBLIC	_glMapGrid1f@12
PUBLIC	_glMapGrid2d@40
PUBLIC	_glMapGrid2f@24
PUBLIC	_glMaterialf@12
PUBLIC	_glMaterialfv@12
PUBLIC	_glMateriali@12
PUBLIC	_glMaterialiv@12
PUBLIC	_glMatrixMode@4
PUBLIC	_glMultMatrixd@4
PUBLIC	_glMultMatrixf@4
PUBLIC	_glNewList@8
PUBLIC	_glNormal3b@12
PUBLIC	_glNormal3bv@4
PUBLIC	_glNormal3d@24
PUBLIC	_glNormal3dv@4
PUBLIC	_glNormal3f@12
PUBLIC	_glNormal3fv@4
PUBLIC	_glNormal3i@12
PUBLIC	_glNormal3iv@4
PUBLIC	_glNormal3s@12
PUBLIC	_glNormal3sv@4
PUBLIC	_glNormalPointer@12
PUBLIC	_glOrtho@48
PUBLIC	_glPassThrough@4
PUBLIC	_glPixelMapfv@12
PUBLIC	_glPixelMapuiv@12
PUBLIC	_glPixelMapusv@12
PUBLIC	_glPixelStoref@8
PUBLIC	_glPixelStorei@8
PUBLIC	_glPixelTransferf@8
PUBLIC	_glPixelTransferi@8
PUBLIC	_glPixelZoom@8
PUBLIC	_glPointSize@4
PUBLIC	_glPolygonMode@8
PUBLIC	_glPolygonOffset@8
PUBLIC	_glPolygonStipple@4
PUBLIC	_glPopAttrib@0
PUBLIC	_glPopClientAttrib@0
PUBLIC	_glPopMatrix@0
PUBLIC	_glPopName@0
PUBLIC	_glPrioritizeTextures@12
PUBLIC	_glPushAttrib@4
PUBLIC	_glPushClientAttrib@4
PUBLIC	_glPushMatrix@0
PUBLIC	_glPushName@4
PUBLIC	_glRasterPos2d@16
PUBLIC	_glRasterPos2dv@4
PUBLIC	_glRasterPos2f@8
PUBLIC	_glRasterPos2fv@4
PUBLIC	_glRasterPos2i@8
PUBLIC	_glRasterPos2iv@4
PUBLIC	_glRasterPos2s@8
PUBLIC	_glRasterPos2sv@4
PUBLIC	_glRasterPos3d@24
PUBLIC	_glRasterPos3dv@4
PUBLIC	_glRasterPos3f@12
PUBLIC	_glRasterPos3fv@4
PUBLIC	_glRasterPos3i@12
PUBLIC	_glRasterPos3iv@4
PUBLIC	_glRasterPos3s@12
PUBLIC	_glRasterPos3sv@4
PUBLIC	_glRasterPos4d@32
PUBLIC	_glRasterPos4dv@4
PUBLIC	_glRasterPos4f@16
PUBLIC	_glRasterPos4fv@4
PUBLIC	_glRasterPos4i@16
PUBLIC	_glRasterPos4iv@4
PUBLIC	_glRasterPos4s@16
PUBLIC	_glRasterPos4sv@4
PUBLIC	_glReadBuffer@4
PUBLIC	_glReadPixels@28
PUBLIC	_glRectd@32
PUBLIC	_glRectdv@8
PUBLIC	_glRectf@16
PUBLIC	_glRectfv@8
PUBLIC	_glRecti@16
PUBLIC	_glRectiv@8
PUBLIC	_glRects@16
PUBLIC	_glRectsv@8
PUBLIC	_glRenderMode@4
PUBLIC	_glRotated@32
PUBLIC	_glRotatef@16
PUBLIC	_glScaled@24
PUBLIC	_glScalef@12
PUBLIC	_glScissor@16
PUBLIC	_glSelectBuffer@8
PUBLIC	_glShadeModel@4
PUBLIC	_glStencilFunc@12
PUBLIC	_glStencilMask@4
PUBLIC	_glStencilOp@12
PUBLIC	_glTexCoord1d@8
PUBLIC	_glTexCoord1dv@4
PUBLIC	_glTexCoord1f@4
PUBLIC	_glTexCoord1fv@4
PUBLIC	_glTexCoord1i@4
PUBLIC	_glTexCoord1iv@4
PUBLIC	_glTexCoord1s@4
PUBLIC	_glTexCoord1sv@4
PUBLIC	_glTexCoord2d@16
PUBLIC	_glTexCoord2dv@4
PUBLIC	_glTexCoord2f@8
PUBLIC	_glTexCoord2fv@4
PUBLIC	_glTexCoord2i@8
PUBLIC	_glTexCoord2iv@4
PUBLIC	_glTexCoord2s@8
PUBLIC	_glTexCoord2sv@4
PUBLIC	_glTexCoord3d@24
PUBLIC	_glTexCoord3dv@4
PUBLIC	_glTexCoord3f@12
PUBLIC	_glTexCoord3fv@4
PUBLIC	_glTexCoord3i@12
PUBLIC	_glTexCoord3iv@4
PUBLIC	_glTexCoord3s@12
PUBLIC	_glTexCoord3sv@4
PUBLIC	_glTexCoord4d@32
PUBLIC	_glTexCoord4dv@4
PUBLIC	_glTexCoord4f@16
PUBLIC	_glTexCoord4fv@4
PUBLIC	_glTexCoord4i@16
PUBLIC	_glTexCoord4iv@4
PUBLIC	_glTexCoord4s@16
PUBLIC	_glTexCoord4sv@4
PUBLIC	_glTexCoordPointer@16
PUBLIC	_glTexEnvf@12
PUBLIC	_glTexEnvfv@12
PUBLIC	_glTexEnvi@12
PUBLIC	_glTexEnviv@12
PUBLIC	_glTexGend@16
PUBLIC	_glTexGendv@12
PUBLIC	_glTexGenf@12
PUBLIC	_glTexGenfv@12
PUBLIC	_glTexGeni@12
PUBLIC	_glTexGeniv@12
PUBLIC	_glTexImage1D@32
PUBLIC	_glTexImage2D@36
PUBLIC	_glTexParameterf@12
PUBLIC	_glTexParameterfv@12
PUBLIC	_glTexParameteri@12
PUBLIC	_glTexParameteriv@12
PUBLIC	_glTexSubImage1D@28
PUBLIC	_glTexSubImage2D@36
PUBLIC	_glTranslated@24
PUBLIC	_glTranslatef@12
PUBLIC	_glVertex2d@16
PUBLIC	_glVertex2dv@4
PUBLIC	_glVertex2f@8
PUBLIC	_glVertex2fv@4
PUBLIC	_glVertex2i@8
PUBLIC	_glVertex2iv@4
PUBLIC	_glVertex2s@8
PUBLIC	_glVertex2sv@4
PUBLIC	_glVertex3d@24
PUBLIC	_glVertex3dv@4
PUBLIC	_glVertex3f@12
PUBLIC	_glVertex3fv@4
PUBLIC	_glVertex3i@12
PUBLIC	_glVertex3iv@4
PUBLIC	_glVertex3s@12
PUBLIC	_glVertex3sv@4
PUBLIC	_glVertex4d@32
PUBLIC	_glVertex4dv@4
PUBLIC	_glVertex4f@16
PUBLIC	_glVertex4fv@4
PUBLIC	_glVertex4i@16
PUBLIC	_glVertex4iv@4
PUBLIC	_glVertex4s@16
PUBLIC	_glVertex4sv@4
PUBLIC	_glVertexPointer@16
PUBLIC	_glViewport@16
PUBLIC	?ResetCEGUI_GL@@YAXXZ				; ResetCEGUI_GL
PUBLIC	_SwapBuffers@4
PUBLIC	_wglSwapBuffers@4
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate
PUBLIC	?deallocate@?$allocator@PAK@std@@QAEXPAPAKI@Z	; std::allocator<unsigned long *>::deallocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEXPAPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long *> >::deallocate
PUBLIC	?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEII@Z ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getblock
PUBLIC	??0?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::~_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
PUBLIC	?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all
PUBLIC	?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
PUBLIC	?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data
PUBLIC	?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data
PUBLIC	?_Map@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAPAKXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Map
PUBLIC	?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mapsize
PUBLIC	?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff
PUBLIC	?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize
PUBLIC	?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize
PUBLIC	??0?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Deque_val<std::_Deque_simple_types<unsigned long> >
PUBLIC	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Getblock
PUBLIC	??1?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::~_Deque_val<std::_Deque_simple_types<unsigned long> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>
PUBLIC	??0?$deque@KV?$allocator@K@std@@@std@@QAE@XZ	; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
PUBLIC	??1?$deque@KV?$allocator@K@std@@@std@@QAE@XZ	; std::deque<unsigned long,std::allocator<unsigned long> >::~deque<unsigned long,std::allocator<unsigned long> >
PUBLIC	?empty@?$deque@KV?$allocator@K@std@@@std@@QBE_NXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::empty
PUBLIC	?pop_back@?$deque@KV?$allocator@K@std@@@std@@QAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::pop_back
PUBLIC	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
PUBLIC	??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??1?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::~queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
PUBLIC	_opengl_init_callback@4
PUBLIC	?SK_LoadRealGL@@YAPAUHINSTANCE__@@XZ		; SK_LoadRealGL
PUBLIC	?SK_FreeRealGL@@YAXXZ				; SK_FreeRealGL
PUBLIC	_glDebugEntry@8
PUBLIC	_wglCopyContext@12
PUBLIC	_wglCreateContext@4
PUBLIC	_wglCreateLayerContext@8
PUBLIC	_wglDeleteContext@4
PUBLIC	_wglGetCurrentContext@0
PUBLIC	_wglGetCurrentDC@0
PUBLIC	_wglGetProcAddress@4
PUBLIC	_wglMakeCurrent@8
PUBLIC	_wglShareLists@8
PUBLIC	_wglUseFontBitmapsA@16
PUBLIC	_wglUseFontBitmapsW@16
PUBLIC	_wglChoosePixelFormat@8
PUBLIC	_wglDescribeLayerPlane@20
PUBLIC	_wglDescribePixelFormat@16
PUBLIC	_wglGetLayerPaletteEntries@20
PUBLIC	_wglGetPixelFormat@24
PUBLIC	_wglRealizeLayerPalette@12
PUBLIC	_wglSetLayerPaletteEntries@20
PUBLIC	_wglSetPixelFormat@12
PUBLIC	_SK_CEGUI_DrawGL
PUBLIC	_wglSwapMultipleBuffers@8
PUBLIC	_wglSwapLayerBuffers@8
PUBLIC	_wglUseFontOutlinesA@32
PUBLIC	_wglUseFontOutlinesW@32
PUBLIC	?Init@GLPerf@@YA_NXZ				; GLPerf::Init
PUBLIC	??0PipelineQuery@GLPerf@@QAE@PB_WI@Z		; GLPerf::PipelineQuery::PipelineQuery
PUBLIC	?beginQuery@PipelineQuery@GLPerf@@QAEXXZ	; GLPerf::PipelineQuery::beginQuery
PUBLIC	?endQuery@PipelineQuery@GLPerf@@QAEXXZ		; GLPerf::PipelineQuery::endQuery
PUBLIC	?isFinished@PipelineQuery@GLPerf@@QAEEXZ	; GLPerf::PipelineQuery::isFinished
PUBLIC	?isReady@PipelineQuery@GLPerf@@QAEEXZ		; GLPerf::PipelineQuery::isReady
PUBLIC	?isActive@PipelineQuery@GLPerf@@QAEEXZ		; GLPerf::PipelineQuery::isActive
PUBLIC	?getResulIfFinished@PipelineQuery@GLPerf@@QAEEPA_K@Z ; GLPerf::PipelineQuery::getResulIfFinished
PUBLIC	?getResult@PipelineQuery@GLPerf@@QAEXPA_K@Z	; GLPerf::PipelineQuery::getResult
PUBLIC	?getLastResult@PipelineQuery@GLPerf@@QAE_KXZ	; GLPerf::PipelineQuery::getLastResult
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHDC__@@@Z@@YAPAPAXPAP6GHPAUHDC__@@@Z@Z ; static_cast_p2p<void,int __stdcall(HDC__ *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIM@Z@@YAPAPAXPAP6GXIM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,float)>
PUBLIC	??$static_cast_p2p@X$$A6GEHPBIPAE@Z@@YAPAPAXPAP6GEHPBIPAE@Z@Z ; static_cast_p2p<void,unsigned char __stdcall(int,unsigned int const *,unsigned char *)>
PUBLIC	??$static_cast_p2p@X$$A6GXH@Z@@YAPAPAXPAP6GXH@Z@Z ; static_cast_p2p<void,void __stdcall(int)>
PUBLIC	??$static_cast_p2p@X$$A6GXI@Z@@YAPAPAXPAP6GXI@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXII@Z@@YAPAPAXPAP6GXII@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXHHMMMMPBE@Z@@YAPAPAXPAP6GXHHMMMMPBE@Z@Z ; static_cast_p2p<void,void __stdcall(int,int,float,float,float,float,unsigned char const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXHIPBX@Z@@YAPAPAXPAP6GXHIPBX@Z@Z ; static_cast_p2p<void,void __stdcall(int,unsigned int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXMMMM@Z@@YAPAPAXPAP6GXMMMM@Z@Z ; static_cast_p2p<void,void __stdcall(float,float,float,float)>
PUBLIC	??$static_cast_p2p@X$$A6GXN@Z@@YAPAPAXPAP6GXN@Z@Z ; static_cast_p2p<void,void __stdcall(double)>
PUBLIC	??$static_cast_p2p@X$$A6GXM@Z@@YAPAPAXPAP6GXM@Z@Z ; static_cast_p2p<void,void __stdcall(float)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPBN@Z@@YAPAPAXPAP6GXIPBN@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,double const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXCCC@Z@@YAPAPAXPAP6GXCCC@Z@Z ; static_cast_p2p<void,void __stdcall(signed char,signed char,signed char)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBC@Z@@YAPAPAXPAP6GXPBC@Z@Z ; static_cast_p2p<void,void __stdcall(signed char const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXNNN@Z@@YAPAPAXPAP6GXNNN@Z@Z ; static_cast_p2p<void,void __stdcall(double,double,double)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBN@Z@@YAPAPAXPAP6GXPBN@Z@Z ; static_cast_p2p<void,void __stdcall(double const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXMMM@Z@@YAPAPAXPAP6GXMMM@Z@Z ; static_cast_p2p<void,void __stdcall(float,float,float)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBM@Z@@YAPAPAXPAP6GXPBM@Z@Z ; static_cast_p2p<void,void __stdcall(float const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXHHH@Z@@YAPAPAXPAP6GXHHH@Z@Z ; static_cast_p2p<void,void __stdcall(int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBH@Z@@YAPAPAXPAP6GXPBH@Z@Z ; static_cast_p2p<void,void __stdcall(int const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXFFF@Z@@YAPAPAXPAP6GXFFF@Z@Z ; static_cast_p2p<void,void __stdcall(short,short,short)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBF@Z@@YAPAPAXPAP6GXPBF@Z@Z ; static_cast_p2p<void,void __stdcall(short const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXEEE@Z@@YAPAPAXPAP6GXEEE@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned char,unsigned char,unsigned char)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBE@Z@@YAPAPAXPAP6GXPBE@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned char const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIII@Z@@YAPAPAXPAP6GXIII@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBI@Z@@YAPAPAXPAP6GXPBI@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXGGG@Z@@YAPAPAXPAP6GXGGG@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned short,unsigned short,unsigned short)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBG@Z@@YAPAPAXPAP6GXPBG@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned short const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXCCCC@Z@@YAPAPAXPAP6GXCCCC@Z@Z ; static_cast_p2p<void,void __stdcall(signed char,signed char,signed char,signed char)>
PUBLIC	??$static_cast_p2p@X$$A6GXNNNN@Z@@YAPAPAXPAP6GXNNNN@Z@Z ; static_cast_p2p<void,void __stdcall(double,double,double,double)>
PUBLIC	??$static_cast_p2p@X$$A6GXHHHH@Z@@YAPAPAXPAP6GXHHHH@Z@Z ; static_cast_p2p<void,void __stdcall(int,int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXFFFF@Z@@YAPAPAXPAP6GXFFFF@Z@Z ; static_cast_p2p<void,void __stdcall(short,short,short,short)>
PUBLIC	??$static_cast_p2p@X$$A6GXEEEE@Z@@YAPAPAXPAP6GXEEEE@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned char,unsigned char,unsigned char,unsigned char)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIII@Z@@YAPAPAXPAP6GXIIII@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,unsigned int,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXGGGG@Z@@YAPAPAXPAP6GXGGGG@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned short,unsigned short,unsigned short,unsigned short)>
PUBLIC	??$static_cast_p2p@X$$A6GXHIHPBX@Z@@YAPAPAXPAP6GXHIHPBX@Z@Z ; static_cast_p2p<void,void __stdcall(int,unsigned int,int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXHHHHI@Z@@YAPAPAXPAP6GXHHHHI@Z@Z ; static_cast_p2p<void,void __stdcall(int,int,int,int,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHIHHHH@Z@@YAPAPAXPAP6GXIHIHHHH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int,int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHIHHHHH@Z@@YAPAPAXPAP6GXIHIHHHHH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int,int,int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHHHHH@Z@@YAPAPAXPAP6GXIHHHHH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHHHHHHH@Z@@YAPAPAXPAP6GXIHHHHHHH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIH@Z@@YAPAPAXPAP6GXIH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXHPBI@Z@@YAPAPAXPAP6GXHPBI@Z@Z ; static_cast_p2p<void,void __stdcall(int,unsigned int const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXE@Z@@YAPAPAXPAP6GXE@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned char)>
PUBLIC	??$static_cast_p2p@X$$A6GXNN@Z@@YAPAPAXPAP6GXNN@Z@Z ; static_cast_p2p<void,void __stdcall(double,double)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHH@Z@@YAPAPAXPAP6GXIHH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHIPBX@Z@@YAPAPAXPAP6GXIHIPBX@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXHHIIPBX@Z@@YAPAPAXPAP6GXHHIIPBX@Z@Z ; static_cast_p2p<void,void __stdcall(int,int,unsigned int,unsigned int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXHPBX@Z@@YAPAPAXPAP6GXHPBX@Z@Z ; static_cast_p2p<void,void __stdcall(int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXXZ@@YAPAPAXPAP6GXXZ@Z	; static_cast_p2p<void,void __stdcall(void)>
PUBLIC	??$static_cast_p2p@X$$A6GXMM@Z@@YAPAPAXPAP6GXMM@Z@Z ; static_cast_p2p<void,void __stdcall(float,float)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHHHH@Z@@YAPAPAXPAP6GXIHHHH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXHH@Z@@YAPAPAXPAP6GXHH@Z@Z ; static_cast_p2p<void,void __stdcall(int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXHIPAM@Z@@YAPAPAXPAP6GXHIPAM@Z@Z ; static_cast_p2p<void,void __stdcall(int,unsigned int,float *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPBM@Z@@YAPAPAXPAP6GXIPBM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,float const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPBH@Z@@YAPAPAXPAP6GXIPBH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXNNNNNN@Z@@YAPAPAXPAP6GXNNNNNN@Z@Z ; static_cast_p2p<void,void __stdcall(double,double,double,double,double,double)>
PUBLIC	??$static_cast_p2p@X$$A6GIH@Z@@YAPAPAXPAP6GIH@Z@Z ; static_cast_p2p<void,unsigned int __stdcall(int)>
PUBLIC	??$static_cast_p2p@X$$A6GXHPAI@Z@@YAPAPAXPAP6GXHPAI@Z@Z ; static_cast_p2p<void,void __stdcall(int,unsigned int *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPAE@Z@@YAPAPAXPAP6GXIPAE@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned char *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPAN@Z@@YAPAPAXPAP6GXIPAN@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,double *)>
PUBLIC	??$static_cast_p2p@X$$A6GIXZ@@YAPAPAXPAP6GIXZ@Z	; static_cast_p2p<void,unsigned int __stdcall(void)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPAM@Z@@YAPAPAXPAP6GXIPAM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,float *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPAH@Z@@YAPAPAXPAP6GXIPAH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIPAM@Z@@YAPAPAXPAP6GXIIPAM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIPAH@Z@@YAPAPAXPAP6GXIIPAH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIPAN@Z@@YAPAPAXPAP6GXIIPAN@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPAI@Z@@YAPAPAXPAP6GXIPAI@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPAG@Z@@YAPAPAXPAP6GXIPAG@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned short *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIPAPAX@Z@@YAPAPAXPAP6GXIPAPAX@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,void * *)>
PUBLIC	??$static_cast_p2p@X$$A6GXPAE@Z@@YAPAPAXPAP6GXPAE@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned char *)>
PUBLIC	??$static_cast_p2p@X$$A6GPBEI@Z@@YAPAPAXPAP6GPBEI@Z@Z ; static_cast_p2p<void,unsigned char const * __stdcall(unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHIIPAX@Z@@YAPAPAXPAP6GXIHIIPAX@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,unsigned int,void *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHIPAM@Z@@YAPAPAXPAP6GXIHIPAM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,float *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHIPAH@Z@@YAPAPAXPAP6GXIHIPAH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHPBX@Z@@YAPAPAXPAP6GXIHPBX@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXF@Z@@YAPAPAXPAP6GXF@Z@Z ; static_cast_p2p<void,void __stdcall(short)>
PUBLIC	??$static_cast_p2p@X$$A6GEI@Z@@YAPAPAXPAP6GEI@Z@Z ; static_cast_p2p<void,unsigned char __stdcall(unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIM@Z@@YAPAPAXPAP6GXIIM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIPBM@Z@@YAPAPAXPAP6GXIIPBM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIH@Z@@YAPAPAXPAP6GXIIH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIPBH@Z@@YAPAPAXPAP6GXIIPBH@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXHG@Z@@YAPAPAXPAP6GXHG@Z@Z ; static_cast_p2p<void,void __stdcall(int,unsigned short)>
PUBLIC	??$static_cast_p2p@X$$A6GXINNHHPBN@Z@@YAPAPAXPAP6GXINNHHPBN@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,double,double,int,int,double const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIMMHHPBM@Z@@YAPAPAXPAP6GXIMMHHPBM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,float,float,int,int,float const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXINNHHNNHHPBN@Z@@YAPAPAXPAP6GXINNHHNNHHPBN@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,double,double,int,int,double,double,int,int,double const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIMMHHMMHHPBM@Z@@YAPAPAXPAP6GXIMMHHMMHHPBM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,float,float,int,int,float,float,int,int,float const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXHNN@Z@@YAPAPAXPAP6GXHNN@Z@Z ; static_cast_p2p<void,void __stdcall(int,double,double)>
PUBLIC	??$static_cast_p2p@X$$A6GXHMM@Z@@YAPAPAXPAP6GXHMM@Z@Z ; static_cast_p2p<void,void __stdcall(int,float,float)>
PUBLIC	??$static_cast_p2p@X$$A6GXHNNHNN@Z@@YAPAPAXPAP6GXHNNHNN@Z@Z ; static_cast_p2p<void,void __stdcall(int,double,double,int,double,double)>
PUBLIC	??$static_cast_p2p@X$$A6GXHMMHMM@Z@@YAPAPAXPAP6GXHMMHMM@Z@Z ; static_cast_p2p<void,void __stdcall(int,float,float,int,float,float)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHPBM@Z@@YAPAPAXPAP6GXIHPBM@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,float const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHPBI@Z@@YAPAPAXPAP6GXIHPBI@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHPBG@Z@@YAPAPAXPAP6GXIHPBG@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned short const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXHPBIPBM@Z@@YAPAPAXPAP6GXHPBIPBM@Z@Z ; static_cast_p2p<void,void __stdcall(int,unsigned int const *,float const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXFF@Z@@YAPAPAXPAP6GXFF@Z@Z ; static_cast_p2p<void,void __stdcall(short,short)>
PUBLIC	??$static_cast_p2p@X$$A6GXHHHHIIPAX@Z@@YAPAPAXPAP6GXHHHHIIPAX@Z@Z ; static_cast_p2p<void,void __stdcall(int,int,int,int,unsigned int,unsigned int,void *)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBN0@Z@@YAPAPAXPAP6GXPBN0@Z@Z ; static_cast_p2p<void,void __stdcall(double const *,double const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBM0@Z@@YAPAPAXPAP6GXPBM0@Z@Z ; static_cast_p2p<void,void __stdcall(float const *,float const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBH0@Z@@YAPAPAXPAP6GXPBH0@Z@Z ; static_cast_p2p<void,void __stdcall(int const *,int const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXPBF0@Z@@YAPAPAXPAP6GXPBF0@Z@Z ; static_cast_p2p<void,void __stdcall(short const *,short const *)>
PUBLIC	??$static_cast_p2p@X$$A6GHI@Z@@YAPAPAXPAP6GHI@Z@Z ; static_cast_p2p<void,int __stdcall(unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHI@Z@@YAPAPAXPAP6GXIHI@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIN@Z@@YAPAPAXPAP6GXIIN@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double)>
PUBLIC	??$static_cast_p2p@X$$A6GXIIPBN@Z@@YAPAPAXPAP6GXIIPBN@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHHIIPBX@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,unsigned int,unsigned int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHHHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHHHIIPBX@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int,unsigned int,unsigned int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GXIHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHIIPBX@Z@Z ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,unsigned int,unsigned int,void const *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHGLRC__@@0I@Z@@YAPAPAXPAP6GHPAUHGLRC__@@0I@Z@Z ; static_cast_p2p<void,int __stdcall(HGLRC__ *,HGLRC__ *,unsigned int)>
PUBLIC	??$static_cast_p2p@X$$A6GPAUHGLRC__@@PAUHDC__@@H@Z@@YAPAPAXPAP6GPAUHGLRC__@@PAUHDC__@@H@Z@Z ; static_cast_p2p<void,HGLRC__ * __stdcall(HDC__ *,int)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHGLRC__@@@Z@@YAPAPAXPAP6GHPAUHGLRC__@@@Z@Z ; static_cast_p2p<void,int __stdcall(HGLRC__ *)>
PUBLIC	??$static_cast_p2p@X$$A6GPAUHGLRC__@@XZ@@YAPAPAXPAP6GPAUHGLRC__@@XZ@Z ; static_cast_p2p<void,HGLRC__ * __stdcall(void)>
PUBLIC	??$static_cast_p2p@X$$A6GPAUHDC__@@XZ@@YAPAPAXPAP6GPAUHDC__@@XZ@Z ; static_cast_p2p<void,HDC__ * __stdcall(void)>
PUBLIC	??$static_cast_p2p@X$$A6GP6GHXZPBD@Z@@YAPAPAXPAP6GP6GHXZPBD@Z@Z ; static_cast_p2p<void,int (__stdcall*__stdcall(char const *))(void)>
PUBLIC	??$static_cast_p2p@X$$A6GPAUHGLRC__@@PAUHDC__@@@Z@@YAPAPAXPAP6GPAUHGLRC__@@PAUHDC__@@@Z@Z ; static_cast_p2p<void,HGLRC__ * __stdcall(HDC__ *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHDC__@@PBUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@PBUtagPIXELFORMATDESCRIPTOR@@@Z@Z ; static_cast_p2p<void,int __stdcall(HDC__ *,tagPIXELFORMATDESCRIPTOR const *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHDC__@@PAUHGLRC__@@@Z@@YAPAPAXPAP6GHPAUHDC__@@PAUHGLRC__@@@Z@Z ; static_cast_p2p<void,int __stdcall(HDC__ *,HGLRC__ *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHGLRC__@@0@Z@@YAPAPAXPAP6GHPAUHGLRC__@@0@Z@Z ; static_cast_p2p<void,int __stdcall(HGLRC__ *,HGLRC__ *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHDC__@@KKK@Z@@YAPAPAXPAP6GHPAUHDC__@@KKK@Z@Z ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHDC__@@KKIPAUtagLAYERPLANEDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@KKIPAUtagLAYERPLANEDESCRIPTOR@@@Z@Z ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned int,tagLAYERPLANEDESCRIPTOR *)>
PUBLIC	??$static_cast_p2p@X$$A6GKPAUHDC__@@KIPAUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GKPAUHDC__@@KIPAUtagPIXELFORMATDESCRIPTOR@@@Z@Z ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned int,tagPIXELFORMATDESCRIPTOR *)>
PUBLIC	??$static_cast_p2p@X$$A6GKPAUHDC__@@KKKPAK@Z@@YAPAPAXPAP6GKPAUHDC__@@KKKPAK@Z@Z ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long,unsigned long *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHDC__@@KKIPAK1@Z@@YAPAPAXPAP6GHPAUHDC__@@KKIPAK1@Z@Z ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned int,unsigned long *,unsigned long *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHDC__@@KH@Z@@YAPAPAXPAP6GHPAUHDC__@@KH@Z@Z ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,int)>
PUBLIC	??$static_cast_p2p@X$$A6GKPAUHDC__@@KKKPBK@Z@@YAPAPAXPAP6GKPAUHDC__@@KKKPBK@Z@Z ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long,unsigned long const *)>
PUBLIC	??$static_cast_p2p@X$$A6GHPAUHDC__@@KPBUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@KPBUtagPIXELFORMATDESCRIPTOR@@@Z@Z ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,tagPIXELFORMATDESCRIPTOR const *)>
PUBLIC	??$static_cast_p2p@X$$A6GKIPBU_WGLSWAP@@@Z@@YAPAPAXPAP6GKIPBU_WGLSWAP@@@Z@Z ; static_cast_p2p<void,unsigned long __stdcall(unsigned int,_WGLSWAP const *)>
PUBLIC	??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<unsigned long *> >::_Wrap_alloc<std::allocator<unsigned long *> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
PUBLIC	??$addressof@PAK@std@@YAPAPAKAAPAK@Z		; std::addressof<unsigned long *>
PUBLIC	??$destroy@PAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAPAK@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long *>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z		; std::addressof<wchar_t *>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><>
PUBLIC	??$_Unfancy@K@std@@YAPAKPAK@Z			; std::_Unfancy<unsigned long>
PUBLIC	??$destroy@K@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAK@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long>
PUBLIC	??$_Unfancy@_W@std@@YAPA_WPA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ; std::pointer_traits<std::_Container_proxy *>::pointer_to
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$addressof@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@AAV10@@Z ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >
PUBLIC	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > &>
PUBLIC	??$?0K@?$allocator@PAK@std@@QAE@ABV?$allocator@K@1@@Z ; std::allocator<unsigned long *>::allocator<unsigned long *><unsigned long>
PUBLIC	??$destroy@PAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAPAK@Z ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long *>
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$destroy@K@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAK@Z ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z		; std::forward<wchar_t * &>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PAK@?$allocator@K@std@@QAEXPAPAK@Z	; std::allocator<unsigned long>::destroy<unsigned long *>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$destroy@K@?$allocator@K@std@@QAEXPAK@Z	; std::allocator<unsigned long>::destroy<unsigned long>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	__real@42c80000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__GetSystemDirectoryW@8:PROC
EXTRN	__imp__IsWow64Process@8:PROC
EXTRN	__imp__GetModuleHandleExW@12:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__lstrcatW@8:PROC
EXTRN	__imp__GetSystemWow64DirectoryW@8:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__MsgWaitForMultipleObjectsEx@20:PROC
EXTRN	__imp__WindowFromDC@4:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__swprintf:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	?SK_StartupCore@@YG_NPB_WPAX@Z:PROC		; SK_StartupCore
EXTRN	?SK_ShutdownCore@@YG_NPB_W@Z:PROC		; SK_ShutdownCore
EXTRN	?SK_BeginBufferSwap@@YGXXZ:PROC			; SK_BeginBufferSwap
EXTRN	?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z:PROC	; SK_EndBufferSwap
EXTRN	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ:PROC		; SK_GetDLL
EXTRN	?SK_IsInjected@@YG_N_N@Z:PROC			; SK_IsInjected
EXTRN	?SK_GetFramesDrawn@@YGKXZ:PROC			; SK_GetFramesDrawn
EXTRN	__imp__CoUninitialize@0:PROC
EXTRN	__imp__CoInitializeEx@8:PROC
EXTRN	__imp__StrStrIW@8:PROC
EXTRN	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ:PROC ; SK_GetCurrentRenderBackend
EXTRN	?SK_BootOpenGL@@YAXXZ:PROC			; SK_BootOpenGL
EXTRN	?SK_GetModuleName@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAUHINSTANCE__@@@Z:PROC ; SK_GetModuleName
EXTRN	?StartBudgetThread_NoAdapter@DXGI@SK@@YAJXZ:PROC ; SK::DXGI::StartBudgetThread_NoAdapter
EXTRN	?SK_InstallWindowHook@@YAXPAUHWND__@@@Z:PROC	; SK_InstallWindowHook
EXTRN	?Log@iSK_Logger@@UAAXQB_WZZ:PROC		; iSK_Logger::Log
EXTRN	?SK_LoadPlugIns32@@YAXXZ:PROC			; SK_LoadPlugIns32
EXTRN	_MH_ApplyQueued@0:PROC
EXTRN	?SK_CreateDLLHook@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z:PROC ; SK_CreateDLLHook
EXTRN	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z:PROC ; SK_CreateDLLHook2
EXTRN	?ImGui_ImplGL3_Init@@YA_NXZ:PROC		; ImGui_ImplGL3_Init
EXTRN	?SK_Steam_DrawOSD@@YAXXZ:PROC			; SK_Steam_DrawOSD
EXTRN	?SK_ImGui_DrawFrame@@YAKKPAX@Z:PROC		; SK_ImGui_DrawFrame
EXTRN	?getInstance@SK_TextOverlayManager@@SAPAV1@XZ:PROC ; SK_TextOverlayManager::getInstance
EXTRN	?resetAllOverlays@SK_TextOverlayManager@@QAEXPAVRenderer@CEGUI@@@Z:PROC ; SK_TextOverlayManager::resetAllOverlays
EXTRN	?drawAllOverlays@SK_TextOverlayManager@@QAEMMM_N@Z:PROC ; SK_TextOverlayManager::drawAllOverlays
EXTRN	__imp_?getDllSingleton@?$Singleton@VSystem@CEGUI@@@CEGUI@@SAAAVSystem@2@XZ:PROC
EXTRN	__imp_?renderAllGUIContexts@System@CEGUI@@QAEXXZ:PROC
EXTRN	__imp_?getDllSingleton@?$Singleton@VWindowManager@CEGUI@@@CEGUI@@SAAAVWindowManager@2@XZ:PROC
EXTRN	__imp_?cleanDeadPool@WindowManager@CEGUI@@QAEXXZ:PROC
EXTRN	?getInstance@SK_PopupManager@@SAPAV1@XZ:PROC	; SK_PopupManager::getInstance
EXTRN	?destroyAllPopups@SK_PopupManager@@QAEXXZ:PROC	; SK_PopupManager::destroyAllPopups
EXTRN	_glewInit:PROC
EXTRN	__imp_?enableExtraStateSettings@OpenGLRendererBase@CEGUI@@QAEX_N@Z:PROC
EXTRN	__imp_?bootstrapSystem@OpenGL3Renderer@CEGUI@@SAAAV12@H@Z:PROC
EXTRN	__imp_?destroySystem@OpenGL3Renderer@CEGUI@@SAXXZ:PROC
EXTRN	?SK_CEGUI_RelocateLog@@YAXXZ:PROC		; SK_CEGUI_RelocateLog
EXTRN	?SK_CEGUI_InitBase@@YAXXZ:PROC			; SK_CEGUI_InitBase
EXTRN	?SK_Steam_ClearPopups@@YAXXZ:PROC		; SK_Steam_ClearPopups
EXTRN	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z:PROC ; SK_CountToString
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ultod3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?backend_dll@@3PAUHINSTANCE__@@A:DWORD		; backend_dll
EXTRN	?hWndRender@@3PAUHWND__@@A:DWORD		; hWndRender
EXTRN	?game_window@@3Usk_window_s@@A:BYTE		; game_window
EXTRN	?dll_log@@3UiSK_Logger@@A:BYTE			; dll_log
EXTRN	?FreeLibrary_Original@@3P6GHPAUHINSTANCE__@@@ZA:DWORD ; FreeLibrary_Original
EXTRN	?LoadLibraryW_Original@@3P6GPAUHINSTANCE__@@PB_W@ZA:DWORD ; LoadLibraryW_Original
EXTRN	?config@@3Usk_config_t@@A:BYTE			; config
EXTRN	___glewActiveTexture:DWORD
EXTRN	___glewBeginQuery:DWORD
EXTRN	___glewDeleteQueries:DWORD
EXTRN	___glewEndQuery:DWORD
EXTRN	___glewGenQueries:DWORD
EXTRN	___glewGetQueryObjectiv:DWORD
EXTRN	___glewIsQuery:DWORD
EXTRN	___glewBlendEquationSeparate:DWORD
EXTRN	___glewUseProgram:DWORD
EXTRN	___glewBindFramebuffer:DWORD
EXTRN	___glewGetQueryObjecti64v:DWORD
EXTRN	___glewGetQueryObjectui64v:DWORD
EXTRN	___glewQueryCounter:DWORD
EXTRN	___glewBeginQueryIndexed:DWORD
EXTRN	___glewBindVertexArray:DWORD
EXTRN	___glewGenVertexArrays:DWORD
EXTRN	___glewIsVertexArray:DWORD
EXTRN	_glewExperimental:BYTE
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
_old_threads DB	014H DUP (?)
_BSS	ENDS
;	COMDAT ?last_hwnd@?1??SK_CEGUI_DrawGL@@9@4PAUHWND__@@A
_BSS	SEGMENT
?last_hwnd@?1??SK_CEGUI_DrawGL@@9@4PAUHWND__@@A DD 01H DUP (?) ; `SK_CEGUI_DrawGL'::`2'::last_hwnd
_BSS	ENDS
;	COMDAT ?$TSS0@?1??SK_CEGUI_DrawGL@@9@4HA
_BSS	SEGMENT
?$TSS0@?1??SK_CEGUI_DrawGL@@9@4HA DD 01H DUP (?)	; TSS0<`template-parameter-2',UNKNOWN volatile * const volatile,unsigned char,unsigned short,I_DrawGL>
_BSS	ENDS
;	COMDAT ?rect@?P@??SK_CEGUI_DrawGL@@9@4UtagRECT@@A
_BSS	SEGMENT
?rect@?P@??SK_CEGUI_DrawGL@@9@4UtagRECT@@A DB 010H DUP (?) ; `SK_CEGUI_DrawGL'::`15'::rect
_BSS	ENDS
;	COMDAT ?ceGL_VAO@?P@??SK_CEGUI_DrawGL@@9@4IA
_BSS	SEGMENT
?ceGL_VAO@?P@??SK_CEGUI_DrawGL@@9@4IA DD 01H DUP (?)	; `SK_CEGUI_DrawGL'::`15'::ceGL_VAO
_BSS	ENDS
;	COMDAT ?init@?1??SK_GL_UpdateRenderStats@@YGXXZ@4_NA
_BSS	SEGMENT
?init@?1??SK_GL_UpdateRenderStats@@YGXXZ@4_NA DB 01H DUP (?) ; `SK_GL_UpdateRenderStats'::`2'::init
_BSS	ENDS
;	COMDAT ?hooked@?1??SK_HookGL@@YGXXZ@4KC
_BSS	SEGMENT
?hooked@?1??SK_HookGL@@YGXXZ@4KC DD 01H DUP (?)		; `SK_HookGL'::`2'::hooked
_BSS	ENDS
CRT$XCU	SEGMENT
?old_threads$initializer$@@3P6AXXZA DD FLAT:??__Eold_threads@@YAXXZ ; old_threads$initializer$
CRT$XCU	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ?szName@?4??wglUseFontOutlinesW@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??wglUseFontOutlinesW@@9@32@4PBDB DD FLAT:$SG323601 ; `wglUseFontOutlinesW'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglUseFontOutlinesA@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??wglUseFontOutlinesA@@9@32@4PBDB DD FLAT:$SG323573 ; `wglUseFontOutlinesA'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglSwapLayerBuffers@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??wglSwapLayerBuffers@@9@8@4PBDB DD FLAT:$SG323511 ; `wglSwapLayerBuffers'::`5'::szName
_DATA	ENDS
;	COMDAT ?first@?9??wglSwapBuffers@@9@4@4_NA
_DATA	SEGMENT
?first@?9??wglSwapBuffers@@9@4@4_NA DB 01H		; `wglSwapBuffers'::`10'::first
_DATA	ENDS
;	COMDAT ?first@?9??SwapBuffers@@9@4@4_NA
_DATA	SEGMENT
?first@?9??SwapBuffers@@9@4@4_NA DB 01H			; `SwapBuffers'::`10'::first
_DATA	ENDS
;	COMDAT ?szName@?4??wglSetPixelFormat@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??wglSetPixelFormat@@9@12@4PBDB DD FLAT:$SG323375 ; `wglSetPixelFormat'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglSetLayerPaletteEntries@@9@20@4PBDB
_DATA	SEGMENT
?szName@?4??wglSetLayerPaletteEntries@@9@20@4PBDB DD FLAT:$SG323357 ; `wglSetLayerPaletteEntries'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglRealizeLayerPalette@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??wglRealizeLayerPalette@@9@12@4PBDB DD FLAT:$SG323335 ; `wglRealizeLayerPalette'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglGetPixelFormat@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??wglGetPixelFormat@@9@24@4PBDB DD FLAT:$SG323317 ; `wglGetPixelFormat'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglGetLayerPaletteEntries@@9@20@4PBDB
_DATA	SEGMENT
?szName@?4??wglGetLayerPaletteEntries@@9@20@4PBDB DD FLAT:$SG323293 ; `wglGetLayerPaletteEntries'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglDescribePixelFormat@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??wglDescribePixelFormat@@9@16@4PBDB DD FLAT:$SG323271 ; `wglDescribePixelFormat'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglDescribeLayerPlane@@9@20@4PBDB
_DATA	SEGMENT
?szName@?4??wglDescribeLayerPlane@@9@20@4PBDB DD FLAT:$SG323251 ; `wglDescribeLayerPlane'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglChoosePixelFormat@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??wglChoosePixelFormat@@9@8@4PBDB DD FLAT:$SG323191 ; `wglChoosePixelFormat'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglUseFontBitmapsW@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??wglUseFontBitmapsW@@9@16@4PBDB DD FLAT:$SG323175 ; `wglUseFontBitmapsW'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglUseFontBitmapsA@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??wglUseFontBitmapsA@@9@16@4PBDB DD FLAT:$SG323155 ; `wglUseFontBitmapsA'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglShareLists@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??wglShareLists@@9@8@4PBDB DD FLAT:$SG323135	; `wglShareLists'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglMakeCurrent@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??wglMakeCurrent@@9@8@4PBDB DD FLAT:$SG323119	; `wglMakeCurrent'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglGetProcAddress@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??wglGetProcAddress@@9@4@4PBDB DD FLAT:$SG323103 ; `wglGetProcAddress'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglGetCurrentDC@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??wglGetCurrentDC@@9@0@4PBDB DD FLAT:$SG323089 ; `wglGetCurrentDC'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglGetCurrentContext@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??wglGetCurrentContext@@9@0@4PBDB DD FLAT:$SG323075 ; `wglGetCurrentContext'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglDeleteContext@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??wglDeleteContext@@9@4@4PBDB DD FLAT:$SG323061 ; `wglDeleteContext'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglCreateLayerContext@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??wglCreateLayerContext@@9@8@4PBDB DD FLAT:$SG323047 ; `wglCreateLayerContext'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglCreateContext@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??wglCreateContext@@9@4@4PBDB DD FLAT:$SG323031 ; `wglCreateContext'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??wglCopyContext@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??wglCopyContext@@9@12@4PBDB DD FLAT:$SG323017 ; `wglCopyContext'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glViewport@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glViewport@@9@16@4PBDB DD FLAT:$SG322999	; `glViewport'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertexPointer@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glVertexPointer@@9@16@4PBDB DD FLAT:$SG322979 ; `glVertexPointer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex4sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex4sv@@9@4@4PBDB DD FLAT:$SG322959	; `glVertex4sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex4s@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex4s@@9@16@4PBDB DD FLAT:$SG322945	; `glVertex4s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex4iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex4iv@@9@4@4PBDB DD FLAT:$SG322925	; `glVertex4iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex4i@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex4i@@9@16@4PBDB DD FLAT:$SG322911	; `glVertex4i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex4fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex4fv@@9@4@4PBDB DD FLAT:$SG322891	; `glVertex4fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex4f@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex4f@@9@16@4PBDB DD FLAT:$SG322877	; `glVertex4f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex4dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex4dv@@9@4@4PBDB DD FLAT:$SG322857	; `glVertex4dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex4d@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex4d@@9@32@4PBDB DD FLAT:$SG322843	; `glVertex4d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex3sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex3sv@@9@4@4PBDB DD FLAT:$SG322823	; `glVertex3sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex3s@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex3s@@9@12@4PBDB DD FLAT:$SG322809	; `glVertex3s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex3iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex3iv@@9@4@4PBDB DD FLAT:$SG322791	; `glVertex3iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex3i@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex3i@@9@12@4PBDB DD FLAT:$SG322777	; `glVertex3i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex3fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex3fv@@9@4@4PBDB DD FLAT:$SG322759	; `glVertex3fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex3f@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex3f@@9@12@4PBDB DD FLAT:$SG322745	; `glVertex3f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex3dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex3dv@@9@4@4PBDB DD FLAT:$SG322727	; `glVertex3dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex3d@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex3d@@9@24@4PBDB DD FLAT:$SG322713	; `glVertex3d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex2sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex2sv@@9@4@4PBDB DD FLAT:$SG322695	; `glVertex2sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex2s@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex2s@@9@8@4PBDB DD FLAT:$SG322681	; `glVertex2s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex2iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex2iv@@9@4@4PBDB DD FLAT:$SG322665	; `glVertex2iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex2i@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex2i@@9@8@4PBDB DD FLAT:$SG322651	; `glVertex2i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex2fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex2fv@@9@4@4PBDB DD FLAT:$SG322635	; `glVertex2fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex2f@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex2f@@9@8@4PBDB DD FLAT:$SG322621	; `glVertex2f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex2dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex2dv@@9@4@4PBDB DD FLAT:$SG322605	; `glVertex2dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glVertex2d@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glVertex2d@@9@16@4PBDB DD FLAT:$SG322591	; `glVertex2d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTranslatef@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTranslatef@@9@12@4PBDB DD FLAT:$SG322575	; `glTranslatef'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTranslated@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glTranslated@@9@24@4PBDB DD FLAT:$SG322557	; `glTranslated'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexSubImage2D@@9@36@4PBDB
_DATA	SEGMENT
?szName@?4??glTexSubImage2D@@9@36@4PBDB DD FLAT:$SG322539 ; `glTexSubImage2D'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexSubImage1D@@9@28@4PBDB
_DATA	SEGMENT
?szName@?4??glTexSubImage1D@@9@28@4PBDB DD FLAT:$SG322509 ; `glTexSubImage1D'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexParameteriv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexParameteriv@@9@12@4PBDB DD FLAT:$SG322483 ; `glTexParameteriv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexParameteri@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexParameteri@@9@12@4PBDB DD FLAT:$SG322465 ; `glTexParameteri'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexParameterfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexParameterfv@@9@12@4PBDB DD FLAT:$SG322447 ; `glTexParameterfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexParameterf@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexParameterf@@9@12@4PBDB DD FLAT:$SG322429 ; `glTexParameterf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexImage2D@@9@36@4PBDB
_DATA	SEGMENT
?szName@?4??glTexImage2D@@9@36@4PBDB DD FLAT:$SG322411	; `glTexImage2D'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexImage1D@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glTexImage1D@@9@32@4PBDB DD FLAT:$SG322381	; `glTexImage1D'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexGeniv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexGeniv@@9@12@4PBDB DD FLAT:$SG322353	; `glTexGeniv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexGeni@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexGeni@@9@12@4PBDB DD FLAT:$SG322335	; `glTexGeni'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexGenfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexGenfv@@9@12@4PBDB DD FLAT:$SG322317	; `glTexGenfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexGenf@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexGenf@@9@12@4PBDB DD FLAT:$SG322299	; `glTexGenf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexGendv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexGendv@@9@12@4PBDB DD FLAT:$SG322281	; `glTexGendv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexGend@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glTexGend@@9@16@4PBDB DD FLAT:$SG322263	; `glTexGend'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexEnviv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexEnviv@@9@12@4PBDB DD FLAT:$SG322245	; `glTexEnviv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexEnvi@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexEnvi@@9@12@4PBDB DD FLAT:$SG322227	; `glTexEnvi'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexEnvfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexEnvfv@@9@12@4PBDB DD FLAT:$SG322209	; `glTexEnvfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexEnvf@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexEnvf@@9@12@4PBDB DD FLAT:$SG322191	; `glTexEnvf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoordPointer@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoordPointer@@9@16@4PBDB DD FLAT:$SG322173 ; `glTexCoordPointer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord4sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord4sv@@9@4@4PBDB DD FLAT:$SG322153	; `glTexCoord4sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord4s@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord4s@@9@16@4PBDB DD FLAT:$SG322139	; `glTexCoord4s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord4iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord4iv@@9@4@4PBDB DD FLAT:$SG322119	; `glTexCoord4iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord4i@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord4i@@9@16@4PBDB DD FLAT:$SG322105	; `glTexCoord4i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord4fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord4fv@@9@4@4PBDB DD FLAT:$SG322085	; `glTexCoord4fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord4f@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord4f@@9@16@4PBDB DD FLAT:$SG322071	; `glTexCoord4f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord4dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord4dv@@9@4@4PBDB DD FLAT:$SG322051	; `glTexCoord4dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord4d@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord4d@@9@32@4PBDB DD FLAT:$SG322037	; `glTexCoord4d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord3sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord3sv@@9@4@4PBDB DD FLAT:$SG322017	; `glTexCoord3sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord3s@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord3s@@9@12@4PBDB DD FLAT:$SG322003	; `glTexCoord3s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord3iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord3iv@@9@4@4PBDB DD FLAT:$SG321985	; `glTexCoord3iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord3i@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord3i@@9@12@4PBDB DD FLAT:$SG321971	; `glTexCoord3i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord3fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord3fv@@9@4@4PBDB DD FLAT:$SG321953	; `glTexCoord3fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord3f@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord3f@@9@12@4PBDB DD FLAT:$SG321939	; `glTexCoord3f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord3dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord3dv@@9@4@4PBDB DD FLAT:$SG321921	; `glTexCoord3dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord3d@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord3d@@9@24@4PBDB DD FLAT:$SG321907	; `glTexCoord3d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord2sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord2sv@@9@4@4PBDB DD FLAT:$SG321889	; `glTexCoord2sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord2s@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord2s@@9@8@4PBDB DD FLAT:$SG321875	; `glTexCoord2s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord2iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord2iv@@9@4@4PBDB DD FLAT:$SG321859	; `glTexCoord2iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord2i@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord2i@@9@8@4PBDB DD FLAT:$SG321845	; `glTexCoord2i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord2fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord2fv@@9@4@4PBDB DD FLAT:$SG321829	; `glTexCoord2fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord2f@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord2f@@9@8@4PBDB DD FLAT:$SG321815	; `glTexCoord2f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord2dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord2dv@@9@4@4PBDB DD FLAT:$SG321799	; `glTexCoord2dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord2d@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord2d@@9@16@4PBDB DD FLAT:$SG321785	; `glTexCoord2d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord1sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord1sv@@9@4@4PBDB DD FLAT:$SG321769	; `glTexCoord1sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord1s@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord1s@@9@4@4PBDB DD FLAT:$SG321755	; `glTexCoord1s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord1iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord1iv@@9@4@4PBDB DD FLAT:$SG321741	; `glTexCoord1iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord1i@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord1i@@9@4@4PBDB DD FLAT:$SG321727	; `glTexCoord1i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord1fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord1fv@@9@4@4PBDB DD FLAT:$SG321713	; `glTexCoord1fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord1f@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord1f@@9@4@4PBDB DD FLAT:$SG321699	; `glTexCoord1f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord1dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord1dv@@9@4@4PBDB DD FLAT:$SG321685	; `glTexCoord1dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glTexCoord1d@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glTexCoord1d@@9@8@4PBDB DD FLAT:$SG321671	; `glTexCoord1d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glStencilOp@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glStencilOp@@9@12@4PBDB DD FLAT:$SG321657	; `glStencilOp'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glStencilMask@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glStencilMask@@9@4@4PBDB DD FLAT:$SG321639	; `glStencilMask'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glStencilFunc@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glStencilFunc@@9@12@4PBDB DD FLAT:$SG321625	; `glStencilFunc'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glShadeModel@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glShadeModel@@9@4@4PBDB DD FLAT:$SG321607	; `glShadeModel'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glSelectBuffer@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glSelectBuffer@@9@8@4PBDB DD FLAT:$SG321593	; `glSelectBuffer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glScissor@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glScissor@@9@16@4PBDB DD FLAT:$SG321577	; `glScissor'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glScalef@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glScalef@@9@12@4PBDB DD FLAT:$SG321557	; `glScalef'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glScaled@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glScaled@@9@24@4PBDB DD FLAT:$SG321539	; `glScaled'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRotatef@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glRotatef@@9@16@4PBDB DD FLAT:$SG321521	; `glRotatef'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRotated@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glRotated@@9@32@4PBDB DD FLAT:$SG321501	; `glRotated'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRenderMode@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRenderMode@@9@4@4PBDB DD FLAT:$SG321481	; `glRenderMode'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRectsv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glRectsv@@9@8@4PBDB DD FLAT:$SG321467	; `glRectsv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRects@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glRects@@9@16@4PBDB DD FLAT:$SG321451	; `glRects'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRectiv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glRectiv@@9@8@4PBDB DD FLAT:$SG321431	; `glRectiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRecti@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glRecti@@9@16@4PBDB DD FLAT:$SG321415	; `glRecti'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRectfv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glRectfv@@9@8@4PBDB DD FLAT:$SG321395	; `glRectfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRectf@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glRectf@@9@16@4PBDB DD FLAT:$SG321379	; `glRectf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRectdv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glRectdv@@9@8@4PBDB DD FLAT:$SG321359	; `glRectdv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRectd@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glRectd@@9@32@4PBDB DD FLAT:$SG321343	; `glRectd'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glReadPixels@@9@28@4PBDB
_DATA	SEGMENT
?szName@?4??glReadPixels@@9@28@4PBDB DD FLAT:$SG321323	; `glReadPixels'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glReadBuffer@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glReadBuffer@@9@4@4PBDB DD FLAT:$SG321297	; `glReadBuffer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos4sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos4sv@@9@4@4PBDB DD FLAT:$SG321283	; `glRasterPos4sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos4s@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos4s@@9@16@4PBDB DD FLAT:$SG321269	; `glRasterPos4s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos4iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos4iv@@9@4@4PBDB DD FLAT:$SG321249	; `glRasterPos4iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos4i@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos4i@@9@16@4PBDB DD FLAT:$SG321235	; `glRasterPos4i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos4fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos4fv@@9@4@4PBDB DD FLAT:$SG321215	; `glRasterPos4fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos4f@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos4f@@9@16@4PBDB DD FLAT:$SG321201	; `glRasterPos4f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos4dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos4dv@@9@4@4PBDB DD FLAT:$SG321181	; `glRasterPos4dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos4d@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos4d@@9@32@4PBDB DD FLAT:$SG321167	; `glRasterPos4d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos3sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos3sv@@9@4@4PBDB DD FLAT:$SG321147	; `glRasterPos3sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos3s@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos3s@@9@12@4PBDB DD FLAT:$SG321133	; `glRasterPos3s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos3iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos3iv@@9@4@4PBDB DD FLAT:$SG321115	; `glRasterPos3iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos3i@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos3i@@9@12@4PBDB DD FLAT:$SG321101	; `glRasterPos3i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos3fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos3fv@@9@4@4PBDB DD FLAT:$SG321083	; `glRasterPos3fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos3f@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos3f@@9@12@4PBDB DD FLAT:$SG321069	; `glRasterPos3f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos3dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos3dv@@9@4@4PBDB DD FLAT:$SG321051	; `glRasterPos3dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos3d@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos3d@@9@24@4PBDB DD FLAT:$SG321037	; `glRasterPos3d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos2sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos2sv@@9@4@4PBDB DD FLAT:$SG321019	; `glRasterPos2sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos2s@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos2s@@9@8@4PBDB DD FLAT:$SG321005	; `glRasterPos2s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos2iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos2iv@@9@4@4PBDB DD FLAT:$SG320989	; `glRasterPos2iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos2i@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos2i@@9@8@4PBDB DD FLAT:$SG320975	; `glRasterPos2i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos2fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos2fv@@9@4@4PBDB DD FLAT:$SG320959	; `glRasterPos2fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos2f@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos2f@@9@8@4PBDB DD FLAT:$SG320945	; `glRasterPos2f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos2dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos2dv@@9@4@4PBDB DD FLAT:$SG320929	; `glRasterPos2dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glRasterPos2d@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glRasterPos2d@@9@16@4PBDB DD FLAT:$SG320915	; `glRasterPos2d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPushName@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glPushName@@9@4@4PBDB DD FLAT:$SG320899	; `glPushName'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPushMatrix@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glPushMatrix@@9@0@4PBDB DD FLAT:$SG320885	; `glPushMatrix'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPushClientAttrib@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glPushClientAttrib@@9@4@4PBDB DD FLAT:$SG320871 ; `glPushClientAttrib'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPushAttrib@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glPushAttrib@@9@4@4PBDB DD FLAT:$SG320857	; `glPushAttrib'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPrioritizeTextures@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glPrioritizeTextures@@9@12@4PBDB DD FLAT:$SG320843 ; `glPrioritizeTextures'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPopName@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glPopName@@9@0@4PBDB DD FLAT:$SG320825	; `glPopName'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPopMatrix@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glPopMatrix@@9@0@4PBDB DD FLAT:$SG320811	; `glPopMatrix'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPopClientAttrib@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glPopClientAttrib@@9@0@4PBDB DD FLAT:$SG320797 ; `glPopClientAttrib'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPopAttrib@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glPopAttrib@@9@0@4PBDB DD FLAT:$SG320783	; `glPopAttrib'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPolygonStipple@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glPolygonStipple@@9@4@4PBDB DD FLAT:$SG320769 ; `glPolygonStipple'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPolygonOffset@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glPolygonOffset@@9@8@4PBDB DD FLAT:$SG320755 ; `glPolygonOffset'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPolygonMode@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glPolygonMode@@9@8@4PBDB DD FLAT:$SG320739	; `glPolygonMode'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPointSize@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glPointSize@@9@4@4PBDB DD FLAT:$SG320723	; `glPointSize'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPixelZoom@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glPixelZoom@@9@8@4PBDB DD FLAT:$SG320709	; `glPixelZoom'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPixelTransferi@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glPixelTransferi@@9@8@4PBDB DD FLAT:$SG320693 ; `glPixelTransferi'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPixelTransferf@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glPixelTransferf@@9@8@4PBDB DD FLAT:$SG320677 ; `glPixelTransferf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPixelStorei@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glPixelStorei@@9@8@4PBDB DD FLAT:$SG320661	; `glPixelStorei'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPixelStoref@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glPixelStoref@@9@8@4PBDB DD FLAT:$SG320645	; `glPixelStoref'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPixelMapusv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glPixelMapusv@@9@12@4PBDB DD FLAT:$SG320629	; `glPixelMapusv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPixelMapuiv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glPixelMapuiv@@9@12@4PBDB DD FLAT:$SG320611	; `glPixelMapuiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPixelMapfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glPixelMapfv@@9@12@4PBDB DD FLAT:$SG320593	; `glPixelMapfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glPassThrough@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glPassThrough@@9@4@4PBDB DD FLAT:$SG320575	; `glPassThrough'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glOrtho@@9@48@4PBDB
_DATA	SEGMENT
?szName@?4??glOrtho@@9@48@4PBDB DD FLAT:$SG320561	; `glOrtho'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormalPointer@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glNormalPointer@@9@12@4PBDB DD FLAT:$SG320537 ; `glNormalPointer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3sv@@9@4@4PBDB DD FLAT:$SG320519	; `glNormal3sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3s@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3s@@9@12@4PBDB DD FLAT:$SG320505	; `glNormal3s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3iv@@9@4@4PBDB DD FLAT:$SG320487	; `glNormal3iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3i@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3i@@9@12@4PBDB DD FLAT:$SG320473	; `glNormal3i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3fv@@9@4@4PBDB DD FLAT:$SG320455	; `glNormal3fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3f@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3f@@9@12@4PBDB DD FLAT:$SG320441	; `glNormal3f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3dv@@9@4@4PBDB DD FLAT:$SG320423	; `glNormal3dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3d@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3d@@9@24@4PBDB DD FLAT:$SG320409	; `glNormal3d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3bv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3bv@@9@4@4PBDB DD FLAT:$SG320391	; `glNormal3bv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNormal3b@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glNormal3b@@9@12@4PBDB DD FLAT:$SG320377	; `glNormal3b'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glNewList@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glNewList@@9@8@4PBDB DD FLAT:$SG320359	; `glNewList'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMultMatrixf@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glMultMatrixf@@9@4@4PBDB DD FLAT:$SG320343	; `glMultMatrixf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMultMatrixd@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glMultMatrixd@@9@4@4PBDB DD FLAT:$SG320329	; `glMultMatrixd'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMatrixMode@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glMatrixMode@@9@4@4PBDB DD FLAT:$SG320315	; `glMatrixMode'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMaterialiv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glMaterialiv@@9@12@4PBDB DD FLAT:$SG320301	; `glMaterialiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMateriali@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glMateriali@@9@12@4PBDB DD FLAT:$SG320283	; `glMateriali'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMaterialfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glMaterialfv@@9@12@4PBDB DD FLAT:$SG320265	; `glMaterialfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMaterialf@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glMaterialf@@9@12@4PBDB DD FLAT:$SG320247	; `glMaterialf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMapGrid2f@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glMapGrid2f@@9@24@4PBDB DD FLAT:$SG320229	; `glMapGrid2f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMapGrid2d@@9@40@4PBDB
_DATA	SEGMENT
?szName@?4??glMapGrid2d@@9@40@4PBDB DD FLAT:$SG320205	; `glMapGrid2d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMapGrid1f@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glMapGrid1f@@9@12@4PBDB DD FLAT:$SG320181	; `glMapGrid1f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMapGrid1d@@9@20@4PBDB
_DATA	SEGMENT
?szName@?4??glMapGrid1d@@9@20@4PBDB DD FLAT:$SG320163	; `glMapGrid1d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMap2f@@9@40@4PBDB
_DATA	SEGMENT
?szName@?4??glMap2f@@9@40@4PBDB DD FLAT:$SG320145	; `glMap2f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMap2d@@9@56@4PBDB
_DATA	SEGMENT
?szName@?4??glMap2d@@9@56@4PBDB DD FLAT:$SG320113	; `glMap2d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMap1f@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glMap1f@@9@24@4PBDB DD FLAT:$SG320081	; `glMap1f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glMap1d@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glMap1d@@9@32@4PBDB DD FLAT:$SG320057	; `glMap1d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLogicOp@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glLogicOp@@9@4@4PBDB DD FLAT:$SG320033	; `glLogicOp'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLoadName@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glLoadName@@9@4@4PBDB DD FLAT:$SG320019	; `glLoadName'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLoadMatrixf@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glLoadMatrixf@@9@4@4PBDB DD FLAT:$SG320005	; `glLoadMatrixf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLoadMatrixd@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glLoadMatrixd@@9@4@4PBDB DD FLAT:$SG319991	; `glLoadMatrixd'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLoadIdentity@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glLoadIdentity@@9@0@4PBDB DD FLAT:$SG319977	; `glLoadIdentity'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glListBase@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glListBase@@9@4@4PBDB DD FLAT:$SG319963	; `glListBase'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLineWidth@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glLineWidth@@9@4@4PBDB DD FLAT:$SG319949	; `glLineWidth'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLineStipple@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glLineStipple@@9@8@4PBDB DD FLAT:$SG319935	; `glLineStipple'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLightiv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glLightiv@@9@12@4PBDB DD FLAT:$SG319919	; `glLightiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLighti@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glLighti@@9@12@4PBDB DD FLAT:$SG319901	; `glLighti'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLightfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glLightfv@@9@12@4PBDB DD FLAT:$SG319883	; `glLightfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLightf@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glLightf@@9@12@4PBDB DD FLAT:$SG319865	; `glLightf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLightModeliv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glLightModeliv@@9@8@4PBDB DD FLAT:$SG319847	; `glLightModeliv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLightModeli@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glLightModeli@@9@8@4PBDB DD FLAT:$SG319831	; `glLightModeli'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLightModelfv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glLightModelfv@@9@8@4PBDB DD FLAT:$SG319815	; `glLightModelfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glLightModelf@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glLightModelf@@9@8@4PBDB DD FLAT:$SG319799	; `glLightModelf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIsTexture@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIsTexture@@9@4@4PBDB DD FLAT:$SG319783	; `glIsTexture'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIsList@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIsList@@9@4@4PBDB DD FLAT:$SG319769	; `glIsList'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIsEnabled@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIsEnabled@@9@4@4PBDB DD FLAT:$SG319755	; `glIsEnabled'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glInterleavedArrays@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glInterleavedArrays@@9@12@4PBDB DD FLAT:$SG319741 ; `glInterleavedArrays'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glInitNames@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glInitNames@@9@0@4PBDB DD FLAT:$SG319723	; `glInitNames'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexubv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexubv@@9@4@4PBDB DD FLAT:$SG319709	; `glIndexubv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexub@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexub@@9@4@4PBDB DD FLAT:$SG319695	; `glIndexub'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexsv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexsv@@9@4@4PBDB DD FLAT:$SG319681	; `glIndexsv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexs@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexs@@9@4@4PBDB DD FLAT:$SG319667	; `glIndexs'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexiv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexiv@@9@4@4PBDB DD FLAT:$SG319653	; `glIndexiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexi@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexi@@9@4@4PBDB DD FLAT:$SG319639	; `glIndexi'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexfv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexfv@@9@4@4PBDB DD FLAT:$SG319625	; `glIndexfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexf@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexf@@9@4@4PBDB DD FLAT:$SG319611	; `glIndexf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexdv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexdv@@9@4@4PBDB DD FLAT:$SG319597	; `glIndexdv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexd@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexd@@9@8@4PBDB DD FLAT:$SG319583	; `glIndexd'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexPointer@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexPointer@@9@12@4PBDB DD FLAT:$SG319569 ; `glIndexPointer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glIndexMask@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glIndexMask@@9@4@4PBDB DD FLAT:$SG319551	; `glIndexMask'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glHint@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glHint@@9@8@4PBDB DD FLAT:$SG319537		; `glHint'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexParameteriv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexParameteriv@@9@12@4PBDB DD FLAT:$SG319521 ; `glGetTexParameteriv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexParameterfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexParameterfv@@9@12@4PBDB DD FLAT:$SG319503 ; `glGetTexParameterfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexLevelParameteriv@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexLevelParameteriv@@9@16@4PBDB DD FLAT:$SG319485 ; `glGetTexLevelParameteriv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexLevelParameterfv@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexLevelParameterfv@@9@16@4PBDB DD FLAT:$SG319465 ; `glGetTexLevelParameterfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexImage@@9@20@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexImage@@9@20@4PBDB DD FLAT:$SG319445	; `glGetTexImage'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexGeniv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexGeniv@@9@12@4PBDB DD FLAT:$SG319423	; `glGetTexGeniv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexGenfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexGenfv@@9@12@4PBDB DD FLAT:$SG319405	; `glGetTexGenfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexGendv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexGendv@@9@12@4PBDB DD FLAT:$SG319387	; `glGetTexGendv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexEnviv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexEnviv@@9@12@4PBDB DD FLAT:$SG319369	; `glGetTexEnviv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetTexEnvfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetTexEnvfv@@9@12@4PBDB DD FLAT:$SG319351	; `glGetTexEnvfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetString@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glGetString@@9@4@4PBDB DD FLAT:$SG319333	; `glGetString'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetPolygonStipple@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glGetPolygonStipple@@9@4@4PBDB DD FLAT:$SG319319 ; `glGetPolygonStipple'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetPointerv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetPointerv@@9@8@4PBDB DD FLAT:$SG319305	; `glGetPointerv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetPixelMapusv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetPixelMapusv@@9@8@4PBDB DD FLAT:$SG319289 ; `glGetPixelMapusv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetPixelMapuiv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetPixelMapuiv@@9@8@4PBDB DD FLAT:$SG319273 ; `glGetPixelMapuiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetPixelMapfv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetPixelMapfv@@9@8@4PBDB DD FLAT:$SG319257 ; `glGetPixelMapfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetMaterialiv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetMaterialiv@@9@12@4PBDB DD FLAT:$SG319241 ; `glGetMaterialiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetMaterialfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetMaterialfv@@9@12@4PBDB DD FLAT:$SG319223 ; `glGetMaterialfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetMapiv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetMapiv@@9@12@4PBDB DD FLAT:$SG319205	; `glGetMapiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetMapfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetMapfv@@9@12@4PBDB DD FLAT:$SG319187	; `glGetMapfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetMapdv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetMapdv@@9@12@4PBDB DD FLAT:$SG319169	; `glGetMapdv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetLightiv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetLightiv@@9@12@4PBDB DD FLAT:$SG319151	; `glGetLightiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetLightfv@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glGetLightfv@@9@12@4PBDB DD FLAT:$SG319133	; `glGetLightfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetIntegerv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetIntegerv@@9@8@4PBDB DD FLAT:$SG319115	; `glGetIntegerv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetFloatv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetFloatv@@9@8@4PBDB DD FLAT:$SG319099	; `glGetFloatv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetError@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glGetError@@9@0@4PBDB DD FLAT:$SG319083	; `glGetError'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetDoublev@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetDoublev@@9@8@4PBDB DD FLAT:$SG319069	; `glGetDoublev'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetClipPlane@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetClipPlane@@9@8@4PBDB DD FLAT:$SG319053	; `glGetClipPlane'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGetBooleanv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGetBooleanv@@9@8@4PBDB DD FLAT:$SG319037	; `glGetBooleanv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGenTextures@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glGenTextures@@9@8@4PBDB DD FLAT:$SG319021	; `glGenTextures'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glGenLists@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glGenLists@@9@4@4PBDB DD FLAT:$SG319005	; `glGenLists'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFrustum@@9@48@4PBDB
_DATA	SEGMENT
?szName@?4??glFrustum@@9@48@4PBDB DD FLAT:$SG318991	; `glFrustum'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFrontFace@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glFrontFace@@9@4@4PBDB DD FLAT:$SG318967	; `glFrontFace'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFogiv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glFogiv@@9@8@4PBDB DD FLAT:$SG318953	; `glFogiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFogi@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glFogi@@9@8@4PBDB DD FLAT:$SG318937		; `glFogi'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFogfv@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glFogfv@@9@8@4PBDB DD FLAT:$SG318921	; `glFogfv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFogf@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glFogf@@9@8@4PBDB DD FLAT:$SG318905		; `glFogf'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFlush@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glFlush@@9@0@4PBDB DD FLAT:$SG318889	; `glFlush'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFinish@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glFinish@@9@0@4PBDB DD FLAT:$SG318875	; `glFinish'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glFeedbackBuffer@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glFeedbackBuffer@@9@12@4PBDB DD FLAT:$SG318861 ; `glFeedbackBuffer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalPoint2@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalPoint2@@9@8@4PBDB DD FLAT:$SG318843	; `glEvalPoint2'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalPoint1@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalPoint1@@9@4@4PBDB DD FLAT:$SG318827	; `glEvalPoint1'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalMesh2@@9@20@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalMesh2@@9@20@4PBDB DD FLAT:$SG318813	; `glEvalMesh2'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalMesh1@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalMesh1@@9@12@4PBDB DD FLAT:$SG318791	; `glEvalMesh1'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalCoord2fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalCoord2fv@@9@4@4PBDB DD FLAT:$SG318773	; `glEvalCoord2fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalCoord2f@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalCoord2f@@9@8@4PBDB DD FLAT:$SG318759	; `glEvalCoord2f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalCoord2dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalCoord2dv@@9@4@4PBDB DD FLAT:$SG318743	; `glEvalCoord2dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalCoord2d@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalCoord2d@@9@16@4PBDB DD FLAT:$SG318729	; `glEvalCoord2d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalCoord1fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalCoord1fv@@9@4@4PBDB DD FLAT:$SG318713	; `glEvalCoord1fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalCoord1f@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalCoord1f@@9@4@4PBDB DD FLAT:$SG318699	; `glEvalCoord1f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalCoord1dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalCoord1dv@@9@4@4PBDB DD FLAT:$SG318685	; `glEvalCoord1dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEvalCoord1d@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glEvalCoord1d@@9@8@4PBDB DD FLAT:$SG318671	; `glEvalCoord1d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEndList@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glEndList@@9@0@4PBDB DD FLAT:$SG318657	; `glEndList'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEnd@@9@0@4PBDB
_DATA	SEGMENT
?szName@?4??glEnd@@9@0@4PBDB DD FLAT:$SG318643		; `glEnd'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEnableClientState@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEnableClientState@@9@4@4PBDB DD FLAT:$SG318629 ; `glEnableClientState'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEnable@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEnable@@9@4@4PBDB DD FLAT:$SG318615	; `glEnable'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEdgeFlagv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEdgeFlagv@@9@4@4PBDB DD FLAT:$SG318601	; `glEdgeFlagv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEdgeFlagPointer@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glEdgeFlagPointer@@9@8@4PBDB DD FLAT:$SG318587 ; `glEdgeFlagPointer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glEdgeFlag@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glEdgeFlag@@9@4@4PBDB DD FLAT:$SG318571	; `glEdgeFlag'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDrawPixels@@9@20@4PBDB
_DATA	SEGMENT
?szName@?4??glDrawPixels@@9@20@4PBDB DD FLAT:$SG318557	; `glDrawPixels'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDrawElements@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glDrawElements@@9@16@4PBDB DD FLAT:$SG318535 ; `glDrawElements'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDrawBuffer@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glDrawBuffer@@9@4@4PBDB DD FLAT:$SG318515	; `glDrawBuffer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDrawArrays@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glDrawArrays@@9@12@4PBDB DD FLAT:$SG318501	; `glDrawArrays'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDisableClientState@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glDisableClientState@@9@4@4PBDB DD FLAT:$SG318483 ; `glDisableClientState'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDisable@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glDisable@@9@4@4PBDB DD FLAT:$SG318469	; `glDisable'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDepthRange@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glDepthRange@@9@16@4PBDB DD FLAT:$SG318455	; `glDepthRange'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDepthMask@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glDepthMask@@9@4@4PBDB DD FLAT:$SG318439	; `glDepthMask'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDepthFunc@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glDepthFunc@@9@4@4PBDB DD FLAT:$SG318425	; `glDepthFunc'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDeleteTextures@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glDeleteTextures@@9@8@4PBDB DD FLAT:$SG318411 ; `glDeleteTextures'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDeleteLists@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glDeleteLists@@9@8@4PBDB DD FLAT:$SG318395	; `glDeleteLists'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glDebugEntry@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glDebugEntry@@9@8@4PBDB DD FLAT:$SG318379	; `glDebugEntry'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glCullFace@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glCullFace@@9@4@4PBDB DD FLAT:$SG318363	; `glCullFace'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glCopyTexSubImage2D@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glCopyTexSubImage2D@@9@32@4PBDB DD FLAT:$SG318349 ; `glCopyTexSubImage2D'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glCopyTexSubImage1D@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glCopyTexSubImage1D@@9@24@4PBDB DD FLAT:$SG318321 ; `glCopyTexSubImage1D'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glCopyTexImage2D@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glCopyTexImage2D@@9@32@4PBDB DD FLAT:$SG318297 ; `glCopyTexImage2D'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glCopyTexImage1D@@9@28@4PBDB
_DATA	SEGMENT
?szName@?4??glCopyTexImage1D@@9@28@4PBDB DD FLAT:$SG318269 ; `glCopyTexImage1D'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glCopyPixels@@9@20@4PBDB
_DATA	SEGMENT
?szName@?4??glCopyPixels@@9@20@4PBDB DD FLAT:$SG318243	; `glCopyPixels'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColorPointer@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColorPointer@@9@16@4PBDB DD FLAT:$SG318221 ; `glColorPointer'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColorMaterial@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glColorMaterial@@9@8@4PBDB DD FLAT:$SG318201 ; `glColorMaterial'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColorMask@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColorMask@@9@16@4PBDB DD FLAT:$SG318185	; `glColorMask'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4usv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4usv@@9@4@4PBDB DD FLAT:$SG318165	; `glColor4usv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4us@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4us@@9@16@4PBDB DD FLAT:$SG318151	; `glColor4us'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4uiv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4uiv@@9@4@4PBDB DD FLAT:$SG318131	; `glColor4uiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4ui@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4ui@@9@16@4PBDB DD FLAT:$SG318117	; `glColor4ui'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4ubv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4ubv@@9@4@4PBDB DD FLAT:$SG318097	; `glColor4ubv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4ub@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4ub@@9@16@4PBDB DD FLAT:$SG318083	; `glColor4ub'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4sv@@9@4@4PBDB DD FLAT:$SG318063	; `glColor4sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4s@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4s@@9@16@4PBDB DD FLAT:$SG318049	; `glColor4s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4iv@@9@4@4PBDB DD FLAT:$SG318029	; `glColor4iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4i@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4i@@9@16@4PBDB DD FLAT:$SG318015	; `glColor4i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4fv@@9@4@4PBDB DD FLAT:$SG317995	; `glColor4fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4f@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4f@@9@16@4PBDB DD FLAT:$SG317981	; `glColor4f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4dv@@9@4@4PBDB DD FLAT:$SG317961	; `glColor4dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4d@@9@32@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4d@@9@32@4PBDB DD FLAT:$SG317947	; `glColor4d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4bv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4bv@@9@4@4PBDB DD FLAT:$SG317927	; `glColor4bv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor4b@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glColor4b@@9@16@4PBDB DD FLAT:$SG317913	; `glColor4b'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3usv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3usv@@9@4@4PBDB DD FLAT:$SG317893	; `glColor3usv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3us@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3us@@9@12@4PBDB DD FLAT:$SG317879	; `glColor3us'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3uiv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3uiv@@9@4@4PBDB DD FLAT:$SG317861	; `glColor3uiv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3ui@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3ui@@9@12@4PBDB DD FLAT:$SG317847	; `glColor3ui'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3ubv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3ubv@@9@4@4PBDB DD FLAT:$SG317829	; `glColor3ubv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3ub@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3ub@@9@12@4PBDB DD FLAT:$SG317815	; `glColor3ub'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3sv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3sv@@9@4@4PBDB DD FLAT:$SG317797	; `glColor3sv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3s@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3s@@9@12@4PBDB DD FLAT:$SG317783	; `glColor3s'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3iv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3iv@@9@4@4PBDB DD FLAT:$SG317765	; `glColor3iv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3i@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3i@@9@12@4PBDB DD FLAT:$SG317751	; `glColor3i'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3fv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3fv@@9@4@4PBDB DD FLAT:$SG317733	; `glColor3fv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3f@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3f@@9@12@4PBDB DD FLAT:$SG317719	; `glColor3f'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3dv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3dv@@9@4@4PBDB DD FLAT:$SG317701	; `glColor3dv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3d@@9@24@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3d@@9@24@4PBDB DD FLAT:$SG317687	; `glColor3d'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3bv@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3bv@@9@4@4PBDB DD FLAT:$SG317669	; `glColor3bv'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glColor3b@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glColor3b@@9@12@4PBDB DD FLAT:$SG317655	; `glColor3b'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glClipPlane@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glClipPlane@@9@8@4PBDB DD FLAT:$SG317637	; `glClipPlane'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glClearStencil@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glClearStencil@@9@4@4PBDB DD FLAT:$SG317621	; `glClearStencil'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glClearIndex@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glClearIndex@@9@4@4PBDB DD FLAT:$SG317607	; `glClearIndex'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glClearDepth@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glClearDepth@@9@8@4PBDB DD FLAT:$SG317593	; `glClearDepth'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glClearColor@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glClearColor@@9@16@4PBDB DD FLAT:$SG317579	; `glClearColor'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glClearAccum@@9@16@4PBDB
_DATA	SEGMENT
?szName@?4??glClearAccum@@9@16@4PBDB DD FLAT:$SG317559	; `glClearAccum'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glClear@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glClear@@9@4@4PBDB DD FLAT:$SG317539	; `glClear'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glCallLists@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glCallLists@@9@12@4PBDB DD FLAT:$SG317525	; `glCallLists'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glCallList@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glCallList@@9@4@4PBDB DD FLAT:$SG317507	; `glCallList'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glBlendFunc@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glBlendFunc@@9@8@4PBDB DD FLAT:$SG317493	; `glBlendFunc'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glBitmap@@9@28@4PBDB
_DATA	SEGMENT
?szName@?4??glBitmap@@9@28@4PBDB DD FLAT:$SG317477	; `glBitmap'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glBindTexture@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glBindTexture@@9@8@4PBDB DD FLAT:$SG317451	; `glBindTexture'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glBegin@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glBegin@@9@4@4PBDB DD FLAT:$SG317435	; `glBegin'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glArrayElement@@9@4@4PBDB
_DATA	SEGMENT
?szName@?4??glArrayElement@@9@4@4PBDB DD FLAT:$SG317421	; `glArrayElement'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glAreTexturesResident@@9@12@4PBDB
_DATA	SEGMENT
?szName@?4??glAreTexturesResident@@9@12@4PBDB DD FLAT:$SG317407 ; `glAreTexturesResident'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glAlphaFunc@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glAlphaFunc@@9@8@4PBDB DD FLAT:$SG317389	; `glAlphaFunc'::`5'::szName
_DATA	ENDS
;	COMDAT ?szName@?4??glAccum@@9@8@4PBDB
_DATA	SEGMENT
?szName@?4??glAccum@@9@8@4PBDB DD FLAT:$SG317373	; `glAccum'::`5'::szName
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PipelineQuery@GLPerf@@QAE@PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PipelineQuery@GLPerf@@QAE@PB_WI@Z$0
__ehfuncinfo$??0PipelineQuery@GLPerf@@QAE@PB_WI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0PipelineQuery@GLPerf@@QAE@PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__catchsym$?ResetCEGUI_GL@@YAXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ResetCEGUI_GL@@YAXXZ$0
__unwindtable$?ResetCEGUI_GL@@YAXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?ResetCEGUI_GL@@YAXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?ResetCEGUI_GL@@YAXXZ$2
__ehfuncinfo$?Init@GLPerf@@YA_NXZ DD 019930522H
	DD	016H
	DD	FLAT:__unwindtable$?Init@GLPerf@@YA_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?ResetCEGUI_GL@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ResetCEGUI_GL@@YAXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?ResetCEGUI_GL@@YAXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$8
__unwindtable$?Init@GLPerf@@YA_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$1
	DD	02H
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$17
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$2
	DD	04H
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$23
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$3
	DD	06H
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$29
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$4
	DD	08H
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$35
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$5
	DD	0aH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$41
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$6
	DD	0cH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$47
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$7
	DD	0eH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$53
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$8
	DD	010H
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$59
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$9
	DD	012H
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$65
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$10
	DD	014H
	DD	FLAT:__unwindfunclet$?Init@GLPerf@@YA_NXZ$71
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@K@?$allocator@K@std@@QAEXPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@K@?$allocator@K@std@@QAEXPAK@Z PROC		; std::allocator<unsigned long>::destroy<unsigned long>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@K@?$allocator@K@std@@QAEXPAK@Z ENDP		; std::allocator<unsigned long>::destroy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAK@?$allocator@K@std@@QAEXPAPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAK@?$allocator@K@std@@QAEXPAPAK@Z PROC	; std::allocator<unsigned long>::destroy<unsigned long *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PAK@?$allocator@K@std@@QAEXPAPAK@Z ENDP	; std::allocator<unsigned long>::destroy<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z PROC		; std::forward<wchar_t * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN8@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@K@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAK@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@K@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAK@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@K@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAK@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAPAK@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAPAK@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAPAK@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::destroy<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0K@?$allocator@PAK@std@@QAE@ABV?$allocator@K@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0K@?$allocator@PAK@std@@QAE@ABV?$allocator@K@1@@Z PROC ; std::allocator<unsigned long *>::allocator<unsigned long *><unsigned long>, COMDAT
; _this$ = ecx

; 813  : 		}

	mov	eax, ecx
	ret	4
??$?0K@?$allocator@PAK@std@@QAE@ABV?$allocator@K@1@@Z ENDP ; std::allocator<unsigned long *>::allocator<unsigned long *><unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAAAU?$_Wrap_alloc@V?$allocator@K@std@@@0@AAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<unsigned long> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Deque_val<std::_Deque_simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edx, edx
	je	SHORT $LN13@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z PROC ; std::pointer_traits<std::_Container_proxy *>::pointer_to, COMDAT

; 289  : 		{	// convert raw reference to pointer

	npad	2
	push	ebp
	mov	ebp, esp

; 290  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 291  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU_Container_proxy@std@@@std@@SAPAU_Container_proxy@2@AAU32@@Z ENDP ; std::pointer_traits<std::_Container_proxy *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 22   : 	{	// return smaller of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	cmovb	eax, edx

; 24   : 	}

	pop	ebp
	ret	0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@_W@std@@YAPA_WPA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@_W@std@@YAPA_WPA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@K@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@K@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAK@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@K@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAK@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@K@std@@YAPAKPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@K@std@@YAPAKPAK@Z PROC			; std::_Unfancy<unsigned long>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@K@std@@YAPAKPAK@Z ENDP			; std::_Unfancy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><>, COMDAT
; _this$ = ecx

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [ecx], 0

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [ecx+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [ecx+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [ecx+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address, COMDAT
; _this$ = ecx

; 1026 : 		{	// return address of mutable _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 1027 : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 1028 : 		}

	pop	ebp
	ret	4
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QBEPAU_Container_proxy@2@AAU32@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 536870911				; 1fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 3

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z PROC		; std::addressof<wchar_t *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z ENDP		; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAPAK@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAPAK@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::destroy<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PAK@std@@YAPAPAKAAPAK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAK@std@@YAPAPAKAAPAK@Z PROC		; std::addressof<unsigned long *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PAK@std@@YAPAPAKAAPAK@Z ENDP		; std::addressof<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long *> >::_Wrap_alloc<std::allocator<unsigned long *> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>, COMDAT
; _this$ = ecx

; 1054 : 		}

	mov	eax, ecx
	ret	4
??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long *> >::_Wrap_alloc<std::allocator<unsigned long *> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GKIPBU_WGLSWAP@@@Z@@YAPAPAXPAP6GKIPBU_WGLSWAP@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GKIPBU_WGLSWAP@@@Z@@YAPAPAXPAP6GKIPBU_WGLSWAP@@@Z@Z PROC ; static_cast_p2p<void,unsigned long __stdcall(unsigned int,_WGLSWAP const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GKIPBU_WGLSWAP@@@Z@@YAPAPAXPAP6GKIPBU_WGLSWAP@@@Z@Z ENDP ; static_cast_p2p<void,unsigned long __stdcall(unsigned int,_WGLSWAP const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHDC__@@KPBUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@KPBUtagPIXELFORMATDESCRIPTOR@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHDC__@@KPBUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@KPBUtagPIXELFORMATDESCRIPTOR@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,tagPIXELFORMATDESCRIPTOR const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHDC__@@KPBUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@KPBUtagPIXELFORMATDESCRIPTOR@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,tagPIXELFORMATDESCRIPTOR const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GKPAUHDC__@@KKKPBK@Z@@YAPAPAXPAP6GKPAUHDC__@@KKKPBK@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GKPAUHDC__@@KKKPBK@Z@@YAPAPAXPAP6GKPAUHDC__@@KKKPBK@Z@Z PROC ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long,unsigned long const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GKPAUHDC__@@KKKPBK@Z@@YAPAPAXPAP6GKPAUHDC__@@KKKPBK@Z@Z ENDP ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long,unsigned long const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHDC__@@KH@Z@@YAPAPAXPAP6GHPAUHDC__@@KH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHDC__@@KH@Z@@YAPAPAXPAP6GHPAUHDC__@@KH@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHDC__@@KH@Z@@YAPAPAXPAP6GHPAUHDC__@@KH@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHDC__@@KKIPAK1@Z@@YAPAPAXPAP6GHPAUHDC__@@KKIPAK1@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHDC__@@KKIPAK1@Z@@YAPAPAXPAP6GHPAUHDC__@@KKIPAK1@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned int,unsigned long *,unsigned long *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHDC__@@KKIPAK1@Z@@YAPAPAXPAP6GHPAUHDC__@@KKIPAK1@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned int,unsigned long *,unsigned long *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GKPAUHDC__@@KKKPAK@Z@@YAPAPAXPAP6GKPAUHDC__@@KKKPAK@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GKPAUHDC__@@KKKPAK@Z@@YAPAPAXPAP6GKPAUHDC__@@KKKPAK@Z@Z PROC ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long,unsigned long *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GKPAUHDC__@@KKKPAK@Z@@YAPAPAXPAP6GKPAUHDC__@@KKKPAK@Z@Z ENDP ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long,unsigned long *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GKPAUHDC__@@KIPAUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GKPAUHDC__@@KIPAUtagPIXELFORMATDESCRIPTOR@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GKPAUHDC__@@KIPAUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GKPAUHDC__@@KIPAUtagPIXELFORMATDESCRIPTOR@@@Z@Z PROC ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned int,tagPIXELFORMATDESCRIPTOR *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GKPAUHDC__@@KIPAUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GKPAUHDC__@@KIPAUtagPIXELFORMATDESCRIPTOR@@@Z@Z ENDP ; static_cast_p2p<void,unsigned long __stdcall(HDC__ *,unsigned long,unsigned int,tagPIXELFORMATDESCRIPTOR *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHDC__@@KKIPAUtagLAYERPLANEDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@KKIPAUtagLAYERPLANEDESCRIPTOR@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHDC__@@KKIPAUtagLAYERPLANEDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@KKIPAUtagLAYERPLANEDESCRIPTOR@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned int,tagLAYERPLANEDESCRIPTOR *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHDC__@@KKIPAUtagLAYERPLANEDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@KKIPAUtagLAYERPLANEDESCRIPTOR@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned int,tagLAYERPLANEDESCRIPTOR *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHDC__@@KKK@Z@@YAPAPAXPAP6GHPAUHDC__@@KKK@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHDC__@@KKK@Z@@YAPAPAXPAP6GHPAUHDC__@@KKK@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHDC__@@KKK@Z@@YAPAPAXPAP6GHPAUHDC__@@KKK@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HDC__ *,unsigned long,unsigned long,unsigned long)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHGLRC__@@0@Z@@YAPAPAXPAP6GHPAUHGLRC__@@0@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHGLRC__@@0@Z@@YAPAPAXPAP6GHPAUHGLRC__@@0@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HGLRC__ *,HGLRC__ *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHGLRC__@@0@Z@@YAPAPAXPAP6GHPAUHGLRC__@@0@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HGLRC__ *,HGLRC__ *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHDC__@@PAUHGLRC__@@@Z@@YAPAPAXPAP6GHPAUHDC__@@PAUHGLRC__@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHDC__@@PAUHGLRC__@@@Z@@YAPAPAXPAP6GHPAUHDC__@@PAUHGLRC__@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HDC__ *,HGLRC__ *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHDC__@@PAUHGLRC__@@@Z@@YAPAPAXPAP6GHPAUHDC__@@PAUHGLRC__@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HDC__ *,HGLRC__ *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHDC__@@PBUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@PBUtagPIXELFORMATDESCRIPTOR@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHDC__@@PBUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@PBUtagPIXELFORMATDESCRIPTOR@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HDC__ *,tagPIXELFORMATDESCRIPTOR const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHDC__@@PBUtagPIXELFORMATDESCRIPTOR@@@Z@@YAPAPAXPAP6GHPAUHDC__@@PBUtagPIXELFORMATDESCRIPTOR@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HDC__ *,tagPIXELFORMATDESCRIPTOR const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GPAUHGLRC__@@PAUHDC__@@@Z@@YAPAPAXPAP6GPAUHGLRC__@@PAUHDC__@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GPAUHGLRC__@@PAUHDC__@@@Z@@YAPAPAXPAP6GPAUHGLRC__@@PAUHDC__@@@Z@Z PROC ; static_cast_p2p<void,HGLRC__ * __stdcall(HDC__ *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GPAUHGLRC__@@PAUHDC__@@@Z@@YAPAPAXPAP6GPAUHGLRC__@@PAUHDC__@@@Z@Z ENDP ; static_cast_p2p<void,HGLRC__ * __stdcall(HDC__ *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GP6GHXZPBD@Z@@YAPAPAXPAP6GP6GHXZPBD@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GP6GHXZPBD@Z@@YAPAPAXPAP6GP6GHXZPBD@Z@Z PROC ; static_cast_p2p<void,int (__stdcall*__stdcall(char const *))(void)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GP6GHXZPBD@Z@@YAPAPAXPAP6GP6GHXZPBD@Z@Z ENDP ; static_cast_p2p<void,int (__stdcall*__stdcall(char const *))(void)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GPAUHDC__@@XZ@@YAPAPAXPAP6GPAUHDC__@@XZ@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GPAUHDC__@@XZ@@YAPAPAXPAP6GPAUHDC__@@XZ@Z PROC ; static_cast_p2p<void,HDC__ * __stdcall(void)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GPAUHDC__@@XZ@@YAPAPAXPAP6GPAUHDC__@@XZ@Z ENDP ; static_cast_p2p<void,HDC__ * __stdcall(void)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GPAUHGLRC__@@XZ@@YAPAPAXPAP6GPAUHGLRC__@@XZ@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GPAUHGLRC__@@XZ@@YAPAPAXPAP6GPAUHGLRC__@@XZ@Z PROC ; static_cast_p2p<void,HGLRC__ * __stdcall(void)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GPAUHGLRC__@@XZ@@YAPAPAXPAP6GPAUHGLRC__@@XZ@Z ENDP ; static_cast_p2p<void,HGLRC__ * __stdcall(void)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHGLRC__@@@Z@@YAPAPAXPAP6GHPAUHGLRC__@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHGLRC__@@@Z@@YAPAPAXPAP6GHPAUHGLRC__@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HGLRC__ *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHGLRC__@@@Z@@YAPAPAXPAP6GHPAUHGLRC__@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HGLRC__ *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GPAUHGLRC__@@PAUHDC__@@H@Z@@YAPAPAXPAP6GPAUHGLRC__@@PAUHDC__@@H@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GPAUHGLRC__@@PAUHDC__@@H@Z@@YAPAPAXPAP6GPAUHGLRC__@@PAUHDC__@@H@Z@Z PROC ; static_cast_p2p<void,HGLRC__ * __stdcall(HDC__ *,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GPAUHGLRC__@@PAUHDC__@@H@Z@@YAPAPAXPAP6GPAUHGLRC__@@PAUHDC__@@H@Z@Z ENDP ; static_cast_p2p<void,HGLRC__ * __stdcall(HDC__ *,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHGLRC__@@0I@Z@@YAPAPAXPAP6GHPAUHGLRC__@@0I@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHGLRC__@@0I@Z@@YAPAPAXPAP6GHPAUHGLRC__@@0I@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HGLRC__ *,HGLRC__ *,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHGLRC__@@0I@Z@@YAPAPAXPAP6GHPAUHGLRC__@@0I@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HGLRC__ *,HGLRC__ *,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHIIPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHIIPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,unsigned int,unsigned int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHIIPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,unsigned int,unsigned int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHHHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHHHIIPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHHHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHHHIIPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int,unsigned int,unsigned int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHHHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHHHIIPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int,unsigned int,unsigned int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHHIIPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHHIIPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,unsigned int,unsigned int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHHHHIIPBX@Z@@YAPAPAXPAP6GXIHHHHIIPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,unsigned int,unsigned int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIPBN@Z@@YAPAPAXPAP6GXIIPBN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIPBN@Z@@YAPAPAXPAP6GXIIPBN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIPBN@Z@@YAPAPAXPAP6GXIIPBN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIN@Z@@YAPAPAXPAP6GXIIN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIN@Z@@YAPAPAXPAP6GXIIN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIN@Z@@YAPAPAXPAP6GXIIN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHI@Z@@YAPAPAXPAP6GXIHI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHI@Z@@YAPAPAXPAP6GXIHI@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHI@Z@@YAPAPAXPAP6GXIHI@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHI@Z@@YAPAPAXPAP6GHI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHI@Z@@YAPAPAXPAP6GHI@Z@Z PROC	; static_cast_p2p<void,int __stdcall(unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHI@Z@@YAPAPAXPAP6GHI@Z@Z ENDP	; static_cast_p2p<void,int __stdcall(unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBF0@Z@@YAPAPAXPAP6GXPBF0@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBF0@Z@@YAPAPAXPAP6GXPBF0@Z@Z PROC ; static_cast_p2p<void,void __stdcall(short const *,short const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBF0@Z@@YAPAPAXPAP6GXPBF0@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(short const *,short const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBH0@Z@@YAPAPAXPAP6GXPBH0@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBH0@Z@@YAPAPAXPAP6GXPBH0@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int const *,int const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBH0@Z@@YAPAPAXPAP6GXPBH0@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int const *,int const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBM0@Z@@YAPAPAXPAP6GXPBM0@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBM0@Z@@YAPAPAXPAP6GXPBM0@Z@Z PROC ; static_cast_p2p<void,void __stdcall(float const *,float const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBM0@Z@@YAPAPAXPAP6GXPBM0@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(float const *,float const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBN0@Z@@YAPAPAXPAP6GXPBN0@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBN0@Z@@YAPAPAXPAP6GXPBN0@Z@Z PROC ; static_cast_p2p<void,void __stdcall(double const *,double const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBN0@Z@@YAPAPAXPAP6GXPBN0@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(double const *,double const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHHHHIIPAX@Z@@YAPAPAXPAP6GXHHHHIIPAX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHHHHIIPAX@Z@@YAPAPAXPAP6GXHHHHIIPAX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,int,int,int,unsigned int,unsigned int,void *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHHHHIIPAX@Z@@YAPAPAXPAP6GXHHHHIIPAX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,int,int,int,unsigned int,unsigned int,void *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXFF@Z@@YAPAPAXPAP6GXFF@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXFF@Z@@YAPAPAXPAP6GXFF@Z@Z PROC ; static_cast_p2p<void,void __stdcall(short,short)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXFF@Z@@YAPAPAXPAP6GXFF@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(short,short)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHPBIPBM@Z@@YAPAPAXPAP6GXHPBIPBM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHPBIPBM@Z@@YAPAPAXPAP6GXHPBIPBM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,unsigned int const *,float const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHPBIPBM@Z@@YAPAPAXPAP6GXHPBIPBM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,unsigned int const *,float const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHPBG@Z@@YAPAPAXPAP6GXIHPBG@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHPBG@Z@@YAPAPAXPAP6GXIHPBG@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned short const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHPBG@Z@@YAPAPAXPAP6GXIHPBG@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned short const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHPBI@Z@@YAPAPAXPAP6GXIHPBI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHPBI@Z@@YAPAPAXPAP6GXIHPBI@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHPBI@Z@@YAPAPAXPAP6GXIHPBI@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHPBM@Z@@YAPAPAXPAP6GXIHPBM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHPBM@Z@@YAPAPAXPAP6GXIHPBM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,float const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHPBM@Z@@YAPAPAXPAP6GXIHPBM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,float const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHMMHMM@Z@@YAPAPAXPAP6GXHMMHMM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHMMHMM@Z@@YAPAPAXPAP6GXHMMHMM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,float,float,int,float,float)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHMMHMM@Z@@YAPAPAXPAP6GXHMMHMM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,float,float,int,float,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHNNHNN@Z@@YAPAPAXPAP6GXHNNHNN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHNNHNN@Z@@YAPAPAXPAP6GXHNNHNN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,double,double,int,double,double)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHNNHNN@Z@@YAPAPAXPAP6GXHNNHNN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,double,double,int,double,double)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHMM@Z@@YAPAPAXPAP6GXHMM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHMM@Z@@YAPAPAXPAP6GXHMM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,float,float)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHMM@Z@@YAPAPAXPAP6GXHMM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,float,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHNN@Z@@YAPAPAXPAP6GXHNN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHNN@Z@@YAPAPAXPAP6GXHNN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,double,double)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHNN@Z@@YAPAPAXPAP6GXHNN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,double,double)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIMMHHMMHHPBM@Z@@YAPAPAXPAP6GXIMMHHMMHHPBM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIMMHHMMHHPBM@Z@@YAPAPAXPAP6GXIMMHHMMHHPBM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,float,float,int,int,float,float,int,int,float const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIMMHHMMHHPBM@Z@@YAPAPAXPAP6GXIMMHHMMHHPBM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,float,float,int,int,float,float,int,int,float const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXINNHHNNHHPBN@Z@@YAPAPAXPAP6GXINNHHNNHHPBN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXINNHHNNHHPBN@Z@@YAPAPAXPAP6GXINNHHNNHHPBN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,double,double,int,int,double,double,int,int,double const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXINNHHNNHHPBN@Z@@YAPAPAXPAP6GXINNHHNNHHPBN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,double,double,int,int,double,double,int,int,double const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIMMHHPBM@Z@@YAPAPAXPAP6GXIMMHHPBM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIMMHHPBM@Z@@YAPAPAXPAP6GXIMMHHPBM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,float,float,int,int,float const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIMMHHPBM@Z@@YAPAPAXPAP6GXIMMHHPBM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,float,float,int,int,float const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXINNHHPBN@Z@@YAPAPAXPAP6GXINNHHPBN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXINNHHPBN@Z@@YAPAPAXPAP6GXINNHHPBN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,double,double,int,int,double const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXINNHHPBN@Z@@YAPAPAXPAP6GXINNHHPBN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,double,double,int,int,double const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHG@Z@@YAPAPAXPAP6GXHG@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHG@Z@@YAPAPAXPAP6GXHG@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,unsigned short)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHG@Z@@YAPAPAXPAP6GXHG@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,unsigned short)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIPBH@Z@@YAPAPAXPAP6GXIIPBH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIPBH@Z@@YAPAPAXPAP6GXIIPBH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIPBH@Z@@YAPAPAXPAP6GXIIPBH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIH@Z@@YAPAPAXPAP6GXIIH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIH@Z@@YAPAPAXPAP6GXIIH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIH@Z@@YAPAPAXPAP6GXIIH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIPBM@Z@@YAPAPAXPAP6GXIIPBM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIPBM@Z@@YAPAPAXPAP6GXIIPBM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIPBM@Z@@YAPAPAXPAP6GXIIPBM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIM@Z@@YAPAPAXPAP6GXIIM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIM@Z@@YAPAPAXPAP6GXIIM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIM@Z@@YAPAPAXPAP6GXIIM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GEI@Z@@YAPAPAXPAP6GEI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GEI@Z@@YAPAPAXPAP6GEI@Z@Z PROC	; static_cast_p2p<void,unsigned char __stdcall(unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GEI@Z@@YAPAPAXPAP6GEI@Z@Z ENDP	; static_cast_p2p<void,unsigned char __stdcall(unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXF@Z@@YAPAPAXPAP6GXF@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXF@Z@@YAPAPAXPAP6GXF@Z@Z PROC	; static_cast_p2p<void,void __stdcall(short)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXF@Z@@YAPAPAXPAP6GXF@Z@Z ENDP	; static_cast_p2p<void,void __stdcall(short)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHPBX@Z@@YAPAPAXPAP6GXIHPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHPBX@Z@@YAPAPAXPAP6GXIHPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHPBX@Z@@YAPAPAXPAP6GXIHPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHIPAH@Z@@YAPAPAXPAP6GXIHIPAH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHIPAH@Z@@YAPAPAXPAP6GXIHIPAH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHIPAH@Z@@YAPAPAXPAP6GXIHIPAH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHIPAM@Z@@YAPAPAXPAP6GXIHIPAM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHIPAM@Z@@YAPAPAXPAP6GXIHIPAM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,float *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHIPAM@Z@@YAPAPAXPAP6GXIHIPAM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,float *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHIIPAX@Z@@YAPAPAXPAP6GXIHIIPAX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHIIPAX@Z@@YAPAPAXPAP6GXIHIIPAX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,unsigned int,void *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHIIPAX@Z@@YAPAPAXPAP6GXIHIIPAX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,unsigned int,void *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GPBEI@Z@@YAPAPAXPAP6GPBEI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GPBEI@Z@@YAPAPAXPAP6GPBEI@Z@Z PROC ; static_cast_p2p<void,unsigned char const * __stdcall(unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GPBEI@Z@@YAPAPAXPAP6GPBEI@Z@Z ENDP ; static_cast_p2p<void,unsigned char const * __stdcall(unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPAE@Z@@YAPAPAXPAP6GXPAE@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPAE@Z@@YAPAPAXPAP6GXPAE@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned char *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPAE@Z@@YAPAPAXPAP6GXPAE@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned char *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPAPAX@Z@@YAPAPAXPAP6GXIPAPAX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPAPAX@Z@@YAPAPAXPAP6GXIPAPAX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,void * *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPAPAX@Z@@YAPAPAXPAP6GXIPAPAX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,void * *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPAG@Z@@YAPAPAXPAP6GXIPAG@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPAG@Z@@YAPAPAXPAP6GXIPAG@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned short *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPAG@Z@@YAPAPAXPAP6GXIPAG@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned short *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPAI@Z@@YAPAPAXPAP6GXIPAI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPAI@Z@@YAPAPAXPAP6GXIPAI@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPAI@Z@@YAPAPAXPAP6GXIPAI@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIPAN@Z@@YAPAPAXPAP6GXIIPAN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIPAN@Z@@YAPAPAXPAP6GXIIPAN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIPAN@Z@@YAPAPAXPAP6GXIIPAN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,double *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIPAH@Z@@YAPAPAXPAP6GXIIPAH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIPAH@Z@@YAPAPAXPAP6GXIIPAH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIPAH@Z@@YAPAPAXPAP6GXIIPAH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,int *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIPAM@Z@@YAPAPAXPAP6GXIIPAM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIPAM@Z@@YAPAPAXPAP6GXIIPAM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIPAM@Z@@YAPAPAXPAP6GXIIPAM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,float *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPAH@Z@@YAPAPAXPAP6GXIPAH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPAH@Z@@YAPAPAXPAP6GXIPAH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPAH@Z@@YAPAPAXPAP6GXIPAH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPAM@Z@@YAPAPAXPAP6GXIPAM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPAM@Z@@YAPAPAXPAP6GXIPAM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,float *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPAM@Z@@YAPAPAXPAP6GXIPAM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,float *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GIXZ@@YAPAPAXPAP6GIXZ@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GIXZ@@YAPAPAXPAP6GIXZ@Z PROC	; static_cast_p2p<void,unsigned int __stdcall(void)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GIXZ@@YAPAPAXPAP6GIXZ@Z ENDP	; static_cast_p2p<void,unsigned int __stdcall(void)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPAN@Z@@YAPAPAXPAP6GXIPAN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPAN@Z@@YAPAPAXPAP6GXIPAN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,double *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPAN@Z@@YAPAPAXPAP6GXIPAN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,double *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPAE@Z@@YAPAPAXPAP6GXIPAE@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPAE@Z@@YAPAPAXPAP6GXIPAE@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned char *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPAE@Z@@YAPAPAXPAP6GXIPAE@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned char *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHPAI@Z@@YAPAPAXPAP6GXHPAI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHPAI@Z@@YAPAPAXPAP6GXHPAI@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,unsigned int *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHPAI@Z@@YAPAPAXPAP6GXHPAI@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,unsigned int *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GIH@Z@@YAPAPAXPAP6GIH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GIH@Z@@YAPAPAXPAP6GIH@Z@Z PROC	; static_cast_p2p<void,unsigned int __stdcall(int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GIH@Z@@YAPAPAXPAP6GIH@Z@Z ENDP	; static_cast_p2p<void,unsigned int __stdcall(int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXNNNNNN@Z@@YAPAPAXPAP6GXNNNNNN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXNNNNNN@Z@@YAPAPAXPAP6GXNNNNNN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(double,double,double,double,double,double)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXNNNNNN@Z@@YAPAPAXPAP6GXNNNNNN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(double,double,double,double,double,double)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPBH@Z@@YAPAPAXPAP6GXIPBH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPBH@Z@@YAPAPAXPAP6GXIPBH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPBH@Z@@YAPAPAXPAP6GXIPBH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPBM@Z@@YAPAPAXPAP6GXIPBM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPBM@Z@@YAPAPAXPAP6GXIPBM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,float const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPBM@Z@@YAPAPAXPAP6GXIPBM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,float const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHIPAM@Z@@YAPAPAXPAP6GXHIPAM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHIPAM@Z@@YAPAPAXPAP6GXHIPAM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,unsigned int,float *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHIPAM@Z@@YAPAPAXPAP6GXHIPAM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,unsigned int,float *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHH@Z@@YAPAPAXPAP6GXHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHH@Z@@YAPAPAXPAP6GXHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHH@Z@@YAPAPAXPAP6GXHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHHHH@Z@@YAPAPAXPAP6GXIHHHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHHHH@Z@@YAPAPAXPAP6GXIHHHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHHHH@Z@@YAPAPAXPAP6GXIHHHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXMM@Z@@YAPAPAXPAP6GXMM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXMM@Z@@YAPAPAXPAP6GXMM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(float,float)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXMM@Z@@YAPAPAXPAP6GXMM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(float,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXXZ@@YAPAPAXPAP6GXXZ@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXXZ@@YAPAPAXPAP6GXXZ@Z PROC	; static_cast_p2p<void,void __stdcall(void)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXXZ@@YAPAPAXPAP6GXXZ@Z ENDP	; static_cast_p2p<void,void __stdcall(void)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHPBX@Z@@YAPAPAXPAP6GXHPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHPBX@Z@@YAPAPAXPAP6GXHPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHPBX@Z@@YAPAPAXPAP6GXHPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHHIIPBX@Z@@YAPAPAXPAP6GXHHIIPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHHIIPBX@Z@@YAPAPAXPAP6GXHHIIPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,int,unsigned int,unsigned int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHHIIPBX@Z@@YAPAPAXPAP6GXHHIIPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,int,unsigned int,unsigned int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHIPBX@Z@@YAPAPAXPAP6GXIHIPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHIPBX@Z@@YAPAPAXPAP6GXIHIPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHIPBX@Z@@YAPAPAXPAP6GXIHIPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHH@Z@@YAPAPAXPAP6GXIHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHH@Z@@YAPAPAXPAP6GXIHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHH@Z@@YAPAPAXPAP6GXIHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXNN@Z@@YAPAPAXPAP6GXNN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXNN@Z@@YAPAPAXPAP6GXNN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(double,double)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXNN@Z@@YAPAPAXPAP6GXNN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(double,double)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXE@Z@@YAPAPAXPAP6GXE@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXE@Z@@YAPAPAXPAP6GXE@Z@Z PROC	; static_cast_p2p<void,void __stdcall(unsigned char)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXE@Z@@YAPAPAXPAP6GXE@Z@Z ENDP	; static_cast_p2p<void,void __stdcall(unsigned char)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHPBI@Z@@YAPAPAXPAP6GXHPBI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHPBI@Z@@YAPAPAXPAP6GXHPBI@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,unsigned int const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHPBI@Z@@YAPAPAXPAP6GXHPBI@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,unsigned int const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIH@Z@@YAPAPAXPAP6GXIH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIH@Z@@YAPAPAXPAP6GXIH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIH@Z@@YAPAPAXPAP6GXIH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHHHHHHH@Z@@YAPAPAXPAP6GXIHHHHHHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHHHHHHH@Z@@YAPAPAXPAP6GXIHHHHHHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHHHHHHH@Z@@YAPAPAXPAP6GXIHHHHHHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHHHHH@Z@@YAPAPAXPAP6GXIHHHHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHHHHH@Z@@YAPAPAXPAP6GXIHHHHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHHHHH@Z@@YAPAPAXPAP6GXIHHHHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,int,int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHIHHHHH@Z@@YAPAPAXPAP6GXIHIHHHHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHIHHHHH@Z@@YAPAPAXPAP6GXIHIHHHHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int,int,int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHIHHHHH@Z@@YAPAPAXPAP6GXIHIHHHHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int,int,int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIHIHHHH@Z@@YAPAPAXPAP6GXIHIHHHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIHIHHHH@Z@@YAPAPAXPAP6GXIHIHHHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int,int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIHIHHHH@Z@@YAPAPAXPAP6GXIHIHHHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,int,unsigned int,int,int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHHHHI@Z@@YAPAPAXPAP6GXHHHHI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHHHHI@Z@@YAPAPAXPAP6GXHHHHI@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,int,int,int,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHHHHI@Z@@YAPAPAXPAP6GXHHHHI@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,int,int,int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHIHPBX@Z@@YAPAPAXPAP6GXHIHPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHIHPBX@Z@@YAPAPAXPAP6GXHIHPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,unsigned int,int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHIHPBX@Z@@YAPAPAXPAP6GXHIHPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,unsigned int,int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXGGGG@Z@@YAPAPAXPAP6GXGGGG@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXGGGG@Z@@YAPAPAXPAP6GXGGGG@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned short,unsigned short,unsigned short,unsigned short)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXGGGG@Z@@YAPAPAXPAP6GXGGGG@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned short,unsigned short,unsigned short,unsigned short)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIIII@Z@@YAPAPAXPAP6GXIIII@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIIII@Z@@YAPAPAXPAP6GXIIII@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,unsigned int,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIIII@Z@@YAPAPAXPAP6GXIIII@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,unsigned int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXEEEE@Z@@YAPAPAXPAP6GXEEEE@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXEEEE@Z@@YAPAPAXPAP6GXEEEE@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned char,unsigned char,unsigned char,unsigned char)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXEEEE@Z@@YAPAPAXPAP6GXEEEE@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned char,unsigned char,unsigned char,unsigned char)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXFFFF@Z@@YAPAPAXPAP6GXFFFF@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXFFFF@Z@@YAPAPAXPAP6GXFFFF@Z@Z PROC ; static_cast_p2p<void,void __stdcall(short,short,short,short)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXFFFF@Z@@YAPAPAXPAP6GXFFFF@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(short,short,short,short)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHHHH@Z@@YAPAPAXPAP6GXHHHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHHHH@Z@@YAPAPAXPAP6GXHHHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHHHH@Z@@YAPAPAXPAP6GXHHHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXNNNN@Z@@YAPAPAXPAP6GXNNNN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXNNNN@Z@@YAPAPAXPAP6GXNNNN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(double,double,double,double)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXNNNN@Z@@YAPAPAXPAP6GXNNNN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(double,double,double,double)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXCCCC@Z@@YAPAPAXPAP6GXCCCC@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXCCCC@Z@@YAPAPAXPAP6GXCCCC@Z@Z PROC ; static_cast_p2p<void,void __stdcall(signed char,signed char,signed char,signed char)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXCCCC@Z@@YAPAPAXPAP6GXCCCC@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(signed char,signed char,signed char,signed char)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBG@Z@@YAPAPAXPAP6GXPBG@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBG@Z@@YAPAPAXPAP6GXPBG@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned short const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBG@Z@@YAPAPAXPAP6GXPBG@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned short const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXGGG@Z@@YAPAPAXPAP6GXGGG@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXGGG@Z@@YAPAPAXPAP6GXGGG@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned short,unsigned short,unsigned short)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXGGG@Z@@YAPAPAXPAP6GXGGG@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned short,unsigned short,unsigned short)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBI@Z@@YAPAPAXPAP6GXPBI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBI@Z@@YAPAPAXPAP6GXPBI@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBI@Z@@YAPAPAXPAP6GXPBI@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIII@Z@@YAPAPAXPAP6GXIII@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIII@Z@@YAPAPAXPAP6GXIII@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIII@Z@@YAPAPAXPAP6GXIII@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBE@Z@@YAPAPAXPAP6GXPBE@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBE@Z@@YAPAPAXPAP6GXPBE@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned char const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBE@Z@@YAPAPAXPAP6GXPBE@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned char const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXEEE@Z@@YAPAPAXPAP6GXEEE@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXEEE@Z@@YAPAPAXPAP6GXEEE@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned char,unsigned char,unsigned char)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXEEE@Z@@YAPAPAXPAP6GXEEE@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned char,unsigned char,unsigned char)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBF@Z@@YAPAPAXPAP6GXPBF@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBF@Z@@YAPAPAXPAP6GXPBF@Z@Z PROC ; static_cast_p2p<void,void __stdcall(short const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBF@Z@@YAPAPAXPAP6GXPBF@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(short const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXFFF@Z@@YAPAPAXPAP6GXFFF@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXFFF@Z@@YAPAPAXPAP6GXFFF@Z@Z PROC ; static_cast_p2p<void,void __stdcall(short,short,short)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXFFF@Z@@YAPAPAXPAP6GXFFF@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(short,short,short)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBH@Z@@YAPAPAXPAP6GXPBH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBH@Z@@YAPAPAXPAP6GXPBH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBH@Z@@YAPAPAXPAP6GXPBH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHHH@Z@@YAPAPAXPAP6GXHHH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHHH@Z@@YAPAPAXPAP6GXHHH@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,int,int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHHH@Z@@YAPAPAXPAP6GXHHH@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,int,int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBM@Z@@YAPAPAXPAP6GXPBM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBM@Z@@YAPAPAXPAP6GXPBM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(float const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBM@Z@@YAPAPAXPAP6GXPBM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(float const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXMMM@Z@@YAPAPAXPAP6GXMMM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXMMM@Z@@YAPAPAXPAP6GXMMM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(float,float,float)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXMMM@Z@@YAPAPAXPAP6GXMMM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(float,float,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBN@Z@@YAPAPAXPAP6GXPBN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBN@Z@@YAPAPAXPAP6GXPBN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(double const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBN@Z@@YAPAPAXPAP6GXPBN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(double const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXNNN@Z@@YAPAPAXPAP6GXNNN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXNNN@Z@@YAPAPAXPAP6GXNNN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(double,double,double)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXNNN@Z@@YAPAPAXPAP6GXNNN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(double,double,double)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXPBC@Z@@YAPAPAXPAP6GXPBC@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXPBC@Z@@YAPAPAXPAP6GXPBC@Z@Z PROC ; static_cast_p2p<void,void __stdcall(signed char const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXPBC@Z@@YAPAPAXPAP6GXPBC@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(signed char const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXCCC@Z@@YAPAPAXPAP6GXCCC@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXCCC@Z@@YAPAPAXPAP6GXCCC@Z@Z PROC ; static_cast_p2p<void,void __stdcall(signed char,signed char,signed char)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXCCC@Z@@YAPAPAXPAP6GXCCC@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(signed char,signed char,signed char)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIPBN@Z@@YAPAPAXPAP6GXIPBN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIPBN@Z@@YAPAPAXPAP6GXIPBN@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,double const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIPBN@Z@@YAPAPAXPAP6GXIPBN@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,double const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXM@Z@@YAPAPAXPAP6GXM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXM@Z@@YAPAPAXPAP6GXM@Z@Z PROC	; static_cast_p2p<void,void __stdcall(float)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXM@Z@@YAPAPAXPAP6GXM@Z@Z ENDP	; static_cast_p2p<void,void __stdcall(float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXN@Z@@YAPAPAXPAP6GXN@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXN@Z@@YAPAPAXPAP6GXN@Z@Z PROC	; static_cast_p2p<void,void __stdcall(double)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXN@Z@@YAPAPAXPAP6GXN@Z@Z ENDP	; static_cast_p2p<void,void __stdcall(double)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXMMMM@Z@@YAPAPAXPAP6GXMMMM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXMMMM@Z@@YAPAPAXPAP6GXMMMM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(float,float,float,float)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXMMMM@Z@@YAPAPAXPAP6GXMMMM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(float,float,float,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHIPBX@Z@@YAPAPAXPAP6GXHIPBX@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHIPBX@Z@@YAPAPAXPAP6GXHIPBX@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,unsigned int,void const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHIPBX@Z@@YAPAPAXPAP6GXHIPBX@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,unsigned int,void const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXHHMMMMPBE@Z@@YAPAPAXPAP6GXHHMMMMPBE@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXHHMMMMPBE@Z@@YAPAPAXPAP6GXHHMMMMPBE@Z@Z PROC ; static_cast_p2p<void,void __stdcall(int,int,float,float,float,float,unsigned char const *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXHHMMMMPBE@Z@@YAPAPAXPAP6GXHHMMMMPBE@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(int,int,float,float,float,float,unsigned char const *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXII@Z@@YAPAPAXPAP6GXII@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXII@Z@@YAPAPAXPAP6GXII@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXII@Z@@YAPAPAXPAP6GXII@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXI@Z@@YAPAPAXPAP6GXI@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXI@Z@@YAPAPAXPAP6GXI@Z@Z PROC	; static_cast_p2p<void,void __stdcall(unsigned int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXI@Z@@YAPAPAXPAP6GXI@Z@Z ENDP	; static_cast_p2p<void,void __stdcall(unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXH@Z@@YAPAPAXPAP6GXH@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXH@Z@@YAPAPAXPAP6GXH@Z@Z PROC	; static_cast_p2p<void,void __stdcall(int)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXH@Z@@YAPAPAXPAP6GXH@Z@Z ENDP	; static_cast_p2p<void,void __stdcall(int)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GEHPBIPAE@Z@@YAPAPAXPAP6GEHPBIPAE@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GEHPBIPAE@Z@@YAPAPAXPAP6GEHPBIPAE@Z@Z PROC ; static_cast_p2p<void,unsigned char __stdcall(int,unsigned int const *,unsigned char *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GEHPBIPAE@Z@@YAPAPAXPAP6GEHPBIPAE@Z@Z ENDP ; static_cast_p2p<void,unsigned char __stdcall(int,unsigned int const *,unsigned char *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GXIM@Z@@YAPAPAXPAP6GXIM@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GXIM@Z@@YAPAPAXPAP6GXIM@Z@Z PROC ; static_cast_p2p<void,void __stdcall(unsigned int,float)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GXIM@Z@@YAPAPAXPAP6GXIM@Z@Z ENDP ; static_cast_p2p<void,void __stdcall(unsigned int,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\include\specialk\utility.h
;	COMDAT ??$static_cast_p2p@X$$A6GHPAUHDC__@@@Z@@YAPAPAXPAP6GHPAUHDC__@@@Z@Z
_TEXT	SEGMENT
_p2p$ = 8						; size = 4
??$static_cast_p2p@X$$A6GHPAUHDC__@@@Z@@YAPAPAXPAP6GHPAUHDC__@@@Z@Z PROC ; static_cast_p2p<void,int __stdcall(HDC__ *)>, COMDAT

; 50   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 51   :       return static_cast <T **> (

	mov	eax, DWORD PTR _p2p$[ebp]

; 52   :                static_cast <T*>   ( p2p )
; 53   :                                 );
; 54   :     };

	pop	ebp
	ret	0
??$static_cast_p2p@X$$A6GHPAUHDC__@@@Z@@YAPAPAXPAP6GHPAUHDC__@@@Z@Z ENDP ; static_cast_p2p<void,int __stdcall(HDC__ *)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?getLastResult@PipelineQuery@GLPerf@@QAE_KXZ
_TEXT	SEGMENT
?getLastResult@PipelineQuery@GLPerf@@QAE_KXZ PROC	; GLPerf::PipelineQuery::getLastResult, COMDAT
; _this$ = ecx

; 1605 :       return result_;

	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]

; 1606 :     }

	ret	0
?getLastResult@PipelineQuery@GLPerf@@QAE_KXZ ENDP	; GLPerf::PipelineQuery::getLastResult
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?getResult@PipelineQuery@GLPerf@@QAEXPA_K@Z
_TEXT	SEGMENT
_pResult$ = 8						; size = 4
?getResult@PipelineQuery@GLPerf@@QAEXPA_K@Z PROC	; GLPerf::PipelineQuery::getResult, COMDAT
; _this$ = ecx

; 1596 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 1597 :       glGetQueryObjectui64v (query_, GL_QUERY_RESULT, pResult);

	mov	esi, DWORD PTR _pResult$[ebp]
	push	edi
	mov	edi, ecx
	push	esi
	push	34918					; 00008866H
	push	DWORD PTR [edi+16]
	call	DWORD PTR ___glewGetQueryObjectui64v

; 1598 :       ready_ = GL_TRUE;

	mov	BYTE PTR [edi+2], 1

; 1599 : 
; 1600 :       result_ = *pResult;

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi+8], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+12], eax
	pop	edi
	pop	esi

; 1601 :     }

	pop	ebp
	ret	4
?getResult@PipelineQuery@GLPerf@@QAEXPA_K@Z ENDP	; GLPerf::PipelineQuery::getResult
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?getResulIfFinished@PipelineQuery@GLPerf@@QAEEPA_K@Z
_TEXT	SEGMENT
_finished$1 = -4					; size = 4
_pResult$ = 8						; size = 4
?getResulIfFinished@PipelineQuery@GLPerf@@QAEEPA_K@Z PROC ; GLPerf::PipelineQuery::getResulIfFinished, COMDAT
; _this$ = ecx

; 1584 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	edi

; 1564 :       glGetQueryObjectiv (query_, GL_QUERY_RESULT_AVAILABLE, &finished);

	lea	eax, DWORD PTR _finished$1[ebp]

; 1584 :     {

	mov	edi, ecx

; 1564 :       glGetQueryObjectiv (query_, GL_QUERY_RESULT_AVAILABLE, &finished);

	push	eax
	push	34919					; 00008867H
	push	DWORD PTR [edi+16]
	call	DWORD PTR ___glewGetQueryObjectiv

; 1565 : 
; 1566 :       finished_ = (finished > 0);

	cmp	DWORD PTR _finished$1[ebp], 0
	setg	al
	mov	BYTE PTR [edi+1], al
	test	al, al

; 1585 :       if (isFinished ())

	je	SHORT $LN2@getResulIf
	push	esi

; 1597 :       glGetQueryObjectui64v (query_, GL_QUERY_RESULT, pResult);

	mov	esi, DWORD PTR _pResult$[ebp]
	push	esi
	push	34918					; 00008866H
	push	DWORD PTR [edi+16]
	call	DWORD PTR ___glewGetQueryObjectui64v

; 1598 :       ready_ = GL_TRUE;

	mov	BYTE PTR [edi+2], 1

; 1599 : 
; 1600 :       result_ = *pResult;

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi+8], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+12], eax

; 1586 :       {
; 1587 :         getResult (pResult);
; 1588 :         return GL_TRUE;

	mov	al, 1
	pop	esi
	pop	edi

; 1592 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@getResulIf:

; 1589 :       }
; 1590 : 
; 1591 :       return GL_FALSE;

	xor	al, al
	pop	edi

; 1592 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?getResulIfFinished@PipelineQuery@GLPerf@@QAEEPA_K@Z ENDP ; GLPerf::PipelineQuery::getResulIfFinished
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?isActive@PipelineQuery@GLPerf@@QAEEXZ
_TEXT	SEGMENT
?isActive@PipelineQuery@GLPerf@@QAEEXZ PROC		; GLPerf::PipelineQuery::isActive, COMDAT
; _this$ = ecx

; 1579 :       return active_;

	mov	al, BYTE PTR [ecx]

; 1580 :     }

	ret	0
?isActive@PipelineQuery@GLPerf@@QAEEXZ ENDP		; GLPerf::PipelineQuery::isActive
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?isReady@PipelineQuery@GLPerf@@QAEEXZ
_TEXT	SEGMENT
?isReady@PipelineQuery@GLPerf@@QAEEXZ PROC		; GLPerf::PipelineQuery::isReady, COMDAT
; _this$ = ecx

; 1575 :       return ready_;

	mov	al, BYTE PTR [ecx+2]

; 1576 :     }

	ret	0
?isReady@PipelineQuery@GLPerf@@QAEEXZ ENDP		; GLPerf::PipelineQuery::isReady
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?isFinished@PipelineQuery@GLPerf@@QAEEXZ
_TEXT	SEGMENT
_finished$ = -4						; size = 4
?isFinished@PipelineQuery@GLPerf@@QAEEXZ PROC		; GLPerf::PipelineQuery::isFinished, COMDAT
; _this$ = ecx

; 1561 :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 1562 :       GLint finished;
; 1563 : 
; 1564 :       glGetQueryObjectiv (query_, GL_QUERY_RESULT_AVAILABLE, &finished);

	lea	eax, DWORD PTR _finished$[ebp]
	mov	esi, ecx
	push	eax
	push	34919					; 00008867H
	push	DWORD PTR [esi+16]
	call	DWORD PTR ___glewGetQueryObjectiv

; 1565 : 
; 1566 :       finished_ = (finished > 0);

	cmp	DWORD PTR _finished$[ebp], 0
	setg	al

; 1567 : 
; 1568 :       if (finished_)

	test	al, al
	mov	BYTE PTR [esi+1], al
	pop	esi
	setne	al

; 1569 :         return GL_TRUE;
; 1570 : 
; 1571 :       return GL_FALSE;
; 1572 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?isFinished@PipelineQuery@GLPerf@@QAEEXZ ENDP		; GLPerf::PipelineQuery::isFinished
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?endQuery@PipelineQuery@GLPerf@@QAEXXZ
_TEXT	SEGMENT
?endQuery@PipelineQuery@GLPerf@@QAEXXZ PROC		; GLPerf::PipelineQuery::endQuery, COMDAT
; _this$ = ecx

; 1556 :       active_   = GL_FALSE;
; 1557 :       glEndQuery (query_);

	push	DWORD PTR [ecx+16]
	mov	BYTE PTR [ecx], 0
	call	DWORD PTR ___glewEndQuery

; 1558 :     }

	ret	0
?endQuery@PipelineQuery@GLPerf@@QAEXXZ ENDP		; GLPerf::PipelineQuery::endQuery
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?beginQuery@PipelineQuery@GLPerf@@QAEXXZ
_TEXT	SEGMENT
?beginQuery@PipelineQuery@GLPerf@@QAEXXZ PROC		; GLPerf::PipelineQuery::beginQuery, COMDAT
; _this$ = ecx

; 1547 :     {

	npad	2
	push	esi
	mov	esi, ecx

; 1548 :       active_   = GL_TRUE;
; 1549 :       ready_    = GL_FALSE;
; 1550 :       glBeginQuery (target_, query_);

	push	DWORD PTR [esi+16]
	mov	BYTE PTR [esi], 1
	push	DWORD PTR [esi+20]
	mov	BYTE PTR [esi+2], 0
	call	DWORD PTR ___glewBeginQuery

; 1551 :       finished_ = GL_FALSE;

	mov	BYTE PTR [esi+1], 0

; 1552 :       result_   = 0;

	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1553 :     }

	ret	0
?beginQuery@PipelineQuery@GLPerf@@QAEXXZ ENDP		; GLPerf::PipelineQuery::beginQuery
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ??0PipelineQuery@GLPerf@@QAE@PB_WI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wszName$ = 8						; size = 4
_target$ = 12						; size = 4
??0PipelineQuery@GLPerf@@QAE@PB_WI@Z PROC		; GLPerf::PipelineQuery::PipelineQuery, COMDAT
; _this$ = ecx

; 1520 :     PipelineQuery (const wchar_t* wszName, GLenum target)

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PipelineQuery@GLPerf@@QAE@PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1520 :     PipelineQuery (const wchar_t* wszName, GLenum target)

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+40], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+44], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi+24], ax
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	DWORD PTR __$EHRec$[ebp+8], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, DWORD PTR _wszName$[ebp]
	lea	ebx, DWORD PTR [eax+2]
	npad	1
$LL31@PipelineQu:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL31@PipelineQu
	sub	eax, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	DWORD PTR _wszName$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;
; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	eax, DWORD PTR _target$[ebp]

; 1529 :       active_    = GL_FALSE;
; 1530 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [esi+20], eax
	mov	eax, esi
	mov	WORD PTR [esi+1], 256			; 00000100H
	mov	BYTE PTR [esi], 0
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PipelineQuery@GLPerf@@QAE@PB_WI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0PipelineQuery@GLPerf@@QAE@PB_WI@Z:
	mov	eax, OFFSET __ehfuncinfo$??0PipelineQuery@GLPerf@@QAE@PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PipelineQuery@GLPerf@@QAE@PB_WI@Z ENDP		; GLPerf::PipelineQuery::PipelineQuery
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
$T2 = -16						; size = 4
$T3 = -16						; size = 4
$T4 = -16						; size = 4
$T5 = -16						; size = 4
$T6 = -16						; size = 4
$T7 = -16						; size = 4
$T8 = -16						; size = 4
$T9 = -16						; size = 4
$T10 = -16						; size = 4
$T11 = -16						; size = 4
$T12 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Init@GLPerf@@YA_NXZ PROC				; GLPerf::Init

; 1656 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Init@GLPerf@@YA_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 1657 :   glGenQueries =

	push	OFFSET $SG323785
	call	_wglGetProcAddress@4

; 1658 :     (glGenQueries_pfn)wglGetProcAddress ("glGenQueries");
; 1659 : 
; 1660 :   glDeleteQueries =

	push	OFFSET $SG323786
	mov	DWORD PTR ___glewGenQueries, eax
	call	_wglGetProcAddress@4

; 1661 :     (glDeleteQueries_pfn)wglGetProcAddress ("glDeleteQueries");
; 1662 : 
; 1663 :   glBeginQuery =

	push	OFFSET $SG323787
	mov	DWORD PTR ___glewDeleteQueries, eax
	call	_wglGetProcAddress@4

; 1664 :     (glBeginQuery_pfn)wglGetProcAddress ("glBeginQuery");
; 1665 : 
; 1666 :   glBeginQueryIndexed =

	push	OFFSET $SG323788
	mov	DWORD PTR ___glewBeginQuery, eax
	call	_wglGetProcAddress@4

; 1667 :     (glBeginQueryIndexed_pfn)wglGetProcAddress ("glBeginQueryIndexed");
; 1668 : 
; 1669 :   glEndQuery =

	push	OFFSET $SG323789
	mov	DWORD PTR ___glewBeginQueryIndexed, eax
	call	_wglGetProcAddress@4

; 1670 :     (glEndQuery_pfn)wglGetProcAddress ("glEndQuery");
; 1671 : 
; 1672 :   glIsQuery =

	push	OFFSET $SG323790
	mov	DWORD PTR ___glewEndQuery, eax
	call	_wglGetProcAddress@4

; 1673 :     (glIsQuery_pfn)wglGetProcAddress ("glIsQuery");
; 1674 : 
; 1675 :   glQueryCounter =

	push	OFFSET $SG323791
	mov	DWORD PTR ___glewIsQuery, eax
	call	_wglGetProcAddress@4

; 1676 :     (glQueryCounter_pfn)wglGetProcAddress ("glQueryCounter");
; 1677 : 
; 1678 :   glGetQueryObjectiv =

	push	OFFSET $SG323792
	mov	DWORD PTR ___glewQueryCounter, eax
	call	_wglGetProcAddress@4

; 1679 :     (glGetQueryObjectiv_pfn)wglGetProcAddress ("glGetQueryObjectiv");
; 1680 : 
; 1681 :   glGetQueryObjecti64v =

	push	OFFSET $SG323793
	mov	DWORD PTR ___glewGetQueryObjectiv, eax
	call	_wglGetProcAddress@4

; 1682 :     (glGetQueryObjecti64v_pfn)wglGetProcAddress ("glGetQueryObjecti64v");
; 1683 : 
; 1684 :   glGetQueryObjectui64v =

	push	OFFSET $SG323794
	mov	DWORD PTR ___glewGetQueryObjecti64v, eax
	call	_wglGetProcAddress@4

; 1685 :     (glGetQueryObjectui64v_pfn)wglGetProcAddress ("glGetQueryObjectui64v");
; 1686 : 
; 1687 :   HAS_pipeline_query = true;
; 1688 : 
; 1689 : #if 0
; 1690 :     glGenQueries && glDeleteQueries && glBeginQuery       && glBeginQueryIndexed  && glEndQuery &&
; 1691 :     glIsQuery    && glQueryCounter  && glGetQueryObjectiv && glGetQueryObjecti64v && glGetQueryObjectui64v;
; 1692 : #endif
; 1693 : 
; 1694 :   if (HAS_pipeline_query) {
; 1695 :     pipeline_states [ 0] = new PipelineQuery (L"Vertices Submitted",                         GL_VERTICES_SUBMITTED_ARB);

	push	48					; 00000030H
	mov	DWORD PTR ___glewGetQueryObjectui64v, eax
	mov	BYTE PTR ?HAS_pipeline_query@GLPerf@@3_NA, 1 ; GLPerf::HAS_pipeline_query
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T12[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	esi, esi
	je	SHORT $LN4@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	18					; 00000012H
	push	OFFSET $SG323797
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33518		; 000082eeH

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1685 :     (glGetQueryObjectui64v_pfn)wglGetProcAddress ("glGetQueryObjectui64v");
; 1686 : 
; 1687 :   HAS_pipeline_query = true;
; 1688 : 
; 1689 : #if 0
; 1690 :     glGenQueries && glDeleteQueries && glBeginQuery       && glBeginQueryIndexed  && glEndQuery &&
; 1691 :     glIsQuery    && glQueryCounter  && glGetQueryObjectiv && glGetQueryObjecti64v && glGetQueryObjectui64v;
; 1692 : #endif
; 1693 : 
; 1694 :   if (HAS_pipeline_query) {
; 1695 :     pipeline_states [ 0] = new PipelineQuery (L"Vertices Submitted",                         GL_VERTICES_SUBMITTED_ARB);

	jmp	SHORT $LN5@Init
$LN4@Init:
	xor	esi, esi
$LN5@Init:

; 1696 :     pipeline_states [ 1] = new PipelineQuery (L"Primitives Submitted",                       GL_PRIMITIVES_SUBMITTED_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T11[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	test	esi, esi
	je	SHORT $LN6@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	20					; 00000014H
	push	OFFSET $SG323799
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33519		; 000082efH

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1696 :     pipeline_states [ 1] = new PipelineQuery (L"Primitives Submitted",                       GL_PRIMITIVES_SUBMITTED_ARB);

	jmp	SHORT $LN7@Init
$LN6@Init:
	xor	esi, esi
$LN7@Init:

; 1697 :     pipeline_states [ 2] = new PipelineQuery (L"Vertex Shader Invocations",                  GL_VERTEX_SHADER_INVOCATIONS_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+4, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T10[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	test	esi, esi
	je	SHORT $LN8@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	25					; 00000019H
	push	OFFSET $SG323801
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 5
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33520		; 000082f0H

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1697 :     pipeline_states [ 2] = new PipelineQuery (L"Vertex Shader Invocations",                  GL_VERTEX_SHADER_INVOCATIONS_ARB);

	jmp	SHORT $LN9@Init
$LN8@Init:
	xor	esi, esi
$LN9@Init:

; 1698 :     pipeline_states [ 3] = new PipelineQuery (L"Tessellation Control Shader Patches",        GL_TESS_CONTROL_SHADER_PATCHES_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+8, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T9[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	test	esi, esi
	je	SHORT $LN10@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	35					; 00000023H
	push	OFFSET $SG323803
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33521		; 000082f1H

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1698 :     pipeline_states [ 3] = new PipelineQuery (L"Tessellation Control Shader Patches",        GL_TESS_CONTROL_SHADER_PATCHES_ARB);

	jmp	SHORT $LN11@Init
$LN10@Init:
	xor	esi, esi
$LN11@Init:

; 1699 :     pipeline_states [ 4] = new PipelineQuery (L"Tessellation Evaluation Shader Invocations", GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+12, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T8[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	test	esi, esi
	je	SHORT $LN12@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	42					; 0000002aH
	push	OFFSET $SG323805
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 9
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33522		; 000082f2H

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1699 :     pipeline_states [ 4] = new PipelineQuery (L"Tessellation Evaluation Shader Invocations", GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB);

	jmp	SHORT $LN13@Init
$LN12@Init:
	xor	esi, esi
$LN13@Init:

; 1700 :     pipeline_states [ 5] = new PipelineQuery (L"Geometry Shader Invocations",                GL_GEOMETRY_SHADER_INVOCATIONS);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+16, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T7[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	test	esi, esi
	je	SHORT $LN14@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	27					; 0000001bH
	push	OFFSET $SG323807
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 34943		; 0000887fH

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1700 :     pipeline_states [ 5] = new PipelineQuery (L"Geometry Shader Invocations",                GL_GEOMETRY_SHADER_INVOCATIONS);

	jmp	SHORT $LN15@Init
$LN14@Init:
	xor	esi, esi
$LN15@Init:

; 1701 :     pipeline_states [ 6] = new PipelineQuery (L"Geometry Shader Primitives Emitted",         GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+20, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T6[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	test	esi, esi
	je	SHORT $LN16@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	34					; 00000022H
	push	OFFSET $SG323809
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33523		; 000082f3H

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1701 :     pipeline_states [ 6] = new PipelineQuery (L"Geometry Shader Primitives Emitted",         GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB);

	jmp	SHORT $LN17@Init
$LN16@Init:
	xor	esi, esi
$LN17@Init:

; 1702 :     pipeline_states [ 7] = new PipelineQuery (L"Fragment Shader Invocations",                GL_FRAGMENT_SHADER_INVOCATIONS_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+24, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T5[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	test	esi, esi
	je	SHORT $LN18@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	27					; 0000001bH
	push	OFFSET $SG323811
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33524		; 000082f4H

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1702 :     pipeline_states [ 7] = new PipelineQuery (L"Fragment Shader Invocations",                GL_FRAGMENT_SHADER_INVOCATIONS_ARB);

	jmp	SHORT $LN19@Init
$LN18@Init:
	xor	esi, esi
$LN19@Init:

; 1703 :     pipeline_states [ 8] = new PipelineQuery (L"Compute Shader Invocations",                 GL_COMPUTE_SHADER_INVOCATIONS_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+28, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T4[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
	test	esi, esi
	je	SHORT $LN20@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	26					; 0000001aH
	push	OFFSET $SG323813
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33525		; 000082f5H

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1703 :     pipeline_states [ 8] = new PipelineQuery (L"Compute Shader Invocations",                 GL_COMPUTE_SHADER_INVOCATIONS_ARB);

	jmp	SHORT $LN21@Init
$LN20@Init:
	xor	esi, esi
$LN21@Init:

; 1704 :     pipeline_states [ 9] = new PipelineQuery (L"Clipping Input Primitives",                  GL_CLIPPING_INPUT_PRIMITIVES_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+32, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T3[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H
	test	esi, esi
	je	SHORT $LN22@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	25					; 00000019H
	push	OFFSET $SG323815
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1526 :       ready_     = GL_TRUE;
; 1527 : 
; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33526		; 000082f6H

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1704 :     pipeline_states [ 9] = new PipelineQuery (L"Clipping Input Primitives",                  GL_CLIPPING_INPUT_PRIMITIVES_ARB);

	jmp	SHORT $LN23@Init
$LN22@Init:
	xor	esi, esi
$LN23@Init:

; 1705 :     pipeline_states [10] = new PipelineQuery (L"Clipping Output Primitives",                 GL_CLIPPING_OUTPUT_PRIMITIVES_ARB);

	push	48					; 00000030H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+36, esi
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T2[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 20		; 00000014H
	test	esi, esi
	je	SHORT $LN24@Init

; 1521 :     {

	lea	ecx, DWORD PTR [esi+24]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	26					; 0000001aH
	push	OFFSET $SG323817
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1521 :     {

	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1523 :       glGenQueries (1, &query_);

	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	1
	call	DWORD PTR ___glewGenQueries

; 1524 : 
; 1525 :       finished_  = GL_FALSE;

	mov	WORD PTR [esi+1], 256			; 00000100H

; 1706 : 
; 1707 :     return true;

	mov	al, 1

; 1528 :       target_    = target;

	mov	DWORD PTR [esi+20], 33527		; 000082f7H

; 1529 :       active_    = GL_FALSE;

	mov	BYTE PTR [esi], 0

; 1705 :     pipeline_states [10] = new PipelineQuery (L"Clipping Output Primitives",                 GL_CLIPPING_OUTPUT_PRIMITIVES_ARB);

	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+40, esi
	pop	esi

; 1708 :   }
; 1709 : 
; 1710 :   return false;
; 1711 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@Init:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	al, 1
	mov	DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+40, 0
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Init@GLPerf@@YA_NXZ$0:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$11:
	mov	ecx, DWORD PTR $T12[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$1:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$17:
	mov	ecx, DWORD PTR $T11[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$2:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$23:
	mov	ecx, DWORD PTR $T10[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$3:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$29:
	mov	ecx, DWORD PTR $T9[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$4:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$35:
	mov	ecx, DWORD PTR $T8[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$5:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$41:
	mov	ecx, DWORD PTR $T7[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$6:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$47:
	mov	ecx, DWORD PTR $T6[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$7:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$53:
	mov	ecx, DWORD PTR $T5[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$8:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$59:
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$9:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$65:
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?Init@GLPerf@@YA_NXZ$10:
	push	48					; 00000030H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@GLPerf@@YA_NXZ$71:
	mov	ecx, DWORD PTR $T2[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?Init@GLPerf@@YA_NXZ:
	mov	eax, OFFSET __ehfuncinfo$?Init@GLPerf@@YA_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Init@GLPerf@@YA_NXZ ENDP				; GLPerf::Init
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_dw0$ = 12						; size = 4
_dw1$ = 16						; size = 4
_dw2$ = 20						; size = 4
_f0$ = 24						; size = 4
_f1$ = 28						; size = 4
_i0$ = 32						; size = 4
_pgmf$ = 36						; size = 4
_wglUseFontOutlinesW@32 PROC

; 1463 :                                      (    hDC,       dw0,       dw1,       dw2,       f0,       f1,     i0,                     pgmf));

	npad	2
	push	ebp
	mov	ebp, esp

; 1462 : OPENGL_STUB(BOOL,wglUseFontOutlinesW,(HDC hDC, DWORD dw0, DWORD dw1, DWORD dw2, FLOAT f0, FLOAT f1, int i0, LPGLYPHMETRICSFLOAT pgmf),

	mov	eax, DWORD PTR _imp_wglUseFontOutlinesW
	test	eax, eax
	jne	SHORT $LN3@wglUseFont
	push	DWORD PTR ?szName@?4??wglUseFontOutlinesW@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglUseFontOutlinesW, eax
	test	eax, eax
	jne	SHORT $LN3@wglUseFont
	push	OFFSET $SG323605
	push	OFFSET $SG323606
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	32					; 00000020H
$LN3@wglUseFont:
	push	DWORD PTR _pgmf$[ebp]
	movss	xmm0, DWORD PTR _f1$[ebp]
	push	DWORD PTR _i0$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _f0$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _dw2$[ebp]
	push	DWORD PTR _dw1$[ebp]
	push	DWORD PTR _dw0$[ebp]
	push	DWORD PTR _hDC$[ebp]
	call	eax
	pop	ebp
	ret	32					; 00000020H
_wglUseFontOutlinesW@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_dw0$ = 12						; size = 4
_dw1$ = 16						; size = 4
_dw2$ = 20						; size = 4
_f0$ = 24						; size = 4
_f1$ = 28						; size = 4
_i0$ = 32						; size = 4
_pgmf$ = 36						; size = 4
_wglUseFontOutlinesA@32 PROC

; 1461 :                                      (    hDC,       dw0,       dw1,       dw2,       f0,       f1,     i0,                     pgmf));

	npad	2
	push	ebp
	mov	ebp, esp

; 1460 : OPENGL_STUB(BOOL,wglUseFontOutlinesA,(HDC hDC, DWORD dw0, DWORD dw1, DWORD dw2, FLOAT f0, FLOAT f1, int i0, LPGLYPHMETRICSFLOAT pgmf),

	mov	eax, DWORD PTR _imp_wglUseFontOutlinesA
	test	eax, eax
	jne	SHORT $LN3@wglUseFont
	push	DWORD PTR ?szName@?4??wglUseFontOutlinesA@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglUseFontOutlinesA, eax
	test	eax, eax
	jne	SHORT $LN3@wglUseFont
	push	OFFSET $SG323577
	push	OFFSET $SG323578
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	32					; 00000020H
$LN3@wglUseFont:
	push	DWORD PTR _pgmf$[ebp]
	movss	xmm0, DWORD PTR _f1$[ebp]
	push	DWORD PTR _i0$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _f0$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _dw2$[ebp]
	push	DWORD PTR _dw1$[ebp]
	push	DWORD PTR _dw0$[ebp]
	push	DWORD PTR _hDC$[ebp]
	call	eax
	pop	ebp
	ret	32					; 00000020H
_wglUseFontOutlinesA@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_nPlanes$ = 12						; size = 4
_wglSwapLayerBuffers@8 PROC

; 1444 :                                        (     hDC,      nPlanes ));

	npad	2
	push	ebp
	mov	ebp, esp

; 1443 : OPENGL_STUB(BOOL, wglSwapLayerBuffers, ( HDC hDC, UINT nPlanes ),

	mov	eax, DWORD PTR _imp_wglSwapLayerBuffers
	test	eax, eax
	jne	SHORT $LN3@wglSwapLay
	push	DWORD PTR ?szName@?4??wglSwapLayerBuffers@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglSwapLayerBuffers, eax
	test	eax, eax
	jne	SHORT $LN3@wglSwapLay
	push	OFFSET $SG323515
	push	OFFSET $SG323516
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	8
$LN3@wglSwapLay:
	pop	ebp
	jmp	eax
_wglSwapLayerBuffers@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_n$ = 8							; size = 4
_ps$ = 12						; size = 4
_wglSwapMultipleBuffers@8 PROC

; 1429 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 1430 :   WaitForInit_GL ();

	call	?WaitForInit_GL@@YAXXZ			; WaitForInit_GL

; 1431 : 
; 1432 :   for (UINT i = 0; i < n; i++)

	mov	esi, DWORD PTR _n$[ebp]
	test	esi, esi
	je	SHORT $LN10@wglSwapMul

; 1430 :   WaitForInit_GL ();

	push	edi
	mov	edi, DWORD PTR _ps$[ebp]
$LL4@wglSwapMul:

; 1433 :     SwapBuffers (ps->hDC);

	push	DWORD PTR [edi]
	call	_SwapBuffers@4
	sub	esi, 1
	jne	SHORT $LL4@wglSwapMul
	pop	edi
$LN10@wglSwapMul:

; 1434 : 
; 1435 :   return 0;

	xor	eax, eax
	pop	esi

; 1436 : }

	pop	ebp
	ret	8
_wglSwapMultipleBuffers@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\system.h
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\size.h
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\size.h
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_last_scissor_box$1 = -112				; size = 16
_last_viewport$2 = -96					; size = 16
_rect_now$3 = -80					; size = 16
$T4 = -64						; size = 8
_last_element_array_buffer$5 = -56			; size = 4
_last_array_buffer$6 = -52				; size = 4
_last_blend_src$7 = -48					; size = 4
_last_blend_dst$8 = -44					; size = 4
_last_blend_equation_rgb$9 = -40			; size = 4
_last_blend_equation_alpha$10 = -36			; size = 4
_last_drawbuffer$11 = -32				; size = 4
_last_readbuffer$12 = -28				; size = 4
_last_vertex_array$13 = -24				; size = 4
_last_program$14 = -20					; size = 4
_last_texture$15 = -16					; size = 4
_last_active_texture$16 = -12				; size = 4
_last_framebuffer$17 = -8				; size = 4
_last_enable_cull_face$1$ = -2				; size = 1
_last_enable_blend$1$ = -1				; size = 1
_SK_CEGUI_DrawGL PROC

; 1184 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H

; 1185 :   if (! config.cegui.enable)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+160, 0
	je	$LN7@SK_CEGUI_D

; 1186 :     return;
; 1187 : 
; 1188 :   InterlockedIncrement (&__cegui_frames_drawn);

	lock	 inc	 DWORD PTR ?__cegui_frames_drawn@@3JC

; 1189 : 
; 1190 :   static HWND last_hwnd = game_window.hWnd;

	mov	eax, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR __tls_index
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?1??SK_CEGUI_DrawGL@@9@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jg	$LN32@SK_CEGUI_D
$LN2@SK_CEGUI_D:

; 1191 : 
; 1192 :   if (last_hwnd != game_window.hWnd)

	mov	eax, DWORD PTR ?last_hwnd@?1??SK_CEGUI_DrawGL@@9@4PAUHWND__@@A
	cmp	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	je	SHORT $LN5@SK_CEGUI_D

; 1193 :   {
; 1194 :     if (cegGL != nullptr)

	cmp	DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A, 0 ; cegGL
	je	SHORT $LN28@SK_CEGUI_D

; 1195 :     {
; 1196 :       CEGUI::WindowManager::getDllSingleton ().cleanDeadPool ();

	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VWindowManager@CEGUI@@@CEGUI@@SAAAVWindowManager@2@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?cleanDeadPool@WindowManager@CEGUI@@QAEXXZ

; 1197 :       cegGL->destroySystem ();

	call	DWORD PTR __imp_?destroySystem@OpenGL3Renderer@CEGUI@@SAXXZ

; 1198 :       cegGL = nullptr;
; 1199 : 
; 1200 :       last_hwnd = game_window.hWnd;

	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	mov	DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A, 0 ; cegGL
	mov	DWORD PTR ?last_hwnd@?1??SK_CEGUI_DrawGL@@9@4PAUHWND__@@A, eax

; 1201 :     }
; 1202 :   }
; 1203 : 
; 1204 :   // TODO: Create a secondary context that shares "display lists" so that
; 1205 :   //         we have a pure state machine all to ourselves.
; 1206 :   if (cegGL == nullptr) {

	jmp	SHORT $LN28@SK_CEGUI_D
$LN5@SK_CEGUI_D:
	cmp	DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A, 0 ; cegGL
	jne	SHORT $LN6@SK_CEGUI_D
$LN28@SK_CEGUI_D:

; 1207 :     extern void
; 1208 :     SK_InstallWindowHook (HWND hWnd);
; 1209 :     SK_InstallWindowHook (WindowFromDC (wglGetCurrentDC ()));

	call	_wglGetCurrentDC@0
	push	eax
	call	DWORD PTR __imp__WindowFromDC@4
	push	eax
	call	?SK_InstallWindowHook@@YAXPAUHWND__@@@Z	; SK_InstallWindowHook
	add	esp, 4

; 1210 : 
; 1211 :     ResetCEGUI_GL ();

	call	?ResetCEGUI_GL@@YAXXZ			; ResetCEGUI_GL

; 1300 :   }
; 1301 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@SK_CEGUI_D:
	push	ebx
	push	esi

; 1212 :   }
; 1213 : 
; 1214 :   else
; 1215 :   {
; 1216 :     static RECT rect;
; 1217 :            RECT rect_now;
; 1218 : 
; 1219 :     GetClientRect (hWndRender, &rect_now);

	lea	eax, DWORD PTR _rect_now$3[ebp]
	push	eax
	push	DWORD PTR ?hWndRender@@3PAUHWND__@@A	; hWndRender
	call	DWORD PTR __imp__GetClientRect@8

; 1220 : 
; 1221 :     if (memcmp (&rect, &rect_now, sizeof RECT))

	mov	ecx, OFFSET ?rect@?P@??SK_CEGUI_DrawGL@@9@4UtagRECT@@A
	lea	edx, DWORD PTR _rect_now$3[ebp]
	mov	esi, 12					; 0000000cH
$LL31@SK_CEGUI_D:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN30@SK_CEGUI_D
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL31@SK_CEGUI_D
	jmp	SHORT $LN8@SK_CEGUI_D
$LN30@SK_CEGUI_D:

; 1223 :       CEGUI::System::getDllSingleton ().getRenderer ()->setDisplaySize (

	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VSystem@CEGUI@@@CEGUI@@SAAAVSystem@2@XZ
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
; File c:\users\andon\source\repos\specialk\depends\include\cegui\system.h

; 192  : 	Renderer*	getRenderer(void) const			{return d_renderer;}

	mov	ecx, DWORD PTR [eax+20]
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1223 :       CEGUI::System::getDllSingleton ().getRenderer ()->setDisplaySize (

	mov	eax, DWORD PTR _rect_now$3[ebp+8]
	sub	eax, DWORD PTR _rect_now$3[ebp]
	movd	xmm0, eax
	mov	eax, DWORD PTR _rect_now$3[ebp+12]
	sub	eax, DWORD PTR _rect_now$3[ebp+4]
	cvtdq2ps xmm0, xmm0
; File c:\users\andon\source\repos\specialk\depends\include\cegui\size.h

; 76   :         d_width(width),

	movss	DWORD PTR $T4[ebp], xmm0
	movd	xmm0, eax
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1223 :       CEGUI::System::getDllSingleton ().getRenderer ()->setDisplaySize (

	cvtdq2ps xmm0, xmm0
; File c:\users\andon\source\repos\specialk\depends\include\cegui\size.h

; 77   :         d_height(height)

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1223 :       CEGUI::System::getDllSingleton ().getRenderer ()->setDisplaySize (

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+68]

; 1224 :           CEGUI::Sizef (
; 1225 :             static_cast <float> (rect_now.right - rect_now.left),
; 1226 :               static_cast <float> (rect_now.bottom - rect_now.top)
; 1227 :           )
; 1228 :       );
; 1229 : 
; 1230 :       SK_TextOverlayManager::getInstance ()->resetAllOverlays (cegGL);

	push	DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A ; cegGL
	call	?getInstance@SK_TextOverlayManager@@SAPAV1@XZ ; SK_TextOverlayManager::getInstance
	mov	ecx, eax
	call	?resetAllOverlays@SK_TextOverlayManager@@QAEXPAVRenderer@CEGUI@@@Z ; SK_TextOverlayManager::resetAllOverlays

; 1231 : 
; 1232 :       rect = rect_now;

	movups	xmm0, XMMWORD PTR _rect_now$3[ebp]
	movups	XMMWORD PTR ?rect@?P@??SK_CEGUI_DrawGL@@9@4UtagRECT@@A, xmm0
$LN8@SK_CEGUI_D:

; 1233 :     }
; 1234 : 
; 1235 :     // Backup GL state
; 1236 :     GLint     last_program;              glGetIntegerv (GL_CURRENT_PROGRAM,              &last_program);

	lea	eax, DWORD PTR _last_program$14[ebp]
	push	eax
	push	35725					; 00008b8dH
	call	_glGetIntegerv@8

; 1237 :     GLint     last_texture;              glGetIntegerv (GL_TEXTURE_BINDING_2D,           &last_texture);

	lea	eax, DWORD PTR _last_texture$15[ebp]
	push	eax
	push	32873					; 00008069H
	call	_glGetIntegerv@8

; 1238 :     GLint     last_active_texture;       glGetIntegerv (GL_ACTIVE_TEXTURE,               &last_active_texture);

	lea	eax, DWORD PTR _last_active_texture$16[ebp]
	push	eax
	push	34016					; 000084e0H
	call	_glGetIntegerv@8

; 1239 :     GLint     last_drawbuffer;           glGetIntegerv (GL_DRAW_FRAMEBUFFER_BINDING,     &last_drawbuffer);

	lea	eax, DWORD PTR _last_drawbuffer$11[ebp]
	push	eax
	push	36006					; 00008ca6H
	call	_glGetIntegerv@8

; 1240 :     GLint     last_readbuffer;           glGetIntegerv (GL_DRAW_FRAMEBUFFER_BINDING,     &last_readbuffer);

	lea	eax, DWORD PTR _last_readbuffer$12[ebp]
	push	eax
	push	36006					; 00008ca6H
	call	_glGetIntegerv@8

; 1241 :     GLint     last_framebuffer;          glGetIntegerv (GL_FRAMEBUFFER_BINDING,          &last_framebuffer);

	lea	eax, DWORD PTR _last_framebuffer$17[ebp]
	push	eax
	push	36006					; 00008ca6H
	call	_glGetIntegerv@8

; 1242 :     GLint     last_array_buffer;         glGetIntegerv (GL_ARRAY_BUFFER_BINDING,         &last_array_buffer);

	lea	eax, DWORD PTR _last_array_buffer$6[ebp]
	push	eax
	push	34964					; 00008894H
	call	_glGetIntegerv@8

; 1243 :     GLint     last_element_array_buffer; glGetIntegerv (GL_ELEMENT_ARRAY_BUFFER_BINDING, &last_element_array_buffer);

	lea	eax, DWORD PTR _last_element_array_buffer$5[ebp]
	push	eax
	push	34965					; 00008895H
	call	_glGetIntegerv@8

; 1244 :     GLint     last_vertex_array;         glGetIntegerv (GL_VERTEX_ARRAY_BINDING,         &last_vertex_array);

	lea	eax, DWORD PTR _last_vertex_array$13[ebp]
	push	eax
	push	34229					; 000085b5H
	call	_glGetIntegerv@8

; 1245 :     GLint     last_blend_src;            glGetIntegerv (GL_BLEND_SRC,                    &last_blend_src);

	lea	eax, DWORD PTR _last_blend_src$7[ebp]
	push	eax
	push	3041					; 00000be1H
	call	_glGetIntegerv@8

; 1246 :     GLint     last_blend_dst;            glGetIntegerv (GL_BLEND_DST,                    &last_blend_dst);

	lea	eax, DWORD PTR _last_blend_dst$8[ebp]
	push	eax
	push	3040					; 00000be0H
	call	_glGetIntegerv@8

; 1247 :     GLint     last_blend_equation_rgb;   glGetIntegerv (GL_BLEND_EQUATION_RGB,           &last_blend_equation_rgb);

	lea	eax, DWORD PTR _last_blend_equation_rgb$9[ebp]
	push	eax
	push	32777					; 00008009H
	call	_glGetIntegerv@8

; 1248 :     GLint     last_blend_equation_alpha; glGetIntegerv (GL_BLEND_EQUATION_ALPHA,         &last_blend_equation_alpha);

	lea	eax, DWORD PTR _last_blend_equation_alpha$10[ebp]
	push	eax
	push	34877					; 0000883dH
	call	_glGetIntegerv@8

; 1249 :     GLint     last_viewport    [4];      glGetIntegerv (GL_VIEWPORT,                      last_viewport);

	lea	eax, DWORD PTR _last_viewport$2[ebp]
	push	eax
	push	2978					; 00000ba2H
	call	_glGetIntegerv@8

; 1250 :     GLint     last_scissor_box [4];      glGetIntegerv (GL_SCISSOR_BOX,                   last_scissor_box); 

	lea	eax, DWORD PTR _last_scissor_box$1[ebp]
	push	eax
	push	3088					; 00000c10H
	call	_glGetIntegerv@8

; 1251 :     GLboolean last_enable_blend        = glIsEnabled   (GL_BLEND);

	push	3042					; 00000be2H
	call	_glIsEnabled@4

; 1252 :     GLboolean last_enable_cull_face    = glIsEnabled   (GL_CULL_FACE);

	push	2884					; 00000b44H
	mov	BYTE PTR _last_enable_blend$1$[ebp], al
	call	_glIsEnabled@4

; 1253 :     GLboolean last_enable_depth_test   = glIsEnabled   (GL_DEPTH_TEST);

	push	2929					; 00000b71H
	mov	BYTE PTR _last_enable_cull_face$1$[ebp], al
	call	_glIsEnabled@4

; 1254 :     GLboolean last_enable_scissor_test = glIsEnabled   (GL_SCISSOR_TEST);

	push	3089					; 00000c11H
	mov	bh, al
	call	_glIsEnabled@4

; 1255 : 
; 1256 :     // Do not touch the default VAO state (assuming the context even has one)
; 1257 :     static GLuint ceGL_VAO = 0;
; 1258 :               if (ceGL_VAO == 0 || (! glIsVertexArray (ceGL_VAO))) glGenVertexArrays (0, &ceGL_VAO);

	mov	ecx, DWORD PTR ?ceGL_VAO@?P@??SK_CEGUI_DrawGL@@9@4IA
	mov	bl, al
	test	ecx, ecx
	je	SHORT $LN10@SK_CEGUI_D
	push	ecx
	call	DWORD PTR ___glewIsVertexArray
	test	al, al
	jne	SHORT $LN9@SK_CEGUI_D
$LN10@SK_CEGUI_D:
	push	OFFSET ?ceGL_VAO@?P@??SK_CEGUI_DrawGL@@9@4IA
	push	0
	call	DWORD PTR ___glewGenVertexArrays
$LN9@SK_CEGUI_D:

; 1259 : 
; 1260 :     glBindVertexArray (ceGL_VAO);

	push	DWORD PTR ?ceGL_VAO@?P@??SK_CEGUI_DrawGL@@9@4IA
	call	DWORD PTR ___glewBindVertexArray

; 1261 :     glBindFramebuffer (GL_FRAMEBUFFER, 0);

	push	0
	push	36160					; 00008d40H
	call	DWORD PTR ___glewBindFramebuffer

; 1262 : 
; 1263 :     cegGL->beginRendering   ();

	mov	ecx, DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A ; cegGL
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+60]

; 1264 :     {
; 1265 :       SK_TextOverlayManager::getInstance ()->drawAllOverlays (0.0f, 0.0f);

	push	0
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	?getInstance@SK_TextOverlayManager@@SAPAV1@XZ ; SK_TextOverlayManager::getInstance
	mov	ecx, eax
	call	?drawAllOverlays@SK_TextOverlayManager@@QAEMMM_N@Z ; SK_TextOverlayManager::drawAllOverlays
	fstp	ST(0)

; 1266 :     
; 1267 :       SK_Steam_DrawOSD ();

	call	?SK_Steam_DrawOSD@@YAXXZ		; SK_Steam_DrawOSD

; 1268 :     
; 1269 :       CEGUI::System::getDllSingleton ().renderAllGUIContexts ();

	call	DWORD PTR __imp_?getDllSingleton@?$Singleton@VSystem@CEGUI@@@CEGUI@@SAAAVSystem@2@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?renderAllGUIContexts@System@CEGUI@@QAEXXZ

; 1270 : 
; 1271 :       SK_ImGui_DrawFrame (0x00, nullptr);

	push	0
	push	0
	call	?SK_ImGui_DrawFrame@@YAKKPAX@Z		; SK_ImGui_DrawFrame

; 1272 :     }
; 1273 :     cegGL->endRendering     ();

	mov	ecx, DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A ; cegGL
	add	esp, 8
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+64]

; 1274 : 
; 1275 :     glActiveTexture         (last_active_texture);

	push	DWORD PTR _last_active_texture$16[ebp]
	call	DWORD PTR ___glewActiveTexture

; 1276 :     glBindTexture           (GL_TEXTURE_2D,           last_texture);

	push	DWORD PTR _last_texture$15[ebp]
	push	3553					; 00000de1H
	call	_glBindTexture@8

; 1277 : 
; 1278 :     // Bind stat encapsulation objects
; 1279 :     glUseProgram            (                         last_program);

	push	DWORD PTR _last_program$14[ebp]
	call	DWORD PTR ___glewUseProgram

; 1280 :     glBindVertexArray       (                         last_vertex_array);

	push	DWORD PTR _last_vertex_array$13[ebp]
	call	DWORD PTR ___glewBindVertexArray

; 1281 :     glBindFramebuffer       (GL_FRAMEBUFFER,          last_framebuffer);

	push	DWORD PTR _last_framebuffer$17[ebp]
	push	36160					; 00008d40H
	call	DWORD PTR ___glewBindFramebuffer

; 1282 : 
; 1283 :     if (last_readbuffer != last_framebuffer)

	mov	eax, DWORD PTR _last_readbuffer$12[ebp]
	mov	ecx, DWORD PTR _last_framebuffer$17[ebp]
	cmp	eax, ecx
	je	SHORT $LN11@SK_CEGUI_D

; 1284 :       glBindFramebuffer     (GL_READ_BUFFER,          last_readbuffer);

	push	eax
	push	3074					; 00000c02H
	call	DWORD PTR ___glewBindFramebuffer
	mov	ecx, DWORD PTR _last_framebuffer$17[ebp]
$LN11@SK_CEGUI_D:

; 1285 :     if (last_drawbuffer != last_framebuffer)

	mov	eax, DWORD PTR _last_drawbuffer$11[ebp]
	cmp	eax, ecx
	je	SHORT $LN12@SK_CEGUI_D

; 1286 :       glBindFramebuffer     (GL_DRAW_BUFFER,          last_drawbuffer);

	push	eax
	push	3073					; 00000c01H
	call	DWORD PTR ___glewBindFramebuffer
$LN12@SK_CEGUI_D:

; 1287 : 
; 1288 :     // TODO: Shader Pipeline Objects (the above objects fully capture all cocos2d state encapsulation)
; 1289 : 
; 1290 :     glBlendEquationSeparate (last_blend_equation_rgb, last_blend_equation_alpha);

	push	DWORD PTR _last_blend_equation_alpha$10[ebp]
	push	DWORD PTR _last_blend_equation_rgb$9[ebp]
	call	DWORD PTR ___glewBlendEquationSeparate

; 1291 :     glBlendFunc             (last_blend_src,          last_blend_dst);

	push	DWORD PTR _last_blend_dst$8[ebp]
	push	DWORD PTR _last_blend_src$7[ebp]
	call	_glBlendFunc@8

; 1292 : 
; 1293 :     if (last_enable_blend)        glEnable (GL_BLEND);        else glDisable (GL_BLEND);

	cmp	BYTE PTR _last_enable_blend$1$[ebp], 0
	push	3042					; 00000be2H
	je	SHORT $LN13@SK_CEGUI_D
	call	_glEnable@4
	jmp	SHORT $LN14@SK_CEGUI_D
$LN13@SK_CEGUI_D:
	call	_glDisable@4
$LN14@SK_CEGUI_D:

; 1294 :     if (last_enable_cull_face)    glEnable (GL_CULL_FACE);    else glDisable (GL_CULL_FACE);

	cmp	BYTE PTR _last_enable_cull_face$1$[ebp], 0
	push	2884					; 00000b44H
	je	SHORT $LN15@SK_CEGUI_D
	call	_glEnable@4
	jmp	SHORT $LN16@SK_CEGUI_D
$LN15@SK_CEGUI_D:
	call	_glDisable@4
$LN16@SK_CEGUI_D:

; 1295 :     if (last_enable_depth_test)   glEnable (GL_DEPTH_TEST);   else glDisable (GL_DEPTH_TEST);

	push	2929					; 00000b71H
	test	bh, bh
	je	SHORT $LN17@SK_CEGUI_D
	call	_glEnable@4
	jmp	SHORT $LN18@SK_CEGUI_D
$LN17@SK_CEGUI_D:
	call	_glDisable@4
$LN18@SK_CEGUI_D:
	pop	esi

; 1296 :     if (last_enable_scissor_test) glEnable (GL_SCISSOR_TEST); else glDisable (GL_SCISSOR_TEST);

	test	bl, bl
	pop	ebx
	push	3089					; 00000c11H
	je	SHORT $LN19@SK_CEGUI_D
	call	_glEnable@4
	jmp	SHORT $LN20@SK_CEGUI_D
$LN19@SK_CEGUI_D:
	call	_glDisable@4
$LN20@SK_CEGUI_D:

; 1297 : 
; 1298 :     glViewport ( last_viewport    [0], last_viewport    [1], (GLsizei)last_viewport    [2], (GLsizei)last_viewport    [3]);

	push	DWORD PTR _last_viewport$2[ebp+12]
	push	DWORD PTR _last_viewport$2[ebp+8]
	push	DWORD PTR _last_viewport$2[ebp+4]
	push	DWORD PTR _last_viewport$2[ebp]
	call	_glViewport@16

; 1299 :     glScissor  ( last_scissor_box [0], last_scissor_box [1], (GLsizei)last_scissor_box [2], (GLsizei)last_scissor_box [3]);

	push	DWORD PTR _last_scissor_box$1[ebp+12]
	push	DWORD PTR _last_scissor_box$1[ebp+8]
	push	DWORD PTR _last_scissor_box$1[ebp+4]
	push	DWORD PTR _last_scissor_box$1[ebp]
	call	_glScissor@16
$LN7@SK_CEGUI_D:

; 1300 :   }
; 1301 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN32@SK_CEGUI_D:

; 1189 : 
; 1190 :   static HWND last_hwnd = game_window.hWnd;

	push	OFFSET ?$TSS0@?1??SK_CEGUI_DrawGL@@9@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??SK_CEGUI_DrawGL@@9@4HA, -1
	jne	$LN2@SK_CEGUI_D
	mov	eax, DWORD PTR ?game_window@@3Usk_window_s@@A+4
	push	OFFSET ?$TSS0@?1??SK_CEGUI_DrawGL@@9@4HA
	mov	DWORD PTR ?last_hwnd@?1??SK_CEGUI_DrawGL@@9@4PAUHWND__@@A, eax
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN2@SK_CEGUI_D
_SK_CEGUI_DrawGL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_PixelFormat$ = 12					; size = 4
_pdf$ = 16						; size = 4
_wglSetPixelFormat@12 PROC

; 1179 :                                      (    hDC,       PixelFormat,                              pdf));

	npad	2
	push	ebp
	mov	ebp, esp

; 1178 : OPENGL_STUB(BOOL, wglSetPixelFormat, (HDC hDC, DWORD PixelFormat, CONST PIXELFORMATDESCRIPTOR *pdf),

	mov	eax, DWORD PTR _imp_wglSetPixelFormat
	test	eax, eax
	jne	SHORT $LN3@wglSetPixe
	push	DWORD PTR ?szName@?4??wglSetPixelFormat@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglSetPixelFormat, eax
	test	eax, eax
	jne	SHORT $LN3@wglSetPixe
	push	OFFSET $SG323379
	push	OFFSET $SG323380
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
$LN3@wglSetPixe:
	pop	ebp
	jmp	eax
_wglSetPixelFormat@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_LayerPlane$ = 12					; size = 4
_Start$ = 16						; size = 4
_Entries$ = 20						; size = 4
_cr$ = 24						; size = 4
_wglSetLayerPaletteEntries@20 PROC

; 1176 :                                               (    hDC,       LayerPlane,       Start,       Entries,                 cr));

	npad	2
	push	ebp
	mov	ebp, esp

; 1175 : OPENGL_STUB(DWORD, wglSetLayerPaletteEntries, (HDC hDC, DWORD LayerPlane, DWORD Start, DWORD Entries, CONST COLORREF *cr),

	mov	eax, DWORD PTR _imp_wglSetLayerPaletteEntries
	test	eax, eax
	jne	SHORT $LN3@wglSetLaye
	push	DWORD PTR ?szName@?4??wglSetLayerPaletteEntries@@9@20@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglSetLayerPaletteEntries, eax
	test	eax, eax
	jne	SHORT $LN3@wglSetLaye
	push	OFFSET $SG323361
	push	OFFSET $SG323362
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	20					; 00000014H
$LN3@wglSetLaye:
	pop	ebp
	jmp	eax
_wglSetLayerPaletteEntries@20 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_LayerPlane$ = 12					; size = 4
_Realize$ = 16						; size = 4
_wglRealizeLayerPalette@12 PROC

; 1173 :                                           (    hDC,       LayerPlane,      Realize));

	npad	2
	push	ebp
	mov	ebp, esp

; 1172 : OPENGL_STUB(BOOL, wglRealizeLayerPalette, (HDC hDC, DWORD LayerPlane, BOOL Realize),

	mov	eax, DWORD PTR _imp_wglRealizeLayerPalette
	test	eax, eax
	jne	SHORT $LN3@wglRealize
	push	DWORD PTR ?szName@?4??wglRealizeLayerPalette@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglRealizeLayerPalette, eax
	test	eax, eax
	jne	SHORT $LN3@wglRealize
	push	OFFSET $SG323339
	push	OFFSET $SG323340
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
$LN3@wglRealize:
	pop	ebp
	jmp	eax
_wglRealizeLayerPalette@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_iPixelFormat$ = 12					; size = 4
_iLayerPlane$ = 16					; size = 4
_nAttributes$ = 20					; size = 4
_piAttributes$ = 24					; size = 4
_pValues$ = 28						; size = 4
_wglGetPixelFormat@24 PROC

; 1170 :                                      (    hDC,       iPixelFormat,       iLayerPlane,      nAttributes,        piAttributes,        pValues));

	npad	2
	push	ebp
	mov	ebp, esp

; 1169 : OPENGL_STUB(BOOL, wglGetPixelFormat, (HDC hDC, DWORD iPixelFormat, DWORD iLayerPlane, UINT nAttributes, DWORD *piAttributes, DWORD *pValues),

	mov	eax, DWORD PTR _imp_wglGetPixelFormat
	test	eax, eax
	jne	SHORT $LN3@wglGetPixe
	push	DWORD PTR ?szName@?4??wglGetPixelFormat@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglGetPixelFormat, eax
	test	eax, eax
	jne	SHORT $LN3@wglGetPixe
	push	OFFSET $SG323321
	push	OFFSET $SG323322
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	24					; 00000018H
$LN3@wglGetPixe:
	pop	ebp
	jmp	eax
_wglGetPixelFormat@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_LayerPlane$ = 12					; size = 4
_Start$ = 16						; size = 4
_Entries$ = 20						; size = 4
_cr$ = 24						; size = 4
_wglGetLayerPaletteEntries@20 PROC

; 1167 :                                               (    hDC,       LayerPlane,       Start,       Entries,           cr));

	npad	2
	push	ebp
	mov	ebp, esp

; 1166 : OPENGL_STUB(DWORD, wglGetLayerPaletteEntries, (HDC hDC, DWORD LayerPlane, DWORD Start, DWORD Entries, COLORREF *cr),

	mov	eax, DWORD PTR _imp_wglGetLayerPaletteEntries
	test	eax, eax
	jne	SHORT $LN3@wglGetLaye
	push	DWORD PTR ?szName@?4??wglGetLayerPaletteEntries@@9@20@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglGetLayerPaletteEntries, eax
	test	eax, eax
	jne	SHORT $LN3@wglGetLaye
	push	OFFSET $SG323297
	push	OFFSET $SG323298
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	20					; 00000014H
$LN3@wglGetLaye:
	pop	ebp
	jmp	eax
_wglGetLayerPaletteEntries@20 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_PixelFormat$ = 12					; size = 4
_nBytes$ = 16						; size = 4
_pfd$ = 20						; size = 4
_wglDescribePixelFormat@16 PROC

; 1164 :                                            (    hDC,       PixelFormat,      nBytes,                         pfd));

	npad	2
	push	ebp
	mov	ebp, esp

; 1163 : OPENGL_STUB(DWORD, wglDescribePixelFormat, (HDC hDC, DWORD PixelFormat, UINT nBytes, LPPIXELFORMATDESCRIPTOR pfd),

	mov	eax, DWORD PTR _imp_wglDescribePixelFormat
	test	eax, eax
	jne	SHORT $LN3@wglDescrib
	push	DWORD PTR ?szName@?4??wglDescribePixelFormat@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglDescribePixelFormat, eax
	test	eax, eax
	jne	SHORT $LN3@wglDescrib
	push	OFFSET $SG323275
	push	OFFSET $SG323276
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	16					; 00000010H
$LN3@wglDescrib:
	pop	ebp
	jmp	eax
_wglDescribePixelFormat@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_PixelFormat$ = 12					; size = 4
_LayerPlane$ = 16					; size = 4
_nBytes$ = 20						; size = 4
_lpd$ = 24						; size = 4
_wglDescribeLayerPlane@20 PROC

; 1161 :                                          (    hDC,       PixelFormat,       LayerPlane,      nBytes,                        lpd));

	npad	2
	push	ebp
	mov	ebp, esp

; 1160 : OPENGL_STUB(BOOL, wglDescribeLayerPlane, (HDC hDC, DWORD PixelFormat, DWORD LayerPlane, UINT nBytes, LPLAYERPLANEDESCRIPTOR lpd),

	mov	eax, DWORD PTR _imp_wglDescribeLayerPlane
	test	eax, eax
	jne	SHORT $LN3@wglDescrib
	push	DWORD PTR ?szName@?4??wglDescribeLayerPlane@@9@20@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglDescribeLayerPlane, eax
	test	eax, eax
	jne	SHORT $LN3@wglDescrib
	push	OFFSET $SG323255
	push	OFFSET $SG323256
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	20					; 00000014H
$LN3@wglDescrib:
	pop	ebp
	jmp	eax
_wglDescribeLayerPlane@20 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_pfd$ = 12						; size = 4
_wglChoosePixelFormat@8 PROC

; 1130 :                                        (    hDC,                              pfd));

	npad	2
	push	ebp
	mov	ebp, esp

; 1129 : OPENGL_STUB(INT, wglChoosePixelFormat, (HDC hDC, CONST PIXELFORMATDESCRIPTOR *pfd),

	mov	eax, DWORD PTR _imp_wglChoosePixelFormat
	test	eax, eax
	jne	SHORT $LN3@wglChooseP
	push	DWORD PTR ?szName@?4??wglChoosePixelFormat@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglChoosePixelFormat, eax
	test	eax, eax
	jne	SHORT $LN3@wglChooseP
	push	OFFSET $SG323195
	push	OFFSET $SG323196
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	8
$LN3@wglChooseP:
	pop	ebp
	jmp	eax
_wglChoosePixelFormat@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_dw0$ = 12						; size = 4
_dw1$ = 16						; size = 4
_dw2$ = 20						; size = 4
_wglUseFontBitmapsW@16 PROC

; 1127 :                                       (    hDC,       dw0,       dw1,       dw2));

	npad	2
	push	ebp
	mov	ebp, esp

; 1126 : OPENGL_STUB(BOOL, wglUseFontBitmapsW, (HDC hDC, DWORD dw0, DWORD dw1, DWORD dw2),

	mov	eax, DWORD PTR _imp_wglUseFontBitmapsW
	test	eax, eax
	jne	SHORT $LN3@wglUseFont
	push	DWORD PTR ?szName@?4??wglUseFontBitmapsW@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglUseFontBitmapsW, eax
	test	eax, eax
	jne	SHORT $LN3@wglUseFont
	push	OFFSET $SG323179
	push	OFFSET $SG323180
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	16					; 00000010H
$LN3@wglUseFont:
	pop	ebp
	jmp	eax
_wglUseFontBitmapsW@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_dw0$ = 12						; size = 4
_dw1$ = 16						; size = 4
_dw2$ = 20						; size = 4
_wglUseFontBitmapsA@16 PROC

; 1125 :                                       (    hDC,       dw0,       dw1,       dw2));

	npad	2
	push	ebp
	mov	ebp, esp

; 1124 : OPENGL_STUB(BOOL, wglUseFontBitmapsA, (HDC hDC, DWORD dw0, DWORD dw1, DWORD dw2),

	mov	eax, DWORD PTR _imp_wglUseFontBitmapsA
	test	eax, eax
	jne	SHORT $LN3@wglUseFont
	push	DWORD PTR ?szName@?4??wglUseFontBitmapsA@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglUseFontBitmapsA, eax
	test	eax, eax
	jne	SHORT $LN3@wglUseFont
	push	OFFSET $SG323159
	push	OFFSET $SG323160
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	16					; 00000010H
$LN3@wglUseFont:
	pop	ebp
	jmp	eax
_wglUseFontBitmapsA@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hglrc1$ = 8						; size = 4
_hglrc2$ = 12						; size = 4
_wglShareLists@8 PROC

; 1123 :                                          (      hglrc1,       hglrc2));

	npad	2
	push	ebp
	mov	ebp, esp

; 1122 : OPENGL_STUB(BOOL, wglShareLists,         (HGLRC hglrc1, HGLRC hglrc2),

	mov	eax, DWORD PTR _imp_wglShareLists
	test	eax, eax
	jne	SHORT $LN3@wglShareLi
	push	DWORD PTR ?szName@?4??wglShareLists@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglShareLists, eax
	test	eax, eax
	jne	SHORT $LN3@wglShareLi
	push	OFFSET $SG323139
	push	OFFSET $SG323140
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	8
$LN3@wglShareLi:
	pop	ebp
	jmp	eax
_wglShareLists@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_hglrc$ = 12						; size = 4
_wglMakeCurrent@8 PROC

; 1121 :                                          (    hDC,       hglrc));

	npad	2
	push	ebp
	mov	ebp, esp

; 1120 : OPENGL_STUB(BOOL, wglMakeCurrent,        (HDC hDC, HGLRC hglrc),

	mov	eax, DWORD PTR _imp_wglMakeCurrent
	test	eax, eax
	jne	SHORT $LN3@wglMakeCur
	push	DWORD PTR ?szName@?4??wglMakeCurrent@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglMakeCurrent, eax
	test	eax, eax
	jne	SHORT $LN3@wglMakeCur
	push	OFFSET $SG323123
	push	OFFSET $SG323124
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	8
$LN3@wglMakeCur:
	pop	ebp
	jmp	eax
_wglMakeCurrent@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_str$ = 8						; size = 4
_wglGetProcAddress@4 PROC

; 1119 :                                          (       str));

	npad	2
	push	ebp
	mov	ebp, esp

; 1118 : OPENGL_STUB(PROC, wglGetProcAddress,     (LPCSTR str),

	mov	eax, DWORD PTR _imp_wglGetProcAddress
	test	eax, eax
	jne	SHORT $LN3@wglGetProc
	push	DWORD PTR ?szName@?4??wglGetProcAddress@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglGetProcAddress, eax
	test	eax, eax
	jne	SHORT $LN3@wglGetProc
	push	OFFSET $SG323107
	push	OFFSET $SG323108
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	4
$LN3@wglGetProc:
	pop	ebp
	jmp	eax
_wglGetProcAddress@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_wglGetCurrentDC@0 PROC

; 1117 : OPENGL_STUB(HDC,  wglGetCurrentDC,       (VOID), ());

	mov	eax, DWORD PTR _imp_wglGetCurrentDC
	test	eax, eax
	jne	SHORT $LN3@wglGetCurr
	push	DWORD PTR ?szName@?4??wglGetCurrentDC@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglGetCurrentDC, eax
	test	eax, eax
	jne	SHORT $LN3@wglGetCurr
	push	OFFSET $SG323093
	push	OFFSET $SG323094
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	ret	0
$LN3@wglGetCurr:
	jmp	eax
_wglGetCurrentDC@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_wglGetCurrentContext@0 PROC

; 1116 : OPENGL_STUB(HGLRC,wglGetCurrentContext,  (VOID), ());

	mov	eax, DWORD PTR _imp_wglGetCurrentContext
	test	eax, eax
	jne	SHORT $LN3@wglGetCurr
	push	DWORD PTR ?szName@?4??wglGetCurrentContext@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglGetCurrentContext, eax
	test	eax, eax
	jne	SHORT $LN3@wglGetCurr
	push	OFFSET $SG323079
	push	OFFSET $SG323080
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	ret	0
$LN3@wglGetCurr:
	jmp	eax
_wglGetCurrentContext@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hglrc$ = 8						; size = 4
_wglDeleteContext@4 PROC

; 1115 :                                          (      hglrc));

	npad	2
	push	ebp
	mov	ebp, esp

; 1114 : OPENGL_STUB(BOOL, wglDeleteContext,      (HGLRC hglrc),

	mov	eax, DWORD PTR _imp_wglDeleteContext
	test	eax, eax
	jne	SHORT $LN3@wglDeleteC
	push	DWORD PTR ?szName@?4??wglDeleteContext@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglDeleteContext, eax
	test	eax, eax
	jne	SHORT $LN3@wglDeleteC
	push	OFFSET $SG323065
	push	OFFSET $SG323066
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	4
$LN3@wglDeleteC:
	pop	ebp
	jmp	eax
_wglDeleteContext@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_idx$ = 12						; size = 4
_wglCreateLayerContext@8 PROC

; 1113 :                                          (    hDC,     idx));

	npad	2
	push	ebp
	mov	ebp, esp

; 1112 : OPENGL_STUB(HGLRC,wglCreateLayerContext, (HDC hDC, int idx),

	mov	eax, DWORD PTR _imp_wglCreateLayerContext
	test	eax, eax
	jne	SHORT $LN3@wglCreateL
	push	DWORD PTR ?szName@?4??wglCreateLayerContext@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglCreateLayerContext, eax
	test	eax, eax
	jne	SHORT $LN3@wglCreateL
	push	OFFSET $SG323051
	push	OFFSET $SG323052
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	8
$LN3@wglCreateL:
	pop	ebp
	jmp	eax
_wglCreateLayerContext@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_wglCreateContext@4 PROC

; 1109 :                                     (    hDC));

	npad	2
	push	ebp
	mov	ebp, esp

; 1108 : OPENGL_STUB(HGLRC,wglCreateContext, (HDC hDC),

	mov	eax, DWORD PTR _imp_wglCreateContext
	test	eax, eax
	jne	SHORT $LN3@wglCreateC
	push	DWORD PTR ?szName@?4??wglCreateContext@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglCreateContext, eax
	test	eax, eax
	jne	SHORT $LN3@wglCreateC
	push	OFFSET $SG323035
	push	OFFSET $SG323036
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	4
$LN3@wglCreateC:
	pop	ebp
	jmp	eax
_wglCreateContext@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_h1$ = 8						; size = 4
_h2$ = 12						; size = 4
_u$ = 16						; size = 4
_wglCopyContext@12 PROC

; 1107 :                                   (      h1,       h2,      u));

	npad	2
	push	ebp
	mov	ebp, esp

; 1106 : OPENGL_STUB(BOOL, wglCopyContext, (HGLRC h1, HGLRC h2, UINT u),

	mov	eax, DWORD PTR _imp_wglCopyContext
	test	eax, eax
	jne	SHORT $LN3@wglCopyCon
	push	DWORD PTR ?szName@?4??wglCopyContext@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_wglCopyContext, eax
	test	eax, eax
	jne	SHORT $LN3@wglCopyCon
	push	OFFSET $SG323021
	push	OFFSET $SG323022
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
$LN3@wglCopyCon:
	pop	ebp
	jmp	eax
_wglCopyContext@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_unknown0$ = 8						; size = 4
_unknown1$ = 12						; size = 4
_glDebugEntry@8 PROC

; 470  :                                   (      unknown0,       unknown1));

	npad	2
	push	ebp
	mov	ebp, esp

; 469  : OPENGL_STUB(GLint,glDebugEntry,   (GLint unknown0, GLint unknown1),

	mov	eax, DWORD PTR _imp_glDebugEntry
	test	eax, eax
	jne	SHORT $LN3@glDebugEnt
	push	DWORD PTR ?szName@?4??glDebugEntry@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDebugEntry, eax
	test	eax, eax
	jne	SHORT $LN3@glDebugEnt
	push	OFFSET $SG318383
	push	OFFSET $SG318384
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	8
$LN3@glDebugEnt:
	pop	ebp
	jmp	eax
_glDebugEntry@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
?SK_FreeRealGL@@YAXXZ PROC				; SK_FreeRealGL

; 261  :   FreeLibrary_Original (local_gl);

	push	DWORD PTR ?local_gl@@3PAUHINSTANCE__@@A	; local_gl
	call	DWORD PTR ?FreeLibrary_Original@@3P6GHPAUHINSTANCE__@@@ZA ; FreeLibrary_Original

; 262  : }

	ret	0
?SK_FreeRealGL@@YAXXZ ENDP				; SK_FreeRealGL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_wszBackendDLL$ = -528					; size = 524
_hMod$1 = -4						; size = 4
_bWOW64$2 = -4						; size = 4
?SK_LoadRealGL@@YAPAUHINSTANCE__@@XZ PROC		; SK_LoadRealGL

; 227  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 528				; 00000210H

; 228  :   wchar_t wszBackendDLL [MAX_PATH + 2] = { };

	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	524					; 0000020cH
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 229  : 
; 230  :   if (! SK_IsInjected ()) {

	push	0
	call	?SK_IsInjected@@YG_N_N@Z		; SK_IsInjected
	test	al, al
	jne	SHORT $LN2@SK_LoadRea

; 231  : #ifdef _WIN64
; 232  :     GetSystemDirectory (wszBackendDLL, MAX_PATH);
; 233  : #else
; 234  :     BOOL bWOW64;
; 235  :     ::IsWow64Process (GetCurrentProcess (), &bWOW64);

	lea	eax, DWORD PTR _bWOW64$2[ebp]
	push	eax
	call	DWORD PTR __imp__GetCurrentProcess@0
	push	eax
	call	DWORD PTR __imp__IsWow64Process@8

; 236  : 
; 237  :     if (bWOW64)

	cmp	DWORD PTR _bWOW64$2[ebp], 0

; 238  :       GetSystemWow64Directory (wszBackendDLL, MAX_PATH);

	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	260					; 00000104H
	push	eax
	je	SHORT $LN3@SK_LoadRea
	call	DWORD PTR __imp__GetSystemWow64DirectoryW@8

; 239  :     else

	jmp	SHORT $LN4@SK_LoadRea
$LN3@SK_LoadRea:

; 240  :       GetSystemDirectory (wszBackendDLL, MAX_PATH);

	call	DWORD PTR __imp__GetSystemDirectoryW@8
$LN4@SK_LoadRea:

; 241  : #endif
; 242  : 
; 243  :     lstrcatW (wszBackendDLL, L"\\");

	push	OFFSET $SG317348
	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8
$LN2@SK_LoadRea:

; 244  :   }
; 245  : 
; 246  :   lstrcatW (wszBackendDLL, L"OpenGL32.dll");

	push	OFFSET $SG317349
	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8

; 247  : 
; 248  :   if (local_gl == 0)

	cmp	DWORD PTR ?local_gl@@3PAUHINSTANCE__@@A, 0 ; local_gl
	jne	SHORT $LN5@SK_LoadRea

; 249  :     local_gl = LoadLibraryW_Original (wszBackendDLL);

	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	eax
	call	DWORD PTR ?LoadLibraryW_Original@@3P6GPAUHINSTANCE__@@PB_W@ZA ; LoadLibraryW_Original
	mov	DWORD PTR ?local_gl@@3PAUHINSTANCE__@@A, eax ; local_gl

; 256  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@SK_LoadRea:

; 250  :   else {
; 251  :     HMODULE hMod;
; 252  :     GetModuleHandleEx (0x00, wszBackendDLL, &hMod);

	lea	eax, DWORD PTR _hMod$1[ebp]
	push	eax
	lea	eax, DWORD PTR _wszBackendDLL$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__GetModuleHandleExW@12

; 253  :   }
; 254  : 
; 255  :   return local_gl;

	mov	eax, DWORD PTR ?local_gl@@3PAUHINSTANCE__@@A ; local_gl

; 256  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_LoadRealGL@@YAPAUHINSTANCE__@@XZ ENDP		; SK_LoadRealGL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_finish$ = 8						; size = 4
_opengl_init_callback@4 PROC

; 214  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 215  :   SK_BootOpenGL ();

	call	?SK_BootOpenGL@@YAXXZ			; SK_BootOpenGL

; 216  : 
; 217  :   finish ();

	call	DWORD PTR _finish$[ebp]

; 218  : }

	pop	ebp
	ret	4
_opengl_init_callback@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??__Fold_threads@@YAXXZ
text$yd	SEGMENT
__Alproxy$1 = -1					; size = 1
??__Fold_threads@@YAXXZ PROC				; `dynamic atexit destructor for 'old_threads'', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx

; 1244 : 		_Tidy();

	mov	ecx, OFFSET _old_threads
	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy

; 862  : 			_Alproxy(_Getal());

	push	OFFSET _old_threads
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
	call	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>

; 863  : 		_Orphan_all();

	mov	ecx, OFFSET _old_threads
	call	?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all

; 864  : 		_Alproxy.destroy(_Myproxy());

	push	DWORD PTR _old_threads
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR _old_threads
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR _old_threads, 0

; 814  : 		}

	mov	ecx, OFFSET _old_threads
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??__Fold_threads@@YAXXZ ENDP				; `dynamic atexit destructor for 'old_threads''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ??__Eold_threads@@YAXXZ
text$di	SEGMENT
__Alproxy$1 = -1					; size = 1
??__Eold_threads@@YAXXZ PROC				; `dynamic initializer for 'old_threads'', COMDAT

; 209  : static std::queue <DWORD> old_threads;

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 302  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, OFFSET _old_threads
	call	??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 853  : 			_Alproxy(_Getal());

	push	OFFSET _old_threads
	lea	ecx, DWORD PTR __Alproxy$1[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR _old_threads, 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR _old_threads+4, 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR _old_threads+8, 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR _old_threads+12, 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR _old_threads+16, 0

; 853  : 			_Alproxy(_Getal());

	call	??$?0AAU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@K@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<unsigned long> > &>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN36@dynamic
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN106@dynamic:
$LN36@dynamic:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR _old_threads, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR _old_threads
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 209  : static std::queue <DWORD> old_threads;

	push	OFFSET ??__Fold_threads@@YAXXZ		; `dynamic atexit destructor for 'old_threads''
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	DWORD PTR [eax], OFFSET _old_threads
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 209  : static std::queue <DWORD> old_threads;

	call	_atexit
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN105@dynamic:
??__Eold_threads@@YAXXZ ENDP				; `dynamic initializer for 'old_threads''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??1?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ PROC ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::~queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx
	npad	2
	push	esi
	mov	esi, ecx

; 1244 : 		_Tidy();

	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi
	ret	0
??1?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ENDP ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::~queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue
;	COMDAT ??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ PROC ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 33   : 		{	// construct with empty container

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue

; 33   : 		{	// construct with empty container

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [esi+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [esi+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [esi+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN34@queue
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN103@queue:
$LN34@queue:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\queue

; 34   : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN102@queue:
??0?$queue@KV?$deque@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ENDP ; std::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >::queue<unsigned long,std::deque<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1863 : 		{	// free all storage

	npad	2
	push	esi
	mov	esi, ecx

; 1397 : 		return (this->_Mysize() == 0);

	cmp	DWORD PTR [esi+16], 0

; 1864 : 		_Alpty _Almap(this->_Getal());
; 1865 : 		while (!empty())

	je	SHORT $LN3@Tidy
	npad	5
$LL2@Tidy:

; 1535 : 		if (--this->_Mysize() == 0)

	add	DWORD PTR [esi+16], -1
	jne	SHORT $LN29@Tidy

; 1536 : 			this->_Myoff() = 0;

	mov	DWORD PTR [esi+12], 0
$LN29@Tidy:

; 1397 : 		return (this->_Mysize() == 0);

	cmp	DWORD PTR [esi+16], 0

; 1864 : 		_Alpty _Almap(this->_Getal());
; 1865 : 		while (!empty())

	jne	SHORT $LL2@Tidy
$LN3@Tidy:
	push	edi

; 1867 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	mov	edi, DWORD PTR [esi+8]
	test	edi, edi
	je	SHORT $LN5@Tidy
	npad	5
$LL4@Tidy:

; 1868 : 			{	// free storage for a block and destroy pointer
; 1869 : 			if (this->_Map()[--_Block] != pointer())

	mov	eax, DWORD PTR [esi+4]
	dec	edi
	mov	eax, DWORD PTR [eax+edi*4]
	test	eax, eax
	je	SHORT $LN7@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 140  : 	::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1867 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	test	edi, edi
	jne	SHORT $LL4@Tidy
$LN5@Tidy:

; 1870 : 				{	// free block and destroy its pointer
; 1871 : 				this->_Getal().deallocate(this->_Map()[_Block], _DEQUESIZ);
; 1872 : 				this->_Getal().destroy(_STD addressof(this->_Map()[_Block]));
; 1873 : 				}
; 1874 : 			}
; 1875 : 
; 1876 : 		if (this->_Map() != _Mapptr())

	mov	ecx, DWORD PTR [esi+4]
	pop	edi
	test	ecx, ecx
	je	SHORT $LN198@Tidy

; 1877 : 			_Almap.deallocate(this->_Map(),

	mov	eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN192@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN232@Tidy:
$LN192@Tidy:

; 99   : 	const size_t _User_size = _Count * _Sz;

	shl	eax, 2

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN193@Tidy

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	test	cl, 31					; 0000001fH
	je	SHORT $LN194@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN233@Tidy:
$LN194@Tidy:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	eax, DWORD PTR [ecx-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	eax, ecx
	jb	SHORT $LN195@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN234@Tidy:
$LN195@Tidy:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	ecx, eax
	cmp	ecx, 4
	jae	SHORT $LN196@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN235@Tidy:
$LN196@Tidy:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	ecx, 35					; 00000023H
	jbe	SHORT $LN197@Tidy
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN236@Tidy:
$LN197@Tidy:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, eax
$LN193@Tidy:

; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN198@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 1879 : 		this->_Mapsize() = 0;

	mov	DWORD PTR [esi+8], 0

; 1880 : 		this->_Map() = _Mapptr();

	mov	DWORD PTR [esi+4], 0
	pop	esi

; 1881 : 		}

	ret	0
$LN231@Tidy:
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?pop_back@?$deque@KV?$allocator@K@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$deque@KV?$allocator@K@std@@@std@@QAEXXZ PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::pop_back, COMDAT
; _this$ = ecx

; 1514 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1515 : 		if (empty())
; 1516 : 			{
; 1517 : 			_DEBUG_ERROR("deque empty before pop");
; 1518 : 			}
; 1519 : 		else
; 1520 : 			{	// something to erase, do it
; 1521 : 			size_type _Newoff = this->_Myoff() + this->_Mysize() - 1;
; 1522 : 			_Orphan_off(_Newoff);
; 1523 : 			size_type _Block = this->_Getblock(_Newoff);
; 1524 : 			this->_Getal().destroy(
; 1525 : 				_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1526 : 			if (--this->_Mysize() == 0)
; 1527 : 				this->_Myoff() = 0;
; 1528 : 			}
; 1529 : 
; 1530 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1531 : 		size_type _Newoff = this->_Myoff() + this->_Mysize() - 1;
; 1532 : 		size_type _Block = this->_Getblock(_Newoff);
; 1533 : 		this->_Getal().destroy(
; 1534 : 			_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1535 : 		if (--this->_Mysize() == 0)

	add	DWORD PTR [ecx+16], -1
	jne	SHORT $LN2@pop_back

; 1536 : 			this->_Myoff() = 0;

	mov	DWORD PTR [ecx+12], 0
$LN2@pop_back:

; 1537 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1538 : 		}

	ret	0
?pop_back@?$deque@KV?$allocator@K@std@@@std@@QAEXXZ ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::pop_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?empty@?$deque@KV?$allocator@K@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$deque@KV?$allocator@K@std@@@std@@QBE_NXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::empty, COMDAT
; _this$ = ecx

; 1396 : 		{	// test if sequence is empty

	cmp	DWORD PTR [ecx+16], 0
	sete	al

; 1397 : 		return (this->_Mysize() == 0);
; 1398 : 		}

	ret	0
?empty@?$deque@KV?$allocator@K@std@@@std@@QBE_NXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??1?$deque@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$deque@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::~deque<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1243 : 		{	// destroy the deque

	npad	2
	push	esi
	mov	esi, ecx

; 1244 : 		_Tidy();

	call	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@IAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi

; 1245 : 		}

	ret	0
??1?$deque@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::~deque<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??0?$deque@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$deque@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 989  : 		{	// construct empty deque

	npad	2
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 989  : 		{	// construct empty deque

	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [esi+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [esi+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [esi+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN31@deque
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN99@deque:
$LN31@deque:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi

; 990  : 		}

	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN98@deque:
??0?$deque@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::deque<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@V?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned long> >,std::_Deque_val<std::_Deque_simple_types<unsigned long> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::~_Deque_val<std::_Deque_simple_types<unsigned long> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::~_Deque_val<std::_Deque_simple_types<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Getblock@?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QBEII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QBEII@Z PROC ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Getblock, COMDAT
; _this$ = ecx

; 760  : 		{	// determine block from offset

	npad	2
	push	ebp
	mov	ebp, esp

; 761  : 			// NB: _Mapsize and _DEQUESIZ are guaranteed to be powers of 2
; 762  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR __Off$[ebp]
	dec	eax
	shr	ecx, 2
	and	eax, ecx

; 763  : 		}

	pop	ebp
	ret	4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QBEII@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??0?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Deque_val<std::_Deque_simple_types<unsigned long> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 757  : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+16], 0
	ret	0
??0?$_Deque_val@U?$_Deque_simple_types@K@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<unsigned long> >::_Deque_val<std::_Deque_simple_types<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize, COMDAT
; _this$ = ecx

; 951  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 952  : 		}

	ret	0
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize, COMDAT
; _this$ = ecx

; 946  : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 947  : 		}

	ret	0
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff, COMDAT
; _this$ = ecx

; 936  : 		return (_Get_data()._Myoff);

	lea	eax, DWORD PTR [ecx+12]

; 937  : 		}

	ret	0
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myoff
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mapsize, COMDAT
; _this$ = ecx

; 926  : 		return (_Get_data()._Mapsize);

	lea	eax, DWORD PTR [ecx+8]

; 927  : 		}

	ret	0
?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Mapsize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Map@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAPAKXZ
_TEXT	SEGMENT
?_Map@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAPAKXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Map, COMDAT
; _this$ = ecx

; 916  : 		return (_Get_data()._Map);

	lea	eax, DWORD PTR [ecx+4]

; 917  : 		}

	ret	0
?_Map@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAPAKXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Map
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data, COMDAT
; _this$ = ecx

; 911  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 912  : 		}

	ret	0
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEABV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data, COMDAT
; _this$ = ecx

; 906  : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 907  : 		}

	ret	0
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAV?$_Deque_val@U?$_Deque_simple_types@K@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal, COMDAT
; _this$ = ecx

; 896  : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 897  : 		}

	ret	0
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 886  : 		_Get_data()._Orphan_all();
; 887  : 		}

	ret	0
?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myproxy, COMDAT
; _this$ = ecx

; 876  : 		return (_Get_data()._Myproxy);

	mov	eax, ecx

; 877  : 		}

	ret	0
?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 860  : 		{	// destroy proxy

	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi

; 867  : 		}

	ret	0
?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 851  : 		{	// construct proxy

	npad	2
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 851  : 		{	// construct proxy

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN20@Alloc_prox
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN86@Alloc_prox:
$LN20@Alloc_prox:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
	pop	esi

; 857  : 		}

	ret	0
$LN85@Alloc_prox:
?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::~_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 812  : 		{	// destroy proxy

	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	8
	push	1
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 866  : 		_Myproxy() = 0;

	mov	DWORD PTR [esi], 0
	pop	esi

; 813  : 		_Free_proxy();
; 814  : 		}

	ret	0
??1?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::~_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ??0?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 798  : 		{	// default construct allocator

	npad	2
	push	esi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	push	8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 752  : 		: _Map(),

	mov	DWORD PTR [esi+4], 0

; 753  : 		_Mapsize(0),

	mov	DWORD PTR [esi+8], 0

; 754  : 		_Myoff(0),

	mov	DWORD PTR [esi+12], 0

; 755  : 		_Mysize(0)

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 87   : 		_Ptr = ::operator new(_User_size);

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN28@Deque_allo
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN95@Deque_allo:
$LN28@Deque_allo:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 854  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque

; 856  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi

; 799  : 		_Alloc_proxy();
; 800  : 		}

	mov	eax, esi
	pop	esi
	ret	0
$LN94@Deque_allo:
??0?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\deque
;	COMDAT ?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEII@Z PROC ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getblock, COMDAT
; _this$ = ecx

; 792  : 		{	// determine block from offset

	npad	2
	push	ebp
	mov	ebp, esp

; 762  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR __Off$[ebp]
	dec	eax
	shr	ecx, 2
	and	eax, ecx

; 793  : 		return (_Get_data()._Getblock(_Off));
; 794  : 		}

	pop	ebp
	ret	4
?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@KV?$allocator@K@std@@@std@@@std@@QBEII@Z ENDP ; std::_Deque_alloc<std::_Deque_base_types<unsigned long,std::allocator<unsigned long> > >::_Getblock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEXPAPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEXPAPAKI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long *> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAK@std@@@std@@QAEXPAPAKI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAK@std@@QAEXPAPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAK@std@@QAEXPAPAKI@Z PROC	; std::allocator<unsigned long *>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@PAK@std@@QAEXPAPAKI@Z ENDP	; std::allocator<unsigned long *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC		; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	4
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@K@std@@QAE@XZ PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_wglSwapBuffers@4 PROC

; 1367 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1368 :   WaitForInit_GL ();

	call	?WaitForInit_GL@@YAXXZ			; WaitForInit_GL

; 1369 : 
; 1370 : 
; 1371 :   // Setup our window message hook for the command console
; 1372 :   if (hWndRender == 0 || (! IsWindow (hWndRender)))

	mov	eax, DWORD PTR ?hWndRender@@3PAUHWND__@@A ; hWndRender
	test	eax, eax
	je	SHORT $LN3@wglSwapBuf
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	test	eax, eax
	jne	SHORT $LN2@wglSwapBuf
$LN3@wglSwapBuf:

; 1373 :     hWndRender = WindowFromDC (hDC);

	push	DWORD PTR _hDC$[ebp]
	call	DWORD PTR __imp__WindowFromDC@4
	mov	DWORD PTR ?hWndRender@@3PAUHWND__@@A, eax ; hWndRender
$LN2@wglSwapBuf:

; 1374 : 
; 1375 :   SK_GetCurrentRenderBackend ().api = SK_RenderAPI::OpenGL;

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	mov	DWORD PTR [eax], 2

; 1376 :   SK_BeginBufferSwap ();

	call	?SK_BeginBufferSwap@@YGXXZ		; SK_BeginBufferSwap

; 1377 : 
; 1378 :   if (wgl_swap_buffers == nullptr)

	cmp	DWORD PTR ?wgl_swap_buffers@@3P6GHPAUHDC__@@@ZA, 0 ; wgl_swap_buffers
	jne	SHORT $LN4@wglSwapBuf

; 1379 :   {
; 1380 :     wgl_swap_buffers =

	push	OFFSET $SG323470
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR ?wgl_swap_buffers@@3P6GHPAUHDC__@@@ZA, eax ; wgl_swap_buffers
$LN4@wglSwapBuf:

; 1381 :       (wglSwapBuffers_pfn)GetProcAddress (backend_dll, "wglSwapBuffers");
; 1382 :   }
; 1383 : 
; 1384 : 
; 1385 :   if (SK_GetCurrentGLContext ())

	call	?SK_GetCurrentGLContext@@YGPAUHGLRC__@@XZ ; SK_GetCurrentGLContext
	test	eax, eax
	je	SHORT $LN7@wglSwapBuf

; 1386 :   {
; 1387 :     if (SK_GetFramesDrawn () < 1)

	call	?SK_GetFramesDrawn@@YGKXZ		; SK_GetFramesDrawn
	cmp	eax, 1
	jae	SHORT $LN6@wglSwapBuf

; 1388 :     {
; 1389 :       glewExperimental = GL_TRUE;

	mov	BYTE PTR _glewExperimental, 1

; 1390 :       glewInit ();

	call	_glewInit
$LN6@wglSwapBuf:

; 1391 :     }
; 1392 : 
; 1393 :     SK_GL_UpdateRenderStats ();

	call	?SK_GL_UpdateRenderStats@@YGXXZ		; SK_GL_UpdateRenderStats

; 1394 :     SK_CEGUI_DrawGL         ();

	call	_SK_CEGUI_DrawGL

; 1395 : 
; 1396 :     static bool first = true;
; 1397 :     if (first)

	cmp	BYTE PTR ?first@?9??wglSwapBuffers@@9@4@4_NA, 0
	je	SHORT $LN7@wglSwapBuf

; 1398 :     {
; 1399 :       ImGui_ImplGL3_Init ();

	call	?ImGui_ImplGL3_Init@@YA_NXZ		; ImGui_ImplGL3_Init

; 1400 :       first = false;

	mov	BYTE PTR ?first@?9??wglSwapBuffers@@9@4@4_NA, 0
$LN7@wglSwapBuf:

; 1401 :     }
; 1402 :   }
; 1403 : 
; 1404 : 
; 1405 :   BOOL status = FALSE;
; 1406 : 
; 1407 :   if (wgl_swap_buffers != nullptr)

	mov	eax, DWORD PTR ?wgl_swap_buffers@@3P6GHPAUHDC__@@@ZA ; wgl_swap_buffers
	push	esi
	xor	esi, esi
	test	eax, eax
	je	SHORT $LN8@wglSwapBuf

; 1408 :     status = wgl_swap_buffers (hDC);

	push	DWORD PTR _hDC$[ebp]
	call	eax
	mov	esi, eax
$LN8@wglSwapBuf:

; 1409 : 
; 1410 :   SK_EndBufferSwap (S_OK);

	push	0
	push	0
	call	?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z	; SK_EndBufferSwap

; 1411 : 
; 1412 :   return status;

	mov	eax, esi
	pop	esi

; 1413 : }

	pop	ebp
	ret	4
_wglSwapBuffers@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_hDC$ = 8						; size = 4
_SwapBuffers@4 PROC

; 1309 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1310 :   WaitForInit_GL ();

	call	?WaitForInit_GL@@YAXXZ			; WaitForInit_GL

; 1311 : 
; 1312 : 
; 1313 :   // Setup our window message hook for the command console
; 1314 :   if (hWndRender == 0 || (! IsWindow (hWndRender)))

	mov	eax, DWORD PTR ?hWndRender@@3PAUHWND__@@A ; hWndRender
	test	eax, eax
	je	SHORT $LN3@SwapBuffer
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	test	eax, eax
	jne	SHORT $LN2@SwapBuffer
$LN3@SwapBuffer:

; 1315 :     hWndRender = WindowFromDC (hDC);

	push	DWORD PTR _hDC$[ebp]
	call	DWORD PTR __imp__WindowFromDC@4
	mov	DWORD PTR ?hWndRender@@3PAUHWND__@@A, eax ; hWndRender
$LN2@SwapBuffer:

; 1316 : 
; 1317 : 
; 1318 :   SK_GetCurrentRenderBackend ().api = SK_RenderAPI::OpenGL;

	call	?SK_GetCurrentRenderBackend@@YGAAVSK_RenderBackend_V2@@XZ ; SK_GetCurrentRenderBackend
	mov	DWORD PTR [eax], 2

; 1319 :   SK_BeginBufferSwap ();

	call	?SK_BeginBufferSwap@@YGXXZ		; SK_BeginBufferSwap

; 1320 : 
; 1321 :   if (gdi_swap_buffers == nullptr)

	cmp	DWORD PTR ?gdi_swap_buffers@@3P6GHPAUHDC__@@@ZA, 0 ; gdi_swap_buffers
	jne	SHORT $LN4@SwapBuffer

; 1322 :   {
; 1323 :     HMODULE hModGDI32 = LoadLibraryW_Original (L"gdi32.dll");

	push	OFFSET $SG323453
	call	DWORD PTR ?LoadLibraryW_Original@@3P6GPAUHINSTANCE__@@PB_W@ZA ; LoadLibraryW_Original

; 1324 : 
; 1325 :     gdi_swap_buffers =

	push	OFFSET $SG323454
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR ?gdi_swap_buffers@@3P6GHPAUHDC__@@@ZA, eax ; gdi_swap_buffers
$LN4@SwapBuffer:

; 1326 :       reinterpret_cast <SwapBuffers_pfn> (
; 1327 :         GetProcAddress (hModGDI32, "SwapBuffers")
; 1328 :       );
; 1329 :   }
; 1330 : 
; 1331 : 
; 1332 :   if (SK_GetCurrentGLContext ())

	call	?SK_GetCurrentGLContext@@YGPAUHGLRC__@@XZ ; SK_GetCurrentGLContext
	test	eax, eax
	je	SHORT $LN7@SwapBuffer

; 1333 :   {
; 1334 :     if (SK_GetFramesDrawn () < 1)

	call	?SK_GetFramesDrawn@@YGKXZ		; SK_GetFramesDrawn
	cmp	eax, 1
	jae	SHORT $LN6@SwapBuffer

; 1335 :     {
; 1336 :       glewExperimental = GL_TRUE;

	mov	BYTE PTR _glewExperimental, 1

; 1337 :       glewInit ();

	call	_glewInit
$LN6@SwapBuffer:

; 1338 :     }
; 1339 : 
; 1340 :     SK_GL_UpdateRenderStats ();

	call	?SK_GL_UpdateRenderStats@@YGXXZ		; SK_GL_UpdateRenderStats

; 1341 :     SK_CEGUI_DrawGL         ();

	call	_SK_CEGUI_DrawGL

; 1342 : 
; 1343 :     static bool first = true;
; 1344 :     if (first)

	cmp	BYTE PTR ?first@?9??SwapBuffers@@9@4@4_NA, 0
	je	SHORT $LN7@SwapBuffer

; 1345 :     {
; 1346 :       ImGui_ImplGL3_Init ();

	call	?ImGui_ImplGL3_Init@@YA_NXZ		; ImGui_ImplGL3_Init

; 1347 :       first = false;

	mov	BYTE PTR ?first@?9??SwapBuffers@@9@4@4_NA, 0
$LN7@SwapBuffer:

; 1348 :     }
; 1349 :   }
; 1350 : 
; 1351 : 
; 1352 :   BOOL status = FALSE;
; 1353 : 
; 1354 :   if (gdi_swap_buffers != nullptr)

	mov	eax, DWORD PTR ?gdi_swap_buffers@@3P6GHPAUHDC__@@@ZA ; gdi_swap_buffers
	push	esi
	xor	esi, esi
	test	eax, eax
	je	SHORT $LN8@SwapBuffer

; 1355 :     status = gdi_swap_buffers (hDC);

	push	DWORD PTR _hDC$[ebp]
	call	eax
	mov	esi, eax
$LN8@SwapBuffer:

; 1356 : 
; 1357 :   SK_EndBufferSwap (S_OK);

	push	0
	push	0
	call	?SK_EndBufferSwap@@YGJJPAUIUnknown@@@Z	; SK_EndBufferSwap

; 1358 : 
; 1359 : 
; 1360 :   return status;

	mov	eax, esi
	pop	esi

; 1361 : }

	pop	ebp
	ret	4
_SwapBuffers@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
?ResetCEGUI_GL@@YAXXZ PROC				; ResetCEGUI_GL

; 125  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResetCEGUI_GL@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 126  : #ifndef SK_BUILD__INSTALLER
; 127  :   if (! config.cegui.enable)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+160, 0
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	je	SHORT $LN10@ResetCEGUI
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?__cegui_frames_drawn@@3JC
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 132  :   if (static_cast <ULONG> (ReadAcquire (&__cegui_frames_drawn)) < 5)

	cmp	eax, 5
	jb	SHORT $LN10@ResetCEGUI

; 133  :     return;
; 134  : 
; 135  :   if (cegGL == nullptr)

	cmp	DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A, 0 ; cegGL
	jne	SHORT $LN10@ResetCEGUI

; 136  :   {
; 137  :     try {
; 138  :       cegGL = reinterpret_cast <CEGUI::OpenGL3Renderer *> (

	push	208					; 000000d0H
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	DWORD PTR __imp_?bootstrapSystem@OpenGL3Renderer@CEGUI@@SAAAV12@H@Z
	add	esp, 4
	mov	DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A, eax ; cegGL

; 139  :         &CEGUI::OpenGL3Renderer::bootstrapSystem ()
; 140  :       );
; 141  : 
; 142  :       cegGL->enableExtraStateSettings (true);

	mov	ecx, eax
	push	1
	call	DWORD PTR __imp_?enableExtraStateSettings@OpenGLRendererBase@CEGUI@@QAEX_N@Z

; 143  : 
; 144  :       SK_CEGUI_RelocateLog ();

	call	?SK_CEGUI_RelocateLog@@YAXXZ		; SK_CEGUI_RelocateLog
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	?SK_CEGUI_InitBase@@YAXXZ		; SK_CEGUI_InitBase
	call	?getInstance@SK_PopupManager@@SAPAV1@XZ	; SK_PopupManager::getInstance
	mov	ecx, eax
	call	?destroyAllPopups@SK_PopupManager@@QAEXXZ ; SK_PopupManager::destroyAllPopups
	push	DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A ; cegGL
	call	?getInstance@SK_TextOverlayManager@@SAPAV1@XZ ; SK_TextOverlayManager::getInstance
	mov	ecx, eax
	call	?resetAllOverlays@SK_TextOverlayManager@@QAEXPAVRenderer@CEGUI@@@Z ; SK_TextOverlayManager::resetAllOverlays
	call	?SK_Steam_ClearPopups@@YAXXZ		; SK_Steam_ClearPopups
$LN10@ResetCEGUI:

; 148  :     }
; 149  : 
; 150  :     SK_CEGUI_InitBase ();
; 151  : 
; 152  :     SK_PopupManager::getInstance ()->destroyAllPopups       ();
; 153  :     SK_TextOverlayManager::getInstance ()->resetAllOverlays (cegGL);
; 154  : 
; 155  :     extern void SK_Steam_ClearPopups (void);
; 156  :     SK_Steam_ClearPopups ();
; 157  :   }
; 158  : #endif
; 159  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?ResetCEGUI_GL@@YAXXZ$0:

; 145  :     } catch (...) {
; 146  :       cegGL = nullptr;

	mov	DWORD PTR ?cegGL@@3PAVOpenGL3Renderer@CEGUI@@A, 0 ; cegGL

; 147  :       return;

	mov	eax, $LN10@ResetCEGUI
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?ResetCEGUI_GL@@YAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?ResetCEGUI_GL@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResetCEGUI_GL@@YAXXZ ENDP				; ResetCEGUI_GL
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
_glViewport@16 PROC

; 1070 :                               (      x,       y,         width,         height));

	npad	2
	push	ebp
	mov	ebp, esp

; 1069 : OPENGL_STUB_(glViewport,      (GLint x, GLint y, GLsizei width, GLsizei height),

	mov	eax, DWORD PTR _imp_glViewport
	test	eax, eax
	jne	SHORT $LN3@glViewport
	push	DWORD PTR ?szName@?4??glViewport@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glViewport, eax
	test	eax, eax
	jne	SHORT $LN3@glViewport
	push	OFFSET $SG323003
	push	OFFSET $SG323004
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glViewport:
	pop	ebp
	jmp	eax
_glViewport@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_size$ = 8						; size = 4
_type$ = 12						; size = 4
_stride$ = 16						; size = 4
_pointer$ = 20						; size = 4
_glVertexPointer@16 PROC

; 1068 :                               (      size,        type,         stride,               pointer));

	npad	2
	push	ebp
	mov	ebp, esp

; 1067 : OPENGL_STUB_(glVertexPointer, (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer),

	mov	eax, DWORD PTR _imp_glVertexPointer
	test	eax, eax
	jne	SHORT $LN3@glVertexPo
	push	DWORD PTR ?szName@?4??glVertexPointer@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertexPointer, eax
	test	eax, eax
	jne	SHORT $LN3@glVertexPo
	push	OFFSET $SG322983
	push	OFFSET $SG322984
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glVertexPo:
	pop	ebp
	jmp	eax
_glVertexPointer@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex4sv@4 PROC

; 1065 :                           (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1064 : OPENGL_STUB_(glVertex4sv, (const GLshort *v),

	mov	eax, DWORD PTR _imp_glVertex4sv
	test	eax, eax
	jne	SHORT $LN3@glVertex4s
	push	DWORD PTR ?szName@?4??glVertex4sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex4sv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex4s
	push	OFFSET $SG322963
	push	OFFSET $SG322964
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex4s:
	pop	ebp
	jmp	eax
_glVertex4sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_z$ = 16						; size = 2
_w$ = 20						; size = 2
_glVertex4s@16 PROC

; 1063 :                           (        x,         y,         z,         w));

	npad	2
	push	ebp
	mov	ebp, esp

; 1062 : OPENGL_STUB_(glVertex4s,  (GLshort x, GLshort y, GLshort z, GLshort w),

	mov	eax, DWORD PTR _imp_glVertex4s
	test	eax, eax
	jne	SHORT $LN3@glVertex4s
	push	DWORD PTR ?szName@?4??glVertex4s@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex4s, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex4s
	push	OFFSET $SG322949
	push	OFFSET $SG322950
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glVertex4s:
	pop	ebp
	jmp	eax
_glVertex4s@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex4iv@4 PROC

; 1061 :                           (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1060 : OPENGL_STUB_(glVertex4iv, (const GLint *v),

	mov	eax, DWORD PTR _imp_glVertex4iv
	test	eax, eax
	jne	SHORT $LN3@glVertex4i
	push	DWORD PTR ?szName@?4??glVertex4iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex4iv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex4i
	push	OFFSET $SG322929
	push	OFFSET $SG322930
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex4i:
	pop	ebp
	jmp	eax
_glVertex4iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
_glVertex4i@16 PROC

; 1059 :                           (      x,       y,       z,       w));

	npad	2
	push	ebp
	mov	ebp, esp

; 1058 : OPENGL_STUB_(glVertex4i,  (GLint x, GLint y, GLint z, GLint w),

	mov	eax, DWORD PTR _imp_glVertex4i
	test	eax, eax
	jne	SHORT $LN3@glVertex4i
	push	DWORD PTR ?szName@?4??glVertex4i@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex4i, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex4i
	push	OFFSET $SG322915
	push	OFFSET $SG322916
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glVertex4i:
	pop	ebp
	jmp	eax
_glVertex4i@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex4fv@4 PROC

; 1057 :                           (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1056 : OPENGL_STUB_(glVertex4fv, (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glVertex4fv
	test	eax, eax
	jne	SHORT $LN3@glVertex4f
	push	DWORD PTR ?szName@?4??glVertex4fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex4fv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex4f
	push	OFFSET $SG322895
	push	OFFSET $SG322896
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex4f:
	pop	ebp
	jmp	eax
_glVertex4fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
_glVertex4f@16 PROC

; 1055 :                           (        x,         y,         z,         w));

	npad	2
	push	ebp
	mov	ebp, esp

; 1054 : OPENGL_STUB_(glVertex4f,  (GLfloat x, GLfloat y, GLfloat z, GLfloat w),

	mov	eax, DWORD PTR _imp_glVertex4f
	test	eax, eax
	jne	SHORT $LN3@glVertex4f
	push	DWORD PTR ?szName@?4??glVertex4f@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex4f, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex4f
	push	OFFSET $SG322881
	push	OFFSET $SG322882
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glVertex4f:
	movss	xmm0, DWORD PTR _w$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glVertex4f@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex4dv@4 PROC

; 1053 :                           (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1052 : OPENGL_STUB_(glVertex4dv, (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glVertex4dv
	test	eax, eax
	jne	SHORT $LN3@glVertex4d
	push	DWORD PTR ?szName@?4??glVertex4dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex4dv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex4d
	push	OFFSET $SG322861
	push	OFFSET $SG322862
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex4d:
	pop	ebp
	jmp	eax
_glVertex4dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_z$ = 24						; size = 8
_w$ = 32						; size = 8
_glVertex4d@32 PROC

; 1051 :                           (         x,          y ,         z,          w));

	npad	2
	push	ebp
	mov	ebp, esp

; 1050 : OPENGL_STUB_(glVertex4d,  (GLdouble x, GLdouble y, GLdouble z, GLdouble w),

	mov	eax, DWORD PTR _imp_glVertex4d
	test	eax, eax
	jne	SHORT $LN3@glVertex4d
	push	DWORD PTR ?szName@?4??glVertex4d@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex4d, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex4d
	push	OFFSET $SG322847
	push	OFFSET $SG322848
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glVertex4d:
	movsd	xmm0, QWORD PTR _w$[ebp]
	sub	esp, 32					; 00000020H
	movsd	QWORD PTR [esp+24], xmm0
	movsd	xmm0, QWORD PTR _z$[ebp]
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _y$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	32					; 00000020H
_glVertex4d@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex3sv@4 PROC

; 1049 :                           (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1048 : OPENGL_STUB_(glVertex3sv, (const GLshort *v),

	mov	eax, DWORD PTR _imp_glVertex3sv
	test	eax, eax
	jne	SHORT $LN3@glVertex3s
	push	DWORD PTR ?szName@?4??glVertex3sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex3sv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex3s
	push	OFFSET $SG322827
	push	OFFSET $SG322828
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex3s:
	pop	ebp
	jmp	eax
_glVertex3sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_z$ = 16						; size = 2
_glVertex3s@12 PROC

; 1047 :                           (        x,         y,         z));

	npad	2
	push	ebp
	mov	ebp, esp

; 1046 : OPENGL_STUB_(glVertex3s,  (GLshort x, GLshort y, GLshort z),

	mov	eax, DWORD PTR _imp_glVertex3s
	test	eax, eax
	jne	SHORT $LN3@glVertex3s
	push	DWORD PTR ?szName@?4??glVertex3s@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex3s, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex3s
	push	OFFSET $SG322813
	push	OFFSET $SG322814
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glVertex3s:
	pop	ebp
	jmp	eax
_glVertex3s@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex3iv@4 PROC

; 1045 :                           (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1044 : OPENGL_STUB_(glVertex3iv, (const GLint *v),

	mov	eax, DWORD PTR _imp_glVertex3iv
	test	eax, eax
	jne	SHORT $LN3@glVertex3i
	push	DWORD PTR ?szName@?4??glVertex3iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex3iv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex3i
	push	OFFSET $SG322795
	push	OFFSET $SG322796
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex3i:
	pop	ebp
	jmp	eax
_glVertex3iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_glVertex3i@12 PROC

; 1043 :                           (      x,       y,       z));

	npad	2
	push	ebp
	mov	ebp, esp

; 1042 : OPENGL_STUB_(glVertex3i,  (GLint x, GLint y, GLint z),

	mov	eax, DWORD PTR _imp_glVertex3i
	test	eax, eax
	jne	SHORT $LN3@glVertex3i
	push	DWORD PTR ?szName@?4??glVertex3i@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex3i, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex3i
	push	OFFSET $SG322781
	push	OFFSET $SG322782
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glVertex3i:
	pop	ebp
	jmp	eax
_glVertex3i@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex3fv@4 PROC

; 1041 :                           (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1040 : OPENGL_STUB_(glVertex3fv, (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glVertex3fv
	test	eax, eax
	jne	SHORT $LN3@glVertex3f
	push	DWORD PTR ?szName@?4??glVertex3fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex3fv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex3f
	push	OFFSET $SG322763
	push	OFFSET $SG322764
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex3f:
	pop	ebp
	jmp	eax
_glVertex3fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_glVertex3f@12 PROC

; 1039 :                           (        x,         y,         z));

	npad	2
	push	ebp
	mov	ebp, esp

; 1038 : OPENGL_STUB_(glVertex3f,  (GLfloat x, GLfloat y, GLfloat z),

	mov	eax, DWORD PTR _imp_glVertex3f
	test	eax, eax
	jne	SHORT $LN3@glVertex3f
	push	DWORD PTR ?szName@?4??glVertex3f@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex3f, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex3f
	push	OFFSET $SG322749
	push	OFFSET $SG322750
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glVertex3f:
	movss	xmm0, DWORD PTR _z$[ebp]
	sub	esp, 12					; 0000000cH
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glVertex3f@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex3dv@4 PROC

; 1037 :                           (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1036 : OPENGL_STUB_(glVertex3dv, (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glVertex3dv
	test	eax, eax
	jne	SHORT $LN3@glVertex3d
	push	DWORD PTR ?szName@?4??glVertex3dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex3dv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex3d
	push	OFFSET $SG322731
	push	OFFSET $SG322732
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex3d:
	pop	ebp
	jmp	eax
_glVertex3dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_z$ = 24						; size = 8
_glVertex3d@24 PROC

; 1035 :                           (         x,          y,          z));

	npad	2
	push	ebp
	mov	ebp, esp

; 1034 : OPENGL_STUB_(glVertex3d,  (GLdouble x, GLdouble y, GLdouble z),

	mov	eax, DWORD PTR _imp_glVertex3d
	test	eax, eax
	jne	SHORT $LN3@glVertex3d
	push	DWORD PTR ?szName@?4??glVertex3d@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex3d, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex3d
	push	OFFSET $SG322717
	push	OFFSET $SG322718
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glVertex3d:
	movsd	xmm0, QWORD PTR _z$[ebp]
	sub	esp, 24					; 00000018H
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _y$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glVertex3d@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex2sv@4 PROC

; 1033 :                           (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1032 : OPENGL_STUB_(glVertex2sv, (const GLshort *v),

	mov	eax, DWORD PTR _imp_glVertex2sv
	test	eax, eax
	jne	SHORT $LN3@glVertex2s
	push	DWORD PTR ?szName@?4??glVertex2sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex2sv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex2s
	push	OFFSET $SG322699
	push	OFFSET $SG322700
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex2s:
	pop	ebp
	jmp	eax
_glVertex2sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_glVertex2s@8 PROC

; 1031 :                           (        x,         y));

	npad	2
	push	ebp
	mov	ebp, esp

; 1030 : OPENGL_STUB_(glVertex2s,  (GLshort x, GLshort y),

	mov	eax, DWORD PTR _imp_glVertex2s
	test	eax, eax
	jne	SHORT $LN3@glVertex2s
	push	DWORD PTR ?szName@?4??glVertex2s@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex2s, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex2s
	push	OFFSET $SG322685
	push	OFFSET $SG322686
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glVertex2s:
	pop	ebp
	jmp	eax
_glVertex2s@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex2iv@4 PROC

; 1029 :                           (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1028 : OPENGL_STUB_(glVertex2iv, (const GLint *v),

	mov	eax, DWORD PTR _imp_glVertex2iv
	test	eax, eax
	jne	SHORT $LN3@glVertex2i
	push	DWORD PTR ?szName@?4??glVertex2iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex2iv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex2i
	push	OFFSET $SG322669
	push	OFFSET $SG322670
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex2i:
	pop	ebp
	jmp	eax
_glVertex2iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_glVertex2i@8 PROC

; 1027 :                           (      x,       y));

	npad	2
	push	ebp
	mov	ebp, esp

; 1026 : OPENGL_STUB_(glVertex2i,  (GLint x, GLint y),

	mov	eax, DWORD PTR _imp_glVertex2i
	test	eax, eax
	jne	SHORT $LN3@glVertex2i
	push	DWORD PTR ?szName@?4??glVertex2i@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex2i, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex2i
	push	OFFSET $SG322655
	push	OFFSET $SG322656
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glVertex2i:
	pop	ebp
	jmp	eax
_glVertex2i@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex2fv@4 PROC

; 1025 :                           (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1024 : OPENGL_STUB_(glVertex2fv, (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glVertex2fv
	test	eax, eax
	jne	SHORT $LN3@glVertex2f
	push	DWORD PTR ?szName@?4??glVertex2fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex2fv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex2f
	push	OFFSET $SG322639
	push	OFFSET $SG322640
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex2f:
	pop	ebp
	jmp	eax
_glVertex2fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_glVertex2f@8 PROC

; 1023 :                           (        x,         y));

	npad	2
	push	ebp
	mov	ebp, esp

; 1022 : OPENGL_STUB_(glVertex2f,  (GLfloat x, GLfloat y),

	mov	eax, DWORD PTR _imp_glVertex2f
	test	eax, eax
	jne	SHORT $LN3@glVertex2f
	push	DWORD PTR ?szName@?4??glVertex2f@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex2f, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex2f
	push	OFFSET $SG322625
	push	OFFSET $SG322626
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glVertex2f:
	movss	xmm0, DWORD PTR _y$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glVertex2f@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glVertex2dv@4 PROC

; 1021 :                           (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 1020 : OPENGL_STUB_(glVertex2dv, (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glVertex2dv
	test	eax, eax
	jne	SHORT $LN3@glVertex2d
	push	DWORD PTR ?szName@?4??glVertex2dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex2dv, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex2d
	push	OFFSET $SG322609
	push	OFFSET $SG322610
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glVertex2d:
	pop	ebp
	jmp	eax
_glVertex2dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_glVertex2d@16 PROC

; 1019 :                           (         x,          y));

	npad	2
	push	ebp
	mov	ebp, esp

; 1018 : OPENGL_STUB_(glVertex2d,  (GLdouble x, GLdouble y),

	mov	eax, DWORD PTR _imp_glVertex2d
	test	eax, eax
	jne	SHORT $LN3@glVertex2d
	push	DWORD PTR ?szName@?4??glVertex2d@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glVertex2d, eax
	test	eax, eax
	jne	SHORT $LN3@glVertex2d
	push	OFFSET $SG322595
	push	OFFSET $SG322596
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glVertex2d:
	movsd	xmm0, QWORD PTR _y$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glVertex2d@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_glTranslatef@12 PROC

; 1016 :                            (        x,         y,         z));

	npad	2
	push	ebp
	mov	ebp, esp

; 1015 : OPENGL_STUB_(glTranslatef, (GLfloat x, GLfloat y, GLfloat z),

	mov	eax, DWORD PTR _imp_glTranslatef
	test	eax, eax
	jne	SHORT $LN3@glTranslat
	push	DWORD PTR ?szName@?4??glTranslatef@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTranslatef, eax
	test	eax, eax
	jne	SHORT $LN3@glTranslat
	push	OFFSET $SG322579
	push	OFFSET $SG322580
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTranslat:
	movss	xmm0, DWORD PTR _z$[ebp]
	sub	esp, 12					; 0000000cH
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glTranslatef@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_z$ = 24						; size = 8
_glTranslated@24 PROC

; 1014 :                            (         x,          y,          z));

	npad	2
	push	ebp
	mov	ebp, esp

; 1013 : OPENGL_STUB_(glTranslated, (GLdouble x, GLdouble y, GLdouble z),

	mov	eax, DWORD PTR _imp_glTranslated
	test	eax, eax
	jne	SHORT $LN3@glTranslat
	push	DWORD PTR ?szName@?4??glTranslated@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTranslated, eax
	test	eax, eax
	jne	SHORT $LN3@glTranslat
	push	OFFSET $SG322561
	push	OFFSET $SG322562
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glTranslat:
	movsd	xmm0, QWORD PTR _z$[ebp]
	sub	esp, 24					; 00000018H
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _y$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glTranslated@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_xoffset$ = 16						; size = 4
_yoffset$ = 20						; size = 4
_width$ = 24						; size = 4
_height$ = 28						; size = 4
_format$ = 32						; size = 4
_type$ = 36						; size = 4
_pixels$ = 40						; size = 4
_glTexSubImage2D@36 PROC

; 1011 :                                (       target,       level,       xoffset,       yoffset,         width,         height,        format,        type,               pixels));

	npad	2
	push	ebp
	mov	ebp, esp

; 1010 : OPENGL_STUB_(glTexSubImage2D,  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels),

	mov	eax, DWORD PTR _imp_glTexSubImage2D
	test	eax, eax
	jne	SHORT $LN3@glTexSubIm
	push	DWORD PTR ?szName@?4??glTexSubImage2D@@9@36@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexSubImage2D, eax
	test	eax, eax
	jne	SHORT $LN3@glTexSubIm
	push	OFFSET $SG322543
	push	OFFSET $SG322544
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	36					; 00000024H
$LN3@glTexSubIm:
	pop	ebp
	jmp	eax
_glTexSubImage2D@36 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_xoffset$ = 16						; size = 4
_width$ = 20						; size = 4
_format$ = 24						; size = 4
_type$ = 28						; size = 4
_pixels$ = 32						; size = 4
_glTexSubImage1D@28 PROC

; 1009 :                                (       target,       level,       xoffset,         width,        format,        type,               pixels));

	npad	2
	push	ebp
	mov	ebp, esp

; 1008 : OPENGL_STUB_(glTexSubImage1D,  (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels),

	mov	eax, DWORD PTR _imp_glTexSubImage1D
	test	eax, eax
	jne	SHORT $LN3@glTexSubIm
	push	DWORD PTR ?szName@?4??glTexSubImage1D@@9@28@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexSubImage1D, eax
	test	eax, eax
	jne	SHORT $LN3@glTexSubIm
	push	OFFSET $SG322513
	push	OFFSET $SG322514
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	28					; 0000001cH
$LN3@glTexSubIm:
	pop	ebp
	jmp	eax
_glTexSubImage1D@28 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glTexParameteriv@12 PROC

; 1007 :                                (       target,        pname,              params));

	npad	2
	push	ebp
	mov	ebp, esp

; 1006 : OPENGL_STUB_(glTexParameteriv, (GLenum target, GLenum pname, const GLint *params),

	mov	eax, DWORD PTR _imp_glTexParameteriv
	test	eax, eax
	jne	SHORT $LN3@glTexParam
	push	DWORD PTR ?szName@?4??glTexParameteriv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexParameteriv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexParam
	push	OFFSET $SG322487
	push	OFFSET $SG322488
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexParam:
	pop	ebp
	jmp	eax
_glTexParameteriv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glTexParameteri@12 PROC

; 1005 :                                (       target,        pname,       param));

	npad	2
	push	ebp
	mov	ebp, esp

; 1004 : OPENGL_STUB_(glTexParameteri,  (GLenum target, GLenum pname, GLint param),

	mov	eax, DWORD PTR _imp_glTexParameteri
	test	eax, eax
	jne	SHORT $LN3@glTexParam
	push	DWORD PTR ?szName@?4??glTexParameteri@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexParameteri, eax
	test	eax, eax
	jne	SHORT $LN3@glTexParam
	push	OFFSET $SG322469
	push	OFFSET $SG322470
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexParam:
	pop	ebp
	jmp	eax
_glTexParameteri@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glTexParameterfv@12 PROC

; 1003 :                                (       target,        pname,                params));

	npad	2
	push	ebp
	mov	ebp, esp

; 1002 : OPENGL_STUB_(glTexParameterfv, (GLenum target, GLenum pname, const GLfloat *params),

	mov	eax, DWORD PTR _imp_glTexParameterfv
	test	eax, eax
	jne	SHORT $LN3@glTexParam
	push	DWORD PTR ?szName@?4??glTexParameterfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexParameterfv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexParam
	push	OFFSET $SG322451
	push	OFFSET $SG322452
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexParam:
	pop	ebp
	jmp	eax
_glTexParameterfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glTexParameterf@12 PROC

; 1001 :                                (       target,        pname,         param));

	npad	2
	push	ebp
	mov	ebp, esp

; 1000 : OPENGL_STUB_(glTexParameterf,  (GLenum target, GLenum pname, GLfloat param),

	mov	eax, DWORD PTR _imp_glTexParameterf
	test	eax, eax
	jne	SHORT $LN3@glTexParam
	push	DWORD PTR ?szName@?4??glTexParameterf@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexParameterf, eax
	test	eax, eax
	jne	SHORT $LN3@glTexParam
	push	OFFSET $SG322433
	push	OFFSET $SG322434
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexParam:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	push	DWORD PTR _target$[ebp]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glTexParameterf@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_internalformat$ = 16					; size = 4
_width$ = 20						; size = 4
_height$ = 24						; size = 4
_border$ = 28						; size = 4
_format$ = 32						; size = 4
_type$ = 36						; size = 4
_pixels$ = 40						; size = 4
_glTexImage2D@36 PROC

; 999  :                                (       target,       level,       internalformat,         width,         height,       border,        format,        type,               pixels));

	npad	2
	push	ebp
	mov	ebp, esp

; 998  : OPENGL_STUB_(glTexImage2D,     (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels),

	mov	eax, DWORD PTR _imp_glTexImage2D
	test	eax, eax
	jne	SHORT $LN3@glTexImage
	push	DWORD PTR ?szName@?4??glTexImage2D@@9@36@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexImage2D, eax
	test	eax, eax
	jne	SHORT $LN3@glTexImage
	push	OFFSET $SG322415
	push	OFFSET $SG322416
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	36					; 00000024H
$LN3@glTexImage:
	pop	ebp
	jmp	eax
_glTexImage2D@36 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_internalformat$ = 16					; size = 4
_width$ = 20						; size = 4
_border$ = 24						; size = 4
_format$ = 28						; size = 4
_type$ = 32						; size = 4
_pixels$ = 36						; size = 4
_glTexImage1D@32 PROC

; 997  :                                (       target,       level,       internalformat,         width,       border,        format,        type,               pixels));

	npad	2
	push	ebp
	mov	ebp, esp

; 996  : OPENGL_STUB_(glTexImage1D,     (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels),

	mov	eax, DWORD PTR _imp_glTexImage1D
	test	eax, eax
	jne	SHORT $LN3@glTexImage
	push	DWORD PTR ?szName@?4??glTexImage1D@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexImage1D, eax
	test	eax, eax
	jne	SHORT $LN3@glTexImage
	push	OFFSET $SG322385
	push	OFFSET $SG322386
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glTexImage:
	pop	ebp
	jmp	eax
_glTexImage1D@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glTexGeniv@12 PROC

; 994  :                          (       coord,        pname,              params));

	npad	2
	push	ebp
	mov	ebp, esp

; 993  : OPENGL_STUB_(glTexGeniv, (GLenum coord, GLenum pname, const GLint *params),

	mov	eax, DWORD PTR _imp_glTexGeniv
	test	eax, eax
	jne	SHORT $LN3@glTexGeniv
	push	DWORD PTR ?szName@?4??glTexGeniv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexGeniv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexGeniv
	push	OFFSET $SG322357
	push	OFFSET $SG322358
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexGeniv:
	pop	ebp
	jmp	eax
_glTexGeniv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glTexGeni@12 PROC

; 992  :                          (       coord,        pname,       param));

	npad	2
	push	ebp
	mov	ebp, esp

; 991  : OPENGL_STUB_(glTexGeni,  (GLenum coord, GLenum pname, GLint param),

	mov	eax, DWORD PTR _imp_glTexGeni
	test	eax, eax
	jne	SHORT $LN3@glTexGeni
	push	DWORD PTR ?szName@?4??glTexGeni@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexGeni, eax
	test	eax, eax
	jne	SHORT $LN3@glTexGeni
	push	OFFSET $SG322339
	push	OFFSET $SG322340
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexGeni:
	pop	ebp
	jmp	eax
_glTexGeni@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glTexGenfv@12 PROC

; 990  :                          (       coord,        pname,                params));

	npad	2
	push	ebp
	mov	ebp, esp

; 989  : OPENGL_STUB_(glTexGenfv, (GLenum coord, GLenum pname, const GLfloat *params),

	mov	eax, DWORD PTR _imp_glTexGenfv
	test	eax, eax
	jne	SHORT $LN3@glTexGenfv
	push	DWORD PTR ?szName@?4??glTexGenfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexGenfv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexGenfv
	push	OFFSET $SG322321
	push	OFFSET $SG322322
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexGenfv:
	pop	ebp
	jmp	eax
_glTexGenfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glTexGenf@12 PROC

; 988  :                          (       coord,        pname,         param));

	npad	2
	push	ebp
	mov	ebp, esp

; 987  : OPENGL_STUB_(glTexGenf,  (GLenum coord, GLenum pname, GLfloat param),

	mov	eax, DWORD PTR _imp_glTexGenf
	test	eax, eax
	jne	SHORT $LN3@glTexGenf
	push	DWORD PTR ?szName@?4??glTexGenf@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexGenf, eax
	test	eax, eax
	jne	SHORT $LN3@glTexGenf
	push	OFFSET $SG322303
	push	OFFSET $SG322304
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexGenf:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	push	DWORD PTR _coord$[ebp]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glTexGenf@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glTexGendv@12 PROC

; 986  :                          (       coord,        pname,                 params));

	npad	2
	push	ebp
	mov	ebp, esp

; 985  : OPENGL_STUB_(glTexGendv, (GLenum coord, GLenum pname, const GLdouble *params),

	mov	eax, DWORD PTR _imp_glTexGendv
	test	eax, eax
	jne	SHORT $LN3@glTexGendv
	push	DWORD PTR ?szName@?4??glTexGendv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexGendv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexGendv
	push	OFFSET $SG322285
	push	OFFSET $SG322286
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexGendv:
	pop	ebp
	jmp	eax
_glTexGendv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 8
_glTexGend@16 PROC

; 984  :                          (       coord,        pname,          param));

	npad	2
	push	ebp
	mov	ebp, esp

; 983  : OPENGL_STUB_(glTexGend,  (GLenum coord, GLenum pname, GLdouble param),

	mov	eax, DWORD PTR _imp_glTexGend
	test	eax, eax
	jne	SHORT $LN3@glTexGend
	push	DWORD PTR ?szName@?4??glTexGend@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexGend, eax
	test	eax, eax
	jne	SHORT $LN3@glTexGend
	push	OFFSET $SG322267
	push	OFFSET $SG322268
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glTexGend:
	movsd	xmm0, QWORD PTR _param$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	push	DWORD PTR _coord$[ebp]
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glTexGend@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glTexEnviv@12 PROC

; 982  :                          (       target,        pname,              params));

	npad	2
	push	ebp
	mov	ebp, esp

; 981  : OPENGL_STUB_(glTexEnviv, (GLenum target, GLenum pname, const GLint *params),

	mov	eax, DWORD PTR _imp_glTexEnviv
	test	eax, eax
	jne	SHORT $LN3@glTexEnviv
	push	DWORD PTR ?szName@?4??glTexEnviv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexEnviv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexEnviv
	push	OFFSET $SG322249
	push	OFFSET $SG322250
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexEnviv:
	pop	ebp
	jmp	eax
_glTexEnviv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glTexEnvi@12 PROC

; 980  :                          (       target,        pname,       param));

	npad	2
	push	ebp
	mov	ebp, esp

; 979  : OPENGL_STUB_(glTexEnvi,  (GLenum target, GLenum pname, GLint param),

	mov	eax, DWORD PTR _imp_glTexEnvi
	test	eax, eax
	jne	SHORT $LN3@glTexEnvi
	push	DWORD PTR ?szName@?4??glTexEnvi@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexEnvi, eax
	test	eax, eax
	jne	SHORT $LN3@glTexEnvi
	push	OFFSET $SG322231
	push	OFFSET $SG322232
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexEnvi:
	pop	ebp
	jmp	eax
_glTexEnvi@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glTexEnvfv@12 PROC

; 978  :                          (       target,        pname,                params));

	npad	2
	push	ebp
	mov	ebp, esp

; 977  : OPENGL_STUB_(glTexEnvfv, (GLenum target, GLenum pname, const GLfloat *params),

	mov	eax, DWORD PTR _imp_glTexEnvfv
	test	eax, eax
	jne	SHORT $LN3@glTexEnvfv
	push	DWORD PTR ?szName@?4??glTexEnvfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexEnvfv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexEnvfv
	push	OFFSET $SG322213
	push	OFFSET $SG322214
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexEnvfv:
	pop	ebp
	jmp	eax
_glTexEnvfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glTexEnvf@12 PROC

; 976  :                          (       target,        pname,         param));

	npad	2
	push	ebp
	mov	ebp, esp

; 975  : OPENGL_STUB_(glTexEnvf,  (GLenum target, GLenum pname, GLfloat param),

	mov	eax, DWORD PTR _imp_glTexEnvf
	test	eax, eax
	jne	SHORT $LN3@glTexEnvf
	push	DWORD PTR ?szName@?4??glTexEnvf@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexEnvf, eax
	test	eax, eax
	jne	SHORT $LN3@glTexEnvf
	push	OFFSET $SG322195
	push	OFFSET $SG322196
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexEnvf:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	push	DWORD PTR _target$[ebp]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glTexEnvf@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_size$ = 8						; size = 4
_type$ = 12						; size = 4
_stride$ = 16						; size = 4
_pointer$ = 20						; size = 4
_glTexCoordPointer@16 PROC

; 973  :                                 (      size,        type,         stride,               pointer));

	npad	2
	push	ebp
	mov	ebp, esp

; 972  : OPENGL_STUB_(glTexCoordPointer, (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer),

	mov	eax, DWORD PTR _imp_glTexCoordPointer
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoordPointer@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoordPointer, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322177
	push	OFFSET $SG322178
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoordPointer@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord4sv@4 PROC

; 971  :                                 (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 970  : OPENGL_STUB_(glTexCoord4sv,     (const GLshort *v),

	mov	eax, DWORD PTR _imp_glTexCoord4sv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord4sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord4sv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322157
	push	OFFSET $SG322158
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord4sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 2
_t$ = 12						; size = 2
_r$ = 16						; size = 2
_q$ = 20						; size = 2
_glTexCoord4s@16 PROC

; 969  :                                 (        s,         t,         r,         q));

	npad	2
	push	ebp
	mov	ebp, esp

; 968  : OPENGL_STUB_(glTexCoord4s,      (GLshort s, GLshort t, GLshort r, GLshort q),

	mov	eax, DWORD PTR _imp_glTexCoord4s
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord4s@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord4s, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322143
	push	OFFSET $SG322144
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord4s@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord4iv@4 PROC

; 967  :                                 (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 966  : OPENGL_STUB_(glTexCoord4iv,     (const GLint *v),

	mov	eax, DWORD PTR _imp_glTexCoord4iv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord4iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord4iv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322123
	push	OFFSET $SG322124
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord4iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_t$ = 12						; size = 4
_r$ = 16						; size = 4
_q$ = 20						; size = 4
_glTexCoord4i@16 PROC

; 965  :                                 (      s,       t,       r,       q));

	npad	2
	push	ebp
	mov	ebp, esp

; 964  : OPENGL_STUB_(glTexCoord4i,      (GLint s, GLint t, GLint r, GLint q),

	mov	eax, DWORD PTR _imp_glTexCoord4i
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord4i@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord4i, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322109
	push	OFFSET $SG322110
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord4i@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord4fv@4 PROC

; 963  :                                 (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 962  : OPENGL_STUB_(glTexCoord4fv,     (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glTexCoord4fv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord4fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord4fv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322089
	push	OFFSET $SG322090
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord4fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_t$ = 12						; size = 4
_r$ = 16						; size = 4
_q$ = 20						; size = 4
_glTexCoord4f@16 PROC

; 961  :                                 (        s,         t,         r,         q));

	npad	2
	push	ebp
	mov	ebp, esp

; 960  : OPENGL_STUB_(glTexCoord4f,      (GLfloat s, GLfloat t, GLfloat r, GLfloat q),

	mov	eax, DWORD PTR _imp_glTexCoord4f
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord4f@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord4f, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322075
	push	OFFSET $SG322076
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glTexCoord:
	movss	xmm0, DWORD PTR _q$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glTexCoord4f@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord4dv@4 PROC

; 959  :                                 (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 958  : OPENGL_STUB_(glTexCoord4dv,     (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glTexCoord4dv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord4dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord4dv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322055
	push	OFFSET $SG322056
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord4dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 8
_t$ = 16						; size = 8
_r$ = 24						; size = 8
_q$ = 32						; size = 8
_glTexCoord4d@32 PROC

; 957  :                                 (         s,          t,          r,          q));

	npad	2
	push	ebp
	mov	ebp, esp

; 956  : OPENGL_STUB_(glTexCoord4d,      (GLdouble s, GLdouble t, GLdouble r, GLdouble q),

	mov	eax, DWORD PTR _imp_glTexCoord4d
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord4d@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord4d, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322041
	push	OFFSET $SG322042
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glTexCoord:
	movsd	xmm0, QWORD PTR _q$[ebp]
	sub	esp, 32					; 00000020H
	movsd	QWORD PTR [esp+24], xmm0
	movsd	xmm0, QWORD PTR _r$[ebp]
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _t$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _s$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	32					; 00000020H
_glTexCoord4d@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord3sv@4 PROC

; 955  :                                 (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 954  : OPENGL_STUB_(glTexCoord3sv,     (const GLshort *v),

	mov	eax, DWORD PTR _imp_glTexCoord3sv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord3sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord3sv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322021
	push	OFFSET $SG322022
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord3sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 2
_t$ = 12						; size = 2
_r$ = 16						; size = 2
_glTexCoord3s@12 PROC

; 953  :                                 (        s,         t,         r));

	npad	2
	push	ebp
	mov	ebp, esp

; 952  : OPENGL_STUB_(glTexCoord3s,      (GLshort s, GLshort t, GLshort r),

	mov	eax, DWORD PTR _imp_glTexCoord3s
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord3s@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord3s, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG322007
	push	OFFSET $SG322008
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord3s@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord3iv@4 PROC

; 951  :                                 (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 950  : OPENGL_STUB_(glTexCoord3iv,     (const GLint *v),

	mov	eax, DWORD PTR _imp_glTexCoord3iv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord3iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord3iv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321989
	push	OFFSET $SG321990
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord3iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_t$ = 12						; size = 4
_r$ = 16						; size = 4
_glTexCoord3i@12 PROC

; 949  :                                 (      s,       t,       r));

	npad	2
	push	ebp
	mov	ebp, esp

; 948  : OPENGL_STUB_(glTexCoord3i,      (GLint s, GLint t, GLint r),

	mov	eax, DWORD PTR _imp_glTexCoord3i
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord3i@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord3i, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321975
	push	OFFSET $SG321976
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord3i@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord3fv@4 PROC

; 947  :                                 (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 946  : OPENGL_STUB_(glTexCoord3fv,     (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glTexCoord3fv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord3fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord3fv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321957
	push	OFFSET $SG321958
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord3fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_t$ = 12						; size = 4
_r$ = 16						; size = 4
_glTexCoord3f@12 PROC

; 945  :                                 (        s,         t,         r));

	npad	2
	push	ebp
	mov	ebp, esp

; 944  : OPENGL_STUB_(glTexCoord3f,      (GLfloat s, GLfloat t, GLfloat r),

	mov	eax, DWORD PTR _imp_glTexCoord3f
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord3f@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord3f, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321943
	push	OFFSET $SG321944
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glTexCoord:
	movss	xmm0, DWORD PTR _r$[ebp]
	sub	esp, 12					; 0000000cH
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glTexCoord3f@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord3dv@4 PROC

; 943  :                                 (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 942  : OPENGL_STUB_(glTexCoord3dv,     (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glTexCoord3dv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord3dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord3dv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321925
	push	OFFSET $SG321926
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord3dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 8
_t$ = 16						; size = 8
_r$ = 24						; size = 8
_glTexCoord3d@24 PROC

; 941  :                                 (         s,          t,          r));

	npad	2
	push	ebp
	mov	ebp, esp

; 940  : OPENGL_STUB_(glTexCoord3d,      (GLdouble s, GLdouble t, GLdouble r),

	mov	eax, DWORD PTR _imp_glTexCoord3d
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord3d@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord3d, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321911
	push	OFFSET $SG321912
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glTexCoord:
	movsd	xmm0, QWORD PTR _r$[ebp]
	sub	esp, 24					; 00000018H
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _t$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _s$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glTexCoord3d@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord2sv@4 PROC

; 939  :                                 (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 938  : OPENGL_STUB_(glTexCoord2sv,     (const GLshort *v),

	mov	eax, DWORD PTR _imp_glTexCoord2sv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord2sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord2sv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321893
	push	OFFSET $SG321894
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord2sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 2
_t$ = 12						; size = 2
_glTexCoord2s@8 PROC

; 937  :                                 (        s,         t));

	npad	2
	push	ebp
	mov	ebp, esp

; 936  : OPENGL_STUB_(glTexCoord2s,      (GLshort s, GLshort t),

	mov	eax, DWORD PTR _imp_glTexCoord2s
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord2s@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord2s, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321879
	push	OFFSET $SG321880
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord2s@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord2iv@4 PROC

; 935  :                                 (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 934  : OPENGL_STUB_(glTexCoord2iv,     (const GLint *v),

	mov	eax, DWORD PTR _imp_glTexCoord2iv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord2iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord2iv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321863
	push	OFFSET $SG321864
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord2iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_t$ = 12						; size = 4
_glTexCoord2i@8 PROC

; 933  :                                 (      s,       t));

	npad	2
	push	ebp
	mov	ebp, esp

; 932  : OPENGL_STUB_(glTexCoord2i,      (GLint s, GLint t),

	mov	eax, DWORD PTR _imp_glTexCoord2i
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord2i@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord2i, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321849
	push	OFFSET $SG321850
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord2i@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord2fv@4 PROC

; 931  :                                 (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 930  : OPENGL_STUB_(glTexCoord2fv,     (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glTexCoord2fv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord2fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord2fv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321833
	push	OFFSET $SG321834
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord2fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_t$ = 12						; size = 4
_glTexCoord2f@8 PROC

; 929  :                                 (        s,         t));

	npad	2
	push	ebp
	mov	ebp, esp

; 928  : OPENGL_STUB_(glTexCoord2f,      (GLfloat s, GLfloat t),

	mov	eax, DWORD PTR _imp_glTexCoord2f
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord2f@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord2f, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321819
	push	OFFSET $SG321820
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glTexCoord:
	movss	xmm0, DWORD PTR _t$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glTexCoord2f@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord2dv@4 PROC

; 927  :                                 (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 926  : OPENGL_STUB_(glTexCoord2dv,     (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glTexCoord2dv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord2dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord2dv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321803
	push	OFFSET $SG321804
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord2dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 8
_t$ = 16						; size = 8
_glTexCoord2d@16 PROC

; 925  :                                 (         s,          t));

	npad	2
	push	ebp
	mov	ebp, esp

; 924  : OPENGL_STUB_(glTexCoord2d,      (GLdouble s, GLdouble t),

	mov	eax, DWORD PTR _imp_glTexCoord2d
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord2d@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord2d, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321789
	push	OFFSET $SG321790
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glTexCoord:
	movsd	xmm0, QWORD PTR _t$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _s$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glTexCoord2d@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord1sv@4 PROC

; 923  :                                 (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 922  : OPENGL_STUB_(glTexCoord1sv,     (const GLshort *v),

	mov	eax, DWORD PTR _imp_glTexCoord1sv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord1sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord1sv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321773
	push	OFFSET $SG321774
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord1sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 2
_glTexCoord1s@4 PROC

; 921  :                                 (        s));

	npad	2
	push	ebp
	mov	ebp, esp

; 920  : OPENGL_STUB_(glTexCoord1s,      (GLshort s),

	mov	eax, DWORD PTR _imp_glTexCoord1s
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord1s@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord1s, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321759
	push	OFFSET $SG321760
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord1s@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord1iv@4 PROC

; 919  :                                 (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 918  : OPENGL_STUB_(glTexCoord1iv,     (const GLint *v),

	mov	eax, DWORD PTR _imp_glTexCoord1iv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord1iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord1iv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321745
	push	OFFSET $SG321746
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord1iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_glTexCoord1i@4 PROC

; 917  :                                 (      s));

	npad	2
	push	ebp
	mov	ebp, esp

; 916  : OPENGL_STUB_(glTexCoord1i,      (GLint s),

	mov	eax, DWORD PTR _imp_glTexCoord1i
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord1i@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord1i, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321731
	push	OFFSET $SG321732
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord1i@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord1fv@4 PROC

; 915  :                                 (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 914  : OPENGL_STUB_(glTexCoord1fv,     (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glTexCoord1fv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord1fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord1fv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321717
	push	OFFSET $SG321718
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord1fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_glTexCoord1f@4 PROC

; 913  :                                 (        s));

	npad	2
	push	ebp
	mov	ebp, esp

; 912  : OPENGL_STUB_(glTexCoord1f,      (GLfloat s),

	mov	eax, DWORD PTR _imp_glTexCoord1f
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord1f@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord1f, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321703
	push	OFFSET $SG321704
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	movss	xmm0, DWORD PTR _s$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	4
_glTexCoord1f@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glTexCoord1dv@4 PROC

; 911  :                                 (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 910  : OPENGL_STUB_(glTexCoord1dv,     (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glTexCoord1dv
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord1dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord1dv, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321689
	push	OFFSET $SG321690
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glTexCoord:
	pop	ebp
	jmp	eax
_glTexCoord1dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 8
_glTexCoord1d@8 PROC

; 909  :                                 (         s));

	npad	2
	push	ebp
	mov	ebp, esp

; 908  : OPENGL_STUB_(glTexCoord1d,      (GLdouble s),

	mov	eax, DWORD PTR _imp_glTexCoord1d
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	DWORD PTR ?szName@?4??glTexCoord1d@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glTexCoord1d, eax
	test	eax, eax
	jne	SHORT $LN3@glTexCoord
	push	OFFSET $SG321675
	push	OFFSET $SG321676
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glTexCoord:
	movsd	xmm0, QWORD PTR _s$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glTexCoord1d@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_fail$ = 8						; size = 4
_zfail$ = 12						; size = 4
_zpass$ = 16						; size = 4
_glStencilOp@12 PROC

; 906  :                             (       fail,        zfail,        zpass));

	npad	2
	push	ebp
	mov	ebp, esp

; 905  : OPENGL_STUB_(glStencilOp,   (GLenum fail, GLenum zfail, GLenum zpass),

	mov	eax, DWORD PTR _imp_glStencilOp
	test	eax, eax
	jne	SHORT $LN3@glStencilO
	push	DWORD PTR ?szName@?4??glStencilOp@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glStencilOp, eax
	test	eax, eax
	jne	SHORT $LN3@glStencilO
	push	OFFSET $SG321661
	push	OFFSET $SG321662
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glStencilO:
	pop	ebp
	jmp	eax
_glStencilOp@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_glStencilMask@4 PROC

; 904  :                             (       mask));

	npad	2
	push	ebp
	mov	ebp, esp

; 903  : OPENGL_STUB_(glStencilMask, (GLuint mask),

	mov	eax, DWORD PTR _imp_glStencilMask
	test	eax, eax
	jne	SHORT $LN3@glStencilM
	push	DWORD PTR ?szName@?4??glStencilMask@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glStencilMask, eax
	test	eax, eax
	jne	SHORT $LN3@glStencilM
	push	OFFSET $SG321643
	push	OFFSET $SG321644
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glStencilM:
	pop	ebp
	jmp	eax
_glStencilMask@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_func$ = 8						; size = 4
_ref$ = 12						; size = 4
_mask$ = 16						; size = 4
_glStencilFunc@12 PROC

; 902  :                             (       func,       ref,        mask));

	npad	2
	push	ebp
	mov	ebp, esp

; 901  : OPENGL_STUB_(glStencilFunc, (GLenum func, GLint ref, GLuint mask),

	mov	eax, DWORD PTR _imp_glStencilFunc
	test	eax, eax
	jne	SHORT $LN3@glStencilF
	push	DWORD PTR ?szName@?4??glStencilFunc@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glStencilFunc, eax
	test	eax, eax
	jne	SHORT $LN3@glStencilF
	push	OFFSET $SG321629
	push	OFFSET $SG321630
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glStencilF:
	pop	ebp
	jmp	eax
_glStencilFunc@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_glShadeModel@4 PROC

; 899  :                            (       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 898  : OPENGL_STUB_(glShadeModel, (GLenum mode),

	mov	eax, DWORD PTR _imp_glShadeModel
	test	eax, eax
	jne	SHORT $LN3@glShadeMod
	push	DWORD PTR ?szName@?4??glShadeModel@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glShadeModel, eax
	test	eax, eax
	jne	SHORT $LN3@glShadeMod
	push	OFFSET $SG321611
	push	OFFSET $SG321612
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glShadeMod:
	pop	ebp
	jmp	eax
_glShadeModel@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_size$ = 8						; size = 4
_buffer$ = 12						; size = 4
_glSelectBuffer@8 PROC

; 896  :                              (        size,         buffer));

	npad	2
	push	ebp
	mov	ebp, esp

; 895  : OPENGL_STUB_(glSelectBuffer, (GLsizei size, GLuint *buffer),

	mov	eax, DWORD PTR _imp_glSelectBuffer
	test	eax, eax
	jne	SHORT $LN3@glSelectBu
	push	DWORD PTR ?szName@?4??glSelectBuffer@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glSelectBuffer, eax
	test	eax, eax
	jne	SHORT $LN3@glSelectBu
	push	OFFSET $SG321597
	push	OFFSET $SG321598
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glSelectBu:
	pop	ebp
	jmp	eax
_glSelectBuffer@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
_glScissor@16 PROC

; 893  :                         (      x,       y,         width,         height));

	npad	2
	push	ebp
	mov	ebp, esp

; 892  : OPENGL_STUB_(glScissor, (GLint x, GLint y, GLsizei width, GLsizei height),

	mov	eax, DWORD PTR _imp_glScissor
	test	eax, eax
	jne	SHORT $LN3@glScissor
	push	DWORD PTR ?szName@?4??glScissor@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glScissor, eax
	test	eax, eax
	jne	SHORT $LN3@glScissor
	push	OFFSET $SG321581
	push	OFFSET $SG321582
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glScissor:
	pop	ebp
	jmp	eax
_glScissor@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_glScalef@12 PROC

; 890  :                        (        x,         y,         z));

	npad	2
	push	ebp
	mov	ebp, esp

; 889  : OPENGL_STUB_(glScalef, (GLfloat x, GLfloat y, GLfloat z),

	mov	eax, DWORD PTR _imp_glScalef
	test	eax, eax
	jne	SHORT $LN3@glScalef
	push	DWORD PTR ?szName@?4??glScalef@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glScalef, eax
	test	eax, eax
	jne	SHORT $LN3@glScalef
	push	OFFSET $SG321561
	push	OFFSET $SG321562
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glScalef:
	movss	xmm0, DWORD PTR _z$[ebp]
	sub	esp, 12					; 0000000cH
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glScalef@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_z$ = 24						; size = 8
_glScaled@24 PROC

; 888  :                        (         x,          y,          z));

	npad	2
	push	ebp
	mov	ebp, esp

; 887  : OPENGL_STUB_(glScaled, (GLdouble x, GLdouble y, GLdouble z),

	mov	eax, DWORD PTR _imp_glScaled
	test	eax, eax
	jne	SHORT $LN3@glScaled
	push	DWORD PTR ?szName@?4??glScaled@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glScaled, eax
	test	eax, eax
	jne	SHORT $LN3@glScaled
	push	OFFSET $SG321543
	push	OFFSET $SG321544
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glScaled:
	movsd	xmm0, QWORD PTR _z$[ebp]
	sub	esp, 24					; 00000018H
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _y$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glScaled@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_angle$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_z$ = 20						; size = 4
_glRotatef@16 PROC

; 885  :                         (        angle,         x,         y,         z));

	npad	2
	push	ebp
	mov	ebp, esp

; 884  : OPENGL_STUB_(glRotatef, (GLfloat angle, GLfloat x, GLfloat y, GLfloat z),

	mov	eax, DWORD PTR _imp_glRotatef
	test	eax, eax
	jne	SHORT $LN3@glRotatef
	push	DWORD PTR ?szName@?4??glRotatef@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRotatef, eax
	test	eax, eax
	jne	SHORT $LN3@glRotatef
	push	OFFSET $SG321525
	push	OFFSET $SG321526
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glRotatef:
	movss	xmm0, DWORD PTR _z$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glRotatef@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_angle$ = 8						; size = 8
_x$ = 16						; size = 8
_y$ = 24						; size = 8
_z$ = 32						; size = 8
_glRotated@32 PROC

; 883  :                         (         angle,          x,          y,          z));

	npad	2
	push	ebp
	mov	ebp, esp

; 882  : OPENGL_STUB_(glRotated, (GLdouble angle, GLdouble x, GLdouble y, GLdouble z),

	mov	eax, DWORD PTR _imp_glRotated
	test	eax, eax
	jne	SHORT $LN3@glRotated
	push	DWORD PTR ?szName@?4??glRotated@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRotated, eax
	test	eax, eax
	jne	SHORT $LN3@glRotated
	push	OFFSET $SG321505
	push	OFFSET $SG321506
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glRotated:
	movsd	xmm0, QWORD PTR _z$[ebp]
	sub	esp, 32					; 00000020H
	movsd	QWORD PTR [esp+24], xmm0
	movsd	xmm0, QWORD PTR _y$[ebp]
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _angle$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	32					; 00000020H
_glRotated@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_glRenderMode@4 PROC

; 880  :                                  (       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 879  : OPENGL_STUB(GLint, glRenderMode, (GLenum mode),

	mov	eax, DWORD PTR _imp_glRenderMode
	test	eax, eax
	jne	SHORT $LN3@glRenderMo
	push	DWORD PTR ?szName@?4??glRenderMode@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRenderMode, eax
	test	eax, eax
	jne	SHORT $LN3@glRenderMo
	push	OFFSET $SG321485
	push	OFFSET $SG321486
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	4
$LN3@glRenderMo:
	pop	ebp
	jmp	eax
_glRenderMode@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v1$ = 8						; size = 4
_v2$ = 12						; size = 4
_glRectsv@8 PROC

; 877  :                        (               v1,                v2));

	npad	2
	push	ebp
	mov	ebp, esp

; 876  : OPENGL_STUB_(glRectsv, (const GLshort *v1, const GLshort *v2),

	mov	eax, DWORD PTR _imp_glRectsv
	test	eax, eax
	jne	SHORT $LN3@glRectsv
	push	DWORD PTR ?szName@?4??glRectsv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRectsv, eax
	test	eax, eax
	jne	SHORT $LN3@glRectsv
	push	OFFSET $SG321471
	push	OFFSET $SG321472
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glRectsv:
	pop	ebp
	jmp	eax
_glRectsv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x1$ = 8						; size = 2
_y1$ = 12						; size = 2
_x2$ = 16						; size = 2
_y2$ = 20						; size = 2
_glRects@16 PROC

; 875  :                        (        x1,         y1,         x2,         y2));

	npad	2
	push	ebp
	mov	ebp, esp

; 874  : OPENGL_STUB_(glRects,  (GLshort x1, GLshort y1, GLshort x2, GLshort y2),

	mov	eax, DWORD PTR _imp_glRects
	test	eax, eax
	jne	SHORT $LN3@glRects
	push	DWORD PTR ?szName@?4??glRects@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRects, eax
	test	eax, eax
	jne	SHORT $LN3@glRects
	push	OFFSET $SG321455
	push	OFFSET $SG321456
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glRects:
	pop	ebp
	jmp	eax
_glRects@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v1$ = 8						; size = 4
_v2$ = 12						; size = 4
_glRectiv@8 PROC

; 873  :                        (             v1,              v2));

	npad	2
	push	ebp
	mov	ebp, esp

; 872  : OPENGL_STUB_(glRectiv, (const GLint *v1, const GLint *v2),

	mov	eax, DWORD PTR _imp_glRectiv
	test	eax, eax
	jne	SHORT $LN3@glRectiv
	push	DWORD PTR ?szName@?4??glRectiv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRectiv, eax
	test	eax, eax
	jne	SHORT $LN3@glRectiv
	push	OFFSET $SG321435
	push	OFFSET $SG321436
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glRectiv:
	pop	ebp
	jmp	eax
_glRectiv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_glRecti@16 PROC

; 871  :                        (      x1,       y1,       x2,       y2));

	npad	2
	push	ebp
	mov	ebp, esp

; 870  : OPENGL_STUB_(glRecti,  (GLint x1, GLint y1, GLint x2, GLint y2),

	mov	eax, DWORD PTR _imp_glRecti
	test	eax, eax
	jne	SHORT $LN3@glRecti
	push	DWORD PTR ?szName@?4??glRecti@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRecti, eax
	test	eax, eax
	jne	SHORT $LN3@glRecti
	push	OFFSET $SG321419
	push	OFFSET $SG321420
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glRecti:
	pop	ebp
	jmp	eax
_glRecti@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v1$ = 8						; size = 4
_v2$ = 12						; size = 4
_glRectfv@8 PROC

; 869  :                        (               v1,                v2));

	npad	2
	push	ebp
	mov	ebp, esp

; 868  : OPENGL_STUB_(glRectfv, (const GLfloat *v1, const GLfloat *v2),

	mov	eax, DWORD PTR _imp_glRectfv
	test	eax, eax
	jne	SHORT $LN3@glRectfv
	push	DWORD PTR ?szName@?4??glRectfv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRectfv, eax
	test	eax, eax
	jne	SHORT $LN3@glRectfv
	push	OFFSET $SG321399
	push	OFFSET $SG321400
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glRectfv:
	pop	ebp
	jmp	eax
_glRectfv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_glRectf@16 PROC

; 867  :                        (        x1,         y1,         x2,         y2));

	npad	2
	push	ebp
	mov	ebp, esp

; 866  : OPENGL_STUB_(glRectf,  (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2),

	mov	eax, DWORD PTR _imp_glRectf
	test	eax, eax
	jne	SHORT $LN3@glRectf
	push	DWORD PTR ?szName@?4??glRectf@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRectf, eax
	test	eax, eax
	jne	SHORT $LN3@glRectf
	push	OFFSET $SG321383
	push	OFFSET $SG321384
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glRectf:
	movss	xmm0, DWORD PTR _y2$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glRectf@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v1$ = 8						; size = 4
_v2$ = 12						; size = 4
_glRectdv@8 PROC

; 865  :                        (                v1,                 v2));

	npad	2
	push	ebp
	mov	ebp, esp

; 864  : OPENGL_STUB_(glRectdv, (const GLdouble *v1, const GLdouble *v2),

	mov	eax, DWORD PTR _imp_glRectdv
	test	eax, eax
	jne	SHORT $LN3@glRectdv
	push	DWORD PTR ?szName@?4??glRectdv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRectdv, eax
	test	eax, eax
	jne	SHORT $LN3@glRectdv
	push	OFFSET $SG321363
	push	OFFSET $SG321364
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glRectdv:
	pop	ebp
	jmp	eax
_glRectdv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x1$ = 8						; size = 8
_y1$ = 16						; size = 8
_x2$ = 24						; size = 8
_y2$ = 32						; size = 8
_glRectd@32 PROC

; 863  :                        (         x1,          y1,          x2,          y2));

	npad	2
	push	ebp
	mov	ebp, esp

; 862  : OPENGL_STUB_(glRectd,  (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2),

	mov	eax, DWORD PTR _imp_glRectd
	test	eax, eax
	jne	SHORT $LN3@glRectd
	push	DWORD PTR ?szName@?4??glRectd@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRectd, eax
	test	eax, eax
	jne	SHORT $LN3@glRectd
	push	OFFSET $SG321347
	push	OFFSET $SG321348
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glRectd:
	movsd	xmm0, QWORD PTR _y2$[ebp]
	sub	esp, 32					; 00000020H
	movsd	QWORD PTR [esp+24], xmm0
	movsd	xmm0, QWORD PTR _x2$[ebp]
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _y1$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x1$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	32					; 00000020H
_glRectd@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
_format$ = 24						; size = 4
_type$ = 28						; size = 4
_pixels$ = 32						; size = 4
_glReadPixels@28 PROC

; 860  :                            (      x,       y,         width,         height,        format,        type,         pixels));

	npad	2
	push	ebp
	mov	ebp, esp

; 859  : OPENGL_STUB_(glReadPixels, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels),

	mov	eax, DWORD PTR _imp_glReadPixels
	test	eax, eax
	jne	SHORT $LN3@glReadPixe
	push	DWORD PTR ?szName@?4??glReadPixels@@9@28@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glReadPixels, eax
	test	eax, eax
	jne	SHORT $LN3@glReadPixe
	push	OFFSET $SG321327
	push	OFFSET $SG321328
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	28					; 0000001cH
$LN3@glReadPixe:
	pop	ebp
	jmp	eax
_glReadPixels@28 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_glReadBuffer@4 PROC

; 858  :                            (       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 857  : OPENGL_STUB_(glReadBuffer, (GLenum mode),

	mov	eax, DWORD PTR _imp_glReadBuffer
	test	eax, eax
	jne	SHORT $LN3@glReadBuff
	push	DWORD PTR ?szName@?4??glReadBuffer@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glReadBuffer, eax
	test	eax, eax
	jne	SHORT $LN3@glReadBuff
	push	OFFSET $SG321301
	push	OFFSET $SG321302
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glReadBuff:
	pop	ebp
	jmp	eax
_glReadBuffer@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos4sv@4 PROC

; 855  :                              (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 854  : OPENGL_STUB_(glRasterPos4sv, (const GLshort *v),

	mov	eax, DWORD PTR _imp_glRasterPos4sv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos4sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos4sv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321287
	push	OFFSET $SG321288
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos4sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_z$ = 16						; size = 2
_w$ = 20						; size = 2
_glRasterPos4s@16 PROC

; 853  :                              (        x,         y,         z,         w));

	npad	2
	push	ebp
	mov	ebp, esp

; 852  : OPENGL_STUB_(glRasterPos4s,  (GLshort x, GLshort y, GLshort z, GLshort w),

	mov	eax, DWORD PTR _imp_glRasterPos4s
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos4s@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos4s, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321273
	push	OFFSET $SG321274
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos4s@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos4iv@4 PROC

; 851  :                              (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 850  : OPENGL_STUB_(glRasterPos4iv, (const GLint *v),

	mov	eax, DWORD PTR _imp_glRasterPos4iv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos4iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos4iv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321253
	push	OFFSET $SG321254
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos4iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
_glRasterPos4i@16 PROC

; 849  :                              (      x,       y,       z,       w));

	npad	2
	push	ebp
	mov	ebp, esp

; 848  : OPENGL_STUB_(glRasterPos4i,  (GLint x, GLint y, GLint z, GLint w),

	mov	eax, DWORD PTR _imp_glRasterPos4i
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos4i@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos4i, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321239
	push	OFFSET $SG321240
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos4i@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos4fv@4 PROC

; 847  :                              (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 846  : OPENGL_STUB_(glRasterPos4fv, (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glRasterPos4fv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos4fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos4fv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321219
	push	OFFSET $SG321220
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos4fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
_glRasterPos4f@16 PROC

; 845  :                              (        x,         y,         z,         w));

	npad	2
	push	ebp
	mov	ebp, esp

; 844  : OPENGL_STUB_(glRasterPos4f,  (GLfloat x, GLfloat y, GLfloat z, GLfloat w),

	mov	eax, DWORD PTR _imp_glRasterPos4f
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos4f@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos4f, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321205
	push	OFFSET $SG321206
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glRasterPo:
	movss	xmm0, DWORD PTR _w$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glRasterPos4f@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos4dv@4 PROC

; 843  :                              (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 842  : OPENGL_STUB_(glRasterPos4dv, (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glRasterPos4dv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos4dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos4dv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321185
	push	OFFSET $SG321186
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos4dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_z$ = 24						; size = 8
_w$ = 32						; size = 8
_glRasterPos4d@32 PROC

; 841  :                              (         x,          y,          z,          w));

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : OPENGL_STUB_(glRasterPos4d,  (GLdouble x, GLdouble y, GLdouble z, GLdouble w),

	mov	eax, DWORD PTR _imp_glRasterPos4d
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos4d@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos4d, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321171
	push	OFFSET $SG321172
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glRasterPo:
	movsd	xmm0, QWORD PTR _w$[ebp]
	sub	esp, 32					; 00000020H
	movsd	QWORD PTR [esp+24], xmm0
	movsd	xmm0, QWORD PTR _z$[ebp]
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _y$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	32					; 00000020H
_glRasterPos4d@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos3sv@4 PROC

; 839  :                              (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 838  : OPENGL_STUB_(glRasterPos3sv, (const GLshort *v),

	mov	eax, DWORD PTR _imp_glRasterPos3sv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos3sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos3sv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321151
	push	OFFSET $SG321152
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos3sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_z$ = 16						; size = 2
_glRasterPos3s@12 PROC

; 837  :                              (        x,         y,         z));

	npad	2
	push	ebp
	mov	ebp, esp

; 836  : OPENGL_STUB_(glRasterPos3s,  (GLshort x, GLshort y, GLshort z),

	mov	eax, DWORD PTR _imp_glRasterPos3s
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos3s@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos3s, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321137
	push	OFFSET $SG321138
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos3s@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos3iv@4 PROC

; 835  :                              (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 834  : OPENGL_STUB_(glRasterPos3iv, (const GLint *v),

	mov	eax, DWORD PTR _imp_glRasterPos3iv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos3iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos3iv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321119
	push	OFFSET $SG321120
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos3iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_glRasterPos3i@12 PROC

; 833  :                              (      x,       y,       z));

	npad	2
	push	ebp
	mov	ebp, esp

; 832  : OPENGL_STUB_(glRasterPos3i,  (GLint x, GLint y, GLint z),

	mov	eax, DWORD PTR _imp_glRasterPos3i
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos3i@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos3i, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321105
	push	OFFSET $SG321106
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos3i@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos3fv@4 PROC

; 831  :                              (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 830  : OPENGL_STUB_(glRasterPos3fv, (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glRasterPos3fv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos3fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos3fv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321087
	push	OFFSET $SG321088
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos3fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_glRasterPos3f@12 PROC

; 829  :                              (        x,         y,         z));

	npad	2
	push	ebp
	mov	ebp, esp

; 828  : OPENGL_STUB_(glRasterPos3f,  (GLfloat x, GLfloat y, GLfloat z),

	mov	eax, DWORD PTR _imp_glRasterPos3f
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos3f@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos3f, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321073
	push	OFFSET $SG321074
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glRasterPo:
	movss	xmm0, DWORD PTR _z$[ebp]
	sub	esp, 12					; 0000000cH
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glRasterPos3f@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos3dv@4 PROC

; 827  :                              (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 826  : OPENGL_STUB_(glRasterPos3dv, (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glRasterPos3dv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos3dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos3dv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321055
	push	OFFSET $SG321056
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos3dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_z$ = 24						; size = 8
_glRasterPos3d@24 PROC

; 825  :                              (         x,          y,          z));

	npad	2
	push	ebp
	mov	ebp, esp

; 824  : OPENGL_STUB_(glRasterPos3d,  (GLdouble x, GLdouble y, GLdouble z),

	mov	eax, DWORD PTR _imp_glRasterPos3d
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos3d@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos3d, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321041
	push	OFFSET $SG321042
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glRasterPo:
	movsd	xmm0, QWORD PTR _z$[ebp]
	sub	esp, 24					; 00000018H
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _y$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glRasterPos3d@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos2sv@4 PROC

; 823  :                              (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 822  : OPENGL_STUB_(glRasterPos2sv, (const GLshort *v),

	mov	eax, DWORD PTR _imp_glRasterPos2sv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos2sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos2sv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321023
	push	OFFSET $SG321024
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos2sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_glRasterPos2s@8 PROC

; 821  :                              (        x,         y));

	npad	2
	push	ebp
	mov	ebp, esp

; 820  : OPENGL_STUB_(glRasterPos2s,  (GLshort x, GLshort y),

	mov	eax, DWORD PTR _imp_glRasterPos2s
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos2s@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos2s, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG321009
	push	OFFSET $SG321010
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos2s@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos2iv@4 PROC

; 819  :                              (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 818  : OPENGL_STUB_(glRasterPos2iv, (const GLint *v),

	mov	eax, DWORD PTR _imp_glRasterPos2iv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos2iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos2iv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG320993
	push	OFFSET $SG320994
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos2iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_glRasterPos2i@8 PROC

; 817  :                              (      x,       y));

	npad	2
	push	ebp
	mov	ebp, esp

; 816  : OPENGL_STUB_(glRasterPos2i,  (GLint x, GLint y),

	mov	eax, DWORD PTR _imp_glRasterPos2i
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos2i@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos2i, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG320979
	push	OFFSET $SG320980
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos2i@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos2fv@4 PROC

; 815  :                              (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 814  : OPENGL_STUB_(glRasterPos2fv, (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glRasterPos2fv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos2fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos2fv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG320963
	push	OFFSET $SG320964
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos2fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_glRasterPos2f@8 PROC

; 813  :                              (        x,         y));

	npad	2
	push	ebp
	mov	ebp, esp

; 812  : OPENGL_STUB_(glRasterPos2f,  (GLfloat x, GLfloat y),

	mov	eax, DWORD PTR _imp_glRasterPos2f
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos2f@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos2f, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG320949
	push	OFFSET $SG320950
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glRasterPo:
	movss	xmm0, DWORD PTR _y$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glRasterPos2f@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glRasterPos2dv@4 PROC

; 811  :                              (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 810  : OPENGL_STUB_(glRasterPos2dv, (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glRasterPos2dv
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos2dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos2dv, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG320933
	push	OFFSET $SG320934
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glRasterPo:
	pop	ebp
	jmp	eax
_glRasterPos2dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_glRasterPos2d@16 PROC

; 809  :                              (         x,          y));

	npad	2
	push	ebp
	mov	ebp, esp

; 808  : OPENGL_STUB_(glRasterPos2d,  (GLdouble x, GLdouble y),

	mov	eax, DWORD PTR _imp_glRasterPos2d
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	DWORD PTR ?szName@?4??glRasterPos2d@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glRasterPos2d, eax
	test	eax, eax
	jne	SHORT $LN3@glRasterPo
	push	OFFSET $SG320919
	push	OFFSET $SG320920
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glRasterPo:
	movsd	xmm0, QWORD PTR _y$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glRasterPos2d@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_name$ = 8						; size = 4
_glPushName@4 PROC

; 806  :                                 (       name));

	npad	2
	push	ebp
	mov	ebp, esp

; 805  : OPENGL_STUB_(glPushName,        (GLuint name),

	mov	eax, DWORD PTR _imp_glPushName
	test	eax, eax
	jne	SHORT $LN3@glPushName
	push	DWORD PTR ?szName@?4??glPushName@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPushName, eax
	test	eax, eax
	jne	SHORT $LN3@glPushName
	push	OFFSET $SG320903
	push	OFFSET $SG320904
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glPushName:
	pop	ebp
	jmp	eax
_glPushName@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glPushMatrix@0 PROC

; 804  : OPENGL_STUB_(glPushMatrix,      (void),());

	mov	eax, DWORD PTR _imp_glPushMatrix
	test	eax, eax
	jne	SHORT $LN3@glPushMatr
	push	DWORD PTR ?szName@?4??glPushMatrix@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPushMatrix, eax
	test	eax, eax
	jne	SHORT $LN3@glPushMatr
	push	OFFSET $SG320889
	push	OFFSET $SG320890
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glPushMatr:
	jmp	eax
_glPushMatrix@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_glPushClientAttrib@4 PROC

; 803  :                                 (           mask));

	npad	2
	push	ebp
	mov	ebp, esp

; 802  : OPENGL_STUB_(glPushClientAttrib,(GLbitfield mask),

	mov	eax, DWORD PTR _imp_glPushClientAttrib
	test	eax, eax
	jne	SHORT $LN3@glPushClie
	push	DWORD PTR ?szName@?4??glPushClientAttrib@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPushClientAttrib, eax
	test	eax, eax
	jne	SHORT $LN3@glPushClie
	push	OFFSET $SG320875
	push	OFFSET $SG320876
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glPushClie:
	pop	ebp
	jmp	eax
_glPushClientAttrib@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_glPushAttrib@4 PROC

; 801  :                                 (           mask));

	npad	2
	push	ebp
	mov	ebp, esp

; 800  : OPENGL_STUB_(glPushAttrib,      (GLbitfield mask),

	mov	eax, DWORD PTR _imp_glPushAttrib
	test	eax, eax
	jne	SHORT $LN3@glPushAttr
	push	DWORD PTR ?szName@?4??glPushAttrib@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPushAttrib, eax
	test	eax, eax
	jne	SHORT $LN3@glPushAttr
	push	OFFSET $SG320861
	push	OFFSET $SG320862
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glPushAttr:
	pop	ebp
	jmp	eax
_glPushAttrib@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_n$ = 8							; size = 4
_textures$ = 12						; size = 4
_priorities$ = 16					; size = 4
_glPrioritizeTextures@12 PROC

; 798  :                                    (        n,               textures,                 priorities));

	npad	2
	push	ebp
	mov	ebp, esp

; 797  : OPENGL_STUB_(glPrioritizeTextures, (GLsizei n, const GLuint *textures, const GLclampf *priorities),

	mov	eax, DWORD PTR _imp_glPrioritizeTextures
	test	eax, eax
	jne	SHORT $LN3@glPrioriti
	push	DWORD PTR ?szName@?4??glPrioritizeTextures@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPrioritizeTextures, eax
	test	eax, eax
	jne	SHORT $LN3@glPrioriti
	push	OFFSET $SG320847
	push	OFFSET $SG320848
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glPrioriti:
	pop	ebp
	jmp	eax
_glPrioritizeTextures@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glPopName@0 PROC

; 795  : OPENGL_STUB_(glPopName,        (void),());

	mov	eax, DWORD PTR _imp_glPopName
	test	eax, eax
	jne	SHORT $LN3@glPopName
	push	DWORD PTR ?szName@?4??glPopName@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPopName, eax
	test	eax, eax
	jne	SHORT $LN3@glPopName
	push	OFFSET $SG320829
	push	OFFSET $SG320830
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glPopName:
	jmp	eax
_glPopName@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glPopMatrix@0 PROC

; 794  : OPENGL_STUB_(glPopMatrix,      (void),());

	mov	eax, DWORD PTR _imp_glPopMatrix
	test	eax, eax
	jne	SHORT $LN3@glPopMatri
	push	DWORD PTR ?szName@?4??glPopMatrix@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPopMatrix, eax
	test	eax, eax
	jne	SHORT $LN3@glPopMatri
	push	OFFSET $SG320815
	push	OFFSET $SG320816
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glPopMatri:
	jmp	eax
_glPopMatrix@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glPopClientAttrib@0 PROC

; 793  : OPENGL_STUB_(glPopClientAttrib,(void),());

	mov	eax, DWORD PTR _imp_glPopClientAttrib
	test	eax, eax
	jne	SHORT $LN3@glPopClien
	push	DWORD PTR ?szName@?4??glPopClientAttrib@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPopClientAttrib, eax
	test	eax, eax
	jne	SHORT $LN3@glPopClien
	push	OFFSET $SG320801
	push	OFFSET $SG320802
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glPopClien:
	jmp	eax
_glPopClientAttrib@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glPopAttrib@0 PROC

; 792  : OPENGL_STUB_(glPopAttrib,      (void),());

	mov	eax, DWORD PTR _imp_glPopAttrib
	test	eax, eax
	jne	SHORT $LN3@glPopAttri
	push	DWORD PTR ?szName@?4??glPopAttrib@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPopAttrib, eax
	test	eax, eax
	jne	SHORT $LN3@glPopAttri
	push	OFFSET $SG320787
	push	OFFSET $SG320788
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glPopAttri:
	jmp	eax
_glPopAttrib@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_glPolygonStipple@4 PROC

; 790  :                                (               mask));

	npad	2
	push	ebp
	mov	ebp, esp

; 789  : OPENGL_STUB_(glPolygonStipple, (const GLubyte *mask),

	mov	eax, DWORD PTR _imp_glPolygonStipple
	test	eax, eax
	jne	SHORT $LN3@glPolygonS
	push	DWORD PTR ?szName@?4??glPolygonStipple@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPolygonStipple, eax
	test	eax, eax
	jne	SHORT $LN3@glPolygonS
	push	OFFSET $SG320773
	push	OFFSET $SG320774
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glPolygonS:
	pop	ebp
	jmp	eax
_glPolygonStipple@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_factor$ = 8						; size = 4
_units$ = 12						; size = 4
_glPolygonOffset@8 PROC

; 788  :                                (        factor,         units));

	npad	2
	push	ebp
	mov	ebp, esp

; 787  : OPENGL_STUB_(glPolygonOffset,  (GLfloat factor, GLfloat units),

	mov	eax, DWORD PTR _imp_glPolygonOffset
	test	eax, eax
	jne	SHORT $LN3@glPolygonO
	push	DWORD PTR ?szName@?4??glPolygonOffset@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPolygonOffset, eax
	test	eax, eax
	jne	SHORT $LN3@glPolygonO
	push	OFFSET $SG320759
	push	OFFSET $SG320760
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glPolygonO:
	movss	xmm0, DWORD PTR _units$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _factor$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glPolygonOffset@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_face$ = 8						; size = 4
_mode$ = 12						; size = 4
_glPolygonMode@8 PROC

; 786  :                                (       face,        mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 785  : OPENGL_STUB_(glPolygonMode,    (GLenum face, GLenum mode),

	mov	eax, DWORD PTR _imp_glPolygonMode
	test	eax, eax
	jne	SHORT $LN3@glPolygonM
	push	DWORD PTR ?szName@?4??glPolygonMode@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPolygonMode, eax
	test	eax, eax
	jne	SHORT $LN3@glPolygonM
	push	OFFSET $SG320743
	push	OFFSET $SG320744
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glPolygonM:
	pop	ebp
	jmp	eax
_glPolygonMode@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_size$ = 8						; size = 4
_glPointSize@4 PROC

; 784  :                                (        size));

	npad	2
	push	ebp
	mov	ebp, esp

; 783  : OPENGL_STUB_(glPointSize,      (GLfloat size),

	mov	eax, DWORD PTR _imp_glPointSize
	test	eax, eax
	jne	SHORT $LN3@glPointSiz
	push	DWORD PTR ?szName@?4??glPointSize@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPointSize, eax
	test	eax, eax
	jne	SHORT $LN3@glPointSiz
	push	OFFSET $SG320727
	push	OFFSET $SG320728
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glPointSiz:
	movss	xmm0, DWORD PTR _size$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	4
_glPointSize@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_xfactor$ = 8						; size = 4
_yfactor$ = 12						; size = 4
_glPixelZoom@8 PROC

; 781  :                                (        xfactor,         yfactor));

	npad	2
	push	ebp
	mov	ebp, esp

; 780  : OPENGL_STUB_(glPixelZoom,      (GLfloat xfactor, GLfloat yfactor),

	mov	eax, DWORD PTR _imp_glPixelZoom
	test	eax, eax
	jne	SHORT $LN3@glPixelZoo
	push	DWORD PTR ?szName@?4??glPixelZoom@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPixelZoom, eax
	test	eax, eax
	jne	SHORT $LN3@glPixelZoo
	push	OFFSET $SG320713
	push	OFFSET $SG320714
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glPixelZoo:
	movss	xmm0, DWORD PTR _yfactor$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _xfactor$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glPixelZoom@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_param$ = 12						; size = 4
_glPixelTransferi@8 PROC

; 779  :                                (       pname,       param));

	npad	2
	push	ebp
	mov	ebp, esp

; 778  : OPENGL_STUB_(glPixelTransferi, (GLenum pname, GLint param),

	mov	eax, DWORD PTR _imp_glPixelTransferi
	test	eax, eax
	jne	SHORT $LN3@glPixelTra
	push	DWORD PTR ?szName@?4??glPixelTransferi@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPixelTransferi, eax
	test	eax, eax
	jne	SHORT $LN3@glPixelTra
	push	OFFSET $SG320697
	push	OFFSET $SG320698
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glPixelTra:
	pop	ebp
	jmp	eax
_glPixelTransferi@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_param$ = 12						; size = 4
_glPixelTransferf@8 PROC

; 777  :                                (       pname,         param));

	npad	2
	push	ebp
	mov	ebp, esp

; 776  : OPENGL_STUB_(glPixelTransferf, (GLenum pname, GLfloat param),

	mov	eax, DWORD PTR _imp_glPixelTransferf
	test	eax, eax
	jne	SHORT $LN3@glPixelTra
	push	DWORD PTR ?szName@?4??glPixelTransferf@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPixelTransferf, eax
	test	eax, eax
	jne	SHORT $LN3@glPixelTra
	push	OFFSET $SG320681
	push	OFFSET $SG320682
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glPixelTra:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	call	eax
	pop	ebp
	ret	8
_glPixelTransferf@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_param$ = 12						; size = 4
_glPixelStorei@8 PROC

; 775  :                                (       pname,       param));

	npad	2
	push	ebp
	mov	ebp, esp

; 774  : OPENGL_STUB_(glPixelStorei,    (GLenum pname, GLint param),

	mov	eax, DWORD PTR _imp_glPixelStorei
	test	eax, eax
	jne	SHORT $LN3@glPixelSto
	push	DWORD PTR ?szName@?4??glPixelStorei@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPixelStorei, eax
	test	eax, eax
	jne	SHORT $LN3@glPixelSto
	push	OFFSET $SG320665
	push	OFFSET $SG320666
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glPixelSto:
	pop	ebp
	jmp	eax
_glPixelStorei@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_param$ = 12						; size = 4
_glPixelStoref@8 PROC

; 773  :                                (       pname,         param));

	npad	2
	push	ebp
	mov	ebp, esp

; 772  : OPENGL_STUB_(glPixelStoref,    (GLenum pname, GLfloat param),

	mov	eax, DWORD PTR _imp_glPixelStoref
	test	eax, eax
	jne	SHORT $LN3@glPixelSto
	push	DWORD PTR ?szName@?4??glPixelStoref@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPixelStoref, eax
	test	eax, eax
	jne	SHORT $LN3@glPixelSto
	push	OFFSET $SG320649
	push	OFFSET $SG320650
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glPixelSto:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	call	eax
	pop	ebp
	ret	8
_glPixelStoref@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_map$ = 8						; size = 4
_mapsize$ = 12						; size = 4
_values$ = 16						; size = 4
_glPixelMapusv@12 PROC

; 771  :                                (       map,         mapsize,                 values));

	npad	2
	push	ebp
	mov	ebp, esp

; 770  : OPENGL_STUB_(glPixelMapusv,    (GLenum map, GLsizei mapsize, const GLushort *values),

	mov	eax, DWORD PTR _imp_glPixelMapusv
	test	eax, eax
	jne	SHORT $LN3@glPixelMap
	push	DWORD PTR ?szName@?4??glPixelMapusv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPixelMapusv, eax
	test	eax, eax
	jne	SHORT $LN3@glPixelMap
	push	OFFSET $SG320633
	push	OFFSET $SG320634
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glPixelMap:
	pop	ebp
	jmp	eax
_glPixelMapusv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_map$ = 8						; size = 4
_mapsize$ = 12						; size = 4
_values$ = 16						; size = 4
_glPixelMapuiv@12 PROC

; 769  :                                (       map,         mapsize,               values));

	npad	2
	push	ebp
	mov	ebp, esp

; 768  : OPENGL_STUB_(glPixelMapuiv,    (GLenum map, GLsizei mapsize, const GLuint *values),

	mov	eax, DWORD PTR _imp_glPixelMapuiv
	test	eax, eax
	jne	SHORT $LN3@glPixelMap
	push	DWORD PTR ?szName@?4??glPixelMapuiv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPixelMapuiv, eax
	test	eax, eax
	jne	SHORT $LN3@glPixelMap
	push	OFFSET $SG320615
	push	OFFSET $SG320616
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glPixelMap:
	pop	ebp
	jmp	eax
_glPixelMapuiv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_map$ = 8						; size = 4
_mapsize$ = 12						; size = 4
_values$ = 16						; size = 4
_glPixelMapfv@12 PROC

; 767  :                                (       map,         mapsize,                values));

	npad	2
	push	ebp
	mov	ebp, esp

; 766  : OPENGL_STUB_(glPixelMapfv,     (GLenum map, GLsizei mapsize, const GLfloat *values),

	mov	eax, DWORD PTR _imp_glPixelMapfv
	test	eax, eax
	jne	SHORT $LN3@glPixelMap
	push	DWORD PTR ?szName@?4??glPixelMapfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPixelMapfv, eax
	test	eax, eax
	jne	SHORT $LN3@glPixelMap
	push	OFFSET $SG320597
	push	OFFSET $SG320598
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glPixelMap:
	pop	ebp
	jmp	eax
_glPixelMapfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_token$ = 8						; size = 4
_glPassThrough@4 PROC

; 764  :                             (        token));

	npad	2
	push	ebp
	mov	ebp, esp

; 763  : OPENGL_STUB_(glPassThrough, (GLfloat token),

	mov	eax, DWORD PTR _imp_glPassThrough
	test	eax, eax
	jne	SHORT $LN3@glPassThro
	push	DWORD PTR ?szName@?4??glPassThrough@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glPassThrough, eax
	test	eax, eax
	jne	SHORT $LN3@glPassThro
	push	OFFSET $SG320579
	push	OFFSET $SG320580
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glPassThro:
	movss	xmm0, DWORD PTR _token$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	4
_glPassThrough@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_left$ = 8						; size = 8
_right$ = 16						; size = 8
_bottom$ = 24						; size = 8
_top$ = 32						; size = 8
_zNear$ = 40						; size = 8
_zFar$ = 48						; size = 8
_glOrtho@48 PROC

; 761  :                       (         left,          right,          bottom,          top,          zNear,          zFar));

	npad	2
	push	ebp
	mov	ebp, esp

; 760  : OPENGL_STUB_(glOrtho, (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar),

	mov	eax, DWORD PTR _imp_glOrtho
	test	eax, eax
	jne	SHORT $LN3@glOrtho
	push	DWORD PTR ?szName@?4??glOrtho@@9@48@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glOrtho, eax
	test	eax, eax
	jne	SHORT $LN3@glOrtho
	push	OFFSET $SG320565
	push	OFFSET $SG320566
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	48					; 00000030H
$LN3@glOrtho:
	movsd	xmm0, QWORD PTR _zFar$[ebp]
	sub	esp, 48					; 00000030H
	movsd	QWORD PTR [esp+40], xmm0
	movsd	xmm0, QWORD PTR _zNear$[ebp]
	movsd	QWORD PTR [esp+32], xmm0
	movsd	xmm0, QWORD PTR _top$[ebp]
	movsd	QWORD PTR [esp+24], xmm0
	movsd	xmm0, QWORD PTR _bottom$[ebp]
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _right$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _left$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	48					; 00000030H
_glOrtho@48 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_type$ = 8						; size = 4
_stride$ = 12						; size = 4
_pointer$ = 16						; size = 4
_glNormalPointer@12 PROC

; 758  :                               (       type,         stride,               pointer));

	npad	2
	push	ebp
	mov	ebp, esp

; 757  : OPENGL_STUB_(glNormalPointer, (GLenum type, GLsizei stride, const GLvoid *pointer),

	mov	eax, DWORD PTR _imp_glNormalPointer
	test	eax, eax
	jne	SHORT $LN3@glNormalPo
	push	DWORD PTR ?szName@?4??glNormalPointer@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormalPointer, eax
	test	eax, eax
	jne	SHORT $LN3@glNormalPo
	push	OFFSET $SG320541
	push	OFFSET $SG320542
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glNormalPo:
	pop	ebp
	jmp	eax
_glNormalPointer@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glNormal3sv@4 PROC

; 756  :                               (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 755  : OPENGL_STUB_(glNormal3sv,     (const GLshort *v),

	mov	eax, DWORD PTR _imp_glNormal3sv
	test	eax, eax
	jne	SHORT $LN3@glNormal3s
	push	DWORD PTR ?szName@?4??glNormal3sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3sv, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3s
	push	OFFSET $SG320523
	push	OFFSET $SG320524
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glNormal3s:
	pop	ebp
	jmp	eax
_glNormal3sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_nx$ = 8						; size = 2
_ny$ = 12						; size = 2
_nz$ = 16						; size = 2
_glNormal3s@12 PROC

; 754  :                               (        nx,         ny,         nz));

	npad	2
	push	ebp
	mov	ebp, esp

; 753  : OPENGL_STUB_(glNormal3s,      (GLshort nx, GLshort ny, GLshort nz),

	mov	eax, DWORD PTR _imp_glNormal3s
	test	eax, eax
	jne	SHORT $LN3@glNormal3s
	push	DWORD PTR ?szName@?4??glNormal3s@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3s, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3s
	push	OFFSET $SG320509
	push	OFFSET $SG320510
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glNormal3s:
	pop	ebp
	jmp	eax
_glNormal3s@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glNormal3iv@4 PROC

; 752  :                               (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 751  : OPENGL_STUB_(glNormal3iv,     (const GLint *v),

	mov	eax, DWORD PTR _imp_glNormal3iv
	test	eax, eax
	jne	SHORT $LN3@glNormal3i
	push	DWORD PTR ?szName@?4??glNormal3iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3iv, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3i
	push	OFFSET $SG320491
	push	OFFSET $SG320492
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glNormal3i:
	pop	ebp
	jmp	eax
_glNormal3iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_nx$ = 8						; size = 4
_ny$ = 12						; size = 4
_nz$ = 16						; size = 4
_glNormal3i@12 PROC

; 750  :                               (      nx,       ny,       nz));

	npad	2
	push	ebp
	mov	ebp, esp

; 749  : OPENGL_STUB_(glNormal3i,      (GLint nx, GLint ny, GLint nz),

	mov	eax, DWORD PTR _imp_glNormal3i
	test	eax, eax
	jne	SHORT $LN3@glNormal3i
	push	DWORD PTR ?szName@?4??glNormal3i@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3i, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3i
	push	OFFSET $SG320477
	push	OFFSET $SG320478
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glNormal3i:
	pop	ebp
	jmp	eax
_glNormal3i@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glNormal3fv@4 PROC

; 748  :                               (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 747  : OPENGL_STUB_(glNormal3fv,     (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glNormal3fv
	test	eax, eax
	jne	SHORT $LN3@glNormal3f
	push	DWORD PTR ?szName@?4??glNormal3fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3fv, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3f
	push	OFFSET $SG320459
	push	OFFSET $SG320460
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glNormal3f:
	pop	ebp
	jmp	eax
_glNormal3fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_nx$ = 8						; size = 4
_ny$ = 12						; size = 4
_nz$ = 16						; size = 4
_glNormal3f@12 PROC

; 746  :                               (        nx,         ny,         nz));

	npad	2
	push	ebp
	mov	ebp, esp

; 745  : OPENGL_STUB_(glNormal3f,      (GLfloat nx, GLfloat ny, GLfloat nz),

	mov	eax, DWORD PTR _imp_glNormal3f
	test	eax, eax
	jne	SHORT $LN3@glNormal3f
	push	DWORD PTR ?szName@?4??glNormal3f@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3f, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3f
	push	OFFSET $SG320445
	push	OFFSET $SG320446
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glNormal3f:
	movss	xmm0, DWORD PTR _nz$[ebp]
	sub	esp, 12					; 0000000cH
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _ny$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _nx$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glNormal3f@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glNormal3dv@4 PROC

; 744  :                               (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 743  : OPENGL_STUB_(glNormal3dv,     (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glNormal3dv
	test	eax, eax
	jne	SHORT $LN3@glNormal3d
	push	DWORD PTR ?szName@?4??glNormal3dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3dv, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3d
	push	OFFSET $SG320427
	push	OFFSET $SG320428
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glNormal3d:
	pop	ebp
	jmp	eax
_glNormal3dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_nx$ = 8						; size = 8
_ny$ = 16						; size = 8
_nz$ = 24						; size = 8
_glNormal3d@24 PROC

; 742  :                               (         nx,          ny,          nz));

	npad	2
	push	ebp
	mov	ebp, esp

; 741  : OPENGL_STUB_(glNormal3d,      (GLdouble nx, GLdouble ny, GLdouble nz),

	mov	eax, DWORD PTR _imp_glNormal3d
	test	eax, eax
	jne	SHORT $LN3@glNormal3d
	push	DWORD PTR ?szName@?4??glNormal3d@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3d, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3d
	push	OFFSET $SG320413
	push	OFFSET $SG320414
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glNormal3d:
	movsd	xmm0, QWORD PTR _nz$[ebp]
	sub	esp, 24					; 00000018H
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _ny$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _nx$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glNormal3d@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glNormal3bv@4 PROC

; 740  :                               (              v));

	npad	2
	push	ebp
	mov	ebp, esp

; 739  : OPENGL_STUB_(glNormal3bv,     (const GLbyte *v),

	mov	eax, DWORD PTR _imp_glNormal3bv
	test	eax, eax
	jne	SHORT $LN3@glNormal3b
	push	DWORD PTR ?szName@?4??glNormal3bv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3bv, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3b
	push	OFFSET $SG320395
	push	OFFSET $SG320396
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glNormal3b:
	pop	ebp
	jmp	eax
_glNormal3bv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_nx$ = 8						; size = 1
_ny$ = 12						; size = 1
_nz$ = 16						; size = 1
_glNormal3b@12 PROC

; 738  :                               (       nx,        ny,        nz));

	npad	2
	push	ebp
	mov	ebp, esp

; 737  : OPENGL_STUB_(glNormal3b,      (GLbyte nx, GLbyte ny, GLbyte nz),

	mov	eax, DWORD PTR _imp_glNormal3b
	test	eax, eax
	jne	SHORT $LN3@glNormal3b
	push	DWORD PTR ?szName@?4??glNormal3b@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNormal3b, eax
	test	eax, eax
	jne	SHORT $LN3@glNormal3b
	push	OFFSET $SG320381
	push	OFFSET $SG320382
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glNormal3b:
	pop	ebp
	jmp	eax
_glNormal3b@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_list$ = 8						; size = 4
_mode$ = 12						; size = 4
_glNewList@8 PROC

; 735  :                         (       list,        mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 734  : OPENGL_STUB_(glNewList, (GLuint list, GLenum mode),

	mov	eax, DWORD PTR _imp_glNewList
	test	eax, eax
	jne	SHORT $LN3@glNewList
	push	DWORD PTR ?szName@?4??glNewList@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glNewList, eax
	test	eax, eax
	jne	SHORT $LN3@glNewList
	push	OFFSET $SG320363
	push	OFFSET $SG320364
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glNewList:
	pop	ebp
	jmp	eax
_glNewList@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_m$ = 8							; size = 4
_glMultMatrixf@4 PROC

; 732  :                            (               m));

	npad	2
	push	ebp
	mov	ebp, esp

; 731  : OPENGL_STUB_(glMultMatrixf,(const GLfloat *m),

	mov	eax, DWORD PTR _imp_glMultMatrixf
	test	eax, eax
	jne	SHORT $LN3@glMultMatr
	push	DWORD PTR ?szName@?4??glMultMatrixf@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMultMatrixf, eax
	test	eax, eax
	jne	SHORT $LN3@glMultMatr
	push	OFFSET $SG320347
	push	OFFSET $SG320348
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glMultMatr:
	pop	ebp
	jmp	eax
_glMultMatrixf@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_m$ = 8							; size = 4
_glMultMatrixd@4 PROC

; 730  :                            (               m));

	npad	2
	push	ebp
	mov	ebp, esp

; 729  : OPENGL_STUB_(glMultMatrixd,(const GLdouble *m),

	mov	eax, DWORD PTR _imp_glMultMatrixd
	test	eax, eax
	jne	SHORT $LN3@glMultMatr
	push	DWORD PTR ?szName@?4??glMultMatrixd@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMultMatrixd, eax
	test	eax, eax
	jne	SHORT $LN3@glMultMatr
	push	OFFSET $SG320333
	push	OFFSET $SG320334
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glMultMatr:
	pop	ebp
	jmp	eax
_glMultMatrixd@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_glMatrixMode@4 PROC

; 728  :                            (       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 727  : OPENGL_STUB_(glMatrixMode, (GLenum mode),

	mov	eax, DWORD PTR _imp_glMatrixMode
	test	eax, eax
	jne	SHORT $LN3@glMatrixMo
	push	DWORD PTR ?szName@?4??glMatrixMode@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMatrixMode, eax
	test	eax, eax
	jne	SHORT $LN3@glMatrixMo
	push	OFFSET $SG320319
	push	OFFSET $SG320320
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glMatrixMo:
	pop	ebp
	jmp	eax
_glMatrixMode@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_face$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glMaterialiv@12 PROC

; 725  :                            (       face,        pname,              params));

	npad	2
	push	ebp
	mov	ebp, esp

; 724  : OPENGL_STUB_(glMaterialiv, (GLenum face, GLenum pname, const GLint *params),

	mov	eax, DWORD PTR _imp_glMaterialiv
	test	eax, eax
	jne	SHORT $LN3@glMaterial
	push	DWORD PTR ?szName@?4??glMaterialiv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMaterialiv, eax
	test	eax, eax
	jne	SHORT $LN3@glMaterial
	push	OFFSET $SG320305
	push	OFFSET $SG320306
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glMaterial:
	pop	ebp
	jmp	eax
_glMaterialiv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_face$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glMateriali@12 PROC

; 723  :                            (       face,        pname,       param));

	npad	2
	push	ebp
	mov	ebp, esp

; 722  : OPENGL_STUB_(glMateriali,  (GLenum face, GLenum pname, GLint param),

	mov	eax, DWORD PTR _imp_glMateriali
	test	eax, eax
	jne	SHORT $LN3@glMaterial
	push	DWORD PTR ?szName@?4??glMateriali@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMateriali, eax
	test	eax, eax
	jne	SHORT $LN3@glMaterial
	push	OFFSET $SG320287
	push	OFFSET $SG320288
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glMaterial:
	pop	ebp
	jmp	eax
_glMateriali@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_face$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glMaterialfv@12 PROC

; 721  :                            (       face,        pname,                params));

	npad	2
	push	ebp
	mov	ebp, esp

; 720  : OPENGL_STUB_(glMaterialfv, (GLenum face, GLenum pname, const GLfloat *params),

	mov	eax, DWORD PTR _imp_glMaterialfv
	test	eax, eax
	jne	SHORT $LN3@glMaterial
	push	DWORD PTR ?szName@?4??glMaterialfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMaterialfv, eax
	test	eax, eax
	jne	SHORT $LN3@glMaterial
	push	OFFSET $SG320269
	push	OFFSET $SG320270
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glMaterial:
	pop	ebp
	jmp	eax
_glMaterialfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_face$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glMaterialf@12 PROC

; 719  :                            (       face,        pname,         param));

	npad	2
	push	ebp
	mov	ebp, esp

; 718  : OPENGL_STUB_(glMaterialf,  (GLenum face, GLenum pname, GLfloat param),

	mov	eax, DWORD PTR _imp_glMaterialf
	test	eax, eax
	jne	SHORT $LN3@glMaterial
	push	DWORD PTR ?szName@?4??glMaterialf@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMaterialf, eax
	test	eax, eax
	jne	SHORT $LN3@glMaterial
	push	OFFSET $SG320251
	push	OFFSET $SG320252
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glMaterial:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	push	DWORD PTR _face$[ebp]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glMaterialf@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_un$ = 8						; size = 4
_u1$ = 12						; size = 4
_u2$ = 16						; size = 4
_vn$ = 20						; size = 4
_v1$ = 24						; size = 4
_v2$ = 28						; size = 4
_glMapGrid2f@24 PROC

; 716  :                          (      un,         u1,         u2,       vn,         v1,         v2));

	npad	2
	push	ebp
	mov	ebp, esp

; 715  : OPENGL_STUB_(glMapGrid2f,(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2),

	mov	eax, DWORD PTR _imp_glMapGrid2f
	test	eax, eax
	jne	SHORT $LN3@glMapGrid2
	push	DWORD PTR ?szName@?4??glMapGrid2f@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMapGrid2f, eax
	test	eax, eax
	jne	SHORT $LN3@glMapGrid2
	push	OFFSET $SG320233
	push	OFFSET $SG320234
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glMapGrid2:
	movss	xmm0, DWORD PTR _v2$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _vn$[ebp]
	movss	xmm0, DWORD PTR _u2$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _u1$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _un$[ebp]
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glMapGrid2f@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_un$ = 8						; size = 4
_u1$ = 12						; size = 8
_u2$ = 20						; size = 8
_vn$ = 28						; size = 4
_v1$ = 32						; size = 8
_v2$ = 40						; size = 8
_glMapGrid2d@40 PROC

; 714  :                          (      un,          u1,          u2,       vn,          v1,          v2));

	npad	2
	push	ebp
	mov	ebp, esp

; 713  : OPENGL_STUB_(glMapGrid2d,(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2),

	mov	eax, DWORD PTR _imp_glMapGrid2d
	test	eax, eax
	jne	SHORT $LN3@glMapGrid2
	push	DWORD PTR ?szName@?4??glMapGrid2d@@9@40@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMapGrid2d, eax
	test	eax, eax
	jne	SHORT $LN3@glMapGrid2
	push	OFFSET $SG320209
	push	OFFSET $SG320210
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	40					; 00000028H
$LN3@glMapGrid2:
	movsd	xmm0, QWORD PTR _v2$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _v1$[ebp]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _vn$[ebp]
	movsd	xmm0, QWORD PTR _u2$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _u1$[ebp]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _un$[ebp]
	call	eax
	pop	ebp
	ret	40					; 00000028H
_glMapGrid2d@40 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_un$ = 8						; size = 4
_u1$ = 12						; size = 4
_u2$ = 16						; size = 4
_glMapGrid1f@12 PROC

; 712  :                          (      un,         u1,         u2));

	npad	2
	push	ebp
	mov	ebp, esp

; 711  : OPENGL_STUB_(glMapGrid1f,(GLint un, GLfloat u1, GLfloat u2),

	mov	eax, DWORD PTR _imp_glMapGrid1f
	test	eax, eax
	jne	SHORT $LN3@glMapGrid1
	push	DWORD PTR ?szName@?4??glMapGrid1f@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMapGrid1f, eax
	test	eax, eax
	jne	SHORT $LN3@glMapGrid1
	push	OFFSET $SG320185
	push	OFFSET $SG320186
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glMapGrid1:
	movss	xmm0, DWORD PTR _u2$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _u1$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _un$[ebp]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glMapGrid1f@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_un$ = 8						; size = 4
_u1$ = 12						; size = 8
_u2$ = 20						; size = 8
_glMapGrid1d@20 PROC

; 710  :                          (      un,          u1,          u2));

	npad	2
	push	ebp
	mov	ebp, esp

; 709  : OPENGL_STUB_(glMapGrid1d,(GLint un, GLdouble u1, GLdouble u2),

	mov	eax, DWORD PTR _imp_glMapGrid1d
	test	eax, eax
	jne	SHORT $LN3@glMapGrid1
	push	DWORD PTR ?szName@?4??glMapGrid1d@@9@20@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMapGrid1d, eax
	test	eax, eax
	jne	SHORT $LN3@glMapGrid1
	push	OFFSET $SG320167
	push	OFFSET $SG320168
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	20					; 00000014H
$LN3@glMapGrid1:
	movsd	xmm0, QWORD PTR _u2$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _u1$[ebp]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _un$[ebp]
	call	eax
	pop	ebp
	ret	20					; 00000014H
_glMapGrid1d@20 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_u1$ = 12						; size = 4
_u2$ = 16						; size = 4
_ustride$ = 20						; size = 4
_uorder$ = 24						; size = 4
_v1$ = 28						; size = 4
_v2$ = 32						; size = 4
_vstride$ = 36						; size = 4
_vorder$ = 40						; size = 4
_points$ = 44						; size = 4
_glMap2f@40 PROC

; 708  :                          (       target,         u1,         u2,       ustride,       uorder,         v1,         v2,       vstride,       vorder,                points));

	npad	2
	push	ebp
	mov	ebp, esp

; 707  : OPENGL_STUB_(glMap2f,    (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points),

	mov	eax, DWORD PTR _imp_glMap2f
	test	eax, eax
	jne	SHORT $LN3@glMap2f
	push	DWORD PTR ?szName@?4??glMap2f@@9@40@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMap2f, eax
	test	eax, eax
	jne	SHORT $LN3@glMap2f
	push	OFFSET $SG320149
	push	OFFSET $SG320150
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	40					; 00000028H
$LN3@glMap2f:
	push	DWORD PTR _points$[ebp]
	movss	xmm0, DWORD PTR _v2$[ebp]
	push	DWORD PTR _vorder$[ebp]
	push	DWORD PTR _vstride$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _uorder$[ebp]
	movss	xmm0, DWORD PTR _u2$[ebp]
	push	DWORD PTR _ustride$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _u1$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _target$[ebp]
	call	eax
	pop	ebp
	ret	40					; 00000028H
_glMap2f@40 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_u1$ = 12						; size = 8
_u2$ = 20						; size = 8
_ustride$ = 28						; size = 4
_uorder$ = 32						; size = 4
_v1$ = 36						; size = 8
_v2$ = 44						; size = 8
_vstride$ = 52						; size = 4
_vorder$ = 56						; size = 4
_points$ = 60						; size = 4
_glMap2d@56 PROC

; 706  :                          (       target,          u1,          u2,       ustride,       uorder,          v1,          v2,       vstride,       vorder,                 points));

	npad	2
	push	ebp
	mov	ebp, esp

; 705  : OPENGL_STUB_(glMap2d,    (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points),

	mov	eax, DWORD PTR _imp_glMap2d
	test	eax, eax
	jne	SHORT $LN3@glMap2d
	push	DWORD PTR ?szName@?4??glMap2d@@9@56@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMap2d, eax
	test	eax, eax
	jne	SHORT $LN3@glMap2d
	push	OFFSET $SG320117
	push	OFFSET $SG320118
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	56					; 00000038H
$LN3@glMap2d:
	push	DWORD PTR _points$[ebp]
	movsd	xmm0, QWORD PTR _v2$[ebp]
	push	DWORD PTR _vorder$[ebp]
	push	DWORD PTR _vstride$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _v1$[ebp]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _uorder$[ebp]
	movsd	xmm0, QWORD PTR _u2$[ebp]
	push	DWORD PTR _ustride$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _u1$[ebp]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _target$[ebp]
	call	eax
	pop	ebp
	ret	56					; 00000038H
_glMap2d@56 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_u1$ = 12						; size = 4
_u2$ = 16						; size = 4
_stride$ = 20						; size = 4
_order$ = 24						; size = 4
_points$ = 28						; size = 4
_glMap1f@24 PROC

; 704  :                          (       target,         u1,         u2,       stride,       order,                points));

	npad	2
	push	ebp
	mov	ebp, esp

; 703  : OPENGL_STUB_(glMap1f,    (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points),

	mov	eax, DWORD PTR _imp_glMap1f
	test	eax, eax
	jne	SHORT $LN3@glMap1f
	push	DWORD PTR ?szName@?4??glMap1f@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMap1f, eax
	test	eax, eax
	jne	SHORT $LN3@glMap1f
	push	OFFSET $SG320085
	push	OFFSET $SG320086
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glMap1f:
	push	DWORD PTR _points$[ebp]
	movss	xmm0, DWORD PTR _u2$[ebp]
	push	DWORD PTR _order$[ebp]
	push	DWORD PTR _stride$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _u1$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _target$[ebp]
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glMap1f@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_u1$ = 12						; size = 8
_u2$ = 20						; size = 8
_stride$ = 28						; size = 4
_order$ = 32						; size = 4
_points$ = 36						; size = 4
_glMap1d@32 PROC

; 702  :                          (       target,          u1,          u2,       stride,       order,                 points));

	npad	2
	push	ebp
	mov	ebp, esp

; 701  : OPENGL_STUB_(glMap1d,    (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points),

	mov	eax, DWORD PTR _imp_glMap1d
	test	eax, eax
	jne	SHORT $LN3@glMap1d
	push	DWORD PTR ?szName@?4??glMap1d@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glMap1d, eax
	test	eax, eax
	jne	SHORT $LN3@glMap1d
	push	OFFSET $SG320061
	push	OFFSET $SG320062
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glMap1d:
	push	DWORD PTR _points$[ebp]
	movsd	xmm0, QWORD PTR _u2$[ebp]
	push	DWORD PTR _order$[ebp]
	push	DWORD PTR _stride$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _u1$[ebp]
	movsd	QWORD PTR [esp], xmm0
	push	DWORD PTR _target$[ebp]
	call	eax
	pop	ebp
	ret	32					; 00000020H
_glMap1d@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_opcode$ = 8						; size = 4
_glLogicOp@4 PROC

; 699  :                         (       opcode));

	npad	2
	push	ebp
	mov	ebp, esp

; 698  : OPENGL_STUB_(glLogicOp, (GLenum opcode),

	mov	eax, DWORD PTR _imp_glLogicOp
	test	eax, eax
	jne	SHORT $LN3@glLogicOp
	push	DWORD PTR ?szName@?4??glLogicOp@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLogicOp, eax
	test	eax, eax
	jne	SHORT $LN3@glLogicOp
	push	OFFSET $SG320037
	push	OFFSET $SG320038
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glLogicOp:
	pop	ebp
	jmp	eax
_glLogicOp@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_name$ = 8						; size = 4
_glLoadName@4 PROC

; 696  :                             (       name));

	npad	2
	push	ebp
	mov	ebp, esp

; 695  : OPENGL_STUB_(glLoadName,    (GLuint name),

	mov	eax, DWORD PTR _imp_glLoadName
	test	eax, eax
	jne	SHORT $LN3@glLoadName
	push	DWORD PTR ?szName@?4??glLoadName@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLoadName, eax
	test	eax, eax
	jne	SHORT $LN3@glLoadName
	push	OFFSET $SG320023
	push	OFFSET $SG320024
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glLoadName:
	pop	ebp
	jmp	eax
_glLoadName@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_m$ = 8							; size = 4
_glLoadMatrixf@4 PROC

; 694  :                             (               m));

	npad	2
	push	ebp
	mov	ebp, esp

; 693  : OPENGL_STUB_(glLoadMatrixf, (const GLfloat *m),

	mov	eax, DWORD PTR _imp_glLoadMatrixf
	test	eax, eax
	jne	SHORT $LN3@glLoadMatr
	push	DWORD PTR ?szName@?4??glLoadMatrixf@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLoadMatrixf, eax
	test	eax, eax
	jne	SHORT $LN3@glLoadMatr
	push	OFFSET $SG320009
	push	OFFSET $SG320010
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glLoadMatr:
	pop	ebp
	jmp	eax
_glLoadMatrixf@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_m$ = 8							; size = 4
_glLoadMatrixd@4 PROC

; 692  :                             (                m));

	npad	2
	push	ebp
	mov	ebp, esp

; 691  : OPENGL_STUB_(glLoadMatrixd, (const GLdouble *m),

	mov	eax, DWORD PTR _imp_glLoadMatrixd
	test	eax, eax
	jne	SHORT $LN3@glLoadMatr
	push	DWORD PTR ?szName@?4??glLoadMatrixd@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLoadMatrixd, eax
	test	eax, eax
	jne	SHORT $LN3@glLoadMatr
	push	OFFSET $SG319995
	push	OFFSET $SG319996
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glLoadMatr:
	pop	ebp
	jmp	eax
_glLoadMatrixd@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glLoadIdentity@0 PROC

; 690  : OPENGL_STUB_(glLoadIdentity,(void),());

	mov	eax, DWORD PTR _imp_glLoadIdentity
	test	eax, eax
	jne	SHORT $LN3@glLoadIden
	push	DWORD PTR ?szName@?4??glLoadIdentity@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLoadIdentity, eax
	test	eax, eax
	jne	SHORT $LN3@glLoadIden
	push	OFFSET $SG319981
	push	OFFSET $SG319982
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glLoadIden:
	jmp	eax
_glLoadIdentity@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_base$ = 8						; size = 4
_glListBase@4 PROC

; 688  :                          (       base));

	npad	2
	push	ebp
	mov	ebp, esp

; 687  : OPENGL_STUB_(glListBase, (GLuint base),

	mov	eax, DWORD PTR _imp_glListBase
	test	eax, eax
	jne	SHORT $LN3@glListBase
	push	DWORD PTR ?szName@?4??glListBase@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glListBase, eax
	test	eax, eax
	jne	SHORT $LN3@glListBase
	push	OFFSET $SG319967
	push	OFFSET $SG319968
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glListBase:
	pop	ebp
	jmp	eax
_glListBase@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_width$ = 8						; size = 4
_glLineWidth@4 PROC

; 685  :                             (        width));

	npad	2
	push	ebp
	mov	ebp, esp

; 684  : OPENGL_STUB_(glLineWidth,   (GLfloat width),

	mov	eax, DWORD PTR _imp_glLineWidth
	test	eax, eax
	jne	SHORT $LN3@glLineWidt
	push	DWORD PTR ?szName@?4??glLineWidth@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLineWidth, eax
	test	eax, eax
	jne	SHORT $LN3@glLineWidt
	push	OFFSET $SG319953
	push	OFFSET $SG319954
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glLineWidt:
	movss	xmm0, DWORD PTR _width$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	4
_glLineWidth@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_factor$ = 8						; size = 4
_pattern$ = 12						; size = 2
_glLineStipple@8 PROC

; 683  :                             (      factor,          pattern));

	npad	2
	push	ebp
	mov	ebp, esp

; 682  : OPENGL_STUB_(glLineStipple, (GLint factor, GLushort pattern),

	mov	eax, DWORD PTR _imp_glLineStipple
	test	eax, eax
	jne	SHORT $LN3@glLineStip
	push	DWORD PTR ?szName@?4??glLineStipple@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLineStipple, eax
	test	eax, eax
	jne	SHORT $LN3@glLineStip
	push	OFFSET $SG319939
	push	OFFSET $SG319940
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glLineStip:
	pop	ebp
	jmp	eax
_glLineStipple@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_light$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glLightiv@12 PROC

; 680  :                              (       light,        pname,              params));

	npad	2
	push	ebp
	mov	ebp, esp

; 679  : OPENGL_STUB_(glLightiv,      (GLenum light, GLenum pname, const GLint *params),

	mov	eax, DWORD PTR _imp_glLightiv
	test	eax, eax
	jne	SHORT $LN3@glLightiv
	push	DWORD PTR ?szName@?4??glLightiv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLightiv, eax
	test	eax, eax
	jne	SHORT $LN3@glLightiv
	push	OFFSET $SG319923
	push	OFFSET $SG319924
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glLightiv:
	pop	ebp
	jmp	eax
_glLightiv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_light$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glLighti@12 PROC

; 678  :                              (       light,        pname,       param));

	npad	2
	push	ebp
	mov	ebp, esp

; 677  : OPENGL_STUB_(glLighti,       (GLenum light, GLenum pname, GLint param),

	mov	eax, DWORD PTR _imp_glLighti
	test	eax, eax
	jne	SHORT $LN3@glLighti
	push	DWORD PTR ?szName@?4??glLighti@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLighti, eax
	test	eax, eax
	jne	SHORT $LN3@glLighti
	push	OFFSET $SG319905
	push	OFFSET $SG319906
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glLighti:
	pop	ebp
	jmp	eax
_glLighti@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_light$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glLightfv@12 PROC

; 676  :                              (       light,        pname,                params));

	npad	2
	push	ebp
	mov	ebp, esp

; 675  : OPENGL_STUB_(glLightfv,      (GLenum light, GLenum pname, const GLfloat *params),

	mov	eax, DWORD PTR _imp_glLightfv
	test	eax, eax
	jne	SHORT $LN3@glLightfv
	push	DWORD PTR ?szName@?4??glLightfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLightfv, eax
	test	eax, eax
	jne	SHORT $LN3@glLightfv
	push	OFFSET $SG319887
	push	OFFSET $SG319888
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glLightfv:
	pop	ebp
	jmp	eax
_glLightfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_light$ = 8						; size = 4
_pname$ = 12						; size = 4
_param$ = 16						; size = 4
_glLightf@12 PROC

; 674  :                              (       light,        pname,         param));

	npad	2
	push	ebp
	mov	ebp, esp

; 673  : OPENGL_STUB_(glLightf,       (GLenum light, GLenum pname, GLfloat param),

	mov	eax, DWORD PTR _imp_glLightf
	test	eax, eax
	jne	SHORT $LN3@glLightf
	push	DWORD PTR ?szName@?4??glLightf@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLightf, eax
	test	eax, eax
	jne	SHORT $LN3@glLightf
	push	OFFSET $SG319869
	push	OFFSET $SG319870
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glLightf:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	push	DWORD PTR _light$[ebp]
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glLightf@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glLightModeliv@8 PROC

; 672  :                              (       pname,              params));

	npad	2
	push	ebp
	mov	ebp, esp

; 671  : OPENGL_STUB_(glLightModeliv, (GLenum pname, const GLint *params),

	mov	eax, DWORD PTR _imp_glLightModeliv
	test	eax, eax
	jne	SHORT $LN3@glLightMod
	push	DWORD PTR ?szName@?4??glLightModeliv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLightModeliv, eax
	test	eax, eax
	jne	SHORT $LN3@glLightMod
	push	OFFSET $SG319851
	push	OFFSET $SG319852
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glLightMod:
	pop	ebp
	jmp	eax
_glLightModeliv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_param$ = 12						; size = 4
_glLightModeli@8 PROC

; 670  :                              (       pname,       param));

	npad	2
	push	ebp
	mov	ebp, esp

; 669  : OPENGL_STUB_(glLightModeli,  (GLenum pname, GLint param),

	mov	eax, DWORD PTR _imp_glLightModeli
	test	eax, eax
	jne	SHORT $LN3@glLightMod
	push	DWORD PTR ?szName@?4??glLightModeli@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLightModeli, eax
	test	eax, eax
	jne	SHORT $LN3@glLightMod
	push	OFFSET $SG319835
	push	OFFSET $SG319836
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glLightMod:
	pop	ebp
	jmp	eax
_glLightModeli@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glLightModelfv@8 PROC

; 668  :                              (       pname,                params));

	npad	2
	push	ebp
	mov	ebp, esp

; 667  : OPENGL_STUB_(glLightModelfv, (GLenum pname, const GLfloat *params),

	mov	eax, DWORD PTR _imp_glLightModelfv
	test	eax, eax
	jne	SHORT $LN3@glLightMod
	push	DWORD PTR ?szName@?4??glLightModelfv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLightModelfv, eax
	test	eax, eax
	jne	SHORT $LN3@glLightMod
	push	OFFSET $SG319819
	push	OFFSET $SG319820
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glLightMod:
	pop	ebp
	jmp	eax
_glLightModelfv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_param$ = 12						; size = 4
_glLightModelf@8 PROC

; 666  :                              (       pname,         param));

	npad	2
	push	ebp
	mov	ebp, esp

; 665  : OPENGL_STUB_(glLightModelf,  (GLenum pname, GLfloat param),

	mov	eax, DWORD PTR _imp_glLightModelf
	test	eax, eax
	jne	SHORT $LN3@glLightMod
	push	DWORD PTR ?szName@?4??glLightModelf@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glLightModelf, eax
	test	eax, eax
	jne	SHORT $LN3@glLightMod
	push	OFFSET $SG319803
	push	OFFSET $SG319804
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glLightMod:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	call	eax
	pop	ebp
	ret	8
_glLightModelf@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_texture$ = 8						; size = 4
_glIsTexture@4 PROC

; 663  :                                   (       texture));

	npad	2
	push	ebp
	mov	ebp, esp

; 662  : OPENGL_STUB(GLboolean,glIsTexture,(GLuint texture),

	mov	eax, DWORD PTR _imp_glIsTexture
	test	eax, eax
	jne	SHORT $LN3@glIsTextur
	push	DWORD PTR ?szName@?4??glIsTexture@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIsTexture, eax
	test	eax, eax
	jne	SHORT $LN3@glIsTextur
	push	OFFSET $SG319787
	push	OFFSET $SG319788
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	al, al
	pop	ebp
	ret	4
$LN3@glIsTextur:
	pop	ebp
	jmp	eax
_glIsTexture@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_list$ = 8						; size = 4
_glIsList@4 PROC

; 661  :                                   (       list));

	npad	2
	push	ebp
	mov	ebp, esp

; 660  : OPENGL_STUB(GLboolean,glIsList,   (GLuint list),

	mov	eax, DWORD PTR _imp_glIsList
	test	eax, eax
	jne	SHORT $LN3@glIsList
	push	DWORD PTR ?szName@?4??glIsList@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIsList, eax
	test	eax, eax
	jne	SHORT $LN3@glIsList
	push	OFFSET $SG319773
	push	OFFSET $SG319774
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	al, al
	pop	ebp
	ret	4
$LN3@glIsList:
	pop	ebp
	jmp	eax
_glIsList@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_cap$ = 8						; size = 4
_glIsEnabled@4 PROC

; 659  :                                   (       cap));

	npad	2
	push	ebp
	mov	ebp, esp

; 658  : OPENGL_STUB(GLboolean,glIsEnabled,(GLenum cap),

	mov	eax, DWORD PTR _imp_glIsEnabled
	test	eax, eax
	jne	SHORT $LN3@glIsEnable
	push	DWORD PTR ?szName@?4??glIsEnabled@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIsEnabled, eax
	test	eax, eax
	jne	SHORT $LN3@glIsEnable
	push	OFFSET $SG319759
	push	OFFSET $SG319760
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	al, al
	pop	ebp
	ret	4
$LN3@glIsEnable:
	pop	ebp
	jmp	eax
_glIsEnabled@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_format$ = 8						; size = 4
_stride$ = 12						; size = 4
_pointer$ = 16						; size = 4
_glInterleavedArrays@12 PROC

; 656  :                                  (       format,         stride,               pointer));

	npad	2
	push	ebp
	mov	ebp, esp

; 655  : OPENGL_STUB_(glInterleavedArrays,(GLenum format, GLsizei stride, const GLvoid *pointer),

	mov	eax, DWORD PTR _imp_glInterleavedArrays
	test	eax, eax
	jne	SHORT $LN3@glInterlea
	push	DWORD PTR ?szName@?4??glInterleavedArrays@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glInterleavedArrays, eax
	test	eax, eax
	jne	SHORT $LN3@glInterlea
	push	OFFSET $SG319745
	push	OFFSET $SG319746
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glInterlea:
	pop	ebp
	jmp	eax
_glInterleavedArrays@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glInitNames@0 PROC

; 653  : OPENGL_STUB_(glInitNames,(void),());

	mov	eax, DWORD PTR _imp_glInitNames
	test	eax, eax
	jne	SHORT $LN3@glInitName
	push	DWORD PTR ?szName@?4??glInitNames@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glInitNames, eax
	test	eax, eax
	jne	SHORT $LN3@glInitName
	push	OFFSET $SG319727
	push	OFFSET $SG319728
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glInitName:
	jmp	eax
_glInitNames@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_glIndexubv@4 PROC

; 651  :                              (               c));

	npad	2
	push	ebp
	mov	ebp, esp

; 650  : OPENGL_STUB_(glIndexubv,     (const GLubyte *c),

	mov	eax, DWORD PTR _imp_glIndexubv
	test	eax, eax
	jne	SHORT $LN3@glIndexubv
	push	DWORD PTR ?szName@?4??glIndexubv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexubv, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexubv
	push	OFFSET $SG319713
	push	OFFSET $SG319714
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexubv:
	pop	ebp
	jmp	eax
_glIndexubv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 1
_glIndexub@4 PROC

; 649  :                              (        c));

	npad	2
	push	ebp
	mov	ebp, esp

; 648  : OPENGL_STUB_(glIndexub,      (GLubyte c),

	mov	eax, DWORD PTR _imp_glIndexub
	test	eax, eax
	jne	SHORT $LN3@glIndexub
	push	DWORD PTR ?szName@?4??glIndexub@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexub, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexub
	push	OFFSET $SG319699
	push	OFFSET $SG319700
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexub:
	pop	ebp
	jmp	eax
_glIndexub@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_glIndexsv@4 PROC

; 647  :                              (               c));

	npad	2
	push	ebp
	mov	ebp, esp

; 646  : OPENGL_STUB_(glIndexsv,      (const GLshort *c),

	mov	eax, DWORD PTR _imp_glIndexsv
	test	eax, eax
	jne	SHORT $LN3@glIndexsv
	push	DWORD PTR ?szName@?4??glIndexsv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexsv, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexsv
	push	OFFSET $SG319685
	push	OFFSET $SG319686
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexsv:
	pop	ebp
	jmp	eax
_glIndexsv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 2
_glIndexs@4 PROC

; 645  :                              (        c));

	npad	2
	push	ebp
	mov	ebp, esp

; 644  : OPENGL_STUB_(glIndexs,       (GLshort c),

	mov	eax, DWORD PTR _imp_glIndexs
	test	eax, eax
	jne	SHORT $LN3@glIndexs
	push	DWORD PTR ?szName@?4??glIndexs@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexs, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexs
	push	OFFSET $SG319671
	push	OFFSET $SG319672
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexs:
	pop	ebp
	jmp	eax
_glIndexs@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_glIndexiv@4 PROC

; 643  :                              (             c));

	npad	2
	push	ebp
	mov	ebp, esp

; 642  : OPENGL_STUB_(glIndexiv,      (const GLint *c),

	mov	eax, DWORD PTR _imp_glIndexiv
	test	eax, eax
	jne	SHORT $LN3@glIndexiv
	push	DWORD PTR ?szName@?4??glIndexiv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexiv, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexiv
	push	OFFSET $SG319657
	push	OFFSET $SG319658
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexiv:
	pop	ebp
	jmp	eax
_glIndexiv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_glIndexi@4 PROC

; 641  :                              (      c));

	npad	2
	push	ebp
	mov	ebp, esp

; 640  : OPENGL_STUB_(glIndexi,       (GLint c),

	mov	eax, DWORD PTR _imp_glIndexi
	test	eax, eax
	jne	SHORT $LN3@glIndexi
	push	DWORD PTR ?szName@?4??glIndexi@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexi, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexi
	push	OFFSET $SG319643
	push	OFFSET $SG319644
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexi:
	pop	ebp
	jmp	eax
_glIndexi@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_glIndexfv@4 PROC

; 639  :                              (               c));

	npad	2
	push	ebp
	mov	ebp, esp

; 638  : OPENGL_STUB_(glIndexfv,      (const GLfloat *c),

	mov	eax, DWORD PTR _imp_glIndexfv
	test	eax, eax
	jne	SHORT $LN3@glIndexfv
	push	DWORD PTR ?szName@?4??glIndexfv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexfv, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexfv
	push	OFFSET $SG319629
	push	OFFSET $SG319630
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexfv:
	pop	ebp
	jmp	eax
_glIndexfv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_glIndexf@4 PROC

; 637  :                              (        c));

	npad	2
	push	ebp
	mov	ebp, esp

; 636  : OPENGL_STUB_(glIndexf,       (GLfloat c),

	mov	eax, DWORD PTR _imp_glIndexf
	test	eax, eax
	jne	SHORT $LN3@glIndexf
	push	DWORD PTR ?szName@?4??glIndexf@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexf, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexf
	push	OFFSET $SG319615
	push	OFFSET $SG319616
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexf:
	movss	xmm0, DWORD PTR _c$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	4
_glIndexf@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_glIndexdv@4 PROC

; 635  :                              (                c));

	npad	2
	push	ebp
	mov	ebp, esp

; 634  : OPENGL_STUB_(glIndexdv,      (const GLdouble *c),

	mov	eax, DWORD PTR _imp_glIndexdv
	test	eax, eax
	jne	SHORT $LN3@glIndexdv
	push	DWORD PTR ?szName@?4??glIndexdv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexdv, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexdv
	push	OFFSET $SG319601
	push	OFFSET $SG319602
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexdv:
	pop	ebp
	jmp	eax
_glIndexdv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 8
_glIndexd@8 PROC

; 633  :                              (         c));

	npad	2
	push	ebp
	mov	ebp, esp

; 632  : OPENGL_STUB_(glIndexd,       (GLdouble c),

	mov	eax, DWORD PTR _imp_glIndexd
	test	eax, eax
	jne	SHORT $LN3@glIndexd
	push	DWORD PTR ?szName@?4??glIndexd@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexd, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexd
	push	OFFSET $SG319587
	push	OFFSET $SG319588
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glIndexd:
	movsd	xmm0, QWORD PTR _c$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glIndexd@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_type$ = 8						; size = 4
_stride$ = 12						; size = 4
_pointer$ = 16						; size = 4
_glIndexPointer@12 PROC

; 631  :                              (       type,         stride,               pointer));

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : OPENGL_STUB_(glIndexPointer, (GLenum type, GLsizei stride, const GLvoid *pointer),

	mov	eax, DWORD PTR _imp_glIndexPointer
	test	eax, eax
	jne	SHORT $LN3@glIndexPoi
	push	DWORD PTR ?szName@?4??glIndexPointer@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexPointer, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexPoi
	push	OFFSET $SG319573
	push	OFFSET $SG319574
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glIndexPoi:
	pop	ebp
	jmp	eax
_glIndexPointer@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_glIndexMask@4 PROC

; 629  :                              (       mask));

	npad	2
	push	ebp
	mov	ebp, esp

; 628  : OPENGL_STUB_(glIndexMask,    (GLuint mask),

	mov	eax, DWORD PTR _imp_glIndexMask
	test	eax, eax
	jne	SHORT $LN3@glIndexMas
	push	DWORD PTR ?szName@?4??glIndexMask@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glIndexMask, eax
	test	eax, eax
	jne	SHORT $LN3@glIndexMas
	push	OFFSET $SG319555
	push	OFFSET $SG319556
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glIndexMas:
	pop	ebp
	jmp	eax
_glIndexMask@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_mode$ = 12						; size = 4
_glHint@8 PROC

; 626  :                     (       target,        mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 625  : OPENGL_STUB_(glHint,(GLenum target, GLenum mode),

	mov	eax, DWORD PTR _imp_glHint
	test	eax, eax
	jne	SHORT $LN3@glHint
	push	DWORD PTR ?szName@?4??glHint@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glHint, eax
	test	eax, eax
	jne	SHORT $LN3@glHint
	push	OFFSET $SG319541
	push	OFFSET $SG319542
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glHint:
	pop	ebp
	jmp	eax
_glHint@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetTexParameteriv@12 PROC

; 623  :                                        (       target,        pname,        params));

	npad	2
	push	ebp
	mov	ebp, esp

; 622  : OPENGL_STUB_(glGetTexParameteriv,      (GLenum target, GLenum pname, GLint *params),

	mov	eax, DWORD PTR _imp_glGetTexParameteriv
	test	eax, eax
	jne	SHORT $LN3@glGetTexPa
	push	DWORD PTR ?szName@?4??glGetTexParameteriv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexParameteriv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexPa
	push	OFFSET $SG319525
	push	OFFSET $SG319526
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetTexPa:
	pop	ebp
	jmp	eax
_glGetTexParameteriv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetTexParameterfv@12 PROC

; 621  :                                        (       target,        pname,          params));

	npad	2
	push	ebp
	mov	ebp, esp

; 620  : OPENGL_STUB_(glGetTexParameterfv,      (GLenum target, GLenum pname, GLfloat *params),

	mov	eax, DWORD PTR _imp_glGetTexParameterfv
	test	eax, eax
	jne	SHORT $LN3@glGetTexPa
	push	DWORD PTR ?szName@?4??glGetTexParameterfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexParameterfv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexPa
	push	OFFSET $SG319507
	push	OFFSET $SG319508
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetTexPa:
	pop	ebp
	jmp	eax
_glGetTexParameterfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_pname$ = 16						; size = 4
_params$ = 20						; size = 4
_glGetTexLevelParameteriv@16 PROC

; 619  :                                        (       target,       level,        pname,        params));

	npad	2
	push	ebp
	mov	ebp, esp

; 618  : OPENGL_STUB_(glGetTexLevelParameteriv, (GLenum target, GLint level, GLenum pname, GLint *params),

	mov	eax, DWORD PTR _imp_glGetTexLevelParameteriv
	test	eax, eax
	jne	SHORT $LN3@glGetTexLe
	push	DWORD PTR ?szName@?4??glGetTexLevelParameteriv@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexLevelParameteriv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexLe
	push	OFFSET $SG319489
	push	OFFSET $SG319490
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glGetTexLe:
	pop	ebp
	jmp	eax
_glGetTexLevelParameteriv@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_pname$ = 16						; size = 4
_params$ = 20						; size = 4
_glGetTexLevelParameterfv@16 PROC

; 617  :                                        (       target,       level,        pname,          params));

	npad	2
	push	ebp
	mov	ebp, esp

; 616  : OPENGL_STUB_(glGetTexLevelParameterfv, (GLenum target, GLint level, GLenum pname, GLfloat *params),

	mov	eax, DWORD PTR _imp_glGetTexLevelParameterfv
	test	eax, eax
	jne	SHORT $LN3@glGetTexLe
	push	DWORD PTR ?szName@?4??glGetTexLevelParameterfv@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexLevelParameterfv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexLe
	push	OFFSET $SG319469
	push	OFFSET $SG319470
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glGetTexLe:
	pop	ebp
	jmp	eax
_glGetTexLevelParameterfv@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_format$ = 16						; size = 4
_type$ = 20						; size = 4
_pixels$ = 24						; size = 4
_glGetTexImage@20 PROC

; 615  :                                        (       target,       level,        format,        type,         pixels));

	npad	2
	push	ebp
	mov	ebp, esp

; 614  : OPENGL_STUB_(glGetTexImage,            (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels),

	mov	eax, DWORD PTR _imp_glGetTexImage
	test	eax, eax
	jne	SHORT $LN3@glGetTexIm
	push	DWORD PTR ?szName@?4??glGetTexImage@@9@20@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexImage, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexIm
	push	OFFSET $SG319449
	push	OFFSET $SG319450
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	20					; 00000014H
$LN3@glGetTexIm:
	pop	ebp
	jmp	eax
_glGetTexImage@20 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetTexGeniv@12 PROC

; 613  :                                        (       coord,        pname,        params));

	npad	2
	push	ebp
	mov	ebp, esp

; 612  : OPENGL_STUB_(glGetTexGeniv,            (GLenum coord, GLenum pname, GLint *params),

	mov	eax, DWORD PTR _imp_glGetTexGeniv
	test	eax, eax
	jne	SHORT $LN3@glGetTexGe
	push	DWORD PTR ?szName@?4??glGetTexGeniv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexGeniv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexGe
	push	OFFSET $SG319427
	push	OFFSET $SG319428
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetTexGe:
	pop	ebp
	jmp	eax
_glGetTexGeniv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetTexGenfv@12 PROC

; 611  :                                        (       coord,        pname,          params));

	npad	2
	push	ebp
	mov	ebp, esp

; 610  : OPENGL_STUB_(glGetTexGenfv,            (GLenum coord, GLenum pname, GLfloat *params),

	mov	eax, DWORD PTR _imp_glGetTexGenfv
	test	eax, eax
	jne	SHORT $LN3@glGetTexGe
	push	DWORD PTR ?szName@?4??glGetTexGenfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexGenfv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexGe
	push	OFFSET $SG319409
	push	OFFSET $SG319410
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetTexGe:
	pop	ebp
	jmp	eax
_glGetTexGenfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_coord$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetTexGendv@12 PROC

; 609  :                                        (       coord,        pname,           params));

	npad	2
	push	ebp
	mov	ebp, esp

; 608  : OPENGL_STUB_(glGetTexGendv,            (GLenum coord, GLenum pname, GLdouble *params),

	mov	eax, DWORD PTR _imp_glGetTexGendv
	test	eax, eax
	jne	SHORT $LN3@glGetTexGe
	push	DWORD PTR ?szName@?4??glGetTexGendv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexGendv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexGe
	push	OFFSET $SG319391
	push	OFFSET $SG319392
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetTexGe:
	pop	ebp
	jmp	eax
_glGetTexGendv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetTexEnviv@12 PROC

; 607  :                                        (       target,        pname,        params));

	npad	2
	push	ebp
	mov	ebp, esp

; 606  : OPENGL_STUB_(glGetTexEnviv,            (GLenum target, GLenum pname, GLint *params),

	mov	eax, DWORD PTR _imp_glGetTexEnviv
	test	eax, eax
	jne	SHORT $LN3@glGetTexEn
	push	DWORD PTR ?szName@?4??glGetTexEnviv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexEnviv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexEn
	push	OFFSET $SG319373
	push	OFFSET $SG319374
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetTexEn:
	pop	ebp
	jmp	eax
_glGetTexEnviv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetTexEnvfv@12 PROC

; 605  :                                        (       target,        pname,          params));

	npad	2
	push	ebp
	mov	ebp, esp

; 604  : OPENGL_STUB_(glGetTexEnvfv,            (GLenum target, GLenum pname, GLfloat *params),

	mov	eax, DWORD PTR _imp_glGetTexEnvfv
	test	eax, eax
	jne	SHORT $LN3@glGetTexEn
	push	DWORD PTR ?szName@?4??glGetTexEnvfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetTexEnvfv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetTexEn
	push	OFFSET $SG319355
	push	OFFSET $SG319356
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetTexEn:
	pop	ebp
	jmp	eax
_glGetTexEnvfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_name$ = 8						; size = 4
_glGetString@4 PROC

; 602  :                                         (       name));

	npad	2
	push	ebp
	mov	ebp, esp

; 601  : OPENGL_STUB(const GLubyte *,glGetString,(GLenum name),

	mov	eax, DWORD PTR _imp_glGetString
	test	eax, eax
	jne	SHORT $LN3@glGetStrin
	push	DWORD PTR ?szName@?4??glGetString@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetString, eax
	test	eax, eax
	jne	SHORT $LN3@glGetStrin
	push	OFFSET $SG319337
	push	OFFSET $SG319338
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	4
$LN3@glGetStrin:
	pop	ebp
	jmp	eax
_glGetString@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_glGetPolygonStipple@4 PROC

; 599  :                                  (         mask));

	npad	2
	push	ebp
	mov	ebp, esp

; 598  : OPENGL_STUB_(glGetPolygonStipple,(GLubyte *mask),

	mov	eax, DWORD PTR _imp_glGetPolygonStipple
	test	eax, eax
	jne	SHORT $LN3@glGetPolyg
	push	DWORD PTR ?szName@?4??glGetPolygonStipple@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetPolygonStipple, eax
	test	eax, eax
	jne	SHORT $LN3@glGetPolyg
	push	OFFSET $SG319323
	push	OFFSET $SG319324
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glGetPolyg:
	pop	ebp
	jmp	eax
_glGetPolygonStipple@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glGetPointerv@8 PROC

; 597  :                                  (       pname,          params));

	npad	2
	push	ebp
	mov	ebp, esp

; 596  : OPENGL_STUB_(glGetPointerv,      (GLenum pname, GLvoid* *params),

	mov	eax, DWORD PTR _imp_glGetPointerv
	test	eax, eax
	jne	SHORT $LN3@glGetPoint
	push	DWORD PTR ?szName@?4??glGetPointerv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetPointerv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetPoint
	push	OFFSET $SG319309
	push	OFFSET $SG319310
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetPoint:
	pop	ebp
	jmp	eax
_glGetPointerv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_map$ = 8						; size = 4
_values$ = 12						; size = 4
_glGetPixelMapusv@8 PROC

; 595  :                                  (       map,           values));

	npad	2
	push	ebp
	mov	ebp, esp

; 594  : OPENGL_STUB_(glGetPixelMapusv,   (GLenum map, GLushort *values),

	mov	eax, DWORD PTR _imp_glGetPixelMapusv
	test	eax, eax
	jne	SHORT $LN3@glGetPixel
	push	DWORD PTR ?szName@?4??glGetPixelMapusv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetPixelMapusv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetPixel
	push	OFFSET $SG319293
	push	OFFSET $SG319294
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetPixel:
	pop	ebp
	jmp	eax
_glGetPixelMapusv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_map$ = 8						; size = 4
_values$ = 12						; size = 4
_glGetPixelMapuiv@8 PROC

; 593  :                                  (       map,         values));

	npad	2
	push	ebp
	mov	ebp, esp

; 592  : OPENGL_STUB_(glGetPixelMapuiv,   (GLenum map, GLuint *values),

	mov	eax, DWORD PTR _imp_glGetPixelMapuiv
	test	eax, eax
	jne	SHORT $LN3@glGetPixel
	push	DWORD PTR ?szName@?4??glGetPixelMapuiv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetPixelMapuiv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetPixel
	push	OFFSET $SG319277
	push	OFFSET $SG319278
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetPixel:
	pop	ebp
	jmp	eax
_glGetPixelMapuiv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_map$ = 8						; size = 4
_values$ = 12						; size = 4
_glGetPixelMapfv@8 PROC

; 591  :                                  (       map,          values));

	npad	2
	push	ebp
	mov	ebp, esp

; 590  : OPENGL_STUB_(glGetPixelMapfv,    (GLenum map, GLfloat *values),

	mov	eax, DWORD PTR _imp_glGetPixelMapfv
	test	eax, eax
	jne	SHORT $LN3@glGetPixel
	push	DWORD PTR ?szName@?4??glGetPixelMapfv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetPixelMapfv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetPixel
	push	OFFSET $SG319261
	push	OFFSET $SG319262
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetPixel:
	pop	ebp
	jmp	eax
_glGetPixelMapfv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_face$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetMaterialiv@12 PROC

; 589  :                                  (       face,        pname,        params));

	npad	2
	push	ebp
	mov	ebp, esp

; 588  : OPENGL_STUB_(glGetMaterialiv,    (GLenum face, GLenum pname, GLint *params),

	mov	eax, DWORD PTR _imp_glGetMaterialiv
	test	eax, eax
	jne	SHORT $LN3@glGetMater
	push	DWORD PTR ?szName@?4??glGetMaterialiv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetMaterialiv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetMater
	push	OFFSET $SG319245
	push	OFFSET $SG319246
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetMater:
	pop	ebp
	jmp	eax
_glGetMaterialiv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_face$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetMaterialfv@12 PROC

; 587  :                                  (       face,        pname,          params));

	npad	2
	push	ebp
	mov	ebp, esp

; 586  : OPENGL_STUB_(glGetMaterialfv,    (GLenum face, GLenum pname, GLfloat *params),

	mov	eax, DWORD PTR _imp_glGetMaterialfv
	test	eax, eax
	jne	SHORT $LN3@glGetMater
	push	DWORD PTR ?szName@?4??glGetMaterialfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetMaterialfv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetMater
	push	OFFSET $SG319227
	push	OFFSET $SG319228
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetMater:
	pop	ebp
	jmp	eax
_glGetMaterialfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_query$ = 12						; size = 4
_v$ = 16						; size = 4
_glGetMapiv@12 PROC

; 584  :                                  (       target,       query,       v));

	npad	2
	push	ebp
	mov	ebp, esp

; 583  : OPENGL_STUB_(glGetMapiv,         (GLenum target,GLenum query,GLint *v),

	mov	eax, DWORD PTR _imp_glGetMapiv
	test	eax, eax
	jne	SHORT $LN3@glGetMapiv
	push	DWORD PTR ?szName@?4??glGetMapiv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetMapiv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetMapiv
	push	OFFSET $SG319209
	push	OFFSET $SG319210
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetMapiv:
	pop	ebp
	jmp	eax
_glGetMapiv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_query$ = 12						; size = 4
_v$ = 16						; size = 4
_glGetMapfv@12 PROC

; 582  :                                  (       target,       query,         v));

	npad	2
	push	ebp
	mov	ebp, esp

; 581  : OPENGL_STUB_(glGetMapfv,         (GLenum target,GLenum query,GLfloat *v),

	mov	eax, DWORD PTR _imp_glGetMapfv
	test	eax, eax
	jne	SHORT $LN3@glGetMapfv
	push	DWORD PTR ?szName@?4??glGetMapfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetMapfv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetMapfv
	push	OFFSET $SG319191
	push	OFFSET $SG319192
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetMapfv:
	pop	ebp
	jmp	eax
_glGetMapfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_query$ = 12						; size = 4
_v$ = 16						; size = 4
_glGetMapdv@12 PROC

; 580  :                                  (       target,       query,          v));

	npad	2
	push	ebp
	mov	ebp, esp

; 579  : OPENGL_STUB_(glGetMapdv,         (GLenum target,GLenum query,GLdouble *v),

	mov	eax, DWORD PTR _imp_glGetMapdv
	test	eax, eax
	jne	SHORT $LN3@glGetMapdv
	push	DWORD PTR ?szName@?4??glGetMapdv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetMapdv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetMapdv
	push	OFFSET $SG319173
	push	OFFSET $SG319174
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetMapdv:
	pop	ebp
	jmp	eax
_glGetMapdv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_light$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetLightiv@12 PROC

; 578  :                                  (       light,       pname,       params));

	npad	2
	push	ebp
	mov	ebp, esp

; 577  : OPENGL_STUB_(glGetLightiv,       (GLenum light,GLenum pname,GLint *params),

	mov	eax, DWORD PTR _imp_glGetLightiv
	test	eax, eax
	jne	SHORT $LN3@glGetLight
	push	DWORD PTR ?szName@?4??glGetLightiv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetLightiv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetLight
	push	OFFSET $SG319155
	push	OFFSET $SG319156
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetLight:
	pop	ebp
	jmp	eax
_glGetLightiv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_light$ = 8						; size = 4
_pname$ = 12						; size = 4
_params$ = 16						; size = 4
_glGetLightfv@12 PROC

; 576  :                                  (       light,       pname,         params));

	npad	2
	push	ebp
	mov	ebp, esp

; 575  : OPENGL_STUB_(glGetLightfv,       (GLenum light,GLenum pname,GLfloat *params),

	mov	eax, DWORD PTR _imp_glGetLightfv
	test	eax, eax
	jne	SHORT $LN3@glGetLight
	push	DWORD PTR ?szName@?4??glGetLightfv@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetLightfv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetLight
	push	OFFSET $SG319137
	push	OFFSET $SG319138
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glGetLight:
	pop	ebp
	jmp	eax
_glGetLightfv@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glGetIntegerv@8 PROC

; 574  :                                  (       pname,       params));

	npad	2
	push	ebp
	mov	ebp, esp

; 573  : OPENGL_STUB_(glGetIntegerv,      (GLenum pname,GLint *params),

	mov	eax, DWORD PTR _imp_glGetIntegerv
	test	eax, eax
	jne	SHORT $LN3@glGetInteg
	push	DWORD PTR ?szName@?4??glGetIntegerv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetIntegerv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetInteg
	push	OFFSET $SG319119
	push	OFFSET $SG319120
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetInteg:
	pop	ebp
	jmp	eax
_glGetIntegerv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glGetFloatv@8 PROC

; 572  :                                  (       pname,         params));

	npad	2
	push	ebp
	mov	ebp, esp

; 571  : OPENGL_STUB_(glGetFloatv,        (GLenum pname,GLfloat *params),

	mov	eax, DWORD PTR _imp_glGetFloatv
	test	eax, eax
	jne	SHORT $LN3@glGetFloat
	push	DWORD PTR ?szName@?4??glGetFloatv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetFloatv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetFloat
	push	OFFSET $SG319103
	push	OFFSET $SG319104
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetFloat:
	pop	ebp
	jmp	eax
_glGetFloatv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glGetError@0 PROC

; 569  : OPENGL_STUB(GLenum,glGetError,(void),());

	mov	eax, DWORD PTR _imp_glGetError
	test	eax, eax
	jne	SHORT $LN3@glGetError
	push	DWORD PTR ?szName@?4??glGetError@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetError, eax
	test	eax, eax
	jne	SHORT $LN3@glGetError
	push	OFFSET $SG319087
	push	OFFSET $SG319088
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	ret	0
$LN3@glGetError:
	jmp	eax
_glGetError@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glGetDoublev@8 PROC

; 567  :                             (       pname,          params));

	npad	2
	push	ebp
	mov	ebp, esp

; 566  : OPENGL_STUB_(glGetDoublev,  (GLenum pname,GLdouble *params),

	mov	eax, DWORD PTR _imp_glGetDoublev
	test	eax, eax
	jne	SHORT $LN3@glGetDoubl
	push	DWORD PTR ?szName@?4??glGetDoublev@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetDoublev, eax
	test	eax, eax
	jne	SHORT $LN3@glGetDoubl
	push	OFFSET $SG319073
	push	OFFSET $SG319074
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetDoubl:
	pop	ebp
	jmp	eax
_glGetDoublev@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_plane$ = 8						; size = 4
_equation$ = 12						; size = 4
_glGetClipPlane@8 PROC

; 565  :                             (       plane,          equation));

	npad	2
	push	ebp
	mov	ebp, esp

; 564  : OPENGL_STUB_(glGetClipPlane,(GLenum plane,GLdouble *equation),

	mov	eax, DWORD PTR _imp_glGetClipPlane
	test	eax, eax
	jne	SHORT $LN3@glGetClipP
	push	DWORD PTR ?szName@?4??glGetClipPlane@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetClipPlane, eax
	test	eax, eax
	jne	SHORT $LN3@glGetClipP
	push	OFFSET $SG319057
	push	OFFSET $SG319058
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetClipP:
	pop	ebp
	jmp	eax
_glGetClipPlane@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glGetBooleanv@8 PROC

; 563  :                             (       pname,           params));

	npad	2
	push	ebp
	mov	ebp, esp

; 562  : OPENGL_STUB_(glGetBooleanv, (GLenum pname,GLboolean *params),

	mov	eax, DWORD PTR _imp_glGetBooleanv
	test	eax, eax
	jne	SHORT $LN3@glGetBoole
	push	DWORD PTR ?szName@?4??glGetBooleanv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGetBooleanv, eax
	test	eax, eax
	jne	SHORT $LN3@glGetBoole
	push	OFFSET $SG319041
	push	OFFSET $SG319042
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGetBoole:
	pop	ebp
	jmp	eax
_glGetBooleanv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_n$ = 8							; size = 4
_textures$ = 12						; size = 4
_glGenTextures@8 PROC

; 560  :                               (        n,        textures));

	npad	2
	push	ebp
	mov	ebp, esp

; 559  : OPENGL_STUB_(glGenTextures,   (GLsizei n,GLuint *textures),

	mov	eax, DWORD PTR _imp_glGenTextures
	test	eax, eax
	jne	SHORT $LN3@glGenTextu
	push	DWORD PTR ?szName@?4??glGenTextures@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGenTextures, eax
	test	eax, eax
	jne	SHORT $LN3@glGenTextu
	push	OFFSET $SG319025
	push	OFFSET $SG319026
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glGenTextu:
	pop	ebp
	jmp	eax
_glGenTextures@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_range$ = 8						; size = 4
_glGenLists@4 PROC

; 558  :                               (        range));

	npad	2
	push	ebp
	mov	ebp, esp

; 557  : OPENGL_STUB(GLuint,glGenLists,(GLsizei range),

	mov	eax, DWORD PTR _imp_glGenLists
	test	eax, eax
	jne	SHORT $LN3@glGenLists
	push	DWORD PTR ?szName@?4??glGenLists@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glGenLists, eax
	test	eax, eax
	jne	SHORT $LN3@glGenLists
	push	OFFSET $SG319009
	push	OFFSET $SG319010
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	ebp
	ret	4
$LN3@glGenLists:
	pop	ebp
	jmp	eax
_glGenLists@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_left$ = 8						; size = 8
_right$ = 16						; size = 8
_bottom$ = 24						; size = 8
_top$ = 32						; size = 8
_zNear$ = 40						; size = 8
_zFar$ = 48						; size = 8
_glFrustum@48 PROC

; 555  :                           (         left,         right,         bottom,         top,         zNear,         zFar));

	npad	2
	push	ebp
	mov	ebp, esp

; 554  : OPENGL_STUB_(glFrustum,   (GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar),

	mov	eax, DWORD PTR _imp_glFrustum
	test	eax, eax
	jne	SHORT $LN3@glFrustum
	push	DWORD PTR ?szName@?4??glFrustum@@9@48@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFrustum, eax
	test	eax, eax
	jne	SHORT $LN3@glFrustum
	push	OFFSET $SG318995
	push	OFFSET $SG318996
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	48					; 00000030H
$LN3@glFrustum:
	movsd	xmm0, QWORD PTR _zFar$[ebp]
	sub	esp, 48					; 00000030H
	movsd	QWORD PTR [esp+40], xmm0
	movsd	xmm0, QWORD PTR _zNear$[ebp]
	movsd	QWORD PTR [esp+32], xmm0
	movsd	xmm0, QWORD PTR _top$[ebp]
	movsd	QWORD PTR [esp+24], xmm0
	movsd	xmm0, QWORD PTR _bottom$[ebp]
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _right$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _left$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	48					; 00000030H
_glFrustum@48 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_glFrontFace@4 PROC

; 553  :                           (       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 552  : OPENGL_STUB_(glFrontFace, (GLenum mode),

	mov	eax, DWORD PTR _imp_glFrontFace
	test	eax, eax
	jne	SHORT $LN3@glFrontFac
	push	DWORD PTR ?szName@?4??glFrontFace@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFrontFace, eax
	test	eax, eax
	jne	SHORT $LN3@glFrontFac
	push	OFFSET $SG318971
	push	OFFSET $SG318972
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glFrontFac:
	pop	ebp
	jmp	eax
_glFrontFace@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glFogiv@8 PROC

; 550  :                      (       pname,             params));

	npad	2
	push	ebp
	mov	ebp, esp

; 549  : OPENGL_STUB_(glFogiv,(GLenum pname,const GLint *params),

	mov	eax, DWORD PTR _imp_glFogiv
	test	eax, eax
	jne	SHORT $LN3@glFogiv
	push	DWORD PTR ?szName@?4??glFogiv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFogiv, eax
	test	eax, eax
	jne	SHORT $LN3@glFogiv
	push	OFFSET $SG318957
	push	OFFSET $SG318958
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glFogiv:
	pop	ebp
	jmp	eax
_glFogiv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_param$ = 12						; size = 4
_glFogi@8 PROC

; 548  :                      (       pname,      param));

	npad	2
	push	ebp
	mov	ebp, esp

; 547  : OPENGL_STUB_(glFogi, (GLenum pname,GLint param),

	mov	eax, DWORD PTR _imp_glFogi
	test	eax, eax
	jne	SHORT $LN3@glFogi
	push	DWORD PTR ?szName@?4??glFogi@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFogi, eax
	test	eax, eax
	jne	SHORT $LN3@glFogi
	push	OFFSET $SG318941
	push	OFFSET $SG318942
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glFogi:
	pop	ebp
	jmp	eax
_glFogi@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_params$ = 12						; size = 4
_glFogfv@8 PROC

; 546  :                      (       pname,               params));

	npad	2
	push	ebp
	mov	ebp, esp

; 545  : OPENGL_STUB_(glFogfv,(GLenum pname,const GLfloat *params),

	mov	eax, DWORD PTR _imp_glFogfv
	test	eax, eax
	jne	SHORT $LN3@glFogfv
	push	DWORD PTR ?szName@?4??glFogfv@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFogfv, eax
	test	eax, eax
	jne	SHORT $LN3@glFogfv
	push	OFFSET $SG318925
	push	OFFSET $SG318926
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glFogfv:
	pop	ebp
	jmp	eax
_glFogfv@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_param$ = 12						; size = 4
_glFogf@8 PROC

; 544  :                      (       pname,        param));

	npad	2
	push	ebp
	mov	ebp, esp

; 543  : OPENGL_STUB_(glFogf, (GLenum pname,GLfloat param),

	mov	eax, DWORD PTR _imp_glFogf
	test	eax, eax
	jne	SHORT $LN3@glFogf
	push	DWORD PTR ?szName@?4??glFogf@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFogf, eax
	test	eax, eax
	jne	SHORT $LN3@glFogf
	push	OFFSET $SG318909
	push	OFFSET $SG318910
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glFogf:
	movss	xmm0, DWORD PTR _param$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _pname$[ebp]
	call	eax
	pop	ebp
	ret	8
_glFogf@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glFlush@0 PROC

; 541  : OPENGL_STUB_(glFlush, (void),());

	mov	eax, DWORD PTR _imp_glFlush
	test	eax, eax
	jne	SHORT $LN3@glFlush
	push	DWORD PTR ?szName@?4??glFlush@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFlush, eax
	test	eax, eax
	jne	SHORT $LN3@glFlush
	push	OFFSET $SG318893
	push	OFFSET $SG318894
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glFlush:
	jmp	eax
_glFlush@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glFinish@0 PROC

; 540  : OPENGL_STUB_(glFinish,(void),());

	mov	eax, DWORD PTR _imp_glFinish
	test	eax, eax
	jne	SHORT $LN3@glFinish
	push	DWORD PTR ?szName@?4??glFinish@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFinish, eax
	test	eax, eax
	jne	SHORT $LN3@glFinish
	push	OFFSET $SG318879
	push	OFFSET $SG318880
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glFinish:
	jmp	eax
_glFinish@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_size$ = 8						; size = 4
_type$ = 12						; size = 4
_buffer$ = 16						; size = 4
_glFeedbackBuffer@12 PROC

; 538  :                               (        size,       type,         buffer));

	npad	2
	push	ebp
	mov	ebp, esp

; 537  : OPENGL_STUB_(glFeedbackBuffer,(GLsizei size,GLenum type,GLfloat *buffer),

	mov	eax, DWORD PTR _imp_glFeedbackBuffer
	test	eax, eax
	jne	SHORT $LN3@glFeedback
	push	DWORD PTR ?szName@?4??glFeedbackBuffer@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glFeedbackBuffer, eax
	test	eax, eax
	jne	SHORT $LN3@glFeedback
	push	OFFSET $SG318865
	push	OFFSET $SG318866
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glFeedback:
	pop	ebp
	jmp	eax
_glFeedbackBuffer@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_i$ = 8							; size = 4
_j$ = 12						; size = 4
_glEvalPoint2@8 PROC

; 535  :                             (      i,      j));

	npad	2
	push	ebp
	mov	ebp, esp

; 534  : OPENGL_STUB_(glEvalPoint2,  (GLint i,GLint j),

	mov	eax, DWORD PTR _imp_glEvalPoint2
	test	eax, eax
	jne	SHORT $LN3@glEvalPoin
	push	DWORD PTR ?szName@?4??glEvalPoint2@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalPoint2, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalPoin
	push	OFFSET $SG318847
	push	OFFSET $SG318848
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glEvalPoin:
	pop	ebp
	jmp	eax
_glEvalPoint2@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_i$ = 8							; size = 4
_glEvalPoint1@4 PROC

; 533  :                             (      i));

	npad	2
	push	ebp
	mov	ebp, esp

; 532  : OPENGL_STUB_(glEvalPoint1,  (GLint i),

	mov	eax, DWORD PTR _imp_glEvalPoint1
	test	eax, eax
	jne	SHORT $LN3@glEvalPoin
	push	DWORD PTR ?szName@?4??glEvalPoint1@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalPoint1, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalPoin
	push	OFFSET $SG318831
	push	OFFSET $SG318832
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEvalPoin:
	pop	ebp
	jmp	eax
_glEvalPoint1@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_i1$ = 12						; size = 4
_i2$ = 16						; size = 4
_j1$ = 20						; size = 4
_j2$ = 24						; size = 4
_glEvalMesh2@20 PROC

; 531  :                             (       mode,      i1,      i2,      j1,      j2));

	npad	2
	push	ebp
	mov	ebp, esp

; 530  : OPENGL_STUB_(glEvalMesh2,   (GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2),

	mov	eax, DWORD PTR _imp_glEvalMesh2
	test	eax, eax
	jne	SHORT $LN3@glEvalMesh
	push	DWORD PTR ?szName@?4??glEvalMesh2@@9@20@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalMesh2, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalMesh
	push	OFFSET $SG318817
	push	OFFSET $SG318818
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	20					; 00000014H
$LN3@glEvalMesh:
	pop	ebp
	jmp	eax
_glEvalMesh2@20 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_i1$ = 12						; size = 4
_i2$ = 16						; size = 4
_glEvalMesh1@12 PROC

; 529  :                             (       mode,      i1,      i2));

	npad	2
	push	ebp
	mov	ebp, esp

; 528  : OPENGL_STUB_(glEvalMesh1,   (GLenum mode,GLint i1,GLint i2),

	mov	eax, DWORD PTR _imp_glEvalMesh1
	test	eax, eax
	jne	SHORT $LN3@glEvalMesh
	push	DWORD PTR ?szName@?4??glEvalMesh1@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalMesh1, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalMesh
	push	OFFSET $SG318795
	push	OFFSET $SG318796
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glEvalMesh:
	pop	ebp
	jmp	eax
_glEvalMesh1@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 4
_glEvalCoord2fv@4 PROC

; 527  :                             (               u));

	npad	2
	push	ebp
	mov	ebp, esp

; 526  : OPENGL_STUB_(glEvalCoord2fv,(const GLfloat *u),

	mov	eax, DWORD PTR _imp_glEvalCoord2fv
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	DWORD PTR ?szName@?4??glEvalCoord2fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalCoord2fv, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	OFFSET $SG318777
	push	OFFSET $SG318778
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEvalCoor:
	pop	ebp
	jmp	eax
_glEvalCoord2fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 4
_v$ = 12						; size = 4
_glEvalCoord2f@8 PROC

; 525  :                             (        u,        v));

	npad	2
	push	ebp
	mov	ebp, esp

; 524  : OPENGL_STUB_(glEvalCoord2f, (GLfloat u,GLfloat v),

	mov	eax, DWORD PTR _imp_glEvalCoord2f
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	DWORD PTR ?szName@?4??glEvalCoord2f@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalCoord2f, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	OFFSET $SG318763
	push	OFFSET $SG318764
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glEvalCoor:
	movss	xmm0, DWORD PTR _v$[ebp]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _u$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glEvalCoord2f@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 4
_glEvalCoord2dv@4 PROC

; 523  :                             (                u));

	npad	2
	push	ebp
	mov	ebp, esp

; 522  : OPENGL_STUB_(glEvalCoord2dv,(const GLdouble *u),

	mov	eax, DWORD PTR _imp_glEvalCoord2dv
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	DWORD PTR ?szName@?4??glEvalCoord2dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalCoord2dv, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	OFFSET $SG318747
	push	OFFSET $SG318748
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEvalCoor:
	pop	ebp
	jmp	eax
_glEvalCoord2dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 8
_v$ = 16						; size = 8
_glEvalCoord2d@16 PROC

; 521  :                             (         u,         v));

	npad	2
	push	ebp
	mov	ebp, esp

; 520  : OPENGL_STUB_(glEvalCoord2d, (GLdouble u,GLdouble v),

	mov	eax, DWORD PTR _imp_glEvalCoord2d
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	DWORD PTR ?szName@?4??glEvalCoord2d@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalCoord2d, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	OFFSET $SG318733
	push	OFFSET $SG318734
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glEvalCoor:
	movsd	xmm0, QWORD PTR _v$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _u$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glEvalCoord2d@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 4
_glEvalCoord1fv@4 PROC

; 519  :                             (               u));

	npad	2
	push	ebp
	mov	ebp, esp

; 518  : OPENGL_STUB_(glEvalCoord1fv,(const GLfloat *u),

	mov	eax, DWORD PTR _imp_glEvalCoord1fv
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	DWORD PTR ?szName@?4??glEvalCoord1fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalCoord1fv, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	OFFSET $SG318717
	push	OFFSET $SG318718
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEvalCoor:
	pop	ebp
	jmp	eax
_glEvalCoord1fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 4
_glEvalCoord1f@4 PROC

; 517  :                             (        u));

	npad	2
	push	ebp
	mov	ebp, esp

; 516  : OPENGL_STUB_(glEvalCoord1f, (GLfloat u),

	mov	eax, DWORD PTR _imp_glEvalCoord1f
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	DWORD PTR ?szName@?4??glEvalCoord1f@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalCoord1f, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	OFFSET $SG318703
	push	OFFSET $SG318704
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEvalCoor:
	movss	xmm0, DWORD PTR _u$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	4
_glEvalCoord1f@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 4
_glEvalCoord1dv@4 PROC

; 515  :                             (                u));

	npad	2
	push	ebp
	mov	ebp, esp

; 514  : OPENGL_STUB_(glEvalCoord1dv,(const GLdouble *u),

	mov	eax, DWORD PTR _imp_glEvalCoord1dv
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	DWORD PTR ?szName@?4??glEvalCoord1dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalCoord1dv, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	OFFSET $SG318689
	push	OFFSET $SG318690
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEvalCoor:
	pop	ebp
	jmp	eax
_glEvalCoord1dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_u$ = 8							; size = 8
_glEvalCoord1d@8 PROC

; 513  :                             (         u));

	npad	2
	push	ebp
	mov	ebp, esp

; 512  : OPENGL_STUB_(glEvalCoord1d, (GLdouble u),

	mov	eax, DWORD PTR _imp_glEvalCoord1d
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	DWORD PTR ?szName@?4??glEvalCoord1d@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEvalCoord1d, eax
	test	eax, eax
	jne	SHORT $LN3@glEvalCoor
	push	OFFSET $SG318675
	push	OFFSET $SG318676
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glEvalCoor:
	movsd	xmm0, QWORD PTR _u$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glEvalCoord1d@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glEndList@0 PROC

; 510  : OPENGL_STUB_(glEndList,           (void),());

	mov	eax, DWORD PTR _imp_glEndList
	test	eax, eax
	jne	SHORT $LN3@glEndList
	push	DWORD PTR ?szName@?4??glEndList@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEndList, eax
	test	eax, eax
	jne	SHORT $LN3@glEndList
	push	OFFSET $SG318661
	push	OFFSET $SG318662
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glEndList:
	jmp	eax
_glEndList@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_glEnd@0 PROC

; 509  : OPENGL_STUB_(glEnd,               (void),());

	mov	eax, DWORD PTR _imp_glEnd
	test	eax, eax
	jne	SHORT $LN3@glEnd
	push	DWORD PTR ?szName@?4??glEnd@@9@0@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEnd, eax
	test	eax, eax
	jne	SHORT $LN3@glEnd
	push	OFFSET $SG318647
	push	OFFSET $SG318648
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	ret	0
$LN3@glEnd:
	jmp	eax
_glEnd@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_array$ = 8						; size = 4
_glEnableClientState@4 PROC

; 507  :                                   (       array));

	npad	2
	push	ebp
	mov	ebp, esp

; 506  : OPENGL_STUB_(glEnableClientState, (GLenum array),

	mov	eax, DWORD PTR _imp_glEnableClientState
	test	eax, eax
	jne	SHORT $LN3@glEnableCl
	push	DWORD PTR ?szName@?4??glEnableClientState@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEnableClientState, eax
	test	eax, eax
	jne	SHORT $LN3@glEnableCl
	push	OFFSET $SG318633
	push	OFFSET $SG318634
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEnableCl:
	pop	ebp
	jmp	eax
_glEnableClientState@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_cap$ = 8						; size = 4
_glEnable@4 PROC

; 505  :                                   (       cap));

	npad	2
	push	ebp
	mov	ebp, esp

; 504  : OPENGL_STUB_(glEnable,            (GLenum cap),

	mov	eax, DWORD PTR _imp_glEnable
	test	eax, eax
	jne	SHORT $LN3@glEnable
	push	DWORD PTR ?szName@?4??glEnable@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEnable, eax
	test	eax, eax
	jne	SHORT $LN3@glEnable
	push	OFFSET $SG318619
	push	OFFSET $SG318620
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEnable:
	pop	ebp
	jmp	eax
_glEnable@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_flag$ = 8						; size = 4
_glEdgeFlagv@4 PROC

; 502  :                                   (                 flag));

	npad	2
	push	ebp
	mov	ebp, esp

; 501  : OPENGL_STUB_(glEdgeFlagv,         (const GLboolean *flag),

	mov	eax, DWORD PTR _imp_glEdgeFlagv
	test	eax, eax
	jne	SHORT $LN3@glEdgeFlag
	push	DWORD PTR ?szName@?4??glEdgeFlagv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEdgeFlagv, eax
	test	eax, eax
	jne	SHORT $LN3@glEdgeFlag
	push	OFFSET $SG318605
	push	OFFSET $SG318606
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEdgeFlag:
	pop	ebp
	jmp	eax
_glEdgeFlagv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_stride$ = 8						; size = 4
_pointer$ = 12						; size = 4
_glEdgeFlagPointer@8 PROC

; 500  :                                   (        stride,              pointer));

	npad	2
	push	ebp
	mov	ebp, esp

; 499  : OPENGL_STUB_(glEdgeFlagPointer,   (GLsizei stride,const GLvoid *pointer),

	mov	eax, DWORD PTR _imp_glEdgeFlagPointer
	test	eax, eax
	jne	SHORT $LN3@glEdgeFlag
	push	DWORD PTR ?szName@?4??glEdgeFlagPointer@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEdgeFlagPointer, eax
	test	eax, eax
	jne	SHORT $LN3@glEdgeFlag
	push	OFFSET $SG318591
	push	OFFSET $SG318592
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glEdgeFlag:
	pop	ebp
	jmp	eax
_glEdgeFlagPointer@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_flag$ = 8						; size = 1
_glEdgeFlag@4 PROC

; 498  :                                   (          flag));

	npad	2
	push	ebp
	mov	ebp, esp

; 497  : OPENGL_STUB_(glEdgeFlag,          (GLboolean flag),

	mov	eax, DWORD PTR _imp_glEdgeFlag
	test	eax, eax
	jne	SHORT $LN3@glEdgeFlag
	push	DWORD PTR ?szName@?4??glEdgeFlag@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glEdgeFlag, eax
	test	eax, eax
	jne	SHORT $LN3@glEdgeFlag
	push	OFFSET $SG318575
	push	OFFSET $SG318576
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glEdgeFlag:
	pop	ebp
	jmp	eax
_glEdgeFlag@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
_format$ = 16						; size = 4
_type$ = 20						; size = 4
_pixels$ = 24						; size = 4
_glDrawPixels@20 PROC

; 495  :                                   (        width,        height,       format,       type,              pixels));

	npad	2
	push	ebp
	mov	ebp, esp

; 494  : OPENGL_STUB_(glDrawPixels,        (GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid *pixels),

	mov	eax, DWORD PTR _imp_glDrawPixels
	test	eax, eax
	jne	SHORT $LN3@glDrawPixe
	push	DWORD PTR ?szName@?4??glDrawPixels@@9@20@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDrawPixels, eax
	test	eax, eax
	jne	SHORT $LN3@glDrawPixe
	push	OFFSET $SG318561
	push	OFFSET $SG318562
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	20					; 00000014H
$LN3@glDrawPixe:
	pop	ebp
	jmp	eax
_glDrawPixels@20 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_count$ = 12						; size = 4
_type$ = 16						; size = 4
_indices$ = 20						; size = 4
_glDrawElements@16 PROC

; 493  :                                   (       mode,        count,       type,              indices));

	npad	2
	push	ebp
	mov	ebp, esp

; 492  : OPENGL_STUB_(glDrawElements,      (GLenum mode,GLsizei count,GLenum type,const GLvoid *indices),

	mov	eax, DWORD PTR _imp_glDrawElements
	test	eax, eax
	jne	SHORT $LN3@glDrawElem
	push	DWORD PTR ?szName@?4??glDrawElements@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDrawElements, eax
	test	eax, eax
	jne	SHORT $LN3@glDrawElem
	push	OFFSET $SG318539
	push	OFFSET $SG318540
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glDrawElem:
	pop	ebp
	jmp	eax
_glDrawElements@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_glDrawBuffer@4 PROC

; 491  :                                   (       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 490  : OPENGL_STUB_(glDrawBuffer,        (GLenum mode),

	mov	eax, DWORD PTR _imp_glDrawBuffer
	test	eax, eax
	jne	SHORT $LN3@glDrawBuff
	push	DWORD PTR ?szName@?4??glDrawBuffer@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDrawBuffer, eax
	test	eax, eax
	jne	SHORT $LN3@glDrawBuff
	push	OFFSET $SG318519
	push	OFFSET $SG318520
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glDrawBuff:
	pop	ebp
	jmp	eax
_glDrawBuffer@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_first$ = 12						; size = 4
_count$ = 16						; size = 4
_glDrawArrays@12 PROC

; 489  :                                   (       mode,      first,        count));

	npad	2
	push	ebp
	mov	ebp, esp

; 488  : OPENGL_STUB_(glDrawArrays,        (GLenum mode,GLint first,GLsizei count),

	mov	eax, DWORD PTR _imp_glDrawArrays
	test	eax, eax
	jne	SHORT $LN3@glDrawArra
	push	DWORD PTR ?szName@?4??glDrawArrays@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDrawArrays, eax
	test	eax, eax
	jne	SHORT $LN3@glDrawArra
	push	OFFSET $SG318505
	push	OFFSET $SG318506
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glDrawArra:
	pop	ebp
	jmp	eax
_glDrawArrays@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_array$ = 8						; size = 4
_glDisableClientState@4 PROC

; 486  :                                   (       array));

	npad	2
	push	ebp
	mov	ebp, esp

; 485  : OPENGL_STUB_(glDisableClientState,(GLenum array),

	mov	eax, DWORD PTR _imp_glDisableClientState
	test	eax, eax
	jne	SHORT $LN3@glDisableC
	push	DWORD PTR ?szName@?4??glDisableClientState@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDisableClientState, eax
	test	eax, eax
	jne	SHORT $LN3@glDisableC
	push	OFFSET $SG318487
	push	OFFSET $SG318488
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glDisableC:
	pop	ebp
	jmp	eax
_glDisableClientState@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_cap$ = 8						; size = 4
_glDisable@4 PROC

; 484  :                                   (       cap));

	npad	2
	push	ebp
	mov	ebp, esp

; 483  : OPENGL_STUB_(glDisable,           (GLenum cap),

	mov	eax, DWORD PTR _imp_glDisable
	test	eax, eax
	jne	SHORT $LN3@glDisable
	push	DWORD PTR ?szName@?4??glDisable@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDisable, eax
	test	eax, eax
	jne	SHORT $LN3@glDisable
	push	OFFSET $SG318473
	push	OFFSET $SG318474
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glDisable:
	pop	ebp
	jmp	eax
_glDisable@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_zNear$ = 8						; size = 8
_zFar$ = 16						; size = 8
_glDepthRange@16 PROC

; 482  :                                   (         zNear,         zFar));

	npad	2
	push	ebp
	mov	ebp, esp

; 481  : OPENGL_STUB_(glDepthRange,        (GLclampd zNear,GLclampd zFar),

	mov	eax, DWORD PTR _imp_glDepthRange
	test	eax, eax
	jne	SHORT $LN3@glDepthRan
	push	DWORD PTR ?szName@?4??glDepthRange@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDepthRange, eax
	test	eax, eax
	jne	SHORT $LN3@glDepthRan
	push	OFFSET $SG318459
	push	OFFSET $SG318460
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glDepthRan:
	movsd	xmm0, QWORD PTR _zFar$[ebp]
	sub	esp, 16					; 00000010H
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _zNear$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glDepthRange@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_flag$ = 8						; size = 1
_glDepthMask@4 PROC

; 480  :                                   (          flag));

	npad	2
	push	ebp
	mov	ebp, esp

; 479  : OPENGL_STUB_(glDepthMask,         (GLboolean flag),

	mov	eax, DWORD PTR _imp_glDepthMask
	test	eax, eax
	jne	SHORT $LN3@glDepthMas
	push	DWORD PTR ?szName@?4??glDepthMask@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDepthMask, eax
	test	eax, eax
	jne	SHORT $LN3@glDepthMas
	push	OFFSET $SG318443
	push	OFFSET $SG318444
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glDepthMas:
	pop	ebp
	jmp	eax
_glDepthMask@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_func$ = 8						; size = 4
_glDepthFunc@4 PROC

; 478  :                                   (       func));

	npad	2
	push	ebp
	mov	ebp, esp

; 477  : OPENGL_STUB_(glDepthFunc,         (GLenum func),

	mov	eax, DWORD PTR _imp_glDepthFunc
	test	eax, eax
	jne	SHORT $LN3@glDepthFun
	push	DWORD PTR ?szName@?4??glDepthFunc@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDepthFunc, eax
	test	eax, eax
	jne	SHORT $LN3@glDepthFun
	push	OFFSET $SG318429
	push	OFFSET $SG318430
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glDepthFun:
	pop	ebp
	jmp	eax
_glDepthFunc@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_n$ = 8							; size = 4
_textures$ = 12						; size = 4
_glDeleteTextures@8 PROC

; 475  :                                   (        n,              textures));

	npad	2
	push	ebp
	mov	ebp, esp

; 474  : OPENGL_STUB_(glDeleteTextures,    (GLsizei n,const GLuint *textures),

	mov	eax, DWORD PTR _imp_glDeleteTextures
	test	eax, eax
	jne	SHORT $LN3@glDeleteTe
	push	DWORD PTR ?szName@?4??glDeleteTextures@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDeleteTextures, eax
	test	eax, eax
	jne	SHORT $LN3@glDeleteTe
	push	OFFSET $SG318415
	push	OFFSET $SG318416
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glDeleteTe:
	pop	ebp
	jmp	eax
_glDeleteTextures@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_list$ = 8						; size = 4
_range$ = 12						; size = 4
_glDeleteLists@8 PROC

; 473  :                                   (       list,        range));

	npad	2
	push	ebp
	mov	ebp, esp

; 472  : OPENGL_STUB_(glDeleteLists,       (GLuint list,GLsizei range),

	mov	eax, DWORD PTR _imp_glDeleteLists
	test	eax, eax
	jne	SHORT $LN3@glDeleteLi
	push	DWORD PTR ?szName@?4??glDeleteLists@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glDeleteLists, eax
	test	eax, eax
	jne	SHORT $LN3@glDeleteLi
	push	OFFSET $SG318399
	push	OFFSET $SG318400
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glDeleteLi:
	pop	ebp
	jmp	eax
_glDeleteLists@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_glCullFace@4 PROC

; 466  :                                   (       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 465  : OPENGL_STUB_(glCullFace,          (GLenum mode),

	mov	eax, DWORD PTR _imp_glCullFace
	test	eax, eax
	jne	SHORT $LN3@glCullFace
	push	DWORD PTR ?szName@?4??glCullFace@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glCullFace, eax
	test	eax, eax
	jne	SHORT $LN3@glCullFace
	push	OFFSET $SG318367
	push	OFFSET $SG318368
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glCullFace:
	pop	ebp
	jmp	eax
_glCullFace@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_xoffset$ = 16						; size = 4
_yoffset$ = 20						; size = 4
_x$ = 24						; size = 4
_y$ = 28						; size = 4
_width$ = 32						; size = 4
_height$ = 36						; size = 4
_glCopyTexSubImage2D@32 PROC

; 463  :                                   (       target,      level,      xoffset,      yoffset,      x,      y,        width,        height));

	npad	2
	push	ebp
	mov	ebp, esp

; 462  : OPENGL_STUB_(glCopyTexSubImage2D, (GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height),

	mov	eax, DWORD PTR _imp_glCopyTexSubImage2D
	test	eax, eax
	jne	SHORT $LN3@glCopyTexS
	push	DWORD PTR ?szName@?4??glCopyTexSubImage2D@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glCopyTexSubImage2D, eax
	test	eax, eax
	jne	SHORT $LN3@glCopyTexS
	push	OFFSET $SG318353
	push	OFFSET $SG318354
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glCopyTexS:
	pop	ebp
	jmp	eax
_glCopyTexSubImage2D@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_xoffset$ = 16						; size = 4
_x$ = 20						; size = 4
_y$ = 24						; size = 4
_width$ = 28						; size = 4
_glCopyTexSubImage1D@24 PROC

; 461  :                                   (       target,      level,      xoffset,      x,      y,        width));

	npad	2
	push	ebp
	mov	ebp, esp

; 460  : OPENGL_STUB_(glCopyTexSubImage1D, (GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width),

	mov	eax, DWORD PTR _imp_glCopyTexSubImage1D
	test	eax, eax
	jne	SHORT $LN3@glCopyTexS
	push	DWORD PTR ?szName@?4??glCopyTexSubImage1D@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glCopyTexSubImage1D, eax
	test	eax, eax
	jne	SHORT $LN3@glCopyTexS
	push	OFFSET $SG318325
	push	OFFSET $SG318326
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glCopyTexS:
	pop	ebp
	jmp	eax
_glCopyTexSubImage1D@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_internalFormat$ = 16					; size = 4
_x$ = 20						; size = 4
_y$ = 24						; size = 4
_width$ = 28						; size = 4
_height$ = 32						; size = 4
_border$ = 36						; size = 4
_glCopyTexImage2D@32 PROC

; 458  :                               (       target,      level,       internalFormat,      x,      y,        width,        height,      border));

	npad	2
	push	ebp
	mov	ebp, esp

; 457  : OPENGL_STUB_(glCopyTexImage2D,(GLenum target,GLint level,GLenum internalFormat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border),

	mov	eax, DWORD PTR _imp_glCopyTexImage2D
	test	eax, eax
	jne	SHORT $LN3@glCopyTexI
	push	DWORD PTR ?szName@?4??glCopyTexImage2D@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glCopyTexImage2D, eax
	test	eax, eax
	jne	SHORT $LN3@glCopyTexI
	push	OFFSET $SG318301
	push	OFFSET $SG318302
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glCopyTexI:
	pop	ebp
	jmp	eax
_glCopyTexImage2D@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_level$ = 12						; size = 4
_internalFormat$ = 16					; size = 4
_x$ = 20						; size = 4
_y$ = 24						; size = 4
_width$ = 28						; size = 4
_border$ = 32						; size = 4
_glCopyTexImage1D@28 PROC

; 456  :                               (       target,      level,       internalFormat,      x,      y,        width,      border));

	npad	2
	push	ebp
	mov	ebp, esp

; 455  : OPENGL_STUB_(glCopyTexImage1D,(GLenum target,GLint level,GLenum internalFormat,GLint x,GLint y,GLsizei width,GLint border),

	mov	eax, DWORD PTR _imp_glCopyTexImage1D
	test	eax, eax
	jne	SHORT $LN3@glCopyTexI
	push	DWORD PTR ?szName@?4??glCopyTexImage1D@@9@28@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glCopyTexImage1D, eax
	test	eax, eax
	jne	SHORT $LN3@glCopyTexI
	push	OFFSET $SG318273
	push	OFFSET $SG318274
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	28					; 0000001cH
$LN3@glCopyTexI:
	pop	ebp
	jmp	eax
_glCopyTexImage1D@28 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
_type$ = 24						; size = 4
_glCopyPixels@20 PROC

; 454  :                              (      x,      y,        width,        height,       type));

	npad	2
	push	ebp
	mov	ebp, esp

; 453  : OPENGL_STUB_(glCopyPixels,   (GLint x,GLint y,GLsizei width,GLsizei height,GLenum type),

	mov	eax, DWORD PTR _imp_glCopyPixels
	test	eax, eax
	jne	SHORT $LN3@glCopyPixe
	push	DWORD PTR ?szName@?4??glCopyPixels@@9@20@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glCopyPixels, eax
	test	eax, eax
	jne	SHORT $LN3@glCopyPixe
	push	OFFSET $SG318247
	push	OFFSET $SG318248
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	20					; 00000014H
$LN3@glCopyPixe:
	pop	ebp
	jmp	eax
_glCopyPixels@20 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_size$ = 8						; size = 4
_type$ = 12						; size = 4
_stride$ = 16						; size = 4
_pointer$ = 20						; size = 4
_glColorPointer@16 PROC

; 452  :                              (      size,       type,        stride,              pointer));

	npad	2
	push	ebp
	mov	ebp, esp

; 451  : OPENGL_STUB_(glColorPointer, (GLint size,GLenum type,GLsizei stride,const GLvoid *pointer),

	mov	eax, DWORD PTR _imp_glColorPointer
	test	eax, eax
	jne	SHORT $LN3@glColorPoi
	push	DWORD PTR ?szName@?4??glColorPointer@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColorPointer, eax
	test	eax, eax
	jne	SHORT $LN3@glColorPoi
	push	OFFSET $SG318225
	push	OFFSET $SG318226
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColorPoi:
	pop	ebp
	jmp	eax
_glColorPointer@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_face$ = 8						; size = 4
_mode$ = 12						; size = 4
_glColorMaterial@8 PROC

; 450  :                              (       face,       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 449  : OPENGL_STUB_(glColorMaterial,(GLenum face,GLenum mode),

	mov	eax, DWORD PTR _imp_glColorMaterial
	test	eax, eax
	jne	SHORT $LN3@glColorMat
	push	DWORD PTR ?szName@?4??glColorMaterial@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColorMaterial, eax
	test	eax, eax
	jne	SHORT $LN3@glColorMat
	push	OFFSET $SG318205
	push	OFFSET $SG318206
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glColorMat:
	pop	ebp
	jmp	eax
_glColorMaterial@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 1
_green$ = 12						; size = 1
_blue$ = 16						; size = 1
_alpha$ = 20						; size = 1
_glColorMask@16 PROC

; 447  :                          (          red,          green,          blue,          alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 446  : OPENGL_STUB_(glColorMask,(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha),

	mov	eax, DWORD PTR _imp_glColorMask
	test	eax, eax
	jne	SHORT $LN3@glColorMas
	push	DWORD PTR ?szName@?4??glColorMask@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColorMask, eax
	test	eax, eax
	jne	SHORT $LN3@glColorMas
	push	OFFSET $SG318189
	push	OFFSET $SG318190
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColorMas:
	pop	ebp
	jmp	eax
_glColorMask@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor4usv@4 PROC

; 445  :                          (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 444  : OPENGL_STUB_(glColor4usv,(const GLushort *v),

	mov	eax, DWORD PTR _imp_glColor4usv
	test	eax, eax
	jne	SHORT $LN3@glColor4us
	push	DWORD PTR ?szName@?4??glColor4usv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4usv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4us
	push	OFFSET $SG318169
	push	OFFSET $SG318170
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor4us:
	pop	ebp
	jmp	eax
_glColor4usv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 2
_green$ = 12						; size = 2
_blue$ = 16						; size = 2
_alpha$ = 20						; size = 2
_glColor4us@16 PROC

; 443  :                          (         red,         green,         blue,         alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 442  : OPENGL_STUB_(glColor4us, (GLushort red,GLushort green,GLushort blue,GLushort alpha),

	mov	eax, DWORD PTR _imp_glColor4us
	test	eax, eax
	jne	SHORT $LN3@glColor4us
	push	DWORD PTR ?szName@?4??glColor4us@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4us, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4us
	push	OFFSET $SG318155
	push	OFFSET $SG318156
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColor4us:
	pop	ebp
	jmp	eax
_glColor4us@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor4uiv@4 PROC

; 441  :                          (              v));

	npad	2
	push	ebp
	mov	ebp, esp

; 440  : OPENGL_STUB_(glColor4uiv,(const GLuint *v),

	mov	eax, DWORD PTR _imp_glColor4uiv
	test	eax, eax
	jne	SHORT $LN3@glColor4ui
	push	DWORD PTR ?szName@?4??glColor4uiv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4uiv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4ui
	push	OFFSET $SG318135
	push	OFFSET $SG318136
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor4ui:
	pop	ebp
	jmp	eax
_glColor4uiv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_alpha$ = 20						; size = 4
_glColor4ui@16 PROC

; 439  :                          (       red,       green,       blue,       alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 438  : OPENGL_STUB_(glColor4ui, (GLuint red,GLuint green,GLuint blue,GLuint alpha),

	mov	eax, DWORD PTR _imp_glColor4ui
	test	eax, eax
	jne	SHORT $LN3@glColor4ui
	push	DWORD PTR ?szName@?4??glColor4ui@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4ui, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4ui
	push	OFFSET $SG318121
	push	OFFSET $SG318122
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColor4ui:
	pop	ebp
	jmp	eax
_glColor4ui@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor4ubv@4 PROC

; 437  :                          (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 436  : OPENGL_STUB_(glColor4ubv,(const GLubyte *v),

	mov	eax, DWORD PTR _imp_glColor4ubv
	test	eax, eax
	jne	SHORT $LN3@glColor4ub
	push	DWORD PTR ?szName@?4??glColor4ubv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4ubv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4ub
	push	OFFSET $SG318101
	push	OFFSET $SG318102
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor4ub:
	pop	ebp
	jmp	eax
_glColor4ubv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 1
_green$ = 12						; size = 1
_blue$ = 16						; size = 1
_alpha$ = 20						; size = 1
_glColor4ub@16 PROC

; 435  :                          (        red,        green,        blue,        alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 434  : OPENGL_STUB_(glColor4ub, (GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha),

	mov	eax, DWORD PTR _imp_glColor4ub
	test	eax, eax
	jne	SHORT $LN3@glColor4ub
	push	DWORD PTR ?szName@?4??glColor4ub@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4ub, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4ub
	push	OFFSET $SG318087
	push	OFFSET $SG318088
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColor4ub:
	pop	ebp
	jmp	eax
_glColor4ub@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor4sv@4 PROC

; 433  :                          (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 432  : OPENGL_STUB_(glColor4sv, (const GLshort *v),

	mov	eax, DWORD PTR _imp_glColor4sv
	test	eax, eax
	jne	SHORT $LN3@glColor4sv
	push	DWORD PTR ?szName@?4??glColor4sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4sv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4sv
	push	OFFSET $SG318067
	push	OFFSET $SG318068
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor4sv:
	pop	ebp
	jmp	eax
_glColor4sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 2
_green$ = 12						; size = 2
_blue$ = 16						; size = 2
_alpha$ = 20						; size = 2
_glColor4s@16 PROC

; 431  :                          (        red,        green,        blue,        alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 430  : OPENGL_STUB_(glColor4s,  (GLshort red,GLshort green,GLshort blue,GLshort alpha),

	mov	eax, DWORD PTR _imp_glColor4s
	test	eax, eax
	jne	SHORT $LN3@glColor4s
	push	DWORD PTR ?szName@?4??glColor4s@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4s, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4s
	push	OFFSET $SG318053
	push	OFFSET $SG318054
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColor4s:
	pop	ebp
	jmp	eax
_glColor4s@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor4iv@4 PROC

; 429  :                          (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 428  : OPENGL_STUB_(glColor4iv, (const GLint *v),

	mov	eax, DWORD PTR _imp_glColor4iv
	test	eax, eax
	jne	SHORT $LN3@glColor4iv
	push	DWORD PTR ?szName@?4??glColor4iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4iv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4iv
	push	OFFSET $SG318033
	push	OFFSET $SG318034
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor4iv:
	pop	ebp
	jmp	eax
_glColor4iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_alpha$ = 20						; size = 4
_glColor4i@16 PROC

; 427  :                          (      red,      green,      blue,      alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 426  : OPENGL_STUB_(glColor4i,  (GLint red,GLint green,GLint blue,GLint alpha),

	mov	eax, DWORD PTR _imp_glColor4i
	test	eax, eax
	jne	SHORT $LN3@glColor4i
	push	DWORD PTR ?szName@?4??glColor4i@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4i, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4i
	push	OFFSET $SG318019
	push	OFFSET $SG318020
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColor4i:
	pop	ebp
	jmp	eax
_glColor4i@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor4fv@4 PROC

; 425  :                          (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 424  : OPENGL_STUB_(glColor4fv, (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glColor4fv
	test	eax, eax
	jne	SHORT $LN3@glColor4fv
	push	DWORD PTR ?szName@?4??glColor4fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4fv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4fv
	push	OFFSET $SG317999
	push	OFFSET $SG318000
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor4fv:
	pop	ebp
	jmp	eax
_glColor4fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_alpha$ = 20						; size = 4
_glColor4f@16 PROC

; 423  :                          (        red,        green,        blue,        alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 422  : OPENGL_STUB_(glColor4f,  (GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha),

	mov	eax, DWORD PTR _imp_glColor4f
	test	eax, eax
	jne	SHORT $LN3@glColor4f
	push	DWORD PTR ?szName@?4??glColor4f@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4f, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4f
	push	OFFSET $SG317985
	push	OFFSET $SG317986
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColor4f:
	movss	xmm0, DWORD PTR _alpha$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _blue$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _green$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _red$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glColor4f@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor4dv@4 PROC

; 421  :                          (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 420  : OPENGL_STUB_(glColor4dv, (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glColor4dv
	test	eax, eax
	jne	SHORT $LN3@glColor4dv
	push	DWORD PTR ?szName@?4??glColor4dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4dv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4dv
	push	OFFSET $SG317965
	push	OFFSET $SG317966
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor4dv:
	pop	ebp
	jmp	eax
_glColor4dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 8
_green$ = 16						; size = 8
_blue$ = 24						; size = 8
_alpha$ = 32						; size = 8
_glColor4d@32 PROC

; 419  :                          (         red,         green,         blue,         alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 418  : OPENGL_STUB_(glColor4d,  (GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha),

	mov	eax, DWORD PTR _imp_glColor4d
	test	eax, eax
	jne	SHORT $LN3@glColor4d
	push	DWORD PTR ?szName@?4??glColor4d@@9@32@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4d, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4d
	push	OFFSET $SG317951
	push	OFFSET $SG317952
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	32					; 00000020H
$LN3@glColor4d:
	movsd	xmm0, QWORD PTR _alpha$[ebp]
	sub	esp, 32					; 00000020H
	movsd	QWORD PTR [esp+24], xmm0
	movsd	xmm0, QWORD PTR _blue$[ebp]
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _green$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _red$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	32					; 00000020H
_glColor4d@32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor4bv@4 PROC

; 417  :                          (              v));

	npad	2
	push	ebp
	mov	ebp, esp

; 416  : OPENGL_STUB_(glColor4bv, (const GLbyte *v),

	mov	eax, DWORD PTR _imp_glColor4bv
	test	eax, eax
	jne	SHORT $LN3@glColor4bv
	push	DWORD PTR ?szName@?4??glColor4bv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4bv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4bv
	push	OFFSET $SG317931
	push	OFFSET $SG317932
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor4bv:
	pop	ebp
	jmp	eax
_glColor4bv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 1
_green$ = 12						; size = 1
_blue$ = 16						; size = 1
_alpha$ = 20						; size = 1
_glColor4b@16 PROC

; 415  :                          (       red,       green,       blue,       alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 414  : OPENGL_STUB_(glColor4b,  (GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha),

	mov	eax, DWORD PTR _imp_glColor4b
	test	eax, eax
	jne	SHORT $LN3@glColor4b
	push	DWORD PTR ?szName@?4??glColor4b@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor4b, eax
	test	eax, eax
	jne	SHORT $LN3@glColor4b
	push	OFFSET $SG317917
	push	OFFSET $SG317918
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glColor4b:
	pop	ebp
	jmp	eax
_glColor4b@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor3usv@4 PROC

; 413  :                          (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 412  : OPENGL_STUB_(glColor3usv,(const GLushort *v),

	mov	eax, DWORD PTR _imp_glColor3usv
	test	eax, eax
	jne	SHORT $LN3@glColor3us
	push	DWORD PTR ?szName@?4??glColor3usv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3usv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3us
	push	OFFSET $SG317897
	push	OFFSET $SG317898
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor3us:
	pop	ebp
	jmp	eax
_glColor3usv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 2
_green$ = 12						; size = 2
_blue$ = 16						; size = 2
_glColor3us@12 PROC

; 411  :                          (         red,         green,         blue));

	npad	2
	push	ebp
	mov	ebp, esp

; 410  : OPENGL_STUB_(glColor3us, (GLushort red,GLushort green,GLushort blue),

	mov	eax, DWORD PTR _imp_glColor3us
	test	eax, eax
	jne	SHORT $LN3@glColor3us
	push	DWORD PTR ?szName@?4??glColor3us@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3us, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3us
	push	OFFSET $SG317883
	push	OFFSET $SG317884
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glColor3us:
	pop	ebp
	jmp	eax
_glColor3us@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor3uiv@4 PROC

; 409  :                          (              v));

	npad	2
	push	ebp
	mov	ebp, esp

; 408  : OPENGL_STUB_(glColor3uiv,(const GLuint *v),

	mov	eax, DWORD PTR _imp_glColor3uiv
	test	eax, eax
	jne	SHORT $LN3@glColor3ui
	push	DWORD PTR ?szName@?4??glColor3uiv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3uiv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3ui
	push	OFFSET $SG317865
	push	OFFSET $SG317866
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor3ui:
	pop	ebp
	jmp	eax
_glColor3uiv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_glColor3ui@12 PROC

; 407  :                          (       red,       green,       blue));

	npad	2
	push	ebp
	mov	ebp, esp

; 406  : OPENGL_STUB_(glColor3ui, (GLuint red,GLuint green,GLuint blue),

	mov	eax, DWORD PTR _imp_glColor3ui
	test	eax, eax
	jne	SHORT $LN3@glColor3ui
	push	DWORD PTR ?szName@?4??glColor3ui@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3ui, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3ui
	push	OFFSET $SG317851
	push	OFFSET $SG317852
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glColor3ui:
	pop	ebp
	jmp	eax
_glColor3ui@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor3ubv@4 PROC

; 405  :                          (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 404  : OPENGL_STUB_(glColor3ubv,(const GLubyte *v),

	mov	eax, DWORD PTR _imp_glColor3ubv
	test	eax, eax
	jne	SHORT $LN3@glColor3ub
	push	DWORD PTR ?szName@?4??glColor3ubv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3ubv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3ub
	push	OFFSET $SG317833
	push	OFFSET $SG317834
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor3ub:
	pop	ebp
	jmp	eax
_glColor3ubv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 1
_green$ = 12						; size = 1
_blue$ = 16						; size = 1
_glColor3ub@12 PROC

; 403  :                          (        red,        green,        blue));

	npad	2
	push	ebp
	mov	ebp, esp

; 402  : OPENGL_STUB_(glColor3ub, (GLubyte red,GLubyte green,GLubyte blue),

	mov	eax, DWORD PTR _imp_glColor3ub
	test	eax, eax
	jne	SHORT $LN3@glColor3ub
	push	DWORD PTR ?szName@?4??glColor3ub@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3ub, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3ub
	push	OFFSET $SG317819
	push	OFFSET $SG317820
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glColor3ub:
	pop	ebp
	jmp	eax
_glColor3ub@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor3sv@4 PROC

; 401  :                          (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 400  : OPENGL_STUB_(glColor3sv, (const GLshort *v),

	mov	eax, DWORD PTR _imp_glColor3sv
	test	eax, eax
	jne	SHORT $LN3@glColor3sv
	push	DWORD PTR ?szName@?4??glColor3sv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3sv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3sv
	push	OFFSET $SG317801
	push	OFFSET $SG317802
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor3sv:
	pop	ebp
	jmp	eax
_glColor3sv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 2
_green$ = 12						; size = 2
_blue$ = 16						; size = 2
_glColor3s@12 PROC

; 399  :                          (        red,        green,        blue));

	npad	2
	push	ebp
	mov	ebp, esp

; 398  : OPENGL_STUB_(glColor3s,  (GLshort red,GLshort green,GLshort blue),

	mov	eax, DWORD PTR _imp_glColor3s
	test	eax, eax
	jne	SHORT $LN3@glColor3s
	push	DWORD PTR ?szName@?4??glColor3s@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3s, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3s
	push	OFFSET $SG317787
	push	OFFSET $SG317788
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glColor3s:
	pop	ebp
	jmp	eax
_glColor3s@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor3iv@4 PROC

; 397  :                          (             v));

	npad	2
	push	ebp
	mov	ebp, esp

; 396  : OPENGL_STUB_(glColor3iv, (const GLint *v),

	mov	eax, DWORD PTR _imp_glColor3iv
	test	eax, eax
	jne	SHORT $LN3@glColor3iv
	push	DWORD PTR ?szName@?4??glColor3iv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3iv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3iv
	push	OFFSET $SG317769
	push	OFFSET $SG317770
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor3iv:
	pop	ebp
	jmp	eax
_glColor3iv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_glColor3i@12 PROC

; 395  :                          (      red,      green,      blue));

	npad	2
	push	ebp
	mov	ebp, esp

; 394  : OPENGL_STUB_(glColor3i,  (GLint red,GLint green,GLint blue),

	mov	eax, DWORD PTR _imp_glColor3i
	test	eax, eax
	jne	SHORT $LN3@glColor3i
	push	DWORD PTR ?szName@?4??glColor3i@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3i, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3i
	push	OFFSET $SG317755
	push	OFFSET $SG317756
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glColor3i:
	pop	ebp
	jmp	eax
_glColor3i@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor3fv@4 PROC

; 393  :                          (               v));

	npad	2
	push	ebp
	mov	ebp, esp

; 392  : OPENGL_STUB_(glColor3fv, (const GLfloat *v),

	mov	eax, DWORD PTR _imp_glColor3fv
	test	eax, eax
	jne	SHORT $LN3@glColor3fv
	push	DWORD PTR ?szName@?4??glColor3fv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3fv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3fv
	push	OFFSET $SG317737
	push	OFFSET $SG317738
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor3fv:
	pop	ebp
	jmp	eax
_glColor3fv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_glColor3f@12 PROC

; 391  :                          (        red,        green,        blue));

	npad	2
	push	ebp
	mov	ebp, esp

; 390  : OPENGL_STUB_(glColor3f,  (GLfloat red,GLfloat green,GLfloat blue),

	mov	eax, DWORD PTR _imp_glColor3f
	test	eax, eax
	jne	SHORT $LN3@glColor3f
	push	DWORD PTR ?szName@?4??glColor3f@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3f, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3f
	push	OFFSET $SG317723
	push	OFFSET $SG317724
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glColor3f:
	movss	xmm0, DWORD PTR _blue$[ebp]
	sub	esp, 12					; 0000000cH
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _green$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _red$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	12					; 0000000cH
_glColor3f@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor3dv@4 PROC

; 389  :                          (                v));

	npad	2
	push	ebp
	mov	ebp, esp

; 388  : OPENGL_STUB_(glColor3dv, (const GLdouble *v),

	mov	eax, DWORD PTR _imp_glColor3dv
	test	eax, eax
	jne	SHORT $LN3@glColor3dv
	push	DWORD PTR ?szName@?4??glColor3dv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3dv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3dv
	push	OFFSET $SG317705
	push	OFFSET $SG317706
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor3dv:
	pop	ebp
	jmp	eax
_glColor3dv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 8
_green$ = 16						; size = 8
_blue$ = 24						; size = 8
_glColor3d@24 PROC

; 387  :                          (         red,         green,         blue));

	npad	2
	push	ebp
	mov	ebp, esp

; 386  : OPENGL_STUB_(glColor3d,  (GLdouble red,GLdouble green,GLdouble blue),

	mov	eax, DWORD PTR _imp_glColor3d
	test	eax, eax
	jne	SHORT $LN3@glColor3d
	push	DWORD PTR ?szName@?4??glColor3d@@9@24@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3d, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3d
	push	OFFSET $SG317691
	push	OFFSET $SG317692
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	24					; 00000018H
$LN3@glColor3d:
	movsd	xmm0, QWORD PTR _blue$[ebp]
	sub	esp, 24					; 00000018H
	movsd	QWORD PTR [esp+16], xmm0
	movsd	xmm0, QWORD PTR _green$[ebp]
	movsd	QWORD PTR [esp+8], xmm0
	movsd	xmm0, QWORD PTR _red$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	24					; 00000018H
_glColor3d@24 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_v$ = 8							; size = 4
_glColor3bv@4 PROC

; 385  :                          (              v));

	npad	2
	push	ebp
	mov	ebp, esp

; 384  : OPENGL_STUB_(glColor3bv, (const GLbyte *v),

	mov	eax, DWORD PTR _imp_glColor3bv
	test	eax, eax
	jne	SHORT $LN3@glColor3bv
	push	DWORD PTR ?szName@?4??glColor3bv@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3bv, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3bv
	push	OFFSET $SG317673
	push	OFFSET $SG317674
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glColor3bv:
	pop	ebp
	jmp	eax
_glColor3bv@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 1
_green$ = 12						; size = 1
_blue$ = 16						; size = 1
_glColor3b@12 PROC

; 383  :                          (       red,       green,       blue));

	npad	2
	push	ebp
	mov	ebp, esp

; 382  : OPENGL_STUB_(glColor3b,  (GLbyte red,GLbyte green,GLbyte blue),

	mov	eax, DWORD PTR _imp_glColor3b
	test	eax, eax
	jne	SHORT $LN3@glColor3b
	push	DWORD PTR ?szName@?4??glColor3b@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glColor3b, eax
	test	eax, eax
	jne	SHORT $LN3@glColor3b
	push	OFFSET $SG317659
	push	OFFSET $SG317660
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glColor3b:
	pop	ebp
	jmp	eax
_glColor3b@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_plane$ = 8						; size = 4
_equation$ = 12						; size = 4
_glClipPlane@8 PROC

; 380  :                             (       plane,                equation));

	npad	2
	push	ebp
	mov	ebp, esp

; 379  : OPENGL_STUB_(glClipPlane,   (GLenum plane,const GLdouble *equation),

	mov	eax, DWORD PTR _imp_glClipPlane
	test	eax, eax
	jne	SHORT $LN3@glClipPlan
	push	DWORD PTR ?szName@?4??glClipPlane@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glClipPlane, eax
	test	eax, eax
	jne	SHORT $LN3@glClipPlan
	push	OFFSET $SG317641
	push	OFFSET $SG317642
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glClipPlan:
	pop	ebp
	jmp	eax
_glClipPlane@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_glClearStencil@4 PROC

; 378  :                             (      s));

	npad	2
	push	ebp
	mov	ebp, esp

; 377  : OPENGL_STUB_(glClearStencil,(GLint s),

	mov	eax, DWORD PTR _imp_glClearStencil
	test	eax, eax
	jne	SHORT $LN3@glClearSte
	push	DWORD PTR ?szName@?4??glClearStencil@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glClearStencil, eax
	test	eax, eax
	jne	SHORT $LN3@glClearSte
	push	OFFSET $SG317625
	push	OFFSET $SG317626
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glClearSte:
	pop	ebp
	jmp	eax
_glClearStencil@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_glClearIndex@4 PROC

; 376  :                             (        c));

	npad	2
	push	ebp
	mov	ebp, esp

; 375  : OPENGL_STUB_(glClearIndex,  (GLfloat c),

	mov	eax, DWORD PTR _imp_glClearIndex
	test	eax, eax
	jne	SHORT $LN3@glClearInd
	push	DWORD PTR ?szName@?4??glClearIndex@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glClearIndex, eax
	test	eax, eax
	jne	SHORT $LN3@glClearInd
	push	OFFSET $SG317611
	push	OFFSET $SG317612
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glClearInd:
	movss	xmm0, DWORD PTR _c$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	4
_glClearIndex@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_depth$ = 8						; size = 8
_glClearDepth@8 PROC

; 374  :                             (         depth));

	npad	2
	push	ebp
	mov	ebp, esp

; 373  : OPENGL_STUB_(glClearDepth,  (GLclampd depth),

	mov	eax, DWORD PTR _imp_glClearDepth
	test	eax, eax
	jne	SHORT $LN3@glClearDep
	push	DWORD PTR ?szName@?4??glClearDepth@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glClearDepth, eax
	test	eax, eax
	jne	SHORT $LN3@glClearDep
	push	OFFSET $SG317597
	push	OFFSET $SG317598
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glClearDep:
	movsd	xmm0, QWORD PTR _depth$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	8
_glClearDepth@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_alpha$ = 20						; size = 4
_glClearColor@16 PROC

; 372  :                             (         red,         green,         blue,         alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 371  : OPENGL_STUB_(glClearColor,  (GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha),

	mov	eax, DWORD PTR _imp_glClearColor
	test	eax, eax
	jne	SHORT $LN3@glClearCol
	push	DWORD PTR ?szName@?4??glClearColor@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glClearColor, eax
	test	eax, eax
	jne	SHORT $LN3@glClearCol
	push	OFFSET $SG317583
	push	OFFSET $SG317584
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glClearCol:
	movss	xmm0, DWORD PTR _alpha$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _blue$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _green$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _red$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glClearColor@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_alpha$ = 20						; size = 4
_glClearAccum@16 PROC

; 370  :                             (        red,        green,        blue,        alpha));

	npad	2
	push	ebp
	mov	ebp, esp

; 369  : OPENGL_STUB_(glClearAccum,  (GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha),

	mov	eax, DWORD PTR _imp_glClearAccum
	test	eax, eax
	jne	SHORT $LN3@glClearAcc
	push	DWORD PTR ?szName@?4??glClearAccum@@9@16@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glClearAccum, eax
	test	eax, eax
	jne	SHORT $LN3@glClearAcc
	push	OFFSET $SG317563
	push	OFFSET $SG317564
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	16					; 00000010H
$LN3@glClearAcc:
	movss	xmm0, DWORD PTR _alpha$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _blue$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _green$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _red$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	eax
	pop	ebp
	ret	16					; 00000010H
_glClearAccum@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_glClear@4 PROC

; 368  :                             (           mask));

	npad	2
	push	ebp
	mov	ebp, esp

; 367  : OPENGL_STUB_(glClear,       (GLbitfield mask),

	mov	eax, DWORD PTR _imp_glClear
	test	eax, eax
	jne	SHORT $LN3@glClear
	push	DWORD PTR ?szName@?4??glClear@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glClear, eax
	test	eax, eax
	jne	SHORT $LN3@glClear
	push	OFFSET $SG317543
	push	OFFSET $SG317544
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glClear:
	pop	ebp
	jmp	eax
_glClear@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_n$ = 8							; size = 4
_type$ = 12						; size = 4
_lists$ = 16						; size = 4
_glCallLists@12 PROC

; 366  :                             (        n,       type,              lists));

	npad	2
	push	ebp
	mov	ebp, esp

; 365  : OPENGL_STUB_(glCallLists,   (GLsizei n,GLenum type,const GLvoid *lists),

	mov	eax, DWORD PTR _imp_glCallLists
	test	eax, eax
	jne	SHORT $LN3@glCallList
	push	DWORD PTR ?szName@?4??glCallLists@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glCallLists, eax
	test	eax, eax
	jne	SHORT $LN3@glCallList
	push	OFFSET $SG317529
	push	OFFSET $SG317530
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	12					; 0000000cH
$LN3@glCallList:
	pop	ebp
	jmp	eax
_glCallLists@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_list$ = 8						; size = 4
_glCallList@4 PROC

; 364  :                             (       list));

	npad	2
	push	ebp
	mov	ebp, esp

; 363  : OPENGL_STUB_(glCallList,    (GLuint list),

	mov	eax, DWORD PTR _imp_glCallList
	test	eax, eax
	jne	SHORT $LN3@glCallList
	push	DWORD PTR ?szName@?4??glCallList@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glCallList, eax
	test	eax, eax
	jne	SHORT $LN3@glCallList
	push	OFFSET $SG317511
	push	OFFSET $SG317512
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glCallList:
	pop	ebp
	jmp	eax
_glCallList@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_sfactor$ = 8						; size = 4
_dfactor$ = 12						; size = 4
_glBlendFunc@8 PROC

; 362  :                             (       sfactor,       dfactor));

	npad	2
	push	ebp
	mov	ebp, esp

; 361  : OPENGL_STUB_(glBlendFunc,   (GLenum sfactor,GLenum dfactor),

	mov	eax, DWORD PTR _imp_glBlendFunc
	test	eax, eax
	jne	SHORT $LN3@glBlendFun
	push	DWORD PTR ?szName@?4??glBlendFunc@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glBlendFunc, eax
	test	eax, eax
	jne	SHORT $LN3@glBlendFun
	push	OFFSET $SG317497
	push	OFFSET $SG317498
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glBlendFun:
	pop	ebp
	jmp	eax
_glBlendFunc@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
_xorig$ = 16						; size = 4
_yorig$ = 20						; size = 4
_xmove$ = 24						; size = 4
_ymove$ = 28						; size = 4
_bitmap$ = 32						; size = 4
_glBitmap@28 PROC

; 360  :                             (        width,        height,        xorig,        yorig,        xmove,        ymove,               bitmap));

	npad	2
	push	ebp
	mov	ebp, esp

; 359  : OPENGL_STUB_(glBitmap,      (GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte *bitmap),

	mov	eax, DWORD PTR _imp_glBitmap
	test	eax, eax
	jne	SHORT $LN3@glBitmap
	push	DWORD PTR ?szName@?4??glBitmap@@9@28@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glBitmap, eax
	test	eax, eax
	jne	SHORT $LN3@glBitmap
	push	OFFSET $SG317481
	push	OFFSET $SG317482
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	28					; 0000001cH
$LN3@glBitmap:
	push	DWORD PTR _bitmap$[ebp]
	movss	xmm0, DWORD PTR _ymove$[ebp]
	sub	esp, 16					; 00000010H
	movss	DWORD PTR [esp+12], xmm0
	movss	xmm0, DWORD PTR _xmove$[ebp]
	movss	DWORD PTR [esp+8], xmm0
	movss	xmm0, DWORD PTR _yorig$[ebp]
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _xorig$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _height$[ebp]
	push	DWORD PTR _width$[ebp]
	call	eax
	pop	ebp
	ret	28					; 0000001cH
_glBitmap@28 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_target$ = 8						; size = 4
_texture$ = 12						; size = 4
_glBindTexture@8 PROC

; 358  :                             (       target,       texture));

	npad	2
	push	ebp
	mov	ebp, esp

; 357  : OPENGL_STUB_(glBindTexture, (GLenum target,GLuint texture),

	mov	eax, DWORD PTR _imp_glBindTexture
	test	eax, eax
	jne	SHORT $LN3@glBindText
	push	DWORD PTR ?szName@?4??glBindTexture@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glBindTexture, eax
	test	eax, eax
	jne	SHORT $LN3@glBindText
	push	OFFSET $SG317455
	push	OFFSET $SG317456
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glBindText:
	pop	ebp
	jmp	eax
_glBindTexture@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_glBegin@4 PROC

; 356  :                             (       mode));

	npad	2
	push	ebp
	mov	ebp, esp

; 355  : OPENGL_STUB_(glBegin,       (GLenum mode),

	mov	eax, DWORD PTR _imp_glBegin
	test	eax, eax
	jne	SHORT $LN3@glBegin
	push	DWORD PTR ?szName@?4??glBegin@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glBegin, eax
	test	eax, eax
	jne	SHORT $LN3@glBegin
	push	OFFSET $SG317439
	push	OFFSET $SG317440
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glBegin:
	pop	ebp
	jmp	eax
_glBegin@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_i$ = 8							; size = 4
_glArrayElement@4 PROC

; 354  :                             (      i));

	npad	2
	push	ebp
	mov	ebp, esp

; 353  : OPENGL_STUB_(glArrayElement,(GLint i),

	mov	eax, DWORD PTR _imp_glArrayElement
	test	eax, eax
	jne	SHORT $LN3@glArrayEle
	push	DWORD PTR ?szName@?4??glArrayElement@@9@4@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glArrayElement, eax
	test	eax, eax
	jne	SHORT $LN3@glArrayEle
	push	OFFSET $SG317425
	push	OFFSET $SG317426
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	4
$LN3@glArrayEle:
	pop	ebp
	jmp	eax
_glArrayElement@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_n$ = 8							; size = 4
_textures$ = 12						; size = 4
_residences$ = 16					; size = 4
_glAreTexturesResident@12 PROC

; 351  :                                             (        n,              textures,           residences));

	npad	2
	push	ebp
	mov	ebp, esp

; 350  : OPENGL_STUB(GLboolean,glAreTexturesResident,(GLsizei n,const GLuint *textures,GLboolean *residences),

	mov	eax, DWORD PTR _imp_glAreTexturesResident
	test	eax, eax
	jne	SHORT $LN3@glAreTextu
	push	DWORD PTR ?szName@?4??glAreTexturesResident@@9@12@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glAreTexturesResident, eax
	test	eax, eax
	jne	SHORT $LN3@glAreTextu
	push	OFFSET $SG317411
	push	OFFSET $SG317412
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	xor	al, al
	pop	ebp
	ret	12					; 0000000cH
$LN3@glAreTextu:
	pop	ebp
	jmp	eax
_glAreTexturesResident@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_func$ = 8						; size = 4
_ref$ = 12						; size = 4
_glAlphaFunc@8 PROC

; 348  :                          (       func,         ref));

	npad	2
	push	ebp
	mov	ebp, esp

; 347  : OPENGL_STUB_(glAlphaFunc,(GLenum func,GLclampf ref),

	mov	eax, DWORD PTR _imp_glAlphaFunc
	test	eax, eax
	jne	SHORT $LN3@glAlphaFun
	push	DWORD PTR ?szName@?4??glAlphaFunc@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glAlphaFunc, eax
	test	eax, eax
	jne	SHORT $LN3@glAlphaFun
	push	OFFSET $SG317393
	push	OFFSET $SG317394
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glAlphaFun:
	movss	xmm0, DWORD PTR _ref$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _func$[ebp]
	call	eax
	pop	ebp
	ret	8
_glAlphaFunc@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_op$ = 8						; size = 4
_value$ = 12						; size = 4
_glAccum@8 PROC

; 346  :                          (       op,        value));

	npad	2
	push	ebp
	mov	ebp, esp

; 345  : OPENGL_STUB_(glAccum,    (GLenum op,GLfloat value),

	mov	eax, DWORD PTR _imp_glAccum
	test	eax, eax
	jne	SHORT $LN3@glAccum
	push	DWORD PTR ?szName@?4??glAccum@@9@8@4PBDB
	push	DWORD PTR ?backend_dll@@3PAUHINSTANCE__@@A ; backend_dll
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _imp_glAccum, eax
	test	eax, eax
	jne	SHORT $LN3@glAccum
	push	OFFSET $SG317377
	push	OFFSET $SG317378
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	8
$LN3@glAccum:
	movss	xmm0, DWORD PTR _value$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _op$[ebp]
	call	eax
	pop	ebp
	ret	8
_glAccum@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\size.h
;	COMDAT ??0?$Size@M@CEGUI@@QAE@MM@Z
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
??0?$Size@M@CEGUI@@QAE@MM@Z PROC			; CEGUI::Size<float>::Size<float>, COMDAT
; _this$ = ecx

; 78   :     {}

	npad	2
	push	ebp
	mov	ebp, esp

; 76   :         d_width(width),

	movss	xmm0, DWORD PTR _width$[ebp]

; 78   :     {}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR _height$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??0?$Size@M@CEGUI@@QAE@MM@Z ENDP			; CEGUI::Size<float>::Size<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\depends\include\cegui\memoryallocatedobject.h
;	COMDAT ??0?$AllocatedObject@V?$Size@M@CEGUI@@@CEGUI@@QAE@XZ
_TEXT	SEGMENT
??0?$AllocatedObject@V?$Size@M@CEGUI@@@CEGUI@@QAE@XZ PROC ; CEGUI::AllocatedObject<CEGUI::Size<float> >::AllocatedObject<CEGUI::Size<float> >, COMDAT
; _this$ = ecx

; 113  : 	{}

	mov	eax, ecx
	ret	0
??0?$AllocatedObject@V?$Size@M@CEGUI@@@CEGUI@@QAE@XZ ENDP ; CEGUI::AllocatedObject<CEGUI::Size<float> >::AllocatedObject<CEGUI::Size<float> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_user$ = 8						; size = 4
?DXGI_Thread@@YGIPAX@Z PROC				; DXGI_Thread

; 95   :   UNREFERENCED_PARAMETER (user);
; 96   : 
; 97   :   if (SUCCEEDED (CoInitializeEx ( nullptr, COINIT_MULTITHREADED )))

	push	0
	push	0
	call	DWORD PTR __imp__CoInitializeEx@8
	test	eax, eax
	js	SHORT $LN4@DXGI_Threa

; 98   :   {
; 99   :     SK::DXGI::StartBudgetThread_NoAdapter ();

	call	?StartBudgetThread_NoAdapter@DXGI@SK@@YAJXZ ; SK::DXGI::StartBudgetThread_NoAdapter

; 100  : 
; 101  :     CoUninitialize ();

	call	DWORD PTR __imp__CoUninitialize@0
$LN4@DXGI_Threa:

; 102  :   }
; 103  : 
; 104  :   return 0;

	xor	eax, eax

; 105  : }

	ret	4
?DXGI_Thread@@YGIPAX@Z ENDP				; DXGI_Thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winbase.h
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 24
?SK_HookGL@@YGXXZ PROC					; SK_HookGL

; 1912 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\program files (x86)\windows kits\8.1\include\um\winbase.h

; 9003 :     return (unsigned long) _InterlockedCompareExchange((volatile long*) Destination, (long) Exchange, (long) Comperand);

	mov	edx, OFFSET ?hooked@?1??SK_HookGL@@YGXXZ@4KC
	xor	eax, eax
	push	esi
	mov	esi, 1
	mov	ecx, esi
	lock	 cmpxchg DWORD PTR [edx], ecx
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1915 :   if (InterlockedCompareExchange (&hooked, TRUE, FALSE))

	test	eax, eax
	jne	$LN1@SK_HookGL

; 1916 :     return;
; 1917 : 
; 1918 :   if (! config.apis.OpenGL.hook)

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+790, al
	je	$LN1@SK_HookGL

; 1919 :     return;
; 1920 : 
; 1921 :   dll_log.Log (L"[ OpenGL32 ] Additional OpenGL Initialization");

	push	OFFSET $SG324526
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 1922 :   dll_log.Log (L"[ OpenGL32 ] ================================");

	push	OFFSET $SG324527
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 16					; 00000010H

; 1924 :   if (! StrStrIW ( SK_GetModuleName (SK_GetDLL ()).c_str (), 

	call	?SK_GetDLL@@YGPAUHINSTANCE__@@XZ	; SK_GetDLL
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?SK_GetModuleName@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAUHINSTANCE__@@@Z ; SK_GetModuleName
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN23@SK_HookGL
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN23@SK_HookGL:
	push	ebx
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1924 :   if (! StrStrIW ( SK_GetModuleName (SK_GetDLL ()).c_str (), 

	push	OFFSET $SG324530
	push	eax
	call	DWORD PTR __imp__StrStrIW@8
	test	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T1[ebp+20]
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1924 :   if (! StrStrIW ( SK_GetModuleName (SK_GetDLL ()).c_str (), 

	sete	bl
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN33@SK_HookGL
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T1[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN33@SK_HookGL:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1924 :   if (! StrStrIW ( SK_GetModuleName (SK_GetDLL ()).c_str (), 

	test	bl, bl
	pop	ebx
	je	$LN4@SK_HookGL

; 1925 :                    L"OPENGL32.dll" ) )
; 1926 :   {
; 1927 :     dll_log.Log (L"[ OpenGL32 ] Hooking OpenGL");

	push	OFFSET $SG324531
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8

; 1928 : 
; 1929 :     if (true)
; 1930 :     {
; 1931 :       wchar_t* wszBackendDLL = L"OpenGL32.dll";
; 1932 : 
; 1933 : #if 1
; 1934 :       SK_CreateDLLHook (         wszBackendDLL,

	push	0
	push	OFFSET ?wgl_swap_buffers@@3P6GHPAUHDC__@@@ZA ; wgl_swap_buffers
	push	OFFSET _wglSwapBuffers@4
	push	OFFSET $SG324534
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook

; 1935 :                                 "wglSwapBuffers",
; 1936 :                                  wglSwapBuffers,
; 1937 :         static_cast_p2p <void> (&wgl_swap_buffers) );
; 1938 : #else
; 1939 :       SK_CreateDLLHook (       L"gdi32.dll",
; 1940 :                                 "SwapBuffers",
; 1941 :                                  SwapBuffers,
; 1942 :         static_cast_p2p <void> (&gdi_swap_buffers) );
; 1943 : #endif
; 1944 : 
; 1945 : // Load user-defined DLLs (Plug-In)
; 1946 : #ifdef _WIN64
; 1947 :     SK_LoadPlugIns64 ();
; 1948 : #else
; 1949 :     SK_LoadPlugIns32 ();

	call	?SK_LoadPlugIns32@@YAXXZ		; SK_LoadPlugIns32

; 1950 : #endif
; 1951 : 
; 1952 :       ++GL_HOOKS;

	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1953 : 
; 1954 :       SK_GL_HOOK(glAccum);

	push	0
	push	OFFSET _imp_glAccum
	push	OFFSET _glAccum@8
	push	OFFSET $SG324535
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1955 :       SK_GL_HOOK(glAlphaFunc);

	push	0
	push	OFFSET _imp_glAlphaFunc
	push	OFFSET _glAlphaFunc@8
	push	OFFSET $SG324536
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1956 :       SK_GL_HOOK(glAreTexturesResident);

	push	0
	push	OFFSET _imp_glAreTexturesResident
	push	OFFSET _glAreTexturesResident@12
	push	OFFSET $SG324537
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1957 :       SK_GL_HOOK(glArrayElement);

	push	0
	push	OFFSET _imp_glArrayElement
	push	OFFSET _glArrayElement@4
	push	OFFSET $SG324538
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1958 :       SK_GL_HOOK(glBegin);

	push	0
	push	OFFSET _imp_glBegin
	push	OFFSET _glBegin@4
	push	OFFSET $SG324539
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1959 :       SK_GL_HOOK(glBindTexture);

	push	0
	push	OFFSET _imp_glBindTexture
	push	OFFSET _glBindTexture@8
	push	OFFSET $SG324540
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1960 :       SK_GL_HOOK(glBitmap);

	push	0
	push	OFFSET _imp_glBitmap
	push	OFFSET _glBitmap@28
	push	OFFSET $SG324541
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1961 :       SK_GL_HOOK(glBlendFunc);

	push	0
	push	OFFSET _imp_glBlendFunc
	push	OFFSET _glBlendFunc@8
	push	OFFSET $SG324542
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1962 :       SK_GL_HOOK(glCallList);

	push	0
	push	OFFSET _imp_glCallList
	push	OFFSET _glCallList@4
	push	OFFSET $SG324543
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1963 :       SK_GL_HOOK(glCallLists);

	push	0
	push	OFFSET _imp_glCallLists
	push	OFFSET _glCallLists@12
	push	OFFSET $SG324544
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1964 :       SK_GL_HOOK(glClear);

	push	0
	push	OFFSET _imp_glClear
	push	OFFSET _glClear@4
	push	OFFSET $SG324545
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1965 :       SK_GL_HOOK(glClearAccum);

	push	0
	push	OFFSET _imp_glClearAccum
	push	OFFSET _glClearAccum@16
	push	OFFSET $SG324546
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1966 :       SK_GL_HOOK(glClearColor);

	push	0
	push	OFFSET _imp_glClearColor
	push	OFFSET _glClearColor@16
	push	OFFSET $SG324547
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1967 :       SK_GL_HOOK(glClearDepth);

	push	0
	push	OFFSET _imp_glClearDepth
	push	OFFSET _glClearDepth@8
	push	OFFSET $SG324548
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1968 :       SK_GL_HOOK(glClearIndex);

	push	0
	push	OFFSET _imp_glClearIndex
	push	OFFSET _glClearIndex@4
	push	OFFSET $SG324549
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1969 :       SK_GL_HOOK(glClearStencil);

	push	0
	push	OFFSET _imp_glClearStencil
	push	OFFSET _glClearStencil@4
	push	OFFSET $SG324550
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1970 :       SK_GL_HOOK(glClipPlane);

	push	0
	push	OFFSET _imp_glClipPlane
	push	OFFSET _glClipPlane@8
	push	OFFSET $SG324551
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1971 :       SK_GL_HOOK(glColor3b);

	push	0
	push	OFFSET _imp_glColor3b
	push	OFFSET _glColor3b@12
	push	OFFSET $SG324552
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1972 :       SK_GL_HOOK(glColor3bv);

	push	0
	push	OFFSET _imp_glColor3bv
	push	OFFSET _glColor3bv@4
	push	OFFSET $SG324553
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1973 :       SK_GL_HOOK(glColor3d);

	push	0
	push	OFFSET _imp_glColor3d
	push	OFFSET _glColor3d@24
	push	OFFSET $SG324554
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1974 :       SK_GL_HOOK(glColor3dv);

	push	0
	push	OFFSET _imp_glColor3dv
	push	OFFSET _glColor3dv@4
	push	OFFSET $SG324555
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1975 :       SK_GL_HOOK(glColor3f);

	push	0
	push	OFFSET _imp_glColor3f
	push	OFFSET _glColor3f@12
	push	OFFSET $SG324556
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1976 :       SK_GL_HOOK(glColor3fv);

	push	0
	push	OFFSET _imp_glColor3fv
	push	OFFSET _glColor3fv@4
	push	OFFSET $SG324557
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1977 :       SK_GL_HOOK(glColor3i);

	push	0
	push	OFFSET _imp_glColor3i
	push	OFFSET _glColor3i@12
	push	OFFSET $SG324558
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1978 :       SK_GL_HOOK(glColor3iv);

	push	0
	push	OFFSET _imp_glColor3iv
	push	OFFSET _glColor3iv@4
	push	OFFSET $SG324559
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1979 :       SK_GL_HOOK(glColor3s);

	push	0
	push	OFFSET _imp_glColor3s
	push	OFFSET _glColor3s@12
	push	OFFSET $SG324560
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1980 :       SK_GL_HOOK(glColor3sv);

	push	0
	push	OFFSET _imp_glColor3sv
	push	OFFSET _glColor3sv@4
	push	OFFSET $SG324561
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1981 :       SK_GL_HOOK(glColor3ub);

	push	0
	push	OFFSET _imp_glColor3ub
	push	OFFSET _glColor3ub@12
	push	OFFSET $SG324562
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1982 :       SK_GL_HOOK(glColor3ubv);

	push	0
	push	OFFSET _imp_glColor3ubv
	push	OFFSET _glColor3ubv@4
	push	OFFSET $SG324563
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1983 :       SK_GL_HOOK(glColor3ui);

	push	0
	push	OFFSET _imp_glColor3ui
	push	OFFSET _glColor3ui@12
	push	OFFSET $SG324564
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1984 :       SK_GL_HOOK(glColor3uiv);

	push	0
	push	OFFSET _imp_glColor3uiv
	push	OFFSET _glColor3uiv@4
	push	OFFSET $SG324565
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1985 :       SK_GL_HOOK(glColor3us);

	push	0
	push	OFFSET _imp_glColor3us
	push	OFFSET _glColor3us@12
	push	OFFSET $SG324566
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1986 :       SK_GL_HOOK(glColor3usv);

	push	0
	push	OFFSET _imp_glColor3usv
	push	OFFSET _glColor3usv@4
	push	OFFSET $SG324567
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1987 :       SK_GL_HOOK(glColor4b);

	push	0
	push	OFFSET _imp_glColor4b
	push	OFFSET _glColor4b@16
	push	OFFSET $SG324568
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1988 :       SK_GL_HOOK(glColor4bv);

	push	0
	push	OFFSET _imp_glColor4bv
	push	OFFSET _glColor4bv@4
	push	OFFSET $SG324569
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1989 :       SK_GL_HOOK(glColor4d);

	push	0
	push	OFFSET _imp_glColor4d
	push	OFFSET _glColor4d@32
	push	OFFSET $SG324570
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1990 :       SK_GL_HOOK(glColor4dv);

	push	0
	push	OFFSET _imp_glColor4dv
	push	OFFSET _glColor4dv@4
	push	OFFSET $SG324571
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1991 :       SK_GL_HOOK(glColor4f);

	push	0
	push	OFFSET _imp_glColor4f
	push	OFFSET _glColor4f@16
	push	OFFSET $SG324572
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1992 :       SK_GL_HOOK(glColor4fv);

	push	0
	push	OFFSET _imp_glColor4fv
	push	OFFSET _glColor4fv@4
	push	OFFSET $SG324573
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1993 :       SK_GL_HOOK(glColor4i);

	push	0
	push	OFFSET _imp_glColor4i
	push	OFFSET _glColor4i@16
	push	OFFSET $SG324574
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1994 :       SK_GL_HOOK(glColor4iv);

	push	0
	push	OFFSET _imp_glColor4iv
	push	OFFSET _glColor4iv@4
	push	OFFSET $SG324575
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1995 :       SK_GL_HOOK(glColor4s);

	push	0
	push	OFFSET _imp_glColor4s
	push	OFFSET _glColor4s@16
	push	OFFSET $SG324576
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1996 :       SK_GL_HOOK(glColor4sv);

	push	0
	push	OFFSET _imp_glColor4sv
	push	OFFSET _glColor4sv@4
	push	OFFSET $SG324577
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1997 :       SK_GL_HOOK(glColor4ub);

	push	0
	push	OFFSET _imp_glColor4ub
	push	OFFSET _glColor4ub@16
	push	OFFSET $SG324578
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1998 :       SK_GL_HOOK(glColor4ubv);

	push	0
	push	OFFSET _imp_glColor4ubv
	push	OFFSET _glColor4ubv@4
	push	OFFSET $SG324579
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 1999 :       SK_GL_HOOK(glColor4ui);

	push	0
	push	OFFSET _imp_glColor4ui
	push	OFFSET _glColor4ui@16
	push	OFFSET $SG324580
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2000 :       SK_GL_HOOK(glColor4uiv);

	push	0
	push	OFFSET _imp_glColor4uiv
	push	OFFSET _glColor4uiv@4
	push	OFFSET $SG324581
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2001 :       SK_GL_HOOK(glColor4us);

	push	0
	push	OFFSET _imp_glColor4us
	push	OFFSET _glColor4us@16
	push	OFFSET $SG324582
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2002 :       SK_GL_HOOK(glColor4usv);

	push	0
	push	OFFSET _imp_glColor4usv
	push	OFFSET _glColor4usv@4
	push	OFFSET $SG324583
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2003 :       SK_GL_HOOK(glColorMask);

	push	0
	push	OFFSET _imp_glColorMask
	push	OFFSET _glColorMask@16
	push	OFFSET $SG324584
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2004 :       SK_GL_HOOK(glColorMaterial);

	push	0
	push	OFFSET _imp_glColorMaterial
	push	OFFSET _glColorMaterial@8
	push	OFFSET $SG324585
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2005 :       SK_GL_HOOK(glColorPointer);

	push	0
	push	OFFSET _imp_glColorPointer
	push	OFFSET _glColorPointer@16
	push	OFFSET $SG324586
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2006 :       SK_GL_HOOK(glCopyPixels);

	push	0
	push	OFFSET _imp_glCopyPixels
	push	OFFSET _glCopyPixels@20
	push	OFFSET $SG324587
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2007 :       SK_GL_HOOK(glCopyTexImage1D);

	push	0
	push	OFFSET _imp_glCopyTexImage1D
	push	OFFSET _glCopyTexImage1D@28
	push	OFFSET $SG324588
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2008 :       SK_GL_HOOK(glCopyTexImage2D);

	push	0
	push	OFFSET _imp_glCopyTexImage2D
	push	OFFSET _glCopyTexImage2D@32
	push	OFFSET $SG324589
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2009 :       SK_GL_HOOK(glCopyTexSubImage1D);

	push	0
	push	OFFSET _imp_glCopyTexSubImage1D
	push	OFFSET _glCopyTexSubImage1D@24
	push	OFFSET $SG324590
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2010 :       SK_GL_HOOK(glCopyTexSubImage2D);

	push	0
	push	OFFSET _imp_glCopyTexSubImage2D
	push	OFFSET _glCopyTexSubImage2D@32
	push	OFFSET $SG324591
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2011 :       SK_GL_HOOK(glCullFace);

	push	0
	push	OFFSET _imp_glCullFace
	push	OFFSET _glCullFace@4
	push	OFFSET $SG324592
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2012 :       //SK_GL_HOOK(glDebugEntry);
; 2013 :       SK_GL_HOOK(glDeleteLists);

	push	0
	push	OFFSET _imp_glDeleteLists
	push	OFFSET _glDeleteLists@8
	push	OFFSET $SG324593
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2014 :       SK_GL_HOOK(glDeleteTextures);

	push	0
	push	OFFSET _imp_glDeleteTextures
	push	OFFSET _glDeleteTextures@8
	push	OFFSET $SG324594
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2015 :       SK_GL_HOOK(glDepthFunc);

	push	0
	push	OFFSET _imp_glDepthFunc
	push	OFFSET _glDepthFunc@4
	push	OFFSET $SG324595
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2016 :       SK_GL_HOOK(glDepthMask);

	push	0
	push	OFFSET _imp_glDepthMask
	push	OFFSET _glDepthMask@4
	push	OFFSET $SG324596
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2017 :       SK_GL_HOOK(glDepthRange);

	push	0
	push	OFFSET _imp_glDepthRange
	push	OFFSET _glDepthRange@16
	push	OFFSET $SG324597
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2018 :       SK_GL_HOOK(glDisable);

	push	0
	push	OFFSET _imp_glDisable
	push	OFFSET _glDisable@4
	push	OFFSET $SG324598
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2019 :       SK_GL_HOOK(glDisableClientState);

	push	0
	push	OFFSET _imp_glDisableClientState
	push	OFFSET _glDisableClientState@4
	push	OFFSET $SG324599
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2020 :       SK_GL_HOOK(glDrawArrays);

	push	0
	push	OFFSET _imp_glDrawArrays
	push	OFFSET _glDrawArrays@12
	push	OFFSET $SG324600
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2021 :       SK_GL_HOOK(glDrawBuffer);

	push	0
	push	OFFSET _imp_glDrawBuffer
	push	OFFSET _glDrawBuffer@4
	push	OFFSET $SG324601
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2022 :       SK_GL_HOOK(glDrawElements);

	push	0
	push	OFFSET _imp_glDrawElements
	push	OFFSET _glDrawElements@16
	push	OFFSET $SG324602
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2023 :       SK_GL_HOOK(glDrawPixels);

	push	0
	push	OFFSET _imp_glDrawPixels
	push	OFFSET _glDrawPixels@20
	push	OFFSET $SG324603
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2024 :       SK_GL_HOOK(glEdgeFlag);

	push	0
	push	OFFSET _imp_glEdgeFlag
	push	OFFSET _glEdgeFlag@4
	push	OFFSET $SG324604
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2025 :       SK_GL_HOOK(glEdgeFlagPointer);

	push	0
	push	OFFSET _imp_glEdgeFlagPointer
	push	OFFSET _glEdgeFlagPointer@8
	push	OFFSET $SG324605
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2026 :       SK_GL_HOOK(glEdgeFlagv);

	push	0
	push	OFFSET _imp_glEdgeFlagv
	push	OFFSET _glEdgeFlagv@4
	push	OFFSET $SG324606
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2027 :       SK_GL_HOOK(glEnable);

	push	0
	push	OFFSET _imp_glEnable
	push	OFFSET _glEnable@4
	push	OFFSET $SG324607
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2028 :       SK_GL_HOOK(glEnableClientState);

	push	0
	push	OFFSET _imp_glEnableClientState
	push	OFFSET _glEnableClientState@4
	push	OFFSET $SG324608
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2029 :       SK_GL_HOOK(glEnd);

	push	0
	push	OFFSET _imp_glEnd
	push	OFFSET _glEnd@0
	push	OFFSET $SG324609
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2030 :       SK_GL_HOOK(glEndList);

	push	0
	push	OFFSET _imp_glEndList
	push	OFFSET _glEndList@0
	push	OFFSET $SG324610
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2031 :       SK_GL_HOOK(glEvalCoord1d);

	push	0
	push	OFFSET _imp_glEvalCoord1d
	push	OFFSET _glEvalCoord1d@8
	push	OFFSET $SG324611
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2032 :       SK_GL_HOOK(glEvalCoord1dv);

	push	0
	push	OFFSET _imp_glEvalCoord1dv
	push	OFFSET _glEvalCoord1dv@4
	push	OFFSET $SG324612
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2033 :       SK_GL_HOOK(glEvalCoord1f);

	push	0
	push	OFFSET _imp_glEvalCoord1f
	push	OFFSET _glEvalCoord1f@4
	push	OFFSET $SG324613
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2034 :       SK_GL_HOOK(glEvalCoord1fv);

	push	0
	push	OFFSET _imp_glEvalCoord1fv
	push	OFFSET _glEvalCoord1fv@4
	push	OFFSET $SG324614
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2035 :       SK_GL_HOOK(glEvalCoord2d);

	push	0
	push	OFFSET _imp_glEvalCoord2d
	push	OFFSET _glEvalCoord2d@16
	push	OFFSET $SG324615
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2036 :       SK_GL_HOOK(glEvalCoord2dv);

	push	0
	push	OFFSET _imp_glEvalCoord2dv
	push	OFFSET _glEvalCoord2dv@4
	push	OFFSET $SG324616
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2037 :       SK_GL_HOOK(glEvalCoord2f);

	push	0
	push	OFFSET _imp_glEvalCoord2f
	push	OFFSET _glEvalCoord2f@8
	push	OFFSET $SG324617
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2038 :       SK_GL_HOOK(glEvalCoord2fv);

	push	0
	push	OFFSET _imp_glEvalCoord2fv
	push	OFFSET _glEvalCoord2fv@4
	push	OFFSET $SG324618
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2039 :       SK_GL_HOOK(glEvalMesh1);

	push	0
	push	OFFSET _imp_glEvalMesh1
	push	OFFSET _glEvalMesh1@12
	push	OFFSET $SG324619
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2040 :       SK_GL_HOOK(glEvalMesh2);

	push	0
	push	OFFSET _imp_glEvalMesh2
	push	OFFSET _glEvalMesh2@20
	push	OFFSET $SG324620
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2041 :       SK_GL_HOOK(glEvalPoint1);

	push	0
	push	OFFSET _imp_glEvalPoint1
	push	OFFSET _glEvalPoint1@4
	push	OFFSET $SG324621
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2042 :       SK_GL_HOOK(glEvalPoint2);

	push	0
	push	OFFSET _imp_glEvalPoint2
	push	OFFSET _glEvalPoint2@8
	push	OFFSET $SG324622
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2043 :       SK_GL_HOOK(glFeedbackBuffer);

	push	0
	push	OFFSET _imp_glFeedbackBuffer
	push	OFFSET _glFeedbackBuffer@12
	push	OFFSET $SG324623
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2044 :       SK_GL_HOOK(glFinish);

	push	0
	push	OFFSET _imp_glFinish
	push	OFFSET _glFinish@0
	push	OFFSET $SG324624
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2045 :       SK_GL_HOOK(glFlush);

	push	0
	push	OFFSET _imp_glFlush
	push	OFFSET _glFlush@0
	push	OFFSET $SG324625
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2046 :       SK_GL_HOOK(glFogf);

	push	0
	push	OFFSET _imp_glFogf
	push	OFFSET _glFogf@8
	push	OFFSET $SG324626
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2047 :       SK_GL_HOOK(glFogfv);

	push	0
	push	OFFSET _imp_glFogfv
	push	OFFSET _glFogfv@8
	push	OFFSET $SG324627
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2048 :       SK_GL_HOOK(glFogi);

	push	0
	push	OFFSET _imp_glFogi
	push	OFFSET _glFogi@8
	push	OFFSET $SG324628
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2049 :       SK_GL_HOOK(glFogiv);

	push	0
	push	OFFSET _imp_glFogiv
	push	OFFSET _glFogiv@8
	push	OFFSET $SG324629
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2050 :       SK_GL_HOOK(glFrontFace);

	push	0
	push	OFFSET _imp_glFrontFace
	push	OFFSET _glFrontFace@4
	push	OFFSET $SG324630
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2051 :       SK_GL_HOOK(glFrustum);

	push	0
	push	OFFSET _imp_glFrustum
	push	OFFSET _glFrustum@48
	push	OFFSET $SG324631
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2052 :       SK_GL_HOOK(glGenLists);

	push	0
	push	OFFSET _imp_glGenLists
	push	OFFSET _glGenLists@4
	push	OFFSET $SG324632
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2053 :       SK_GL_HOOK(glGenTextures);

	push	0
	push	OFFSET _imp_glGenTextures
	push	OFFSET _glGenTextures@8
	push	OFFSET $SG324633
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2054 :       SK_GL_HOOK(glGetBooleanv);

	push	0
	push	OFFSET _imp_glGetBooleanv
	push	OFFSET _glGetBooleanv@8
	push	OFFSET $SG324634
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2055 :       SK_GL_HOOK(glGetClipPlane);

	push	0
	push	OFFSET _imp_glGetClipPlane
	push	OFFSET _glGetClipPlane@8
	push	OFFSET $SG324635
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2056 :       SK_GL_HOOK(glGetDoublev);

	push	0
	push	OFFSET _imp_glGetDoublev
	push	OFFSET _glGetDoublev@8
	push	OFFSET $SG324636
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2057 :       SK_GL_HOOK(glGetError);

	push	0
	push	OFFSET _imp_glGetError
	push	OFFSET _glGetError@0
	push	OFFSET $SG324637
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2058 :       SK_GL_HOOK(glGetFloatv);

	push	0
	push	OFFSET _imp_glGetFloatv
	push	OFFSET _glGetFloatv@8
	push	OFFSET $SG324638
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2059 :       SK_GL_HOOK(glGetIntegerv);

	push	0
	push	OFFSET _imp_glGetIntegerv
	push	OFFSET _glGetIntegerv@8
	push	OFFSET $SG324639
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2060 :       SK_GL_HOOK(glGetLightfv);

	push	0
	push	OFFSET _imp_glGetLightfv
	push	OFFSET _glGetLightfv@12
	push	OFFSET $SG324640
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2061 :       SK_GL_HOOK(glGetLightiv);

	push	0
	push	OFFSET _imp_glGetLightiv
	push	OFFSET _glGetLightiv@12
	push	OFFSET $SG324641
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2062 :       SK_GL_HOOK(glGetMapdv);

	push	0
	push	OFFSET _imp_glGetMapdv
	push	OFFSET _glGetMapdv@12
	push	OFFSET $SG324642
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2063 :       SK_GL_HOOK(glGetMapfv);

	push	0
	push	OFFSET _imp_glGetMapfv
	push	OFFSET _glGetMapfv@12
	push	OFFSET $SG324643
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2064 :       SK_GL_HOOK(glGetMapiv);

	push	0
	push	OFFSET _imp_glGetMapiv
	push	OFFSET _glGetMapiv@12
	push	OFFSET $SG324644
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2065 :       SK_GL_HOOK(glGetMaterialfv);

	push	0
	push	OFFSET _imp_glGetMaterialfv
	push	OFFSET _glGetMaterialfv@12
	push	OFFSET $SG324645
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2066 :       SK_GL_HOOK(glGetMaterialiv);

	push	0
	push	OFFSET _imp_glGetMaterialiv
	push	OFFSET _glGetMaterialiv@12
	push	OFFSET $SG324646
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2067 :       SK_GL_HOOK(glGetPixelMapfv);

	push	0
	push	OFFSET _imp_glGetPixelMapfv
	push	OFFSET _glGetPixelMapfv@8
	push	OFFSET $SG324647
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2068 :       SK_GL_HOOK(glGetPixelMapuiv);

	push	0
	push	OFFSET _imp_glGetPixelMapuiv
	push	OFFSET _glGetPixelMapuiv@8
	push	OFFSET $SG324648
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2069 :       SK_GL_HOOK(glGetPixelMapusv);

	push	0
	push	OFFSET _imp_glGetPixelMapusv
	push	OFFSET _glGetPixelMapusv@8
	push	OFFSET $SG324649
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2070 :       SK_GL_HOOK(glGetPointerv);

	push	0
	push	OFFSET _imp_glGetPointerv
	push	OFFSET _glGetPointerv@8
	push	OFFSET $SG324650
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2071 :       SK_GL_HOOK(glGetPolygonStipple);

	push	0
	push	OFFSET _imp_glGetPolygonStipple
	push	OFFSET _glGetPolygonStipple@4
	push	OFFSET $SG324651
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2072 :       SK_GL_HOOK(glGetString);

	push	0
	push	OFFSET _imp_glGetString
	push	OFFSET _glGetString@4
	push	OFFSET $SG324652
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2073 :       SK_GL_HOOK(glGetTexEnvfv);

	push	0
	push	OFFSET _imp_glGetTexEnvfv
	push	OFFSET _glGetTexEnvfv@12
	push	OFFSET $SG324653
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2074 :       SK_GL_HOOK(glGetTexEnviv);

	push	0
	push	OFFSET _imp_glGetTexEnviv
	push	OFFSET _glGetTexEnviv@12
	push	OFFSET $SG324654
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2075 :       SK_GL_HOOK(glGetTexGendv);

	push	0
	push	OFFSET _imp_glGetTexGendv
	push	OFFSET _glGetTexGendv@12
	push	OFFSET $SG324655
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2076 :       SK_GL_HOOK(glGetTexGenfv);

	push	0
	push	OFFSET _imp_glGetTexGenfv
	push	OFFSET _glGetTexGenfv@12
	push	OFFSET $SG324656
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2077 :       SK_GL_HOOK(glGetTexGeniv);

	push	0
	push	OFFSET _imp_glGetTexGeniv
	push	OFFSET _glGetTexGeniv@12
	push	OFFSET $SG324657
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2078 :       SK_GL_HOOK(glGetTexImage);

	push	0
	push	OFFSET _imp_glGetTexImage
	push	OFFSET _glGetTexImage@20
	push	OFFSET $SG324658
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2079 :       SK_GL_HOOK(glGetTexLevelParameterfv);

	push	0
	push	OFFSET _imp_glGetTexLevelParameterfv
	push	OFFSET _glGetTexLevelParameterfv@16
	push	OFFSET $SG324659
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2080 :       SK_GL_HOOK(glGetTexLevelParameteriv);

	push	0
	push	OFFSET _imp_glGetTexLevelParameteriv
	push	OFFSET _glGetTexLevelParameteriv@16
	push	OFFSET $SG324660
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2081 :       SK_GL_HOOK(glGetTexParameterfv);

	push	0
	push	OFFSET _imp_glGetTexParameterfv
	push	OFFSET _glGetTexParameterfv@12
	push	OFFSET $SG324661
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2082 :       SK_GL_HOOK(glGetTexParameteriv);

	push	0
	push	OFFSET _imp_glGetTexParameteriv
	push	OFFSET _glGetTexParameteriv@12
	push	OFFSET $SG324662
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2083 :       SK_GL_HOOK(glHint);

	push	0
	push	OFFSET _imp_glHint
	push	OFFSET _glHint@8
	push	OFFSET $SG324663
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2084 :       SK_GL_HOOK(glIndexMask);

	push	0
	push	OFFSET _imp_glIndexMask
	push	OFFSET _glIndexMask@4
	push	OFFSET $SG324664
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2085 :       SK_GL_HOOK(glIndexPointer);

	push	0
	push	OFFSET _imp_glIndexPointer
	push	OFFSET _glIndexPointer@12
	push	OFFSET $SG324665
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2086 :       SK_GL_HOOK(glIndexd);

	push	0
	push	OFFSET _imp_glIndexd
	push	OFFSET _glIndexd@8
	push	OFFSET $SG324666
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2087 :       SK_GL_HOOK(glIndexdv);

	push	0
	push	OFFSET _imp_glIndexdv
	push	OFFSET _glIndexdv@4
	push	OFFSET $SG324667
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2088 :       SK_GL_HOOK(glIndexf);

	push	0
	push	OFFSET _imp_glIndexf
	push	OFFSET _glIndexf@4
	push	OFFSET $SG324668
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2089 :       SK_GL_HOOK(glIndexfv);

	push	0
	push	OFFSET _imp_glIndexfv
	push	OFFSET _glIndexfv@4
	push	OFFSET $SG324669
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2090 :       SK_GL_HOOK(glIndexi);

	push	0
	push	OFFSET _imp_glIndexi
	push	OFFSET _glIndexi@4
	push	OFFSET $SG324670
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2091 :       SK_GL_HOOK(glIndexiv);

	push	0
	push	OFFSET _imp_glIndexiv
	push	OFFSET _glIndexiv@4
	push	OFFSET $SG324671
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2092 :       SK_GL_HOOK(glIndexs);

	push	0
	push	OFFSET _imp_glIndexs
	push	OFFSET _glIndexs@4
	push	OFFSET $SG324672
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2093 :       SK_GL_HOOK(glIndexsv);

	push	0
	push	OFFSET _imp_glIndexsv
	push	OFFSET _glIndexsv@4
	push	OFFSET $SG324673
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2094 :       SK_GL_HOOK(glIndexub);

	push	0
	push	OFFSET _imp_glIndexub
	push	OFFSET _glIndexub@4
	push	OFFSET $SG324674
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2095 :       SK_GL_HOOK(glIndexubv);

	push	0
	push	OFFSET _imp_glIndexubv
	push	OFFSET _glIndexubv@4
	push	OFFSET $SG324675
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2096 :       SK_GL_HOOK(glInitNames);

	push	0
	push	OFFSET _imp_glInitNames
	push	OFFSET _glInitNames@0
	push	OFFSET $SG324676
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2097 :       SK_GL_HOOK(glInterleavedArrays);

	push	0
	push	OFFSET _imp_glInterleavedArrays
	push	OFFSET _glInterleavedArrays@12
	push	OFFSET $SG324677
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2098 :       SK_GL_HOOK(glIsEnabled);

	push	0
	push	OFFSET _imp_glIsEnabled
	push	OFFSET _glIsEnabled@4
	push	OFFSET $SG324678
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2099 :       SK_GL_HOOK(glIsList);

	push	0
	push	OFFSET _imp_glIsList
	push	OFFSET _glIsList@4
	push	OFFSET $SG324679
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2100 :       SK_GL_HOOK(glIsTexture);

	push	0
	push	OFFSET _imp_glIsTexture
	push	OFFSET _glIsTexture@4
	push	OFFSET $SG324680
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2101 :       SK_GL_HOOK(glLightModelf);

	push	0
	push	OFFSET _imp_glLightModelf
	push	OFFSET _glLightModelf@8
	push	OFFSET $SG324681
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2102 :       SK_GL_HOOK(glLightModelfv);

	push	0
	push	OFFSET _imp_glLightModelfv
	push	OFFSET _glLightModelfv@8
	push	OFFSET $SG324682
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2103 :       SK_GL_HOOK(glLightModeli);

	push	0
	push	OFFSET _imp_glLightModeli
	push	OFFSET _glLightModeli@8
	push	OFFSET $SG324683
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2104 :       SK_GL_HOOK(glLightModeliv);

	push	0
	push	OFFSET _imp_glLightModeliv
	push	OFFSET _glLightModeliv@8
	push	OFFSET $SG324684
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2105 :       SK_GL_HOOK(glLightf);

	push	0
	push	OFFSET _imp_glLightf
	push	OFFSET _glLightf@12
	push	OFFSET $SG324685
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2106 :       SK_GL_HOOK(glLightfv);

	push	0
	push	OFFSET _imp_glLightfv
	push	OFFSET _glLightfv@12
	push	OFFSET $SG324686
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2107 :       SK_GL_HOOK(glLighti);

	push	0
	push	OFFSET _imp_glLighti
	push	OFFSET _glLighti@12
	push	OFFSET $SG324687
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2108 :       SK_GL_HOOK(glLightiv);

	push	0
	push	OFFSET _imp_glLightiv
	push	OFFSET _glLightiv@12
	push	OFFSET $SG324688
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2109 :       SK_GL_HOOK(glLineStipple);

	push	0
	push	OFFSET _imp_glLineStipple
	push	OFFSET _glLineStipple@8
	push	OFFSET $SG324689
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2110 :       SK_GL_HOOK(glLineWidth);

	push	0
	push	OFFSET _imp_glLineWidth
	push	OFFSET _glLineWidth@4
	push	OFFSET $SG324690
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2111 :       SK_GL_HOOK(glListBase);

	push	0
	push	OFFSET _imp_glListBase
	push	OFFSET _glListBase@4
	push	OFFSET $SG324691
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2112 :       SK_GL_HOOK(glLoadIdentity);

	push	0
	push	OFFSET _imp_glLoadIdentity
	push	OFFSET _glLoadIdentity@0
	push	OFFSET $SG324692
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2113 :       SK_GL_HOOK(glLoadMatrixd);

	push	0
	push	OFFSET _imp_glLoadMatrixd
	push	OFFSET _glLoadMatrixd@4
	push	OFFSET $SG324693
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2114 :       SK_GL_HOOK(glLoadMatrixf);

	push	0
	push	OFFSET _imp_glLoadMatrixf
	push	OFFSET _glLoadMatrixf@4
	push	OFFSET $SG324694
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2115 :       SK_GL_HOOK(glLoadName);

	push	0
	push	OFFSET _imp_glLoadName
	push	OFFSET _glLoadName@4
	push	OFFSET $SG324695
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2116 :       SK_GL_HOOK(glLogicOp);

	push	0
	push	OFFSET _imp_glLogicOp
	push	OFFSET _glLogicOp@4
	push	OFFSET $SG324696
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2117 :       SK_GL_HOOK(glMap1d);

	push	0
	push	OFFSET _imp_glMap1d
	push	OFFSET _glMap1d@32
	push	OFFSET $SG324697
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2118 :       SK_GL_HOOK(glMap1f);

	push	0
	push	OFFSET _imp_glMap1f
	push	OFFSET _glMap1f@24
	push	OFFSET $SG324698
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2119 :       SK_GL_HOOK(glMap2d);

	push	0
	push	OFFSET _imp_glMap2d
	push	OFFSET _glMap2d@56
	push	OFFSET $SG324699
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2120 :       SK_GL_HOOK(glMap2f);

	push	0
	push	OFFSET _imp_glMap2f
	push	OFFSET _glMap2f@40
	push	OFFSET $SG324700
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2121 :       SK_GL_HOOK(glMapGrid1d);

	push	0
	push	OFFSET _imp_glMapGrid1d
	push	OFFSET _glMapGrid1d@20
	push	OFFSET $SG324701
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2122 :       SK_GL_HOOK(glMapGrid1f);

	push	0
	push	OFFSET _imp_glMapGrid1f
	push	OFFSET _glMapGrid1f@12
	push	OFFSET $SG324702
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2123 :       SK_GL_HOOK(glMapGrid2d);

	push	0
	push	OFFSET _imp_glMapGrid2d
	push	OFFSET _glMapGrid2d@40
	push	OFFSET $SG324703
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2124 :       SK_GL_HOOK(glMapGrid2f);

	push	0
	push	OFFSET _imp_glMapGrid2f
	push	OFFSET _glMapGrid2f@24
	push	OFFSET $SG324704
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2125 :       SK_GL_HOOK(glMaterialf);

	push	0
	push	OFFSET _imp_glMaterialf
	push	OFFSET _glMaterialf@12
	push	OFFSET $SG324705
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2126 :       SK_GL_HOOK(glMaterialfv);

	push	0
	push	OFFSET _imp_glMaterialfv
	push	OFFSET _glMaterialfv@12
	push	OFFSET $SG324706
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2127 :       SK_GL_HOOK(glMateriali);

	push	0
	push	OFFSET _imp_glMateriali
	push	OFFSET _glMateriali@12
	push	OFFSET $SG324707
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2128 :       SK_GL_HOOK(glMaterialiv);

	push	0
	push	OFFSET _imp_glMaterialiv
	push	OFFSET _glMaterialiv@12
	push	OFFSET $SG324708
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2129 :       SK_GL_HOOK(glMatrixMode);

	push	0
	push	OFFSET _imp_glMatrixMode
	push	OFFSET _glMatrixMode@4
	push	OFFSET $SG324709
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2130 :       SK_GL_HOOK(glMultMatrixd);

	push	0
	push	OFFSET _imp_glMultMatrixd
	push	OFFSET _glMultMatrixd@4
	push	OFFSET $SG324710
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2131 :       SK_GL_HOOK(glMultMatrixf);

	push	0
	push	OFFSET _imp_glMultMatrixf
	push	OFFSET _glMultMatrixf@4
	push	OFFSET $SG324711
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2132 :       SK_GL_HOOK(glNewList);

	push	0
	push	OFFSET _imp_glNewList
	push	OFFSET _glNewList@8
	push	OFFSET $SG324712
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2133 :       SK_GL_HOOK(glNormal3b);

	push	0
	push	OFFSET _imp_glNormal3b
	push	OFFSET _glNormal3b@12
	push	OFFSET $SG324713
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2134 :       SK_GL_HOOK(glNormal3bv);

	push	0
	push	OFFSET _imp_glNormal3bv
	push	OFFSET _glNormal3bv@4
	push	OFFSET $SG324714
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2135 :       SK_GL_HOOK(glNormal3d);

	push	0
	push	OFFSET _imp_glNormal3d
	push	OFFSET _glNormal3d@24
	push	OFFSET $SG324715
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2136 :       SK_GL_HOOK(glNormal3dv);

	push	0
	push	OFFSET _imp_glNormal3dv
	push	OFFSET _glNormal3dv@4
	push	OFFSET $SG324716
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2137 :       SK_GL_HOOK(glNormal3f);

	push	0
	push	OFFSET _imp_glNormal3f
	push	OFFSET _glNormal3f@12
	push	OFFSET $SG324717
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2138 :       SK_GL_HOOK(glNormal3fv);

	push	0
	push	OFFSET _imp_glNormal3fv
	push	OFFSET _glNormal3fv@4
	push	OFFSET $SG324718
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2139 :       SK_GL_HOOK(glNormal3i);

	push	0
	push	OFFSET _imp_glNormal3i
	push	OFFSET _glNormal3i@12
	push	OFFSET $SG324719
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2140 :       SK_GL_HOOK(glNormal3iv);

	push	0
	push	OFFSET _imp_glNormal3iv
	push	OFFSET _glNormal3iv@4
	push	OFFSET $SG324720
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2141 :       SK_GL_HOOK(glNormal3s);

	push	0
	push	OFFSET _imp_glNormal3s
	push	OFFSET _glNormal3s@12
	push	OFFSET $SG324721
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2142 :       SK_GL_HOOK(glNormal3sv);

	push	0
	push	OFFSET _imp_glNormal3sv
	push	OFFSET _glNormal3sv@4
	push	OFFSET $SG324722
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2143 :       SK_GL_HOOK(glNormalPointer);

	push	0
	push	OFFSET _imp_glNormalPointer
	push	OFFSET _glNormalPointer@12
	push	OFFSET $SG324723
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2144 :       SK_GL_HOOK(glOrtho);

	push	0
	push	OFFSET _imp_glOrtho
	push	OFFSET _glOrtho@48
	push	OFFSET $SG324724
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2145 :       SK_GL_HOOK(glPassThrough);

	push	0
	push	OFFSET _imp_glPassThrough
	push	OFFSET _glPassThrough@4
	push	OFFSET $SG324725
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2146 :       SK_GL_HOOK(glPixelMapfv);

	push	0
	push	OFFSET _imp_glPixelMapfv
	push	OFFSET _glPixelMapfv@12
	push	OFFSET $SG324726
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2147 :       SK_GL_HOOK(glPixelMapuiv);

	push	0
	push	OFFSET _imp_glPixelMapuiv
	push	OFFSET _glPixelMapuiv@12
	push	OFFSET $SG324727
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2148 :       SK_GL_HOOK(glPixelMapusv);

	push	0
	push	OFFSET _imp_glPixelMapusv
	push	OFFSET _glPixelMapusv@12
	push	OFFSET $SG324728
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2149 :       SK_GL_HOOK(glPixelStoref);

	push	0
	push	OFFSET _imp_glPixelStoref
	push	OFFSET _glPixelStoref@8
	push	OFFSET $SG324729
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2150 :       SK_GL_HOOK(glPixelStorei);

	push	0
	push	OFFSET _imp_glPixelStorei
	push	OFFSET _glPixelStorei@8
	push	OFFSET $SG324730
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2151 :       SK_GL_HOOK(glPixelTransferf);

	push	0
	push	OFFSET _imp_glPixelTransferf
	push	OFFSET _glPixelTransferf@8
	push	OFFSET $SG324731
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2152 :       SK_GL_HOOK(glPixelTransferi);

	push	0
	push	OFFSET _imp_glPixelTransferi
	push	OFFSET _glPixelTransferi@8
	push	OFFSET $SG324732
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2153 :       SK_GL_HOOK(glPixelZoom);

	push	0
	push	OFFSET _imp_glPixelZoom
	push	OFFSET _glPixelZoom@8
	push	OFFSET $SG324733
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2154 :       SK_GL_HOOK(glPointSize);

	push	0
	push	OFFSET _imp_glPointSize
	push	OFFSET _glPointSize@4
	push	OFFSET $SG324734
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2155 :       SK_GL_HOOK(glPolygonMode);

	push	0
	push	OFFSET _imp_glPolygonMode
	push	OFFSET _glPolygonMode@8
	push	OFFSET $SG324735
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2156 :       SK_GL_HOOK(glPolygonOffset);

	push	0
	push	OFFSET _imp_glPolygonOffset
	push	OFFSET _glPolygonOffset@8
	push	OFFSET $SG324736
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2157 :       SK_GL_HOOK(glPolygonStipple);

	push	0
	push	OFFSET _imp_glPolygonStipple
	push	OFFSET _glPolygonStipple@4
	push	OFFSET $SG324737
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2158 :       SK_GL_HOOK(glPopAttrib);

	push	0
	push	OFFSET _imp_glPopAttrib
	push	OFFSET _glPopAttrib@0
	push	OFFSET $SG324738
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2159 :       SK_GL_HOOK(glPopClientAttrib);

	push	0
	push	OFFSET _imp_glPopClientAttrib
	push	OFFSET _glPopClientAttrib@0
	push	OFFSET $SG324739
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2160 :       SK_GL_HOOK(glPopMatrix);

	push	0
	push	OFFSET _imp_glPopMatrix
	push	OFFSET _glPopMatrix@0
	push	OFFSET $SG324740
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2161 :       SK_GL_HOOK(glPopName);

	push	0
	push	OFFSET _imp_glPopName
	push	OFFSET _glPopName@0
	push	OFFSET $SG324741
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2162 :       SK_GL_HOOK(glPrioritizeTextures);

	push	0
	push	OFFSET _imp_glPrioritizeTextures
	push	OFFSET _glPrioritizeTextures@12
	push	OFFSET $SG324742
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2163 :       SK_GL_HOOK(glPushAttrib);

	push	0
	push	OFFSET _imp_glPushAttrib
	push	OFFSET _glPushAttrib@4
	push	OFFSET $SG324743
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2164 :       SK_GL_HOOK(glPushClientAttrib);

	push	0
	push	OFFSET _imp_glPushClientAttrib
	push	OFFSET _glPushClientAttrib@4
	push	OFFSET $SG324744
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2165 :       SK_GL_HOOK(glPushMatrix);

	push	0
	push	OFFSET _imp_glPushMatrix
	push	OFFSET _glPushMatrix@0
	push	OFFSET $SG324745
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2166 :       SK_GL_HOOK(glPushName);

	push	0
	push	OFFSET _imp_glPushName
	push	OFFSET _glPushName@4
	push	OFFSET $SG324746
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2167 :       SK_GL_HOOK(glRasterPos2d);

	push	0
	push	OFFSET _imp_glRasterPos2d
	push	OFFSET _glRasterPos2d@16
	push	OFFSET $SG324747
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2168 :       SK_GL_HOOK(glRasterPos2dv);

	push	0
	push	OFFSET _imp_glRasterPos2dv
	push	OFFSET _glRasterPos2dv@4
	push	OFFSET $SG324748
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2169 :       SK_GL_HOOK(glRasterPos2f);

	push	0
	push	OFFSET _imp_glRasterPos2f
	push	OFFSET _glRasterPos2f@8
	push	OFFSET $SG324749
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2170 :       SK_GL_HOOK(glRasterPos2fv);

	push	0
	push	OFFSET _imp_glRasterPos2fv
	push	OFFSET _glRasterPos2fv@4
	push	OFFSET $SG324750
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2171 :       SK_GL_HOOK(glRasterPos2i);

	push	0
	push	OFFSET _imp_glRasterPos2i
	push	OFFSET _glRasterPos2i@8
	push	OFFSET $SG324751
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2172 :       SK_GL_HOOK(glRasterPos2iv);

	push	0
	push	OFFSET _imp_glRasterPos2iv
	push	OFFSET _glRasterPos2iv@4
	push	OFFSET $SG324752
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2173 :       SK_GL_HOOK(glRasterPos2s);

	push	0
	push	OFFSET _imp_glRasterPos2s
	push	OFFSET _glRasterPos2s@8
	push	OFFSET $SG324753
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2174 :       SK_GL_HOOK(glRasterPos2sv);

	push	0
	push	OFFSET _imp_glRasterPos2sv
	push	OFFSET _glRasterPos2sv@4
	push	OFFSET $SG324754
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2175 :       SK_GL_HOOK(glRasterPos3d);

	push	0
	push	OFFSET _imp_glRasterPos3d
	push	OFFSET _glRasterPos3d@24
	push	OFFSET $SG324755
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2176 :       SK_GL_HOOK(glRasterPos3dv);

	push	0
	push	OFFSET _imp_glRasterPos3dv
	push	OFFSET _glRasterPos3dv@4
	push	OFFSET $SG324756
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2177 :       SK_GL_HOOK(glRasterPos3f);

	push	0
	push	OFFSET _imp_glRasterPos3f
	push	OFFSET _glRasterPos3f@12
	push	OFFSET $SG324757
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2178 :       SK_GL_HOOK(glRasterPos3fv);

	push	0
	push	OFFSET _imp_glRasterPos3fv
	push	OFFSET _glRasterPos3fv@4
	push	OFFSET $SG324758
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2179 :       SK_GL_HOOK(glRasterPos3i);

	push	0
	push	OFFSET _imp_glRasterPos3i
	push	OFFSET _glRasterPos3i@12
	push	OFFSET $SG324759
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2180 :       SK_GL_HOOK(glRasterPos3iv);

	push	0
	push	OFFSET _imp_glRasterPos3iv
	push	OFFSET _glRasterPos3iv@4
	push	OFFSET $SG324760
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2181 :       SK_GL_HOOK(glRasterPos3s);

	push	0
	push	OFFSET _imp_glRasterPos3s
	push	OFFSET _glRasterPos3s@12
	push	OFFSET $SG324761
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2182 :       SK_GL_HOOK(glRasterPos3sv);

	push	0
	push	OFFSET _imp_glRasterPos3sv
	push	OFFSET _glRasterPos3sv@4
	push	OFFSET $SG324762
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2183 :       SK_GL_HOOK(glRasterPos4d);

	push	0
	push	OFFSET _imp_glRasterPos4d
	push	OFFSET _glRasterPos4d@32
	push	OFFSET $SG324763
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2184 :       SK_GL_HOOK(glRasterPos4dv);

	push	0
	push	OFFSET _imp_glRasterPos4dv
	push	OFFSET _glRasterPos4dv@4
	push	OFFSET $SG324764
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2185 :       SK_GL_HOOK(glRasterPos4f);

	push	0
	push	OFFSET _imp_glRasterPos4f
	push	OFFSET _glRasterPos4f@16
	push	OFFSET $SG324765
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2186 :       SK_GL_HOOK(glRasterPos4fv);

	push	0
	push	OFFSET _imp_glRasterPos4fv
	push	OFFSET _glRasterPos4fv@4
	push	OFFSET $SG324766
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2187 :       SK_GL_HOOK(glRasterPos4i);

	push	0
	push	OFFSET _imp_glRasterPos4i
	push	OFFSET _glRasterPos4i@16
	push	OFFSET $SG324767
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2188 :       SK_GL_HOOK(glRasterPos4iv);

	push	0
	push	OFFSET _imp_glRasterPos4iv
	push	OFFSET _glRasterPos4iv@4
	push	OFFSET $SG324768
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2189 :       SK_GL_HOOK(glRasterPos4s);

	push	0
	push	OFFSET _imp_glRasterPos4s
	push	OFFSET _glRasterPos4s@16
	push	OFFSET $SG324769
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2190 :       SK_GL_HOOK(glRasterPos4sv);

	push	0
	push	OFFSET _imp_glRasterPos4sv
	push	OFFSET _glRasterPos4sv@4
	push	OFFSET $SG324770
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2191 :       SK_GL_HOOK(glReadBuffer);

	push	0
	push	OFFSET _imp_glReadBuffer
	push	OFFSET _glReadBuffer@4
	push	OFFSET $SG324771
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2192 :       SK_GL_HOOK(glReadPixels);

	push	0
	push	OFFSET _imp_glReadPixels
	push	OFFSET _glReadPixels@28
	push	OFFSET $SG324772
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2193 :       SK_GL_HOOK(glRectd);

	push	0
	push	OFFSET _imp_glRectd
	push	OFFSET _glRectd@32
	push	OFFSET $SG324773
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2194 :       SK_GL_HOOK(glRectdv);

	push	0
	push	OFFSET _imp_glRectdv
	push	OFFSET _glRectdv@8
	push	OFFSET $SG324774
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2195 :       SK_GL_HOOK(glRectf);

	push	0
	push	OFFSET _imp_glRectf
	push	OFFSET _glRectf@16
	push	OFFSET $SG324775
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2196 :       SK_GL_HOOK(glRectfv);

	push	0
	push	OFFSET _imp_glRectfv
	push	OFFSET _glRectfv@8
	push	OFFSET $SG324776
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2197 :       SK_GL_HOOK(glRecti);

	push	0
	push	OFFSET _imp_glRecti
	push	OFFSET _glRecti@16
	push	OFFSET $SG324777
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2198 :       SK_GL_HOOK(glRectiv);

	push	0
	push	OFFSET _imp_glRectiv
	push	OFFSET _glRectiv@8
	push	OFFSET $SG324778
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2199 :       SK_GL_HOOK(glRects);

	push	0
	push	OFFSET _imp_glRects
	push	OFFSET _glRects@16
	push	OFFSET $SG324779
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2200 :       SK_GL_HOOK(glRectsv);

	push	0
	push	OFFSET _imp_glRectsv
	push	OFFSET _glRectsv@8
	push	OFFSET $SG324780
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2201 :       SK_GL_HOOK(glRenderMode);

	push	0
	push	OFFSET _imp_glRenderMode
	push	OFFSET _glRenderMode@4
	push	OFFSET $SG324781
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2202 :       SK_GL_HOOK(glRotated);

	push	0
	push	OFFSET _imp_glRotated
	push	OFFSET _glRotated@32
	push	OFFSET $SG324782
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2203 :       SK_GL_HOOK(glRotatef);

	push	0
	push	OFFSET _imp_glRotatef
	push	OFFSET _glRotatef@16
	push	OFFSET $SG324783
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2204 :       SK_GL_HOOK(glScaled);

	push	0
	push	OFFSET _imp_glScaled
	push	OFFSET _glScaled@24
	push	OFFSET $SG324784
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2205 :       SK_GL_HOOK(glScalef);

	push	0
	push	OFFSET _imp_glScalef
	push	OFFSET _glScalef@12
	push	OFFSET $SG324785
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2206 :       SK_GL_HOOK(glScissor);

	push	0
	push	OFFSET _imp_glScissor
	push	OFFSET _glScissor@16
	push	OFFSET $SG324786
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2207 :       SK_GL_HOOK(glSelectBuffer);

	push	0
	push	OFFSET _imp_glSelectBuffer
	push	OFFSET _glSelectBuffer@8
	push	OFFSET $SG324787
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2208 :       SK_GL_HOOK(glShadeModel);

	push	0
	push	OFFSET _imp_glShadeModel
	push	OFFSET _glShadeModel@4
	push	OFFSET $SG324788
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2209 :       SK_GL_HOOK(glStencilFunc);

	push	0
	push	OFFSET _imp_glStencilFunc
	push	OFFSET _glStencilFunc@12
	push	OFFSET $SG324789
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2210 :       SK_GL_HOOK(glStencilMask);

	push	0
	push	OFFSET _imp_glStencilMask
	push	OFFSET _glStencilMask@4
	push	OFFSET $SG324790
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2211 :       SK_GL_HOOK(glStencilOp);

	push	0
	push	OFFSET _imp_glStencilOp
	push	OFFSET _glStencilOp@12
	push	OFFSET $SG324791
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2212 :       SK_GL_HOOK(glTexCoord1d);

	push	0
	push	OFFSET _imp_glTexCoord1d
	push	OFFSET _glTexCoord1d@8
	push	OFFSET $SG324792
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2213 :       SK_GL_HOOK(glTexCoord1dv);

	push	0
	push	OFFSET _imp_glTexCoord1dv
	push	OFFSET _glTexCoord1dv@4
	push	OFFSET $SG324793
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2214 :       SK_GL_HOOK(glTexCoord1f);

	push	0
	push	OFFSET _imp_glTexCoord1f
	push	OFFSET _glTexCoord1f@4
	push	OFFSET $SG324794
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2215 :       SK_GL_HOOK(glTexCoord1fv);

	push	0
	push	OFFSET _imp_glTexCoord1fv
	push	OFFSET _glTexCoord1fv@4
	push	OFFSET $SG324795
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2216 :       SK_GL_HOOK(glTexCoord1i);

	push	0
	push	OFFSET _imp_glTexCoord1i
	push	OFFSET _glTexCoord1i@4
	push	OFFSET $SG324796
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2217 :       SK_GL_HOOK(glTexCoord1iv);

	push	0
	push	OFFSET _imp_glTexCoord1iv
	push	OFFSET _glTexCoord1iv@4
	push	OFFSET $SG324797
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2218 :       SK_GL_HOOK(glTexCoord1s);

	push	0
	push	OFFSET _imp_glTexCoord1s
	push	OFFSET _glTexCoord1s@4
	push	OFFSET $SG324798
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2219 :       SK_GL_HOOK(glTexCoord1sv);

	push	0
	push	OFFSET _imp_glTexCoord1sv
	push	OFFSET _glTexCoord1sv@4
	push	OFFSET $SG324799
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2220 :       SK_GL_HOOK(glTexCoord2d);

	push	0
	push	OFFSET _imp_glTexCoord2d
	push	OFFSET _glTexCoord2d@16
	push	OFFSET $SG324800
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2221 :       SK_GL_HOOK(glTexCoord2dv);

	push	0
	push	OFFSET _imp_glTexCoord2dv
	push	OFFSET _glTexCoord2dv@4
	push	OFFSET $SG324801
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2222 :       SK_GL_HOOK(glTexCoord2f);

	push	0
	push	OFFSET _imp_glTexCoord2f
	push	OFFSET _glTexCoord2f@8
	push	OFFSET $SG324802
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2223 :       SK_GL_HOOK(glTexCoord2fv);

	push	0
	push	OFFSET _imp_glTexCoord2fv
	push	OFFSET _glTexCoord2fv@4
	push	OFFSET $SG324803
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2224 :       SK_GL_HOOK(glTexCoord2i);

	push	0
	push	OFFSET _imp_glTexCoord2i
	push	OFFSET _glTexCoord2i@8
	push	OFFSET $SG324804
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2225 :       SK_GL_HOOK(glTexCoord2iv);

	push	0
	push	OFFSET _imp_glTexCoord2iv
	push	OFFSET _glTexCoord2iv@4
	push	OFFSET $SG324805
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2226 :       SK_GL_HOOK(glTexCoord2s);

	push	0
	push	OFFSET _imp_glTexCoord2s
	push	OFFSET _glTexCoord2s@8
	push	OFFSET $SG324806
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2227 :       SK_GL_HOOK(glTexCoord2sv);

	push	0
	push	OFFSET _imp_glTexCoord2sv
	push	OFFSET _glTexCoord2sv@4
	push	OFFSET $SG324807
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2228 :       SK_GL_HOOK(glTexCoord3d);

	push	0
	push	OFFSET _imp_glTexCoord3d
	push	OFFSET _glTexCoord3d@24
	push	OFFSET $SG324808
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2229 :       SK_GL_HOOK(glTexCoord3dv);

	push	0
	push	OFFSET _imp_glTexCoord3dv
	push	OFFSET _glTexCoord3dv@4
	push	OFFSET $SG324809
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2230 :       SK_GL_HOOK(glTexCoord3f);

	push	0
	push	OFFSET _imp_glTexCoord3f
	push	OFFSET _glTexCoord3f@12
	push	OFFSET $SG324810
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2231 :       SK_GL_HOOK(glTexCoord3fv);

	push	0
	push	OFFSET _imp_glTexCoord3fv
	push	OFFSET _glTexCoord3fv@4
	push	OFFSET $SG324811
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2232 :       SK_GL_HOOK(glTexCoord3i);

	push	0
	push	OFFSET _imp_glTexCoord3i
	push	OFFSET _glTexCoord3i@12
	push	OFFSET $SG324812
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2233 :       SK_GL_HOOK(glTexCoord3iv);

	push	0
	push	OFFSET _imp_glTexCoord3iv
	push	OFFSET _glTexCoord3iv@4
	push	OFFSET $SG324813
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2234 :       SK_GL_HOOK(glTexCoord3s);

	push	0
	push	OFFSET _imp_glTexCoord3s
	push	OFFSET _glTexCoord3s@12
	push	OFFSET $SG324814
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2235 :       SK_GL_HOOK(glTexCoord3sv);

	push	0
	push	OFFSET _imp_glTexCoord3sv
	push	OFFSET _glTexCoord3sv@4
	push	OFFSET $SG324815
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2236 :       SK_GL_HOOK(glTexCoord4d);

	push	0
	push	OFFSET _imp_glTexCoord4d
	push	OFFSET _glTexCoord4d@32
	push	OFFSET $SG324816
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2237 :       SK_GL_HOOK(glTexCoord4dv);

	push	0
	push	OFFSET _imp_glTexCoord4dv
	push	OFFSET _glTexCoord4dv@4
	push	OFFSET $SG324817
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2238 :       SK_GL_HOOK(glTexCoord4f);

	push	0
	push	OFFSET _imp_glTexCoord4f
	push	OFFSET _glTexCoord4f@16
	push	OFFSET $SG324818
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2239 :       SK_GL_HOOK(glTexCoord4fv);

	push	0
	push	OFFSET _imp_glTexCoord4fv
	push	OFFSET _glTexCoord4fv@4
	push	OFFSET $SG324819
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2240 :       SK_GL_HOOK(glTexCoord4i);

	push	0
	push	OFFSET _imp_glTexCoord4i
	push	OFFSET _glTexCoord4i@16
	push	OFFSET $SG324820
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2241 :       SK_GL_HOOK(glTexCoord4iv);

	push	0
	push	OFFSET _imp_glTexCoord4iv
	push	OFFSET _glTexCoord4iv@4
	push	OFFSET $SG324821
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2242 :       SK_GL_HOOK(glTexCoord4s);

	push	0
	push	OFFSET _imp_glTexCoord4s
	push	OFFSET _glTexCoord4s@16
	push	OFFSET $SG324822
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2243 :       SK_GL_HOOK(glTexCoord4sv);

	push	0
	push	OFFSET _imp_glTexCoord4sv
	push	OFFSET _glTexCoord4sv@4
	push	OFFSET $SG324823
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2244 :       SK_GL_HOOK(glTexCoordPointer);

	push	0
	push	OFFSET _imp_glTexCoordPointer
	push	OFFSET _glTexCoordPointer@16
	push	OFFSET $SG324824
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2245 :       SK_GL_HOOK(glTexEnvf);

	push	0
	push	OFFSET _imp_glTexEnvf
	push	OFFSET _glTexEnvf@12
	push	OFFSET $SG324825
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2246 :       SK_GL_HOOK(glTexEnvfv);

	push	0
	push	OFFSET _imp_glTexEnvfv
	push	OFFSET _glTexEnvfv@12
	push	OFFSET $SG324826
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2247 :       SK_GL_HOOK(glTexEnvi);

	push	0
	push	OFFSET _imp_glTexEnvi
	push	OFFSET _glTexEnvi@12
	push	OFFSET $SG324827
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2248 :       SK_GL_HOOK(glTexEnviv);

	push	0
	push	OFFSET _imp_glTexEnviv
	push	OFFSET _glTexEnviv@12
	push	OFFSET $SG324828
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2249 :       SK_GL_HOOK(glTexGend);

	push	0
	push	OFFSET _imp_glTexGend
	push	OFFSET _glTexGend@16
	push	OFFSET $SG324829
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2250 :       SK_GL_HOOK(glTexGendv);

	push	0
	push	OFFSET _imp_glTexGendv
	push	OFFSET _glTexGendv@12
	push	OFFSET $SG324830
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2251 :       SK_GL_HOOK(glTexGenf);

	push	0
	push	OFFSET _imp_glTexGenf
	push	OFFSET _glTexGenf@12
	push	OFFSET $SG324831
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2252 :       SK_GL_HOOK(glTexGenfv);

	push	0
	push	OFFSET _imp_glTexGenfv
	push	OFFSET _glTexGenfv@12
	push	OFFSET $SG324832
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2253 :       SK_GL_HOOK(glTexGeni);

	push	0
	push	OFFSET _imp_glTexGeni
	push	OFFSET _glTexGeni@12
	push	OFFSET $SG324833
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2254 :       SK_GL_HOOK(glTexGeniv);

	push	0
	push	OFFSET _imp_glTexGeniv
	push	OFFSET _glTexGeniv@12
	push	OFFSET $SG324834
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2255 :       SK_GL_HOOK(glTexImage1D);

	push	0
	push	OFFSET _imp_glTexImage1D
	push	OFFSET _glTexImage1D@32
	push	OFFSET $SG324835
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2256 :       SK_GL_HOOK(glTexImage2D);

	push	0
	push	OFFSET _imp_glTexImage2D
	push	OFFSET _glTexImage2D@36
	push	OFFSET $SG324836
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2257 :       SK_GL_HOOK(glTexParameterf);

	push	0
	push	OFFSET _imp_glTexParameterf
	push	OFFSET _glTexParameterf@12
	push	OFFSET $SG324837
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2258 :       SK_GL_HOOK(glTexParameterfv);

	push	0
	push	OFFSET _imp_glTexParameterfv
	push	OFFSET _glTexParameterfv@12
	push	OFFSET $SG324838
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2259 :       SK_GL_HOOK(glTexParameteri);

	push	0
	push	OFFSET _imp_glTexParameteri
	push	OFFSET _glTexParameteri@12
	push	OFFSET $SG324839
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2260 :       SK_GL_HOOK(glTexParameteriv);

	push	0
	push	OFFSET _imp_glTexParameteriv
	push	OFFSET _glTexParameteriv@12
	push	OFFSET $SG324840
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2261 :       SK_GL_HOOK(glTexSubImage1D);

	push	0
	push	OFFSET _imp_glTexSubImage1D
	push	OFFSET _glTexSubImage1D@28
	push	OFFSET $SG324841
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2262 :       SK_GL_HOOK(glTexSubImage2D);

	push	0
	push	OFFSET _imp_glTexSubImage2D
	push	OFFSET _glTexSubImage2D@36
	push	OFFSET $SG324842
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2263 :       SK_GL_HOOK(glTranslated);

	push	0
	push	OFFSET _imp_glTranslated
	push	OFFSET _glTranslated@24
	push	OFFSET $SG324843
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2264 :       SK_GL_HOOK(glTranslatef);

	push	0
	push	OFFSET _imp_glTranslatef
	push	OFFSET _glTranslatef@12
	push	OFFSET $SG324844
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2265 :       SK_GL_HOOK(glVertex2d);

	push	0
	push	OFFSET _imp_glVertex2d
	push	OFFSET _glVertex2d@16
	push	OFFSET $SG324845
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2266 :       SK_GL_HOOK(glVertex2dv);

	push	0
	push	OFFSET _imp_glVertex2dv
	push	OFFSET _glVertex2dv@4
	push	OFFSET $SG324846
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2267 :       SK_GL_HOOK(glVertex2f);

	push	0
	push	OFFSET _imp_glVertex2f
	push	OFFSET _glVertex2f@8
	push	OFFSET $SG324847
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2268 :       SK_GL_HOOK(glVertex2fv);

	push	0
	push	OFFSET _imp_glVertex2fv
	push	OFFSET _glVertex2fv@4
	push	OFFSET $SG324848
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2269 :       SK_GL_HOOK(glVertex2i);

	push	0
	push	OFFSET _imp_glVertex2i
	push	OFFSET _glVertex2i@8
	push	OFFSET $SG324849
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2270 :       SK_GL_HOOK(glVertex2iv);

	push	0
	push	OFFSET _imp_glVertex2iv
	push	OFFSET _glVertex2iv@4
	push	OFFSET $SG324850
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2271 :       SK_GL_HOOK(glVertex2s);

	push	0
	push	OFFSET _imp_glVertex2s
	push	OFFSET _glVertex2s@8
	push	OFFSET $SG324851
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2272 :       SK_GL_HOOK(glVertex2sv);

	push	0
	push	OFFSET _imp_glVertex2sv
	push	OFFSET _glVertex2sv@4
	push	OFFSET $SG324852
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2273 :       SK_GL_HOOK(glVertex3d);

	push	0
	push	OFFSET _imp_glVertex3d
	push	OFFSET _glVertex3d@24
	push	OFFSET $SG324853
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2274 :       SK_GL_HOOK(glVertex3dv);

	push	0
	push	OFFSET _imp_glVertex3dv
	push	OFFSET _glVertex3dv@4
	push	OFFSET $SG324854
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2275 :       SK_GL_HOOK(glVertex3f);

	push	0
	push	OFFSET _imp_glVertex3f
	push	OFFSET _glVertex3f@12
	push	OFFSET $SG324855
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2276 :       SK_GL_HOOK(glVertex3fv);

	push	0
	push	OFFSET _imp_glVertex3fv
	push	OFFSET _glVertex3fv@4
	push	OFFSET $SG324856
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2277 :       SK_GL_HOOK(glVertex3i);

	push	0
	push	OFFSET _imp_glVertex3i
	push	OFFSET _glVertex3i@12
	push	OFFSET $SG324857
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2278 :       SK_GL_HOOK(glVertex3iv);

	push	0
	push	OFFSET _imp_glVertex3iv
	push	OFFSET _glVertex3iv@4
	push	OFFSET $SG324858
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2279 :       SK_GL_HOOK(glVertex3s);

	push	0
	push	OFFSET _imp_glVertex3s
	push	OFFSET _glVertex3s@12
	push	OFFSET $SG324859
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2280 :       SK_GL_HOOK(glVertex3sv);

	push	0
	push	OFFSET _imp_glVertex3sv
	push	OFFSET _glVertex3sv@4
	push	OFFSET $SG324860
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2281 :       SK_GL_HOOK(glVertex4d);

	push	0
	push	OFFSET _imp_glVertex4d
	push	OFFSET _glVertex4d@32
	push	OFFSET $SG324861
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2282 :       SK_GL_HOOK(glVertex4dv);

	push	0
	push	OFFSET _imp_glVertex4dv
	push	OFFSET _glVertex4dv@4
	push	OFFSET $SG324862
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2283 :       SK_GL_HOOK(glVertex4f);

	push	0
	push	OFFSET _imp_glVertex4f
	push	OFFSET _glVertex4f@16
	push	OFFSET $SG324863
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2284 :       SK_GL_HOOK(glVertex4fv);

	push	0
	push	OFFSET _imp_glVertex4fv
	push	OFFSET _glVertex4fv@4
	push	OFFSET $SG324864
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2285 :       SK_GL_HOOK(glVertex4i);

	push	0
	push	OFFSET _imp_glVertex4i
	push	OFFSET _glVertex4i@16
	push	OFFSET $SG324865
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2286 :       SK_GL_HOOK(glVertex4iv);

	push	0
	push	OFFSET _imp_glVertex4iv
	push	OFFSET _glVertex4iv@4
	push	OFFSET $SG324866
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2287 :       SK_GL_HOOK(glVertex4s);

	push	0
	push	OFFSET _imp_glVertex4s
	push	OFFSET _glVertex4s@16
	push	OFFSET $SG324867
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2288 :       SK_GL_HOOK(glVertex4sv);

	push	0
	push	OFFSET _imp_glVertex4sv
	push	OFFSET _glVertex4sv@4
	push	OFFSET $SG324868
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2289 :       SK_GL_HOOK(glVertexPointer);

	push	0
	push	OFFSET _imp_glVertexPointer
	push	OFFSET _glVertexPointer@16
	push	OFFSET $SG324869
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2290 :       SK_GL_HOOK(glViewport);

	push	0
	push	OFFSET _imp_glViewport
	push	OFFSET _glViewport@16
	push	OFFSET $SG324870
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2291 : 
; 2292 :       SK_GL_HOOK(wglCopyContext);

	push	0
	push	OFFSET _imp_wglCopyContext
	push	OFFSET _wglCopyContext@12
	push	OFFSET $SG324871
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2293 :       SK_GL_HOOK(wglCreateLayerContext);

	push	0
	push	OFFSET _imp_wglCreateLayerContext
	push	OFFSET _wglCreateLayerContext@8
	push	OFFSET $SG324872
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2294 :       SK_GL_HOOK(wglDeleteContext);

	push	0
	push	OFFSET _imp_wglDeleteContext
	push	OFFSET _wglDeleteContext@4
	push	OFFSET $SG324873
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2295 :       SK_GL_HOOK(wglGetCurrentContext);

	push	0
	push	OFFSET _imp_wglGetCurrentContext
	push	OFFSET _wglGetCurrentContext@0
	push	OFFSET $SG324874
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2296 :       SK_GL_HOOK(wglGetCurrentDC);

	push	0
	push	OFFSET _imp_wglGetCurrentDC
	push	OFFSET _wglGetCurrentDC@0
	push	OFFSET $SG324875
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2297 : 
; 2298 :       SK_GL_HOOK(wglGetProcAddress);

	push	0
	push	OFFSET _imp_wglGetProcAddress
	push	OFFSET _wglGetProcAddress@4
	push	OFFSET $SG324876
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2299 :       SK_GL_HOOK(wglCreateContext);

	push	0
	push	OFFSET _imp_wglCreateContext
	push	OFFSET _wglCreateContext@4
	push	OFFSET $SG324877
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2300 : 
; 2301 :       SK_GL_HOOK(wglChoosePixelFormat);

	push	0
	push	OFFSET _imp_wglChoosePixelFormat
	push	OFFSET _wglChoosePixelFormat@8
	push	OFFSET $SG324878
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2302 : 
; 2303 :       SK_GL_HOOK(wglMakeCurrent);

	push	0
	push	OFFSET _imp_wglMakeCurrent
	push	OFFSET _wglMakeCurrent@8
	push	OFFSET $SG324879
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2304 :       SK_GL_HOOK(wglShareLists);

	push	0
	push	OFFSET _imp_wglShareLists
	push	OFFSET _wglShareLists@8
	push	OFFSET $SG324880
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2305 :       SK_GL_HOOK(wglUseFontBitmapsA);

	push	0
	push	OFFSET _imp_wglUseFontBitmapsA
	push	OFFSET _wglUseFontBitmapsA@16
	push	OFFSET $SG324881
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2306 :       SK_GL_HOOK(wglUseFontBitmapsW);

	push	0
	push	OFFSET _imp_wglUseFontBitmapsW
	push	OFFSET _wglUseFontBitmapsW@16
	push	OFFSET $SG324882
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2307 :       SK_GL_HOOK(wglDescribeLayerPlane);

	push	0
	push	OFFSET _imp_wglDescribeLayerPlane
	push	OFFSET _wglDescribeLayerPlane@20
	push	OFFSET $SG324883
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2308 :       SK_GL_HOOK(wglDescribePixelFormat);

	push	0
	push	OFFSET _imp_wglDescribePixelFormat
	push	OFFSET _wglDescribePixelFormat@16
	push	OFFSET $SG324884
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2309 :       SK_GL_HOOK(wglGetLayerPaletteEntries);

	push	0
	push	OFFSET _imp_wglGetLayerPaletteEntries
	push	OFFSET _wglGetLayerPaletteEntries@20
	push	OFFSET $SG324885
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2310 :       SK_GL_HOOK(wglGetPixelFormat);

	push	0
	push	OFFSET _imp_wglGetPixelFormat
	push	OFFSET _wglGetPixelFormat@24
	push	OFFSET $SG324886
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2311 :       SK_GL_HOOK(wglRealizeLayerPalette);

	push	0
	push	OFFSET _imp_wglRealizeLayerPalette
	push	OFFSET _wglRealizeLayerPalette@12
	push	OFFSET $SG324887
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2312 :       SK_GL_HOOK(wglSetLayerPaletteEntries);

	push	0
	push	OFFSET _imp_wglSetLayerPaletteEntries
	push	OFFSET _wglSetLayerPaletteEntries@20
	push	OFFSET $SG324888
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2313 :       SK_GL_HOOK(wglSetPixelFormat);

	push	0
	push	OFFSET _imp_wglSetPixelFormat
	push	OFFSET _wglSetPixelFormat@12
	push	OFFSET $SG324889
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2314 :       SK_GL_HOOK(wglSwapMultipleBuffers);

	push	0
	push	OFFSET _imp_wglSwapMultipleBuffers
	push	OFFSET _wglSwapMultipleBuffers@8
	push	OFFSET $SG324890
	push	OFFSET $SG324533
	call	?SK_CreateDLLHook2@@YG?AW4MH_STATUS@@PB_WPBDPAXPAPAX3@Z ; SK_CreateDLLHook2
	inc	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS

; 2315 : 
; 2316 :       MH_ApplyQueued ();

	call	_MH_ApplyQueued@0

; 2317 :     }
; 2318 : 
; 2319 :     dll_log.Log ( L"[ OpenGL32 ]  @ %lu functions hooked",

	push	DWORD PTR ?GL_HOOKS@@3KA		; GL_HOOKS
	push	OFFSET $SG324891
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN4@SK_HookGL:

; 2320 :                     GL_HOOKS );
; 2321 :   }
; 2322 : 
; 2323 :   InterlockedExchange (&__gl_ready, TRUE);

	mov	eax, OFFSET ?__gl_ready@@3JC		; __gl_ready
	xchg	DWORD PTR [eax], esi

; 2324 : 
; 2325 : #if 0
; 2326 :   _beginthreadex ( nullptr,
; 2327 :                      0,
; 2328 :                        DXGI_Thread,
; 2329 :                          nullptr,
; 2330 :                            0x00,
; 2331 :                              nullptr );
; 2332 : #endif
; 2333 : 
; 2334 :   GL_HOOKED = TRUE;

	mov	DWORD PTR ?GL_HOOKED@@3HA, 1		; GL_HOOKED
$LN1@SK_HookGL:
	pop	esi

; 2335 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_HookGL@@YGXXZ ENDP					; SK_HookGL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_result$1 = -12						; size = 8
_finished$2 = -4					; size = 4
?SK_GL_UpdateRenderStats@@YGXXZ PROC			; SK_GL_UpdateRenderStats

; 1720 : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1721 :   if (! (config.render.show))

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+492, 0
	je	$LN3@SK_GL_Upda

; 1722 :     return;
; 1723 : 
; 1724 :   static bool init = false;
; 1725 : 
; 1726 :   if (! init)

	cmp	BYTE PTR ?init@?1??SK_GL_UpdateRenderStats@@YGXXZ@4_NA, 0
	jne	SHORT $LN6@SK_GL_Upda

; 1727 :   {
; 1728 :     GLPerf::Init ();

	call	?Init@GLPerf@@YA_NXZ			; GLPerf::Init

; 1729 :     init = true;

	mov	BYTE PTR ?init@?1??SK_GL_UpdateRenderStats@@YGXXZ@4_NA, 1
$LN6@SK_GL_Upda:

; 1730 :   }
; 1731 : 
; 1732 :   //SK::DXGI::PipelineStatsD3D11& pipeline_stats =
; 1733 :     //SK::DXGI::pipeline_stats_d3d11;
; 1734 : 
; 1735 :   for (int i = 0; i < 11; i++)

	push	esi
	push	edi
	mov	edi, OFFSET ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A ; GLPerf::pipeline_states
$LL4@SK_GL_Upda:

; 1736 :   {
; 1737 :     if (GLPerf::pipeline_states [i] != nullptr)

	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	$LN2@SK_GL_Upda

; 1738 :     {
; 1739 :       if (GLPerf::pipeline_states [i]->isReady ())

	cmp	BYTE PTR [esi+2], 0
	je	SHORT $LN8@SK_GL_Upda

; 1564 :       glGetQueryObjectiv (query_, GL_QUERY_RESULT_AVAILABLE, &finished);

	lea	eax, DWORD PTR _finished$2[ebp]
	push	eax
	push	34919					; 00008867H
	push	DWORD PTR [esi+16]
	call	DWORD PTR ___glewGetQueryObjectiv

; 1565 : 
; 1566 :       finished_ = (finished > 0);

	cmp	DWORD PTR _finished$2[ebp], 0
	setg	al
	mov	BYTE PTR [esi+1], al
	test	al, al

; 1585 :       if (isFinished ())

	je	SHORT $LN2@SK_GL_Upda

; 1597 :       glGetQueryObjectui64v (query_, GL_QUERY_RESULT, pResult);

	lea	eax, DWORD PTR _result$1[ebp]
	push	eax
	push	34918					; 00008866H
	push	DWORD PTR [esi+16]
	call	DWORD PTR ___glewGetQueryObjectui64v

; 1598 :       ready_ = GL_TRUE;

	mov	BYTE PTR [esi+2], 1

; 1599 : 
; 1600 :       result_ = *pResult;

	mov	eax, DWORD PTR _result$1[ebp]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR _result$1[ebp+4]
	mov	DWORD PTR [esi+12], eax

; 1740 :       {
; 1741 :         GLuint64 result;
; 1742 :         if (GLPerf::pipeline_states [i]->getResulIfFinished (&result))
; 1743 :         {
; 1744 :           GLPerf::pipeline_states [i]->beginQuery ();

	mov	esi, DWORD PTR [edi]

; 1550 :       glBeginQuery (target_, query_);

	push	DWORD PTR [esi+16]
	mov	BYTE PTR [esi], 1
	push	DWORD PTR [esi+20]
	mov	BYTE PTR [esi+2], 0
	call	DWORD PTR ___glewBeginQuery

; 1551 :       finished_ = GL_FALSE;

	mov	BYTE PTR [esi+1], 0

; 1552 :       result_   = 0;

	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0

; 1745 :         }
; 1746 :       }

	jmp	SHORT $LN2@SK_GL_Upda
$LN8@SK_GL_Upda:

; 1747 : 
; 1748 :       else if (GLPerf::pipeline_states [i]->isActive ())

	cmp	BYTE PTR [esi], 0
	je	SHORT $LN2@SK_GL_Upda

; 1557 :       glEndQuery (query_);

	push	DWORD PTR [esi+16]
	mov	BYTE PTR [esi], 0
	call	DWORD PTR ___glewEndQuery
$LN2@SK_GL_Upda:

; 1730 :   }
; 1731 : 
; 1732 :   //SK::DXGI::PipelineStatsD3D11& pipeline_stats =
; 1733 :     //SK::DXGI::pipeline_stats_d3d11;
; 1734 : 
; 1735 :   for (int i = 0; i < 11; i++)

	add	edi, 4
	cmp	edi, OFFSET ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+44
	jl	$LL4@SK_GL_Upda
	pop	edi
	pop	esi
$LN3@SK_GL_Upda:

; 1749 :       {
; 1750 :         GLPerf::pipeline_states [i]->endQuery ();
; 1751 :       }
; 1752 : 
; 1753 :       //if (! GLPerf::pipeline_states [i]->isActive ())
; 1754 :       //{
; 1755 :       //
; 1756 :       //}
; 1757 :     }
; 1758 :   }
; 1759 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_GL_UpdateRenderStats@@YGXXZ ENDP			; SK_GL_UpdateRenderStats
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
?WaitForInit_GL@@YAXXZ PROC				; WaitForInit_GL
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?__gl_ready@@3JC		; __gl_ready
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 60   :   while (! ReadAcquire (&__gl_ready))

	test	eax, eax
	jne	SHORT $LN3@WaitForIni
	push	esi
	mov	esi, DWORD PTR __imp__MsgWaitForMultipleObjectsEx@20
$LL2@WaitForIni:

; 61   :     MsgWaitForMultipleObjectsEx (0, nullptr, 100, QS_ALLINPUT, MWMO_ALERTABLE);

	push	2
	push	1279					; 000004ffH
	push	100					; 00000064H
	push	0
	push	0
	call	esi
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h

; 8063 :     Value = *Source;

	mov	eax, DWORD PTR ?__gl_ready@@3JC		; __gl_ready
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 60   :   while (! ReadAcquire (&__gl_ready))

	test	eax, eax
	je	SHORT $LL2@WaitForIni
	pop	esi
$LN3@WaitForIni:

; 62   : }

	ret	0
?WaitForInit_GL@@YAXXZ ENDP				; WaitForInit_GL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
_wszDesc$ = -2328					; size = 2048
$T2 = -280						; size = 24
$T3 = -256						; size = 24
$T4 = -232						; size = 4
_stats$ = -228						; size = 88
_stats$1$ = -140					; size = 4
$T5 = -136						; size = 24
$T6 = -136						; size = 24
$T7 = -136						; size = 24
$T8 = -136						; size = 24
$T9 = -136						; size = 24
_stats$22$ = -112					; size = 4
_stats$16$ = -108					; size = 4
_stats$12$ = -104					; size = 4
_stats$18$ = -100					; size = 4
_stats$9$ = -96						; size = 4
_stats$10$ = -92					; size = 4
_stats$8$ = -88						; size = 4
_stats$6$ = -84						; size = 4
_stats$2$ = -80						; size = 4
$T10 = -76						; size = 24
$T11 = -76						; size = 24
$T12 = -76						; size = 24
$T13 = -76						; size = 24
_stats$4$ = -52						; size = 4
tv2043 = -52						; size = 4
_stats$21$ = -48					; size = 4
_stats$13$ = -44					; size = 4
_stats$14$ = -40					; size = 4
_stats$15$ = -36					; size = 4
_stats$11$ = -32					; size = 4
_stats$7$ = -28						; size = 4
_stats$20$ = -24					; size = 4
_stats$17$ = -20					; size = 4
_stats$19$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ PROC ; SK::OpenGL::getPipelineStatsDesc

; 1766 : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 2316				; 0000090cH
	push	ebx
	push	esi
	push	edi

; 1767 :   wchar_t wszDesc [1024];
; 1768 : 
; 1769 :   D3D11_QUERY_DATA_PIPELINE_STATISTICS stats = { };

	push	88					; 00000058H
	lea	eax, DWORD PTR _stats$[ebp]
	mov	DWORD PTR $T4[ebp], 0
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1770 : 
; 1771 :   if (GLPerf::HAS_pipeline_query)

	cmp	BYTE PTR ?HAS_pipeline_query@GLPerf@@3_NA, 0 ; GLPerf::HAS_pipeline_query
	je	$LN623@getPipelin

; 1772 :   {
; 1773 :     stats.IAVertices    = GLPerf::pipeline_states [GLPerf::IAVertices   ]->getLastResult ();

	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A
	mov	ecx, DWORD PTR [eax+8]
	mov	edi, DWORD PTR [eax+12]

; 1774 :     stats.IAPrimitives  = GLPerf::pipeline_states [GLPerf::IAPrimitives ]->getLastResult ();

	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+4
	mov	DWORD PTR _stats$2$[ebp], edi
	mov	DWORD PTR _stats$1$[ebp], ecx
	mov	edi, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _stats$4$[ebp], eax

; 1775 :     stats.VSInvocations = GLPerf::pipeline_states [GLPerf::VSInvocations]->getLastResult ();

	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+8
	mov	ecx, DWORD PTR [eax+12]
	mov	ebx, DWORD PTR [eax+8]

; 1776 :     stats.GSInvocations = GLPerf::pipeline_states [GLPerf::GSInvocations]->getLastResult ();

	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+12
	mov	DWORD PTR _stats$6$[ebp], ecx
	mov	esi, DWORD PTR [eax+8]
	mov	DWORD PTR _stats$7$[ebp], esi
	mov	esi, DWORD PTR [eax+12]

; 1777 :     stats.GSPrimitives  = GLPerf::pipeline_states [GLPerf::GSPrimitives ]->getLastResult ();

	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+16
	mov	DWORD PTR _stats$8$[ebp], esi

; 1778 :     stats.CInvocations  = GLPerf::pipeline_states [GLPerf::CInvocations ]->getLastResult ();
; 1779 :     stats.CPrimitives   = GLPerf::pipeline_states [GLPerf::CPrimitives  ]->getLastResult ();
; 1780 :     stats.PSInvocations = GLPerf::pipeline_states [GLPerf::PSInvocations]->getLastResult ();
; 1781 :     stats.HSInvocations = GLPerf::pipeline_states [GLPerf::HSInvocations]->getLastResult ();
; 1782 :     stats.DSInvocations = GLPerf::pipeline_states [GLPerf::DSInvocations]->getLastResult ();
; 1783 :     stats.CSInvocations = GLPerf::pipeline_states [GLPerf::CSInvocations]->getLastResult ();

	mov	esi, DWORD PTR _stats$1$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _stats$10$[ebp], eax
	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+20
	mov	DWORD PTR _stats$9$[ebp], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _stats$11$[ebp], edx
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+24
	mov	DWORD PTR _stats$12$[ebp], edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _stats$14$[ebp], eax
	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+28
	mov	DWORD PTR _stats$13$[ebp], edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _stats$16$[ebp], eax
	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+32
	mov	DWORD PTR _stats$15$[ebp], edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _stats$18$[ebp], eax
	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+36
	mov	DWORD PTR _stats$17$[ebp], edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _stats$20$[ebp], eax
	mov	eax, DWORD PTR ?pipeline_states@GLPerf@@3PAPAVPipelineQuery@1@A+40
	mov	DWORD PTR _stats$19$[ebp], edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _stats$21$[ebp], edx
	mov	edx, DWORD PTR _stats$4$[ebp]
	mov	DWORD PTR _stats$22$[ebp], eax
	jmp	$LN2@getPipelin
$LN623@getPipelin:
	mov	eax, DWORD PTR _stats$[ebp+84]
	mov	DWORD PTR _stats$22$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+80]
	mov	DWORD PTR _stats$21$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+76]
	mov	DWORD PTR _stats$20$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+72]
	mov	DWORD PTR _stats$19$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+68]
	mov	DWORD PTR _stats$18$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+64]
	mov	ecx, DWORD PTR _stats$[ebp+20]
	mov	DWORD PTR _stats$17$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+60]
	mov	ebx, DWORD PTR _stats$[ebp+16]
	mov	edx, DWORD PTR _stats$[ebp+12]
	mov	edi, DWORD PTR _stats$[ebp+8]
	mov	esi, DWORD PTR _stats$[ebp]
	mov	DWORD PTR _stats$16$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+56]
	mov	DWORD PTR _stats$15$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+52]
	mov	DWORD PTR _stats$14$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+48]
	mov	DWORD PTR _stats$13$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+44]
	mov	DWORD PTR _stats$12$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+40]
	mov	DWORD PTR _stats$11$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+36]
	mov	DWORD PTR _stats$10$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+32]
	mov	DWORD PTR _stats$9$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+28]
	mov	DWORD PTR _stats$8$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+24]
	mov	DWORD PTR _stats$7$[ebp], eax
	mov	eax, DWORD PTR _stats$[ebp+4]
	mov	DWORD PTR _stats$6$[ebp], ecx
	mov	DWORD PTR _stats$2$[ebp], eax
$LN2@getPipelin:

; 1784 :   }
; 1785 : 
; 1786 :   //
; 1787 :   // VERTEX SHADING
; 1788 :   //
; 1789 :   if (stats.VSInvocations > 0)

	test	ecx, ecx
	jne	SHORT $LN615@getPipelin
	test	ebx, ebx
	jne	SHORT $LN615@getPipelin

; 1792 :                   L"  VERTEX : %s   (%s Verts ==> %s Triangles)\n",
; 1793 :                     SK_CountToString (stats.VSInvocations).c_str (),
; 1794 :                       SK_CountToString (stats.IAVertices).c_str (),
; 1795 :                         SK_CountToString (stats.IAPrimitives).c_str () );
; 1796 :   }
; 1797 : 
; 1798 :   else
; 1799 :   {
; 1800 :     _swprintf ( wszDesc,

	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	OFFSET $SG323860
	push	eax
	call	__swprintf
	add	esp, 8
	jmp	$LN4@getPipelin
$LN615@getPipelin:

; 1791 :     _swprintf ( wszDesc,

	push	edx
	lea	eax, DWORD PTR $T9[ebp]
	push	edi
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	mov	edi, eax
	push	DWORD PTR _stats$2$[ebp]
	lea	eax, DWORD PTR $T13[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	esi
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	mov	esi, eax
	push	DWORD PTR _stats$6$[ebp]
	lea	eax, DWORD PTR $T3[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	ebx
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	add	esp, 36					; 00000024H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [edi+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN65@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edi, DWORD PTR [edi]
$LN65@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN84@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	esi, DWORD PTR [esi]
$LN84@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN103@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN103@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1791 :     _swprintf ( wszDesc,

	push	edi
	push	esi
	push	eax
	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	OFFSET $SG323859
	push	eax
	call	__swprintf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T3[ebp+20]
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1791 :     _swprintf ( wszDesc,

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN113@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T3[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN113@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T3[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T3[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T13[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T3[ebp+20], 7

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN143@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T13[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN143@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T13[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T13[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T9[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T13[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1791 :     _swprintf ( wszDesc,

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T9[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1807 :   if (stats.GSInvocations > 0)

	mov	ebx, DWORD PTR _stats$8$[ebp]
	mov	edi, DWORD PTR _stats$7$[ebp]
	test	ebx, ebx
	jne	SHORT $LN616@getPipelin
	test	edi, edi
	jne	SHORT $LN616@getPipelin

; 1810 :                   L"%s  GEOM   : %s   (%s Prims)\n",
; 1811 :                     wszDesc,
; 1812 :                       SK_CountToString (stats.GSInvocations).c_str (),
; 1813 :                         SK_CountToString (stats.GSPrimitives).c_str () );
; 1814 :   }
; 1815 : 
; 1816 :   else
; 1817 :   {
; 1818 :     _swprintf ( wszDesc,

	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323864
	push	eax
	call	__swprintf
	jmp	$LN633@getPipelin
$LN616@getPipelin:

; 1809 :     _swprintf ( wszDesc,

	push	DWORD PTR _stats$10$[ebp]
	lea	eax, DWORD PTR $T8[ebp]
	push	DWORD PTR _stats$9$[ebp]
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	mov	esi, eax
	push	ebx
	lea	eax, DWORD PTR $T12[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	push	edi
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN212@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	esi, DWORD PTR [esi]
$LN212@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN231@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN231@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1809 :     _swprintf ( wszDesc,

	push	esi
	push	eax
	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323863
	push	eax
	call	__swprintf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T12[ebp+20]
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1809 :     _swprintf ( wszDesc,

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN241@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T12[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN241@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T12[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T12[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T8[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T12[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1809 :     _swprintf ( wszDesc,

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN6@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T8[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
$LN633@getPipelin:
	add	esp, 12					; 0000000cH
$LN6@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1826 :   if (stats.HSInvocations > 0 || stats.DSInvocations > 0)

	mov	ebx, DWORD PTR _stats$18$[ebp]
	mov	edi, DWORD PTR _stats$17$[ebp]
	test	ebx, ebx
	ja	SHORT $LN629@getPipelin
	jb	SHORT $LN617@getPipelin
	test	edi, edi
	jne	SHORT $LN629@getPipelin
$LN617@getPipelin:
	mov	ecx, DWORD PTR _stats$20$[ebp]
	test	ecx, ecx
	ja	SHORT $LN628@getPipelin
	jb	SHORT $LN618@getPipelin
	mov	eax, DWORD PTR _stats$19$[ebp]
	test	eax, eax
	jne	SHORT $LN9@getPipelin
$LN618@getPipelin:

; 1829 :                   L"%s  TESS   : %s Hull ==> %s Domain\n",
; 1830 :                     wszDesc,
; 1831 :                       SK_CountToString (stats.HSInvocations).c_str (),
; 1832 :                         SK_CountToString (stats.DSInvocations).c_str () ) ;
; 1833 :   }
; 1834 : 
; 1835 :   else
; 1836 :   {
; 1837 :     _swprintf ( wszDesc,

	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323869
	push	eax
	call	__swprintf
	jmp	$LN634@getPipelin
$LN629@getPipelin:
	mov	ecx, DWORD PTR _stats$20$[ebp]
$LN628@getPipelin:
	mov	eax, DWORD PTR _stats$19$[ebp]
$LN9@getPipelin:

; 1828 :     _swprintf ( wszDesc,

	push	ecx
	push	eax
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	mov	esi, eax
	push	ebx
	lea	eax, DWORD PTR $T11[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	push	edi
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN310@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	esi, DWORD PTR [esi]
$LN310@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN329@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN329@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1828 :     _swprintf ( wszDesc,

	push	esi
	push	eax
	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323868
	push	eax
	call	__swprintf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T11[ebp+20]
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1828 :     _swprintf ( wszDesc,

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN339@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T11[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN339@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T11[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T11[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T7[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T11[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1828 :     _swprintf ( wszDesc,

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN369@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T7[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
$LN634@getPipelin:
	add	esp, 12					; 0000000cH
$LN369@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1845 :   if (stats.CInvocations > 0)

	mov	ebx, DWORD PTR _stats$12$[ebp]
	mov	esi, DWORD PTR _stats$11$[ebp]
	test	ebx, ebx
	jne	SHORT $LN619@getPipelin
	test	esi, esi
	jne	SHORT $LN619@getPipelin

; 1848 :                   L"%s  RASTER : %5.1f%% Filled     (%s Triangles IN )\n",
; 1849 :                     wszDesc, 100.0f *
; 1850 :                         ( static_cast <float> (stats.CPrimitives) /
; 1851 :                           static_cast <float> (stats.CInvocations) ),
; 1852 :                       SK_CountToString (stats.CInvocations).c_str () );
; 1853 :   }
; 1854 : 
; 1855 :   else
; 1856 :   {
; 1857 :     _swprintf ( wszDesc,

	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323873
	push	eax
	call	__swprintf
	jmp	$LN635@getPipelin
$LN619@getPipelin:

; 1847 :     _swprintf ( wszDesc,

	push	ebx
	lea	eax, DWORD PTR $T6[ebp]
	push	esi
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN408@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN408@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1847 :     _swprintf ( wszDesc,

	mov	edx, DWORD PTR _stats$14$[ebp]
	mov	ecx, DWORD PTR _stats$13$[ebp]
	push	eax
	call	__ultod3
	cvtsd2ss xmm0, xmm0
	mov	edx, ebx
	mov	ecx, esi
	movss	DWORD PTR tv2043[ebp], xmm0
	call	__ultod3
	movss	xmm1, DWORD PTR tv2043[ebp]
	lea	eax, DWORD PTR _wszDesc$[ebp]
	cvtsd2ss xmm0, xmm0
	sub	esp, 8
	divss	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@42c80000
	cvtps2pd xmm0, xmm1
	movsd	QWORD PTR [esp], xmm0
	push	eax
	push	OFFSET $SG323872
	push	eax
	call	__swprintf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T6[ebp+20]
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1847 :     _swprintf ( wszDesc,

	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN11@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T6[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
$LN635@getPipelin:
	add	esp, 12					; 0000000cH
$LN11@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1865 :   if (stats.PSInvocations > 0)

	mov	ebx, DWORD PTR _stats$16$[ebp]
	mov	edi, DWORD PTR _stats$15$[ebp]
	test	ebx, ebx
	jne	SHORT $LN620@getPipelin
	test	edi, edi
	jne	SHORT $LN620@getPipelin

; 1868 :                   L"%s  PIXEL  : %s   (%s Triangles OUT)\n",
; 1869 :                     wszDesc,
; 1870 :                       SK_CountToString (stats.PSInvocations).c_str (),
; 1871 :                         SK_CountToString (stats.CPrimitives).c_str () );
; 1872 :   }
; 1873 : 
; 1874 :   else
; 1875 :   {
; 1876 :     _swprintf ( wszDesc,

	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323877
	push	eax
	call	__swprintf
	jmp	$LN636@getPipelin
$LN620@getPipelin:

; 1867 :     _swprintf ( wszDesc,

	push	DWORD PTR _stats$14$[ebp]
	lea	eax, DWORD PTR $T5[ebp]
	push	DWORD PTR _stats$13$[ebp]
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	mov	esi, eax
	push	ebx
	lea	eax, DWORD PTR $T10[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	push	edi
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN457@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	esi, DWORD PTR [esi]
$LN457@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN476@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN476@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1867 :     _swprintf ( wszDesc,

	push	esi
	push	eax
	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323876
	push	eax
	call	__swprintf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T10[ebp+20]
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1867 :     _swprintf ( wszDesc,

	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN486@getPipelin

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	eax
	push	DWORD PTR $T10[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN486@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T10[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T10[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T5[ebp+20]

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T10[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1867 :     _swprintf ( wszDesc,

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN13@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T5[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
$LN636@getPipelin:
	add	esp, 12					; 0000000cH
$LN13@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1884 :   if (stats.CSInvocations > 0)

	mov	ecx, DWORD PTR _stats$22$[ebp]
	mov	eax, DWORD PTR _stats$21$[ebp]
	test	ecx, ecx
	jne	SHORT $LN621@getPipelin
	test	eax, eax
	jne	SHORT $LN621@getPipelin

; 1887 :                   L"%s  COMPUTE: %s\n",
; 1888 :                     wszDesc, SK_CountToString (stats.CSInvocations).c_str () );
; 1889 :   }
; 1890 : 
; 1891 :   else
; 1892 :   {
; 1893 :     _swprintf ( wszDesc,

	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323881
	push	eax
	call	__swprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN15@getPipelin
$LN621@getPipelin:

; 1886 :     _swprintf ( wszDesc,

	push	ecx
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?SK_CountToString@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SK_CountToString
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN555@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN555@getPipelin:
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1886 :     _swprintf ( wszDesc,

	push	eax
	lea	eax, DWORD PTR _wszDesc$[ebp]
	push	eax
	push	OFFSET $SG323880
	push	eax
	call	__swprintf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T2[ebp+20]
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1886 :     _swprintf ( wszDesc,

	add	esp, 16					; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN565@getPipelin
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T2[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN565@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR $T2[ebp+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR $T2[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR $T2[ebp], ax
$LN15@getPipelin:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ecx, DWORD PTR _wszDesc$[ebp]

; 326  : 		_Left = _Right;

	xor	eax, eax

; 289  : 		return (_CSTD wcslen(_First));

	lea	edx, DWORD PTR [ecx+2]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	npad	1
$LL622@getPipelin:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL622@getPipelin
	sub	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	lea	eax, DWORD PTR _wszDesc$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	eax
	mov	ecx, esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\opengl.cpp

; 1899 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$0:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$1:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$3:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$5:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$8:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getPipelineStatsDesc@OpenGL@SK@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ENDP ; SK::OpenGL::getPipelineStatsDesc
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
?Shutdown@OpenGL@SK@@YA_NXZ PROC			; SK::OpenGL::Shutdown

; 274  :   return SK_ShutdownCore (L"OpenGL32");

	push	OFFSET $SG317362
	call	?SK_ShutdownCore@@YG_NPB_W@Z		; SK_ShutdownCore

; 275  : }

	ret	0
?Shutdown@OpenGL@SK@@YA_NXZ ENDP			; SK::OpenGL::Shutdown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
?Startup@OpenGL@SK@@YA_NXZ PROC				; SK::OpenGL::Startup

; 268  :   return SK_StartupCore (L"OpenGL32", opengl_init_callback);

	push	OFFSET _opengl_init_callback@4
	push	OFFSET $SG317358
	call	?SK_StartupCore@@YG_NPB_WPAX@Z		; SK_StartupCore

; 269  : }

	ret	0
?Startup@OpenGL@SK@@YA_NXZ ENDP				; SK::OpenGL::Startup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT

; 3646 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset, COMDAT
; _this$ = ecx

; 3629 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Off$[ebp]
	jb	SHORT $LN14@Check_offs

; 3633 : 			}
; 3634 : 		}

	pop	ebp
	ret	4
$LN14@Check_offs:

; 3631 : 			{
; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN16@Check_offs:
$LN13@Check_offs:
	int	3
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 3625 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3602 : 		}

	ret	0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx

; 3588 : 		{	// test if _Ptr points inside string

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@Inside
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN14@Inside
$LN13@Inside:
	mov	edx, ecx
$LN14@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	cmp	edx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	eax, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	al, 1

; 3592 : 		}

	pop	ebp
	ret	4
$LN3@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	xor	al, al

; 3592 : 		}

	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx

; 3572 : 		{	// ensure buffer is big enough

	npad	2
	push	ebp
	mov	ebp, esp

; 3573 : 		if (_Newsize == 0)

	mov	eax, DWORD PTR __Newsize$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Grow

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN16@Grow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN16@Grow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3576 : 			return (false);

	xor	al, al

; 3585 : 		}

	pop	ebp
	ret	4
$LN2@Grow:

; 3577 : 			}
; 3578 : 
; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [ecx+20], eax
	jae	SHORT $LN3@Grow

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	eax
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN3@Grow:

; 3582 : 			}
; 3583 : 
; 3584 : 		return (true);	// return true only if more work to do

	mov	al, 1

; 3585 : 		}

	pop	ebp
	ret	4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx

; 3566 : 		{	// set new length and null terminator

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3567 : 		auto& _My_data = this->_Get_data();
; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Eos
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
$LN11@Eos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx+edx*2], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Oldres$ = -28						; size = 4
_this$ = -24						; size = 4
__Ptr$1$ = -20						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newres$ = 8						; size = 4
__Newsize$ = 8						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx

; 3514 : 		{	// reallocate to new buffer of at least _Newsize, copying existing elements there

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 3515 : 		const auto _Max = max_size();
; 3516 : 		if (_Newsize > _Max)

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	eax, 2147483646				; 7ffffffeH
	jbe	SHORT $LN2@Copy

; 3517 : 			{	// too long
; 3518 : 			_Xlen();

	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN102@Copy:
$LN2@Copy:

; 3519 : 			}
; 3520 : 
; 3521 : 		auto& _My_data = this->_Get_data();
; 3522 : 		const size_type _Oldres = _My_data._Myres;

	mov	ebx, DWORD PTR [esi+20]

; 3523 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	edi, eax
	or	edi, 7
	mov	DWORD PTR __Oldres$[ebp], ebx

; 3524 : 		if (_Max < _Newres)

	cmp	edi, 2147483646				; 7ffffffeH
	jbe	SHORT $LN3@Copy

; 3525 : 			{
; 3526 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	edi, eax
	jmp	SHORT $LN8@Copy
$LN3@Copy:

; 3527 : 			}
; 3528 : 		else if (_Oldres / 2 <= _Newres / 3)

	mov	eax, -1431655765			; aaaaaaabH
	mov	ecx, ebx
	mul	edi
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN8@Copy

; 3529 : 			;
; 3530 : 		else if (_Oldres <= _Max - _Oldres / 2)

	mov	eax, 2147483646				; 7ffffffeH

; 3531 : 			{
; 3532 : 			_Newres = _Oldres + _Oldres / 2;	// grow exponentially if possible

	lea	edi, DWORD PTR [ecx+ebx]
	sub	eax, ecx
	cmp	ebx, eax
	jbe	SHORT $LN8@Copy

; 3533 : 			}
; 3534 : 		else
; 3535 : 			{
; 3536 : 			_Newres = _Max;	// settle for max_size()

	mov	edi, 2147483646				; 7ffffffeH
$LN8@Copy:

; 3537 : 			}
; 3538 : 
; 3539 : 		auto& _Al = this->_Getal();
; 3540 : 		pointer _Ptr;
; 3541 : 		_TRY_BEGIN
; 3542 : 			_Ptr = _Al.allocate(_Newres + 1);

	lea	eax, DWORD PTR [edi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	mov	ecx, esi
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
	jmp	SHORT $LN100@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0:

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	mov	ecx, DWORD PTR _this$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	DWORD PTR __Newres$[ebp], eax

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	mov	DWORD PTR __Ptr$[ebp], eax

; 3546 : 		_CATCH_END

	mov	eax, $LN97@Copy
	ret	0
$LN97@Copy:
	mov	esi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR __Oldres$[ebp]
	mov	edi, DWORD PTR __Newres$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN100@Copy:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3546 : 		_CATCH_END

	mov	DWORD PTR __Ptr$1$[ebp], ecx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [eax*2+2]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3550 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN10@Copy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	DWORD PTR [esi]
	push	ecx
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3553 : 			_Al.deallocate(_My_data._Bx._Ptr, _Oldres + 1);

	lea	eax, DWORD PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3556 : 		else

	jmp	SHORT $LN101@Copy
$LN10@Copy:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	esi
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN101@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3563 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3562 : 		_My_data._Myres = _Newres;

	mov	DWORD PTR [esi+20], edi

; 3563 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN99@Copy:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 3410 : 		{	// trims _Size to the longest it can be assuming a string at/after _Off

	npad	2
	push	ebp
	mov	ebp, esp

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	mov	ecx, DWORD PTR [ecx+16]
	sub	ecx, DWORD PTR __Off$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	ecx, eax
	cmovb	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3412 : 		}

	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 3030 : 		const size_type _Num = this->_Getal().max_size();
; 3031 : 		return (_Num <= 1 ? 1 : _Num - 1);

	mov	eax, 2147483646				; 7ffffffeH

; 3032 : 		}

	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@c_str

; 3003 : 		return (this->_Myptr());

	mov	eax, DWORD PTR [ecx]

; 3004 : 		}

	ret	0
$LN13@c_str:

; 3003 : 		return (this->_Myptr());

	mov	eax, ecx

; 3004 : 		}

	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	push	ebx
	push	esi

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	mov	esi, ecx
	push	edi

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edi, DWORD PTR [esi+16]
	cmp	edi, edx
	jb	$LN97@erase

; 2593 : 		_Check_offset(_Off);
; 2594 : 		if (this->_Mysize() - _Off <= _Count)

	mov	ebx, DWORD PTR __Count$[ebp]
	mov	eax, edi
	sub	eax, edx
	cmp	eax, ebx
	ja	SHORT $LN2@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN38@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN38@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2607 : 		}

	pop	ebp
	ret	8
$LN2@erase:

; 2595 : 			{
; 2596 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 2597 : 			}
; 2598 : 		else if (_Count != 0)

	test	ebx, ebx
	je	SHORT $LN94@erase

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN57@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN58@erase
$LN57@erase:
	mov	eax, esi
$LN58@erase:

; 2599 : 			{	// move elements down
; 2600 : 			value_type *_Ptr = this->_Myptr() + _Off;

	lea	ecx, DWORD PTR [eax+edx*2]

; 2601 : 			size_type _Newsize = this->_Mysize() - _Count;

	sub	edi, ebx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, edi
	sub	eax, edx
	add	eax, eax
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2602 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	lea	eax, DWORD PTR [ecx+ebx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN87@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN87@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
$LN94@erase:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN97@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN99@erase:
$LN96@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2585 : 		{	// erase elements [_Off, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR __Off$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jb	SHORT $LN36@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN26@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN26@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	edx, ecx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN36@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN38@erase:
$LN35@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2428 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2428 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL6@assign:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL6@assign
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2430 : 		}

	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2412 : 		{	// assign [_Ptr, _Ptr + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN17@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN18@assign
$LN17@assign:
	mov	edx, esi
$LN18@assign:

; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	mov	edi, DWORD PTR __Ptr$[ebp]
	cmp	edx, edi
	ja	SHORT $LN2@assign
	mov	eax, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	edi, eax
	jae	SHORT $LN2@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN33@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN34@assign
$LN33@assign:
	mov	eax, esi
$LN34@assign:

; 2413 : 		if (_Inside(_Ptr))
; 2414 : 			{
; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]
	sub	edi, eax
	mov	ecx, esi
	sar	edi, 1
	push	edi
	push	esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN2@assign:
	push	ebx

; 3573 : 		if (_Newsize == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	jne	SHORT $LN40@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN53@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN53@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	pop	esi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
$LN40@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	ecx, ebx
	jae	SHORT $LN41@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	ebx
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN41@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN81@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN82@assign
$LN81@assign:
	mov	eax, esi
$LN82@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	ecx, DWORD PTR [ebx+ebx]
	push	ecx
	push	edi
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN102@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN102@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
	pop	ebx
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	mov	esi, ecx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR __Roff$[ebp]
	push	edi
	mov	eax, DWORD PTR [ebx+16]
	cmp	eax, ecx
	jb	$LN161@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	cmp	eax, edi
	cmovb	edi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2382 : 		if (this == _STD addressof(_Right))

	cmp	esi, ebx
	jne	SHORT $LN2@assign

; 2383 : 			{	// substring
; 2384 : 			erase(_Roff + _Count);

	lea	eax, DWORD PTR [ecx+edi]

; 3630 : 		if (this->_Mysize() < _Off)

	cmp	DWORD PTR [esi+16], eax
	jb	$LN163@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN62@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN63@assign
$LN62@assign:
	mov	edx, esi
$LN63@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	push	ecx
	push	edi
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx+eax*2], di
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	pop	edi

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@assign:

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN72@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN85@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN85@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN72@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], edi
	jae	SHORT $LN73@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	mov	ecx, DWORD PTR __Roff$[ebp]
$LN73@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN113@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN113@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN129@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN130@assign
$LN129@assign:
	mov	edx, esi
$LN130@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [edi+edi]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2389 : 			_Traits::copy(this->_Myptr(), _Right._Myptr() + _Roff, _Count);

	lea	eax, DWORD PTR [ebx+ecx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN150@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN150@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN161@assign:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN164@assign:
$LN163@assign:
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN165@assign:
$LN160@assign:
	int	3
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 2250 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2250 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL8@operator:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL8@operator
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2251 : 		return (assign(_Ptr));
; 2252 : 		}

	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1980 : 		{	// construct from [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]

; 326  : 		_Left = _Right;

	xor	eax, eax
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1980 : 		{	// construct from [_Ptr, <null>)

	mov	esi, ecx
	push	edi

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, edx
	lea	edi, DWORD PTR [eax+2]
$LL25@basic_stri:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL25@basic_stri
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi

; 1981 : 		_Tidy_init();
; 1982 : 		assign(_Ptr);
; 1983 : 		}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1941 : 		}

	mov	eax, ecx
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT
; _this$ = ecx

; 1849 : 		return (_Get_data()._Myres);

	lea	eax, DWORD PTR [ecx+20]

; 1850 : 		}

	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1844 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1845 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1839 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1840 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1834 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1835 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1824 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1825 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1697 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1697 : 		}

	ret	0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1691 : 		}

	ret	0
$LN11@Myptr:

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1691 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1686 : 		}

	ret	0
$LN11@Myptr:

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1686 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 1634 : 			{	// user-provided, for fancy pointers
; 1635 : 			}

	mov	eax, ecx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 8
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
$LN3@Myptr:

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
$LN3@Myptr:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1598 : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+20], 0
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 2147483647				; 7fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 2147483647				; 7fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 2147483647				; 7fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	add	eax, eax

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 96   : 	{	// deallocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 97   :  #if defined(_M_IX86) || defined(_M_X64)
; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	mov	ecx, DWORD PTR __Count$[ebp]
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	ecx, eax
	jbe	SHORT $LN2@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 99   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	al, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jb	SHORT $LN5@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jae	SHORT $LN6@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN9@Deallocate:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN3@Deallocate:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 	}

	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 50   : 	{	// allocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 51   : 	void *_Ptr = 0;
; 52   : 
; 53   : 	if (_Count == 0)

	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate

; 54   : 		return (_Ptr);

	xor	eax, eax
$LN1@Allocate:

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN2@Allocate:

; 55   : 
; 56   : 	// check overflow of multiply
; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN3@Allocate

; 58   : 		_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	BYTE PTR __Try_aligned_allocation$[ebp], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	eax, DWORD PTR [ecx+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	eax, ecx
	ja	SHORT $LN6@Allocate

; 69   : 			_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN7@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN4@Allocate:

; 76   : 
; 77   :  #ifdef _DEBUG
; 78   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 79   :  #endif /* _DEBUG */
; 80   : 		}
; 81   : 	else
; 82   :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 83   : 	static_cast<void>(_Try_aligned_allocation);
; 84   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 85   : 
; 86   : 		{	// allocate normal block
; 87   : 		_Ptr = ::operator new(_User_size);

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN1@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
_TEXT	SEGMENT
?SK_GetCurrentGLContext@@YGPAUHGLRC__@@XZ PROC		; SK_GetCurrentGLContext

; 2342 :   if (imp_wglGetCurrentContext != nullptr)

	mov	eax, DWORD PTR _imp_wglGetCurrentContext
	test	eax, eax
	je	SHORT $LN2@SK_GetCurr

; 2343 :     return imp_wglGetCurrentContext ();

	jmp	eax
$LN2@SK_GetCurr:

; 2344 : 
; 2345 :   // Fallback, better hope this never happens ;)
; 2346 :   return wglGetCurrentContext ();

	jmp	_wglGetCurrentContext@0
?SK_GetCurrentGLContext@@YGPAUHGLRC__@@XZ ENDP		; SK_GetCurrentGLContext
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 239  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 240  : 	if (_Myproxy != 0)
; 241  : 		{	// proxy allocated, drain it
; 242  : 		_Lockit _Lock(_LOCK_DEBUG);
; 243  : 
; 244  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;
; 245  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)
; 246  : 			(*_Pnext)->_Myproxy = 0;
; 247  : 		_Myproxy->_Myfirstiter = 0;
; 248  : 		}
; 249  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 250  : 	}

	ret	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 115  : 		_Orphan_all();
; 116  : 		}

	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 99   : 		: _Myproxy(0)

	mov	DWORD PTR [ecx], 0

; 101  : 		}

	mov	eax, ecx
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 87   : 		: _Mycont(0), _Myfirstiter(0)

	mov	DWORD PTR [ecx], 0

; 89   : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 64   : 		}

	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 325  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 326  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cx, WORD PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	WORD PTR [eax], cx

; 327  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 314  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	mov	DWORD PTR __Count$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 316  : 		}

	pop	ebp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 294  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	push	eax
	push	DWORD PTR __First2$[ebp]
	push	DWORD PTR __First1$[ebp]
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 296  : 		}

	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?length@?$char_traits@_W@std@@SAIQB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIQB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 288  : 		{	// find length of null-terminated sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+2]
	npad	5
$LL3@length:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL3@length
	sub	eax, edx
	sar	eax, 1

; 290  : 		}

	pop	ebp
	ret	0
?length@?$char_traits@_W@std@@SAIQB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 91   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 94   :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT

; 244  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 248  :         #pragma warning(pop)
; 249  :     }

	pop	ebp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 231  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 235  :         #pragma warning(pop)
; 236  :     }

	pop	ebp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	jmp	_memcpy
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winbase.h
;	COMDAT ?_InterlockedCompareExchange@@YAKPCKKK@Z
_TEXT	SEGMENT
_Destination$ = 8					; size = 4
_Exchange$ = 12						; size = 4
_Comperand$ = 16					; size = 4
?_InterlockedCompareExchange@@YAKPCKKK@Z PROC		; _InterlockedCompareExchange, COMDAT

; 9002 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 9003 :     return (unsigned long) _InterlockedCompareExchange((volatile long*) Destination, (long) Exchange, (long) Comperand);

	mov	edx, DWORD PTR _Exchange$[ebp]
	mov	ecx, DWORD PTR _Destination$[ebp]
	mov	eax, DWORD PTR _Comperand$[ebp]
	lock	 cmpxchg DWORD PTR [ecx], edx

; 9004 : }

	pop	ebp
	ret	0
?_InterlockedCompareExchange@@YAKPCKKK@Z ENDP		; _InterlockedCompareExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\um\winnt.h
;	COMDAT _ReadAcquire
_TEXT	SEGMENT
_Source$ = 8						; size = 4
_ReadAcquire PROC					; COMDAT

; 8059 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 8060 : 
; 8061 :     LONG Value;
; 8062 : 
; 8063 :     Value = *Source;

	mov	eax, DWORD PTR _Source$[ebp]
	mov	eax, DWORD PTR [eax]

; 8064 :     return Value;
; 8065 : }

	pop	ebp
	ret	0
_ReadAcquire ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 2348 : }

	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\opengl.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 2348 : }

	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___n$[ebp]
	test	esi, esi
	je	SHORT $LN6@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	edi
	mov	edi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, edi
	call	ebx
	add	edi, DWORD PTR ___s$[ebp]
	sub	esi, 1
	jne	SHORT $LL2@vector
	pop	edi
	pop	ebx
$LN6@vector:
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
