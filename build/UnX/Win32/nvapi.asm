; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\andon\Source\Repos\SpecialK\src\nvapi.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?bLibShutdown@@3HA				; bLibShutdown
PUBLIC	?bLibInit@@3HA					; bLibInit
PUBLIC	_NvAPI_GPU_GetRamType
PUBLIC	_NvAPI_GPU_GetFBWidthAndLocation
PUBLIC	_NvAPI_GPU_GetPCIEInfo
PUBLIC	_NvAPI_GetPhysicalGPUFromGPUID
PUBLIC	_NvAPI_GetGPUIDFromPhysicalGPU
PUBLIC	?nv_hardware@NVAPI@sk@@3_NA			; sk::NVAPI::nv_hardware
_BSS	SEGMENT
?nvapi_silent@@3_NA DB 01H DUP (?)			; nvapi_silent
	ALIGN	4

?_nv_dxgi_adapters@@3PAUDXGI_ADAPTER_DESC@@A DB 04900H DUP (?) ; _nv_dxgi_adapters
?_nv_dxgi_gpus@@3PAPAUNvPhysicalGpuHandle__@@A DD 040H DUP (?) ; _nv_dxgi_gpus
?phys@@3PAPAUNvPhysicalGpuHandle__@@A DD 040H DUP (?)	; phys
?bLibShutdown@@3HA DD 01H DUP (?)			; bLibShutdown
?bLibInit@@3HA DD 01H DUP (?)				; bLibInit
_NvAPI_GPU_GetRamType DD 01H DUP (?)
_NvAPI_GPU_GetFBWidthAndLocation DD 01H DUP (?)
_NvAPI_GPU_GetPCIEInfo DD 01H DUP (?)
_NvAPI_GetPhysicalGPUFromGPUID DD 01H DUP (?)
_NvAPI_GetGPUIDFromPhysicalGPU DD 01H DUP (?)
?nv_hardware@NVAPI@sk@@3_NA DB 01H DUP (?)		; sk::NVAPI::nv_hardware
_BSS	ENDS
CONST	SEGMENT
$SG165888 DB	'DRS_SetSetting (hSession, hProfile, &autobias_val)', 00H
	ORG $+1
$SG165891 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165892 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165893 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165894 DB	'DRS_SetSetting (hSession, hProfile, &override_val)', 00H
	ORG $+1
$SG165897 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165898 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165899 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165900 DB	'DRS_SaveSettings (hSession)', 00H
$SG165902 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165903 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165904 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165905 DB	'DRS_DestroySession (hSession)', 00H
	ORG $+2
$SG166189 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166190 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166191 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166192 DB	'DRS_CreateSession (&hSession)', 00H
	ORG $+2
$SG166194 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166195 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166196 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166197 DB	'DRS_LoadSettings (hSession)', 00H
$SG166200 DB	'd', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 00H, 00H
$SG166203 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG166206 DB	's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG166209 DB	'a', 00H, 'f', 00H, 'r', 00H, 00H, 00H
$SG166212 DB	'a', 00H, 'f', 00H, 'r', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG166215 DB	's', 00H, 'f', 00H, 'r', 00H, 00H, 00H
$SG166219 DB	'3', 00H, 'a', 00H, 'f', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG166220 DB	'a', 00H, 'f', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 's', 00H, 'f', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG166221 DB	'a', 00H, 'f', 00H, 'r', 00H, '3', 00H, 00H, 00H
	ORG $+2
$SG166222 DB	'a', 00H, 'f', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 's', 00H, 'f', 00H, 'r', 00H, ' ', 00H, ' ', 00H, 'f'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, ' ', 00H, '3', 00H, 'a', 00H, 'f', 00H, 'r', 00H, 00H
	DB	00H
$SG166223 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, '>', 00H, '>', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'k', 00H
	DB	'n', 00H, 'o', 00H, 'w', 00H, 'n', 00H, ' ', 00H, 'S', 00H, 'L'
	DB	00H, 'I', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	':', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H, ','
	DB	00H, ' ', 00H, 'f', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, '''', 00H, 'A', 00H
	DB	'u', 00H, 't', 00H, 'o', 00H, '''', 00H, 00H, 00H
	ORG $+2
$SG166226 DB	'd', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 00H, 00H
$SG166229 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG166233 DB	'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
$SG166234 DB	'1', 00H, 00H, 00H
$SG166238 DB	't', 00H, 'w', 00H, 'o', 00H, 00H, 00H
$SG166239 DB	'2', 00H, 00H, 00H
$SG166243 DB	't', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 00H, 00H
$SG166244 DB	'3', 00H, 00H, 00H
$SG166248 DB	'f', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG166249 DB	'4', 00H, 00H, 00H
$SG166252 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166250 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, '>', 00H, '>', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'k', 00H
	DB	'n', 00H, 'o', 00H, 'w', 00H, 'n', 00H, ' ', 00H, 'S', 00H, 'L'
	DB	00H, 'I', 00H, ' ', 00H, 'G', 00H, 'P', 00H, 'U', 00H, ' ', 00H
	DB	'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ':', 00H, ' '
	DB	00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H, ',', 00H, ' ', 00H
	DB	'f', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, '''', 00H, 'A', 00H, 'u', 00H, 't'
	DB	00H, 'o', 00H, '''', 00H, 00H, 00H
$SG166253 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166254 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166255 DB	'DRS_FindApplicationByName ( hSession, (NvU16 *)app_name.'
	DB	'c_str (), &hProfile, &app )', 00H
$SG166258 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166259 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166260 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166261 DB	'DRS_CreateProfile (hSession, &custom_profile, &hProfile)'
	DB	00H
	ORG $+3
$SG166264 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166265 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166266 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166267 DB	'DRS_FindProfileByName ( hSession, (NvU16 *)friendly_name'
	DB	'.c_str (), &hProfile)', 00H
	ORG $+2
$SG166270 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166271 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166272 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166273 DB	'DRS_CreateApplication (hSession, hProfile, &app)', 00H
	ORG $+3
$SG166275 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166276 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166277 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166278 DB	'DRS_SaveSettings (hSession)', 00H
$SG166280 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166281 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166282 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166285 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166283 DB	'DRS_GetSetting (hSession, hProfile, render_mode_enum, &m'
	DB	'ode_val)', 00H
	ORG $+3
$SG166286 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166287 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166290 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166288 DB	'DRS_GetSetting (hSession, hProfile, gpu_count_enum, &gpu'
	DB	'_count_val)', 00H
$SG166291 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166292 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166296 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166293 DB	'DRS_GetSetting (hSession, hProfile, compat_bits_enum, &c'
	DB	'ompat_bits_val)', 00H
$SG166297 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166298 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166299 DB	'DRS_SetSetting (hSession, hProfile, &compat_bits_val)', 00H
	ORG $+2
$SG166301 DB	'I', 00H, 'n', 00H, 's', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'i', 00H, 'c', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'P', 00H
	DB	'r', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'g'
	DB	00H, 'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG166305 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166302 DB	'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'r', 00H, 'u', 00H, 'n', 00H, ' ', 00H, 't', 00H, 'h'
	DB	00H, 'i', 00H, 's', 00H, ' ', 00H, 'g', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, ' ', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'd'
	DB	00H, 'm', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'S', 00H, 'L', 00H, 'I'
	DB	00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'b', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	0dH, 00H, 0aH, 00H, 0dH, 00H, 0aH, 00H, 09H, 00H, '>', 00H, '>'
	DB	00H, ' ', 00H, 'P', 00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 'n'
	DB	00H, 'c', 00H, 'e', 00H, 'l', 00H, ' ', 00H, 'w', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 's', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'S', 00H, 'L', 00H
	DB	'I', 00H, ' ', 00H, 'O', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'r'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG166306 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166307 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166308 DB	'DRS_DestroySession (hSession)', 00H
	ORG $+2
$SG166312 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166313 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166314 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166315 DB	'DRS_SetSetting (hSession, hProfile, &mode_val)', 00H
	ORG $+1
$SG166318 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166319 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166320 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166321 DB	'DRS_SetSetting (hSession, hProfile, &gpu_count_val)', 00H
$SG166324 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166325 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166326 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166327 DB	'DRS_SaveSettings (hSession)', 00H
$SG166329 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166330 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166331 DB	'sk::NVAPI::SetSLIOverride', 00H
	ORG $+2
$SG166332 DB	'DRS_DestroySession (hSession)', 00H
	ORG $+2
$SG166390 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166391 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166392 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG165368 DB	'L', 00H, 'i', 00H, 'n', 00H, 'e', 00H, ' ', 00H, '%', 00H
	DB	'u', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, '%', 00H, 'h'
	DB	00H, 's', 00H, ' ', 00H, '(', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '(', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, ')', 00H, ')', 00H, ':', 00H, 0aH, 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H
	DB	'-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-', 00H, '-'
	DB	00H, '-', 00H, '-', 00H, '-', 00H, 0aH, 00H, 0aH, 00H, 'N', 00H
	DB	'v', 00H, 'A', 00H, 'P', 00H, 'I', 00H, '_', 00H, '%', 00H, 'h'
	DB	00H, 's', 00H, 0aH, 00H, 0aH, 00H, 09H, 00H, '>', 00H, '>', 00H
	DB	' ', 00H, '%', 00H, 'h', 00H, 's', 00H, ' ', 00H, '<', 00H, '<'
	DB	00H, 00H, 00H
	ORG $+2
$SG166393 DB	'DRS_CreateSession (&hSession)', 00H
	ORG $+2
$SG166395 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166396 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166397 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG166398 DB	'DRS_LoadSettings (hSession)', 00H
$SG166400 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166401 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166402 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG165382 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166403 DB	'DRS_FindApplicationByName ( hSession, (NvU16 *)app_name.'
	DB	'c_str (), &hProfile, &app )', 00H
$SG166407 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165383 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166408 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165384 DB	'sk::NVAPI::CountPhysicalGPUs', 00H
	ORG $+3
$SG166409 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG165385 DB	'EnumPhysicalGPUs (gpus, &gpu_count)', 00H
$SG166410 DB	'DRS_CreateProfile (hSession, &custom_profile, &hProfile)'
	DB	00H
	ORG $+3
$SG166413 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166414 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166415 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG166416 DB	'DRS_FindProfileByName ( hSession, (NvU16 *)friendly_name'
	DB	'.c_str (), &hProfile)', 00H
	ORG $+2
$SG166419 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166420 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166421 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG166422 DB	'DRS_CreateApplication (hSession, hProfile, &app)', 00H
	ORG $+3
$SG166424 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166425 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166426 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG166427 DB	'DRS_SaveSettings (hSession)', 00H
$SG166429 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166430 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166431 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG166432 DB	'DRS_CreateApplication (hSession, hProfile, &app)', 00H
	ORG $+3
$SG166434 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166435 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166436 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG166437 DB	'DRS_SaveSettings (hSession)', 00H
$SG166439 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166440 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166441 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG166442 DB	'DRS_SaveSettings (hSession)', 00H
$SG166444 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166445 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG166446 DB	'SK_NvAPI_AddLauncherToProf', 00H
	ORG $+1
$SG166447 DB	'DRS_DestroySession (hSession)', 00H
	ORG $+2
$SG166452 DB	'T', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H
	DB	'o', 00H, 'f', 00H, ' ', 00H, 'Z', 00H, 'e', 00H, 's', 00H, 't'
	DB	00H, 'i', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 00H, 00H
$SG165448 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165449 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165450 DB	'sk::NVAPI::EnumGPUs_DXGI', 00H
	ORG $+3
$SG165451 DB	'EnumPhysicalGPUs (_nv_dxgi_gpus, &gpu_count)', 00H
	ORG $+3
$SG165453 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165454 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165455 DB	'sk::NVAPI::EnumGPUs_DXGI', 00H
	ORG $+3
$SG165456 DB	'EnumPhysicalGPUs (_nv_dxgi_gpus, &gpu_count)', 00H
	ORG $+3
$SG166482 DB	'T', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H
	DB	'O', 00H, 'f', 00H, ' ', 00H, 'Z', 00H, 'e', 00H, 's', 00H, 't'
	DB	00H, 'i', 00H, 'r', 00H, 'i', 00H, 'a', 00H, '.', 00H, 'e', 00H
	DB	'x', 00H, 'e', 00H, 00H, 00H
$SG165458 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165459 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165460 DB	'sk::NVAPI::EnumGPUs_DXGI', 00H
	ORG $+3
$SG165461 DB	'GetLogicalGPUFromPhysicalGPU (_nv_dxgi_gpus [i], &logica'
	DB	'l)', 00H
	ORG $+1
$SG165463 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG166488 DB	00H, 00H
	ORG $+2
$SG165464 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165465 DB	'sk::NVAPI::EnumGPUs_DXGI', 00H
	ORG $+3
$SG165466 DB	'GetPhysicalGPUsFromLogicalGPU (logical, phys, &phys_coun'
	DB	't)', 00H
	ORG $+1
$SG165468 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165469 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165470 DB	'sk::NVAPI::EnumGPUs_DXGI', 00H
	ORG $+3
$SG165471 DB	'GPU_GetFullName (_nv_dxgi_gpus [i], name)', 00H
	ORG $+2
$SG165473 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165474 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165475 DB	'sk::NVAPI::EnumGPUs_DXGI', 00H
	ORG $+3
$SG165476 DB	'GPU_GetMemoryInfo (_nv_dxgi_gpus [i], &meminfo)', 00H
$SG165501 DB	'%', 00H, 'u', 00H, '.', 00H, '%', 00H, 'u', 00H, 00H, 00H
$SG165536 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165537 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165538 DB	'sk::NVAPI::InitializeLibrary', 00H
	ORG $+3
$SG165539 DB	'Initialize ()', 00H
	ORG $+2
$SG165542 DB	'n', 00H, 'v', 00H, 'a', 00H, 'p', 00H, 'i', 00H, '.', 00H
	DB	'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG165545 DB	'nvapi_QueryInterface', 00H
	ORG $+3
$SG165547 DB	'm', 00H, 'i', 00H, 's', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, '_', 00H, 'G', 00H, 'P', 00H, 'U', 00H, '_', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'm', 00H, 'T', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, ' ', 00H, 00H, 00H
$SG165549 DB	'm', 00H, 'i', 00H, 's', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, '_', 00H, 'G', 00H, 'P', 00H, 'U', 00H, '_', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'F', 00H, 'B', 00H, 'W', 00H, 'i', 00H, 'd'
	DB	00H, 't', 00H, 'h', 00H, 'A', 00H, 'n', 00H, 'd', 00H, 'L', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG165551 DB	'm', 00H, 'i', 00H, 's', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, '_', 00H, 'G', 00H, 'P', 00H, 'U', 00H, '_', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'P', 00H, 'C', 00H, 'I', 00H, 'E', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG165704 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165553 DB	'm', 00H, 'i', 00H, 's', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, '_', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'P', 00H, 'h', 00H
	DB	'y', 00H, 's', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'G'
	DB	00H, 'P', 00H, 'U', 00H, 'F', 00H, 'r', 00H, 'o', 00H, 'm', 00H
	DB	'G', 00H, 'P', 00H, 'U', 00H, 'I', 00H, 'D', 00H, ' ', 00H, 00H
	DB	00H
	ORG $+2
$SG165555 DB	'm', 00H, 'i', 00H, 's', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, '_', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'G', 00H, 'P', 00H
	DB	'U', 00H, 'I', 00H, 'D', 00H, 'F', 00H, 'r', 00H, 'o', 00H, 'm'
	DB	00H, 'P', 00H, 'h', 00H, 'y', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 'l', 00H, 'G', 00H, 'P', 00H, 'U', 00H, ' ', 00H, 00H
	DB	00H
	ORG $+2
$SG165556 DB	'u', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm'
	DB	00H, 'p', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H, ' ', 00H
	DB	'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'L', 00H, 'i', 00H, 'b'
	DB	00H, 'r', 00H, 'a', 00H, 'r', 00H, 'y', 00H, ' ', 00H, '(', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, ')', 00H, ' ', 00H, 00H, 00H
$SG165705 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165706 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165707 DB	'DRS_CreateSession (&hSession)', 00H
	ORG $+2
$SG165709 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165710 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165711 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165712 DB	'DRS_LoadSettings (hSession)', 00H
$SG165715 DB	'O', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'i', 00H
	DB	'd', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG165719 DB	'Y', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG165720 DB	'O', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165724 DB	'N', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG165725 DB	'O', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG165727 DB	'E', 00H, 'n', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
$SG165730 DB	'M', 00H, 'e', 00H, 't', 00H, 'h', 00H, 'o', 00H, 'd', 00H
	DB	00H, 00H
	ORG $+2
$SG165733 DB	'2', 00H, 'x', 00H, 'M', 00H, 'S', 00H, 'A', 00H, 'A', 00H
	DB	00H, 00H
	ORG $+2
$SG165736 DB	'4', 00H, 'x', 00H, 'M', 00H, 'S', 00H, 'A', 00H, 'A', 00H
	DB	00H, 00H
	ORG $+2
$SG165739 DB	'8', 00H, 'x', 00H, 'M', 00H, 'S', 00H, 'A', 00H, 'A', 00H
	DB	00H, 00H
	ORG $+2
$SG165742 DB	'1', 00H, '6', 00H, 'x', 00H, 'M', 00H, 'S', 00H, 'A', 00H
	DB	'A', 00H, 00H, 00H
$SG165744 DB	'0', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG165747 DB	'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG165750 DB	'2', 00H, 'x', 00H, 'S', 00H, 'G', 00H, 'S', 00H, 'S', 00H
	DB	'A', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG165753 DB	'4', 00H, 'x', 00H, 'S', 00H, 'G', 00H, 'S', 00H, 'S', 00H
	DB	'A', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG165756 DB	'8', 00H, 'x', 00H, 'S', 00H, 'G', 00H, 'S', 00H, 'S', 00H
	DB	'A', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG165758 DB	'0', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG165761 DB	'A', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'A', 00H, 'l', 00H
	DB	'i', 00H, 'a', 00H, 's', 00H, 'F', 00H, 'i', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+2
$SG165765 DB	'O', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165766 DB	'Y', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG165769 DB	'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'B', 00H, 'i', 00H
	DB	'a', 00H, 's', 00H, 'A', 00H, 'd', 00H, 'j', 00H, 'u', 00H, 's'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG165773 DB	'O', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165774 DB	'Y', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG165776 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'b', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, 'B', 00H, 'i', 00H, 't', 00H, 's', 00H, 00H, 00H
$SG165778 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165779 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165780 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165781 DB	'DRS_FindApplicationByName ( hSession, (NvU16 *)app_name.'
	DB	'c_str (), &hProfile, &app )', 00H
$SG165784 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165785 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165786 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165787 DB	'DRS_CreateProfile (hSession, &custom_profile, &hProfile)'
	DB	00H
	ORG $+3
$SG165790 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165791 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165792 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165793 DB	'DRS_FindProfileByName ( hSession, (NvU16 *)friendly_name'
	DB	'.c_str (), &hProfile)', 00H
	ORG $+2
$SG165797 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165798 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165799 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165800 DB	'DRS_CreateApplication (hSession, hProfile, &app)', 00H
	ORG $+3
$SG165802 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165803 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165804 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165805 DB	'DRS_SaveSettings (hSession)', 00H
$SG165806 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, 'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'c', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'a'
	DB	00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'p', 00H, 'r'
	DB	00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '''', 00H, '%', 00H, 's'
	DB	00H, '''', 00H, ' ', 00H, '(', 00H, '%', 00H, 's', 00H, ')', 00H
	DB	00H, 00H
$SG165808 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165809 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165810 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165811 DB	'DRS_DestroySession (hSession)', 00H
	ORG $+2
$SG165813 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165814 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165815 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165816 DB	'DRS_GetSetting (hSession, hProfile, method_enum, &method'
	DB	'_val)', 00H
	ORG $+2
$SG165818 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165819 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165820 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165823 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165821 DB	'DRS_GetSetting (hSession, hProfile, replay_mode_enum, &r'
	DB	'eplay_mode_val)', 00H
$SG165824 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165825 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165826 DB	'DRS_GetSetting (hSession, hProfile, aa_fix_enum, &aa_fix'
	DB	'_val)', 00H
	ORG $+2
$SG165828 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165829 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165830 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165833 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165831 DB	'DRS_GetSetting (hSession, hProfile, override_enum, &over'
	DB	'ride_val)', 00H
	ORG $+2
$SG165834 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165835 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165838 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165836 DB	'DRS_GetSetting (hSession, hProfile, autobias_enum, &auto'
	DB	'bias_val)', 00H
	ORG $+2
$SG165839 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165840 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165844 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165841 DB	'DRS_GetSetting (hSession, hProfile, compat_bits_enum, &c'
	DB	'ompat_bits_val)', 00H
$SG165845 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165846 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165847 DB	'DRS_SetSetting (hSession, hProfile, &compat_bits_val)', 00H
	ORG $+2
$SG165849 DB	'I', 00H, 'n', 00H, 's', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'i', 00H, 'c', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'P', 00H
	DB	'r', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'g'
	DB	00H, 'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG165853 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165850 DB	'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'r', 00H, 'u', 00H, 'n', 00H, ' ', 00H, 't', 00H, 'h'
	DB	00H, 'i', 00H, 's', 00H, ' ', 00H, 'g', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, ' ', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'd'
	DB	00H, 'm', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'A', 00H, 'n', 00H, 't'
	DB	00H, 'i', 00H, '-', 00H, 'A', 00H, 'l', 00H, 'i', 00H, 'a', 00H
	DB	's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'c', 00H, 'o'
	DB	00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b', 00H
	DB	'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'b'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, 0dH, 00H, 0aH, 00H, 0dH, 00H
	DB	0aH, 00H, 09H, 00H, '>', 00H, '>', 00H, ' ', 00H, 'P', 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l'
	DB	00H, ' ', 00H, 'w', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H
	DB	'd', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 'A', 00H, 'A', 00H, ' ', 00H, 'O', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 'r', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 00H
	DB	00H
$SG165854 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165855 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165856 DB	'DRS_DestroySession (hSession)', 00H
	ORG $+2
$SG165858 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165859 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165860 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165861 DB	'DRS_DestroySession (hSession)', 00H
	ORG $+2
$SG165864 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165865 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165866 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165867 DB	'DRS_SetSetting (hSession, hProfile, &method_val)', 00H
	ORG $+3
$SG165870 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165871 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165872 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165873 DB	'DRS_SetSetting (hSession, hProfile, &replay_mode_val)', 00H
	ORG $+2
$SG165878 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165879 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165880 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
	ORG $+3
$SG165881 DB	'DRS_SetSetting (hSession, hProfile, &aa_fix_val)', 00H
	ORG $+3
$SG165885 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'N', 00H, 'V', 00H, 'A', 00H, 'P', 00H, 'I', 00H
	DB	' ', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG165882 DB	'[', 00H, ' ', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'A', 00H
	DB	'P', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ']', 00H, ' '
	DB	00H, '*', 00H, '*', 00H, '*', 00H, ' ', 00H, 'C', 00H, 'a', 00H
	DB	'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 't', 00H, ' ', 00H, 'N', 00H, 'v', 00H, 'D', 00H, 'R', 00H
	DB	'S', 00H, ' ', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, '''', 00H, '%'
	DB	00H, 'x', 00H, '''', 00H, ' ', 00H, 'a', 00H, 's', 00H, ' ', 00H
	DB	'a', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 'l', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	',', 00H, ' ', 00H, 's', 00H, 'k', 00H, 'i', 00H, 'p', 00H, 'p'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, '.', 00H, '.', 00H
	DB	00H, 00H
	ORG $+2
$SG165886 DB	'c:\users\andon\source\repos\specialk\src\nvapi.cpp', 00H
	ORG $+1
$SG165887 DB	'SK_NvAPI_SetAntiAliasingOverride', 00H
CONST	ENDS
PUBLIC	?wcsstr@@YAPA_WPA_WPB_W@Z			; wcsstr
PUBLIC	_wmemcmp
PUBLIC	_wmemcpy
PUBLIC	_wmemmove
PUBLIC	?max@?$numeric_limits@I@std@@SAIXZ		; std::numeric_limits<unsigned int>::max
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?compare@?$char_traits@_W@std@@SAHQB_W0I@Z	; std::char_traits<wchar_t>::compare
PUBLIC	?length@?$char_traits@_W@std@@SAIQB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
PUBLIC	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	?InitializeLibrary@NVAPI@sk@@YAHPB_W@Z		; sk::NVAPI::InitializeLibrary
PUBLIC	?UnloadLibrary@NVAPI@sk@@YAHXZ			; sk::NVAPI::UnloadLibrary
PUBLIC	?CountSLIGPUs@NVAPI@sk@@YAHXZ			; sk::NVAPI::CountSLIGPUs
PUBLIC	?CountPhysicalGPUs@NVAPI@sk@@YAHXZ		; sk::NVAPI::CountPhysicalGPUs
PUBLIC	?EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ; sk::NVAPI::EnumGPUs_DXGI
PUBLIC	?EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ; sk::NVAPI::EnumSLIGPUs
PUBLIC	?GetSLIState@NVAPI@sk@@YA?AUNV_GET_CURRENT_SLI_STATE_V2@@PAUIUnknown@@@Z ; sk::NVAPI::GetSLIState
PUBLIC	?FindGPUByDXGIName@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@PB_W@Z ; sk::NVAPI::FindGPUByDXGIName
PUBLIC	?SetAppFriendlyName@NVAPI@sk@@YAXPB_W@Z		; sk::NVAPI::SetAppFriendlyName
PUBLIC	?SetFramerateLimit@NVAPI@sk@@YAHI@Z		; sk::NVAPI::SetFramerateLimit
PUBLIC	?SetAntiAliasingOverride@NVAPI@sk@@YAHPAPB_W@Z	; sk::NVAPI::SetAntiAliasingOverride
PUBLIC	?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z ; sk::NVAPI::SetSLIOverride
PUBLIC	?GetDriverVersion@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAK@Z ; sk::NVAPI::GetDriverVersion
PUBLIC	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
PUBLIC	?SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z	; SK_NvAPI_SetAntiAliasingOverride
PUBLIC	?SK_NvAPI_SetFramerateLimit@@YGHI@Z		; SK_NvAPI_SetFramerateLimit
PUBLIC	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?SK_NvAPI_SetAppFriendlyName@@YGXPB_W@Z		; SK_NvAPI_SetAppFriendlyName
PUBLIC	?SK_NvAPI_IsInit@@YGHXZ				; SK_NvAPI_IsInit
PUBLIC	?SK_NvAPI_SetAppName@@YGXPB_W@Z			; SK_NvAPI_SetAppName
PUBLIC	?SK_NvAPI_SetLauncher@@YGXPB_W@Z		; SK_NvAPI_SetLauncher
PUBLIC	?SK_NvAPI_AddLauncherToProf@@YGHXZ		; SK_NvAPI_AddLauncherToProf
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z		; std::addressof<wchar_t *>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$_Unfancy@_W@std@@YAPA_WPA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z		; std::forward<wchar_t * &>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z ; std::_Traits_equal<std::char_traits<wchar_t> >
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
PUBLIC	?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
PUBLIC	?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
PUBLIC	?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp__wcsstr:PROC
EXTRN	__imp___wcsdup:PROC
EXTRN	__imp___wcsicmp:PROC
EXTRN	__imp___wcslwr:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__GetModuleHandleExW@12:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__lstrcpyW@8:PROC
EXTRN	__imp__lstrlenW@4:PROC
EXTRN	__imp__MessageBoxW@16:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__wcstoul:PROC
EXTRN	__imp__exit:PROC
EXTRN	_NvAPI_SYS_GetDriverAndBranchVersion:PROC
EXTRN	_NvAPI_GPU_GetMemoryInfo:PROC
EXTRN	_NvAPI_EnumPhysicalGPUs:PROC
EXTRN	_NvAPI_D3D_GetCurrentSLIState:PROC
EXTRN	_NvAPI_Initialize:PROC
EXTRN	_NvAPI_Unload:PROC
EXTRN	_NvAPI_GetErrorMessage:PROC
EXTRN	_NvAPI_GetLogicalGPUFromPhysicalGPU:PROC
EXTRN	_NvAPI_GetPhysicalGPUsFromLogicalGPU:PROC
EXTRN	_NvAPI_GPU_GetFullName:PROC
EXTRN	_NvAPI_DRS_CreateSession:PROC
EXTRN	_NvAPI_DRS_DestroySession:PROC
EXTRN	_NvAPI_DRS_LoadSettings:PROC
EXTRN	_NvAPI_DRS_SaveSettings:PROC
EXTRN	_NvAPI_DRS_CreateProfile:PROC
EXTRN	_NvAPI_DRS_FindProfileByName:PROC
EXTRN	_NvAPI_DRS_CreateApplication:PROC
EXTRN	_NvAPI_DRS_FindApplicationByName:PROC
EXTRN	_NvAPI_DRS_SetSetting:PROC
EXTRN	_NvAPI_DRS_GetSetting:PROC
EXTRN	__snwprintf:PROC
EXTRN	_swprintf:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ:PROC		; SK_GetDLLRole
EXTRN	?LogEx@iSK_Logger@@UAAX_NQB_WZZ:PROC		; iSK_Logger::LogEx
EXTRN	?Log@iSK_Logger@@UAAXQB_WZZ:PROC		; iSK_Logger::Log
EXTRN	?SK_IsAdmin@@YA_NXZ:PROC			; SK_IsAdmin
EXTRN	?SK_ElevateToAdmin@@YAXXZ:PROC			; SK_ElevateToAdmin
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?config@@3Usk_config_t@@A:BYTE			; config
EXTRN	?dll_log@@3UiSK_Logger@@A:BYTE			; dll_log
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
	ALIGN	4

?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A DB 018H DUP (?) ; sk::NVAPI::app_name
?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A DB 018H DUP (?) ; sk::NVAPI::friendly_name
?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A DB 018H DUP (?) ; sk::NVAPI::launcher_name
?_nv_sli_adapters@@3PAUDXGI_ADAPTER_DESC@@A DB 04900H DUP (?) ; _nv_sli_adapters
_BSS	ENDS
;	COMDAT ?enumerated@?1??EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4_NA
_BSS	SEGMENT
?enumerated@?1??EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4_NA DB 01H DUP (?) ; `sk::NVAPI::EnumGPUs_DXGI'::`2'::enumerated
_BSS	ENDS
;	COMDAT ?hLib@?BE@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4PAUHINSTANCE__@@A
_BSS	SEGMENT
?hLib@?BE@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4PAUHINSTANCE__@@A DD 01H DUP (?) ; `sk::NVAPI::InitializeLibrary'::`20'::hLib
_BSS	ENDS
;	COMDAT ?NvAPI_QueryInterface@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4P6APAXI@ZA
_BSS	SEGMENT
?NvAPI_QueryInterface@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4P6APAXI@ZA DD 01H DUP (?) ; `sk::NVAPI::InitializeLibrary'::`23'::NvAPI_QueryInterface
_BSS	ENDS
;	COMDAT ?$TSS0@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4HA
_BSS	SEGMENT
?$TSS0@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-23',sk::NVAPI::itializeLibrary, ?? :: ?? ::HA::AHPB_W::Z::AHPB_W>
_BSS	ENDS
;	COMDAT ?init@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4_NA
_BSS	SEGMENT
?init@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4_NA DB 01H DUP (?) ; `SK_NvAPI_SetAntiAliasingOverride'::`2'::init
_BSS	ENDS
;	COMDAT ?cs_aa_override@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4U_RTL_CRITICAL_SECTION@@A
_BSS	SEGMENT
?cs_aa_override@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?) ; `SK_NvAPI_SetAntiAliasingOverride'::`2'::cs_aa_override
_BSS	ENDS
;	COMDAT ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A
_BSS	SEGMENT
?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A DB 0500cH DUP (?) ; `sk::NVAPI::SetSLIOverride'::`2'::app
_BSS	ENDS
;	COMDAT ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A
_BSS	SEGMENT
?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A DB 0500cH DUP (?) ; `SK_NvAPI_AddLauncherToProf'::`2'::app
_BSS	ENDS
CRT$XCU	SEGMENT
?friendly_name$initializer$@NVAPI@sk@@3P6AXXZA DD FLAT:??__Efriendly_name@NVAPI@sk@@YAXXZ ; sk::NVAPI::friendly_name$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ?nv_sli_count@?1??EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4HA
_DATA	SEGMENT
?nv_sli_count@?1??EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4HA DD 0ffffffffH ; `sk::NVAPI::EnumSLIGPUs'::`2'::nv_sli_count
_DATA	ENDS
;	COMDAT ?nv_sli_count@?1??CountSLIGPUs@NVAPI@sk@@YAHXZ@4HA
_DATA	SEGMENT
?nv_sli_count@?1??CountSLIGPUs@NVAPI@sk@@YAHXZ@4HA DD 0ffffffffH ; `sk::NVAPI::CountSLIGPUs'::`2'::nv_sli_count
_DATA	ENDS
;	COMDAT ?nv_gpu_count@?1??CountPhysicalGPUs@NVAPI@sk@@YAHXZ@4HA
_DATA	SEGMENT
?nv_gpu_count@?1??CountPhysicalGPUs@NVAPI@sk@@YAHXZ@4HA DD 0ffffffffH ; `sk::NVAPI::CountPhysicalGPUs'::`2'::nv_gpu_count
_DATA	ENDS
xdata$x	SEGMENT
__unwindtable$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z$3
__ehfuncinfo$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$18
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?app_name$initializer$@NVAPI@sk@@3P6AXXZA DD FLAT:??__Eapp_name@NVAPI@sk@@YAXXZ ; sk::NVAPI::app_name$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?launcher_name$initializer$@NVAPI@sk@@3P6AXXZA DD FLAT:??__Elauncher_name@NVAPI@sk@@YAXXZ ; sk::NVAPI::launcher_name$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 839  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:

; 841  : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 846  : 		_Ptr->~_Uty();
; 847  : 		}

	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z PROC ; std::_Traits_equal<std::char_traits<wchar_t> >, COMDAT

; 24   : 	{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	esi, DWORD PTR __Left_size$[ebp]
	cmp	esi, DWORD PTR __Right_size$[ebp]
	jne	SHORT $LN3@Traits_equ
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Left$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN19@Traits_equ
$LL11@Traits_equ:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	jne	SHORT $LN15@Traits_equ

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	edx, 2
	add	ecx, 2
	sub	esi, 1
	jne	SHORT $LL11@Traits_equ
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	al, 1
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
$LN15@Traits_equ:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	movzx	eax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	jne	SHORT $LN3@Traits_equ
$LN19@Traits_equ:
	mov	al, 1
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
$LN3@Traits_equ:

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	xor	al, al
	pop	esi

; 26   : 	}

	pop	ebp
	ret	0
??$_Traits_equal@U?$char_traits@_W@std@@@std@@YA_NQB_WI0I@Z ENDP ; std::_Traits_equal<std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT

; 958  : 		{	// construct _Objty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:

; 959  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 960  : 		}

	pop	ebp
	ret	0
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\type_traits
;	COMDAT ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z PROC		; std::forward<wchar_t * &>, COMDAT

; 1334 : 	{	// forward an lvalue as either an lvalue or an rvalue

	npad	2
	push	ebp
	mov	ebp, esp

; 1335 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1336 : 	}

	pop	ebp
	ret	0
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT

; 965  : 		_Al.destroy(_Ptr);
; 966  : 		}

	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx

; 1095 : 		{	// construct _Ty(_Types...) at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:

; 1096 : 		_Mytraits::construct(*this, _Ptr,
; 1097 : 			_STD forward<_Types>(_Args)...);
; 1098 : 		}

	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 22   : 	{	// return smaller of _Left and _Right

	npad	2
	push	ebp
	mov	ebp, esp

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	cmovb	eax, edx

; 24   : 	}

	pop	ebp
	ret	0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@_W@std@@YAPA_WPA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 642  : 	{	// do nothing for plain pointers

	npad	2
	push	ebp
	mov	ebp, esp

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]

; 644  : 	}

	pop	ebp
	ret	0
??$_Unfancy@_W@std@@YAPA_WPA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx

; 1103 : 		_Mytraits::destroy(*this, _Ptr);
; 1104 : 		}

	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
;	COMDAT ??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z PROC		; std::addressof<wchar_t *>, COMDAT

; 629  : 	{	// return address of _Val

	npad	2
	push	ebp
	mov	ebp, esp

; 630  : 	return (__builtin_addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]

; 631  : 	}

	pop	ebp
	ret	0
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z ENDP		; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 304  : 		}

	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??__Flauncher_name@NVAPI@sk@@YAXXZ
text$yd	SEGMENT
??__Flauncher_name@NVAPI@sk@@YAXXZ PROC			; sk::NVAPI::`dynamic atexit destructor for 'launcher_name'', COMDAT

; 3606 : 		this->_Orphan_all();

	mov	ecx, OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
	call	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN7@dynamic
	push	esi

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;

	mov	esi, DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A

; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));

	mov	ecx, OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
	push	OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
	call	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	mov	eax, DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	esi
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
$LN7@dynamic:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+16, 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 7

; 2217 : 		}

	mov	ecx, OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A, ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	jmp	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
??__Flauncher_name@NVAPI@sk@@YAXXZ ENDP			; sk::NVAPI::`dynamic atexit destructor for 'launcher_name''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
;	COMDAT ??__Elauncher_name@NVAPI@sk@@YAXXZ
text$di	SEGMENT
??__Elauncher_name@NVAPI@sk@@YAXXZ PROC			; sk::NVAPI::`dynamic initializer for 'launcher_name'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 302  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+16, 0

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	OFFSET $SG166488
	mov	ecx, OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A, ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1418 : std::wstring NVAPI::launcher_name = L"";

	push	OFFSET ??__Flauncher_name@NVAPI@sk@@YAXXZ ; sk::NVAPI::`dynamic atexit destructor for 'launcher_name''
	call	_atexit
	pop	ecx
	ret	0
??__Elauncher_name@NVAPI@sk@@YAXXZ ENDP			; sk::NVAPI::`dynamic initializer for 'launcher_name''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??__Fapp_name@NVAPI@sk@@YAXXZ
text$yd	SEGMENT
??__Fapp_name@NVAPI@sk@@YAXXZ PROC			; sk::NVAPI::`dynamic atexit destructor for 'app_name'', COMDAT

; 3606 : 		this->_Orphan_all();

	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	call	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN7@dynamic
	push	esi

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;

	mov	esi, DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A

; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));

	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	push	OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	call	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	mov	eax, DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	esi
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
$LN7@dynamic:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+16, 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 7

; 2217 : 		}

	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A, ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	jmp	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
??__Fapp_name@NVAPI@sk@@YAXXZ ENDP			; sk::NVAPI::`dynamic atexit destructor for 'app_name''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
;	COMDAT ??__Eapp_name@NVAPI@sk@@YAXXZ
text$di	SEGMENT
??__Eapp_name@NVAPI@sk@@YAXXZ PROC			; sk::NVAPI::`dynamic initializer for 'app_name'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 302  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	21					; 00000015H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+16, 0

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	OFFSET $SG166482
	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A, ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1417 : std::wstring NVAPI::app_name      = L"Tales Of Zestiria.exe";

	push	OFFSET ??__Fapp_name@NVAPI@sk@@YAXXZ	; sk::NVAPI::`dynamic atexit destructor for 'app_name''
	call	_atexit
	pop	ecx
	ret	0
??__Eapp_name@NVAPI@sk@@YAXXZ ENDP			; sk::NVAPI::`dynamic initializer for 'app_name''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??__Ffriendly_name@NVAPI@sk@@YAXXZ
text$yd	SEGMENT
??__Ffriendly_name@NVAPI@sk@@YAXXZ PROC			; sk::NVAPI::`dynamic atexit destructor for 'friendly_name'', COMDAT

; 3606 : 		this->_Orphan_all();

	mov	ecx, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	call	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN7@dynamic
	push	esi

; 3609 : 			{
; 3610 : 			pointer _Ptr = _My_data._Bx._Ptr;

	mov	esi, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A

; 3611 : 			auto& _Al = this->_Getal();
; 3612 : 			_Al.destroy(_STD addressof(_My_data._Bx._Ptr));

	mov	ecx, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	push	OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	call	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	mov	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	esi
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
	pop	esi
$LN7@dynamic:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+16, 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 7

; 2217 : 		}

	mov	ecx, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A, ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	jmp	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
??__Ffriendly_name@NVAPI@sk@@YAXXZ ENDP			; sk::NVAPI::`dynamic atexit destructor for 'friendly_name''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
;	COMDAT ??__Efriendly_name@NVAPI@sk@@YAXXZ
text$di	SEGMENT
??__Efriendly_name@NVAPI@sk@@YAXXZ PROC			; sk::NVAPI::`dynamic initializer for 'friendly_name'', COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility

; 302  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	ecx, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	17					; 00000011H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+16, 0

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	OFFSET $SG166452
	mov	ecx, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A, ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1416 : std::wstring NVAPI::friendly_name = L"Tales of Zestiria";

	push	OFFSET ??__Ffriendly_name@NVAPI@sk@@YAXXZ ; sk::NVAPI::`dynamic atexit destructor for 'friendly_name''
	call	_atexit
	pop	ecx
	ret	0
??__Efriendly_name@NVAPI@sk@@YAXXZ ENDP			; sk::NVAPI::`dynamic initializer for 'friendly_name''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
$T1 = -24640						; size = 20492
$T2 = -24640						; size = 20492
_custom_profile$3 = -4148				; size = 4116
$T4 = -32						; size = 24
$T5 = -32						; size = 24
$T6 = -32						; size = 24
$T7 = -32						; size = 24
$T8 = -32						; size = 24
$T9 = -32						; size = 24
$T10 = -32						; size = 24
$T11 = -32						; size = 24
$T12 = -32						; size = 24
$T13 = -32						; size = 24
$T14 = -32						; size = 24
_hProfile$ = -8						; size = 4
_hSession$ = -4						; size = 4
?SK_NvAPI_AddLauncherToProf@@YGHXZ PROC			; SK_NvAPI_AddLauncherToProf

; 1310 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, 24640				; 00006040H
	call	__chkstk

; 1311 :   if (! nv_hardware)

	cmp	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware
	jne	SHORT $LN2@SK_NvAPI_A

; 1312 :     return FALSE;

	xor	eax, eax

; 1413 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@SK_NvAPI_A:

; 1317 :   NVAPI_CALL (DRS_CreateSession (&hSession));

	lea	eax, DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _hSession$[ebp], 0
	push	edi
	push	eax
	call	_NvAPI_DRS_CreateSession
	mov	edi, DWORD PTR __imp__MessageBoxW@16
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN53@SK_NvAPI_A
	test	eax, eax
	je	SHORT $LN53@SK_NvAPI_A
	push	OFFSET $SG166391
	push	OFFSET $SG166392
	push	1317					; 00000525H
	push	OFFSET $SG166393
	push	eax
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN43@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN43@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1317 :   NVAPI_CALL (DRS_CreateSession (&hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166390
	push	eax
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T14[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN53@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T14[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN53@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1318 :   NVAPI_CALL (DRS_LoadSettings  (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_LoadSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN102@SK_NvAPI_A
	test	eax, eax
	je	SHORT $LN102@SK_NvAPI_A
	push	OFFSET $SG166396
	push	OFFSET $SG166397
	push	1318					; 00000526H
	push	OFFSET $SG166398
	push	eax
	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN92@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN92@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1318 :   NVAPI_CALL (DRS_LoadSettings  (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166395
	push	eax
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T13[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN102@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T13[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN102@SK_NvAPI_A:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1329 :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	lea	ecx, DWORD PTR _hProfile$[ebp]
	push	ebx
	push	esi
	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1320 :   NvDRSProfileHandle hProfile  = { };

	mov	DWORD PTR _hProfile$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	eax, DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1329 :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	push	ecx
	push	eax
	push	DWORD PTR _hSession$[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	mov	DWORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A, 282636 ; 0004500cH
	call	_NvAPI_DRS_FindApplicationByName
	add	esp, 16					; 00000010H
	mov	esi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN170@SK_NvAPI_A
	test	esi, esi
	je	SHORT $LN170@SK_NvAPI_A
	push	OFFSET $SG166401
	push	OFFSET $SG166402
	push	1333					; 00000535H
	push	OFFSET $SG166403
	lea	eax, DWORD PTR $T12[ebp]
	push	esi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN160@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN160@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1329 :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	push	327744					; 00050040H
	push	OFFSET $SG166400
	push	eax
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T12[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN170@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T12[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN170@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1337 :   if (ret == NVAPI_EXECUTABLE_NOT_FOUND)

	cmp	esi, -166				; ffffff5aH
	jne	$LN6@SK_NvAPI_A

; 1338 :   {
; 1339 :     NVDRS_PROFILE custom_profile = { };

	push	4116					; 00001014H
	lea	eax, DWORD PTR _custom_profile$3[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1340 : 
; 1341 :     custom_profile.isPredefined = false;

	mov	DWORD PTR _custom_profile$3[ebp+4104], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	ebx, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	mov	eax, ebx
	cmovae	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1342 :     lstrcpyW ((wchar_t *)custom_profile.profileName, friendly_name.c_str ());

	push	eax
	lea	eax, DWORD PTR _custom_profile$3[ebp+4]
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8

; 1349 :       NVAPI_CALL2 (DRS_CreateProfile (hSession, &custom_profile, &hProfile), ret);

	lea	eax, DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _custom_profile$3[ebp], 69652	; 00011014H
	push	eax
	lea	eax, DWORD PTR _custom_profile$3[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	push	eax
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_CreateProfile
	add	esp, 12					; 0000000cH
	mov	esi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN8@SK_NvAPI_A
	test	esi, esi
	je	SHORT $LN8@SK_NvAPI_A
	push	OFFSET $SG166408
	push	OFFSET $SG166409
	push	1349					; 00000545H
	push	OFFSET $SG166410
	lea	eax, DWORD PTR $T11[ebp]
	push	esi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN228@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN228@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1349 :       NVAPI_CALL2 (DRS_CreateProfile (hSession, &custom_profile, &hProfile), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166407
	push	eax
	push	0
	call	edi
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN8@SK_NvAPI_A:

; 1350 :     }
; 1351 :     NVAPI_VERBOSE ()

	mov	BYTE PTR ?nvapi_silent@@3_NA, 0

; 1352 : 
; 1353 :     // Add the application name to the profile, if a profile already exists
; 1354 :     if (ret == NVAPI_PROFILE_NAME_IN_USE)

	cmp	esi, -164				; ffffff5cH
	jne	SHORT $LN10@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1355 :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	lea	ecx, DWORD PTR _hProfile$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ebx
	cmovae	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1355 :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	push	ecx
	push	eax
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_FindProfileByName
	add	esp, 12					; 0000000cH
	mov	esi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN10@SK_NvAPI_A
	test	esi, esi
	je	SHORT $LN522@SK_NvAPI_A
	push	OFFSET $SG166414
	push	OFFSET $SG166415
	push	1358					; 0000054eH
	push	OFFSET $SG166416
	lea	eax, DWORD PTR $T10[ebp]
	push	esi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN266@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN266@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1355 :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	push	327744					; 00050040H
	push	OFFSET $SG166413
	push	eax
	push	0
	call	edi
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN10@SK_NvAPI_A:

; 1356 :                                               (NvU16 *)friendly_name.c_str (),
; 1357 :                                                 &hProfile),
; 1358 :                       ret );
; 1359 : 
; 1360 :     if (ret == NVAPI_OK)

	test	esi, esi
	jne	$LN15@SK_NvAPI_A
$LN522@SK_NvAPI_A:

; 1361 :     {
; 1362 :        app         = {   };

	push	20492					; 0000500cH
	lea	eax, DWORD PTR $T2[ebp]
	push	0
	push	eax
	call	_memset
	push	20492					; 0000500cH
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A
	call	_memcpy

; 1366 :       lstrcpyW ((wchar_t *)app.userFriendlyName, friendly_name.c_str ());

	mov	esi, DWORD PTR __imp__lstrcpyW@8
	add	esp, 24					; 00000018H
	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1363 :       *app.appName = L'\0';

	mov	WORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+8, ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	ebx, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1366 :       lstrcpyW ((wchar_t *)app.userFriendlyName, friendly_name.c_str ());

	push	ebx
	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+4104
	call	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
	cmovae	eax, DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1367 :       lstrcpyW ((wchar_t *)app.launcher,         launcher_name.c_str ());

	push	eax
	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+8200
	call	esi

; 1368 :       app.version      = NVDRS_APPLICATION_VER;
; 1369 :       app.isPredefined = false;
; 1370 :       app.isMetro      = false;

	and	DWORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+16392, -2 ; fffffffeH

; 1372 :       NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);

	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A, 282636 ; 0004500cH
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+4, 0
	call	_NvAPI_DRS_CreateApplication
	add	esp, 12					; 0000000cH
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN12@SK_NvAPI_A
	test	eax, eax
	je	SHORT $LN12@SK_NvAPI_A
	push	OFFSET $SG166420
	push	OFFSET $SG166421
	push	1372					; 0000055cH
	push	OFFSET $SG166422
	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN323@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN323@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1372 :       NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166419
	push	eax
	push	0
	call	edi
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN12@SK_NvAPI_A:

; 1373 :       NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_SaveSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	$LN15@SK_NvAPI_A
	test	eax, eax
	je	$LN15@SK_NvAPI_A
	push	OFFSET $SG166425
	push	OFFSET $SG166426
	push	1373					; 0000055dH
	push	OFFSET $SG166427
	push	eax
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN342@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN342@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1373 :       NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166424

; 1374 :     }
; 1375 :   } else {

	jmp	$LN523@SK_NvAPI_A
$LN6@SK_NvAPI_A:

; 1376 :      app         = {   };

	push	20492					; 0000500cH
	lea	eax, DWORD PTR $T1[ebp]
	push	0
	push	eax
	call	_memset
	push	20492					; 0000500cH
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A
	call	_memcpy

; 1380 :     lstrcpyW ((wchar_t *)app.userFriendlyName, friendly_name.c_str ());

	mov	esi, DWORD PTR __imp__lstrcpyW@8
	xor	eax, eax
	add	esp, 24					; 00000018H
	mov	WORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+8, ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	cmovae	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1380 :     lstrcpyW ((wchar_t *)app.userFriendlyName, friendly_name.c_str ());

	push	eax
	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+4104
	call	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
	cmovae	eax, DWORD PTR ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1381 :     lstrcpyW ((wchar_t *)app.launcher,         launcher_name.c_str ());

	push	eax
	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+8200
	call	esi

; 1382 :     app.version      = NVDRS_APPLICATION_VER;
; 1383 :     app.isPredefined = false;
; 1384 :     app.isMetro      = false;

	and	DWORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+16392, -2 ; fffffffeH

; 1386 :     NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);

	push	OFFSET ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A, 282636 ; 0004500cH
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR ?app@?1??SK_NvAPI_AddLauncherToProf@@YGHXZ@4U_NVDRS_APPLICATION_V4@@A+4, 0
	call	_NvAPI_DRS_CreateApplication
	add	esp, 12					; 0000000cH
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN14@SK_NvAPI_A
	test	eax, eax
	je	SHORT $LN14@SK_NvAPI_A
	push	OFFSET $SG166430
	push	OFFSET $SG166431
	push	1386					; 0000056aH
	push	OFFSET $SG166432
	push	eax
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN399@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN399@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1386 :     NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166429
	push	eax
	push	0
	call	edi
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN14@SK_NvAPI_A:

; 1387 :     NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_SaveSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN15@SK_NvAPI_A
	test	eax, eax
	je	SHORT $LN15@SK_NvAPI_A
	push	OFFSET $SG166435
	push	OFFSET $SG166436
	push	1387					; 0000056bH
	push	OFFSET $SG166437
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN418@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN418@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1387 :     NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166434
$LN523@SK_NvAPI_A:
	push	eax
	push	0
	call	edi
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN15@SK_NvAPI_A:

; 1390 :   NVAPI_CALL (DRS_SaveSettings   (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_SaveSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	pop	esi
	pop	ebx
	je	SHORT $LN447@SK_NvAPI_A
	test	eax, eax
	je	SHORT $LN447@SK_NvAPI_A
	push	OFFSET $SG166440
	push	OFFSET $SG166441
	push	1390					; 0000056eH
	push	OFFSET $SG166442
	push	eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN437@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN437@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1390 :   NVAPI_CALL (DRS_SaveSettings   (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166439
	push	eax
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T5[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN447@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T5[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN447@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1391 :   NVAPI_CALL (DRS_DestroySession (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_DestroySession
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN496@SK_NvAPI_A
	test	eax, eax
	je	SHORT $LN496@SK_NvAPI_A
	push	OFFSET $SG166445
	push	OFFSET $SG166446
	push	1391					; 0000056fH
	push	OFFSET $SG166447
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN486@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN486@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1391 :   NVAPI_CALL (DRS_DestroySession (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166444
	push	eax
	push	0
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T4[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN496@SK_NvAPI_A
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T4[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN496@SK_NvAPI_A:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1412 :   return true;

	mov	eax, 1
	pop	edi

; 1413 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SK_NvAPI_AddLauncherToProf@@YGHXZ ENDP			; SK_NvAPI_AddLauncherToProf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_wszLauncherName$ = 8					; size = 4
?SK_NvAPI_SetLauncher@@YGXPB_W@Z PROC			; SK_NvAPI_SetLauncher

; 1303 : {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR _wszLauncherName$[ebp]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+2]
	npad	2
$LL10@SK_NvAPI_S:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL10@SK_NvAPI_S
	sub	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, OFFSET ?launcher_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::launcher_name
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	esi
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1305 : }

	pop	ebp
	ret	4
?SK_NvAPI_SetLauncher@@YGXPB_W@Z ENDP			; SK_NvAPI_SetLauncher
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_wszAppName$ = 8					; size = 4
?SK_NvAPI_SetAppName@@YGXPB_W@Z PROC			; SK_NvAPI_SetAppName

; 1296 : {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR _wszAppName$[ebp]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+2]
	npad	2
$LL10@SK_NvAPI_S:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL10@SK_NvAPI_S
	sub	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	esi
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1298 : }

	pop	ebp
	ret	4
?SK_NvAPI_SetAppName@@YGXPB_W@Z ENDP			; SK_NvAPI_SetAppName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
?SK_NvAPI_IsInit@@YGHXZ PROC				; SK_NvAPI_IsInit

; 1290 :   return NVAPI::nv_hardware;

	movzx	eax, BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA ; sk::NVAPI::nv_hardware

; 1291 : }

	ret	0
?SK_NvAPI_IsInit@@YGHXZ ENDP				; SK_NvAPI_IsInit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_wszFriendlyName$ = 8					; size = 4
?SK_NvAPI_SetAppFriendlyName@@YGXPB_W@Z PROC		; SK_NvAPI_SetAppFriendlyName

; 1276 : {

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR _wszFriendlyName$[ebp]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+2]
	npad	2
$LL10@SK_NvAPI_S:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL10@SK_NvAPI_S
	sub	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	esi
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1278 : }

	pop	ebp
	ret	4
?SK_NvAPI_SetAppFriendlyName@@YGXPB_W@Z ENDP		; SK_NvAPI_SetAppFriendlyName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z PROC ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3843 : 	{	// test for string vs. NTCTS equality

	npad	2
	push	ebp
	mov	ebp, esp

; 3844 : 	return (_Left._Equal(_Right));

	push	DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal

; 3845 : 	}

	pop	ebp
	ret	0
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QB_W@Z ENDP ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_limit$ = 8						; size = 4
?SK_NvAPI_SetFramerateLimit@@YGHI@Z PROC		; SK_NvAPI_SetFramerateLimit

; 890  :   UNREFERENCED_PARAMETER (limit);
; 891  : 
; 892  :   return TRUE;

	mov	eax, 1

; 893  : 
; 894  : #if 0
; 895  :   // Allow the end-user to override this using the INI file
; 896  :   if (config.render.framerate.target_fps != 0)
; 897  :     limit = (uint32_t)config.render.framerate.target_fps;
; 898  : 
; 899  :   // Don't set anything up.
; 900  :   if (limit == 0)
; 901  :     return true;
; 902  : 
; 903  :   NvDRSSessionHandle hSession;
; 904  :   NVAPI_CALL (DRS_CreateSession (&hSession));
; 905  :   NVAPI_CALL (DRS_LoadSettings  (hSession));
; 906  : 
; 907  :   NvDRSProfileHandle hProfile;
; 908  :   static NVDRS_APPLICATION app = { };
; 909  : 
; 910  :   //SK_NvAPI_GetAppProfile (hSession, &hProfile, &app);
; 911  :   NVAPI_SILENT ();
; 912  : 
; 913  :   app.version = NVDRS_APPLICATION_VER;
; 914  : 
; 915  :   NvAPI_Status ret;
; 916  :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,
; 917  :                                               (NvU16 *)app_name.c_str (),
; 918  :                                                 &hProfile,
; 919  :                                                   &app ),
; 920  :                 ret );
; 921  : 
; 922  :   // If no executable exists anywhere by this name, create a profile for it
; 923  :   //   and then add the executable to it.
; 924  :   if (ret == NVAPI_EXECUTABLE_NOT_FOUND) {
; 925  :     NVDRS_PROFILE custom_profile = { };
; 926  : 
; 927  :     custom_profile.isPredefined = false;
; 928  :     lstrcpyW ((wchar_t *)custom_profile.profileName, friendly_name.c_str ());
; 929  :     custom_profile.version = NVDRS_PROFILE_VER;
; 930  : 
; 931  :     // It's not necessarily wrong if this does not return NVAPI_OK, so don't
; 932  :     //   raise a fuss if it happens.
; 933  :     NVAPI_SILENT ()
; 934  :     {
; 935  :       NVAPI_CALL2 (DRS_CreateProfile (hSession, &custom_profile, &hProfile), ret);
; 936  :     }
; 937  :     NVAPI_VERBOSE ()
; 938  : 
; 939  :     // Add the application name to the profile, if a profile already exists
; 940  :     if (ret == NVAPI_PROFILE_NAME_IN_USE)
; 941  :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,
; 942  :                                               (NvU16 *)friendly_name.c_str (),
; 943  :                                                 &hProfile),
; 944  :                       ret );
; 945  : 
; 946  :     if (ret == NVAPI_OK) {
; 947  :       memset (&app, 0, sizeof (NVDRS_APPLICATION));
; 948  : 
; 949  :       lstrcpyW ((wchar_t *)app.appName,          app_name.c_str      ());
; 950  :       lstrcpyW ((wchar_t *)app.userFriendlyName, friendly_name.c_str ());
; 951  :       app.version      = NVDRS_APPLICATION_VER;
; 952  :       app.isPredefined = false;
; 953  :       app.isMetro      = false;
; 954  : 
; 955  :       NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);
; 956  :       NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);
; 957  :     }
; 958  :   }
; 959  : 
; 960  :   NVDRS_SETTING fps_limiter = { };
; 961  :   fps_limiter.version = NVDRS_SETTING_VER;
; 962  : 
; 963  :   NVDRS_SETTING prerendered_frames = { };
; 964  :   prerendered_frames.version = NVDRS_SETTING_VER;
; 965  : 
; 966  :   // These settings may not exist, and getting back a value of 0 is okay...
; 967  :   NVAPI_SILENT  ();
; 968  :   NVAPI_CALL    (DRS_GetSetting (hSession, hProfile, PS_FRAMERATE_LIMITER_ID, &fps_limiter));
; 969  :   NVAPI_CALL    (DRS_GetSetting (hSession, hProfile, PRERENDERLIMIT_ID,       &prerendered_frames));
; 970  :   NVAPI_VERBOSE ();
; 971  : 
; 972  :   NvU32 limit_mask = ( PS_FRAMERATE_LIMITER_ENABLED        |
; 973  :                        PS_FRAMERATE_LIMITER_FORCEON        |
; 974  :                        PS_FRAMERATE_LIMITER_ALLOW_WINDOWED |
; 975  :                        PS_FRAMERATE_LIMITER_ACCURATE );
; 976  : 
; 977  :   limit_mask |= (limit & PS_FRAMERATE_LIMITER_FPSMASK);
; 978  : 
; 979  :   // We need a way to forcefully disable this
; 980  :   if (limit == 255)
; 981  :     limit_mask = 0;
; 982  : 
; 983  :   // Default to application preference
; 984  :   uint32_t target_prerender = config.render.framerate.pre_render_limit;
; 985  : 
; 986  :   BOOL already_set = TRUE;
; 987  : 
; 988  :   if (fps_limiter.u32CurrentValue != limit_mask) {
; 989  :     ZeroMemory (&fps_limiter, sizeof NVDRS_SETTING);
; 990  :     fps_limiter.version = NVDRS_SETTING_VER;
; 991  : 
; 992  :     already_set = FALSE;
; 993  : 
; 994  :     NVAPI_SET_DWORD (fps_limiter, PS_FRAMERATE_LIMITER_ID, limit_mask);
; 995  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &fps_limiter));
; 996  :   }
; 997  : 
; 998  :   // If this == -1, then don't make any changes...
; 999  :   if (target_prerender != -1 && prerendered_frames.u32CurrentValue != target_prerender) {
; 1000 :     ZeroMemory (&prerendered_frames, sizeof NVDRS_SETTING);
; 1001 :     prerendered_frames.version = NVDRS_SETTING_VER;
; 1002 : 
; 1003 :     already_set = FALSE;
; 1004 : 
; 1005 :     NVAPI_SET_DWORD (prerendered_frames, PRERENDERLIMIT_ID, target_prerender);
; 1006 :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &prerendered_frames));
; 1007 :   }
; 1008 : 
; 1009 :   NVAPI_VERBOSE ();
; 1010 : 
; 1011 :   NVAPI_CALL (DRS_SaveSettings   (hSession));
; 1012 :   NVAPI_CALL (DRS_DestroySession (hSession));
; 1013 : 
; 1014 :   if (! already_set) {
; 1015 : #ifdef WIN32
; 1016 :     HMODULE hLib = LoadLibraryW_Original (L"nvapi.dll");
; 1017 : #else
; 1018 :     HMODULE hLib = LoadLibraryW+_Original (L"nvapi64.dll");
; 1019 : #endif
; 1020 : #define __NvAPI_RestartDisplayDriver                      0xB4B26B65
; 1021 :     typedef void* (*NvAPI_QueryInterface_pfn)(unsigned int offset);
; 1022 :     typedef NvAPI_Status(__cdecl *NvAPI_RestartDisplayDriver_pfn)(void);
; 1023 :     NvAPI_QueryInterface_pfn       NvAPI_QueryInterface       =
; 1024 :       (NvAPI_QueryInterface_pfn)GetProcAddress (hLib, "nvapi_QueryInterface");
; 1025 :     NvAPI_RestartDisplayDriver_pfn NvAPI_RestartDisplayDriver =
; 1026 :       (NvAPI_RestartDisplayDriver_pfn)NvAPI_QueryInterface (__NvAPI_RestartDisplayDriver);
; 1027 : 
; 1028 :     NvAPI_RestartDisplayDriver ();
; 1029 :   }
; 1030 : 
; 1031 :   return already_set;
; 1032 : #endif
; 1033 : }

	ret	4
?SK_NvAPI_SetFramerateLimit@@YGHI@Z ENDP		; SK_NvAPI_SetFramerateLimit
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0property_pair_s@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@QAE@XZ
_TEXT	SEGMENT
??0property_pair_s@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@QAE@XZ PROC ; `SK_NvAPI_SetAntiAliasingOverride'::`2'::property_pair_s::property_pair_s, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0property_pair_s@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@QAE@XZ ENDP ; `SK_NvAPI_SetAntiAliasingOverride'::`2'::property_pair_s::property_pair_s
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_app$ = -119080						; size = 20492
$T1 = -98588						; size = 20492
$T2 = -90416						; size = 12320
$T3 = -90416						; size = 12320
$T4 = -90416						; size = 12320
$T5 = -90416						; size = 12320
$T6 = -90416						; size = 12320
$T7 = -90416						; size = 12320
_override_val$ = -78096					; size = 12320
_autobias_val$ = -65776					; size = 12320
_aa_fix_val$ = -53456					; size = 12320
_replay_mode_val$ = -41136				; size = 12320
_method_val$ = -28816					; size = 12320
_compat_bits_val$ = -16496				; size = 12320
_custom_profile$8 = -4176				; size = 4116
_compat_bits_enum$1$ = -60				; size = 4
_pwszPropertyListEntry$1$ = -56				; size = 4
_auto_bias$1$ = -52					; size = 4
_aa_fix$1$ = -48					; size = 4
_compat_bits$1$ = -44					; size = 4
_override$1$ = -40					; size = 4
_replay_mode$1$ = -36					; size = 4
$T9 = -32						; size = 24
$T10 = -32						; size = 24
$T11 = -32						; size = 24
$T12 = -32						; size = 24
$T13 = -32						; size = 24
$T14 = -32						; size = 24
$T15 = -32						; size = 24
$T16 = -32						; size = 24
$T17 = -32						; size = 24
$T18 = -32						; size = 24
$T19 = -32						; size = 24
$T20 = -32						; size = 24
$T21 = -32						; size = 24
$T22 = -32						; size = 24
$T23 = -32						; size = 24
$T24 = -32						; size = 24
$T25 = -32						; size = 24
$T26 = -32						; size = 24
$T27 = -32						; size = 24
$T28 = -32						; size = 24
$T29 = -32						; size = 24
$T30 = -32						; size = 24
$T31 = -32						; size = 24
$T32 = -32						; size = 24
_hProfile$ = -8						; size = 4
_hSession$ = -4						; size = 4
_method$1$ = 8						; size = 4
_pwszPropertyList$ = 8					; size = 4
?SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z PROC	; SK_NvAPI_SetAntiAliasingOverride

; 504  : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, 119080				; 0001d128H
	call	__chkstk

; 505  :   // This stuff only works in DirectX.
; 506  :   if (SK_GetDLLRole () != DXGI && SK_GetDLLRole () != D3D9)

	call	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ	; SK_GetDLLRole
	cmp	eax, 1
	je	SHORT $LN4@SK_NvAPI_S
	call	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ	; SK_GetDLLRole
	cmp	eax, 2
	je	SHORT $LN4@SK_NvAPI_S
$LN733@SK_NvAPI_S:

; 507  :     return FALSE;

	xor	eax, eax

; 883  : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN4@SK_NvAPI_S:

; 508  : 
; 509  :   if (! nv_hardware)

	cmp	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware
	je	SHORT $LN733@SK_NvAPI_S

; 510  :     return FALSE;
; 511  : 
; 512  :   static bool             init           = false;
; 513  :   static CRITICAL_SECTION cs_aa_override = { };
; 514  : 
; 515  :   if (! init)

	cmp	BYTE PTR ?init@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4_NA, 0
	jne	SHORT $LN6@SK_NvAPI_S

; 516  :   {
; 517  :     InitializeCriticalSection (&cs_aa_override);

	push	OFFSET ?cs_aa_override@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__InitializeCriticalSection@4

; 518  :     init = true;

	mov	BYTE PTR ?init@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4_NA, 1
$LN6@SK_NvAPI_S:

; 519  :   }
; 520  : 
; 521  :   EnterCriticalSection (&cs_aa_override);

	push	esi
	push	OFFSET ?cs_aa_override@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__EnterCriticalSection@4

; 526  :   NVAPI_CALL (DRS_CreateSession (&hSession));

	lea	eax, DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _hSession$[ebp], 0
	push	eax
	call	_NvAPI_DRS_CreateSession
	mov	esi, DWORD PTR __imp__MessageBoxW@16
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN7@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN7@SK_NvAPI_S
	push	OFFSET $SG165705
	push	OFFSET $SG165706
	push	526					; 0000020eH
	push	OFFSET $SG165707
	push	eax
	lea	eax, DWORD PTR $T32[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN124@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN124@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 526  :   NVAPI_CALL (DRS_CreateSession (&hSession));

	push	327744					; 00050040H
	push	OFFSET $SG165704
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T32[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@SK_NvAPI_S:

; 527  :   NVAPI_CALL (DRS_LoadSettings  (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_LoadSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN8@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN8@SK_NvAPI_S
	push	OFFSET $SG165710
	push	OFFSET $SG165711
	push	527					; 0000020fH
	push	OFFSET $SG165712
	push	eax
	lea	eax, DWORD PTR $T31[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN143@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN143@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 527  :   NVAPI_CALL (DRS_LoadSettings  (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG165709
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN8@SK_NvAPI_S:

; 528  : 
; 529  :   NvDRSProfileHandle hProfile;
; 530  :   NVDRS_APPLICATION  app = { };

	push	ebx
	push	edi
	push	20492					; 0000500cH
	lea	eax, DWORD PTR _app$[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 533  :     (SK_GetDLLRole () == DXGI ? AA_COMPAT_BITS_DXGI_ID :

	call	?SK_GetDLLRole@@YG?AW4DLL_ROLE@@XZ	; SK_GetDLLRole

; 546  :   prop.wszName  = *(pwszPropertyListEntry++);

	mov	ecx, DWORD PTR _pwszPropertyList$[ebp]
	dec	eax
	neg	eax
	sbb	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits

; 741  : 		return (UINT_MAX);

	or	edi, -1
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 546  :   prop.wszName  = *(pwszPropertyListEntry++);

	mov	ebx, DWORD PTR [ecx]
	and	eax, -905229				; fff22ff3H

; 547  :   prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [ecx+4]
	add	eax, 14888842				; 00e32f8aH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits

; 741  : 		return (UINT_MAX);

	mov	DWORD PTR _method$1$[ebp], edi
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 547  :   prop.wszValue = *(pwszPropertyListEntry++);

	add	ecx, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits

; 741  : 		return (UINT_MAX);

	or	edi, -1
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 533  :     (SK_GetDLLRole () == DXGI ? AA_COMPAT_BITS_DXGI_ID :

	mov	DWORD PTR _compat_bits_enum$1$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits

; 741  : 		return (UINT_MAX);

	mov	DWORD PTR _replay_mode$1$[ebp], edi
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 536  :   NvU32 compat_bits = 0xFFFFFFFF;

	or	eax, -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits

; 741  : 		return (UINT_MAX);

	or	edi, -1
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 536  :   NvU32 compat_bits = 0xFFFFFFFF;

	mov	DWORD PTR _compat_bits$1$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits

; 741  : 		return (UINT_MAX);

	mov	DWORD PTR _aa_fix$1$[ebp], edi
	or	edi, -1
	mov	DWORD PTR _override$1$[ebp], edi
	or	edi, -1
	mov	DWORD PTR _auto_bias$1$[ebp], edi
	mov	edi, DWORD PTR __imp___wcsicmp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 547  :   prop.wszValue = *(pwszPropertyListEntry++);

	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], ecx
$LL2@SK_NvAPI_S:

; 548  : 
; 549  : 
; 550  :   unsigned int method      = std::numeric_limits <unsigned int>::max ();
; 551  :   unsigned int replay_mode = std::numeric_limits <unsigned int>::max ();
; 552  :   unsigned int aa_fix      = std::numeric_limits <unsigned int>::max ();
; 553  :   unsigned int override    = std::numeric_limits <unsigned int>::max ();
; 554  :   unsigned int auto_bias   = std::numeric_limits <unsigned int>::max ();
; 555  : 
; 556  :   while (! ( prop.wszName  == nullptr && 

	test	ebx, ebx
	jne	SHORT $LN9@SK_NvAPI_S
	test	esi, esi
	je	$LN3@SK_NvAPI_S
$LN9@SK_NvAPI_S:

; 557  :              prop.wszValue == nullptr ) )
; 558  :   {
; 559  :     // ...
; 560  : 
; 561  :     if (! _wcsicmp (prop.wszName, L"Override"))

	push	OFFSET $SG165715
	push	ebx
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@SK_NvAPI_S

; 562  :     {
; 563  :       if ( (! _wcsicmp (prop.wszValue, L"Yes")) ||

	push	OFFSET $SG165719
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN13@SK_NvAPI_S
	push	OFFSET $SG165720
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN13@SK_NvAPI_S

; 566  : 
; 567  :       else if ( (! _wcsicmp (prop.wszValue, L"No")) ||

	push	OFFSET $SG165724
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@SK_NvAPI_S
	push	OFFSET $SG165725
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@SK_NvAPI_S

; 570  : 
; 571  :       else if ( (! _wcsicmp (prop.wszValue, L"Enhance")) )

	push	OFFSET $SG165727
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@SK_NvAPI_S

; 572  :         override = AA_MODE_SELECTOR_ENHANCE;

	mov	DWORD PTR _override$1$[ebp], 2
	jmp	SHORT $LN17@SK_NvAPI_S
$LN16@SK_NvAPI_S:

; 568  :                 (! _wcsicmp (prop.wszValue, L"Off")) )
; 569  :         override = AA_MODE_SELECTOR_APP_CONTROL;

	mov	DWORD PTR _override$1$[ebp], 0
	jmp	SHORT $LN17@SK_NvAPI_S
$LN13@SK_NvAPI_S:

; 564  :            (! _wcsicmp (prop.wszValue, L"On")) )
; 565  :         override = AA_MODE_SELECTOR_OVERRIDE;

	mov	DWORD PTR _override$1$[ebp], 1
$LN17@SK_NvAPI_S:

; 573  :     }
; 574  : 
; 575  :     if (! _wcsicmp (prop.wszName, L"Method"))

	push	OFFSET $SG165730
	push	ebx
	call	edi
	add	esp, 8
	test	eax, eax
	jne	$LN18@SK_NvAPI_S

; 576  :     {
; 577  :       if (! _wcsicmp (prop.wszValue, L"2xMSAA"))

	push	OFFSET $SG165733
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN20@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _method$1$[ebp], 14		; 0000000eH
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN20@SK_NvAPI_S:

; 578  :         method = AA_MODE_METHOD_MULTISAMPLE_2X_DIAGONAL;
; 579  : 
; 580  :       else if (! _wcsicmp (prop.wszValue, L"4xMSAA"))

	push	OFFSET $SG165736
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN22@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _method$1$[ebp], 16		; 00000010H
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN22@SK_NvAPI_S:

; 581  :         method = AA_MODE_METHOD_MULTISAMPLE_4X;
; 582  : 
; 583  :       else if (! _wcsicmp (prop.wszValue, L"8xMSAA"))

	push	OFFSET $SG165739
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN24@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _method$1$[ebp], 37		; 00000025H
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN24@SK_NvAPI_S:

; 584  :         method = AA_MODE_METHOD_MULTISAMPLE_8X;
; 585  : 
; 586  :       else if (! _wcsicmp (prop.wszValue, L"16xMSAA"))

	push	OFFSET $SG165742
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN26@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _method$1$[ebp], 28		; 0000001cH
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN26@SK_NvAPI_S:

; 587  :         method = AA_MODE_METHOD_MULTISAMPLE_16X;
; 588  : 
; 589  :       //else if (! wcsicmp (prop.wszValue, L"32xMSAA"))
; 590  :         //method = AA_MODE_METHOD_MULTISAMPLE_32;
; 591  : 
; 592  :       // Allow an arbitrary value to be set if it is expressed as a
; 593  :       //   hexadecimal number.
; 594  :       else if (wcsstr (prop.wszValue, L"0x") == prop.wszValue)

	push	OFFSET $SG165744
	push	esi
	call	DWORD PTR __imp__wcsstr
	add	esp, 8
	cmp	eax, esi
	jne	$LN48@SK_NvAPI_S

; 595  :         method = wcstoul (prop.wszValue, nullptr, 16);

	push	16					; 00000010H
	push	0
	push	esi
	call	DWORD PTR __imp__wcstoul
	mov	DWORD PTR _method$1$[ebp], eax

; 596  :     }

	jmp	$LN731@SK_NvAPI_S
$LN18@SK_NvAPI_S:

; 597  : 
; 598  :     else if (! _wcsicmp (prop.wszName, L"ReplayMode"))

	push	OFFSET $SG165747
	push	ebx
	call	edi
	add	esp, 8
	test	eax, eax
	jne	$LN29@SK_NvAPI_S

; 599  :     {
; 600  :       if (! _wcsicmp (prop.wszValue, L"2xSGSSAA"))

	push	OFFSET $SG165750
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN31@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _replay_mode$1$[ebp], 24	; 00000018H
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN31@SK_NvAPI_S:

; 601  :         replay_mode= AA_MODE_REPLAY_SAMPLES_TWO | AA_MODE_REPLAY_MODE_ALL;
; 602  : 
; 603  :       else if (! _wcsicmp (prop.wszValue, L"4xSGSSAA"))

	push	OFFSET $SG165753
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN33@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _replay_mode$1$[ebp], 40	; 00000028H
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN33@SK_NvAPI_S:

; 604  :         replay_mode = AA_MODE_REPLAY_SAMPLES_FOUR| AA_MODE_REPLAY_MODE_ALL;
; 605  : 
; 606  :       else if (! _wcsicmp (prop.wszValue, L"8xSGSSAA"))

	push	OFFSET $SG165756
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN35@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _replay_mode$1$[ebp], 56	; 00000038H
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN35@SK_NvAPI_S:

; 607  :         replay_mode = AA_MODE_REPLAY_SAMPLES_EIGHT | AA_MODE_REPLAY_MODE_ALL;
; 608  : 
; 609  :       // Allow an arbitrary value to be set if it is expressed as a
; 610  :       //   hexadecimal number.
; 611  :       else if (wcsstr (prop.wszValue, L"0x") == prop.wszValue)

	push	OFFSET $SG165758
	push	esi
	call	DWORD PTR __imp__wcsstr
	add	esp, 8
	cmp	eax, esi
	jne	$LN48@SK_NvAPI_S

; 612  :         replay_mode = wcstoul (prop.wszValue, nullptr, 16);

	push	16					; 00000010H
	push	0
	push	esi
	call	DWORD PTR __imp__wcstoul
	mov	DWORD PTR _replay_mode$1$[ebp], eax

; 613  :     }

	jmp	$LN731@SK_NvAPI_S
$LN29@SK_NvAPI_S:

; 614  : 
; 615  :     else if (! _wcsicmp (prop.wszName, L"AntiAliasFix"))

	push	OFFSET $SG165761
	push	ebx
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN38@SK_NvAPI_S

; 616  :     {
; 617  :       if ( (! _wcsicmp (prop.wszValue, L"On")) ||

	push	OFFSET $SG165765
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN42@SK_NvAPI_S
	push	OFFSET $SG165766
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN42@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _aa_fix$1$[ebp], 1
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN42@SK_NvAPI_S:

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _aa_fix$1$[ebp], 0
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN38@SK_NvAPI_S:

; 618  :            (! _wcsicmp (prop.wszValue, L"Yes")) )
; 619  :         aa_fix = 0x00;
; 620  : 
; 621  :       else
; 622  :         aa_fix = 0x01;
; 623  :     }
; 624  : 
; 625  :     else if (! _wcsicmp (prop.wszName, L"AutoBiasAdjust"))

	push	OFFSET $SG165769
	push	ebx
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN43@SK_NvAPI_S

; 626  :     {
; 627  :       if ( (! _wcsicmp (prop.wszValue, L"On")) ||

	push	OFFSET $SG165773
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN47@SK_NvAPI_S
	push	OFFSET $SG165774
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN47@SK_NvAPI_S

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _auto_bias$1$[ebp], 0
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN47@SK_NvAPI_S:

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	DWORD PTR _auto_bias$1$[ebp], 1
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN43@SK_NvAPI_S:

; 628  :            (! _wcsicmp (prop.wszValue, L"Yes")) )
; 629  :         auto_bias = AUTO_LODBIASADJUST_ON;
; 630  :       else
; 631  :         auto_bias = AUTO_LODBIASADJUST_OFF;
; 632  :     }
; 633  : 
; 634  :     else if (! _wcsicmp (prop.wszName, L"CompatibilityBits"))

	push	OFFSET $SG165776
	push	ebx
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN48@SK_NvAPI_S

; 635  :     {
; 636  :       compat_bits = wcstoul (prop.wszValue, nullptr, 16);

	push	16					; 00000010H
	push	eax
	push	esi
	call	DWORD PTR __imp__wcstoul
	mov	DWORD PTR _compat_bits$1$[ebp], eax
$LN731@SK_NvAPI_S:
	add	esp, 12					; 0000000cH
$LN48@SK_NvAPI_S:

; 637  :     }
; 638  : 
; 639  :     prop.wszName  = *(pwszPropertyListEntry++);

	mov	eax, DWORD PTR _pwszPropertyListEntry$1$[ebp]
	mov	ebx, DWORD PTR [eax]

; 640  :     prop.wszValue = *(pwszPropertyListEntry++);

	mov	esi, DWORD PTR [eax+4]
	add	eax, 8
	mov	DWORD PTR _pwszPropertyListEntry$1$[ebp], eax

; 641  :   }

	jmp	$LL2@SK_NvAPI_S
$LN3@SK_NvAPI_S:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 648  :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	lea	ecx, DWORD PTR _app$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _hProfile$[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 645  :   app.version = NVDRS_APPLICATION_VER;

	mov	DWORD PTR _app$[ebp], 282636		; 0004500cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	eax, DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 648  :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	push	ecx
	push	eax
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_FindApplicationByName
	add	esp, 16					; 00000010H
	mov	esi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN727@SK_NvAPI_S
	test	esi, esi
	je	SHORT $LN727@SK_NvAPI_S
	push	OFFSET $SG165779
	push	OFFSET $SG165780
	push	652					; 0000028cH
	push	OFFSET $SG165781
	lea	eax, DWORD PTR $T30[ebp]
	push	esi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN199@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN199@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 648  :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	mov	ebx, DWORD PTR __imp__MessageBoxW@16
	push	327744					; 00050040H
	push	OFFSET $SG165778
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T30[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	jmp	SHORT $LN49@SK_NvAPI_S
$LN727@SK_NvAPI_S:
	mov	ebx, DWORD PTR __imp__MessageBoxW@16
$LN49@SK_NvAPI_S:

; 649  :                                               (NvU16 *)app_name.c_str (),
; 650  :                                                 &hProfile,
; 651  :                                                   &app ),
; 652  :                 ret );
; 653  : 
; 654  :   // If no executable exists anywhere by this name, create a profile for it
; 655  :   //   and then add the executable to it.
; 656  :   if (ret == NVAPI_EXECUTABLE_NOT_FOUND)

	cmp	esi, -166				; ffffff5aH
	jne	$LN55@SK_NvAPI_S

; 657  :   {
; 658  :     NVDRS_PROFILE custom_profile = { };

	push	4116					; 00001014H
	lea	eax, DWORD PTR _custom_profile$8[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 659  : 
; 660  :     custom_profile.isPredefined = false;

	mov	DWORD PTR _custom_profile$8[ebp+4104], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	edi, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	mov	eax, edi
	cmovae	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 661  :     lstrcpyW ((wchar_t *)custom_profile.profileName, friendly_name.c_str ());

	push	eax
	lea	eax, DWORD PTR _custom_profile$8[ebp+4]
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8

; 668  :       NVAPI_CALL2 (DRS_CreateProfile (hSession, &custom_profile, &hProfile), ret);

	lea	eax, DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _custom_profile$8[ebp], 69652	; 00011014H
	push	eax
	lea	eax, DWORD PTR _custom_profile$8[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	push	eax
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_CreateProfile
	add	esp, 12					; 0000000cH
	mov	esi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN51@SK_NvAPI_S
	test	esi, esi
	je	SHORT $LN51@SK_NvAPI_S
	push	OFFSET $SG165785
	push	OFFSET $SG165786
	push	668					; 0000029cH
	push	OFFSET $SG165787
	lea	eax, DWORD PTR $T29[ebp]
	push	esi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN237@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN237@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 668  :       NVAPI_CALL2 (DRS_CreateProfile (hSession, &custom_profile, &hProfile), ret);

	push	327744					; 00050040H
	push	OFFSET $SG165784
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN51@SK_NvAPI_S:

; 669  :     }
; 670  :     NVAPI_VERBOSE ()

	mov	BYTE PTR ?nvapi_silent@@3_NA, 0

; 671  : 
; 672  :     // Add the application name to the profile, if a profile already exists
; 673  :     if (ret == NVAPI_PROFILE_NAME_IN_USE)

	cmp	esi, -164				; ffffff5cH
	jne	SHORT $LN53@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 674  :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	lea	ecx, DWORD PTR _hProfile$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	mov	eax, edi
	cmovae	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 674  :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	push	ecx
	push	eax
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_FindProfileByName
	add	esp, 12					; 0000000cH
	mov	esi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN53@SK_NvAPI_S
	test	esi, esi
	je	SHORT $LN722@SK_NvAPI_S
	push	OFFSET $SG165791
	push	OFFSET $SG165792
	push	677					; 000002a5H
	push	OFFSET $SG165793
	lea	eax, DWORD PTR $T28[ebp]
	push	esi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN275@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN275@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 674  :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	push	327744					; 00050040H
	push	OFFSET $SG165790
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN53@SK_NvAPI_S:

; 675  :                                               (NvU16 *)friendly_name.c_str (),
; 676  :                                                 &hProfile),
; 677  :                       ret );
; 678  : 
; 679  :     if (ret == NVAPI_OK)

	test	esi, esi
	jne	$LN54@SK_NvAPI_S
$LN722@SK_NvAPI_S:

; 680  :     {
; 681  :       app = { };

	push	20492					; 0000500cH
	lea	eax, DWORD PTR $T1[ebp]
	push	0
	push	eax
	call	_memset
	push	20492					; 0000500cH
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	eax, DWORD PTR _app$[ebp]
	push	eax
	call	_memcpy

; 683  :       lstrcpyW ((wchar_t *)app.appName,          app_name.c_str      ());

	mov	esi, DWORD PTR __imp__lstrcpyW@8
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	cmovae	eax, DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 683  :       lstrcpyW ((wchar_t *)app.appName,          app_name.c_str      ());

	push	eax
	lea	eax, DWORD PTR _app$[ebp+8]
	push	eax
	call	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 684  :       lstrcpyW ((wchar_t *)app.userFriendlyName, friendly_name.c_str ());

	lea	eax, DWORD PTR _app$[ebp+4104]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	edi, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 684  :       lstrcpyW ((wchar_t *)app.userFriendlyName, friendly_name.c_str ());

	push	edi
	push	eax
	call	esi

; 685  : 
; 686  :       app.version      = NVDRS_APPLICATION_VER;
; 687  :       app.isPredefined = false;
; 688  :       app.isMetro      = false;

	and	DWORD PTR _app$[ebp+16392], -2		; fffffffeH

; 690  :       NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);

	lea	eax, DWORD PTR _app$[ebp]
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _app$[ebp], 282636		; 0004500cH
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _app$[ebp+4], 0
	call	_NvAPI_DRS_CreateApplication
	add	esp, 12					; 0000000cH
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN56@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN56@SK_NvAPI_S
	push	OFFSET $SG165798
	push	OFFSET $SG165799
	push	690					; 000002b2H
	push	OFFSET $SG165800
	push	eax
	lea	eax, DWORD PTR $T27[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN332@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN332@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 690  :       NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);

	push	327744					; 00050040H
	push	OFFSET $SG165797
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN56@SK_NvAPI_S:

; 691  :       NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_SaveSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN55@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN55@SK_NvAPI_S
	push	OFFSET $SG165803
	push	OFFSET $SG165804
	push	691					; 000002b3H
	push	OFFSET $SG165805
	push	eax
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN351@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN351@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 691  :       NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);

	push	327744					; 00050040H
	push	OFFSET $SG165802
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN55@SK_NvAPI_S:

; 704  :     }
; 705  :   }
; 706  : 
; 707  :   NvU32         method_enum             = AA_MODE_METHOD_ID;
; 708  :   NVDRS_SETTING method_val              = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _method_val$[ebp]
	push	0
	push	eax
	call	_memset

; 709  :                 method_val.version      = NVDRS_SETTING_VER;
; 710  : 
; 711  :   NvU32         replay_mode_enum        = AA_MODE_REPLAY_ID;
; 712  :   NVDRS_SETTING replay_mode_val         = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _replay_mode_val$[ebp]
	mov	DWORD PTR _method_val$[ebp], 77856	; 00013020H
	push	0
	push	eax
	call	_memset

; 713  :                 replay_mode_val.version = NVDRS_SETTING_VER;
; 714  : 
; 715  :   NvU32         aa_fix_enum             = 0x000858F7;
; 716  :   NVDRS_SETTING aa_fix_val              = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _aa_fix_val$[ebp]
	mov	DWORD PTR _replay_mode_val$[ebp], 77856	; 00013020H
	push	0
	push	eax
	call	_memset

; 717  :                 aa_fix_val.version      = NVDRS_SETTING_VER;
; 718  : 
; 719  :   NvU32         override_enum           = AA_MODE_SELECTOR_ID;
; 720  :   NVDRS_SETTING override_val            = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _override_val$[ebp]
	mov	DWORD PTR _aa_fix_val$[ebp], 77856	; 00013020H
	push	0
	push	eax
	call	_memset

; 721  :                 override_val.version    = NVDRS_SETTING_VER;
; 722  : 
; 723  :   NvU32         autobias_enum           = AUTO_LODBIASADJUST_ID;
; 724  :   NVDRS_SETTING autobias_val            = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _autobias_val$[ebp]
	mov	DWORD PTR _override_val$[ebp], 77856	; 00013020H
	push	0
	push	eax
	call	_memset

; 725  :                 autobias_val.version    = NVDRS_SETTING_VER;
; 726  : 
; 727  :   NVDRS_SETTING compat_bits_val         = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _compat_bits_val$[ebp]
	mov	DWORD PTR _autobias_val$[ebp], 77856	; 00013020H
	push	0
	push	eax
	call	_memset
	add	esp, 72					; 00000048H

; 728  :                 compat_bits_val.version = NVDRS_SETTING_VER;

	mov	DWORD PTR _compat_bits_val$[ebp], 77856	; 00013020H

; 732  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, method_enum,      &method_val));

	lea	eax, DWORD PTR _method_val$[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	push	eax
	push	282555346				; 10d773d2H
	push	DWORD PTR _hProfile$[ebp]
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 16					; 00000010H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN59@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN59@SK_NvAPI_S
	push	OFFSET $SG165814
	push	OFFSET $SG165815
	push	732					; 000002dcH
	push	OFFSET $SG165816
	push	eax
	lea	eax, DWORD PTR $T24[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN427@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN427@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 732  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, method_enum,      &method_val));

	push	327744					; 00050040H
	push	OFFSET $SG165813
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T24[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN59@SK_NvAPI_S:

; 733  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, replay_mode_enum, &replay_mode_val));

	lea	eax, DWORD PTR _replay_mode_val$[ebp]
	push	eax
	push	282364549				; 10d48a85H
	push	DWORD PTR _hProfile$[ebp]
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 16					; 00000010H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN60@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN60@SK_NvAPI_S
	push	OFFSET $SG165819
	push	OFFSET $SG165820
	push	733					; 000002ddH
	push	OFFSET $SG165821
	push	eax
	lea	eax, DWORD PTR $T23[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN446@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN446@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 733  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, replay_mode_enum, &replay_mode_val));

	push	327744					; 00050040H
	push	OFFSET $SG165818
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T23[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN60@SK_NvAPI_S:

; 734  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, aa_fix_enum,      &aa_fix_val));

	lea	eax, DWORD PTR _aa_fix_val$[ebp]
	push	eax
	push	547063					; 000858f7H
	push	DWORD PTR _hProfile$[ebp]
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 16					; 00000010H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN61@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN61@SK_NvAPI_S
	push	OFFSET $SG165824
	push	OFFSET $SG165825
	push	734					; 000002deH
	push	OFFSET $SG165826
	push	eax
	lea	eax, DWORD PTR $T22[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN465@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN465@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 734  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, aa_fix_enum,      &aa_fix_val));

	push	327744					; 00050040H
	push	OFFSET $SG165823
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN61@SK_NvAPI_S:

; 735  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, override_enum,    &override_val));

	lea	eax, DWORD PTR _override_val$[ebp]
	push	eax
	push	276757595				; 107efc5bH
	push	DWORD PTR _hProfile$[ebp]
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 16					; 00000010H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN62@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN62@SK_NvAPI_S
	push	OFFSET $SG165829
	push	OFFSET $SG165830
	push	735					; 000002dfH
	push	OFFSET $SG165831
	push	eax
	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN484@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN484@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 735  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, override_enum,    &override_val));

	push	327744					; 00050040H
	push	OFFSET $SG165828
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN62@SK_NvAPI_S:

; 736  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, autobias_enum,    &autobias_val));

	lea	eax, DWORD PTR _autobias_val$[ebp]
	push	eax
	push	6524559					; 00638e8fH
	push	DWORD PTR _hProfile$[ebp]
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 16					; 00000010H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN63@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN63@SK_NvAPI_S
	push	OFFSET $SG165834
	push	OFFSET $SG165835
	push	736					; 000002e0H
	push	OFFSET $SG165836
	push	eax
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN503@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN503@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 736  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, autobias_enum,    &autobias_val));

	push	327744					; 00050040H
	push	OFFSET $SG165833
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN63@SK_NvAPI_S:

; 737  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, compat_bits_enum, &compat_bits_val));

	mov	edi, DWORD PTR _compat_bits_enum$1$[ebp]
	lea	eax, DWORD PTR _compat_bits_val$[ebp]
	push	eax
	push	edi
	push	DWORD PTR _hProfile$[ebp]
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 16					; 00000010H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN64@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN64@SK_NvAPI_S
	push	OFFSET $SG165839
	push	OFFSET $SG165840
	push	737					; 000002e1H
	push	OFFSET $SG165841
	push	eax
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN522@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN522@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 737  :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, compat_bits_enum, &compat_bits_val));

	push	327744					; 00050040H
	push	OFFSET $SG165838
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN64@SK_NvAPI_S:

; 738  :   NVAPI_VERBOSE ();
; 739  : 
; 740  :   BOOL already_set = TRUE;
; 741  : 
; 742  :   // Do this first so we don't touch other settings if this fails
; 743  :   if (compat_bits_val.u32CurrentValue != compat_bits && compat_bits != 0xffffffff)

	mov	eax, DWORD PTR _compat_bits$1$[ebp]
	mov	esi, 1
	mov	BYTE PTR ?nvapi_silent@@3_NA, 0
	cmp	DWORD PTR _compat_bits_val$[ebp+8220], eax
	je	$LN65@SK_NvAPI_S
	cmp	eax, -1
	je	$LN65@SK_NvAPI_S

; 744  :   {
; 745  :     compat_bits_val         = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T7[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	lea	eax, DWORD PTR _compat_bits_val$[ebp]
	push	eax
	call	_memcpy

; 746  :     compat_bits_val.version = NVDRS_SETTING_VER;
; 747  : 
; 748  :     ret = NVAPI_ERROR;
; 749  : 
; 750  :     // This requires admin privs, and we will handle that gracefully...
; 751  :     NVAPI_SILENT ();
; 752  :     NVAPI_SET_DWORD (compat_bits_val, compat_bits_enum, compat_bits);

	mov	eax, DWORD PTR _compat_bits$1$[ebp]
	mov	DWORD PTR _compat_bits_val$[ebp+8220], eax

; 753  :     NVAPI_CALL2     (DRS_SetSetting (hSession, hProfile, &compat_bits_val), ret);

	lea	eax, DWORD PTR _compat_bits_val$[ebp]
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _compat_bits_val$[ebp], 77856	; 00013020H
	mov	DWORD PTR _compat_bits_val$[ebp+4100], edi
	mov	DWORD PTR _compat_bits_val$[ebp+4104], 0
	mov	DWORD PTR _compat_bits_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	mov	esi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN66@SK_NvAPI_S
	test	esi, esi
	je	SHORT $LN66@SK_NvAPI_S
	push	OFFSET $SG165845
	push	OFFSET $SG165846
	push	753					; 000002f1H
	push	OFFSET $SG165847
	lea	eax, DWORD PTR $T18[ebp]
	push	esi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN541@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN541@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 753  :     NVAPI_CALL2     (DRS_SetSetting (hSession, hProfile, &compat_bits_val), ret);

	push	327744					; 00050040H
	push	OFFSET $SG165844
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN66@SK_NvAPI_S:

; 754  :     NVAPI_VERBOSE ();

	mov	BYTE PTR ?nvapi_silent@@3_NA, 0

; 755  : 
; 756  :     // Not running as admin, don't do the override!
; 757  :     if (ret == NVAPI_INVALID_USER_PRIVILEGE)

	cmp	esi, -137				; ffffff77H
	jne	$LN67@SK_NvAPI_S

; 758  :     {
; 759  :       int result = 
; 760  :         MessageBox ( nullptr,

	push	327745					; 00050041H
	push	OFFSET $SG165849
	push	OFFSET $SG165850
	push	0
	call	ebx

; 771  :         NVAPI_CALL (DRS_DestroySession (hSession));

	push	DWORD PTR _hSession$[ebp]
	cmp	eax, 2
	jne	$LN68@SK_NvAPI_S
	call	_NvAPI_DRS_DestroySession
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN69@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN69@SK_NvAPI_S
	push	OFFSET $SG165854
	push	OFFSET $SG165855
	push	771					; 00000303H
	push	OFFSET $SG165856
	push	eax
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN560@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN560@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 771  :         NVAPI_CALL (DRS_DestroySession (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG165853
$LN732@SK_NvAPI_S:
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN69@SK_NvAPI_S:

; 772  : 
; 773  :         LeaveCriticalSection (&cs_aa_override);

	push	OFFSET ?cs_aa_override@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__LeaveCriticalSection@4
	pop	edi
	pop	ebx

; 774  : 
; 775  :         return FALSE;

	xor	eax, eax
	pop	esi

; 883  : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN54@SK_NvAPI_S:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	cmovae	eax, DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 696  :       dll_log.Log ( L"[  NvAPI   ] Could not find or create application profile for '%s' (%s)",

	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	edi, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 696  :       dll_log.Log ( L"[  NvAPI   ] Could not find or create application profile for '%s' (%s)",

	push	edi
	push	OFFSET $SG165806
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log

; 699  :       NVAPI_CALL (DRS_DestroySession (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_DestroySession
	add	esp, 20					; 00000014H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN69@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN69@SK_NvAPI_S
	push	OFFSET $SG165809
	push	OFFSET $SG165810
	push	699					; 000002bbH
	push	OFFSET $SG165811
	push	eax
	lea	eax, DWORD PTR $T25[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN408@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN408@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 699  :       NVAPI_CALL (DRS_DestroySession (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG165808

; 700  : 
; 701  :       LeaveCriticalSection (&cs_aa_override);
; 702  : 
; 703  :       return FALSE;

	jmp	$LN732@SK_NvAPI_S
$LN68@SK_NvAPI_S:

; 778  :       NVAPI_CALL (DRS_DestroySession (hSession));

	call	_NvAPI_DRS_DestroySession
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN70@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN70@SK_NvAPI_S
	push	OFFSET $SG165859
	push	OFFSET $SG165860
	push	778					; 0000030aH
	push	OFFSET $SG165861
	push	eax
	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN579@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN579@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 778  :       NVAPI_CALL (DRS_DestroySession (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG165858
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN70@SK_NvAPI_S:

; 779  : 
; 780  :       SK_ElevateToAdmin ();

	call	?SK_ElevateToAdmin@@YAXXZ		; SK_ElevateToAdmin
	pop	edi
	pop	ebx

; 781  : 
; 782  :       // Formality, ElevateToAdmin actually kills the process...
; 783  :       return FALSE;

	xor	eax, eax
	pop	esi

; 883  : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN67@SK_NvAPI_S:

; 784  :     }
; 785  : 
; 786  :     already_set = FALSE;

	xor	esi, esi
$LN65@SK_NvAPI_S:

; 787  :   }
; 788  : 
; 789  :   if (method_val.u32CurrentValue != method && method != -1)

	mov	edi, DWORD PTR _method$1$[ebp]
	cmp	DWORD PTR _method_val$[ebp+8220], edi
	je	$LN71@SK_NvAPI_S
	cmp	edi, -1
	je	$LN71@SK_NvAPI_S

; 790  :   {
; 791  :     method_val         = { };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T6[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	eax, DWORD PTR _method_val$[ebp]
	push	eax
	call	_memcpy

; 795  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &method_val));

	lea	eax, DWORD PTR _method_val$[ebp]
	mov	DWORD PTR _method_val$[ebp], 77856	; 00013020H
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _method_val$[ebp+4100], 282555346 ; 10d773d2H
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _method_val$[ebp+4104], 0
	mov	DWORD PTR _method_val$[ebp+8220], edi
	mov	DWORD PTR _method_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN72@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN72@SK_NvAPI_S
	push	OFFSET $SG165865
	push	OFFSET $SG165866
	push	795					; 0000031bH
	push	OFFSET $SG165867
	push	eax
	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN598@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN598@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 795  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &method_val));

	push	327744					; 00050040H
	push	OFFSET $SG165864
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN72@SK_NvAPI_S:

; 796  : 
; 797  :     already_set = FALSE;

	xor	esi, esi
$LN71@SK_NvAPI_S:

; 798  :   }
; 799  : 
; 800  :   if (replay_mode_val.u32CurrentValue != replay_mode && replay_mode != -1)

	mov	edi, DWORD PTR _replay_mode$1$[ebp]
	cmp	DWORD PTR _replay_mode_val$[ebp+8220], edi
	je	$LN73@SK_NvAPI_S
	cmp	edi, -1
	je	$LN73@SK_NvAPI_S

; 801  :   {
; 802  :     replay_mode_val         = { };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T5[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	eax, DWORD PTR _replay_mode_val$[ebp]
	push	eax
	call	_memcpy

; 806  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &replay_mode_val));

	lea	eax, DWORD PTR _replay_mode_val$[ebp]
	mov	DWORD PTR _replay_mode_val$[ebp], 77856	; 00013020H
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _replay_mode_val$[ebp+4100], 282364549 ; 10d48a85H
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _replay_mode_val$[ebp+4104], 0
	mov	DWORD PTR _replay_mode_val$[ebp+8220], edi
	mov	DWORD PTR _replay_mode_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN74@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN74@SK_NvAPI_S
	push	OFFSET $SG165871
	push	OFFSET $SG165872
	push	806					; 00000326H
	push	OFFSET $SG165873
	push	eax
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN617@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN617@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 806  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &replay_mode_val));

	push	327744					; 00050040H
	push	OFFSET $SG165870
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN74@SK_NvAPI_S:

; 807  : 
; 808  :     already_set = FALSE;

	xor	esi, esi
$LN73@SK_NvAPI_S:

; 809  :   }
; 810  : 
; 811  :   if (SK_IsAdmin ())

	call	?SK_IsAdmin@@YA_NXZ			; SK_IsAdmin
	test	al, al
	je	$LN75@SK_NvAPI_S

; 812  :   {
; 813  :     if (aa_fix_val.u32CurrentValue != aa_fix && aa_fix != -1)

	mov	edi, DWORD PTR _aa_fix$1$[ebp]
	cmp	DWORD PTR _aa_fix_val$[ebp+8220], edi
	je	$LN76@SK_NvAPI_S
	cmp	edi, -1
	je	$LN76@SK_NvAPI_S

; 814  :     {
; 815  :       aa_fix_val         = { };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T4[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	eax, DWORD PTR _aa_fix_val$[ebp]
	push	eax
	call	_memcpy

; 819  :       NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &aa_fix_val));

	lea	eax, DWORD PTR _aa_fix_val$[ebp]
	mov	DWORD PTR _aa_fix_val$[ebp], 77856	; 00013020H
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _aa_fix_val$[ebp+4100], 547063 ; 000858f7H
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _aa_fix_val$[ebp+4104], 0
	mov	DWORD PTR _aa_fix_val$[ebp+8220], edi
	mov	DWORD PTR _aa_fix_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN78@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN78@SK_NvAPI_S
	push	OFFSET $SG165879
	push	OFFSET $SG165880
	push	819					; 00000333H
	push	OFFSET $SG165881
	push	eax
	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN636@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN636@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 819  :       NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &aa_fix_val));

	push	327744					; 00050040H
	push	OFFSET $SG165878
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN78@SK_NvAPI_S:

; 820  : 
; 821  :       already_set = FALSE;

	xor	esi, esi

; 822  :     }
; 823  :   }
; 824  : 
; 825  :   else

	jmp	SHORT $LN76@SK_NvAPI_S
$LN75@SK_NvAPI_S:

; 826  :   {
; 827  :     dll_log.Log ( L"[  NvAPI   ] *** Cannot set NvDRS Profile Setting '%x' as a normal user, skipping...",

	push	547063					; 000858f7H
	push	OFFSET $SG165882
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
$LN76@SK_NvAPI_S:

; 828  :                     aa_fix_enum );
; 829  :   }
; 830  : 
; 831  :   if (autobias_val.u32CurrentValue != auto_bias && auto_bias != -1)

	mov	edi, DWORD PTR _auto_bias$1$[ebp]
	cmp	DWORD PTR _autobias_val$[ebp+8220], edi
	je	$LN79@SK_NvAPI_S
	cmp	edi, -1
	je	$LN79@SK_NvAPI_S

; 832  :   {
; 833  :     autobias_val         = { };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T3[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	eax, DWORD PTR _autobias_val$[ebp]
	push	eax
	call	_memcpy

; 839  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &autobias_val));

	lea	eax, DWORD PTR _autobias_val$[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _autobias_val$[ebp], 77856	; 00013020H
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _autobias_val$[ebp+4100], 6524559 ; 00638e8fH
	mov	DWORD PTR _autobias_val$[ebp+4104], 0
	mov	DWORD PTR _autobias_val$[ebp+8220], edi
	mov	DWORD PTR _autobias_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN80@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN80@SK_NvAPI_S
	push	OFFSET $SG165886
	push	OFFSET $SG165887
	push	839					; 00000347H
	push	OFFSET $SG165888
	push	eax
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN655@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN655@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 839  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &autobias_val));

	push	327744					; 00050040H
	push	OFFSET $SG165885
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN80@SK_NvAPI_S:

; 840  :     NVAPI_VERBOSE   ();

	mov	BYTE PTR ?nvapi_silent@@3_NA, 0

; 841  : 
; 842  :     already_set = FALSE;    

	xor	esi, esi
$LN79@SK_NvAPI_S:

; 843  :   }
; 844  : 
; 845  :   if (override_val.u32CurrentValue != override && override != -1)

	mov	edi, DWORD PTR _override$1$[ebp]
	cmp	DWORD PTR _override_val$[ebp+8220], edi
	je	$LN81@SK_NvAPI_S
	cmp	edi, -1
	je	$LN81@SK_NvAPI_S

; 846  :   {
; 847  :     override_val         = { };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T2[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	eax, DWORD PTR _override_val$[ebp]
	push	eax
	call	_memcpy

; 851  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &override_val));

	lea	eax, DWORD PTR _override_val$[ebp]
	mov	DWORD PTR _override_val$[ebp], 77856	; 00013020H
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _override_val$[ebp+4100], 276757595 ; 107efc5bH
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _override_val$[ebp+4104], 0
	mov	DWORD PTR _override_val$[ebp+8220], edi
	mov	DWORD PTR _override_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN82@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN82@SK_NvAPI_S
	push	OFFSET $SG165892
	push	OFFSET $SG165893
	push	851					; 00000353H
	push	OFFSET $SG165894
	push	eax
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN674@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN674@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 851  :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &override_val));

	push	327744					; 00050040H
	push	OFFSET $SG165891
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN82@SK_NvAPI_S:

; 852  : 
; 853  :     already_set = FALSE;

	xor	esi, esi

; 854  :   }
; 855  : 
; 856  :   if (! already_set)

	jmp	SHORT $LN723@SK_NvAPI_S
$LN81@SK_NvAPI_S:
	test	esi, esi
	jne	SHORT $LN84@SK_NvAPI_S
$LN723@SK_NvAPI_S:

; 875  :     NVAPI_CALL (DRS_SaveSettings (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_SaveSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN84@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN84@SK_NvAPI_S
	push	OFFSET $SG165898
	push	OFFSET $SG165899
	push	875					; 0000036bH
	push	OFFSET $SG165900
	push	eax
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN693@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN693@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 875  :     NVAPI_CALL (DRS_SaveSettings (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG165897
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN84@SK_NvAPI_S:

; 878  :   NVAPI_CALL (DRS_DestroySession (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_DestroySession
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN85@SK_NvAPI_S
	test	eax, eax
	je	SHORT $LN85@SK_NvAPI_S
	push	OFFSET $SG165903
	push	OFFSET $SG165904
	push	878					; 0000036eH
	push	OFFSET $SG165905
	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN712@SK_NvAPI_S
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN712@SK_NvAPI_S:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 878  :   NVAPI_CALL (DRS_DestroySession (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG165902
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN85@SK_NvAPI_S:

; 879  : 
; 880  :   LeaveCriticalSection (&cs_aa_override);

	push	OFFSET ?cs_aa_override@?1??SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z@4U_RTL_CRITICAL_SECTION@@A
	call	DWORD PTR __imp__LeaveCriticalSection@4
	pop	edi
	pop	ebx

; 881  : 
; 882  :   return already_set;

	mov	eax, esi
	pop	esi

; 883  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z ENDP	; SK_NvAPI_SetAntiAliasingOverride
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_wszFormattedError$ = -2308				; size = 2048
_szError$ = -260					; size = 256
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_err$ = 12						; size = 4
_args$ = 16						; size = 4
_line_no$ = 20						; size = 4
_function_name$ = 24					; size = 4
_file_name$ = 28					; size = 4
?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z PROC ; sk::NVAPI::ErrorMessage

; 95   : { char szError [256];

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 2308				; 00000904H
	push	esi

; 96   : 
; 97   :   NvAPI_GetErrorMessage (err, szError);

	lea	eax, DWORD PTR _szError$[ebp]
	mov	DWORD PTR $T1[ebp], 0
	push	eax
	push	DWORD PTR _err$[ebp]
	call	_NvAPI_GetErrorMessage

; 98   : 
; 99   :   wchar_t wszFormattedError [1024] = { };

	push	2048					; 00000800H
	lea	eax, DWORD PTR _wszFormattedError$[ebp]
	push	0
	push	eax
	call	_memset

; 101  :   swprintf ( wszFormattedError, 1024,

	lea	eax, DWORD PTR _szError$[ebp]
	push	eax
	push	DWORD PTR _args$[ebp]
	lea	eax, DWORD PTR _wszFormattedError$[ebp]
	push	DWORD PTR _function_name$[ebp]
	push	DWORD PTR _file_name$[ebp]
	push	DWORD PTR _line_no$[ebp]
	push	OFFSET $SG165368
	push	1024					; 00000400H
	push	eax
	call	_swprintf
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ecx, DWORD PTR _wszFormattedError$[ebp]
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 101  :   swprintf ( wszFormattedError, 1024,

	add	esp, 52					; 00000034H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edx, DWORD PTR [ecx+2]

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
$LL29@ErrorMessa:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL29@ErrorMessa
	sub	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	lea	eax, DWORD PTR _wszFormattedError$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	eax
	mov	ecx, esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 111  :   return wszFormattedError;

	mov	eax, esi
	pop	esi

; 112  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ENDP ; sk::NVAPI::ErrorMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_ver_str$ = -200					; size = 64
_ver_wstr$ = -136					; size = 128
$T1 = -8						; size = 4
_ver$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pVer$ = 12						; size = 4
?GetDriverVersion@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAK@Z PROC ; sk::NVAPI::GetDriverVersion

; 328  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H

; 329  :   NvU32             ver           =  0;
; 330  :   NvAPI_ShortString ver_str       = { }; // ANSI

	push	64					; 00000040H
	lea	eax, DWORD PTR _ver_str$[ebp]
	mov	DWORD PTR $T1[ebp], 0
	push	0
	push	eax
	mov	DWORD PTR _ver$[ebp], 0
	call	_memset

; 331  :   wchar_t           ver_wstr [64] = { }; // Unicode

	push	128					; 00000080H
	lea	eax, DWORD PTR _ver_wstr$[ebp]
	push	0
	push	eax
	call	_memset

; 332  : 
; 333  :   NvAPI_SYS_GetDriverAndBranchVersion (&ver, ver_str);

	lea	eax, DWORD PTR _ver_str$[ebp]
	push	eax
	lea	eax, DWORD PTR _ver$[ebp]
	push	eax
	call	_NvAPI_SYS_GetDriverAndBranchVersion

; 334  : 
; 335  :   // The driver-branch string's not particularly user frieldy,
; 336  :   //   let's do this the right way and report a number the end-user
; 337  :   //     is actually going to recognize...
; 338  :   _snwprintf (ver_wstr, 63, L"%u.%u", ver / 100, ver % 100);

	mov	ecx, DWORD PTR _ver$[ebp]
	mov	eax, 1374389535				; 51eb851fH
	mul	ecx
	shr	edx, 5
	imul	eax, edx, 100
	sub	ecx, eax
	lea	eax, DWORD PTR _ver_wstr$[ebp]
	push	ecx
	push	edx
	push	OFFSET $SG165501
	push	63					; 0000003fH
	push	eax
	call	__snwprintf

; 339  :   ver_wstr [63] = L'\0';
; 340  : 
; 341  :   if (pVer != nullptr)

	mov	ecx, DWORD PTR _pVer$[ebp]
	xor	eax, eax
	add	esp, 52					; 00000034H
	mov	WORD PTR _ver_wstr$[ebp+126], ax
	test	ecx, ecx
	je	SHORT $LN2@GetDriverV

; 342  :     *pVer = ver;

	mov	eax, DWORD PTR _ver$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@GetDriverV:
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	ecx, DWORD PTR _ver_wstr$[ebp]

; 326  : 		_Left = _Right;

	xor	eax, eax

; 289  : 		return (_CSTD wcslen(_First));

	lea	edx, DWORD PTR [ecx+2]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	npad	8
$LL30@GetDriverV:

; 289  : 		return (_CSTD wcslen(_First));

	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL30@GetDriverV
	sub	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	lea	eax, DWORD PTR _ver_wstr$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	eax
	mov	ecx, esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 344  :   return ver_wstr;

	mov	eax, esi
	pop	esi

; 345  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetDriverVersion@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAK@Z ENDP ; sk::NVAPI::GetDriverVersion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
$T2 = -61696						; size = 20492
$T3 = -53524						; size = 12320
$T4 = -53524						; size = 12320
$T5 = -53524						; size = 12320
_gpu_count_val$ = -41204				; size = 12320
_mode_val$ = -28884					; size = 12320
_compat_bits_val$ = -16564				; size = 12320
_custom_profile$6 = -4244				; size = 4116
$T7 = -128						; size = 24
_wszGPUCountLower$1$ = -104				; size = 4
_mode_str$ = -100					; size = 24
_compat_bits_enum$1$ = -76				; size = 4
_gpu_count_str$ = -72					; size = 24
$T8 = -48						; size = 24
$T9 = -48						; size = 24
$T10 = -48						; size = 24
$T11 = -48						; size = 24
$T12 = -48						; size = 24
$T13 = -48						; size = 24
$T14 = -48						; size = 24
$T15 = -48						; size = 24
$T16 = -48						; size = 24
$T17 = -48						; size = 24
$T18 = -48						; size = 24
$T19 = -48						; size = 24
$T20 = -48						; size = 24
$T21 = -48						; size = 24
$T22 = -48						; size = 24
_compat_bits$1$ = -24					; size = 4
tv2226 = -24						; size = 4
tv2223 = -24						; size = 4
_gpu_count$1$ = -20					; size = 4
_hProfile$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hSession$ = 8						; size = 4
_role$ = 8						; size = 4
_wszModeName$ = 12					; size = 4
_wszGPUCount$ = 16					; size = 4
_wszCompatBits$ = 20					; size = 4
?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z PROC	; sk::NVAPI::SetSLIOverride

; 1058 : {

	npad	2
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z
	push	eax
	mov	eax, 61684				; 0000f0f4H
	mov	DWORD PTR fs:0, esp
	call	__chkstk
	push	edi

; 1059 :   // SLI only works in DirectX.
; 1060 :   if (role != DXGI && role != D3D9)

	mov	edi, DWORD PTR _role$[ebp]
	cmp	edi, 1
	je	SHORT $LN2@SetSLIOver
	cmp	edi, 2
	je	SHORT $LN2@SetSLIOver

; 1061 :     return TRUE;

	mov	eax, 1
	pop	edi

; 1271 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@SetSLIOver:

; 1062 : 
; 1063 :   if (! nv_hardware)

	cmp	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware
	jne	SHORT $LN3@SetSLIOver

; 1064 :     return FALSE;

	xor	eax, eax
	pop	edi

; 1271 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@SetSLIOver:

; 1069 :   NVAPI_CALL (DRS_CreateSession (&hSession));

	lea	eax, DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _hSession$[ebp], 0
	push	esi
	push	eax
	call	_NvAPI_DRS_CreateSession
	mov	esi, DWORD PTR __imp__MessageBoxW@16
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN4@SetSLIOver
	test	eax, eax
	je	SHORT $LN4@SetSLIOver
	push	OFFSET $SG166190
	push	OFFSET $SG166191
	push	1069					; 0000042dH
	push	OFFSET $SG166192
	push	eax
	lea	eax, DWORD PTR $T22[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN92@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN92@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1069 :   NVAPI_CALL (DRS_CreateSession (&hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166189
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T22[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@SetSLIOver:

; 1070 :   NVAPI_CALL (DRS_LoadSettings  (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_LoadSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN5@SetSLIOver
	test	eax, eax
	je	SHORT $LN5@SetSLIOver
	push	OFFSET $SG166195
	push	OFFSET $SG166196
	push	1070					; 0000042eH
	push	OFFSET $SG166197
	push	eax
	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN111@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN111@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1070 :   NVAPI_CALL (DRS_LoadSettings  (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166194
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T21[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@SetSLIOver:

; 1071 : 
; 1072 :          NvDRSProfileHandle hProfile = { };
; 1073 :   static NVDRS_APPLICATION  app      = { };
; 1074 : 
; 1075 :   NvU32 compat_bits_enum = 
; 1076 :     (role == DXGI ? SLI_COMPAT_BITS_DXGI_ID :

	mov	ecx, 10512710				; 00a06946H
	mov	DWORD PTR _hProfile$[ebp], 0
	cmp	edi, 1
	mov	eax, 278257400				; 1095def8H
	push	ebx

; 1077 :                     SLI_COMPAT_BITS_DX9_ID);
; 1078 : 
; 1079 :   NvU32 gpu_count_enum =
; 1080 :     SLI_GPU_COUNT_ID;
; 1081 : 
; 1082 :   NvU32 render_mode_enum =
; 1083 :     SLI_RENDERING_MODE_ID;
; 1084 : 
; 1085 :   NvU32 render_mode = SLI_RENDERING_MODE_DEFAULT; //0x00000007;
; 1086 :   NvU32 gpu_count   = SLI_GPU_COUNT_DEFAULT;
; 1087 :   NvU32 compat_bits = 0x00000000;
; 1088 : 
; 1089 :   wchar_t* wszModeNameLower = _wcsdup (wszModeName);

	push	DWORD PTR _wszModeName$[ebp]
	cmove	eax, ecx
	xor	ebx, ebx
	mov	DWORD PTR _compat_bits_enum$1$[ebp], eax
	mov	DWORD PTR _gpu_count$1$[ebp], ebx
	call	DWORD PTR __imp___wcsdup
	mov	edi, eax

; 1090 :   std::wstring mode_str (_wcslwr (wszModeNameLower));

	push	edi
	call	DWORD PTR __imp___wcslwr
	mov	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _mode_str$[ebp+16], ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _mode_str$[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1090 :   std::wstring mode_str (_wcslwr (wszModeNameLower));

	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR _mode_str$[ebp], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	eax, DWORD PTR [ecx+2]
	mov	DWORD PTR tv2223[ebp], eax
	npad	2
$LL628@SetSLIOver:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL628@SetSLIOver
	sub	ecx, DWORD PTR tv2223[ebp]
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1091 :   free (wszModeNameLower);

	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	DWORD PTR __imp__free
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	lea	ecx, DWORD PTR _mode_str$[ebp]
	push	OFFSET $SG166200
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1093 :   if (mode_str == L"default")

	test	al, al
	je	SHORT $LN6@SetSLIOver

; 1094 :     render_mode = SLI_RENDERING_MODE_DEFAULT;

	xor	ebx, ebx

; 1095 :   else if (mode_str == L"auto")

	jmp	$LN19@SetSLIOver
$LN6@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166203
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1095 :   else if (mode_str == L"auto")

	test	al, al
	je	SHORT $LN8@SetSLIOver

; 1096 :     render_mode = SLI_RENDERING_MODE_AUTOSELECT;

	xor	ebx, ebx

; 1097 :   else if (mode_str == L"single")

	jmp	$LN19@SetSLIOver
$LN8@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166206
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1097 :   else if (mode_str == L"single")

	test	al, al
	je	SHORT $LN10@SetSLIOver

; 1098 :     render_mode = SLI_RENDERING_MODE_FORCE_SINGLE;

	mov	ebx, 1

; 1099 :   else if (mode_str == L"afr")

	jmp	$LN19@SetSLIOver
$LN10@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166209
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1099 :   else if (mode_str == L"afr")

	test	al, al
	je	SHORT $LN12@SetSLIOver

; 1100 :     render_mode = SLI_RENDERING_MODE_FORCE_AFR;

	mov	ebx, 2

; 1101 :   else if (mode_str == L"afr2")

	jmp	$LN19@SetSLIOver
$LN12@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166212
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1101 :   else if (mode_str == L"afr2")

	test	al, al
	je	SHORT $LN14@SetSLIOver

; 1102 :     render_mode = SLI_RENDERING_MODE_FORCE_AFR2;

	mov	ebx, 3

; 1103 :   else if (mode_str == L"sfr")

	jmp	SHORT $LN19@SetSLIOver
$LN14@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166215
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1103 :   else if (mode_str == L"sfr")

	test	al, al
	je	SHORT $LN16@SetSLIOver

; 1104 :     render_mode = SLI_RENDERING_MODE_FORCE_SFR;

	mov	ebx, 4

; 1105 :   else if (mode_str == L"3afr"       ||

	jmp	SHORT $LN19@SetSLIOver
$LN16@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166219
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1107 :            mode_str == L"afr3"       ||

	test	al, al
	jne	SHORT $LN20@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166220
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1107 :            mode_str == L"afr3"       ||

	test	al, al
	jne	SHORT $LN20@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166221
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1107 :            mode_str == L"afr3"       ||

	test	al, al
	jne	SHORT $LN20@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166222
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1107 :            mode_str == L"afr3"       ||

	test	al, al
	jne	SHORT $LN20@SetSLIOver

; 1110 :   else
; 1111 :     dll_log.Log ( L"[  NvAPI   ] >> Unknown SLI Mode: '%s', falling back to 'Auto'",

	push	DWORD PTR _wszModeName$[ebp]
	push	OFFSET $SG166223
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN19@SetSLIOver
$LN20@SetSLIOver:

; 1108 :            mode_str == L"afr of sfr  fallback 3afr")
; 1109 :     render_mode = SLI_RENDERING_MODE_FORCE_AFR_OF_SFR__FALLBACK_3AFR;

	mov	ebx, 5
$LN19@SetSLIOver:

; 1112 :                     wszModeName );
; 1113 : 
; 1114 :   wchar_t* wszGPUCountLower = _wcsdup (wszGPUCount);

	mov	edi, DWORD PTR _wszGPUCount$[ebp]
	push	edi
	call	DWORD PTR __imp___wcsdup

; 1115 :   std::wstring gpu_count_str (_wcslwr (wszGPUCountLower));

	push	eax
	mov	DWORD PTR _wszGPUCountLower$1$[ebp], eax
	call	DWORD PTR __imp___wcslwr
	mov	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _gpu_count_str$[ebp+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _gpu_count_str$[ebp+20], 7
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1115 :   std::wstring gpu_count_str (_wcslwr (wszGPUCountLower));

	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR _gpu_count_str$[ebp], ax

; 289  : 		return (_CSTD wcslen(_First));

	lea	eax, DWORD PTR [ecx+2]
	mov	DWORD PTR tv2226[ebp], eax
$LL629@SetSLIOver:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL629@SetSLIOver
	sub	ecx, DWORD PTR tv2226[ebp]
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	edx
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1116 :   free (wszGPUCountLower);

	push	DWORD PTR _wszGPUCountLower$1$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp__free
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	push	OFFSET $SG166226
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1118 :   if (gpu_count_str == L"default")

	test	al, al
	je	SHORT $LN21@SetSLIOver

; 1119 :     gpu_count = SLI_GPU_COUNT_DEFAULT;

	mov	DWORD PTR _gpu_count$1$[ebp], 0

; 1120 :   else if (gpu_count_str == L"auto")

	jmp	$LN35@SetSLIOver
$LN21@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166229
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1120 :   else if (gpu_count_str == L"auto")

	test	al, al
	je	SHORT $LN23@SetSLIOver

; 1121 :     gpu_count = SLI_GPU_COUNT_AUTOSELECT;

	mov	DWORD PTR _gpu_count$1$[ebp], 0

; 1122 :   else if (gpu_count_str == L"one"   || gpu_count_str == L"1")

	jmp	$LN35@SetSLIOver
$LN23@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166233
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1122 :   else if (gpu_count_str == L"one"   || gpu_count_str == L"1")

	test	al, al
	jne	$LN27@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166234
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1122 :   else if (gpu_count_str == L"one"   || gpu_count_str == L"1")

	test	al, al
	jne	$LN27@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166238
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1124 :   else if (gpu_count_str == L"two"   || gpu_count_str == L"2")

	test	al, al
	jne	$LN30@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166239
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1124 :   else if (gpu_count_str == L"two"   || gpu_count_str == L"2")

	test	al, al
	jne	SHORT $LN30@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166243
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1126 :   else if (gpu_count_str == L"three" || gpu_count_str == L"3")

	test	al, al
	jne	SHORT $LN33@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166244
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1126 :   else if (gpu_count_str == L"three" || gpu_count_str == L"3")

	test	al, al
	jne	SHORT $LN33@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166248
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1128 :   else if (gpu_count_str == L"four"  || gpu_count_str == L"4")

	test	al, al
	jne	SHORT $LN36@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3844 : 	return (_Left._Equal(_Right));

	push	OFFSET $SG166249
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1128 :   else if (gpu_count_str == L"four"  || gpu_count_str == L"4")

	test	al, al
	jne	SHORT $LN36@SetSLIOver

; 1131 :     dll_log.Log ( L"[  NvAPI   ] >> Unknown SLI GPU Count: '%s', falling back to 'Auto'",

	push	edi
	push	OFFSET $SG166250
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN35@SetSLIOver
$LN36@SetSLIOver:

; 1129 :     gpu_count = SLI_GPU_COUNT_FOUR;

	mov	DWORD PTR _gpu_count$1$[ebp], 4

; 1130 :   else

	jmp	SHORT $LN35@SetSLIOver
$LN33@SetSLIOver:

; 1127 :     gpu_count = SLI_GPU_COUNT_THREE;

	mov	DWORD PTR _gpu_count$1$[ebp], 3

; 1128 :   else if (gpu_count_str == L"four"  || gpu_count_str == L"4")

	jmp	SHORT $LN35@SetSLIOver
$LN30@SetSLIOver:

; 1125 :     gpu_count = SLI_GPU_COUNT_TWO;

	mov	DWORD PTR _gpu_count$1$[ebp], 2

; 1126 :   else if (gpu_count_str == L"three" || gpu_count_str == L"3")

	jmp	SHORT $LN35@SetSLIOver
$LN27@SetSLIOver:

; 1123 :     gpu_count = SLI_GPU_COUNT_ONE;

	mov	DWORD PTR _gpu_count$1$[ebp], 1
$LN35@SetSLIOver:

; 1134 :   compat_bits = wcstoul (wszCompatBits, nullptr, 16);

	push	16					; 00000010H
	push	0
	push	DWORD PTR _wszCompatBits$[ebp]
	call	DWORD PTR __imp__wcstoul
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1134 :   compat_bits = wcstoul (wszCompatBits, nullptr, 16);

	mov	DWORD PTR _compat_bits$1$[ebp], eax

; 1141 :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	lea	eax, DWORD PTR _hProfile$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	cmovae	ecx, DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1141 :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	push	OFFSET ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A
	push	eax
	push	ecx
	push	DWORD PTR _hSession$[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	mov	DWORD PTR ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A, 282636 ; 0004500cH
	call	_NvAPI_DRS_FindApplicationByName
	add	esp, 28					; 0000001cH
	mov	edi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN37@SetSLIOver
	test	edi, edi
	je	SHORT $LN37@SetSLIOver
	push	OFFSET $SG166253
	push	OFFSET $SG166254
	push	1145					; 00000479H
	push	OFFSET $SG166255
	lea	eax, DWORD PTR $T20[ebp]
	push	edi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN237@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN237@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1141 :   NVAPI_CALL2 ( DRS_FindApplicationByName ( hSession,

	push	327744					; 00050040H
	push	OFFSET $SG166252
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T20[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN37@SetSLIOver:

; 1142 :                                               (NvU16 *)app_name.c_str (),
; 1143 :                                                 &hProfile,
; 1144 :                                                   &app ),
; 1145 :                 ret );
; 1146 : 
; 1147 :   // If no executable exists anywhere by this name, create a profile for it
; 1148 :   //   and then add the executable to it.
; 1149 :   if (ret == NVAPI_EXECUTABLE_NOT_FOUND)

	cmp	edi, -166				; ffffff5aH
	jne	$LN44@SetSLIOver

; 1150 :   {
; 1151 :     NVDRS_PROFILE custom_profile = { };

	push	4116					; 00001014H
	lea	eax, DWORD PTR _custom_profile$6[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1152 : 
; 1153 :     custom_profile.isPredefined = false;

	mov	DWORD PTR _custom_profile$6[ebp+4104], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	cmovae	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1154 :     lstrcpyW ((wchar_t *)custom_profile.profileName, friendly_name.c_str ());

	push	eax
	lea	eax, DWORD PTR _custom_profile$6[ebp+4]
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8

; 1161 :       NVAPI_CALL2 (DRS_CreateProfile (hSession, &custom_profile, &hProfile), ret);

	lea	eax, DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _custom_profile$6[ebp], 69652	; 00011014H
	push	eax
	lea	eax, DWORD PTR _custom_profile$6[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	push	eax
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_CreateProfile
	add	esp, 12					; 0000000cH
	mov	edi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN39@SetSLIOver
	test	edi, edi
	je	SHORT $LN39@SetSLIOver
	push	OFFSET $SG166259
	push	OFFSET $SG166260
	push	1161					; 00000489H
	push	OFFSET $SG166261
	lea	eax, DWORD PTR $T19[ebp]
	push	edi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN275@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN275@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1161 :       NVAPI_CALL2 (DRS_CreateProfile (hSession, &custom_profile, &hProfile), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166258
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN39@SetSLIOver:

; 1162 :     }
; 1163 :     NVAPI_VERBOSE ()

	mov	BYTE PTR ?nvapi_silent@@3_NA, 0

; 1164 : 
; 1165 :     // Add the application name to the profile, if a profile already exists
; 1166 :     if (ret == NVAPI_PROFILE_NAME_IN_USE)

	cmp	edi, -164				; ffffff5cH
	jne	SHORT $LN41@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1167 :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	lea	ecx, DWORD PTR _hProfile$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	cmovae	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1167 :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	push	ecx
	push	eax
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_FindProfileByName
	add	esp, 12					; 0000000cH
	mov	edi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN41@SetSLIOver
	test	edi, edi
	je	SHORT $LN626@SetSLIOver
	push	OFFSET $SG166265
	push	OFFSET $SG166266
	push	1170					; 00000492H
	push	OFFSET $SG166267
	lea	eax, DWORD PTR $T18[ebp]
	push	edi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN313@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN313@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1167 :       NVAPI_CALL2 ( DRS_FindProfileByName ( hSession,

	push	327744					; 00050040H
	push	OFFSET $SG166264
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN41@SetSLIOver:

; 1168 :                                               (NvU16 *)friendly_name.c_str (),
; 1169 :                                                 &hProfile),
; 1170 :                       ret );
; 1171 : 
; 1172 :     if (ret == NVAPI_OK)

	test	edi, edi
	jne	$LN44@SetSLIOver
$LN626@SetSLIOver:

; 1173 :     {
; 1174 :       app = { };

	push	20492					; 0000500cH
	lea	eax, DWORD PTR $T2[ebp]
	push	0
	push	eax
	call	_memset
	push	20492					; 0000500cH
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	push	OFFSET ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A
	call	_memcpy

; 1176 :       lstrcpyW ((wchar_t *)app.appName,          app_name.c_str      ());

	mov	edi, DWORD PTR __imp__lstrcpyW@8
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	cmovae	eax, DWORD PTR ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1176 :       lstrcpyW ((wchar_t *)app.appName,          app_name.c_str      ());

	push	eax
	push	OFFSET ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A+8
	call	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+20, 8

; 1621 : 		return (_Large_string_engaged()

	mov	eax, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	cmovae	eax, DWORD PTR ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1177 :       lstrcpyW ((wchar_t *)app.userFriendlyName, friendly_name.c_str ());

	push	eax
	push	OFFSET ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A+4104
	call	edi

; 1178 : 
; 1179 :       app.version      = NVDRS_APPLICATION_VER;
; 1180 :       app.isPredefined = false;
; 1181 :       app.isMetro      = false;

	and	DWORD PTR ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A+16392, -2 ; fffffffeH

; 1183 :       NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);

	push	OFFSET ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A, 282636 ; 0004500cH
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR ?app@?1??SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z@4U_NVDRS_APPLICATION_V4@@A+4, 0
	call	_NvAPI_DRS_CreateApplication
	add	esp, 12					; 0000000cH
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN43@SetSLIOver
	test	eax, eax
	je	SHORT $LN43@SetSLIOver
	push	OFFSET $SG166271
	push	OFFSET $SG166272
	push	1183					; 0000049fH
	push	OFFSET $SG166273
	push	eax
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN370@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN370@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1183 :       NVAPI_CALL2 (DRS_CreateApplication (hSession, hProfile, &app), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166270
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN43@SetSLIOver:

; 1184 :       NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_SaveSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN44@SetSLIOver
	test	eax, eax
	je	SHORT $LN44@SetSLIOver
	push	OFFSET $SG166276
	push	OFFSET $SG166277
	push	1184					; 000004a0H
	push	OFFSET $SG166278
	push	eax
	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN389@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN389@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1184 :       NVAPI_CALL2 (DRS_SaveSettings      (hSession), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166275
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN44@SetSLIOver:

; 1185 :     }
; 1186 :   }
; 1187 : 
; 1188 :   NVDRS_SETTING mode_val                = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _mode_val$[ebp]
	push	0
	push	eax
	call	_memset

; 1189 :                 mode_val.version        = NVDRS_SETTING_VER;
; 1190 : 
; 1191 :   NVDRS_SETTING gpu_count_val           = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _gpu_count_val$[ebp]
	mov	DWORD PTR _mode_val$[ebp], 77856	; 00013020H
	push	0
	push	eax
	call	_memset

; 1192 :                 gpu_count_val.version   = NVDRS_SETTING_VER;
; 1193 : 
; 1194 :   NVDRS_SETTING compat_bits_val         = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR _compat_bits_val$[ebp]
	mov	DWORD PTR _gpu_count_val$[ebp], 77856	; 00013020H
	push	0
	push	eax
	call	_memset

; 1199 :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, render_mode_enum, &mode_val));

	lea	eax, DWORD PTR _mode_val$[ebp]
	mov	DWORD PTR _compat_bits_val$[ebp], 77856	; 00013020H
	push	eax
	push	271830737				; 1033ced1H
	push	DWORD PTR _hProfile$[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 52					; 00000034H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN45@SetSLIOver
	test	eax, eax
	je	SHORT $LN45@SetSLIOver
	push	OFFSET $SG166281
	push	OFFSET $SG166282
	push	1199					; 000004afH
	push	OFFSET $SG166283
	push	eax
	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN408@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN408@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1199 :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, render_mode_enum, &mode_val));

	push	327744					; 00050040H
	push	OFFSET $SG166280
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN45@SetSLIOver:

; 1200 :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, gpu_count_enum,   &gpu_count_val));

	lea	eax, DWORD PTR _gpu_count_val$[ebp]
	push	eax
	push	271834321				; 1033dcd1H
	push	DWORD PTR _hProfile$[ebp]
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 16					; 00000010H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN46@SetSLIOver
	test	eax, eax
	je	SHORT $LN46@SetSLIOver
	push	OFFSET $SG166286
	push	OFFSET $SG166287
	push	1200					; 000004b0H
	push	OFFSET $SG166288
	push	eax
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN427@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN427@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1200 :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, gpu_count_enum,   &gpu_count_val));

	push	327744					; 00050040H
	push	OFFSET $SG166285
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN46@SetSLIOver:

; 1201 :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, compat_bits_enum, &compat_bits_val));

	lea	eax, DWORD PTR _compat_bits_val$[ebp]
	push	eax
	push	DWORD PTR _compat_bits_enum$1$[ebp]
	push	DWORD PTR _hProfile$[ebp]
	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_GetSetting
	add	esp, 16					; 00000010H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN47@SetSLIOver
	test	eax, eax
	je	SHORT $LN47@SetSLIOver
	push	OFFSET $SG166291
	push	OFFSET $SG166292
	push	1201					; 000004b1H
	push	OFFSET $SG166293
	push	eax
	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN446@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN446@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1201 :   NVAPI_CALL (DRS_GetSetting (hSession, hProfile, compat_bits_enum, &compat_bits_val));

	push	327744					; 00050040H
	push	OFFSET $SG166290
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN47@SetSLIOver:

; 1202 :   NVAPI_VERBOSE ();
; 1203 : 
; 1204 :   BOOL already_set = TRUE;
; 1205 : 
; 1206 :   // Do this first so we don't touch other settings if this fails
; 1207 :   if (compat_bits_val.u32CurrentValue != compat_bits)

	mov	eax, DWORD PTR _compat_bits$1$[ebp]
	mov	edi, 1
	mov	BYTE PTR ?nvapi_silent@@3_NA, 0
	cmp	DWORD PTR _compat_bits_val$[ebp+8220], eax
	je	$LN48@SetSLIOver

; 1208 :   {
; 1209 :     compat_bits_val         = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T5[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	eax, DWORD PTR _compat_bits_val$[ebp]
	push	eax
	call	_memcpy

; 1210 :     compat_bits_val.version = NVDRS_SETTING_VER;
; 1211 : 
; 1212 :     ret = NVAPI_ERROR;
; 1213 : 
; 1214 :     // This requires admin privs, and we will handle that gracefully...
; 1215 :     NVAPI_SILENT    ();
; 1216 :     NVAPI_SET_DWORD (compat_bits_val, compat_bits_enum, compat_bits);

	mov	eax, DWORD PTR _compat_bits_enum$1$[ebp]
	mov	DWORD PTR _compat_bits_val$[ebp+4100], eax
	mov	eax, DWORD PTR _compat_bits$1$[ebp]
	mov	DWORD PTR _compat_bits_val$[ebp+8220], eax

; 1217 :     NVAPI_CALL2     (DRS_SetSetting (hSession, hProfile, &compat_bits_val), ret);

	lea	eax, DWORD PTR _compat_bits_val$[ebp]
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	BYTE PTR ?nvapi_silent@@3_NA, 1
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _compat_bits_val$[ebp], 77856	; 00013020H
	mov	DWORD PTR _compat_bits_val$[ebp+4104], 0
	mov	DWORD PTR _compat_bits_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	mov	edi, eax
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN49@SetSLIOver
	test	edi, edi
	je	SHORT $LN49@SetSLIOver
	push	OFFSET $SG166297
	push	OFFSET $SG166298
	push	1217					; 000004c1H
	push	OFFSET $SG166299
	lea	eax, DWORD PTR $T12[ebp]
	push	edi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN465@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN465@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1217 :     NVAPI_CALL2     (DRS_SetSetting (hSession, hProfile, &compat_bits_val), ret);

	push	327744					; 00050040H
	push	OFFSET $SG166296
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN49@SetSLIOver:

; 1218 :     NVAPI_VERBOSE   ();

	mov	BYTE PTR ?nvapi_silent@@3_NA, 0

; 1219 : 
; 1220 :     // Not running as admin, don't do the override!
; 1221 :     if (ret == NVAPI_INVALID_USER_PRIVILEGE)

	cmp	edi, -137				; ffffff77H
	jne	$LN50@SetSLIOver

; 1222 :     {
; 1223 :       int result = 
; 1224 :         MessageBox ( nullptr,

	push	327745					; 00050041H
	push	OFFSET $SG166301
	push	OFFSET $SG166302
	push	0
	call	esi

; 1225 :                        L"Please run this game as Administrator to install SLI "
; 1226 :                        L"compatibility bits\r\n\r\n"
; 1227 :                        L"\t>> Pressing Cancel will disable SLI Override",
; 1228 :                          L"Insufficient User Privileges",
; 1229 :                            MB_OKCANCEL | MB_ICONASTERISK | MB_SETFOREGROUND |
; 1230 :                            MB_TOPMOST );
; 1231 : 
; 1232 :       if (result == IDCANCEL) {

	cmp	eax, 2
	jne	$LN51@SetSLIOver

; 1234 :         NVAPI_CALL (DRS_DestroySession (hSession));

	push	DWORD PTR _hSession$[ebp]
	mov	BYTE PTR ?config@@3Usk_config_t@@A+668, 0
	call	_NvAPI_DRS_DestroySession
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN52@SetSLIOver
	test	eax, eax
	je	SHORT $LN52@SetSLIOver
	push	OFFSET $SG166306
	push	OFFSET $SG166307
	push	1234					; 000004d2H
	push	OFFSET $SG166308
	push	eax
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN484@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN484@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1234 :         NVAPI_CALL (DRS_DestroySession (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166305
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN52@SetSLIOver:

; 1235 :         return FALSE;

	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	ecx, DWORD PTR _mode_str$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	pop	ebx
	pop	esi
	xor	eax, eax
	pop	edi

; 1271 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN51@SetSLIOver:

; 1236 :       }
; 1237 :       exit (0);

	push	0
	call	DWORD PTR __imp__exit
$LN634@SetSLIOver:
$LN50@SetSLIOver:

; 1238 :     }
; 1239 : 
; 1240 :     already_set = FALSE;

	xor	edi, edi
$LN48@SetSLIOver:

; 1241 :   }
; 1242 : 
; 1243 :   if (mode_val.u32CurrentValue != render_mode)

	cmp	DWORD PTR _mode_val$[ebp+8220], ebx
	je	$LN53@SetSLIOver

; 1244 :   {
; 1245 :     mode_val         = { };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T4[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	eax, DWORD PTR _mode_val$[ebp]
	push	eax
	call	_memcpy

; 1249 :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &mode_val));

	lea	eax, DWORD PTR _mode_val$[ebp]
	mov	DWORD PTR _mode_val$[ebp], 77856	; 00013020H
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _mode_val$[ebp+4100], 271830737 ; 1033ced1H
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _mode_val$[ebp+4104], 0
	mov	DWORD PTR _mode_val$[ebp+8220], ebx
	mov	DWORD PTR _mode_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN54@SetSLIOver
	test	eax, eax
	je	SHORT $LN54@SetSLIOver
	push	OFFSET $SG166313
	push	OFFSET $SG166314
	push	1249					; 000004e1H
	push	OFFSET $SG166315
	push	eax
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN503@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN503@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1249 :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &mode_val));

	push	327744					; 00050040H
	push	OFFSET $SG166312
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN54@SetSLIOver:

; 1250 : 
; 1251 :     already_set = FALSE;

	xor	edi, edi
$LN53@SetSLIOver:

; 1252 :   }
; 1253 : 
; 1254 :   if (gpu_count_val.u32CurrentValue != gpu_count)

	mov	ebx, DWORD PTR _gpu_count$1$[ebp]
	cmp	DWORD PTR _gpu_count_val$[ebp+8220], ebx
	je	$LN55@SetSLIOver

; 1255 :   {
; 1256 :     gpu_count_val         = {               };

	push	12320					; 00003020H
	lea	eax, DWORD PTR $T3[ebp]
	push	0
	push	eax
	call	_memset
	push	12320					; 00003020H
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	eax, DWORD PTR _gpu_count_val$[ebp]
	push	eax
	call	_memcpy

; 1260 :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &gpu_count_val));

	lea	eax, DWORD PTR _gpu_count_val$[ebp]
	mov	DWORD PTR _gpu_count_val$[ebp], 77856	; 00013020H
	push	eax
	push	DWORD PTR _hProfile$[ebp]
	mov	DWORD PTR _gpu_count_val$[ebp+4100], 271834321 ; 1033dcd1H
	push	DWORD PTR _hSession$[ebp]
	mov	DWORD PTR _gpu_count_val$[ebp+4104], 0
	mov	DWORD PTR _gpu_count_val$[ebp+8220], ebx
	mov	DWORD PTR _gpu_count_val$[ebp+4112], 0
	call	_NvAPI_DRS_SetSetting
	add	esp, 36					; 00000024H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN56@SetSLIOver
	test	eax, eax
	je	SHORT $LN56@SetSLIOver
	push	OFFSET $SG166319
	push	OFFSET $SG166320
	push	1260					; 000004ecH
	push	OFFSET $SG166321
	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN522@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN522@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1260 :     NVAPI_CALL      (DRS_SetSetting (hSession, hProfile, &gpu_count_val));

	push	327744					; 00050040H
	push	OFFSET $SG166318
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN56@SetSLIOver:

; 1261 : 
; 1262 :     already_set = FALSE;

	xor	edi, edi
	jmp	SHORT $LN627@SetSLIOver
$LN55@SetSLIOver:
	test	edi, edi

; 1263 :   }
; 1264 : 
; 1265 :   if (! already_set)

	jne	SHORT $LN58@SetSLIOver
$LN627@SetSLIOver:

; 1266 :     NVAPI_CALL (DRS_SaveSettings (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_SaveSettings
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN58@SetSLIOver
	test	eax, eax
	je	SHORT $LN58@SetSLIOver
	push	OFFSET $SG166325
	push	OFFSET $SG166326
	push	1266					; 000004f2H
	push	OFFSET $SG166327
	push	eax
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN541@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN541@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1266 :     NVAPI_CALL (DRS_SaveSettings (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166324
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN58@SetSLIOver:

; 1268 :   NVAPI_CALL (DRS_DestroySession (hSession));

	push	DWORD PTR _hSession$[ebp]
	call	_NvAPI_DRS_DestroySession
	add	esp, 4
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN59@SetSLIOver
	test	eax, eax
	je	SHORT $LN59@SetSLIOver
	push	OFFSET $SG166330
	push	OFFSET $SG166331
	push	1268					; 000004f4H
	push	OFFSET $SG166332
	push	eax
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN560@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN560@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1268 :   NVAPI_CALL (DRS_DestroySession (hSession));

	push	327744					; 00050040H
	push	OFFSET $SG166329
	push	eax
	push	0
	call	esi
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN59@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR _gpu_count_str$[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN570@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR _gpu_count_str$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN570@SetSLIOver:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR _mode_str$[ebp+20]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR _gpu_count_str$[ebp+16], 0

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR _gpu_count_str$[ebp+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR _gpu_count_str$[ebp], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN600@SetSLIOver
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	ecx
	push	DWORD PTR _mode_str$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN600@SetSLIOver:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 1271 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	ebx
	pop	esi
	pop	edi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN633@SetSLIOver:
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z$2:
	lea	ecx, DWORD PTR _mode_str$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z$3:
	lea	ecx, DWORD PTR _gpu_count_str$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z:
	mov	eax, OFFSET __ehfuncinfo$?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetSLIOverride@NVAPI@sk@@YAHW4DLL_ROLE@@PB_W11@Z ENDP	; sk::NVAPI::SetSLIOverride
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_pwszPropertyList$ = 8					; size = 4
?SetAntiAliasingOverride@NVAPI@sk@@YAHPAPB_W@Z PROC	; sk::NVAPI::SetAntiAliasingOverride

; 1039 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1040 :   return SK_NvAPI_SetAntiAliasingOverride ( pwszPropertyList );

	push	DWORD PTR _pwszPropertyList$[ebp]
	call	?SK_NvAPI_SetAntiAliasingOverride@@YGHPAPB_W@Z ; SK_NvAPI_SetAntiAliasingOverride

; 1041 : }

	pop	ebp
	ret	0
?SetAntiAliasingOverride@NVAPI@sk@@YAHPAPB_W@Z ENDP	; sk::NVAPI::SetAntiAliasingOverride
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_limit$ = 8						; size = 4
?SetFramerateLimit@NVAPI@sk@@YAHI@Z PROC		; sk::NVAPI::SetFramerateLimit

; 1045 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1046 :   return SK_NvAPI_SetFramerateLimit (limit);

	push	DWORD PTR _limit$[ebp]
	call	?SK_NvAPI_SetFramerateLimit@@YGHI@Z	; SK_NvAPI_SetFramerateLimit

; 1047 : }

	pop	ebp
	ret	0
?SetFramerateLimit@NVAPI@sk@@YAHI@Z ENDP		; sk::NVAPI::SetFramerateLimit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_wszFriendlyName$ = 8					; size = 4
?SetAppFriendlyName@NVAPI@sk@@YAXPB_W@Z PROC		; sk::NVAPI::SetAppFriendlyName

; 1282 : {

	npad	2
	push	ebp
	mov	ebp, esp

; 1283 :   SK_NvAPI_SetAppFriendlyName (wszFriendlyName);

	push	DWORD PTR _wszFriendlyName$[ebp]
	call	?SK_NvAPI_SetAppFriendlyName@@YGXPB_W@Z	; SK_NvAPI_SetAppFriendlyName

; 1284 : }

	pop	ebp
	ret	0
?SetAppFriendlyName@NVAPI@sk@@YAXPB_W@Z ENDP		; sk::NVAPI::SetAppFriendlyName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_wstring.h
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_wszName$ = 8						; size = 4
?FindGPUByDXGIName@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@PB_W@Z PROC ; sk::NVAPI::FindGPUByDXGIName

; 289  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi

; 290  :   DXGI_ADAPTER_DESC* adapters = EnumGPUs_DXGI ();

	call	?EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ; sk::NVAPI::EnumGPUs_DXGI
	mov	esi, eax

; 291  : 
; 292  :   //"NVIDIA "
; 293  :   // 01234567
; 294  : 
; 295  :   wchar_t* wszFixedName = _wcsdup (wszName + 7);

	mov	eax, DWORD PTR _wszName$[ebp]
	add	eax, 14					; 0000000eH
	push	eax
	call	DWORD PTR __imp___wcsdup
	add	esp, 4
	mov	edi, eax

; 296  :   int      fixed_len    = lstrlenW (wszFixedName);

	push	edi
	call	DWORD PTR __imp__lstrlenW@4

; 297  : 
; 298  :   // Remove trailing whitespace some NV GPUs inexplicably have in their names
; 299  :   for (int i = fixed_len; i > 0; i--) {

	test	eax, eax
	jle	SHORT $LN22@FindGPUByD

; 290  :   DXGI_ADAPTER_DESC* adapters = EnumGPUs_DXGI ();

	lea	ecx, DWORD PTR [eax-1]
	lea	ecx, DWORD PTR [edi+ecx*2]
$LL4@FindGPUByD:

; 300  :     if (wszFixedName [i - 1] == L' ')

	cmp	WORD PTR [ecx], 32			; 00000020H
	jne	SHORT $LN22@FindGPUByD

; 301  :       wszFixedName [i - 1] = L'\0';

	xor	edx, edx
	dec	eax
	mov	WORD PTR [ecx], dx
	sub	ecx, 2
	test	eax, eax
	jg	SHORT $LL4@FindGPUByD
$LN22@FindGPUByD:

; 302  :     else
; 303  :       break;
; 304  :   }
; 305  : 
; 306  :   while (*adapters->Description != L'\0') {

	cmp	WORD PTR [esi], 0
	je	SHORT $LN6@FindGPUByD
	mov	ebx, DWORD PTR __imp__wcsstr
$LL5@FindGPUByD:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_wstring.h

; 553  :         return const_cast<wchar_t*>(wcsstr(static_cast<wchar_t const*>(_String), _SubStr));

	push	edi
	push	esi
	call	ebx
	add	esp, 8
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 312  :     if (wcsstr (adapters->Description, wszFixedName) != nullptr)

	test	eax, eax
	jne	SHORT $LN15@FindGPUByD

; 316  :     }
; 317  : 
; 318  :     ++adapters;

	add	esi, 292				; 00000124H
	cmp	WORD PTR [esi], ax
	jne	SHORT $LL5@FindGPUByD
$LN6@FindGPUByD:

; 319  :   }
; 320  : 
; 321  :   delete [] wszFixedName;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 322  : 
; 323  :   return nullptr;

	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx

; 324  : }

	pop	ebp
	ret	0
$LN15@FindGPUByD:

; 313  :     {
; 314  :       delete [] wszFixedName;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 315  :       return adapters;

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 324  : }

	pop	ebp
	ret	0
?FindGPUByDXGIName@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@PB_W@Z ENDP ; sk::NVAPI::FindGPUByDXGIName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
$T1 = 8							; size = 4
_pDev$ = 12						; size = 4
?GetSLIState@NVAPI@sk@@YA?AUNV_GET_CURRENT_SLI_STATE_V2@@PAUIUnknown@@@Z PROC ; sk::NVAPI::GetSLIState

; 487  : {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 488  :   NV_GET_CURRENT_SLI_STATE state = {                          };

	mov	esi, DWORD PTR $T1[ebp]
	xorps	xmm0, xmm0

; 489  :   state.version                  = NV_GET_CURRENT_SLI_STATE_VER;
; 490  : 
; 491  :   NvAPI_D3D_GetCurrentSLIState (pDev, &state);

	push	esi
	push	DWORD PTR _pDev$[ebp]
	movups	XMMWORD PTR [esi], xmm0
	movups	XMMWORD PTR [esi+16], xmm0
	mov	DWORD PTR [esi], 65568			; 00010020H
	call	_NvAPI_D3D_GetCurrentSLIState
	add	esp, 8

; 492  : 
; 493  :   return state;

	mov	eax, esi
	pop	esi

; 494  : }

	pop	ebp
	ret	0
?GetSLIState@NVAPI@sk@@YA?AUNV_GET_CURRENT_SLI_STATE_V2@@PAUIUnknown@@@Z ENDP ; sk::NVAPI::GetSLIState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
?EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ PROC	; sk::NVAPI::EnumSLIGPUs

; 170  :   static int nv_sli_count = -1;
; 171  : 
; 172  :   *_nv_sli_adapters [0].Description = L'\0';

	xor	eax, eax
	mov	WORD PTR ?_nv_sli_adapters@@3PAUDXGI_ADAPTER_DESC@@A, ax

; 173  : 
; 174  :   DXGI_ADAPTER_DESC* adapters =
; 175  :     NVAPI::EnumGPUs_DXGI ();

	call	?EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ; sk::NVAPI::EnumGPUs_DXGI

; 176  : 
; 177  :   if (nv_sli_count == -1)

	cmp	DWORD PTR ?nv_sli_count@?1??EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4HA, -1
	jne	SHORT $LN14@EnumSLIGPU

; 178  :   {
; 179  :     if (nv_hardware)

	cmp	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware
	je	SHORT $LN14@EnumSLIGPU

; 180  :     {
; 181  :       nv_sli_count = 0;

	xor	edx, edx
	mov	DWORD PTR ?nv_sli_count@?1??EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4HA, edx

; 182  : 
; 183  :       while (adapters != nullptr)

	test	eax, eax
	je	SHORT $LN10@EnumSLIGPU

; 180  :     {
; 181  :       nv_sli_count = 0;

	push	ebx
	push	esi
	push	edi
	mov	ebx, OFFSET ?_nv_sli_adapters@@3PAUDXGI_ADAPTER_DESC@@A
$LL2@EnumSLIGPU:

; 184  :       {
; 185  :         if (adapters->AdapterLuid.LowPart > 1)

	cmp	DWORD PTR [eax+284], 1
	jbe	SHORT $LN6@EnumSLIGPU

; 186  :           memcpy (&_nv_sli_adapters [nv_sli_count++], adapters,

	mov	edi, ebx
	mov	ecx, 73					; 00000049H
	mov	esi, eax
	inc	edx
	add	ebx, 292				; 00000124H
	rep movsd
$LN6@EnumSLIGPU:

; 187  :                   sizeof (DXGI_ADAPTER_DESC));
; 188  : 
; 189  :         ++adapters;

	add	eax, 292				; 00000124H

; 190  : 
; 191  :         if (*adapters->Description == '\0')

	cmp	WORD PTR [eax], 0
	jne	SHORT $LL2@EnumSLIGPU

; 186  :           memcpy (&_nv_sli_adapters [nv_sli_count++], adapters,

	pop	edi
	pop	esi
	mov	DWORD PTR ?nv_sli_count@?1??EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4HA, edx
	pop	ebx
$LN10@EnumSLIGPU:

; 192  :           break;
; 193  :       }
; 194  : 
; 195  :       *_nv_sli_adapters [nv_sli_count].Description = L'\0';

	imul	eax, edx, 292
	xor	ecx, ecx
	mov	WORD PTR ?_nv_sli_adapters@@3PAUDXGI_ADAPTER_DESC@@A[eax], cx
$LN14@EnumSLIGPU:

; 196  :     }
; 197  :   }
; 198  : 
; 199  :   return _nv_sli_adapters;

	mov	eax, OFFSET ?_nv_sli_adapters@@3PAUDXGI_ADAPTER_DESC@@A

; 200  : }

	ret	0
?EnumSLIGPUs@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ENDP	; sk::NVAPI::EnumSLIGPUs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_adapterDesc$1 = -436					; size = 292
_name$2 = -144						; size = 64
_meminfo$3 = -80					; size = 32
_sli_size$1$ = -48					; size = 4
_phys_count$4 = -44					; size = 4
$T5 = -40						; size = 24
$T6 = -40						; size = 24
$T7 = -40						; size = 24
$T8 = -40						; size = 24
$T9 = -40						; size = 24
$T10 = -40						; size = 24
tv1099 = -16						; size = 4
_i$1$ = -12						; size = 4
_logical$11 = -8					; size = 4
_gpu_count$ = -4					; size = 4
?EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ PROC ; sk::NVAPI::EnumGPUs_DXGI

; 214  : {

	npad	2
	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H

; 215  :   // Only do this once...
; 216  :   static bool enumerated = false;
; 217  : 
; 218  :   // Early-out if this was already called once before.
; 219  :   if (enumerated)

	cmp	BYTE PTR ?enumerated@?1??EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4_NA, 0
	jne	$LN288@EnumGPUs_D

; 220  :     return _nv_dxgi_adapters;
; 221  : 
; 222  :   if (! nv_hardware)

	cmp	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware
	jne	SHORT $LN6@EnumGPUs_D

; 223  :   {
; 224  :     enumerated = true;
; 225  :     *_nv_dxgi_adapters [0].Description = L'\0';

	xor	eax, eax

; 281  : 
; 282  :   enumerated = true;

	mov	BYTE PTR ?enumerated@?1??EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4_NA, 1
	mov	WORD PTR ?_nv_dxgi_adapters@@3PAUDXGI_ADAPTER_DESC@@A, ax

; 283  : 
; 284  :   return _nv_dxgi_adapters;

	mov	eax, OFFSET ?_nv_dxgi_adapters@@3PAUDXGI_ADAPTER_DESC@@A

; 285  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@EnumGPUs_D:
	push	ebx
	push	esi

; 232  :   NVAPI_CALL (EnumPhysicalGPUs (_nv_dxgi_gpus, &gpu_count));

	lea	eax, DWORD PTR _gpu_count$[ebp]
	mov	DWORD PTR _gpu_count$[ebp], 0
	push	eax
	push	OFFSET ?_nv_dxgi_gpus@@3PAPAUNvPhysicalGpuHandle__@@A
	call	_NvAPI_EnumPhysicalGPUs
	mov	ebx, DWORD PTR __imp__MessageBoxW@16
	add	esp, 8
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN7@EnumGPUs_D
	test	eax, eax
	je	SHORT $LN7@EnumGPUs_D
	push	OFFSET $SG165449
	push	OFFSET $SG165450
	push	232					; 000000e8H
	push	OFFSET $SG165451
	push	eax
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN33@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN33@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 232  :   NVAPI_CALL (EnumPhysicalGPUs (_nv_dxgi_gpus, &gpu_count));

	push	327744					; 00050040H
	push	OFFSET $SG165448
	push	eax
	push	0
	call	ebx
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@EnumGPUs_D:

; 233  : 
; 234  :   for (int i = 0; i < CountPhysicalGPUs (); i++)

	xor	esi, esi
	mov	DWORD PTR _i$1$[ebp], esi
	call	?CountPhysicalGPUs@NVAPI@sk@@YAHXZ	; sk::NVAPI::CountPhysicalGPUs
	test	eax, eax
	jle	$LN3@EnumGPUs_D
	mov	DWORD PTR tv1099[ebp], OFFSET ?_nv_dxgi_adapters@@3PAUDXGI_ADAPTER_DESC@@A
	push	edi
$LL4@EnumGPUs_D:

; 235  :   {
; 236  :     DXGI_ADAPTER_DESC adapterDesc = { };

	push	292					; 00000124H
	lea	eax, DWORD PTR _adapterDesc$1[ebp]
	push	0
	push	eax
	call	_memset

; 237  :     NvAPI_ShortString name        = { };

	push	64					; 00000040H
	lea	eax, DWORD PTR _name$2[ebp]
	push	0
	push	eax
	call	_memset

; 242  :     NVAPI_CALL (EnumPhysicalGPUs (_nv_dxgi_gpus,     &gpu_count));

	lea	eax, DWORD PTR _gpu_count$[ebp]
	push	eax
	push	OFFSET ?_nv_dxgi_gpus@@3PAPAUNvPhysicalGpuHandle__@@A
	call	_NvAPI_EnumPhysicalGPUs
	add	esp, 32					; 00000020H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN62@EnumGPUs_D
	test	eax, eax
	je	SHORT $LN62@EnumGPUs_D
	push	OFFSET $SG165454
	push	OFFSET $SG165455
	push	242					; 000000f2H
	push	OFFSET $SG165456
	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN52@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN52@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 242  :     NVAPI_CALL (EnumPhysicalGPUs (_nv_dxgi_gpus,     &gpu_count));

	push	327744					; 00050040H
	push	OFFSET $SG165453
	push	eax
	push	0
	call	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T9[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN62@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T9[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN62@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 247  :     NVAPI_CALL (GetLogicalGPUFromPhysicalGPU  (_nv_dxgi_gpus [i], &logical));

	lea	eax, DWORD PTR _logical$11[ebp]
	push	eax
	push	DWORD PTR ?_nv_dxgi_gpus@@3PAPAUNvPhysicalGpuHandle__@@A[esi*4]
	call	_NvAPI_GetLogicalGPUFromPhysicalGPU
	add	esp, 8
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN111@EnumGPUs_D
	test	eax, eax
	je	SHORT $LN111@EnumGPUs_D
	push	OFFSET $SG165459
	push	OFFSET $SG165460
	push	247					; 000000f7H
	push	OFFSET $SG165461
	push	eax
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN101@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN101@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 247  :     NVAPI_CALL (GetLogicalGPUFromPhysicalGPU  (_nv_dxgi_gpus [i], &logical));

	push	327744					; 00050040H
	push	OFFSET $SG165458
	push	eax
	push	0
	call	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T8[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN111@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T8[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN111@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 248  :     NVAPI_CALL (GetPhysicalGPUsFromLogicalGPU (logical, phys, &phys_count));

	lea	eax, DWORD PTR _phys_count$4[ebp]
	push	eax
	push	OFFSET ?phys@@3PAPAUNvPhysicalGpuHandle__@@A
	push	DWORD PTR _logical$11[ebp]
	call	_NvAPI_GetPhysicalGPUsFromLogicalGPU
	add	esp, 12					; 0000000cH
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN160@EnumGPUs_D
	test	eax, eax
	je	SHORT $LN160@EnumGPUs_D
	push	OFFSET $SG165464
	push	OFFSET $SG165465
	push	248					; 000000f8H
	push	OFFSET $SG165466
	push	eax
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN150@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN150@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 248  :     NVAPI_CALL (GetPhysicalGPUsFromLogicalGPU (logical, phys, &phys_count));

	push	327744					; 00050040H
	push	OFFSET $SG165463
	push	eax
	push	0
	call	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T7[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN160@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T7[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN160@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 251  :     sli_size  = phys_count;

	mov	eax, DWORD PTR _phys_count$4[ebp]
	mov	edi, DWORD PTR _logical$11[ebp]
	mov	DWORD PTR _sli_size$1$[ebp], eax

; 253  :     NVAPI_CALL (GPU_GetFullName (_nv_dxgi_gpus [i], name));

	lea	eax, DWORD PTR _name$2[ebp]
	push	eax
	push	DWORD PTR ?_nv_dxgi_gpus@@3PAPAUNvPhysicalGpuHandle__@@A[esi*4]
	call	_NvAPI_GPU_GetFullName
	add	esp, 8
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN209@EnumGPUs_D
	test	eax, eax
	je	SHORT $LN209@EnumGPUs_D
	push	OFFSET $SG165469
	push	OFFSET $SG165470
	push	253					; 000000fdH
	push	OFFSET $SG165471
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN199@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN199@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 253  :     NVAPI_CALL (GPU_GetFullName (_nv_dxgi_gpus [i], name));

	push	327744					; 00050040H
	push	OFFSET $SG165468
	push	eax
	push	0
	call	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T6[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN209@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T6[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN209@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 259  :     NVAPI_CALL (GPU_GetMemoryInfo (_nv_dxgi_gpus [i], &meminfo));

	lea	eax, DWORD PTR _meminfo$3[ebp]
	mov	DWORD PTR _meminfo$3[ebp], 131096	; 00020018H
	push	eax
	push	DWORD PTR ?_nv_dxgi_gpus@@3PAPAUNvPhysicalGpuHandle__@@A[esi*4]
	call	_NvAPI_GPU_GetMemoryInfo
	add	esp, 8
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN258@EnumGPUs_D
	test	eax, eax
	je	SHORT $LN258@EnumGPUs_D
	push	OFFSET $SG165474
	push	OFFSET $SG165475
	push	259					; 00000103H
	push	OFFSET $SG165476
	push	eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN248@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN248@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 259  :     NVAPI_CALL (GPU_GetMemoryInfo (_nv_dxgi_gpus [i], &meminfo));

	push	327744					; 00050040H
	push	OFFSET $SG165473
	push	eax
	push	0
	call	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR $T5[ebp+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN258@EnumGPUs_D
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR $T5[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN258@EnumGPUs_D:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 261  :     MultiByteToWideChar (CP_OEMCP, 0, name, -1, adapterDesc.Description, 64);

	push	64					; 00000040H
	lea	eax, DWORD PTR _adapterDesc$1[ebp]
	push	eax
	push	-1
	lea	eax, DWORD PTR _name$2[ebp]
	push	eax
	push	0
	push	1
	call	DWORD PTR __imp__MultiByteToWideChar@24

; 262  : 
; 263  :     adapterDesc.VendorId = 0x10de;
; 264  : 
; 265  :     adapterDesc.AdapterLuid.HighPart = sli_group;
; 266  :     adapterDesc.AdapterLuid.LowPart  = sli_size;

	mov	eax, DWORD PTR _sli_size$1$[ebp]

; 267  : 
; 268  :     // NVIDIA's driver measures these numbers in KiB (to store as a 32-bit int)
; 269  :     //  * We want the numbers in bytes (64-bit)
; 270  :     adapterDesc.DedicatedVideoMemory  =
; 271  :       static_cast <size_t> (meminfo.dedicatedVideoMemory) << 10;
; 272  :     adapterDesc.DedicatedSystemMemory =
; 273  :       static_cast <size_t> (meminfo.systemVideoMemory)    << 10;
; 274  :     adapterDesc.SharedSystemMemory    = 
; 275  :       static_cast <size_t> (meminfo.sharedSystemMemory)   << 10;
; 276  : 
; 277  :     _nv_dxgi_adapters [i] = adapterDesc;

	lea	esi, DWORD PTR _adapterDesc$1[ebp]
	mov	DWORD PTR _adapterDesc$1[ebp+284], eax
	mov	ecx, 73					; 00000049H
	mov	eax, DWORD PTR _meminfo$3[ebp+4]
	shl	eax, 10					; 0000000aH
	mov	DWORD PTR _adapterDesc$1[ebp+272], eax
	mov	eax, DWORD PTR _meminfo$3[ebp+12]
	shl	eax, 10					; 0000000aH
	mov	DWORD PTR _adapterDesc$1[ebp+276], eax
	mov	eax, DWORD PTR _meminfo$3[ebp+16]
	shl	eax, 10					; 0000000aH
	mov	DWORD PTR _adapterDesc$1[ebp+280], eax
	mov	eax, DWORD PTR tv1099[ebp]
	mov	DWORD PTR _adapterDesc$1[ebp+288], edi
	mov	edi, eax
	mov	DWORD PTR _adapterDesc$1[ebp+256], 4318	; 000010deH
	add	eax, 292				; 00000124H
	rep movsd
	mov	esi, DWORD PTR _i$1$[ebp]
	inc	esi
	mov	DWORD PTR tv1099[ebp], eax
	mov	DWORD PTR _i$1$[ebp], esi
	call	?CountPhysicalGPUs@NVAPI@sk@@YAHXZ	; sk::NVAPI::CountPhysicalGPUs
	cmp	esi, eax
	jl	$LL4@EnumGPUs_D
	pop	edi
$LN3@EnumGPUs_D:

; 278  :   }
; 279  : 
; 280  :   *_nv_dxgi_adapters [gpu_count].Description = L'\0';

	imul	eax, DWORD PTR _gpu_count$[ebp], 292
	xor	ecx, ecx
	pop	esi
	pop	ebx

; 281  : 
; 282  :   enumerated = true;

	mov	BYTE PTR ?enumerated@?1??EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ@4_NA, 1
	mov	WORD PTR ?_nv_dxgi_adapters@@3PAUDXGI_ADAPTER_DESC@@A[eax], cx
$LN288@EnumGPUs_D:

; 283  : 
; 284  :   return _nv_dxgi_adapters;

	mov	eax, OFFSET ?_nv_dxgi_adapters@@3PAUDXGI_ADAPTER_DESC@@A

; 285  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ENDP ; sk::NVAPI::EnumGPUs_DXGI
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
_gpus$1 = -284						; size = 256
$T2 = -28						; size = 24
_gpu_count$3 = -4					; size = 4
?CountPhysicalGPUs@NVAPI@sk@@YAHXZ PROC			; sk::NVAPI::CountPhysicalGPUs

; 116  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 117  :   static int nv_gpu_count = -1;
; 118  : 
; 119  :   if (nv_gpu_count == -1)

	mov	eax, DWORD PTR ?nv_gpu_count@?1??CountPhysicalGPUs@NVAPI@sk@@YAHXZ@4HA
	sub	esp, 284				; 0000011cH
	cmp	eax, -1
	jne	$LN4@CountPhysi

; 120  :   {
; 121  :     if (nv_hardware)

	cmp	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware
	je	$LN3@CountPhysi

; 122  :     {
; 123  :       NvAPI_Status        ret       = NVAPI_ERROR;
; 124  :       NvPhysicalGpuHandle gpus [64] = {         };

	push	256					; 00000100H
	lea	eax, DWORD PTR _gpus$1[ebp]
	push	0
	push	eax
	call	_memset

; 127  :       NVAPI_CALL (EnumPhysicalGPUs (gpus, &gpu_count));

	lea	eax, DWORD PTR _gpu_count$3[ebp]
	mov	DWORD PTR _gpu_count$3[ebp], 0
	push	eax
	lea	eax, DWORD PTR _gpus$1[ebp]
	push	eax
	call	_NvAPI_EnumPhysicalGPUs
	add	esp, 20					; 00000014H
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	je	SHORT $LN5@CountPhysi
	test	eax, eax
	je	SHORT $LN5@CountPhysi
	push	OFFSET $SG165383
	push	OFFSET $SG165384
	push	127					; 0000007fH
	push	OFFSET $SG165385
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN22@CountPhysi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN22@CountPhysi:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 127  :       NVAPI_CALL (EnumPhysicalGPUs (gpus, &gpu_count));

	push	327744					; 00050040H
	push	OFFSET $SG165382
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@CountPhysi:

; 128  : 
; 129  :       nv_gpu_count = gpu_count;

	mov	eax, DWORD PTR _gpu_count$3[ebp]
	mov	DWORD PTR ?nv_gpu_count@?1??CountPhysicalGPUs@NVAPI@sk@@YAHXZ@4HA, eax

; 137  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@CountPhysi:

; 130  :     }
; 131  : 
; 132  :     else
; 133  :       nv_gpu_count = 0;

	mov	DWORD PTR ?nv_gpu_count@?1??CountPhysicalGPUs@NVAPI@sk@@YAHXZ@4HA, 0

; 134  :   }
; 135  : 
; 136  :   return nv_gpu_count;

	xor	eax, eax
$LN4@CountPhysi:

; 137  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CountPhysicalGPUs@NVAPI@sk@@YAHXZ ENDP			; sk::NVAPI::CountPhysicalGPUs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
?CountSLIGPUs@NVAPI@sk@@YAHXZ PROC			; sk::NVAPI::CountSLIGPUs

; 142  :   static int nv_sli_count = -1;
; 143  : 
; 144  :   DXGI_ADAPTER_DESC* adapters = NVAPI::EnumGPUs_DXGI ();

	call	?EnumGPUs_DXGI@NVAPI@sk@@YAPAUDXGI_ADAPTER_DESC@@XZ ; sk::NVAPI::EnumGPUs_DXGI

; 145  : 
; 146  :   if (nv_sli_count == -1) {

	mov	ecx, DWORD PTR ?nv_sli_count@?1??CountSLIGPUs@NVAPI@sk@@YAHXZ@4HA
	cmp	ecx, -1
	jne	SHORT $LN15@CountSLIGP

; 147  :     if (nv_hardware) {

	cmp	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware
	je	SHORT $LN15@CountSLIGP

; 148  :       nv_sli_count = 0;

	xor	ecx, ecx
	mov	DWORD PTR ?nv_sli_count@?1??CountSLIGPUs@NVAPI@sk@@YAHXZ@4HA, ecx

; 149  : 
; 150  :       while (adapters != nullptr) {

	test	eax, eax
	je	SHORT $LN15@CountSLIGP
$LL2@CountSLIGP:

; 151  :         if (adapters->AdapterLuid.LowPart > 1)

	cmp	DWORD PTR [eax+284], 1
	jbe	SHORT $LN6@CountSLIGP

; 152  :           nv_sli_count++;

	inc	ecx
$LN6@CountSLIGP:

; 153  : 
; 154  :         ++adapters;

	add	eax, 292				; 00000124H

; 155  : 
; 156  :         if (*adapters->Description == '\0')

	cmp	WORD PTR [eax], 0
	jne	SHORT $LL2@CountSLIGP

; 152  :           nv_sli_count++;

	mov	DWORD PTR ?nv_sli_count@?1??CountSLIGPUs@NVAPI@sk@@YAHXZ@4HA, ecx
$LN15@CountSLIGP:

; 157  :           break;
; 158  :       }
; 159  :     }
; 160  :   }
; 161  : 
; 162  :   return nv_sli_count;

	mov	eax, ecx

; 163  : }

	ret	0
?CountSLIGPUs@NVAPI@sk@@YAHXZ ENDP			; sk::NVAPI::CountSLIGPUs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
?UnloadLibrary@NVAPI@sk@@YAHXZ PROC			; sk::NVAPI::UnloadLibrary

; 354  :   if (bLibInit == TRUE && bLibShutdown == FALSE) {

	cmp	DWORD PTR ?bLibInit@@3HA, 1		; bLibInit
	mov	eax, DWORD PTR ?bLibShutdown@@3HA	; bLibShutdown
	jne	SHORT $LN3@UnloadLibr
	test	eax, eax
	jne	SHORT $LN3@UnloadLibr

; 355  :     // Whine very loudly if this fails, because that's not
; 356  :     //   supposed to happen!
; 357  :     NVAPI_VERBOSE ()

	mov	BYTE PTR ?nvapi_silent@@3_NA, al

; 358  : 
; 359  :       NvAPI_Status ret;
; 360  : 
; 361  :     ret = NvAPI_Unload ();//NVAPI_CALL2 (Unload (), ret);

	call	_NvAPI_Unload

; 362  : 
; 363  :     if (ret == NVAPI_OK) {

	test	eax, eax
	jne	SHORT $LN5@UnloadLibr

; 364  :       bLibShutdown = TRUE;
; 365  :       bLibInit     = FALSE;

	mov	DWORD PTR ?bLibInit@@3HA, eax		; bLibInit

; 366  :     }
; 367  :   }
; 368  : 
; 369  :   return bLibShutdown;

	mov	eax, 1
	mov	DWORD PTR ?bLibShutdown@@3HA, 1		; bLibShutdown

; 370  : }

	ret	0
$LN5@UnloadLibr:

; 366  :     }
; 367  :   }
; 368  : 
; 369  :   return bLibShutdown;

	mov	eax, DWORD PTR ?bLibShutdown@@3HA	; bLibShutdown
$LN3@UnloadLibr:

; 370  : }

	ret	0
?UnloadLibrary@NVAPI@sk@@YAHXZ ENDP			; sk::NVAPI::UnloadLibrary
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 24
_wszAppName$ = 8					; size = 4
?InitializeLibrary@NVAPI@sk@@YAHPB_W@Z PROC		; sk::NVAPI::InitializeLibrary

; 374  : {

	npad	2
	push	ebp
	mov	ebp, esp

; 375  :   // It's silly to call this more than once, but not necessarily
; 376  :   //  an error... just ignore repeated calls.
; 377  :   if (bLibInit == TRUE)

	mov	eax, DWORD PTR ?bLibInit@@3HA		; bLibInit
	sub	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN3@Initialize

; 483  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@Initialize:

; 378  :     return TRUE;
; 379  : 
; 380  :   // If init is not false and not true, it's because we failed to
; 381  :   //   initialize the API once before. Just return the failure status
; 382  :   //     again.
; 383  :   if (bLibInit != FALSE)

	test	eax, eax
	je	SHORT $LN4@Initialize

; 384  :     return FALSE;

	xor	eax, eax

; 483  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN4@Initialize:
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	esi, DWORD PTR _wszAppName$[ebp]
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+2]
	npad	7
$LL53@Initialize:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL53@Initialize
	sub	ecx, edx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	esi
	mov	ecx, OFFSET ?app_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::app_name
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+2]
$LL54@Initialize:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL54@Initialize
	sub	ecx, edx
	sar	ecx, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	ecx
	push	esi
	mov	ecx, OFFSET ?friendly_name@NVAPI@sk@@3V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; sk::NVAPI::friendly_name
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 391  :   if (! config.apis.NvAPI.enable) {

	cmp	BYTE PTR ?config@@3Usk_config_t@@A+819, 0
	je	SHORT $LN58@Initialize

; 392  :     nv_hardware = false;
; 393  :     bLibInit    = TRUE + 1; // Clearly this isn't a boolean; just for looks
; 394  :     return FALSE;
; 395  :   }
; 396  : 
; 397  :   // We want this error to be silent, because this tool works on AMD GPUs too!
; 398  :   NVAPI_SILENT ()

	mov	BYTE PTR ?nvapi_silent@@3_NA, 1

; 400  :     NVAPI_CALL2 (Initialize (), ret);

	call	_NvAPI_Initialize
	cmp	BYTE PTR ?nvapi_silent@@3_NA, 1
	mov	esi, eax
	je	SHORT $LN6@Initialize
	test	esi, esi
	je	SHORT $LN6@Initialize
	push	OFFSET $SG165537
	push	OFFSET $SG165538
	push	400					; 00000190H
	push	OFFSET $SG165539
	lea	eax, DWORD PTR $T1[ebp]
	push	esi
	push	eax
	call	?ErrorMessage@NVAPI@sk@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4_NvAPI_Status@@PBDI11@Z ; sk::NVAPI::ErrorMessage
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [eax+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN46@Initialize
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [eax]
$LN46@Initialize:
; File c:\users\andon\source\repos\specialk\src\nvapi.cpp

; 400  :     NVAPI_CALL2 (Initialize (), ret);

	push	327744					; 00050040H
	push	OFFSET $SG165536
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN6@Initialize:

; 401  :   }
; 402  :   NVAPI_VERBOSE ()

	mov	BYTE PTR ?nvapi_silent@@3_NA, 0

; 403  : 
; 404  :     if (ret != NVAPI_OK) {

	test	esi, esi
	je	SHORT $LN7@Initialize
$LN58@Initialize:

; 405  :       nv_hardware = false;

	mov	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware

; 406  :       bLibInit    = TRUE + 1; // Clearly this isn't a boolean; just for looks
; 407  :       return FALSE;

	xor	eax, eax
	mov	DWORD PTR ?bLibInit@@3HA, 2		; bLibInit
	pop	esi

; 483  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Initialize:

; 408  :     }
; 409  :     else {
; 410  :       // True unless we fail the stuff below...
; 411  :       nv_hardware = true;
; 412  : 
; 413  :       //
; 414  :       // Time to initialize a few undocumented (if you do not sign an NDA)
; 415  :       //   parts of NvAPI, hurray!
; 416  :       //
; 417  :       static HMODULE hLib = nullptr;
; 418  : 
; 419  : #ifdef _WIN64
; 420  :       GetModuleHandleEx (GET_MODULE_HANDLE_EX_FLAG_PIN, L"nvapi64.dll", &hLib);
; 421  : #else
; 422  :       GetModuleHandleEx (GET_MODULE_HANDLE_EX_FLAG_PIN, L"nvapi.dll",   &hLib);

	push	OFFSET ?hLib@?BE@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4PAUHINSTANCE__@@A
	push	OFFSET $SG165542
	push	1
	mov	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 1	; sk::NVAPI::nv_hardware
	call	DWORD PTR __imp__GetModuleHandleExW@12

; 423  : #endif
; 424  : 
; 425  :     if (hLib != nullptr)

	cmp	DWORD PTR ?hLib@?BE@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4PAUHINSTANCE__@@A, 0
	je	$LN9@Initialize

; 426  :     {
; 427  :       using NvAPI_QueryInterface_pfn = void* (*)(unsigned int ordinal);
; 428  : 
; 429  :       static auto NvAPI_QueryInterface =

	mov	eax, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR __tls_index
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jg	$LN59@Initialize
$LN2@Initialize:

; 432  :         );
; 433  : 
; 434  :       NvAPI_GPU_GetRamType =

	push	1475857068				; 57f7caacH
	call	DWORD PTR ?NvAPI_QueryInterface@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4P6APAXI@ZA

; 435  :         (NvAPI_GPU_GetRamType_pfn)NvAPI_QueryInterface            (0x57F7CAACu);
; 436  :       NvAPI_GPU_GetFBWidthAndLocation =

	push	286277976				; 11104158H
	mov	DWORD PTR _NvAPI_GPU_GetRamType, eax
	call	DWORD PTR ?NvAPI_QueryInterface@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4P6APAXI@ZA

; 437  :         (NvAPI_GPU_GetFBWidthAndLocation_pfn)NvAPI_QueryInterface (0x11104158u);
; 438  :       NvAPI_GPU_GetPCIEInfo =

	push	-478588519				; e3795199H
	mov	DWORD PTR _NvAPI_GPU_GetFBWidthAndLocation, eax
	call	DWORD PTR ?NvAPI_QueryInterface@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4P6APAXI@ZA

; 439  :         (NvAPI_GPU_GetPCIEInfo_pfn)NvAPI_QueryInterface           (0xE3795199u);
; 440  :       NvAPI_GetPhysicalGPUFromGPUID =

	push	1400941850				; 5380ad1aH
	mov	DWORD PTR _NvAPI_GPU_GetPCIEInfo, eax
	call	DWORD PTR ?NvAPI_QueryInterface@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4P6APAXI@ZA

; 441  :         (NvAPI_GetPhysicalGPUFromGPUID_pfn)NvAPI_QueryInterface   (0x5380AD1Au);
; 442  :       NvAPI_GetGPUIDFromPhysicalGPU =

	push	1697901118				; 6533ea3eH
	mov	DWORD PTR _NvAPI_GetPhysicalGPUFromGPUID, eax
	call	DWORD PTR ?NvAPI_QueryInterface@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4P6APAXI@ZA
	add	esp, 20					; 00000014H
	mov	DWORD PTR _NvAPI_GetGPUIDFromPhysicalGPU, eax

; 443  :         (NvAPI_GetGPUIDFromPhysicalGPU_pfn)NvAPI_QueryInterface   (0x6533EA3Eu);
; 444  : 
; 445  :       if (NvAPI_GPU_GetRamType == nullptr) {

	cmp	DWORD PTR _NvAPI_GPU_GetRamType, 0
	jne	SHORT $LN55@Initialize

; 446  :         dll_log.LogEx (false, L"missing NvAPI_GPU_GetRamType ");

	push	OFFSET $SG165547
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 447  :         nv_hardware = false;

	xor	al, al
	mov	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, al ; sk::NVAPI::nv_hardware
	jmp	SHORT $LN11@Initialize
$LN55@Initialize:
	mov	al, BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA ; sk::NVAPI::nv_hardware
$LN11@Initialize:

; 448  :       }
; 449  : 
; 450  :       if (NvAPI_GPU_GetFBWidthAndLocation == nullptr) {

	cmp	DWORD PTR _NvAPI_GPU_GetFBWidthAndLocation, 0
	jne	SHORT $LN12@Initialize

; 451  :         dll_log.LogEx (false, L"missing NvAPI_GPU_GetFBWidthAndLocation ");

	push	OFFSET $SG165549
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 452  :         nv_hardware = false;

	xor	al, al
	mov	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, al ; sk::NVAPI::nv_hardware
$LN12@Initialize:

; 453  :       }
; 454  : 
; 455  :       if (NvAPI_GPU_GetPCIEInfo == nullptr) {

	cmp	DWORD PTR _NvAPI_GPU_GetPCIEInfo, 0
	jne	SHORT $LN13@Initialize

; 456  :         dll_log.LogEx (false, L"missing NvAPI_GPU_GetPCIEInfo ");

	push	OFFSET $SG165551
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 457  :         nv_hardware = false;

	xor	al, al
	mov	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, al ; sk::NVAPI::nv_hardware
$LN13@Initialize:

; 458  :       }
; 459  : 
; 460  :       if (NvAPI_GetPhysicalGPUFromGPUID == nullptr) {

	cmp	DWORD PTR _NvAPI_GetPhysicalGPUFromGPUID, 0
	jne	SHORT $LN14@Initialize

; 461  :         dll_log.LogEx (false, L"missing NvAPI_GetPhysicalGPUFromGPUID ");

	push	OFFSET $SG165553
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 462  :         nv_hardware = false;

	xor	al, al
	mov	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, al ; sk::NVAPI::nv_hardware
$LN14@Initialize:

; 463  :       }
; 464  : 
; 465  :       if (NvAPI_GetGPUIDFromPhysicalGPU == nullptr) {

	cmp	DWORD PTR _NvAPI_GetGPUIDFromPhysicalGPU, 0
	jne	SHORT $LN10@Initialize

; 466  :         dll_log.LogEx (false, L"missing NvAPI_GetGPUIDFromPhysicalGPU ");

	push	OFFSET $SG165555
	push	0
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?LogEx@iSK_Logger@@UAAX_NQB_WZZ		; iSK_Logger::LogEx
	add	esp, 12					; 0000000cH

; 467  :         nv_hardware = false;
; 468  :       }
; 469  :     }
; 470  : 
; 471  :     else {

	jmp	SHORT $LN57@Initialize
$LN10@Initialize:

; 474  :     }
; 475  : 
; 476  :     if (nv_hardware == false) {

	test	al, al
	jne	SHORT $LN16@Initialize
	jmp	SHORT $LN52@Initialize
$LN9@Initialize:

; 472  :       dll_log.Log (L"unable to complete LoadLibrary (...) ");

	push	OFFSET $SG165556
	push	OFFSET ?dll_log@@3UiSK_Logger@@A	; dll_log
	call	?Log@iSK_Logger@@UAAXQB_WZZ		; iSK_Logger::Log
	add	esp, 8
$LN57@Initialize:

; 473  :       nv_hardware = false;

	mov	BYTE PTR ?nv_hardware@NVAPI@sk@@3_NA, 0	; sk::NVAPI::nv_hardware
$LN52@Initialize:

; 477  :       bLibInit = FALSE;
; 478  :       hLib     = nullptr;

	mov	DWORD PTR ?hLib@?BE@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4PAUHINSTANCE__@@A, 0
$LN16@Initialize:

; 479  :     }
; 480  :   }
; 481  : 
; 482  :   return (bLibInit = TRUE);

	mov	DWORD PTR ?bLibInit@@3HA, 1		; bLibInit
	mov	eax, 1
	pop	esi

; 483  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN59@Initialize:

; 426  :     {
; 427  :       using NvAPI_QueryInterface_pfn = void* (*)(unsigned int ordinal);
; 428  : 
; 429  :       static auto NvAPI_QueryInterface =

	push	OFFSET ?$TSS0@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4HA, -1
	jne	$LN2@Initialize

; 430  :         reinterpret_cast <NvAPI_QueryInterface_pfn> (
; 431  :           GetProcAddress (hLib, "nvapi_QueryInterface")

	push	OFFSET $SG165545
	push	DWORD PTR ?hLib@?BE@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4PAUHINSTANCE__@@A
	call	DWORD PTR __imp__GetProcAddress@8
	push	OFFSET ?$TSS0@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4HA
	mov	DWORD PTR ?NvAPI_QueryInterface@?BH@??InitializeLibrary@NVAPI@sk@@YAHPB_W@Z@4P6APAXI@ZA, eax
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN2@Initialize
?InitializeLibrary@NVAPI@sk@@YAHPB_W@Z ENDP		; sk::NVAPI::InitializeLibrary
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT

; 3646 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset, COMDAT
; _this$ = ecx

; 3629 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Off$[ebp]
	jb	SHORT $LN14@Check_offs

; 3633 : 			}
; 3634 : 		}

	pop	ebp
	ret	4
$LN14@Check_offs:

; 3631 : 			{
; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN16@Check_offs:
$LN13@Check_offs:
	int	3
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 3625 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3605 : 		{	// initialize buffer, deallocating any storage

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3606 : 		this->_Orphan_all();
; 3607 : 		auto& _My_data = this->_Get_data();
; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN2@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN2@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3621 : 		}

	ret	0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [ecx+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3602 : 		}

	ret	0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx

; 3588 : 		{	// test if _Ptr points inside string

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@Inside
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN14@Inside
$LN13@Inside:
	mov	edx, ecx
$LN14@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	cmp	edx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	eax, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	DWORD PTR __Ptr$[ebp], eax
	jae	SHORT $LN3@Inside
	mov	al, 1

; 3592 : 		}

	pop	ebp
	ret	4
$LN3@Inside:

; 3589 : 		const auto& _My_data = this->_Get_data();
; 3590 : 		const _Elem * const _My_chars = _My_data._Myptr();
; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	xor	al, al

; 3592 : 		}

	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx

; 3572 : 		{	// ensure buffer is big enough

	npad	2
	push	ebp
	mov	ebp, esp

; 3573 : 		if (_Newsize == 0)

	mov	eax, DWORD PTR __Newsize$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Grow

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN16@Grow
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN16@Grow:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3576 : 			return (false);

	xor	al, al

; 3585 : 		}

	pop	ebp
	ret	4
$LN2@Grow:

; 3577 : 			}
; 3578 : 
; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [ecx+20], eax
	jae	SHORT $LN3@Grow

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	eax
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN3@Grow:

; 3582 : 			}
; 3583 : 
; 3584 : 		return (true);	// return true only if more work to do

	mov	al, 1

; 3585 : 		}

	pop	ebp
	ret	4
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx

; 3566 : 		{	// set new length and null terminator

	npad	2
	push	ebp
	mov	ebp, esp

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 3567 : 		auto& _My_data = this->_Get_data();
; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Eos
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
$LN11@Eos:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
	mov	WORD PTR [ecx+edx*2], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3569 : 		}

	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Oldres$ = -28						; size = 4
_this$ = -24						; size = 4
__Ptr$1$ = -20						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newres$ = 8						; size = 4
__Newsize$ = 8						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx

; 3514 : 		{	// reallocate to new buffer of at least _Newsize, copying existing elements there

	npad	2
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 3515 : 		const auto _Max = max_size();
; 3516 : 		if (_Newsize > _Max)

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	eax, 2147483646				; 7ffffffeH
	jbe	SHORT $LN2@Copy

; 3517 : 			{	// too long
; 3518 : 			_Xlen();

	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN102@Copy:
$LN2@Copy:

; 3519 : 			}
; 3520 : 
; 3521 : 		auto& _My_data = this->_Get_data();
; 3522 : 		const size_type _Oldres = _My_data._Myres;

	mov	ebx, DWORD PTR [esi+20]

; 3523 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	edi, eax
	or	edi, 7
	mov	DWORD PTR __Oldres$[ebp], ebx

; 3524 : 		if (_Max < _Newres)

	cmp	edi, 2147483646				; 7ffffffeH
	jbe	SHORT $LN3@Copy

; 3525 : 			{
; 3526 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	edi, eax
	jmp	SHORT $LN8@Copy
$LN3@Copy:

; 3527 : 			}
; 3528 : 		else if (_Oldres / 2 <= _Newres / 3)

	mov	eax, -1431655765			; aaaaaaabH
	mov	ecx, ebx
	mul	edi
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN8@Copy

; 3529 : 			;
; 3530 : 		else if (_Oldres <= _Max - _Oldres / 2)

	mov	eax, 2147483646				; 7ffffffeH

; 3531 : 			{
; 3532 : 			_Newres = _Oldres + _Oldres / 2;	// grow exponentially if possible

	lea	edi, DWORD PTR [ecx+ebx]
	sub	eax, ecx
	cmp	ebx, eax
	jbe	SHORT $LN8@Copy

; 3533 : 			}
; 3534 : 		else
; 3535 : 			{
; 3536 : 			_Newres = _Max;	// settle for max_size()

	mov	edi, 2147483646				; 7ffffffeH
$LN8@Copy:

; 3537 : 			}
; 3538 : 
; 3539 : 		auto& _Al = this->_Getal();
; 3540 : 		pointer _Ptr;
; 3541 : 		_TRY_BEGIN
; 3542 : 			_Ptr = _Al.allocate(_Newres + 1);

	lea	eax, DWORD PTR [edi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	mov	ecx, esi
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
	jmp	SHORT $LN100@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z$0:

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	mov	ecx, DWORD PTR _this$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3544 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	DWORD PTR __Newres$[ebp], eax

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 1077 : 		return (_Mybase::allocate(_Count));

	push	eax
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3545 : 			_Ptr = _Al.allocate(_Newres + 1);	// if throws, *this unmodified

	mov	DWORD PTR __Ptr$[ebp], eax

; 3546 : 		_CATCH_END

	mov	eax, $LN97@Copy
	ret	0
$LN97@Copy:
	mov	esi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR __Oldres$[ebp]
	mov	edi, DWORD PTR __Newres$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN100@Copy:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR [esi+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3546 : 		_CATCH_END

	mov	DWORD PTR __Ptr$1$[ebp], ecx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [eax*2+2]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3550 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN10@Copy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	DWORD PTR [esi]
	push	ecx
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3553 : 			_Al.deallocate(_My_data._Bx._Ptr, _Oldres + 1);

	lea	eax, DWORD PTR [ebx+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 24					; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3556 : 		else

	jmp	SHORT $LN101@Copy
$LN10@Copy:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	esi
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN101@Copy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3563 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 840  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR [esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3562 : 		_My_data._Myres = _Newres;

	mov	DWORD PTR [esi+20], edi

; 3563 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN99@Copy:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal, COMDAT
; _this$ = ecx

; 3420 : 		{	// compare [0, _Mysize()) with _Ptr for equality

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	push	edi
	mov	edi, edx
	lea	esi, DWORD PTR [edi+2]
	npad	1
$LL51@Equal:
	mov	ax, WORD PTR [edi]
	add	edi, 2
	test	ax, ax
	jne	SHORT $LL51@Equal
	sub	edi, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1844 : 		return (_Get_data()._Mysize);

	lea	esi, DWORD PTR [ecx+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	edi, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN25@Equal
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ecx, DWORD PTR [ecx]
$LN25@Equal:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3421 : 		return (_Traits_equal<_Traits>(this->_Myptr(), this->_Mysize(), _Ptr, _Traits::length(_Ptr)));

	mov	esi, DWORD PTR [esi]

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	cmp	esi, edi
	jne	SHORT $LN33@Equal
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN50@Equal
$LL42@Equal:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [ecx]
	cmp	ax, WORD PTR [edx]
	jne	SHORT $LN46@Equal

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	ecx, 2
	add	edx, 2
	sub	esi, 1
	jne	SHORT $LL42@Equal
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	mov	al, 1
	pop	esi

; 3422 : 		}

	pop	ebp
	ret	4
$LN46@Equal:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	movzx	eax, WORD PTR [ecx]
	cmp	ax, WORD PTR [edx]
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	jne	SHORT $LN33@Equal
$LN50@Equal:
	pop	edi
	mov	al, 1
	pop	esi

; 3422 : 		}

	pop	ebp
	ret	4
$LN33@Equal:
	pop	edi

; 25   : 	return (_Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0);

	xor	al, al
	pop	esi

; 3422 : 		}

	pop	ebp
	ret	4
?_Equal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE_NQB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Equal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Size$ = 12						; size = 4
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size, COMDAT
; _this$ = ecx

; 3410 : 		{	// trims _Size to the longest it can be assuming a string at/after _Off

	npad	2
	push	ebp
	mov	ebp, esp

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	mov	ecx, DWORD PTR [ecx+16]
	sub	ecx, DWORD PTR __Off$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	eax, DWORD PTR __Size$[ebp]
	cmp	ecx, eax
	cmovb	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3412 : 		}

	pop	ebp
	ret	8
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 3030 : 		const size_type _Num = this->_Getal().max_size();
; 3031 : 		return (_Num <= 1 ? 1 : _Num - 1);

	mov	eax, 2147483646				; 7ffffffeH

; 3032 : 		}

	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN13@c_str

; 3003 : 		return (this->_Myptr());

	mov	eax, DWORD PTR [ecx]

; 3004 : 		}

	ret	0
$LN13@c_str:

; 3003 : 		return (this->_Myptr());

	mov	eax, ecx

; 3004 : 		}

	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edx, DWORD PTR __Off$[ebp]
	push	ebx
	push	esi

; 2592 : 		{	// erase elements [_Off, _Off + _Count)

	mov	esi, ecx
	push	edi

; 3630 : 		if (this->_Mysize() < _Off)

	mov	edi, DWORD PTR [esi+16]
	cmp	edi, edx
	jb	$LN97@erase

; 2593 : 		_Check_offset(_Off);
; 2594 : 		if (this->_Mysize() - _Off <= _Count)

	mov	ebx, DWORD PTR __Count$[ebp]
	mov	eax, edi
	sub	eax, edx
	cmp	eax, ebx
	ja	SHORT $LN2@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN38@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN38@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax+edx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2607 : 		}

	pop	ebp
	ret	8
$LN2@erase:

; 2595 : 			{
; 2596 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 2597 : 			}
; 2598 : 		else if (_Count != 0)

	test	ebx, ebx
	je	SHORT $LN94@erase

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN57@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN58@erase
$LN57@erase:
	mov	eax, esi
$LN58@erase:

; 2599 : 			{	// move elements down
; 2600 : 			value_type *_Ptr = this->_Myptr() + _Off;

	lea	ecx, DWORD PTR [eax+edx*2]

; 2601 : 			size_type _Newsize = this->_Mysize() - _Count;

	sub	edi, ebx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, edi
	sub	eax, edx
	add	eax, eax
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2602 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	lea	eax, DWORD PTR [ecx+ebx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN87@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN87@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
$LN94@erase:
	pop	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2606 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2607 : 		}

	pop	ebp
	ret	8
$LN97@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN99@erase:
$LN96@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx

; 2585 : 		{	// erase elements [_Off, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 3630 : 		if (this->_Mysize() < _Off)

	mov	eax, DWORD PTR __Off$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jb	SHORT $LN36@erase

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [ecx+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN26@erase
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [ecx]
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN26@erase:

; 1614 : 		return (_Large_string_engaged()

	mov	edx, ecx
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	esi, esi
	mov	WORD PTR [edx+eax*2], si
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2588 : 		return (*this);

	mov	eax, ecx
	pop	esi

; 2589 : 		}

	pop	ebp
	ret	4
$LN36@erase:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN38@erase:
$LN35@erase:
	int	3
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2428 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2428 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL6@assign:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL6@assign
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2430 : 		}

	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2412 : 		{	// assign [_Ptr, _Ptr + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN17@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1621 : 		return (_Large_string_engaged()

	jmp	SHORT $LN18@assign
$LN17@assign:
	mov	edx, esi
$LN18@assign:

; 3591 : 		return (_My_chars <= _Ptr && _Ptr < _My_chars + _My_data._Mysize);

	mov	edi, DWORD PTR __Ptr$[ebp]
	cmp	edx, edi
	ja	SHORT $LN2@assign
	mov	eax, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	edi, eax
	jae	SHORT $LN2@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN33@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN34@assign
$LN33@assign:
	mov	eax, esi
$LN34@assign:

; 2413 : 		if (_Inside(_Ptr))
; 2414 : 			{
; 2415 : 			return (assign(*this, _Ptr - this->_Myptr(), _Count));	// substring

	push	DWORD PTR __Count$[ebp]
	sub	edi, eax
	mov	ecx, esi
	sar	edi, 1
	push	edi
	push	esi
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN2@assign:
	push	ebx

; 3573 : 		if (_Newsize == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	jne	SHORT $LN40@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	ecx, 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN53@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN53@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	ebx
	pop	edi
	pop	esi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
$LN40@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	ecx, ebx
	jae	SHORT $LN41@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	ebx
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN41@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN81@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN82@assign
$LN81@assign:
	mov	eax, esi
$LN82@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	ecx, DWORD PTR [ebx+ebx]
	push	ecx
	push	edi
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], ebx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN102@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2424 : 		return (*this);

	mov	eax, esi
	pop	ebx
	pop	edi
	pop	esi

; 2425 : 		}

	pop	ebp
	ret	8
$LN102@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+ebx*2], cx
	pop	ebx
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2425 : 		}

	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	npad	2
	push	ebp
	mov	ebp, esp
	push	ebx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi

; 2378 : 		{	// assign _Right [_Roff, _Roff + _Count)

	mov	esi, ecx

; 3630 : 		if (this->_Mysize() < _Off)

	mov	ecx, DWORD PTR __Roff$[ebp]
	push	edi
	mov	eax, DWORD PTR [ebx+16]
	cmp	eax, ecx
	jb	$LN161@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	edi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3411 : 		return (_Min_value(_Size, this->_Mysize() - _Off));

	sub	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\utility

; 23   : 	return (_Right < _Left ? _Right : _Left);

	cmp	eax, edi
	cmovb	edi, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2382 : 		if (this == _STD addressof(_Right))

	cmp	esi, ebx
	jne	SHORT $LN2@assign

; 2383 : 			{	// substring
; 2384 : 			erase(_Roff + _Count);

	lea	eax, DWORD PTR [ecx+edi]

; 3630 : 		if (this->_Mysize() < _Off)

	cmp	DWORD PTR [esi+16], eax
	jb	$LN163@assign

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], eax

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN62@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN63@assign
$LN62@assign:
	mov	edx, esi
$LN63@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	edi, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	push	ecx
	push	edi
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [edx+eax*2], di
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2385 : 			erase(0, _Roff);

	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	pop	edi

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN2@assign:

; 3573 : 		if (_Newsize == 0)

	test	edi, edi
	jne	SHORT $LN72@assign

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN85@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN85@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN72@assign:

; 3579 : 		if (this->_Myres() < _Newsize)

	cmp	DWORD PTR [esi+20], edi
	jae	SHORT $LN73@assign

; 3580 : 			{	// reallocate to grow
; 3581 : 			_Copy(_Newsize);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	mov	ecx, DWORD PTR __Roff$[ebp]
$LN73@assign:

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ebx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN113@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	ebx, DWORD PTR [ebx]
$LN113@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN129@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1614 : 		return (_Large_string_engaged()

	jmp	SHORT $LN130@assign
$LN129@assign:
	mov	edx, esi
$LN130@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	eax, DWORD PTR [edi+edi]
	push	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2389 : 			_Traits::copy(this->_Myptr(), _Right._Myptr() + _Roff, _Count);

	lea	eax, DWORD PTR [ebx+ecx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3568 : 		_Traits::assign(_My_data._Myptr()[_My_data._Mysize = _Newsize], _Elem());

	mov	DWORD PTR [esi+16], edi

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [esi+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN150@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstddef

; 643  : 	return (_Ptr);

	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2393 : 		return (*this);

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN150@assign:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
	pop	edi
	pop	esi
	pop	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2394 : 		}

	pop	ebp
	ret	12					; 0000000cH
$LN161@assign:

; 3632 : 			_Xran();

	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN164@assign:
$LN163@assign:
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN165@assign:
$LN160@assign:
	int	3
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx

; 2250 : 		{	// assign [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2250 : 		{	// assign [_Ptr, <null>)

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	lea	edi, DWORD PTR [eax+2]
$LL8@operator:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL8@operator
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi

; 2251 : 		return (assign(_Ptr));
; 2252 : 		}

	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 2215 : 		{	// destroy the string

	npad	2
	push	esi
	mov	esi, ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 8

; 3608 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3613 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	eax
	push	DWORD PTR [esi]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3616 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 3617 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2217 : 		}

	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1980 : 		{	// construct from [_Ptr, <null>)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	mov	edx, DWORD PTR __Ptr$[ebp]

; 326  : 		_Left = _Right;

	xor	eax, eax
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 1980 : 		{	// construct from [_Ptr, <null>)

	mov	esi, ecx
	push	edi

; 3597 : 		_My_data._Mysize = 0;

	mov	DWORD PTR [esi+16], 0

; 3598 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 326  : 		_Left = _Right;

	mov	WORD PTR [esi], ax

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, edx
	lea	edi, DWORD PTR [eax+2]
$LL25@basic_stri:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL25@basic_stri
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 289  : 		return (_CSTD wcslen(_First));

	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring

; 2429 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi

; 1981 : 		_Tidy_init();
; 1982 : 		assign(_Ptr);
; 1983 : 		}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 343  : 		return (_Myval2);

	mov	eax, ecx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 338  : 		return (_Myval2);

	mov	eax, ecx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 323  : 		return (*this);

	mov	eax, ecx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 318  : 		return (*this);

	mov	eax, ecx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT
; _this$ = ecx

; 1849 : 		return (_Get_data()._Myres);

	lea	eax, DWORD PTR [ecx+20]

; 1850 : 		}

	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1844 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1845 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT
; _this$ = ecx

; 1839 : 		return (_Get_data()._Mysize);

	lea	eax, DWORD PTR [ecx+16]

; 1840 : 		}

	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1834 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1835 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx

; 1829 : 		return (_Mypair._Get_second());

	mov	eax, ecx

; 1830 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1824 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1825 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx

; 1819 : 		return (_Mypair._Get_first());

	mov	eax, ecx

; 1820 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1809 : 		_Get_data()._Orphan_all();
; 1810 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1697 : 		}

	mov	eax, ecx

; 1596 : 		_Myres(0)

	mov	DWORD PTR [ecx+20], 0

; 1697 : 		}

	ret	0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1691 : 		}

	ret	0
$LN11@Myptr:

; 1690 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1691 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEPB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN11@Myptr

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, DWORD PTR [ecx]

; 1686 : 		}

	ret	0
$LN11@Myptr:

; 1685 : 		return (_Get_data()._Myptr());

	mov	eax, ecx

; 1686 : 		}

	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEPA_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1639 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 1634 : 			{	// user-provided, for fancy pointers
; 1635 : 			}

	mov	eax, ecx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1627 : 		{	// returns whether the large string mode (allocated memory) is engaged

	cmp	DWORD PTR [ecx+20], 8
	setae	al

; 1628 : 		return (this->_BUF_SIZE <= _Myres);
; 1629 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1621 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
$LN3@Myptr:

; 1621 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1622 : 			? _Unfancy(_Bx._Ptr)
; 1623 : 			: _Bx._Buf);
; 1624 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx

; 1628 : 		return (this->_BUF_SIZE <= _Myres);

	cmp	DWORD PTR [ecx+20], 8

; 1614 : 		return (_Large_string_engaged()

	jb	SHORT $LN3@Myptr
	mov	eax, DWORD PTR [ecx]

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
$LN3@Myptr:

; 1614 : 		return (_Large_string_engaged()

	mov	eax, ecx

; 1615 : 			? _Unfancy(_Bx._Ptr)
; 1616 : 			: _Bx._Buf);
; 1617 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx

; 1595 : 		_Mysize(0),

	mov	DWORD PTR [ecx+16], 0

; 1598 : 		}

	mov	eax, ecx
	mov	DWORD PTR [ecx+20], 0
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx

; 1108 : 		return (_Mytraits::max_size(*this));

	mov	eax, 2147483647				; 7fffffffH

; 1109 : 		}

	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx

; 1087 : 		{	// deallocate object at _Ptr, ignore size

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 1088 : 		_Mybase::deallocate(_Ptr, _Count);
; 1089 : 		}

	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT
; _this$ = ecx

; 1076 : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 1078 : 		}

	pop	ebp

; 1077 : 		return (_Mybase::allocate(_Count));

	jmp	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx

; 1038 : 		}

	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 970  : 		return (_Al.max_size());

	mov	eax, 2147483647				; 7fffffffH

; 971  : 		}

	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx

; 851  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 2147483647				; 7fffffffH

; 852  : 		}

	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx

; 827  : 		{	// allocate array of _Count elements

	npad	2
	push	ebp
	mov	ebp, esp

; 53   : 	if (_Count == 0)

	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN4@allocate:

; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN5@allocate

; 58   : 		_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN15@allocate:
$LN5@allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	add	eax, eax

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	ecx, DWORD PTR [eax+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	ecx, eax
	ja	SHORT $LN8@allocate

; 69   : 			_Xbad_alloc();	// report no memory

	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN16@allocate:
$LN8@allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN9@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN17@allocate:
$LN9@allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 828  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 829  : 		}

	pop	ebp
	ret	4
$LN6@allocate:

; 87   : 		_Ptr = ::operator new(_User_size);

	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN12@allocate
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@allocate:
$LN14@allocate:
	int	3
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx

; 822  : 		{	// deallocate object at _Ptr

	npad	2
	push	ebp
	mov	ebp, esp

; 823  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	push	2
	push	DWORD PTR __Count$[ebp]
	push	DWORD PTR __Ptr$[ebp]
	call	?_Deallocate@std@@YAXPAXII@Z		; std::_Deallocate
	add	esp, 12					; 0000000cH

; 824  : 		}

	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx

; 803  : 		{	// construct default allocator (do nothing)
; 804  : 		}

	mov	eax, ecx
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT

; 96   : 	{	// deallocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 97   :  #if defined(_M_IX86) || defined(_M_X64)
; 98   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	or	eax, -1
	mov	ecx, DWORD PTR __Count$[ebp]
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	ecx, eax
	jbe	SHORT $LN2@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Deallocate:

; 99   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 100  : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate

; 101  : 		{	// deallocate large block
; 102  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 103  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, DWORD PTR __Ptr$[ebp]
	test	al, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN4@Deallocate:

; 104  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 105  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 106  : 		const uintptr_t _Ptr_container =
; 107  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	ecx, DWORD PTR [eax-4]

; 108  : 
; 109  :  #ifdef _DEBUG
; 110  : 		// If the following asserts, it likely means that we are performing
; 111  : 		// an aligned delete on memory coming from an unaligned allocation.
; 112  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 113  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 114  : 				_BIG_ALLOCATION_SENTINEL);
; 115  :  #endif /* _DEBUG */
; 116  : 
; 117  : 		// Extra paranoia on aligned allocation/deallocation
; 118  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	cmp	ecx, eax
	jb	SHORT $LN5@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN5@Deallocate:

; 119  : 
; 120  :  #ifdef _DEBUG
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  : 
; 124  :  #else /* _DEBUG */
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

	sub	eax, ecx
	cmp	eax, 4
	jae	SHORT $LN6@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN6@Deallocate:

; 126  : 			<= _Ptr_user - _Ptr_container);
; 127  :  #endif /* _DEBUG */
; 128  : 
; 129  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN9@Deallocate:

; 130  : 			<= _NON_USER_SIZE);
; 131  : 
; 132  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	ecx, DWORD PTR __Ptr$[ebp]
$LN3@Deallocate:

; 133  : 		}
; 134  : 
; 135  :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 136  : 	static_cast<void>(_Count);
; 137  : 	static_cast<void>(_Sz);
; 138  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 139  : 
; 140  : 	::operator delete(_Ptr);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 	}

	pop	ebp
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT

; 50   : 	{	// allocate storage for _Count elements of size _Sz

	npad	2
	push	ebp
	mov	ebp, esp

; 51   : 	void *_Ptr = 0;
; 52   : 
; 53   : 	if (_Count == 0)

	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate

; 54   : 		return (_Ptr);

	xor	eax, eax
$LN1@Allocate:

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN2@Allocate:

; 55   : 
; 56   : 	// check overflow of multiply
; 57   : 	if ((size_t)(-1) / _Sz < _Count)

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN3@Allocate

; 58   : 		_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 59   : 	const size_t _User_size = _Count * _Sz;

	imul	ecx, DWORD PTR __Sz$[ebp]

; 60   : 
; 61   :  #if defined(_M_IX86) || defined(_M_X64)
; 62   : 	if (_Try_aligned_allocation
; 63   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	BYTE PTR __Try_aligned_allocation$[ebp], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 64   : 		{	// allocate large block
; 65   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 66   : 			"Big allocations should at least match vector register size");
; 67   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	eax, DWORD PTR [ecx+35]

; 68   : 		if (_Block_size <= _User_size)

	cmp	eax, ecx
	ja	SHORT $LN6@Allocate

; 69   : 			_Xbad_alloc();	// report no memory

	jmp	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 70   : 		const uintptr_t _Ptr_container =
; 71   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4

; 72   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	test	ecx, ecx
	jne	SHORT $LN7@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@Allocate:

; 73   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H

; 74   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 75   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	DWORD PTR [eax-4], ecx

; 89   : 		}
; 90   : 	return (_Ptr);
; 91   : 	}

	pop	ebp
	ret	0
$LN4@Allocate:

; 76   : 
; 77   :  #ifdef _DEBUG
; 78   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 79   :  #endif /* _DEBUG */
; 80   : 		}
; 81   : 	else
; 82   :  #else /* defined(_M_IX86) || defined(_M_X64) */
; 83   : 	static_cast<void>(_Try_aligned_allocation);
; 84   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 85   : 
; 86   : 		{	// allocate normal block
; 87   : 		_Ptr = ::operator new(_User_size);

	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 88   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	test	eax, eax
	jne	SHORT $LN1@Allocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 64   : 		}

	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 325  : 		{	// assign an element

	npad	2
	push	ebp
	mov	ebp, esp

; 326  : 		_Left = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	cx, WORD PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	WORD PTR [eax], cx

; 327  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 314  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	mov	DWORD PTR __Count$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 316  : 		}

	pop	ebp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 294  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	npad	2
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	push	eax
	push	DWORD PTR __First2$[ebp]
	push	DWORD PTR __First1$[ebp]
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 296  : 		}

	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?length@?$char_traits@_W@std@@SAIQB_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIQB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 288  : 		{	// find length of null-terminated sequence

	npad	2
	push	ebp
	mov	ebp, esp

; 289  : 		return (_CSTD wcslen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+2]
	npad	5
$LL3@length:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL3@length
	sub	eax, edx
	sar	eax, 1

; 290  : 		}

	pop	ebp
	ret	0
?length@?$char_traits@_W@std@@SAIQB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd
;	COMDAT ?compare@?$char_traits@_W@std@@SAHQB_W0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@_W@std@@SAHQB_W0I@Z PROC		; std::char_traits<wchar_t>::compare, COMDAT

; 283  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

	npad	2
	push	ebp
	mov	ebp, esp

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	mov	edx, DWORD PTR __First2$[ebp]
	mov	eax, DWORD PTR __First1$[ebp]
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	test	esi, esi
	je	SHORT $LN5@compare
$LL6@compare:

; 217  :             if (*_S1 != *_S2)

	mov	cx, WORD PTR [eax]
	cmp	cx, WORD PTR [edx]
	jne	SHORT $LN14@compare

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	eax, 2
	add	edx, 2
	sub	esi, 1
	jne	SHORT $LL6@compare
$LN5@compare:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 284  : 		return (_CSTD wmemcmp(_First1, _First2, _Count));

	xor	eax, eax
	pop	esi

; 285  : 		}

	pop	ebp
	ret	0
$LN14@compare:
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	sbb	eax, eax
	and	eax, -2					; fffffffeH
	inc	eax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\iosfwd

; 285  : 		}

	pop	ebp
	ret	0
?compare@?$char_traits@_W@std@@SAHQB_W0I@Z ENDP		; std::char_traits<wchar_t>::compare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 91   :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 94   :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\limits
;	COMDAT ?max@?$numeric_limits@I@std@@SAIXZ
_TEXT	SEGMENT
?max@?$numeric_limits@I@std@@SAIXZ PROC			; std::numeric_limits<unsigned int>::max, COMDAT

; 741  : 		return (UINT_MAX);

	or	eax, -1

; 742  : 		}

	ret	0
?max@?$numeric_limits@I@std@@SAIXZ ENDP			; std::numeric_limits<unsigned int>::max
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT

; 244  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 248  :         #pragma warning(pop)
; 249  :     }

	pop	ebp

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	jmp	DWORD PTR __imp__memmove
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 231  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax

; 235  :         #pragma warning(pop)
; 236  :     }

	pop	ebp

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	jmp	_memcpy
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\wchar.h
;	COMDAT _wmemcmp
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcmp PROC						; COMDAT

; 215  :     {

	npad	2
	push	ebp
	mov	ebp, esp
	push	esi

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	mov	esi, DWORD PTR __N$[ebp]
	test	esi, esi
	je	SHORT $LN3@wmemcmp
	mov	ecx, DWORD PTR __S2$[ebp]
	mov	edx, DWORD PTR __S1$[ebp]
$LL4@wmemcmp:

; 217  :             if (*_S1 != *_S2)

	mov	ax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	jne	SHORT $LN8@wmemcmp

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

	add	edx, 2
	add	ecx, 2
	sub	esi, 1
	jne	SHORT $LL4@wmemcmp
$LN3@wmemcmp:

; 219  : 
; 220  :         return 0;

	xor	eax, eax
	pop	esi

; 221  :     }

	pop	ebp
	ret	0
$LN8@wmemcmp:

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

	movzx	eax, WORD PTR [edx]
	cmp	ax, WORD PTR [ecx]
	pop	esi
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	inc	eax

; 221  :     }

	pop	ebp
	ret	0
_wmemcmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_wstring.h
;	COMDAT ?wcsstr@@YAPA_WPA_WPB_W@Z
_TEXT	SEGMENT
__String$ = 8						; size = 4
__SubStr$ = 12						; size = 4
?wcsstr@@YAPA_WPA_WPB_W@Z PROC				; wcsstr, COMDAT

; 552  :     {

	npad	2
	push	ebp
	mov	ebp, esp

; 554  :     }

	pop	ebp

; 553  :         return const_cast<wchar_t*>(wcsstr(static_cast<wchar_t const*>(_String), _SubStr));

	jmp	DWORD PTR __imp__wcsstr
?wcsstr@@YAPA_WPA_WPB_W@Z ENDP				; wcsstr
_TEXT	ENDS
END
